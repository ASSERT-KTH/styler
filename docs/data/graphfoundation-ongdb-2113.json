{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2113",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2113/PagedReadableByteChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2113/PagedReadableByteChannel.java\nindex bcbb77c067c..38a62cbdea0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2113/PagedReadableByteChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2113/PagedReadableByteChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl;\n \n import java.io.IOException;\n@@ -34,60 +35,59 @@ import org.neo4j.io.pagecache.PagedFile;\n  */\n public final class PagedReadableByteChannel implements ReadableByteChannel\n {\n-    private final PageCursor cursor;\n-    private boolean open = true;\n-    private int bytesLeftInCurrentPage;\n+  private final PageCursor cursor;\n+  private boolean open = true;\n+  private int bytesLeftInCurrentPage;\n \n-    public PagedReadableByteChannel( PagedFile pagedFile ) throws IOException\n-    {\n-        cursor = pagedFile.io( 0, PagedFile.PF_SHARED_READ_LOCK | PagedFile.PF_READ_AHEAD );\n-    }\n+  public PagedReadableByteChannel(PagedFile pagedFile) throws IOException\n+  {\n+    cursor = pagedFile.io(0, PagedFile.PF_SHARED_READ_LOCK | PagedFile.PF_READ_AHEAD);\n+  }\n \n-    @Override\n-    public int read( ByteBuffer dst ) throws IOException\n+  @Override\n+  public int read(ByteBuffer dst) throws IOException\n+  {\n+    if (!open)\n     {\n-        if ( !open )\n-        {\n-            throw new ClosedChannelException();\n-        }\n-        if ( bytesLeftInCurrentPage == 0 )\n-        {\n-            if ( cursor.next() )\n-            {\n-                bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n-            }\n-            else\n-            {\n-                return -1;\n-            }\n-        }\n-        int position = dst.position();\n-        int remaining = Math.min( dst.remaining(), bytesLeftInCurrentPage );\n-        int offset = cursor.getOffset();\n-        do\n-        {\n-            dst.position( position );\n-            cursor.setOffset( offset );\n-            for ( int i = 0; i < remaining; i++ )\n-            {\n-                dst.put( cursor.getByte() );\n-            }\n-        }\n-        while ( cursor.shouldRetry() );\n-        bytesLeftInCurrentPage -= remaining;\n-        return remaining;\n+      throw new ClosedChannelException();\n     }\n-\n-    @Override\n-    public boolean isOpen()\n+    if (bytesLeftInCurrentPage == 0)\n     {\n-        return open;\n+      if (cursor.next())\n+      {\n+        bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n+      } else\n+      {\n+        return -1;\n+      }\n     }\n-\n-    @Override\n-    public void close()\n+    int position = dst.position();\n+    int remaining = Math.min(dst.remaining(), bytesLeftInCurrentPage);\n+    int offset = cursor.getOffset();\n+    do\n     {\n-        open = false;\n-        cursor.close();\n+      dst.position(position);\n+      cursor.setOffset(offset);\n+      for (int i = 0; i < remaining; i++)\n+      {\n+        dst.put(cursor.getByte());\n+      }\n     }\n+    while (cursor.shouldRetry());\n+    bytesLeftInCurrentPage -= remaining;\n+    return remaining;\n+  }\n+\n+  @Override\n+  public boolean isOpen()\n+  {\n+    return open;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    open = false;\n+    cursor.close();\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2113/PagedReadableByteChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2113/PagedReadableByteChannel.java\nindex bcbb77c067c..6cdc2a3388f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2113/PagedReadableByteChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2113/PagedReadableByteChannel.java\n@@ -50,7 +50,8 @@ public final class PagedReadableByteChannel implements ReadableByteChannel\n         {\n             throw new ClosedChannelException();\n         }\n-        if ( bytesLeftInCurrentPage == 0 )\n+\n+if ( bytesLeftInCurrentPage == 0 )\n         {\n             if ( cursor.next() )\n             {\n@@ -90,4 +91,4 @@ public final class PagedReadableByteChannel implements ReadableByteChannel\n         open = false;\n         cursor.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4300",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "203",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "224",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "298",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "346",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4300/DefaultNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4300/DefaultNodeCursor.java\nindex 18d6b102ef5..1f9d47bd507 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4300/DefaultNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4300/DefaultNodeCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.util.Iterator;\n@@ -42,325 +43,316 @@ import static java.util.Collections.emptySet;\n \n class DefaultNodeCursor extends NodeRecord implements NodeCursor\n {\n-    private Read read;\n-    private RecordCursor<DynamicRecord> labelCursor;\n-    private PageCursor pageCursor;\n-    private long next;\n-    private long highMark;\n-    private HasChanges hasChanges = HasChanges.MAYBE;\n-    private Set<Long> addedNodes;\n-    private PropertyCursor propertyCursor;\n-\n-    private final DefaultCursors pool;\n-\n-    DefaultNodeCursor( DefaultCursors pool )\n-    {\n-        super( NO_ID );\n-        this.pool = pool;\n-    }\n-\n-    void scan( Read read )\n+  private Read read;\n+  private RecordCursor<DynamicRecord> labelCursor;\n+  private PageCursor pageCursor;\n+  private long next;\n+  private long highMark;\n+  private HasChanges hasChanges = HasChanges.MAYBE;\n+  private Set<Long> addedNodes;\n+  private PropertyCursor propertyCursor;\n+\n+  private final DefaultCursors pool;\n+\n+  DefaultNodeCursor(DefaultCursors pool)\n+  {\n+    super(NO_ID);\n+    this.pool = pool;\n+  }\n+\n+  void scan(Read read)\n+  {\n+    if (getId() != NO_ID)\n     {\n-        if ( getId() != NO_ID )\n-        {\n-            reset();\n-        }\n-        if ( pageCursor == null )\n-        {\n-            pageCursor = read.nodePage( 0 );\n-        }\n-        this.next = 0;\n-        this.highMark = read.nodeHighMark();\n-        this.read = read;\n-        this.hasChanges = HasChanges.MAYBE;\n-        this.addedNodes = emptySet();\n+      reset();\n     }\n-\n-    void single( long reference, Read read )\n+    if (pageCursor == null)\n     {\n-        if ( getId() != NO_ID )\n-        {\n-            reset();\n-        }\n-        if ( pageCursor == null )\n-        {\n-            pageCursor = read.nodePage( reference );\n-        }\n-        this.next = reference >= 0 ? reference : NO_ID;\n-        //This marks the cursor as a \"single cursor\"\n-        this.highMark = NO_ID;\n-        this.read = read;\n-        this.hasChanges = HasChanges.MAYBE;\n-        this.addedNodes = emptySet();\n+      pageCursor = read.nodePage(0);\n     }\n-\n-    @Override\n-    public long nodeReference()\n+    this.next = 0;\n+    this.highMark = read.nodeHighMark();\n+    this.read = read;\n+    this.hasChanges = HasChanges.MAYBE;\n+    this.addedNodes = emptySet();\n+  }\n+\n+  void single(long reference, Read read)\n+  {\n+    if (getId() != NO_ID)\n     {\n-        return getId();\n+      reset();\n     }\n-\n-    @Override\n-    public LabelSet labels()\n+    if (pageCursor == null)\n     {\n-        if ( hasChanges() )\n-        {\n-            TransactionState txState = read.txState();\n-            if ( txState.nodeIsAddedInThisTx( getId() ) )\n-            {\n-                //Node just added, no reason to go down to store and check\n-                return Labels.from( txState.nodeStateLabelDiffSets( getId() ).getAdded() );\n-            }\n-            else\n-            {\n-                //Get labels from store and put in intSet, unfortunately we get longs back\n-                long[] longs = NodeLabelsField.get( this, labelCursor() );\n-                PrimitiveIntSet labels = Primitive.intSet();\n-                for ( long labelToken : longs )\n-                {\n-                    labels.add( (int) labelToken );\n-                }\n-\n-                //Augment what was found in store with what we have in tx state\n-                return Labels.from( txState.augmentLabels( labels, txState.getNodeState( getId() ) ) );\n-            }\n-        }\n-        else\n-        {\n-            //Nothing in tx state, just read the data.\n-            return Labels.from( NodeLabelsField.get( this, labelCursor()) );\n-        }\n+      pageCursor = read.nodePage(reference);\n     }\n-\n-    @Override\n-    public boolean hasProperties()\n+    this.next = reference >= 0 ? reference : NO_ID;\n+    //This marks the cursor as a \"single cursor\"\n+    this.highMark = NO_ID;\n+    this.read = read;\n+    this.hasChanges = HasChanges.MAYBE;\n+    this.addedNodes = emptySet();\n+  }\n+\n+  @Override\n+  public long nodeReference()\n+  {\n+    return getId();\n+  }\n+\n+  @Override\n+  public LabelSet labels()\n+  {\n+    if (hasChanges())\n     {\n-        if ( read.hasTxStateWithChanges() )\n+      TransactionState txState = read.txState();\n+      if (txState.nodeIsAddedInThisTx(getId()))\n+      {\n+        //Node just added, no reason to go down to store and check\n+        return Labels.from(txState.nodeStateLabelDiffSets(getId()).getAdded());\n+      } else\n+      {\n+        //Get labels from store and put in intSet, unfortunately we get longs back\n+        long[] longs = NodeLabelsField.get(this, labelCursor());\n+        PrimitiveIntSet labels = Primitive.intSet();\n+        for (long labelToken : longs)\n         {\n-            PropertyCursor cursor = propertyCursor();\n-            properties( cursor );\n-            return cursor.next();\n+          labels.add((int) labelToken);\n         }\n-        else\n-        {\n-            return nextProp != NO_ID;\n-        }\n-    }\n-\n-    @Override\n-    public void relationships( RelationshipGroupCursor cursor )\n-    {\n-        read.relationshipGroups( getId(), relationshipGroupReference(), cursor );\n-    }\n \n-    @Override\n-    public void allRelationships( RelationshipTraversalCursor cursor )\n+        //Augment what was found in store with what we have in tx state\n+        return Labels.from(txState.augmentLabels(labels, txState.getNodeState(getId())));\n+      }\n+    } else\n     {\n-        read.relationships( getId(), allRelationshipsReference(), cursor );\n+      //Nothing in tx state, just read the data.\n+      return Labels.from(NodeLabelsField.get(this, labelCursor()));\n     }\n+  }\n \n-    @Override\n-    public void properties( PropertyCursor cursor )\n+  @Override\n+  public boolean hasProperties()\n+  {\n+    if (read.hasTxStateWithChanges())\n     {\n-        read.nodeProperties( getId(), propertiesReference(), cursor );\n-    }\n-\n-    @Override\n-    public long relationshipGroupReference()\n+      PropertyCursor cursor = propertyCursor();\n+      properties(cursor);\n+      return cursor.next();\n+    } else\n     {\n-        return isDense() ? getNextRel() : GroupReferenceEncoding.encodeRelationship( getNextRel() );\n+      return nextProp != NO_ID;\n     }\n-\n-    @Override\n-    public long allRelationshipsReference()\n+  }\n+\n+  @Override\n+  public void relationships(RelationshipGroupCursor cursor)\n+  {\n+    read.relationshipGroups(getId(), relationshipGroupReference(), cursor);\n+  }\n+\n+  @Override\n+  public void allRelationships(RelationshipTraversalCursor cursor)\n+  {\n+    read.relationships(getId(), allRelationshipsReference(), cursor);\n+  }\n+\n+  @Override\n+  public void properties(PropertyCursor cursor)\n+  {\n+    read.nodeProperties(getId(), propertiesReference(), cursor);\n+  }\n+\n+  @Override\n+  public long relationshipGroupReference()\n+  {\n+    return isDense() ? getNextRel() : GroupReferenceEncoding.encodeRelationship(getNextRel());\n+  }\n+\n+  @Override\n+  public long allRelationshipsReference()\n+  {\n+    return isDense() ? RelationshipReferenceEncoding.encodeGroup(getNextRel()) : getNextRel();\n+  }\n+\n+  @Override\n+  public long propertiesReference()\n+  {\n+    return getNextProp();\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    if (next == NO_ID)\n     {\n-        return isDense() ? RelationshipReferenceEncoding.encodeGroup( getNextRel() ) : getNextRel();\n+      reset();\n+      return false;\n     }\n \n-    @Override\n-    public long propertiesReference()\n-    {\n-        return getNextProp();\n-    }\n+    // Check tx state\n+    boolean hasChanges = hasChanges();\n+    TransactionState txs = hasChanges ? read.txState() : null;\n \n-    @Override\n-    public boolean next()\n+    do\n     {\n-        if ( next == NO_ID )\n+      if (hasChanges && containsNode(txs))\n+      {\n+        setId(next++);\n+        setInUse(true);\n+      } else if (hasChanges && txs.nodeIsDeletedInThisTx(next))\n+      {\n+        next++;\n+        setInUse(false);\n+      } else\n+      {\n+        read.node(this, next++, pageCursor);\n+      }\n+\n+      if (next > highMark)\n+      {\n+        if (isSingle())\n         {\n-            reset();\n-            return false;\n-        }\n-\n-        // Check tx state\n-        boolean hasChanges = hasChanges();\n-        TransactionState txs = hasChanges ? read.txState() : null;\n-\n-        do\n+          //we are a \"single cursor\"\n+          next = NO_ID;\n+          return inUse();\n+        } else\n         {\n-            if ( hasChanges && containsNode( txs ) )\n-            {\n-                setId( next++ );\n-                setInUse( true );\n-            }\n-            else if ( hasChanges && txs.nodeIsDeletedInThisTx( next ) )\n-            {\n-                next++;\n-                setInUse( false );\n-            }\n-            else\n-            {\n-                read.node( this, next++, pageCursor );\n-            }\n-\n-            if ( next > highMark )\n-            {\n-                if ( isSingle() )\n-                {\n-                    //we are a \"single cursor\"\n-                    next = NO_ID;\n-                    return inUse();\n-                }\n-                else\n-                {\n-                    //we are a \"scan cursor\"\n-                    //Check if there is a new high mark\n-                    highMark = read.nodeHighMark();\n-                    if ( next > highMark )\n-                    {\n-                        next = NO_ID;\n-                        return inUse();\n-                    }\n-                }\n-            }\n-            else if ( next < 0 )\n-            {\n-                //no more longs out there...\n-                next = NO_ID;\n-                return inUse();\n-            }\n+          //we are a \"scan cursor\"\n+          //Check if there is a new high mark\n+          highMark = read.nodeHighMark();\n+          if (next > highMark)\n+          {\n+            next = NO_ID;\n+            return inUse();\n+          }\n         }\n-        while ( !inUse() );\n-        return true;\n+      } else if (next < 0)\n+      {\n+        //no more longs out there...\n+        next = NO_ID;\n+        return inUse();\n+      }\n     }\n-\n-    private boolean containsNode( TransactionState txs )\n+    while (!inUse());\n+    return true;\n+  }\n+\n+  private boolean containsNode(TransactionState txs)\n+  {\n+    return isSingle() ? txs.nodeIsAddedInThisTx(next) : addedNodes.contains(next);\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n     {\n-        return isSingle() ? txs.nodeIsAddedInThisTx( next ) : addedNodes.contains( next );\n+      read = null;\n+      hasChanges = HasChanges.MAYBE;\n+      addedNodes = emptySet();\n+      reset();\n+      if (propertyCursor != null)\n+      {\n+        propertyCursor.close();\n+        propertyCursor = null;\n+      }\n+\n+      pool.accept(this);\n     }\n-\n-    @Override\n-    public void close()\n+  }\n+\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return read == null;\n+  }\n+\n+  /**\n+   * NodeCursor should only see changes that are there from the beginning\n+   * otherwise it will not be stable.\n+   */\n+  private boolean hasChanges()\n+  {\n+    switch (hasChanges)\n     {\n-        if ( !isClosed() )\n+      case MAYBE:\n+        boolean changes = read.hasTxStateWithChanges();\n+        if (changes)\n         {\n-            read = null;\n-            hasChanges = HasChanges.MAYBE;\n-            addedNodes = emptySet();\n-            reset();\n-            if ( propertyCursor != null )\n-            {\n-                propertyCursor.close();\n-                propertyCursor = null;\n-            }\n-\n-            pool.accept( this );\n-        }\n-    }\n-\n-    @Override\n-    public boolean isClosed()\n-    {\n-        return read == null;\n-    }\n-\n-    /**\n-     * NodeCursor should only see changes that are there from the beginning\n-     * otherwise it will not be stable.\n-     */\n-    private boolean hasChanges()\n-    {\n-        switch ( hasChanges )\n+          if (!isSingle())\n+          {\n+            addedNodes = read.txState().addedAndRemovedNodes().getAddedSnapshot();\n+          }\n+          hasChanges = HasChanges.YES;\n+        } else\n         {\n-        case MAYBE:\n-            boolean changes = read.hasTxStateWithChanges();\n-            if ( changes )\n-            {\n-                if ( !isSingle() )\n-                {\n-                    addedNodes = read.txState().addedAndRemovedNodes().getAddedSnapshot();\n-                }\n-                hasChanges = HasChanges.YES;\n-            }\n-            else\n-            {\n-                hasChanges = HasChanges.NO;\n-            }\n-            return changes;\n-        case YES:\n-            return true;\n-        case NO:\n-            return false;\n-        default:\n-            throw new IllegalStateException( \"Style guide, why are you making me do this\" );\n+          hasChanges = HasChanges.NO;\n         }\n+        return changes;\n+      case YES:\n+        return true;\n+      case NO:\n+        return false;\n+      default:\n+        throw new IllegalStateException(\"Style guide, why are you making me do this\");\n     }\n-\n-    private void reset()\n+  }\n+\n+  private void reset()\n+  {\n+    next = NO_ID;\n+    setId(NO_ID);\n+    clear();\n+  }\n+\n+  private RecordCursor<DynamicRecord> labelCursor()\n+  {\n+    if (labelCursor == null)\n     {\n-        next = NO_ID;\n-        setId( NO_ID );\n-        clear();\n+      labelCursor = read.labelCursor();\n     }\n+    return labelCursor;\n+  }\n \n-    private RecordCursor<DynamicRecord> labelCursor()\n+  private PropertyCursor propertyCursor()\n+  {\n+    if (propertyCursor == null)\n     {\n-        if ( labelCursor == null )\n-        {\n-            labelCursor = read.labelCursor();\n-        }\n-        return labelCursor;\n+      propertyCursor = pool.allocatePropertyCursor();\n     }\n-\n-    private PropertyCursor propertyCursor()\n+    return propertyCursor;\n+  }\n+\n+  private boolean isSingle()\n+  {\n+    return highMark == NO_ID;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (isClosed())\n     {\n-        if ( propertyCursor == null )\n-        {\n-            propertyCursor = pool.allocatePropertyCursor();\n-        }\n-        return propertyCursor;\n-    }\n-\n-    private boolean isSingle()\n+      return \"NodeCursor[closed state]\";\n+    } else\n     {\n-        return highMark == NO_ID;\n+      return \"NodeCursor[id=\" + getId() + \", open state with: highMark=\" + highMark + \", next=\" + next + \", underlying record=\" + super.toString() + \" ]\";\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  void release()\n+  {\n+    if (labelCursor != null)\n     {\n-        if ( isClosed() )\n-        {\n-            return \"NodeCursor[closed state]\";\n-        }\n-        else\n-        {\n-            return \"NodeCursor[id=\" + getId() + \", open state with: highMark=\" + highMark + \", next=\" + next + \", underlying record=\" + super.toString() + \" ]\";\n-        }\n+      labelCursor.close();\n+      labelCursor = null;\n     }\n \n-    void release()\n+    if (pageCursor != null)\n     {\n-        if ( labelCursor != null )\n-        {\n-            labelCursor.close();\n-            labelCursor = null;\n-        }\n-\n-        if ( pageCursor != null )\n-        {\n-            pageCursor.close();\n-            pageCursor = null;\n-        }\n+      pageCursor.close();\n+      pageCursor = null;\n     }\n+  }\n }\n",
            "diff_size": 442
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "123",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "22",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "231",
                    "column": "30",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4300/DefaultNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4300/DefaultNodeCursor.java\nindex 18d6b102ef5..f46c74fbb34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4300/DefaultNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4300/DefaultNodeCursor.java\n@@ -65,7 +65,8 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n         {\n             reset();\n         }\n-        if ( pageCursor == null )\n+\n+if ( pageCursor == null )\n         {\n             pageCursor = read.nodePage( 0 );\n         }\n@@ -82,7 +83,8 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n         {\n             reset();\n         }\n-        if ( pageCursor == null )\n+\n+if ( pageCursor == null )\n         {\n             pageCursor = read.nodePage( reference );\n         }\n@@ -118,7 +120,7 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n                 PrimitiveIntSet labels = Primitive.intSet();\n                 for ( long labelToken : longs )\n                 {\n-                    labels.add( (int) labelToken );\n+                    labels.add( ( int) labelToken );\n                 }\n \n                 //Augment what was found in store with what we have in tx state\n@@ -213,7 +215,7 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n                 read.node( this, next++, pageCursor );\n             }\n \n-            if ( next > highMark )\n+            if ( next> highMark )\n             {\n                 if ( isSingle() )\n                 {\n@@ -226,7 +228,7 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n                     //we are a \"scan cursor\"\n                     //Check if there is a new high mark\n                     highMark = read.nodeHighMark();\n-                    if ( next > highMark )\n+                    if ( next> highMark )\n                     {\n                         next = NO_ID;\n                         return inUse();\n@@ -290,13 +292,15 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n                 {\n                     addedNodes = read.txState().addedAndRemovedNodes().getAddedSnapshot();\n                 }\n-                hasChanges = HasChanges.YES;\n+\n+hasChanges = HasChanges.YES;\n             }\n             else\n             {\n                 hasChanges = HasChanges.NO;\n             }\n-            return changes;\n+\n+return changes;\n         case YES:\n             return true;\n         case NO:\n@@ -309,7 +313,8 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n     private void reset()\n     {\n         next = NO_ID;\n-        setId( NO_ID );\n+\n+setId( NO_ID );\n         clear();\n     }\n \n@@ -319,7 +324,8 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n         {\n             labelCursor = read.labelCursor();\n         }\n-        return labelCursor;\n+\n+return labelCursor;\n     }\n \n     private PropertyCursor propertyCursor()\n@@ -328,7 +334,8 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n         {\n             propertyCursor = pool.allocatePropertyCursor();\n         }\n-        return propertyCursor;\n+\n+return propertyCursor;\n     }\n \n     private boolean isSingle()\n@@ -363,4 +370,4 @@ class DefaultNodeCursor extends NodeRecord implements NodeCursor\n             pageCursor = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
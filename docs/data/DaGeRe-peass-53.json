{
    "project_name": "DaGeRe-peass",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "13",
                "column": "4",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "\npublic enum ContinuousFolderUtil {\n   ;\n   \n   private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n   ",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "13",
                    "column": "17",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..b36c2e20519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/53/ContinuousFolderUtil.java\n@@ -10,8 +10,8 @@ import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n public enum ContinuousFolderUtil {\n-   ;\n-   \n+\t\t;\n+\n    private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n    \n    public static File getLocalFolder(final File projectFolder) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "column": "3",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..d6908260c57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/53/ContinuousFolderUtil.java\n@@ -10,36 +10,36 @@ import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n public enum ContinuousFolderUtil {\n-   ;\n-   \n-   private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n-   \n-   public static File getLocalFolder(final File projectFolder) {\n-      return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n-   }\n-   \n-   public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n-      File vcsFolder = VersionControlSystem.findVCSFolder(projectFolder);\n-      if (vcsFolder != null) {\n-         String localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n-         return new File(localFolder, vcsFolder.getName() + File.separator + localSuffix);\n-      } else {\n-         return null;\n-      }\n-   }\n-\n-   public static void cloneProject(final File cloneProjectFolder, final File localFolder) throws InterruptedException, IOException {\n-      localFolder.mkdirs();\n-      File originalVcsFolder = VersionControlSystem.findVCSFolder(cloneProjectFolder);\n-      if (originalVcsFolder != null && originalVcsFolder.exists()) {\n-         LOG.info(\"Cloning using git clone\");\n-         final ProcessBuilder builder = new ProcessBuilder(\"git\", \"clone\", originalVcsFolder.getAbsolutePath());\n-         builder.directory(localFolder);\n-         StreamGobbler.showFullProcess(builder.start());\n-      } else {\n-         throw new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \"\n-               + \"currently, only git projects are supported\");\n-      }\n-   }\n+  ;\n+\n+  private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n+\n+  public static File getLocalFolder(final File projectFolder) {\n+    return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n+  }\n+\n+  public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n+    File vcsFolder = VersionControlSystem.findVCSFolder(projectFolder);\n+    if (vcsFolder != null) {\n+      String localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n+      return new File(localFolder, vcsFolder.getName() + File.separator + localSuffix);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static void cloneProject(final File cloneProjectFolder, final File localFolder) throws InterruptedException, IOException {\n+    localFolder.mkdirs();\n+    File originalVcsFolder = VersionControlSystem.findVCSFolder(cloneProjectFolder);\n+    if (originalVcsFolder != null && originalVcsFolder.exists()) {\n+      LOG.info(\"Cloning using git clone\");\n+      final ProcessBuilder builder = new ProcessBuilder(\"git\", \"clone\", originalVcsFolder.getAbsolutePath());\n+      builder.directory(localFolder);\n+      StreamGobbler.showFullProcess(builder.start());\n+    } else {\n+      throw new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \"\n+          + \"currently, only git projects are supported\");\n+    }\n+  }\n \n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "13",
                    "column": "9",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..047f9f337e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/53/ContinuousFolderUtil.java\n@@ -10,36 +10,35 @@ import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n public enum ContinuousFolderUtil {\n-   ;\n-   \n-   private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n+\t;\n+\n+private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n    \n    public static File getLocalFolder(final File projectFolder) {\n-      return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n-   }\n-   \n-   public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n+\treturn new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n+\t}\n+\n+public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n       File vcsFolder = VersionControlSystem.findVCSFolder(projectFolder);\n       if (vcsFolder != null) {\n-         String localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n+\tString localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n          return new File(localFolder, vcsFolder.getName() + File.separator + localSuffix);\n-      } else {\n-         return null;\n-      }\n-   }\n+\t} else {\n+\treturn null;\n+\t}\n+\t}\n \n    public static void cloneProject(final File cloneProjectFolder, final File localFolder) throws InterruptedException, IOException {\n-      localFolder.mkdirs();\n+\tlocalFolder.mkdirs();\n       File originalVcsFolder = VersionControlSystem.findVCSFolder(cloneProjectFolder);\n       if (originalVcsFolder != null && originalVcsFolder.exists()) {\n-         LOG.info(\"Cloning using git clone\");\n+\tLOG.info(\"Cloning using git clone\");\n          final ProcessBuilder builder = new ProcessBuilder(\"git\", \"clone\", originalVcsFolder.getAbsolutePath());\n          builder.directory(localFolder);\n          StreamGobbler.showFullProcess(builder.start());\n-      } else {\n-         throw new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \"\n-               + \"currently, only git projects are supported\");\n-      }\n-   }\n-\n-}\n+\t} else {\n+\tthrow new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \"\n++ \"currently, only git projects are supported\");\n+\t}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "column": "2",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..2a7e45221a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/53/ContinuousFolderUtil.java\n@@ -2,44 +2,43 @@ package de.peass.ci;\n \n import java.io.File;\n import java.io.IOException;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n-\n import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n+\n public enum ContinuousFolderUtil {\n-   ;\n-   \n-   private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n-   \n-   public static File getLocalFolder(final File projectFolder) {\n-      return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n-   }\n-   \n-   public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n-      File vcsFolder = VersionControlSystem.findVCSFolder(projectFolder);\n-      if (vcsFolder != null) {\n-         String localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n-         return new File(localFolder, vcsFolder.getName() + File.separator + localSuffix);\n-      } else {\n-         return null;\n-      }\n-   }\n-\n-   public static void cloneProject(final File cloneProjectFolder, final File localFolder) throws InterruptedException, IOException {\n-      localFolder.mkdirs();\n-      File originalVcsFolder = VersionControlSystem.findVCSFolder(cloneProjectFolder);\n-      if (originalVcsFolder != null && originalVcsFolder.exists()) {\n-         LOG.info(\"Cloning using git clone\");\n-         final ProcessBuilder builder = new ProcessBuilder(\"git\", \"clone\", originalVcsFolder.getAbsolutePath());\n-         builder.directory(localFolder);\n-         StreamGobbler.showFullProcess(builder.start());\n-      } else {\n-         throw new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \"\n-               + \"currently, only git projects are supported\");\n-      }\n-   }\n-\n-}\n+ ;\n+\n+ private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n+\n+ public static File getLocalFolder(final File projectFolder) {\n+  return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n+ }\n+\n+ public static File getProjectLocalFolder(final File localFolder, final File projectFolder) throws IOException {\n+  File vcsFolder = VersionControlSystem.findVCSFolder(projectFolder);\n+  if (vcsFolder != null) {\n+   String localSuffix = projectFolder.getCanonicalPath().substring(vcsFolder.getCanonicalPath().length() + 1);\n+   return new File(localFolder, vcsFolder.getName() + File.separator + localSuffix);\n+  } else {\n+   return null;\n+  }\n+ }\n+\n+ public static void cloneProject(final File cloneProjectFolder, final File localFolder) throws InterruptedException, IOException {\n+  localFolder.mkdirs();\n+\n+  File originalVcsFolder = VersionControlSystem.findVCSFolder(cloneProjectFolder);\n+  if (originalVcsFolder != null && originalVcsFolder.exists()) {\n+   LOG.info(\"Cloning using git clone\");\n+\n+   final ProcessBuilder builder = new ProcessBuilder(\"git\", \"clone\", originalVcsFolder.getAbsolutePath());\n+   builder.directory(localFolder);\n+   StreamGobbler.showFullProcess(builder.start());\n+  } else {\n+   throw new RuntimeException(\"No git folder in \" + cloneProjectFolder.getAbsolutePath() + \" (or parent) present - \" + \"currently, only git projects are supported\");\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "column": "17",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..b36c2e20519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/53/ContinuousFolderUtil.java\n@@ -10,8 +10,8 @@ import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n public enum ContinuousFolderUtil {\n-   ;\n-   \n+\t\t;\n+\n    private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n    \n    public static File getLocalFolder(final File projectFolder) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "12",
                    "column": "34",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/53/ContinuousFolderUtil.java\nindex 9c3a39a14cf..87ac2eddc34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/53/ContinuousFolderUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/53/ContinuousFolderUtil.java\n@@ -9,10 +9,9 @@ import org.apache.logging.log4j.Logger;\n import de.peass.utils.StreamGobbler;\n import de.peass.vcs.VersionControlSystem;\n \n-public enum ContinuousFolderUtil {\n-   ;\n-   \n-   private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n+public enum ContinuousFolderUtil {;\n+\n+private static final Logger LOG = LogManager.getLogger(ContinuousExecutor.class);\n    \n    public static File getLocalFolder(final File projectFolder) {\n       return new File(projectFolder, \"..\" + File.separator + projectFolder.getName() + \"_fullPeass\");\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
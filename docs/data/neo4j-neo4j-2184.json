{
    "project_name": "neo4j-neo4j",
    "error_id": "2184",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "156",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2184/TransactionIdTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2184/TransactionIdTracker.java\nindex 838426eef71..b7f7db275a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2184/TransactionIdTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2184/TransactionIdTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.txtracking;\n \n import java.time.Duration;\n@@ -47,10 +48,10 @@ public class TransactionIdTracker\n     private final TransactionIdTrackerMonitor monitor;\n     private final SystemNanoClock clock;\n \n-    public TransactionIdTracker( DatabaseManagementService managementService, Monitors monitors, SystemNanoClock clock )\n+    public TransactionIdTracker(DatabaseManagementService managementService, Monitors monitors, SystemNanoClock clock)\n     {\n         this.managementService = managementService;\n-        this.monitor = monitors.newMonitor( TransactionIdTrackerMonitor.class );\n+        this.monitor = monitors.newMonitor(TransactionIdTrackerMonitor.class);\n         this.clock = clock;\n     }\n \n@@ -62,19 +63,18 @@ public class TransactionIdTracker\n      * @param namedDatabaseId id of the database to find the NET for.\n      * @return id of the Newest Encountered Transaction (NET).\n      */\n-    public long newestTransactionId( NamedDatabaseId namedDatabaseId )\n+    public long newestTransactionId(NamedDatabaseId namedDatabaseId)\n     {\n-        var db = database( namedDatabaseId );\n+        var db = database(namedDatabaseId);\n         try\n         {\n             // return the \"last committed\" because it is the newest id\n             // \"last closed\" will return the last gap-free id, potentially for some old transaction because there might be other committing transactions\n             // \"last reconciled\" might also return an id lower than the ID of the just committed transaction\n-            return transactionIdStore( db ).getLastCommittedTransactionId();\n-        }\n-        catch ( RuntimeException e )\n+            return transactionIdStore(db).getLastCommittedTransactionId();\n+        } catch (RuntimeException e)\n         {\n-            throw databaseUnavailable( db, e );\n+            throw databaseUnavailable(db, e);\n         }\n     }\n \n@@ -95,16 +95,16 @@ public class TransactionIdTracker\n      *     or timeout.</li>\n      * </ol>\n      *\n-     * @param namedDatabaseId id of the database to find the transaction id.\n+     * @param namedDatabaseId      id of the database to find the transaction id.\n      * @param oldestAcceptableTxId id of the Oldest Acceptable Transaction (OAT) that must have been applied before\n-     * continuing work.\n-     * @param timeout maximum duration to wait for OAT to be applied\n+     *                             continuing work.\n+     * @param timeout              maximum duration to wait for OAT to be applied\n      */\n-    public void awaitUpToDate( NamedDatabaseId namedDatabaseId, long oldestAcceptableTxId, Duration timeout )\n+    public void awaitUpToDate(NamedDatabaseId namedDatabaseId, long oldestAcceptableTxId, Duration timeout)\n     {\n-        var db = database( namedDatabaseId );\n+        var db = database(namedDatabaseId);\n \n-        if ( oldestAcceptableTxId <= BASE_TX_ID )\n+        if (oldestAcceptableTxId <= BASE_TX_ID)\n         {\n             return;\n         }\n@@ -115,98 +115,96 @@ public class TransactionIdTracker\n             Stopwatch startTime = clock.startStopWatch();\n             do\n             {\n-                if ( isNotAvailable( db ) )\n+                if (isNotAvailable(db))\n                 {\n-                    throw databaseUnavailable( db );\n+                    throw databaseUnavailable(db);\n                 }\n-                lastTransactionId = currentTransactionId( db );\n-                if ( oldestAcceptableTxId <= lastTransactionId )\n+                lastTransactionId = currentTransactionId(db);\n+                if (oldestAcceptableTxId <= lastTransactionId)\n                 {\n                     return;\n                 }\n                 waitWhenNotUpToDate();\n-            } while ( !startTime.hasTimedOut( timeout ) );\n+            } while (!startTime.hasTimedOut(timeout));\n \n-            throw unreachableDatabaseVersion( db, lastTransactionId, oldestAcceptableTxId );\n-        }\n-        catch ( RuntimeException e )\n+            throw unreachableDatabaseVersion(db, lastTransactionId, oldestAcceptableTxId);\n+        } catch (RuntimeException e)\n         {\n-            if ( isNotAvailable( db ) )\n+            if (isNotAvailable(db))\n             {\n-                throw databaseUnavailable( db, e );\n+                throw databaseUnavailable(db, e);\n             }\n-            throw unreachableDatabaseVersion( db, lastTransactionId, oldestAcceptableTxId, e );\n+            throw unreachableDatabaseVersion(db, lastTransactionId, oldestAcceptableTxId, e);\n         }\n     }\n \n     private void waitWhenNotUpToDate()\n     {\n         monitor.onWaitWhenNotUpToDate();\n-        LockSupport.parkNanos( 100 );\n+        LockSupport.parkNanos(100);\n     }\n \n-    private long currentTransactionId( Database db )\n+    private long currentTransactionId(Database db)\n     {\n         // await for the last closed transaction id to to have at least the expected value\n         // it has to be \"last closed\" and not \"last committed\" because all transactions before the expected one should also be committed\n-        return transactionIdStore( db ).getLastClosedTransactionId();\n+        return transactionIdStore(db).getLastClosedTransactionId();\n     }\n \n-    private static TransactionIdStore transactionIdStore( Database db )\n+    private static TransactionIdStore transactionIdStore(Database db)\n     {\n         // We need to resolve this as late as possible in case the database has been restarted as part of store copy.\n         // This causes TransactionIdStore staleness and we could get a MetaDataStore closed exception.\n         // Ideally we'd fix this with some life cycle wizardry but not going to do that for now.\n-        return db.getDependencyResolver().resolveDependency( TransactionIdStore.class );\n+        return db.getDependencyResolver().resolveDependency(TransactionIdStore.class);\n     }\n \n-    private Database database( NamedDatabaseId namedDatabaseId )\n+    private Database database(NamedDatabaseId namedDatabaseId)\n     {\n         try\n         {\n-            var dbApi = (GraphDatabaseAPI) managementService.database( namedDatabaseId.name() );\n-            var db = dbApi.getDependencyResolver().resolveDependency( Database.class );\n-            if ( isNotAvailable( db ) )\n+            var dbApi = (GraphDatabaseAPI) managementService.database(namedDatabaseId.name());\n+            var db = dbApi.getDependencyResolver().resolveDependency(Database.class);\n+            if (isNotAvailable(db))\n             {\n-                throw databaseUnavailable( db );\n+                throw databaseUnavailable(db);\n             }\n             return db;\n-        }\n-        catch ( DatabaseNotFoundException e )\n+        } catch (DatabaseNotFoundException e)\n         {\n-            throw databaseNotFound( namedDatabaseId );\n+            throw databaseNotFound(namedDatabaseId);\n         }\n     }\n \n-    private static boolean isNotAvailable( Database db )\n+    private static boolean isNotAvailable(Database db)\n     {\n         return !db.getDatabaseAvailabilityGuard().isAvailable();\n     }\n \n-    private static TransactionIdTrackerException databaseNotFound( NamedDatabaseId namedDatabaseId )\n+    private static TransactionIdTrackerException databaseNotFound(NamedDatabaseId namedDatabaseId)\n     {\n-        return new TransactionIdTrackerException( DatabaseNotFound, \"Database '\" + namedDatabaseId.name() + \"' does not exist\" );\n+        return new TransactionIdTrackerException(DatabaseNotFound, \"Database '\" + namedDatabaseId.name() + \"' does not exist\");\n     }\n \n-    private static TransactionIdTrackerException databaseUnavailable( Database db )\n+    private static TransactionIdTrackerException databaseUnavailable(Database db)\n     {\n-        return databaseUnavailable( db, null );\n+        return databaseUnavailable(db, null);\n     }\n \n-    private static TransactionIdTrackerException databaseUnavailable( Database db, Throwable cause )\n+    private static TransactionIdTrackerException databaseUnavailable(Database db, Throwable cause)\n     {\n-        return new TransactionIdTrackerException( DatabaseUnavailable, \"Database '\" + db.getNamedDatabaseId().name() + \"' unavailable\", cause );\n+        return new TransactionIdTrackerException(DatabaseUnavailable, \"Database '\" + db.getNamedDatabaseId().name() + \"' unavailable\", cause);\n     }\n \n-    private static TransactionIdTrackerException unreachableDatabaseVersion( Database db, long lastTransactionId, long oldestAcceptableTxId )\n+    private static TransactionIdTrackerException unreachableDatabaseVersion(Database db, long lastTransactionId, long oldestAcceptableTxId)\n     {\n-        return unreachableDatabaseVersion( db, lastTransactionId, oldestAcceptableTxId, null );\n+        return unreachableDatabaseVersion(db, lastTransactionId, oldestAcceptableTxId, null);\n     }\n \n-    private static TransactionIdTrackerException unreachableDatabaseVersion( Database db, long lastTransactionId, long oldestAcceptableTxId, Throwable cause )\n+    private static TransactionIdTrackerException unreachableDatabaseVersion(Database db, long lastTransactionId, long oldestAcceptableTxId, Throwable cause)\n     {\n-        return new TransactionIdTrackerException( BookmarkTimeout,\n-                \"Database '\" + db.getNamedDatabaseId().name() + \"' not up to the requested version: \" + oldestAcceptableTxId + \". \" +\n-                \"Latest database version is \" + lastTransactionId, cause );\n+        return new TransactionIdTrackerException(BookmarkTimeout,\n+          \"Database '\" + db.getNamedDatabaseId().name() + \"' not up to the requested version: \" + oldestAcceptableTxId + \". \" +\n+            \"Latest database version is \" + lastTransactionId, cause);\n     }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
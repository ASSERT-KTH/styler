{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3783",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3783/TxSinglePropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3783/TxSinglePropertyCursor.java\nindex 77d248f9efc..9544d8a0f0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3783/TxSinglePropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3783/TxSinglePropertyCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.cursor;\n \n import java.util.function.Consumer;\n@@ -33,85 +34,83 @@ import org.neo4j.storageengine.api.txstate.PropertyContainerState;\n  */\n public class TxSinglePropertyCursor extends TxAbstractPropertyCursor\n {\n-    private int propertyKeyId;\n-    private boolean seekFoundIt;\n+  private int propertyKeyId;\n+  private boolean seekFoundIt;\n \n-    public TxSinglePropertyCursor( Consumer<TxAbstractPropertyCursor> instanceCache )\n-    {\n-        super( instanceCache );\n-    }\n+  public TxSinglePropertyCursor(Consumer<TxAbstractPropertyCursor> instanceCache)\n+  {\n+    super(instanceCache);\n+  }\n \n-    public Cursor<PropertyItem> init( Cursor<PropertyItem> cursor,\n-            PropertyContainerState state, int propertyKeyId )\n-    {\n-        super.init( cursor, state );\n-        this.propertyKeyId = propertyKeyId;\n+  public Cursor<PropertyItem> init(Cursor<PropertyItem> cursor,\n+                                   PropertyContainerState state, int propertyKeyId)\n+  {\n+    super.init(cursor, state);\n+    this.propertyKeyId = propertyKeyId;\n \n-        return this;\n-    }\n+    return this;\n+  }\n \n-    @Override\n-    public boolean next()\n+  @Override\n+  public boolean next()\n+  {\n+    if (propertyKeyId == StatementConstants.NO_SUCH_PROPERTY_KEY)\n     {\n-        if ( propertyKeyId == StatementConstants.NO_SUCH_PROPERTY_KEY )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        try\n-        {\n-            seekFoundIt = false;\n-            StorageProperty changedProperty = state.getChangedProperty( propertyKeyId );\n-            if ( changedProperty != null )\n-            {\n-                this.property = changedProperty;\n-                return true;\n-            }\n+    try\n+    {\n+      seekFoundIt = false;\n+      StorageProperty changedProperty = state.getChangedProperty(propertyKeyId);\n+      if (changedProperty != null)\n+      {\n+        this.property = changedProperty;\n+        return true;\n+      }\n \n-            StorageProperty addedProperty = state.getAddedProperty( propertyKeyId );\n-            if ( addedProperty != null )\n-            {\n-                this.property = addedProperty;\n-                return true;\n-            }\n+      StorageProperty addedProperty = state.getAddedProperty(propertyKeyId);\n+      if (addedProperty != null)\n+      {\n+        this.property = addedProperty;\n+        return true;\n+      }\n \n-            if ( state.isPropertyRemoved( propertyKeyId ) )\n-            {\n-                this.property = null;\n-                return false;\n-            }\n+      if (state.isPropertyRemoved(propertyKeyId))\n+      {\n+        this.property = null;\n+        return false;\n+      }\n \n-            if ( cursor.next() )\n-            {\n-                this.property = null;\n-                return seekFoundIt = true;\n-            }\n-            else\n-            {\n-                this.property = null;\n-                return false;\n-            }\n-        }\n-        finally\n-        {\n-            propertyKeyId = StatementConstants.NO_SUCH_PROPERTY_KEY;\n-        }\n+      if (cursor.next())\n+      {\n+        this.property = null;\n+        return seekFoundIt = true;\n+      } else\n+      {\n+        this.property = null;\n+        return false;\n+      }\n+    } finally\n+    {\n+      propertyKeyId = StatementConstants.NO_SUCH_PROPERTY_KEY;\n     }\n+  }\n \n-    @Override\n-    public PropertyItem get()\n+  @Override\n+  public PropertyItem get()\n+  {\n+    if (property == null && !seekFoundIt)\n     {\n-        if ( property == null && !seekFoundIt )\n-        {\n-            throw new IllegalStateException();\n-        }\n-\n-        if ( seekFoundIt )\n-        {\n-            property = new PropertyKeyValue( cursor.get().propertyKeyId(), cursor.get().value() );\n-        }\n-        seekFoundIt = false;\n+      throw new IllegalStateException();\n+    }\n \n-        return super.get();\n+    if (seekFoundIt)\n+    {\n+      property = new PropertyKeyValue(cursor.get().propertyKeyId(), cursor.get().value());\n     }\n+    seekFoundIt = false;\n+\n+    return super.get();\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3783/TxSinglePropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3783/TxSinglePropertyCursor.java\nindex 77d248f9efc..44df06b3ad3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3783/TxSinglePropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3783/TxSinglePropertyCursor.java\n@@ -110,8 +110,9 @@ public class TxSinglePropertyCursor extends TxAbstractPropertyCursor\n         {\n             property = new PropertyKeyValue( cursor.get().propertyKeyId(), cursor.get().value() );\n         }\n-        seekFoundIt = false;\n+\n+seekFoundIt = false;\n \n         return super.get();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
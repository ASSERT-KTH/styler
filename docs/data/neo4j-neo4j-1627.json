{
    "project_name": "neo4j-neo4j",
    "error_id": "1627",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1627/MethodTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1627/MethodTemplate.java\nindex 58ff14472b9..b83cf4f6baa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1627/MethodTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1627/MethodTemplate.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.lang.reflect.Modifier;\n@@ -33,147 +34,144 @@ import static org.neo4j.codegen.TypeReference.typeReference;\n \n public class MethodTemplate\n {\n-    public static Builder method( Class<?> returnType, String name, Parameter... parameters )\n+    public static Builder method(Class<?> returnType, String name, Parameter... parameters)\n     {\n-        return method( typeReference( returnType ), name, parameters );\n+        return method(typeReference(returnType), name, parameters);\n     }\n \n-    public static Builder method( final TypeReference returnType, final String name, Parameter... parameters )\n+    public static Builder method(final TypeReference returnType, final String name, Parameter... parameters)\n     {\n         try\n         {\n-            return new Builder( parameters )\n+            return new Builder(parameters)\n             {\n                 @Override\n                 public MethodTemplate build()\n                 {\n-                    return buildMethod( this, returnType, name );\n+                    return buildMethod(this, returnType, name);\n                 }\n \n                 @Override\n                 MethodDeclaration.Builder declaration()\n                 {\n-                    return MethodDeclaration.method( returnType, name, parameters );\n+                    return MethodDeclaration.method(returnType, name, parameters);\n                 }\n             };\n-        }\n-        catch ( IllegalArgumentException | NullPointerException e )\n+        } catch (IllegalArgumentException | NullPointerException e)\n         {\n-            throw new IllegalArgumentException( \"Invalid signature for \" + name + \": \" + e.getMessage(), e );\n+            throw new IllegalArgumentException(\"Invalid signature for \" + name + \": \" + e.getMessage(), e);\n         }\n     }\n \n-    public static ConstructorBuilder constructor( Parameter... parameters )\n+    public static ConstructorBuilder constructor(Parameter... parameters)\n     {\n         try\n         {\n-            return new ConstructorBuilder( parameters );\n-        }\n-        catch ( IllegalArgumentException | NullPointerException e )\n+            return new ConstructorBuilder(parameters);\n+        } catch (IllegalArgumentException | NullPointerException e)\n         {\n-            throw new IllegalArgumentException( \"Invalid constructor signature: \" + e.getMessage(), e );\n+            throw new IllegalArgumentException(\"Invalid constructor signature: \" + e.getMessage(), e);\n         }\n     }\n \n     public static class ConstructorBuilder extends Builder\n     {\n-        ConstructorBuilder( Parameter[] parameters )\n+        ConstructorBuilder(Parameter[] parameters)\n         {\n-            super( parameters );\n+            super(parameters);\n         }\n \n         public Builder invokeSuper()\n         {\n             return expression(\n-                    ExpressionTemplate.invokeSuperConstructor( new ExpressionTemplate[]{}, TypeReference.NO_TYPES ) );\n+              ExpressionTemplate.invokeSuperConstructor(new ExpressionTemplate[] {}, TypeReference.NO_TYPES));\n         }\n \n-        public Builder invokeSuper( ExpressionTemplate[] parameters, Class<?>[] parameterTypes )\n+        public Builder invokeSuper(ExpressionTemplate[] parameters, Class<?>[] parameterTypes)\n         {\n             TypeReference[] references = new TypeReference[parameterTypes.length];\n-            for ( int i = 0; i < parameterTypes.length; i++ )\n+            for (int i = 0; i < parameterTypes.length; i++)\n             {\n-                references[i] = typeReference( parameterTypes[i] );\n+                references[i] = typeReference(parameterTypes[i]);\n             }\n \n-            return invokeSuper( parameters, references );\n+            return invokeSuper(parameters, references);\n         }\n \n-        public Builder invokeSuper( ExpressionTemplate[] parameters, TypeReference[] parameterTypes )\n+        public Builder invokeSuper(ExpressionTemplate[] parameters, TypeReference[] parameterTypes)\n         {\n-            return expression( ExpressionTemplate.invokeSuperConstructor( parameters, parameterTypes ) );\n+            return expression(ExpressionTemplate.invokeSuperConstructor(parameters, parameterTypes));\n         }\n \n         @Override\n         public MethodTemplate build()\n         {\n-            return buildConstructor( this );\n+            return buildConstructor(this);\n         }\n \n         @Override\n         MethodDeclaration.Builder declaration()\n         {\n-            return MethodDeclaration.constructor( parameters );\n+            return MethodDeclaration.constructor(parameters);\n         }\n     }\n \n     public abstract static class Builder\n     {\n         final Parameter[] parameters;\n-        private final Map<String,TypeReference> locals = new HashMap<>();\n+        private final Map<String, TypeReference> locals = new HashMap<>();\n         private final List<Statement> statements = new ArrayList<>();\n         private int modifiers = Modifier.PUBLIC;\n \n-        Builder( Parameter[] parameters )\n+        Builder(Parameter[] parameters)\n         {\n-            if ( parameters == null || parameters.length == 0 )\n+            if (parameters == null || parameters.length == 0)\n             {\n                 this.parameters = NO_PARAMETERS;\n-            }\n-            else\n+            } else\n             {\n-                this.parameters = Arrays.copyOf( parameters, parameters.length );\n+                this.parameters = Arrays.copyOf(parameters, parameters.length);\n             }\n-            for ( int i = 0; i < this.parameters.length; i++ )\n+            for (int i = 0; i < this.parameters.length; i++)\n             {\n-                Parameter parameter = requireNonNull( this.parameters[i], \"Parameter \" + i );\n-                if ( null != locals.put( parameter.name(), parameter.type() ) )\n+                Parameter parameter = requireNonNull(this.parameters[i], \"Parameter \" + i);\n+                if (null != locals.put(parameter.name(), parameter.type()))\n                 {\n-                    throw new IllegalArgumentException( \"Duplicate parameters named \\\"\" + parameter.name() + \"\\\".\" );\n+                    throw new IllegalArgumentException(\"Duplicate parameters named \\\"\" + parameter.name() + \"\\\".\");\n                 }\n             }\n         }\n \n         public abstract MethodTemplate build();\n \n-        public Builder expression( ExpressionTemplate expression )\n+        public Builder expression(ExpressionTemplate expression)\n         {\n-            statements.add( Statement.expression( expression ) );\n+            statements.add(Statement.expression(expression));\n             return this;\n         }\n \n-        public Builder put( ExpressionTemplate target, Class<?> fieldType, String fieldName,\n-                ExpressionTemplate expression )\n+        public Builder put(ExpressionTemplate target, Class<?> fieldType, String fieldName,\n+                           ExpressionTemplate expression)\n         {\n-            return put( target, typeReference( fieldType ), fieldName, expression );\n+            return put(target, typeReference(fieldType), fieldName, expression);\n         }\n \n-        public Builder put( ExpressionTemplate target, TypeReference fieldType, String fieldName,\n-                ExpressionTemplate expression )\n+        public Builder put(ExpressionTemplate target, TypeReference fieldType, String fieldName,\n+                           ExpressionTemplate expression)\n         {\n-            statements.add( Statement.put( target, Lookup.field( fieldType, fieldName ), expression ) );\n+            statements.add(Statement.put(target, Lookup.field(fieldType, fieldName), expression));\n             return this;\n         }\n \n-        public Builder modifiers( int modifiers )\n+        public Builder modifiers(int modifiers)\n         {\n             this.modifiers = modifiers;\n             return this;\n         }\n \n-        public Builder returns( ExpressionTemplate value )\n+        public Builder returns(ExpressionTemplate value)\n         {\n-            statements.add( Statement.returns( value ) );\n+            statements.add(Statement.returns(value));\n             return this;\n         }\n \n@@ -197,39 +195,39 @@ public class MethodTemplate\n \n     public TypeReference[] parameterTypes()\n     {\n-        if ( parameters.length == 0 )\n+        if (parameters.length == 0)\n         {\n             return NO_TYPES;\n         }\n         TypeReference[] result = new TypeReference[parameters.length];\n-        for ( int i = 0; i < result.length; i++ )\n+        for (int i = 0; i < result.length; i++)\n         {\n             result[i] = parameters[i].type();\n         }\n         return result;\n     }\n \n-    MethodDeclaration declaration( ClassHandle handle )\n+    MethodDeclaration declaration(ClassHandle handle)\n     {\n-        return declaration.build( handle );\n+        return declaration.build(handle);\n     }\n \n-    void generate( CodeBlock generator )\n+    void generate(CodeBlock generator)\n     {\n-        for ( Statement statement : statements )\n+        for (Statement statement : statements)\n         {\n-            statement.generate( generator );\n+            statement.generate(generator);\n         }\n     }\n \n-    private static MethodTemplate buildMethod( Builder builder, TypeReference returnType, String name )\n+    private static MethodTemplate buildMethod(Builder builder, TypeReference returnType, String name)\n     {\n-        return new MethodTemplate( builder, returnType, name );\n+        return new MethodTemplate(builder, returnType, name);\n     }\n \n-    private static MethodTemplate buildConstructor( Builder builder )\n+    private static MethodTemplate buildConstructor(Builder builder)\n     {\n-        return new MethodTemplate( builder, TypeReference.VOID, \"<init>\" );\n+        return new MethodTemplate(builder, TypeReference.VOID, \"<init>\");\n     }\n \n     private final MethodDeclaration.Builder declaration;\n@@ -239,13 +237,13 @@ public class MethodTemplate\n     private final String name;\n     private final int modifiers;\n \n-    private MethodTemplate( Builder builder, TypeReference returnType, String name )\n+    private MethodTemplate(Builder builder, TypeReference returnType, String name)\n     {\n         this.returnType = returnType;\n         this.name = name;\n         this.declaration = builder.declaration();\n         this.parameters = builder.parameters;\n-        this.statements = builder.statements.toArray( new Statement[0] );\n+        this.statements = builder.statements.toArray(new Statement[0]);\n         this.modifiers = builder.modifiers;\n     }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
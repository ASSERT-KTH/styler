{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3241",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "132",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "159",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3241/DefaultFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3241/DefaultFormat.java\nindex 72366728d11..7653ef941ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3241/DefaultFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3241/DefaultFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.net.URI;\n@@ -36,133 +37,128 @@ import javax.ws.rs.core.Response;\n  */\n public class DefaultFormat extends RepresentationFormat\n {\n-    private final RepresentationFormat inner;\n-    private final Collection<MediaType> supported;\n-    private final MediaType[] requested;\n+  private final RepresentationFormat inner;\n+  private final Collection<MediaType> supported;\n+  private final MediaType[] requested;\n \n-    public DefaultFormat( RepresentationFormat inner, Collection<MediaType> supported, MediaType... requested )\n-    {\n-        super( MediaType.APPLICATION_JSON_TYPE );\n+  public DefaultFormat(RepresentationFormat inner, Collection<MediaType> supported, MediaType... requested)\n+  {\n+    super(MediaType.APPLICATION_JSON_TYPE);\n \n-        this.inner = inner;\n-        this.supported = supported;\n-        this.requested = requested;\n-    }\n+    this.inner = inner;\n+    this.supported = supported;\n+    this.requested = requested;\n+  }\n \n-    @Override\n-    protected String serializeValue( String type, Object value )\n-    {\n-        return inner.serializeValue( type, value );\n-    }\n+  @Override\n+  protected String serializeValue(String type, Object value)\n+  {\n+    return inner.serializeValue(type, value);\n+  }\n \n-    @Override\n-    protected ListWriter serializeList( String type )\n-    {\n-        return inner.serializeList( type );\n-    }\n+  @Override\n+  protected ListWriter serializeList(String type)\n+  {\n+    return inner.serializeList(type);\n+  }\n \n-    @Override\n-    protected MappingWriter serializeMapping( String type )\n-    {\n-        return inner.serializeMapping( type );\n-    }\n+  @Override\n+  protected MappingWriter serializeMapping(String type)\n+  {\n+    return inner.serializeMapping(type);\n+  }\n \n-    @Override\n-    protected String complete( ListWriter serializer )\n-    {\n-        return inner.complete( serializer );\n-    }\n+  @Override\n+  protected String complete(ListWriter serializer)\n+  {\n+    return inner.complete(serializer);\n+  }\n \n-    @Override\n-    protected String complete( MappingWriter serializer )\n-    {\n-        return inner.complete( serializer );\n-    }\n+  @Override\n+  protected String complete(MappingWriter serializer)\n+  {\n+    return inner.complete(serializer);\n+  }\n \n-    @Override\n-    public Object readValue( String input )\n+  @Override\n+  public Object readValue(String input)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return inner.readValue( input );\n-        }\n-        catch ( BadInputException e )\n-        {\n-            throw newMediaTypeNotSupportedException();\n-        }\n+      return inner.readValue(input);\n+    } catch (BadInputException e)\n+    {\n+      throw newMediaTypeNotSupportedException();\n     }\n+  }\n+\n+  private MediaTypeNotSupportedException newMediaTypeNotSupportedException()\n+  {\n+    return new MediaTypeNotSupportedException(Response.Status.UNSUPPORTED_MEDIA_TYPE, supported, requested);\n+  }\n \n-    private MediaTypeNotSupportedException newMediaTypeNotSupportedException()\n+  @Override\n+  public Map<String, Object> readMap(String input, String... requiredKeys) throws BadInputException\n+  {\n+    Map<String, Object> result;\n+    try\n     {\n-        return new MediaTypeNotSupportedException( Response.Status.UNSUPPORTED_MEDIA_TYPE, supported, requested );\n+      result = inner.readMap(input);\n+    } catch (BadInputException e)\n+    {\n+      throw newMediaTypeNotSupportedException();\n     }\n+    return validateKeys(result, requiredKeys);\n+  }\n \n-    @Override\n-    public Map<String, Object> readMap( String input, String... requiredKeys ) throws BadInputException\n+  @Override\n+  public List<Object> readList(String input)\n+  {\n+    try\n     {\n-        Map<String, Object> result;\n-        try\n-        {\n-            result = inner.readMap( input );\n-        }\n-        catch ( BadInputException e )\n-        {\n-            throw newMediaTypeNotSupportedException();\n-        }\n-        return validateKeys( result, requiredKeys );\n+      return inner.readList(input);\n+    } catch (BadInputException e)\n+    {\n+      throw newMediaTypeNotSupportedException();\n     }\n+  }\n \n-    @Override\n-    public List<Object> readList( String input )\n+  @Override\n+  public URI readUri(String input)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return inner.readList( input );\n-        }\n-        catch ( BadInputException e )\n-        {\n-            throw newMediaTypeNotSupportedException();\n-        }\n+      return inner.readUri(input);\n+    } catch (BadInputException e)\n+    {\n+      throw newMediaTypeNotSupportedException();\n     }\n+  }\n \n-    @Override\n-    public URI readUri( String input )\n+  public static <T> Map<String, T> validateKeys(Map<String, T> map, String... requiredKeys) throws BadInputException\n+  {\n+    Set<String> missing = null;\n+    for (String key : requiredKeys)\n     {\n-        try\n+      if (!map.containsKey(key))\n+      {\n+        if (missing == null)\n         {\n-            return inner.readUri( input );\n-        }\n-        catch ( BadInputException e )\n-        {\n-            throw newMediaTypeNotSupportedException();\n+          missing = new HashSet<>();\n         }\n+        missing.add(key);\n+      }\n     }\n-\n-    public static <T> Map<String, T> validateKeys( Map<String, T> map, String... requiredKeys ) throws BadInputException\n+    if (missing != null)\n     {\n-        Set<String> missing = null;\n-        for ( String key : requiredKeys )\n-        {\n-            if ( !map.containsKey( key ) )\n-            {\n-                if ( missing == null )\n-                {\n-                    missing = new HashSet<>();\n-                }\n-                missing.add( key );\n-            }\n-        }\n-        if ( missing != null )\n-        {\n-            if ( missing.size() == 1 )\n-            {\n-                throw new InvalidArgumentsException( \"Missing required key: \\\"\" + missing.iterator().next() + \"\\\"\" );\n-            }\n-            else\n-            {\n-                throw new InvalidArgumentsException( \"Missing required keys: \" + missing );\n-            }\n-        }\n-        return map;\n+      if (missing.size() == 1)\n+      {\n+        throw new InvalidArgumentsException(\"Missing required key: \\\"\" + missing.iterator().next() + \"\\\"\");\n+      } else\n+      {\n+        throw new InvalidArgumentsException(\"Missing required keys: \" + missing);\n+      }\n     }\n+    return map;\n+  }\n }\n",
            "diff_size": 135
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3241/DefaultFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3241/DefaultFormat.java\nindex 72366728d11..54f555ef46e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3241/DefaultFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3241/DefaultFormat.java\n@@ -43,8 +43,7 @@ public class DefaultFormat extends RepresentationFormat\n     public DefaultFormat( RepresentationFormat inner, Collection<MediaType> supported, MediaType... requested )\n     {\n         super( MediaType.APPLICATION_JSON_TYPE );\n-\n-        this.inner = inner;\n+this.inner = inner;\n         this.supported = supported;\n         this.requested = requested;\n     }\n@@ -98,9 +97,9 @@ public class DefaultFormat extends RepresentationFormat\n     }\n \n     @Override\n-    public Map<String, Object> readMap( String input, String... requiredKeys ) throws BadInputException\n+    public Map<String,Object> readMap( String input, String... requiredKeys ) throws BadInputException\n     {\n-        Map<String, Object> result;\n+        Map<String,Object> result;\n         try\n         {\n             result = inner.readMap( input );\n@@ -109,7 +108,8 @@ public class DefaultFormat extends RepresentationFormat\n         {\n             throw newMediaTypeNotSupportedException();\n         }\n-        return validateKeys( result, requiredKeys );\n+\n+return validateKeys( result, requiredKeys );\n     }\n \n     @Override\n@@ -138,7 +138,7 @@ public class DefaultFormat extends RepresentationFormat\n         }\n     }\n \n-    public static <T> Map<String, T> validateKeys( Map<String, T> map, String... requiredKeys ) throws BadInputException\n+    public static <T> Map<String,T> validateKeys( Map<String,T> map, String... requiredKeys ) throws BadInputException\n     {\n         Set<String> missing = null;\n         for ( String key : requiredKeys )\n@@ -165,4 +165,4 @@ public class DefaultFormat extends RepresentationFormat\n         }\n         return map;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
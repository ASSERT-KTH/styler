{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3562",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3562/AutoReadingSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3562/AutoReadingSource.java\nindex 50abc8133de..a24644560af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3562/AutoReadingSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3562/AutoReadingSource.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -29,68 +30,68 @@ import java.io.IOException;\n  */\n public class AutoReadingSource implements Source\n {\n-    private final CharReadable reader;\n-    private SectionedCharBuffer charBuffer;\n+  private final CharReadable reader;\n+  private SectionedCharBuffer charBuffer;\n \n-    public AutoReadingSource( CharReadable reader, int bufferSize )\n-    {\n-        this( reader, new SectionedCharBuffer( bufferSize ) );\n-    }\n+  public AutoReadingSource(CharReadable reader, int bufferSize)\n+  {\n+    this(reader, new SectionedCharBuffer(bufferSize));\n+  }\n \n-    public AutoReadingSource( CharReadable reader, SectionedCharBuffer charBuffer )\n-    {\n-        this.reader = reader;\n-        this.charBuffer = charBuffer;\n-    }\n+  public AutoReadingSource(CharReadable reader, SectionedCharBuffer charBuffer)\n+  {\n+    this.reader = reader;\n+    this.charBuffer = charBuffer;\n+  }\n \n-    @Override\n-    public Chunk nextChunk( int seekStartPos ) throws IOException\n-    {\n-        charBuffer = reader.read( charBuffer, seekStartPos == -1 ? charBuffer.pivot() : seekStartPos );\n+  @Override\n+  public Chunk nextChunk(int seekStartPos) throws IOException\n+  {\n+    charBuffer = reader.read(charBuffer, seekStartPos == -1 ? charBuffer.pivot() : seekStartPos);\n \n-        return new Chunk()\n-        {\n-            @Override\n-            public int startPosition()\n-            {\n-                return charBuffer.pivot();\n-            }\n+    return new Chunk()\n+    {\n+      @Override\n+      public int startPosition()\n+      {\n+        return charBuffer.pivot();\n+      }\n \n-            @Override\n-            public String sourceDescription()\n-            {\n-                return reader.sourceDescription();\n-            }\n+      @Override\n+      public String sourceDescription()\n+      {\n+        return reader.sourceDescription();\n+      }\n \n-            @Override\n-            public int backPosition()\n-            {\n-                return charBuffer.back();\n-            }\n+      @Override\n+      public int backPosition()\n+      {\n+        return charBuffer.back();\n+      }\n \n-            @Override\n-            public int length()\n-            {\n-                return charBuffer.available();\n-            }\n+      @Override\n+      public int length()\n+      {\n+        return charBuffer.available();\n+      }\n \n-            @Override\n-            public int maxFieldSize()\n-            {\n-                return charBuffer.pivot();\n-            }\n+      @Override\n+      public int maxFieldSize()\n+      {\n+        return charBuffer.pivot();\n+      }\n \n-            @Override\n-            public char[] data()\n-            {\n-                return charBuffer.array();\n-            }\n-        };\n-    }\n+      @Override\n+      public char[] data()\n+      {\n+        return charBuffer.array();\n+      }\n+    };\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        reader.close();\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    reader.close();\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3562/AutoReadingSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3562/AutoReadingSource.java\nindex 50abc8133de..cbe5af4827a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3562/AutoReadingSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3562/AutoReadingSource.java\n@@ -47,8 +47,7 @@ public class AutoReadingSource implements Source\n     public Chunk nextChunk( int seekStartPos ) throws IOException\n     {\n         charBuffer = reader.read( charBuffer, seekStartPos == -1 ? charBuffer.pivot() : seekStartPos );\n-\n-        return new Chunk()\n+return new Chunk()\n         {\n             @Override\n             public int startPosition()\n@@ -93,4 +92,4 @@ public class AutoReadingSource implements Source\n     {\n         reader.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
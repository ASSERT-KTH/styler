{
    "project_name": "wso2-attic-commons",
    "error_id": "48",
    "information": {
        "errors": [
            {
                "line": "76",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public String getMovieName() {\n        try {\n            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\"id\", movieId).getSingleResult().getName();\n        } catch (NoResultException e) {\n            return \"\";\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/48/Booking.java\nindex 9b5ff3aa4c7..4d938eb54d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/48/Booking.java\n@@ -73,7 +73,8 @@ public class Booking {\n \n     public String getMovieName() {\n         try {\n-            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\"id\", movieId).getSingleResult().getName();\n+            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\n+                \"id\", movieId).getSingleResult().getName();\n         } catch (NoResultException e) {\n             return \"\";\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/48/Booking.java\nindex 9b5ff3aa4c7..9ba0b03e4f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/48/Booking.java\n@@ -37,6 +37,7 @@\n  * only if the new code is made subject to such option by the copyright\n  * holder.\n  */\n+\n package org.glassfish.movieplex7.booking;\n \n import java.util.List;\n@@ -56,64 +57,65 @@ import org.glassfish.movieplex7.entities.ShowTiming;\n @FlowScoped(\"booking\")\n public class Booking {\n \n-    int movieId;\n-    String startTime;\n-    int startTimeId;\n-    \n-    @PersistenceContext\n-    EntityManager em;\n+  int movieId;\n+  String startTime;\n+  int startTimeId;\n \n-    public int getMovieId() {\n-        return movieId;\n-    }\n+  @PersistenceContext\n+  EntityManager em;\n \n-    public void setMovieId(int movieId) {\n-        this.movieId = movieId;\n-    }\n+  public int getMovieId() {\n+    return movieId;\n+  }\n \n-    public String getMovieName() {\n-        try {\n-            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\"id\", movieId).getSingleResult().getName();\n-        } catch (NoResultException e) {\n-            return \"\";\n-        }\n-    }\n+  public void setMovieId(int movieId) {\n+    this.movieId = movieId;\n+  }\n \n-    public String getStartTime() {\n-        return startTime;\n+  public String getMovieName() {\n+    try {\n+      return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\"id\", movieId).getSingleResult().getName();\n+    } catch (NoResultException e) {\n+      return \"\";\n     }\n+  }\n \n-    public void setStartTime(String startTime) {\n-        StringTokenizer tokens = new StringTokenizer(startTime, \",\");\n-        startTimeId = Integer.parseInt(tokens.nextToken());\n-        this.startTime = tokens.nextToken();\n-    }\n+  public String getStartTime() {\n+    return startTime;\n+  }\n \n-    public int getStartTimeId() {\n-        return startTimeId;\n-    }\n-    \n-    public String getName() {\n-        return this.getClass().getSimpleName();\n-    }\n-    \n-    public String getTheater() {\n-        // for a movie and show\n-        try {\n-            // Always return the first theater\n-            List<ShowTiming> list = em.createNamedQuery(\"ShowTiming.findByMovieAndTimingId\", ShowTiming.class)\n-                    .setParameter(\"movieId\", movieId)\n-                    .setParameter(\"timingId\", startTimeId)\n-                    .getResultList();\n-            if (list.isEmpty())\n-                return \"none\";\n-            \n-            return list\n-                    .get(0)\n-                    .getTheaterId()\n-                    .getId().toString();\n-        } catch (NoResultException e) {\n-            return \"none\";\n-        }\n+  public void setStartTime(String startTime) {\n+    StringTokenizer tokens = new StringTokenizer(startTime, \",\");\n+    startTimeId = Integer.parseInt(tokens.nextToken());\n+    this.startTime = tokens.nextToken();\n+  }\n+\n+  public int getStartTimeId() {\n+    return startTimeId;\n+  }\n+\n+  public String getName() {\n+    return this.getClass().getSimpleName();\n+  }\n+\n+  public String getTheater() {\n+    // for a movie and show\n+    try {\n+      // Always return the first theater\n+      List<ShowTiming> list = em.createNamedQuery(\"ShowTiming.findByMovieAndTimingId\", ShowTiming.class)\n+        .setParameter(\"movieId\", movieId)\n+        .setParameter(\"timingId\", startTimeId)\n+        .getResultList();\n+      if (list.isEmpty()) {\n+        return \"none\";\n+      }\n+\n+      return list\n+        .get(0)\n+        .getTheaterId()\n+        .getId().toString();\n+    } catch (NoResultException e) {\n+      return \"none\";\n     }\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/48/Booking.java\nindex 9b5ff3aa4c7..04816bf5a37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/48/Booking.java\n@@ -108,12 +108,11 @@ public class Booking {\n             if (list.isEmpty())\n                 return \"none\";\n             \n-            return list\n-                    .get(0)\n+            return list.get(0)\n                     .getTheaterId()\n                     .getId().toString();\n         } catch (NoResultException e) {\n             return \"none\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/48/Booking.java\nindex 9b5ff3aa4c7..4d938eb54d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/48/Booking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/48/Booking.java\n@@ -73,7 +73,8 @@ public class Booking {\n \n     public String getMovieName() {\n         try {\n-            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\"id\", movieId).getSingleResult().getName();\n+            return em.createNamedQuery(\"Movie.findById\", Movie.class).setParameter(\n+                \"id\", movieId).getSingleResult().getName();\n         } catch (NoResultException e) {\n             return \"\";\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
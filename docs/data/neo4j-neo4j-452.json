{
    "project_name": "neo4j-neo4j",
    "error_id": "452",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/452/Listeners.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/452/Listeners.java\nindex 7a426f4e999..a390298404f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/452/Listeners.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/452/Listeners.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.helpers;\n \n import java.util.Iterator;\n@@ -41,7 +42,7 @@ public class Listeners<T> implements Iterable<T>\n      */\n     public Listeners()\n     {\n-        this.listeners = createListeners( emptyList() );\n+        this.listeners = createListeners(emptyList());\n     }\n \n     /**\n@@ -49,11 +50,11 @@ public class Listeners<T> implements Iterable<T>\n      *\n      * @param listener the listener to add.\n      */\n-    public void add( T listener )\n+    public void add(T listener)\n     {\n-        requireNonNull( listener, \"added listener can't be null\" );\n+        requireNonNull(listener, \"added listener can't be null\");\n \n-        listeners.add( listener );\n+        listeners.add(listener);\n     }\n \n     /**\n@@ -61,11 +62,11 @@ public class Listeners<T> implements Iterable<T>\n      *\n      * @param listener the listener to remove.\n      */\n-    public void remove( T listener )\n+    public void remove(T listener)\n     {\n-        requireNonNull( listener, \"removed listener can't be null\" );\n+        requireNonNull(listener, \"removed listener can't be null\");\n \n-        listeners.remove( listener );\n+        listeners.remove(listener);\n     }\n \n     /**\n@@ -74,13 +75,13 @@ public class Listeners<T> implements Iterable<T>\n      *\n      * @param notification the notification to be applied to each listener.\n      */\n-    public void notify( Notification<T> notification )\n+    public void notify(Notification<T> notification)\n     {\n-        requireNonNull( notification, \"notification can't be null\" );\n+        requireNonNull(notification, \"notification can't be null\");\n \n-        for ( T listener : listeners )\n+        for (T listener : listeners)\n         {\n-            notifySingleListener( listener, notification );\n+            notifySingleListener(listener, notification);\n         }\n     }\n \n@@ -89,17 +90,17 @@ public class Listeners<T> implements Iterable<T>\n      * Each notification is submitted as a {@link Runnable} to the executor.\n      * Notification of each listener is synchronized on this listener.\n      *\n-     * @param executor the executor to submit notifications to.\n+     * @param executor     the executor to submit notifications to.\n      * @param notification the notification to be applied to each listener.\n      */\n-    public void notify( Executor executor, Notification<T> notification )\n+    public void notify(Executor executor, Notification<T> notification)\n     {\n-        requireNonNull( executor, \"executor can't be null\" );\n-        requireNonNull( notification, \"notification can't be null\" );\n+        requireNonNull(executor, \"executor can't be null\");\n+        requireNonNull(notification, \"notification can't be null\");\n \n-        for ( T listener : listeners )\n+        for (T listener : listeners)\n         {\n-            executor.execute( () -> notifySingleListener( listener, notification ) );\n+            executor.execute(() -> notifySingleListener(listener, notification));\n         }\n     }\n \n@@ -119,21 +120,21 @@ public class Listeners<T> implements Iterable<T>\n         return listeners.iterator();\n     }\n \n-    private static <T> void notifySingleListener( T listener, Notification<T> notification )\n+    private static <T> void notifySingleListener(T listener, Notification<T> notification)\n     {\n-        synchronized ( listener )\n+        synchronized (listener)\n         {\n-            notification.notify( listener );\n+            notification.notify(listener);\n         }\n     }\n \n-    private static <T> List<T> createListeners( List<T> existingListeners )\n+    private static <T> List<T> createListeners(List<T> existingListeners)\n     {\n-        return new CopyOnWriteArrayList<>( existingListeners );\n+        return new CopyOnWriteArrayList<>(existingListeners);\n     }\n \n     public interface Notification<T>\n     {\n-        void notify( T listener );\n+        void notify(T listener);\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/452/Listeners.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/452/Listeners.java\nindex 7a426f4e999..e93cc13922b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/452/Listeners.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/452/Listeners.java\n@@ -136,4 +136,4 @@ public class Listeners<T> implements Iterable<T>\n     {\n         void notify( T listener );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
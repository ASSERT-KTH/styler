{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4424",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "235",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "252",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "258",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "262",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "276",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "279",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "282",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "336",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "413",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "537",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "540",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "544",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "558",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "562",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "565",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "568",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "571",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "588",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "591",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "630",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "651",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "651",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "725",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "744",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "757",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "760",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "760",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "777",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "777",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4424/NodeProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4424/NodeProxy.java\nindex e71952b07f2..531bd0859c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4424/NodeProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4424/NodeProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.ArrayList;\n@@ -75,760 +76,733 @@ import static org.neo4j.kernel.impl.core.TokenHolder.NO_ID;\n \n public class NodeProxy implements Node, RelationshipFactory<Relationship>\n {\n-    private final EmbeddedProxySPI spi;\n-    private final long nodeId;\n-\n-    public NodeProxy( EmbeddedProxySPI spi, long nodeId )\n+  private final EmbeddedProxySPI spi;\n+  private final long nodeId;\n+\n+  public NodeProxy(EmbeddedProxySPI spi, long nodeId)\n+  {\n+    this.nodeId = nodeId;\n+    this.spi = spi;\n+  }\n+\n+  @Override\n+  public long getId()\n+  {\n+    return nodeId;\n+  }\n+\n+  @Override\n+  public GraphDatabaseService getGraphDatabase()\n+  {\n+    return spi.getGraphDatabase();\n+  }\n+\n+  @Override\n+  public void delete()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    try\n+    {\n+      boolean deleted = transaction.dataWrite().nodeDelete(getId());\n+      if (!deleted)\n+      {\n+        throw new NotFoundException(\"Unable to delete Node[\" + nodeId +\n+            \"] since it has already been deleted.\");\n+      }\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n+    {\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while deleting the node: \"\n+          + e.getMessage(), e);\n+    }\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getRelationships()\n+  {\n+    return getRelationships(Direction.BOTH);\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getRelationships(final Direction direction)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    return innerGetRelationships(transaction, direction, null);\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getRelationships(RelationshipType... types)\n+  {\n+    return getRelationships(Direction.BOTH, types);\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getRelationships(RelationshipType type, Direction dir)\n+  {\n+    return getRelationships(dir, type);\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getRelationships(final Direction direction, RelationshipType... types)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int[] typeIds = relTypeIds(types, transaction.tokenRead());\n+    return innerGetRelationships(transaction, direction, typeIds);\n+  }\n+\n+  private ResourceIterable<Relationship> innerGetRelationships(\n+      KernelTransaction transaction, final Direction direction, int[] typeIds)\n+  {\n+    return () -> getRelationshipSelectionIterator(transaction, direction, typeIds);\n+  }\n+\n+  @Override\n+  public boolean hasRelationship()\n+  {\n+    return hasRelationship(Direction.BOTH);\n+  }\n+\n+  @Override\n+  public boolean hasRelationship(Direction direction)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    return innerHasRelationships(transaction, direction, null);\n+  }\n+\n+  @Override\n+  public boolean hasRelationship(RelationshipType... types)\n+  {\n+    return hasRelationship(Direction.BOTH, types);\n+  }\n+\n+  @Override\n+  public boolean hasRelationship(Direction direction, RelationshipType... types)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int[] typeIds = relTypeIds(types, transaction.tokenRead());\n+    return innerHasRelationships(transaction, direction, typeIds);\n+  }\n+\n+  @Override\n+  public boolean hasRelationship(RelationshipType type, Direction dir)\n+  {\n+    return hasRelationship(dir, type);\n+  }\n+\n+  private boolean innerHasRelationships(final KernelTransaction transaction, final Direction direction, int[] typeIds)\n+  {\n+    try (ResourceIterator<Relationship> iterator =\n+             getRelationshipSelectionIterator(transaction, direction, typeIds))\n+    {\n+      return iterator.hasNext();\n+    }\n+  }\n+\n+  @Override\n+  public Relationship getSingleRelationship(RelationshipType type, Direction dir)\n+  {\n+    try (ResourceIterator<Relationship> rels = getRelationships(dir, type).iterator())\n+    {\n+      if (!rels.hasNext())\n+      {\n+        return null;\n+      }\n+\n+      Relationship rel = rels.next();\n+      while (rels.hasNext())\n+      {\n+        Relationship other = rels.next();\n+        if (!other.equals(rel))\n+        {\n+          throw new NotFoundException(\"More than one relationship[\" +\n+              type + \", \" + dir + \"] found for \" + this);\n+        }\n+      }\n+      return rel;\n+    }\n+  }\n+\n+  @Override\n+  public void setProperty(String key, Object value)\n+  {\n+    KernelTransaction transaction = spi.kernelTransaction();\n+    int propertyKeyId;\n+    try\n+    {\n+      propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName(key);\n+    } catch (IllegalTokenNameException e)\n+    {\n+      throw new IllegalArgumentException(format(\"Invalid property key '%s'.\", key), e);\n+    }\n+\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      transaction.dataWrite().nodeSetProperty(nodeId, propertyKeyId, Values.of(value, false));\n+    } catch (ConstraintValidationException e)\n+    {\n+      throw new ConstraintViolationException(\n+          e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+    } catch (IllegalArgumentException e)\n+    {\n+      // Trying to set an illegal value is a critical error - fail this transaction\n+      spi.failTransaction();\n+      throw e;\n+    } catch (EntityNotFoundException e)\n     {\n-        this.nodeId = nodeId;\n-        this.spi = spi;\n-    }\n-\n-    @Override\n-    public long getId()\n+      throw new NotFoundException(e);\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        return nodeId;\n-    }\n-\n-    @Override\n-    public GraphDatabaseService getGraphDatabase()\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n     {\n-        return spi.getGraphDatabase();\n-    }\n-\n-    @Override\n-    public void delete()\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while setting property: \"\n+          + e.getMessage(), e);\n+    } catch (KernelException e)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        try\n-        {\n-            boolean deleted = transaction.dataWrite().nodeDelete( getId() );\n-            if ( !deleted )\n-            {\n-                throw new NotFoundException( \"Unable to delete Node[\" + nodeId +\n-                                             \"] since it has already been deleted.\" );\n-            }\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the node: \"\n-                                             + e.getMessage(), e );\n-        }\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public ResourceIterable<Relationship> getRelationships()\n+  @Override\n+  public Object removeProperty(String key) throws NotFoundException\n+  {\n+    KernelTransaction transaction = spi.kernelTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        return getRelationships( Direction.BOTH );\n-    }\n-\n-    @Override\n-    public ResourceIterable<Relationship> getRelationships( final Direction direction )\n+      int propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName(key);\n+      return transaction.dataWrite().nodeRemoveProperty(nodeId, propertyKeyId).asObjectCopy();\n+    } catch (EntityNotFoundException e)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        return innerGetRelationships( transaction, direction, null );\n-    }\n-\n-    @Override\n-    public ResourceIterable<Relationship> getRelationships( RelationshipType... types )\n+      throw new NotFoundException(e);\n+    } catch (IllegalTokenNameException e)\n     {\n-        return getRelationships( Direction.BOTH, types );\n-    }\n-\n-    @Override\n-    public ResourceIterable<Relationship> getRelationships( RelationshipType type, Direction dir )\n+      throw new IllegalArgumentException(format(\"Invalid property key '%s'.\", key), e);\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        return getRelationships( dir, type );\n-    }\n-\n-    @Override\n-    public ResourceIterable<Relationship> getRelationships( final Direction direction, RelationshipType... types )\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (AutoIndexingKernelException e)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int[] typeIds = relTypeIds( types, transaction.tokenRead() );\n-        return innerGetRelationships( transaction, direction, typeIds );\n+      throw new IllegalStateException(\"Auto indexing encountered a failure while removing property: \"\n+          + e.getMessage(), e);\n     }\n+  }\n \n-    private ResourceIterable<Relationship> innerGetRelationships(\n-            KernelTransaction transaction, final Direction direction, int[] typeIds )\n+  @Override\n+  public Object getProperty(String key, Object defaultValue)\n+  {\n+    if (null == key)\n     {\n-        return () -> getRelationshipSelectionIterator( transaction, direction, typeIds );\n+      throw new IllegalArgumentException(\"(null) property key is not allowed\");\n     }\n-\n-    @Override\n-    public boolean hasRelationship()\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        return hasRelationship( Direction.BOTH );\n+      return defaultValue;\n     }\n-\n-    @Override\n-    public boolean hasRelationship( Direction direction )\n+    singleNode(transaction, nodes);\n+    nodes.properties(properties);\n+    while (properties.next())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        return innerHasRelationships( transaction, direction, null );\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        Value value = properties.propertyValue();\n+        return value == Values.NO_VALUE ? defaultValue : value.asObjectCopy();\n+      }\n     }\n+    return defaultValue;\n+  }\n \n-    @Override\n-    public boolean hasRelationship( RelationshipType... types )\n+  @Override\n+  public Iterable<String> getPropertyKeys()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    List<String> keys = new ArrayList<>();\n+    try\n+    {\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      PropertyCursor properties = transaction.ambientPropertyCursor();\n+      singleNode(transaction, nodes);\n+      TokenRead token = transaction.tokenRead();\n+      nodes.properties(properties);\n+      while (properties.next())\n+      {\n+        keys.add(token.propertyKeyName(properties.propertyKey()));\n+      }\n+    } catch (PropertyKeyIdNotFoundKernelException e)\n     {\n-        return hasRelationship( Direction.BOTH, types );\n+      throw new IllegalStateException(\"Property key retrieved through kernel API should exist.\", e);\n     }\n+    return keys;\n+  }\n \n-    @Override\n-    public boolean hasRelationship( Direction direction, RelationshipType... types )\n+  @Override\n+  public Map<String, Object> getProperties(String... keys)\n+  {\n+    Objects.requireNonNull(keys, \"Properties keys should be not null array.\");\n+\n+    if (keys.length == 0)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int[] typeIds = relTypeIds( types, transaction.tokenRead() );\n-        return innerHasRelationships( transaction, direction, typeIds );\n+      return Collections.emptyMap();\n     }\n \n-    @Override\n-    public boolean hasRelationship( RelationshipType type, Direction dir )\n+    KernelTransaction transaction = safeAcquireTransaction();\n+\n+    int itemsToReturn = keys.length;\n+    Map<String, Object> properties = new HashMap<>(itemsToReturn);\n+    TokenRead token = transaction.tokenRead();\n+\n+    //Find ids, note we are betting on that the number of keys\n+    //is small enough not to use a set here.\n+    int[] propertyIds = new int[itemsToReturn];\n+    for (int i = 0; i < itemsToReturn; i++)\n     {\n-        return hasRelationship( dir, type );\n+      String key = keys[i];\n+      if (key == null)\n+      {\n+        throw new NullPointerException(String.format(\"Key %d was null\", i));\n+      }\n+      propertyIds[i] = token.propertyKey(key);\n     }\n \n-    private boolean innerHasRelationships( final KernelTransaction transaction, final Direction direction, int[] typeIds )\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n+    singleNode(transaction, nodes);\n+    nodes.properties(propertyCursor);\n+    int propertiesToFind = itemsToReturn;\n+    while (propertiesToFind > 0 && propertyCursor.next())\n     {\n-        try ( ResourceIterator<Relationship> iterator =\n-                getRelationshipSelectionIterator( transaction, direction, typeIds ) )\n+      //Do a linear check if this is a property we are interested in.\n+      int currentKey = propertyCursor.propertyKey();\n+      for (int i = 0; i < itemsToReturn; i++)\n+      {\n+        if (propertyIds[i] == currentKey)\n         {\n-            return iterator.hasNext();\n+          properties.put(keys[i],\n+              propertyCursor.propertyValue().asObjectCopy());\n+          propertiesToFind--;\n+          break;\n         }\n+      }\n     }\n+    return properties;\n+  }\n+\n+  @Override\n+  public Map<String, Object> getAllProperties()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    Map<String, Object> properties = new HashMap<>();\n \n-    @Override\n-    public Relationship getSingleRelationship( RelationshipType type, Direction dir )\n+    try\n     {\n-        try ( ResourceIterator<Relationship> rels = getRelationships( dir, type ).iterator() )\n-        {\n-            if ( !rels.hasNext() )\n-            {\n-                return null;\n-            }\n-\n-            Relationship rel = rels.next();\n-            while ( rels.hasNext() )\n-            {\n-                Relationship other = rels.next();\n-                if ( !other.equals( rel ) )\n-                {\n-                    throw new NotFoundException( \"More than one relationship[\" +\n-                                                 type + \", \" + dir + \"] found for \" + this );\n-                }\n-            }\n-            return rel;\n-        }\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n+      TokenRead token = transaction.tokenRead();\n+      singleNode(transaction, nodes);\n+      nodes.properties(propertyCursor);\n+      while (propertyCursor.next())\n+      {\n+        properties.put(token.propertyKeyName(propertyCursor.propertyKey()),\n+            propertyCursor.propertyValue().asObjectCopy());\n+      }\n+    } catch (PropertyKeyIdNotFoundKernelException e)\n+    {\n+      throw new IllegalStateException(\"Property key retrieved through kernel API should exist.\", e);\n     }\n+    return properties;\n+  }\n \n-    @Override\n-    public void setProperty( String key, Object value )\n+  @Override\n+  public Object getProperty(String key) throws NotFoundException\n+  {\n+    if (null == key)\n     {\n-        KernelTransaction transaction = spi.kernelTransaction();\n-        int propertyKeyId;\n-        try\n-        {\n-            propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName( key );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new IllegalArgumentException( format( \"Invalid property key '%s'.\", key ), e );\n-        }\n-\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            transaction.dataWrite().nodeSetProperty( nodeId, propertyKeyId, Values.of( value, false ) );\n-        }\n-        catch ( ConstraintValidationException e )\n-        {\n-            throw new ConstraintViolationException(\n-                    e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            // Trying to set an illegal value is a critical error - fail this transaction\n-            spi.failTransaction();\n-            throw e;\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \"\n-                                             + e.getMessage(), e );\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n+      throw new IllegalArgumentException(\"(null) property key is not allowed\");\n     }\n-\n-    @Override\n-    public Object removeProperty( String key ) throws NotFoundException\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        KernelTransaction transaction = spi.kernelTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            int propertyKeyId = transaction.tokenWrite().propertyKeyGetOrCreateForName( key );\n-            return transaction.dataWrite().nodeRemoveProperty( nodeId, propertyKeyId ).asObjectCopy();\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new IllegalArgumentException( format( \"Invalid property key '%s'.\", key ), e );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( AutoIndexingKernelException e )\n-        {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \"\n-                                             + e.getMessage(), e );\n-        }\n+      throw new NotFoundException(format(\"No such property, '%s'.\", key));\n     }\n \n-    @Override\n-    public Object getProperty( String key, Object defaultValue )\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    singleNode(transaction, nodes);\n+    nodes.properties(properties);\n+    while (properties.next())\n     {\n-        if ( null == key )\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        Value value = properties.propertyValue();\n+        if (value == Values.NO_VALUE)\n         {\n-            throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n+          throw new NotFoundException(format(\"No such property, '%s'.\", key));\n         }\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            return defaultValue;\n-        }\n-        singleNode( transaction, nodes );\n-        nodes.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                Value value = properties.propertyValue();\n-                return value == Values.NO_VALUE ? defaultValue : value.asObjectCopy();\n-            }\n-        }\n-        return defaultValue;\n+        return value.asObjectCopy();\n+      }\n     }\n+    throw new NotFoundException(format(\"No such property, '%s'.\", key));\n+  }\n \n-    @Override\n-    public Iterable<String> getPropertyKeys()\n+  @Override\n+  public boolean hasProperty(String key)\n+  {\n+    if (null == key)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        List<String> keys = new ArrayList<>();\n-        try\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            PropertyCursor properties = transaction.ambientPropertyCursor();\n-            singleNode( transaction, nodes );\n-            TokenRead token = transaction.tokenRead();\n-            nodes.properties( properties );\n-            while ( properties.next() )\n-            {\n-                keys.add( token.propertyKeyName( properties.propertyKey() ) );\n-            }\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n-        }\n-        return keys;\n+      return false;\n     }\n \n-    @Override\n-    public Map<String,Object> getProperties( String... keys )\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int propertyKey = transaction.tokenRead().propertyKey(key);\n+    if (propertyKey == TokenRead.NO_TOKEN)\n     {\n-        Objects.requireNonNull( keys, \"Properties keys should be not null array.\" );\n-\n-        if ( keys.length == 0 )\n-        {\n-            return Collections.emptyMap();\n-        }\n-\n-        KernelTransaction transaction = safeAcquireTransaction();\n-\n-        int itemsToReturn = keys.length;\n-        Map<String,Object> properties = new HashMap<>( itemsToReturn );\n-        TokenRead token = transaction.tokenRead();\n-\n-        //Find ids, note we are betting on that the number of keys\n-        //is small enough not to use a set here.\n-        int[] propertyIds = new int[itemsToReturn];\n-        for ( int i = 0; i < itemsToReturn; i++ )\n-        {\n-            String key = keys[i];\n-            if ( key == null )\n-            {\n-                throw new NullPointerException( String.format( \"Key %d was null\", i ) );\n-            }\n-            propertyIds[i] = token.propertyKey( key );\n-        }\n-\n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n-        singleNode( transaction, nodes );\n-        nodes.properties( propertyCursor );\n-        int propertiesToFind = itemsToReturn;\n-        while ( propertiesToFind > 0 && propertyCursor.next() )\n-        {\n-            //Do a linear check if this is a property we are interested in.\n-            int currentKey = propertyCursor.propertyKey();\n-            for ( int i = 0; i < itemsToReturn; i++ )\n-            {\n-                if ( propertyIds[i] == currentKey )\n-                {\n-                    properties.put( keys[i],\n-                            propertyCursor.propertyValue().asObjectCopy() );\n-                    propertiesToFind--;\n-                    break;\n-                }\n-            }\n-        }\n-        return properties;\n+      return false;\n     }\n \n-    @Override\n-    public Map<String,Object> getAllProperties()\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    PropertyCursor properties = transaction.ambientPropertyCursor();\n+    singleNode(transaction, nodes);\n+    nodes.properties(properties);\n+    while (properties.next())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        Map<String,Object> properties = new HashMap<>();\n-\n-        try\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            PropertyCursor propertyCursor = transaction.ambientPropertyCursor();\n-            TokenRead token = transaction.tokenRead();\n-            singleNode( transaction, nodes );\n-            nodes.properties( propertyCursor );\n-            while ( propertyCursor.next() )\n-            {\n-                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ),\n-                        propertyCursor.propertyValue().asObjectCopy() );\n-            }\n-        }\n-        catch ( PropertyKeyIdNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n-        }\n-        return properties;\n+      if (propertyKey == properties.propertyKey())\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public Object getProperty( String key ) throws NotFoundException\n+  private KernelTransaction safeAcquireTransaction()\n+  {\n+    KernelTransaction transaction = spi.kernelTransaction();\n+    if (transaction.isTerminated())\n     {\n-        if ( null == key )\n-        {\n-            throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n-        }\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n-        }\n-\n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        singleNode( transaction, nodes );\n-        nodes.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                Value value = properties.propertyValue();\n-                if ( value == Values.NO_VALUE )\n-                {\n-                    throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n-                }\n-                return value.asObjectCopy();\n-            }\n-        }\n-        throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n+      Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+      throw new TransactionTerminatedException(terminationReason);\n     }\n+    return transaction;\n+  }\n \n-    @Override\n-    public boolean hasProperty( String key )\n-    {\n-        if ( null == key )\n-        {\n-            return false;\n-        }\n+  public int compareTo(Object node)\n+  {\n+    Node n = (Node) node;\n+    return Long.compare(this.getId(), n.getId());\n+  }\n \n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int propertyKey = transaction.tokenRead().propertyKey( key );\n-        if ( propertyKey == TokenRead.NO_TOKEN )\n-        {\n-            return false;\n-        }\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    return o instanceof Node && this.getId() == ((Node) o).getId();\n+  }\n \n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        PropertyCursor properties = transaction.ambientPropertyCursor();\n-        singleNode( transaction, nodes );\n-        nodes.properties( properties );\n-        while ( properties.next() )\n-        {\n-            if ( propertyKey == properties.propertyKey() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return (int) ((nodeId >>> 32) ^ nodeId);\n+  }\n \n-    private KernelTransaction safeAcquireTransaction()\n-    {\n-        KernelTransaction transaction = spi.kernelTransaction();\n-        if ( transaction.isTerminated() )\n-        {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n-        }\n-        return transaction;\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"Node[\" + this.getId() + \"]\";\n+  }\n \n-    public int compareTo( Object node )\n+  @Override\n+  public Relationship createRelationshipTo(Node otherNode, RelationshipType type)\n+  {\n+    if (otherNode == null)\n     {\n-        Node n = (Node) node;\n-        return Long.compare( this.getId(), n.getId() );\n+      throw new IllegalArgumentException(\"Other node is null.\");\n     }\n+    // TODO: This is the checks we would like to do, but we have tests that expect to mix nodes...\n+    //if ( !(otherNode instanceof NodeProxy) || (((NodeProxy) otherNode).actions != actions) )\n+    //{\n+    //    throw new IllegalArgumentException( \"Nodes do not belong to same graph database.\" );\n+    //}\n \n-    @Override\n-    public boolean equals( Object o )\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        return o instanceof Node && this.getId() == ((Node) o).getId();\n-    }\n-\n-    @Override\n-    public int hashCode()\n+      int relationshipTypeId = transaction.tokenWrite().relationshipTypeGetOrCreateForName(type.name());\n+      long relationshipId = transaction.dataWrite()\n+          .relationshipCreate(nodeId, relationshipTypeId, otherNode.getId());\n+      return spi.newRelationshipProxy(relationshipId, nodeId, relationshipTypeId, otherNode.getId());\n+    } catch (IllegalTokenNameException e)\n+    {\n+      throw new IllegalArgumentException(e);\n+    } catch (EntityNotFoundException e)\n     {\n-        return (int) ((nodeId >>> 32) ^ nodeId);\n+      throw new NotFoundException(\"Node[\" + e.entityId() +\n+          \"] is deleted and cannot be used to create a relationship\");\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public void addLabel(Label label)\n+  {\n+    KernelTransaction transaction = spi.kernelTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        return \"Node[\" + this.getId() + \"]\";\n-    }\n+      transaction.dataWrite().nodeAddLabel(getId(),\n+          transaction.tokenWrite().labelGetOrCreateForName(label.name()));\n+    } catch (ConstraintValidationException e)\n+    {\n+      throw new ConstraintViolationException(\n+          e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+    } catch (IllegalTokenNameException e)\n+    {\n+      throw new ConstraintViolationException(format(\"Invalid label name '%s'.\", label.name()), e);\n+    } catch (TooManyLabelsException e)\n+    {\n+      throw new ConstraintViolationException(\"Unable to add label.\", e);\n+    } catch (EntityNotFoundException e)\n+    {\n+      throw new NotFoundException(\"No node with id \" + getId() + \" found.\", e);\n+    } catch (KernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    }\n+  }\n \n-    @Override\n-    public Relationship createRelationshipTo( Node otherNode, RelationshipType type )\n+  @Override\n+  public void removeLabel(Label label)\n+  {\n+    KernelTransaction transaction = spi.kernelTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      int labelId = transaction.tokenRead().nodeLabel(label.name());\n+      if (labelId != TokenRead.NO_TOKEN)\n+      {\n+        transaction.dataWrite().nodeRemoveLabel(getId(), labelId);\n+      }\n+    } catch (EntityNotFoundException e)\n     {\n-        if ( otherNode == null )\n-        {\n-            throw new IllegalArgumentException( \"Other node is null.\" );\n-        }\n-        // TODO: This is the checks we would like to do, but we have tests that expect to mix nodes...\n-        //if ( !(otherNode instanceof NodeProxy) || (((NodeProxy) otherNode).actions != actions) )\n-        //{\n-        //    throw new IllegalArgumentException( \"Nodes do not belong to same graph database.\" );\n-        //}\n-\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            int relationshipTypeId = transaction.tokenWrite().relationshipTypeGetOrCreateForName( type.name() );\n-            long relationshipId = transaction.dataWrite()\n-                    .relationshipCreate( nodeId, relationshipTypeId, otherNode.getId() );\n-            return spi.newRelationshipProxy( relationshipId, nodeId, relationshipTypeId, otherNode.getId() );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new IllegalArgumentException( e );\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( \"Node[\" + e.entityId() +\n-                                         \"] is deleted and cannot be used to create a relationship\" );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-    }\n+      throw new NotFoundException(\"No node with id \" + getId() + \" found.\", e);\n+    } catch (KernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    }\n+  }\n \n-    @Override\n-    public void addLabel( Label label )\n+  @Override\n+  public boolean hasLabel(Label label)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = spi.kernelTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            transaction.dataWrite().nodeAddLabel( getId(),\n-                    transaction.tokenWrite().labelGetOrCreateForName( label.name() ) );\n-        }\n-        catch ( ConstraintValidationException e )\n-        {\n-            throw new ConstraintViolationException(\n-                    e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-        }\n-        catch ( IllegalTokenNameException e )\n-        {\n-            throw new ConstraintViolationException( format( \"Invalid label name '%s'.\", label.name() ), e );\n-        }\n-        catch ( TooManyLabelsException e )\n-        {\n-            throw new ConstraintViolationException( \"Unable to add label.\", e );\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( \"No node with id \" + getId() + \" found.\", e );\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n+      int labelId = transaction.tokenRead().nodeLabel(label.name());\n+      if (labelId == NO_SUCH_LABEL)\n+      {\n+        return false;\n+      }\n+      transaction.dataRead().singleNode(nodeId, nodes);\n+      return nodes.next() && nodes.labels().contains(labelId);\n     }\n+  }\n \n-    @Override\n-    public void removeLabel( Label label )\n+  @Override\n+  public Iterable<Label> getLabels()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    NodeCursor nodes = transaction.ambientNodeCursor();\n+    try (Statement ignore = spi.statement())\n     {\n-        KernelTransaction transaction = spi.kernelTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            int labelId = transaction.tokenRead().nodeLabel( label.name() );\n-            if ( labelId != TokenRead.NO_TOKEN )\n-            {\n-                transaction.dataWrite().nodeRemoveLabel( getId(), labelId );\n-            }\n-        }\n-        catch ( EntityNotFoundException e )\n-        {\n-            throw new NotFoundException( \"No node with id \" + getId() + \" found.\", e );\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n+      singleNode(transaction, nodes);\n+      LabelSet labelSet = nodes.labels();\n+      TokenRead tokenRead = transaction.tokenRead();\n+      ArrayList<Label> list = new ArrayList<>(labelSet.numberOfLabels());\n+      for (int i = 0; i < labelSet.numberOfLabels(); i++)\n+      {\n+        list.add(label(tokenRead.nodeLabelName(labelSet.label(i))));\n+      }\n+      return list;\n+    } catch (LabelNotFoundKernelException e)\n+    {\n+      throw new IllegalStateException(\"Label retrieved through kernel API should exist.\", e);\n     }\n+  }\n+\n+  @Override\n+  public int getDegree()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n \n-    @Override\n-    public boolean hasLabel( Label label )\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            int labelId = transaction.tokenRead().nodeLabel( label.name() );\n-            if ( labelId == NO_SUCH_LABEL )\n-            {\n-                return false;\n-            }\n-            transaction.dataRead().singleNode( nodeId, nodes );\n-            return nodes.next() && nodes.labels().contains( labelId );\n-        }\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      singleNode(transaction, nodes);\n+\n+      return Nodes.countAll(nodes, transaction.cursors());\n     }\n+  }\n \n-    @Override\n-    public Iterable<Label> getLabels()\n-    {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        NodeCursor nodes = transaction.ambientNodeCursor();\n-        try ( Statement ignore = spi.statement() )\n-        {\n-            singleNode( transaction, nodes );\n-            LabelSet labelSet = nodes.labels();\n-            TokenRead tokenRead = transaction.tokenRead();\n-            ArrayList<Label> list = new ArrayList<>( labelSet.numberOfLabels() );\n-            for ( int i = 0; i < labelSet.numberOfLabels(); i++ )\n-            {\n-                list.add( label( tokenRead.nodeLabelName( labelSet.label( i ) ) ) );\n-            }\n-            return list;\n-        }\n-        catch ( LabelNotFoundKernelException e )\n-        {\n-            throw new IllegalStateException( \"Label retrieved through kernel API should exist.\", e );\n-        }\n+  @Override\n+  public int getDegree(RelationshipType type)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int typeId = transaction.tokenRead().relationshipType(type.name());\n+    if (typeId == NO_ID)\n+    {   // This type doesn't even exist. Return 0\n+      return 0;\n     }\n \n-    @Override\n-    public int getDegree()\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      singleNode(transaction, nodes);\n \n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            singleNode( transaction, nodes );\n-\n-            return Nodes.countAll( nodes, transaction.cursors() );\n-        }\n+      return Nodes.countAll(nodes, transaction.cursors(), typeId);\n     }\n+  }\n \n-    @Override\n-    public int getDegree( RelationshipType type )\n+  @Override\n+  public int getDegree(Direction direction)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int typeId = transaction.tokenRead().relationshipType( type.name() );\n-        if ( typeId == NO_ID )\n-        {   // This type doesn't even exist. Return 0\n-            return 0;\n-        }\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      singleNode(transaction, nodes);\n \n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            singleNode( transaction, nodes );\n+      switch (direction)\n+      {\n+        case OUTGOING:\n+          return Nodes.countOutgoing(nodes, transaction.cursors());\n+        case INCOMING:\n+          return Nodes.countIncoming(nodes, transaction.cursors());\n+        case BOTH:\n+          return Nodes.countAll(nodes, transaction.cursors());\n+        default:\n+          throw new IllegalStateException(\"Unknown direction \" + direction);\n+      }\n+    }\n+  }\n \n-            return Nodes.countAll( nodes, transaction.cursors(), typeId );\n-        }\n+  @Override\n+  public int getDegree(RelationshipType type, Direction direction)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    int typeId = transaction.tokenRead().relationshipType(type.name());\n+    if (typeId == NO_ID)\n+    {   // This type doesn't even exist. Return 0\n+      return 0;\n     }\n \n-    @Override\n-    public int getDegree( Direction direction )\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            singleNode( transaction, nodes );\n-\n-            switch ( direction )\n-            {\n-            case OUTGOING:\n-                return Nodes.countOutgoing( nodes, transaction.cursors() );\n-            case INCOMING:\n-                return Nodes.countIncoming( nodes, transaction.cursors() );\n-            case BOTH:\n-                return Nodes.countAll( nodes, transaction.cursors() );\n-            default:\n-                throw new IllegalStateException( \"Unknown direction \" + direction );\n-            }\n-        }\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      singleNode(transaction, nodes);\n+      switch (direction)\n+      {\n+        case OUTGOING:\n+          return Nodes.countOutgoing(nodes, transaction.cursors(), typeId);\n+        case INCOMING:\n+          return Nodes.countIncoming(nodes, transaction.cursors(), typeId);\n+        case BOTH:\n+          return Nodes.countAll(nodes, transaction.cursors(), typeId);\n+        default:\n+          throw new IllegalStateException(\"Unknown direction \" + direction);\n+      }\n     }\n+  }\n \n-    @Override\n-    public int getDegree( RelationshipType type, Direction direction )\n+  @Override\n+  public Iterable<RelationshipType> getRelationshipTypes()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction();\n+    try (RelationshipTraversalCursor relationships = transaction.cursors().allocateRelationshipTraversalCursor();\n+         Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        int typeId = transaction.tokenRead().relationshipType( type.name() );\n-        if ( typeId == NO_ID )\n-        {   // This type doesn't even exist. Return 0\n-            return 0;\n-        }\n-\n-        try ( Statement ignore = transaction.acquireStatement() )\n+      NodeCursor nodes = transaction.ambientNodeCursor();\n+      TokenRead tokenRead = transaction.tokenRead();\n+      singleNode(transaction, nodes);\n+      nodes.allRelationships(relationships);\n+      PrimitiveIntSet seen = Primitive.intSet();\n+      List<RelationshipType> types = new ArrayList<>();\n+      while (relationships.next())\n+      {\n+        int type = relationships.type();\n+        if (!seen.contains(type))\n         {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            singleNode( transaction, nodes );\n-            switch ( direction )\n-            {\n-            case OUTGOING:\n-                return Nodes.countOutgoing( nodes, transaction.cursors(), typeId );\n-            case INCOMING:\n-                return Nodes.countIncoming( nodes, transaction.cursors(), typeId );\n-            case BOTH:\n-                return Nodes.countAll( nodes, transaction.cursors(), typeId );\n-            default:\n-                throw new IllegalStateException( \"Unknown direction \" + direction );\n-            }\n+          types.add(RelationshipType.withName(tokenRead.relationshipTypeName(relationships.type())));\n+          seen.add(type);\n         }\n-    }\n+      }\n \n-    @Override\n-    public Iterable<RelationshipType> getRelationshipTypes()\n+      return types;\n+    } catch (KernelException e)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction();\n-        try ( RelationshipTraversalCursor relationships = transaction.cursors().allocateRelationshipTraversalCursor();\n-              Statement ignore = transaction.acquireStatement() )\n-        {\n-            NodeCursor nodes = transaction.ambientNodeCursor();\n-            TokenRead tokenRead = transaction.tokenRead();\n-            singleNode( transaction, nodes );\n-            nodes.allRelationships( relationships );\n-            PrimitiveIntSet seen = Primitive.intSet();\n-            List<RelationshipType> types = new ArrayList<>();\n-            while ( relationships.next() )\n-            {\n-                int type = relationships.type();\n-                if ( !seen.contains( type ) )\n-                {\n-                    types.add( RelationshipType.withName( tokenRead.relationshipTypeName( relationships.type() ) ) );\n-                    seen.add( type );\n-                }\n-            }\n-\n-            return types;\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new NotFoundException( \"Relationship name not found.\", e );\n-        }\n+      throw new NotFoundException(\"Relationship name not found.\", e);\n     }\n+  }\n \n-    private ResourceIterator<Relationship> getRelationshipSelectionIterator(\n-            KernelTransaction transaction, Direction direction, int[] typeIds )\n+  private ResourceIterator<Relationship> getRelationshipSelectionIterator(\n+      KernelTransaction transaction, Direction direction, int[] typeIds)\n+  {\n+    NodeCursor node = transaction.ambientNodeCursor();\n+    transaction.dataRead().singleNode(getId(), node);\n+    if (!node.next())\n     {\n-        NodeCursor node = transaction.ambientNodeCursor();\n-        transaction.dataRead().singleNode( getId(), node );\n-        if ( !node.next() )\n-        {\n-            throw new NotFoundException( format( \"Node %d not found\", nodeId ) );\n-        }\n-\n-        switch ( direction )\n-        {\n-        case OUTGOING:\n-            return outgoingIterator( transaction.cursors(), node, typeIds, this );\n-        case INCOMING:\n-            return incomingIterator( transaction.cursors(), node, typeIds, this );\n-        case BOTH:\n-            return allIterator( transaction.cursors(), node, typeIds, this );\n-        default:\n-            throw new IllegalStateException( \"Unknown direction \" + direction );\n-        }\n+      throw new NotFoundException(format(\"Node %d not found\", nodeId));\n     }\n \n-    private int[] relTypeIds( RelationshipType[] types, TokenRead token )\n+    switch (direction)\n     {\n-        int[] ids = new int[types.length];\n-        int outIndex = 0;\n-        for ( RelationshipType type : types )\n-        {\n-            int id = token.relationshipType( type.name() );\n-            if ( id != NO_SUCH_RELATIONSHIP_TYPE )\n-            {\n-                ids[outIndex++] = id;\n-            }\n-        }\n+      case OUTGOING:\n+        return outgoingIterator(transaction.cursors(), node, typeIds, this);\n+      case INCOMING:\n+        return incomingIterator(transaction.cursors(), node, typeIds, this);\n+      case BOTH:\n+        return allIterator(transaction.cursors(), node, typeIds, this);\n+      default:\n+        throw new IllegalStateException(\"Unknown direction \" + direction);\n+    }\n+  }\n \n-        if ( outIndex != ids.length )\n-        {\n-            // One or more relationship types do not exist, so we can exclude them right away.\n-            ids = Arrays.copyOf( ids, outIndex );\n-        }\n-        return ids;\n+  private int[] relTypeIds(RelationshipType[] types, TokenRead token)\n+  {\n+    int[] ids = new int[types.length];\n+    int outIndex = 0;\n+    for (RelationshipType type : types)\n+    {\n+      int id = token.relationshipType(type.name());\n+      if (id != NO_SUCH_RELATIONSHIP_TYPE)\n+      {\n+        ids[outIndex++] = id;\n+      }\n     }\n \n-    private void singleNode( KernelTransaction transaction, NodeCursor nodes )\n+    if (outIndex != ids.length)\n     {\n-        transaction.dataRead().singleNode( nodeId, nodes );\n-        if ( !nodes.next() )\n-        {\n-            throw new NotFoundException( new EntityNotFoundException( EntityType.NODE, nodeId ) );\n-        }\n+      // One or more relationship types do not exist, so we can exclude them right away.\n+      ids = Arrays.copyOf(ids, outIndex);\n     }\n+    return ids;\n+  }\n \n-    @Override\n-    public Relationship relationship( long id, long startNodeId, int typeId, long endNodeId )\n+  private void singleNode(KernelTransaction transaction, NodeCursor nodes)\n+  {\n+    transaction.dataRead().singleNode(nodeId, nodes);\n+    if (!nodes.next())\n     {\n-        return spi.newRelationshipProxy( id, startNodeId, typeId, endNodeId );\n+      throw new NotFoundException(new EntityNotFoundException(EntityType.NODE, nodeId));\n     }\n+  }\n+\n+  @Override\n+  public Relationship relationship(long id, long startNodeId, int typeId, long endNodeId)\n+  {\n+    return spi.newRelationshipProxy(id, startNodeId, typeId, endNodeId);\n+  }\n }\n",
            "diff_size": 1014
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "520",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4424/NodeProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4424/NodeProxy.java\nindex e71952b07f2..d1a23f52f2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4424/NodeProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4424/NodeProxy.java\n@@ -105,9 +105,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             boolean deleted = transaction.dataWrite().nodeDelete( getId() );\n             if ( !deleted )\n             {\n-                throw new NotFoundException( \"Unable to delete Node[\" + nodeId +\n-                                             \"] since it has already been deleted.\" );\n-            }\n+                throw new NotFoundException( \"Unable to delete Node[\" + nodeId + \"] since it has already been deleted.\" );\n+    }\n         }\n         catch ( InvalidTransactionTypeKernelException e )\n         {\n@@ -115,9 +114,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the node: \"\n-                                             + e.getMessage(), e );\n-        }\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while deleting the node: \" + e.getMessage(), e );\n+    }\n     }\n \n     @Override\n@@ -153,8 +151,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         return innerGetRelationships( transaction, direction, typeIds );\n     }\n \n-    private ResourceIterable<Relationship> innerGetRelationships(\n-            KernelTransaction transaction, final Direction direction, int[] typeIds )\n+    private ResourceIterable<Relationship> innerGetRelationships( KernelTransaction transaction, final Direction direction, int[] typeIds )\n     {\n         return () -> getRelationshipSelectionIterator( transaction, direction, typeIds );\n     }\n@@ -194,8 +191,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n \n     private boolean innerHasRelationships( final KernelTransaction transaction, final Direction direction, int[] typeIds )\n     {\n-        try ( ResourceIterator<Relationship> iterator =\n-                getRelationshipSelectionIterator( transaction, direction, typeIds ) )\n+        try ( ResourceIterator<Relationship> iterator = getRelationshipSelectionIterator( transaction, direction, typeIds ) )\n         {\n             return iterator.hasNext();\n         }\n@@ -217,9 +213,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n                 Relationship other = rels.next();\n                 if ( !other.equals( rel ) )\n                 {\n-                    throw new NotFoundException( \"More than one relationship[\" +\n-                                                 type + \", \" + dir + \"] found for \" + this );\n-                }\n+                    throw new NotFoundException( \"More than one relationship[\" + type + \", \" + dir + \"] found for \" + this );\n+    }\n             }\n             return rel;\n         }\n@@ -245,9 +240,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n         catch ( ConstraintValidationException e )\n         {\n-            throw new ConstraintViolationException(\n-                    e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-        }\n+            throw new ConstraintViolationException( e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n+    }\n         catch ( IllegalArgumentException e )\n         {\n             // Trying to set an illegal value is a critical error - fail this transaction\n@@ -264,9 +258,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \"\n-                                             + e.getMessage(), e );\n-        }\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while setting property: \" + e.getMessage(), e );\n+    }\n         catch ( KernelException e )\n         {\n             throw new ConstraintViolationException( e.getMessage(), e );\n@@ -296,9 +289,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n         catch ( AutoIndexingKernelException e )\n         {\n-            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \"\n-                                             + e.getMessage(), e );\n-        }\n+            throw new IllegalStateException( \"Auto indexing encountered a failure while removing property: \" + e.getMessage(), e );\n+    }\n     }\n \n     @Override\n@@ -308,7 +300,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n         }\n-        KernelTransaction transaction = safeAcquireTransaction();\n+\n+KernelTransaction transaction = safeAcquireTransaction();\n         NodeCursor nodes = transaction.ambientNodeCursor();\n         PropertyCursor properties = transaction.ambientPropertyCursor();\n         int propertyKey = transaction.tokenRead().propertyKey( key );\n@@ -316,7 +309,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             return defaultValue;\n         }\n-        singleNode( transaction, nodes );\n+\n+singleNode( transaction, nodes );\n         nodes.properties( properties );\n         while ( properties.next() )\n         {\n@@ -350,15 +344,15 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n         }\n-        return keys;\n+\n+return keys;\n     }\n \n     @Override\n     public Map<String,Object> getProperties( String... keys )\n     {\n         Objects.requireNonNull( keys, \"Properties keys should be not null array.\" );\n-\n-        if ( keys.length == 0 )\n+if ( keys.length == 0 )\n         {\n             return Collections.emptyMap();\n         }\n@@ -379,7 +373,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             {\n                 throw new NullPointerException( String.format( \"Key %d was null\", i ) );\n             }\n-            propertyIds[i] = token.propertyKey( key );\n+\n+propertyIds[i] = token.propertyKey( key );\n         }\n \n         NodeCursor nodes = transaction.ambientNodeCursor();\n@@ -397,7 +392,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n                 {\n                     properties.put( keys[i],\n                             propertyCursor.propertyValue().asObjectCopy() );\n-                    propertiesToFind--;\n+propertiesToFind--;\n                     break;\n                 }\n             }\n@@ -420,15 +415,15 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             nodes.properties( propertyCursor );\n             while ( propertyCursor.next() )\n             {\n-                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ),\n-                        propertyCursor.propertyValue().asObjectCopy() );\n-            }\n+                properties.put( token.propertyKeyName( propertyCursor.propertyKey() ), propertyCursor.propertyValue().asObjectCopy() );\n+    }\n         }\n         catch ( PropertyKeyIdNotFoundKernelException e )\n         {\n             throw new IllegalStateException( \"Property key retrieved through kernel API should exist.\", e );\n         }\n-        return properties;\n+\n+return properties;\n     }\n \n     @Override\n@@ -438,7 +433,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             throw new IllegalArgumentException( \"(null) property key is not allowed\" );\n         }\n-        KernelTransaction transaction = safeAcquireTransaction();\n+\n+KernelTransaction transaction = safeAcquireTransaction();\n         int propertyKey = transaction.tokenRead().propertyKey( key );\n         if ( propertyKey == TokenRead.NO_TOKEN )\n         {\n@@ -458,7 +454,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n                 {\n                     throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n                 }\n-                return value.asObjectCopy();\n+\n+return value.asObjectCopy();\n             }\n         }\n         throw new NotFoundException( format( \"No such property, '%s'.\", key ) );\n@@ -501,7 +498,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n             throw new TransactionTerminatedException( terminationReason );\n         }\n-        return transaction;\n+\n+return transaction;\n     }\n \n     public int compareTo( Object node )\n@@ -519,7 +517,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n     @Override\n     public int hashCode()\n     {\n-        return (int) ((nodeId >>> 32) ^ nodeId);\n+        return ( int) ((nodeId >>> 32) ^ nodeId);\n     }\n \n     @Override\n@@ -545,9 +543,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         try ( Statement ignore = transaction.acquireStatement() )\n         {\n             int relationshipTypeId = transaction.tokenWrite().relationshipTypeGetOrCreateForName( type.name() );\n-            long relationshipId = transaction.dataWrite()\n-                    .relationshipCreate( nodeId, relationshipTypeId, otherNode.getId() );\n-            return spi.newRelationshipProxy( relationshipId, nodeId, relationshipTypeId, otherNode.getId() );\n+            long relationshipId = transaction.dataWrite().relationshipCreate( nodeId, relationshipTypeId, otherNode.getId() );\n+return spi.newRelationshipProxy( relationshipId, nodeId, relationshipTypeId, otherNode.getId() );\n         }\n         catch ( IllegalTokenNameException e )\n         {\n@@ -555,9 +552,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n         catch ( EntityNotFoundException e )\n         {\n-            throw new NotFoundException( \"Node[\" + e.entityId() +\n-                                         \"] is deleted and cannot be used to create a relationship\" );\n-        }\n+            throw new NotFoundException( \"Node[\" + e.entityId() + \"] is deleted and cannot be used to create a relationship\" );\n+    }\n         catch ( InvalidTransactionTypeKernelException e )\n         {\n             throw new ConstraintViolationException( e.getMessage(), e );\n@@ -570,14 +566,12 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         KernelTransaction transaction = spi.kernelTransaction();\n         try ( Statement ignore = transaction.acquireStatement() )\n         {\n-            transaction.dataWrite().nodeAddLabel( getId(),\n-                    transaction.tokenWrite().labelGetOrCreateForName( label.name() ) );\n-        }\n+            transaction.dataWrite().nodeAddLabel( getId(), transaction.tokenWrite().labelGetOrCreateForName( label.name() ) );\n+    }\n         catch ( ConstraintValidationException e )\n         {\n-            throw new ConstraintViolationException(\n-                    e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-        }\n+            throw new ConstraintViolationException( e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n+    }\n         catch ( IllegalTokenNameException e )\n         {\n             throw new ConstraintViolationException( format( \"Invalid label name '%s'.\", label.name() ), e );\n@@ -650,7 +644,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             {\n                 list.add( label( tokenRead.nodeLabelName( labelSet.label( i ) ) ) );\n             }\n-            return list;\n+\n+return list;\n         }\n         catch ( LabelNotFoundKernelException e )\n         {\n@@ -667,8 +662,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             NodeCursor nodes = transaction.ambientNodeCursor();\n             singleNode( transaction, nodes );\n-\n-            return Nodes.countAll( nodes, transaction.cursors() );\n+return Nodes.countAll( nodes, transaction.cursors() );\n         }\n     }\n \n@@ -678,7 +672,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         KernelTransaction transaction = safeAcquireTransaction();\n         int typeId = transaction.tokenRead().relationshipType( type.name() );\n         if ( typeId == NO_ID )\n-        {   // This type doesn't even exist. Return 0\n+        {\n+    // This type doesn't even exist. Return 0\n             return 0;\n         }\n \n@@ -686,8 +681,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             NodeCursor nodes = transaction.ambientNodeCursor();\n             singleNode( transaction, nodes );\n-\n-            return Nodes.countAll( nodes, transaction.cursors(), typeId );\n+return Nodes.countAll( nodes, transaction.cursors(), typeId );\n         }\n     }\n \n@@ -699,8 +693,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         {\n             NodeCursor nodes = transaction.ambientNodeCursor();\n             singleNode( transaction, nodes );\n-\n-            switch ( direction )\n+switch ( direction )\n             {\n             case OUTGOING:\n                 return Nodes.countOutgoing( nodes, transaction.cursors() );\n@@ -720,7 +713,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         KernelTransaction transaction = safeAcquireTransaction();\n         int typeId = transaction.tokenRead().relationshipType( type.name() );\n         if ( typeId == NO_ID )\n-        {   // This type doesn't even exist. Return 0\n+        {\n+    // This type doesn't even exist. Return 0\n             return 0;\n         }\n \n@@ -747,8 +741,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n     {\n         KernelTransaction transaction = safeAcquireTransaction();\n         try ( RelationshipTraversalCursor relationships = transaction.cursors().allocateRelationshipTraversalCursor();\n-              Statement ignore = transaction.acquireStatement() )\n-        {\n+Statement ignore = transaction.acquireStatement() )\n+{\n             NodeCursor nodes = transaction.ambientNodeCursor();\n             TokenRead tokenRead = transaction.tokenRead();\n             singleNode( transaction, nodes );\n@@ -773,8 +767,7 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n         }\n     }\n \n-    private ResourceIterator<Relationship> getRelationshipSelectionIterator(\n-            KernelTransaction transaction, Direction direction, int[] typeIds )\n+    private ResourceIterator<Relationship> getRelationshipSelectionIterator( KernelTransaction transaction, Direction direction, int[] typeIds )\n     {\n         NodeCursor node = transaction.ambientNodeCursor();\n         transaction.dataRead().singleNode( getId(), node );\n@@ -814,7 +807,8 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n             // One or more relationship types do not exist, so we can exclude them right away.\n             ids = Arrays.copyOf( ids, outIndex );\n         }\n-        return ids;\n+\n+return ids;\n     }\n \n     private void singleNode( KernelTransaction transaction, NodeCursor nodes )\n@@ -831,4 +825,4 @@ public class NodeProxy implements Node, RelationshipFactory<Relationship>\n     {\n         return spi.newRelationshipProxy( id, startNodeId, typeId, endNodeId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
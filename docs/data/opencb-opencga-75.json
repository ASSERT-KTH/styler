{
    "project_name": "opencb-opencga",
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "43",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 144).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "//                FastqcWrapperAnalysis fastqc = new FastqcWrapperAnalysis();\n//\n//                fastqc.setUp(appHome, getVariantStorageManager().getCatalogManager(), storageEngineFactory, params, getOutDir()), getToken());\n//\n//                fastqc.setStudy(getStudyId());\n//",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/75/SampleQcLocalAnalysisExecutor.java\nindex e6a958fb0b8..c6f1d3b1d0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/75/SampleQcLocalAnalysisExecutor.java\n@@ -40,9 +40,9 @@ public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor impl\n //\n //                FastqcWrapperAnalysis fastqc = new FastqcWrapperAnalysis();\n //\n-//                fastqc.setUp(appHome, getVariantStorageManager().getCatalogManager(), storageEngineFactory, params, getOutDir()), getToken());\n //\n //                fastqc.setStudy(getStudyId());\n+//                fastqc.setStudy(getStudyId());\n //\n //                fastqc.setFile();\n //\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/75/SampleQcLocalAnalysisExecutor.java\nindex e6a958fb0b8..60a7ee3eaa3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/75/SampleQcLocalAnalysisExecutor.java\n@@ -21,15 +21,15 @@ import org.opencb.opencga.core.exceptions.ToolException;\n import org.opencb.opencga.core.tools.annotations.ToolExecutor;\n import org.opencb.opencga.core.tools.variant.SampleQcAnalysisExecutor;\n \n-@ToolExecutor(id=\"opencga-local\", tool = SampleQcAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n-        source = ToolExecutor.Source.STORAGE)\n+@ToolExecutor(id = \"opencga-local\", tool = SampleQcAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n+    source = ToolExecutor.Source.STORAGE)\n public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor implements StorageToolExecutor {\n \n-    @Override\n-    public void run() throws ToolException {\n-        switch (getQc()) {\n+  @Override\n+  public void run() throws ToolException {\n+    switch (getQc()) {\n \n-            case FASTQC: {\n+      case FASTQC: {\n \n //                // Get managers\n //                FastqcWrapperAnalysis fastqc = new FastqcWrapperAnalysis();\n@@ -60,12 +60,12 @@ public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor impl\n //\n //                // Set relatedness report\n //                getReport().setMendelianErrorReport(mendelianErrorReport);\n-                break;\n-            }\n+        break;\n+      }\n \n-            default: {\n-                throw new ToolException(\"Unknown genetic check: \" + getQc());\n-            }\n-        }\n+      default: {\n+        throw new ToolException(\"Unknown genetic check: \" + getQc());\n+      }\n     }\n+  }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/75/SampleQcLocalAnalysisExecutor.java\nindex e6a958fb0b8..2918a46f308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/75/SampleQcLocalAnalysisExecutor.java\n@@ -21,17 +21,15 @@ import org.opencb.opencga.core.exceptions.ToolException;\n import org.opencb.opencga.core.tools.annotations.ToolExecutor;\n import org.opencb.opencga.core.tools.variant.SampleQcAnalysisExecutor;\n \n-@ToolExecutor(id=\"opencga-local\", tool = SampleQcAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n+@ToolExecutor(id = \"opencga-local\", tool = SampleQcAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n         source = ToolExecutor.Source.STORAGE)\n public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor implements StorageToolExecutor {\n \n     @Override\n     public void run() throws ToolException {\n         switch (getQc()) {\n-\n-            case FASTQC: {\n-\n-//                // Get managers\n+    case FASTQC: {\n+                //                // Get managers\n //                FastqcWrapperAnalysis fastqc = new FastqcWrapperAnalysis();\n //\n //                AlignmentCommandOptions.FastqcCommandOptions cliOptions = alignmentCommandOptions.fastqcCommandOptions;\n@@ -68,4 +66,4 @@ public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor impl\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/75/SampleQcLocalAnalysisExecutor.java\nindex e6a958fb0b8..c6f1d3b1d0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/75/SampleQcLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/75/SampleQcLocalAnalysisExecutor.java\n@@ -40,9 +40,9 @@ public class SampleQcLocalAnalysisExecutor extends SampleQcAnalysisExecutor impl\n //\n //                FastqcWrapperAnalysis fastqc = new FastqcWrapperAnalysis();\n //\n-//                fastqc.setUp(appHome, getVariantStorageManager().getCatalogManager(), storageEngineFactory, params, getOutDir()), getToken());\n //\n //                fastqc.setStudy(getStudyId());\n+//                fastqc.setStudy(getStudyId());\n //\n //                fastqc.setFile();\n //\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
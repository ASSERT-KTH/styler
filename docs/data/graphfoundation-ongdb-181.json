{
    "project_name": "graphfoundation-ongdb",
    "error_id": "181",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/181/RadixCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/181/RadixCalculator.java\nindex 119ec11d1b7..cb88ec32826 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/181/RadixCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/181/RadixCalculator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import org.apache.commons.lang3.mutable.MutableInt;\n@@ -26,46 +27,46 @@ import org.apache.commons.lang3.mutable.MutableInt;\n  */\n public abstract class RadixCalculator\n {\n-    protected static final int RADIX_BITS = 24;\n-    protected static final long LENGTH_BITS = 0xFE000000_00000000L;\n-    protected static final int LENGTH_MASK = (int) (LENGTH_BITS >>> (64 - RADIX_BITS));\n-    protected static final int HASHCODE_MASK = (int) (0x00FFFF00_00000000L >>> (64 - RADIX_BITS));\n+  protected static final int RADIX_BITS = 24;\n+  protected static final long LENGTH_BITS = 0xFE000000_00000000L;\n+  protected static final int LENGTH_MASK = (int) (LENGTH_BITS >>> (64 - RADIX_BITS));\n+  protected static final int HASHCODE_MASK = (int) (0x00FFFF00_00000000L >>> (64 - RADIX_BITS));\n \n-    public abstract int radixOf( long value );\n+  public abstract int radixOf(long value);\n \n-    /**\n-     * Radix optimized for strings encoded into long by {@link StringEncoder}.\n-     */\n-    public static class String extends RadixCalculator\n+  /**\n+   * Radix optimized for strings encoded into long by {@link StringEncoder}.\n+   */\n+  public static class String extends RadixCalculator\n+  {\n+    @Override\n+    public int radixOf(long value)\n     {\n-        @Override\n-        public int radixOf( long value )\n-        {\n-            int index = (int) (value >>> (64 - RADIX_BITS));\n-            index = ((index & LENGTH_MASK) >>> 1) | (index & HASHCODE_MASK);\n-            return index;\n-        }\n+      int index = (int) (value >>> (64 - RADIX_BITS));\n+      index = ((index & LENGTH_MASK) >>> 1) | (index & HASHCODE_MASK);\n+      return index;\n     }\n+  }\n \n-    /**\n-     * Radix optimized for strings encoded into long by {@link LongEncoder}.\n-     */\n-    public static class Long extends RadixCalculator\n-    {\n-        private final MutableInt radixShift;\n+  /**\n+   * Radix optimized for strings encoded into long by {@link LongEncoder}.\n+   */\n+  public static class Long extends RadixCalculator\n+  {\n+    private final MutableInt radixShift;\n \n-        public Long( MutableInt radixShift )\n-        {\n-            this.radixShift = radixShift;\n-        }\n+    public Long(MutableInt radixShift)\n+    {\n+      this.radixShift = radixShift;\n+    }\n \n-        @Override\n-        public int radixOf( long value )\n-        {\n-            long val1 = value & ~LENGTH_BITS;\n-            val1 = val1 >>> radixShift.intValue();\n-            int index = (int) val1;\n-            return index;\n-        }\n+    @Override\n+    public int radixOf(long value)\n+    {\n+      long val1 = value & ~LENGTH_BITS;\n+      val1 = val1 >>> radixShift.intValue();\n+      int index = (int) val1;\n+      return index;\n     }\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
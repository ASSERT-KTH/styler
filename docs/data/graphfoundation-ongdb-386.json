{
    "project_name": "graphfoundation-ongdb",
    "error_id": "386",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/386/SwitchOverRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/386/SwitchOverRequest.java\nindex b7957b4b65e..10314e31938 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/386/SwitchOverRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/386/SwitchOverRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import java.util.List;\n@@ -26,64 +27,64 @@ import org.neo4j.helpers.collection.Pair;\n \n public class SwitchOverRequest implements ServerMessage\n {\n-    private final String protocolName;\n-    private final Integer version;\n-    private final List<Pair<String,String>> modifierProtocols;\n+  private final String protocolName;\n+  private final Integer version;\n+  private final List<Pair<String, String>> modifierProtocols;\n \n-    public SwitchOverRequest( String applicationProtocolName, int applicationProtocolVersion, List<Pair<String,String>> modifierProtocols )\n-    {\n-        this.protocolName = applicationProtocolName;\n-        this.version = applicationProtocolVersion;\n-        this.modifierProtocols = modifierProtocols;\n-    }\n+  public SwitchOverRequest(String applicationProtocolName, int applicationProtocolVersion, List<Pair<String, String>> modifierProtocols)\n+  {\n+    this.protocolName = applicationProtocolName;\n+    this.version = applicationProtocolVersion;\n+    this.modifierProtocols = modifierProtocols;\n+  }\n \n-    @Override\n-    public void dispatch( ServerMessageHandler handler )\n-    {\n-        handler.handle( this );\n-    }\n+  @Override\n+  public void dispatch(ServerMessageHandler handler)\n+  {\n+    handler.handle(this);\n+  }\n \n-    public String protocolName()\n-    {\n-        return protocolName;\n-    }\n+  public String protocolName()\n+  {\n+    return protocolName;\n+  }\n \n-    public List<Pair<String,String>> modifierProtocols()\n-    {\n-        return modifierProtocols;\n-    }\n+  public List<Pair<String, String>> modifierProtocols()\n+  {\n+    return modifierProtocols;\n+  }\n \n-    public int version()\n-    {\n-        return version;\n-    }\n+  public int version()\n+  {\n+    return version;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        SwitchOverRequest that = (SwitchOverRequest) o;\n-        return Objects.equals( version, that.version ) &&\n-                Objects.equals( protocolName, that.protocolName ) &&\n-                Objects.equals( modifierProtocols, that.modifierProtocols );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( protocolName, version, modifierProtocols );\n+      return false;\n     }\n+    SwitchOverRequest that = (SwitchOverRequest) o;\n+    return Objects.equals(version, that.version) &&\n+        Objects.equals(protocolName, that.protocolName) &&\n+        Objects.equals(modifierProtocols, that.modifierProtocols);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"SwitchOverRequest{\" + \"protocolName='\" + protocolName + '\\'' + \", version=\" + version + \", modifierProtocols=\" + modifierProtocols + '}';\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(protocolName, version, modifierProtocols);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"SwitchOverRequest{\" + \"protocolName='\" + protocolName + '\\'' + \", version=\" + version + \", modifierProtocols=\" + modifierProtocols + '}';\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/386/SwitchOverRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/386/SwitchOverRequest.java\nindex b7957b4b65e..886454c65d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/386/SwitchOverRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/386/SwitchOverRequest.java\n@@ -65,13 +65,14 @@ public class SwitchOverRequest implements ServerMessage\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        SwitchOverRequest that = (SwitchOverRequest) o;\n-        return Objects.equals( version, that.version ) &&\n-                Objects.equals( protocolName, that.protocolName ) &&\n+\n+SwitchOverRequest that = (SwitchOverRequest) o;\n+        return Objects.equals( version, that.version ) &&Objects.equals( protocolName, that.protocolName ) &&\n                 Objects.equals( modifierProtocols, that.modifierProtocols );\n     }\n \n@@ -86,4 +87,4 @@ public class SwitchOverRequest implements ServerMessage\n     {\n         return \"SwitchOverRequest{\" + \"protocolName='\" + protocolName + '\\'' + \", version=\" + version + \", modifierProtocols=\" + modifierProtocols + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
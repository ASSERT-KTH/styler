{
    "project_name": "cloudera-director-sdk",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/41/ExternalDatabaseServerUsage.java\nindex f1609285552..971a4007743 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/41/ExternalDatabaseServerUsage.java\n@@ -28,7 +28,9 @@ public class ExternalDatabaseServerUsage {\n   private Map<String, List<String>> clusters;\n   /* Deployments that use the specified database */\n   private Set<String> deployments;\n-  public ExternalDatabaseServerUsage() { }\n+\n+  public ExternalDatabaseServerUsage() {\n+  }\n \n   private ExternalDatabaseServerUsage(Map<String, List<String>> clusters, Set<String> deployments) {\n     this.clusters = clusters;\n@@ -65,13 +67,15 @@ public class ExternalDatabaseServerUsage {\n \n   public ExternalDatabaseServerUsageBuilder toBuilder() {\n     return builder()\n-      .clusters(clusters)\n-      .deployments(deployments)\n-      ;\n+        .clusters(clusters)\n+        .deployments(deployments)\n+        ;\n   }\n+\n   public Map<String, List<String>> getClusters() {\n     return clusters;\n   }\n+\n   public void setClusters(Map<String, List<String>> clusters) {\n     this.clusters = clusters;\n   }\n@@ -79,23 +83,32 @@ public class ExternalDatabaseServerUsage {\n   public Set<String> getDeployments() {\n     return deployments;\n   }\n+\n   public void setDeployments(Set<String> deployments) {\n     this.deployments = deployments;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     ExternalDatabaseServerUsage other = (ExternalDatabaseServerUsage) o; // NOPMD\n \n     if (clusters != null ?\n         !clusters.equals(other.clusters) :\n-        other.clusters != null) return false;\n+        other.clusters != null) {\n+      return false;\n+    }\n     if (deployments != null ?\n         !deployments.equals(other.deployments) :\n-        other.deployments != null) return false;\n+        other.deployments != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -108,7 +121,7 @@ public class ExternalDatabaseServerUsage {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabaseServerUsage {\" + newLine);\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "81",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/41/ExternalDatabaseServerUsage.java\nindex f1609285552..3c1af3b764c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/41/ExternalDatabaseServerUsage.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v7.model;\n@@ -28,7 +13,8 @@ public class ExternalDatabaseServerUsage {\n   private Map<String, List<String>> clusters;\n   /* Deployments that use the specified database */\n   private Set<String> deployments;\n-  public ExternalDatabaseServerUsage() { }\n+\n+public ExternalDatabaseServerUsage() { }\n \n   private ExternalDatabaseServerUsage(Map<String, List<String>> clusters, Set<String> deployments) {\n     this.clusters = clusters;\n@@ -45,7 +31,8 @@ public class ExternalDatabaseServerUsage {\n   }\n \n   public static class ExternalDatabaseServerUsageBuilder {\n-    private Map<String, List<String>> clusters = new HashMap<String, List<String>>();\n+\n+  private Map<String, List<String>> clusters = new HashMap<String, List<String>>();\n     private Set<String> deployments = null;\n \n     public ExternalDatabaseServerUsageBuilder clusters(Map<String, List<String>> clusters) {\n@@ -64,10 +51,8 @@ public class ExternalDatabaseServerUsage {\n   }\n \n   public ExternalDatabaseServerUsageBuilder toBuilder() {\n-    return builder()\n-      .clusters(clusters)\n-      .deployments(deployments)\n-      ;\n+    return builder().clusters(clusters)\n+      .deployments(deployments);\n   }\n   public Map<String, List<String>> getClusters() {\n     return clusters;\n@@ -86,16 +71,16 @@ public class ExternalDatabaseServerUsage {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n \n-    ExternalDatabaseServerUsage other = (ExternalDatabaseServerUsage) o; // NOPMD\n+    ExternalDatabaseServerUsage other = (ExternalDatabaseServerUsage) o;\n \n-    if (clusters != null ?\n-        !clusters.equals(other.clusters) :\n-        other.clusters != null) return false;\n-    if (deployments != null ?\n-        !deployments.equals(other.deployments) :\n-        other.deployments != null) return false;\n+// NOPMD\n+\n+    if (clusters != null ?!clusters.equals(other.clusters) : other.clusters != null) return false;\n+\n+if (deployments != null ?!deployments.equals(other.deployments) : other.deployments != null) return false;\n     return true;\n   }\n \n@@ -108,7 +93,7 @@ public class ExternalDatabaseServerUsage {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabaseServerUsage {\" + newLine);\n@@ -117,5 +102,4 @@ public class ExternalDatabaseServerUsage {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "36",
                    "column": "40",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "36",
                    "column": "41",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "69",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "105",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/41/ExternalDatabaseServerUsage.java\nindex f1609285552..59c2bc962c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/41/ExternalDatabaseServerUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/41/ExternalDatabaseServerUsage.java\n@@ -23,29 +23,37 @@ import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n+\n public class ExternalDatabaseServerUsage {\n   /* Clusters that use the specified database */\n+\n   private Map<String, List<String>> clusters;\n   /* Deployments that use the specified database */\n+\n   private Set<String> deployments;\n-  public ExternalDatabaseServerUsage() { }\n+\n+\n+  public ExternalDatabaseServerUsage() {}\n+\n \n   private ExternalDatabaseServerUsage(Map<String, List<String>> clusters, Set<String> deployments) {\n-    this.clusters = clusters;\n-    this.deployments = deployments;\n-  }\n+                                                                                                   this.clusters = clusters;\n+                                                                                                   this.deployments = deployments;\n+                                         }\n \n   private ExternalDatabaseServerUsage(ExternalDatabaseServerUsageBuilder builder) {\n-    this.clusters = builder.clusters;\n-    this.deployments = builder.deployments;\n-  }\n+                                                                                  this.clusters = builder.clusters;\n+                                                                                  this.deployments = builder.deployments;\n+                                         }\n \n   public static ExternalDatabaseServerUsageBuilder builder() {\n     return new ExternalDatabaseServerUsageBuilder();\n   }\n \n   public static class ExternalDatabaseServerUsageBuilder {\n+\n     private Map<String, List<String>> clusters = new HashMap<String, List<String>>();\n+\n     private Set<String> deployments = null;\n \n     public ExternalDatabaseServerUsageBuilder clusters(Map<String, List<String>> clusters) {\n@@ -66,12 +74,13 @@ public class ExternalDatabaseServerUsage {\n   public ExternalDatabaseServerUsageBuilder toBuilder() {\n     return builder()\n       .clusters(clusters)\n-      .deployments(deployments)\n-      ;\n+      .deployments(deployments);\n   }\n+\n   public Map<String, List<String>> getClusters() {\n     return clusters;\n   }\n+\n   public void setClusters(Map<String, List<String>> clusters) {\n     this.clusters = clusters;\n   }\n@@ -79,43 +88,46 @@ public class ExternalDatabaseServerUsage {\n   public Set<String> getDeployments() {\n     return deployments;\n   }\n+\n   public void setDeployments(Set<String> deployments) {\n     this.deployments = deployments;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    ExternalDatabaseServerUsage other = (ExternalDatabaseServerUsage) o; // NOPMD\n+    ExternalDatabaseServerUsage other = (ExternalDatabaseServerUsage)o; // NOPMD\n \n-    if (clusters != null ?\n-        !clusters.equals(other.clusters) :\n-        other.clusters != null) return false;\n-    if (deployments != null ?\n-        !deployments.equals(other.deployments) :\n-        other.deployments != null) return false;\n+    if (clusters != null?!clusters.equals(other.clusters): other.clusters != null) return false;\n+    if (deployments != null?!deployments.equals(other.deployments): other.deployments != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (clusters != null ? clusters.hashCode() : 0);\n-    result = 31 * result + (deployments != null ? deployments.hashCode() : 0);\n+    result = 31*result + (clusters != null? clusters.hashCode():0);\n+    result = 31*result + (deployments != null? deployments.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabaseServerUsage {\" + newLine);\n-    sb.append(\"  clusters: \").append(clusters).append(newLine);\n-    sb.append(\"  deployments: \").append(deployments).append(newLine);\n+    sb.append(\"  clusters: \")\n+      .append(clusters).append(newLine);\n+    sb.append(\"  deployments: \")\n+      .append(deployments).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "511",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/511/DefaultIndexProviderMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/511/DefaultIndexProviderMap.java\nindex 37efa1a1ee3..ceb2e31129d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/511/DefaultIndexProviderMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/511/DefaultIndexProviderMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import java.util.Arrays;\n@@ -34,92 +35,92 @@ import org.neo4j.kernel.impl.api.index.IndexProviderNotFoundException;\n \n public class DefaultIndexProviderMap implements IndexProviderMap\n {\n-    private final IndexProvider defaultIndexProvider;\n-    private final Map<IndexProvider.Descriptor,IndexProvider> indexProviders = new HashMap<>();\n-    private final Map<String,IndexProvider> indexProvidersByName = new HashMap<>();\n+  private final IndexProvider defaultIndexProvider;\n+  private final Map<IndexProvider.Descriptor, IndexProvider> indexProviders = new HashMap<>();\n+  private final Map<String, IndexProvider> indexProvidersByName = new HashMap<>();\n \n-    public DefaultIndexProviderMap( IndexProvider defaultIndexProvider )\n-    {\n-        this( defaultIndexProvider, Collections.emptyList() );\n-    }\n+  public DefaultIndexProviderMap(IndexProvider defaultIndexProvider)\n+  {\n+    this(defaultIndexProvider, Collections.emptyList());\n+  }\n \n-    public DefaultIndexProviderMap( IndexProvider defaultIndexProvider,\n-                                    Iterable<IndexProvider> additionalIndexProviders )\n+  public DefaultIndexProviderMap(IndexProvider defaultIndexProvider,\n+                                 Iterable<IndexProvider> additionalIndexProviders)\n+  {\n+    this.defaultIndexProvider = defaultIndexProvider;\n+    put(defaultIndexProvider.getProviderDescriptor(), defaultIndexProvider);\n+    for (IndexProvider provider : additionalIndexProviders)\n     {\n-        this.defaultIndexProvider = defaultIndexProvider;\n-        put( defaultIndexProvider.getProviderDescriptor(), defaultIndexProvider );\n-        for ( IndexProvider provider : additionalIndexProviders )\n-        {\n-            Descriptor providerDescriptor = provider.getProviderDescriptor();\n-            Objects.requireNonNull( providerDescriptor );\n-            IndexProvider existing = put( providerDescriptor, provider );\n-            if ( existing != null )\n-            {\n-                throw new IllegalArgumentException( \"Tried to load multiple schema index providers with the same provider descriptor \" +\n-                        providerDescriptor + \". First loaded \" + existing + \" then \" + provider );\n-            }\n-        }\n+      Descriptor providerDescriptor = provider.getProviderDescriptor();\n+      Objects.requireNonNull(providerDescriptor);\n+      IndexProvider existing = put(providerDescriptor, provider);\n+      if (existing != null)\n+      {\n+        throw new IllegalArgumentException(\"Tried to load multiple schema index providers with the same provider descriptor \" +\n+            providerDescriptor + \". First loaded \" + existing + \" then \" + provider);\n+      }\n     }\n+  }\n \n-    private IndexProvider put( Descriptor providerDescriptor, IndexProvider provider )\n-    {\n-        IndexProvider existing = indexProviders.putIfAbsent( providerDescriptor, provider );\n-        indexProvidersByName.put( providerDescriptor.name(), provider );\n-        return existing;\n-    }\n+  private IndexProvider put(Descriptor providerDescriptor, IndexProvider provider)\n+  {\n+    IndexProvider existing = indexProviders.putIfAbsent(providerDescriptor, provider);\n+    indexProvidersByName.put(providerDescriptor.name(), provider);\n+    return existing;\n+  }\n \n-    @Override\n-    public IndexProvider getDefaultProvider()\n-    {\n-        return defaultIndexProvider;\n-    }\n+  @Override\n+  public IndexProvider getDefaultProvider()\n+  {\n+    return defaultIndexProvider;\n+  }\n \n-    @Override\n-    public IndexProvider lookup( IndexProvider.Descriptor providerDescriptor )\n+  @Override\n+  public IndexProvider lookup(IndexProvider.Descriptor providerDescriptor)\n+  {\n+    IndexProvider provider = indexProviders.get(providerDescriptor);\n+    if (provider != null)\n     {\n-        IndexProvider provider = indexProviders.get( providerDescriptor );\n-        if ( provider != null )\n-        {\n-            return provider;\n-        }\n-\n-        throw notFound( providerDescriptor );\n+      return provider;\n     }\n \n-    @Override\n-    public IndexProvider lookup( String providerDescriptorName ) throws IndexProviderNotFoundException\n-    {\n-        IndexProvider provider = indexProvidersByName.get( providerDescriptorName );\n-        if ( provider != null )\n-        {\n-            return provider;\n-        }\n-\n-        throw notFound( providerDescriptorName );\n-    }\n+    throw notFound(providerDescriptor);\n+  }\n \n-    private IllegalArgumentException notFound( Object key )\n+  @Override\n+  public IndexProvider lookup(String providerDescriptorName) throws IndexProviderNotFoundException\n+  {\n+    IndexProvider provider = indexProvidersByName.get(providerDescriptorName);\n+    if (provider != null)\n     {\n-        return new IllegalArgumentException( \"Tried to get index provider with name \" + key +\n-                \" whereas available providers in this session being \" + Arrays.toString( indexProviderNames() ) + \", and default being \" +\n-                defaultIndexProvider.getProviderDescriptor().name() );\n+      return provider;\n     }\n \n-    @Override\n-    public void accept( Consumer<IndexProvider> visitor )\n-    {\n-        indexProviders.values().forEach( visitor );\n-    }\n+    throw notFound(providerDescriptorName);\n+  }\n+\n+  private IllegalArgumentException notFound(Object key)\n+  {\n+    return new IllegalArgumentException(\"Tried to get index provider with name \" + key +\n+        \" whereas available providers in this session being \" + Arrays.toString(indexProviderNames()) + \", and default being \" +\n+        defaultIndexProvider.getProviderDescriptor().name());\n+  }\n+\n+  @Override\n+  public void accept(Consumer<IndexProvider> visitor)\n+  {\n+    indexProviders.values().forEach(visitor);\n+  }\n \n-    private String[] indexProviderNames()\n+  private String[] indexProviderNames()\n+  {\n+    Collection<IndexProvider> providerList = indexProviders.values();\n+    String[] providerNames = new String[providerList.size()];\n+    int index = 0;\n+    for (IndexProvider indexProvider : providerList)\n     {\n-        Collection<IndexProvider> providerList = indexProviders.values();\n-        String[] providerNames = new String[providerList.size()];\n-        int index = 0;\n-        for ( IndexProvider indexProvider : providerList )\n-        {\n-            providerNames[index++] = indexProvider.getProviderDescriptor().name();\n-        }\n-        return providerNames;\n+      providerNames[index++] = indexProvider.getProviderDescriptor().name();\n     }\n+    return providerNames;\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 271).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/511/DefaultIndexProviderMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/511/DefaultIndexProviderMap.java\nindex 37efa1a1ee3..532b629afd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/511/DefaultIndexProviderMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/511/DefaultIndexProviderMap.java\n@@ -43,11 +43,11 @@ public class DefaultIndexProviderMap implements IndexProviderMap\n         this( defaultIndexProvider, Collections.emptyList() );\n     }\n \n-    public DefaultIndexProviderMap( IndexProvider defaultIndexProvider,\n-                                    Iterable<IndexProvider> additionalIndexProviders )\n-    {\n+    public DefaultIndexProviderMap( IndexProvider defaultIndexProvider, Iterable<IndexProvider> additionalIndexProviders )\n+{\n         this.defaultIndexProvider = defaultIndexProvider;\n-        put( defaultIndexProvider.getProviderDescriptor(), defaultIndexProvider );\n+\n+put( defaultIndexProvider.getProviderDescriptor(), defaultIndexProvider );\n         for ( IndexProvider provider : additionalIndexProviders )\n         {\n             Descriptor providerDescriptor = provider.getProviderDescriptor();\n@@ -55,9 +55,8 @@ public class DefaultIndexProviderMap implements IndexProviderMap\n             IndexProvider existing = put( providerDescriptor, provider );\n             if ( existing != null )\n             {\n-                throw new IllegalArgumentException( \"Tried to load multiple schema index providers with the same provider descriptor \" +\n-                        providerDescriptor + \". First loaded \" + existing + \" then \" + provider );\n-            }\n+                throw new IllegalArgumentException( \"Tried to load multiple schema index providers with the same provider descriptor \" + providerDescriptor + \". First loaded \" + existing + \" then \" + provider );\n+    }\n         }\n     }\n \n@@ -100,9 +99,7 @@ public class DefaultIndexProviderMap implements IndexProviderMap\n \n     private IllegalArgumentException notFound( Object key )\n     {\n-        return new IllegalArgumentException( \"Tried to get index provider with name \" + key +\n-                \" whereas available providers in this session being \" + Arrays.toString( indexProviderNames() ) + \", and default being \" +\n-                defaultIndexProvider.getProviderDescriptor().name() );\n+        return new IllegalArgumentException( \"Tried to get index provider with name \" + key + \" whereas available providers in this session being \" + Arrays.toString( indexProviderNames() ) + \", and default being \" + defaultIndexProvider.getProviderDescriptor().name() );\n     }\n \n     @Override\n@@ -120,6 +117,7 @@ public class DefaultIndexProviderMap implements IndexProviderMap\n         {\n             providerNames[index++] = indexProvider.getProviderDescriptor().name();\n         }\n-        return providerNames;\n+\n+return providerNames;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
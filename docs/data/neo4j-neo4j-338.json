{
    "project_name": "neo4j-neo4j",
    "error_id": "338",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/338/RecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/338/RecoveryCleanupWorkCollector.java\nindex 08e72a74e3d..5d811802943 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/338/RecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/338/RecoveryCleanupWorkCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.List;\n@@ -47,26 +48,26 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      *\n      * @param job cleanup job to perform, now or at some point in the future.\n      */\n-    abstract void add( CleanupJob job );\n+    abstract void add(CleanupJob job);\n \n-    void executeWithExecutor( CleanupJobGroupAction action )\n+    void executeWithExecutor(CleanupJobGroupAction action)\n     {\n-        ExecutorService executor = Executors.newFixedThreadPool( Runtime.getRuntime().availableProcessors() );\n+        ExecutorService executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n         try\n         {\n-            action.execute( executor );\n-        }\n-        finally\n+            action.execute(executor);\n+        } finally\n         {\n-            shutdownExecutorAndVerifyNoLeaks( executor );\n+            shutdownExecutorAndVerifyNoLeaks(executor);\n         }\n     }\n-    private void shutdownExecutorAndVerifyNoLeaks( ExecutorService executor )\n+\n+    private void shutdownExecutorAndVerifyNoLeaks(ExecutorService executor)\n     {\n         List<Runnable> leakedTasks = executor.shutdownNow();\n-        if ( !leakedTasks.isEmpty() )\n+        if (!leakedTasks.isEmpty())\n         {\n-            throw new IllegalStateException( \"Tasks leaked from CleanupJob. Tasks where \" + leakedTasks );\n+            throw new IllegalStateException(\"Tasks leaked from CleanupJob. Tasks where \" + leakedTasks);\n         }\n     }\n \n@@ -76,7 +77,7 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      */\n     public static RecoveryCleanupWorkCollector immediate()\n     {\n-        if ( immediateInstance == null )\n+        if (immediateInstance == null)\n         {\n             immediateInstance = new ImmediateRecoveryCleanupWorkCollector();\n         }\n@@ -88,7 +89,7 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      */\n     public static RecoveryCleanupWorkCollector ignore()\n     {\n-        if ( ignoringInstance == null )\n+        if (ignoringInstance == null)\n         {\n             ignoringInstance = new IgnoringRecoveryCleanupWorkCollector();\n         }\n@@ -102,28 +103,27 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n     static class ImmediateRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n     {\n         @Override\n-        public void add( CleanupJob job )\n+        public void add(CleanupJob job)\n         {\n-            executeWithExecutor( executor ->\n+            executeWithExecutor(executor ->\n             {\n                 try\n                 {\n-                    job.run( new CleanupJob.Executor()\n+                    job.run(new CleanupJob.Executor()\n                     {\n \n                         @Override\n-                        public <T> CleanupJob.JobResult<T> submit( String jobDescription, Callable<T> job )\n+                        public <T> CleanupJob.JobResult<T> submit(String jobDescription, Callable<T> job)\n                         {\n-                            var future = executor.submit( job );\n+                            var future = executor.submit(job);\n                             return future::get;\n                         }\n-                    } );\n-                }\n-                finally\n+                    });\n+                } finally\n                 {\n                     job.close();\n                 }\n-            } );\n+            });\n         }\n     }\n \n@@ -133,7 +133,7 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n     static class IgnoringRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n     {\n         @Override\n-        public void add( CleanupJob job )\n+        public void add(CleanupJob job)\n         {\n             job.close();\n         }\n@@ -142,6 +142,6 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n     @FunctionalInterface\n     interface CleanupJobGroupAction\n     {\n-        void execute( ExecutorService executor );\n+        void execute(ExecutorService executor);\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/338/RecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/338/RecoveryCleanupWorkCollector.java\nindex 08e72a74e3d..9bc967c96de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/338/RecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/338/RecoveryCleanupWorkCollector.java\n@@ -144,4 +144,4 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n     {\n         void execute( ExecutorService executor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "kitodo-kitodo-production",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "352",
                "column": "17",
                "severity": "warning",
                "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "                updateRulesetAndDocType(getMainProcess().getRuleset());\n                processDataTab.prepare();\n                if(Objects.nonNull(parentId)) {\n                    titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                    titleRecordLinkTab.chooseParentProcess();\n                    ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/2/CreateProcessForm.java\nindex f37cd7c7669..8fdf2d81ecf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/2/CreateProcessForm.java\n@@ -349,7 +349,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/2/CreateProcessForm.java\nindex f37cd7c7669..e0a4515051d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/2/CreateProcessForm.java\n@@ -95,6 +95,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n \n     /**\n      * Update ruleset and docType.\n+     *\n      * @param ruleset as Ruleset\n      * @throws RulesetNotFoundException thrown if ruleset could not be found\n      */\n@@ -113,9 +114,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n \n     private List<SelectItem> getAllRulesetDivisions() {\n         List<SelectItem> allDocTypes = rulesetManagementInterface\n-                .getStructuralElements(priorityList).entrySet()\n-                .stream().map(entry -> new SelectItem(entry.getKey(), entry.getValue()))\n-                .collect(Collectors.toList());\n+            .getStructuralElements(priorityList).entrySet()\n+            .stream().map(entry -> new SelectItem(entry.getKey(), entry.getValue()))\n+            .collect(Collectors.toList());\n         if (allDocTypes.isEmpty()) {\n             Helper.setErrorMessage(\"errorLoadingDocTypes\");\n         }\n@@ -284,18 +285,18 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n             createProcessHierarchy();\n             if (Objects.nonNull(PrimeFaces.current()) && Objects.nonNull(FacesContext.getCurrentInstance())) {\n                 PrimeFaces.current().executeScript(\"PF('sticky-notifications').renderMessage({'summary':'\"\n-                        + Helper.getTranslation(\"processSaving\") + \"','detail':'\"\n-                        + Helper.getTranslation( \"youWillBeRedirected\") + \"','severity':'info'});\");\n+                    + Helper.getTranslation(\"processSaving\") + \"','detail':'\"\n+                    + Helper.getTranslation(\"youWillBeRedirected\") + \"','severity':'info'});\");\n             }\n             return processListPath;\n         } catch (DataException e) {\n-            Helper.setErrorMessage(\"errorSaving\", new Object[] {ObjectType.PROCESS.getTranslationSingular() },\n-                    logger, e);\n+            Helper.setErrorMessage(\"errorSaving\", new Object[] {ObjectType.PROCESS.getTranslationSingular()},\n+                logger, e);\n         } catch (IOException | ProcessGenerationException e) {\n             logger.error(e.getLocalizedMessage());\n         } catch (RulesetNotFoundException e) {\n             Helper.setErrorMessage(\"rulesetNotFound\", new Object[] {this.getMainProcess().getRuleset().getFile()},\n-                    logger, e);\n+                logger, e);\n         }\n         return this.stayOnCurrentPage;\n     }\n@@ -311,16 +312,16 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n         createNewProcess();\n         return FacesContext.getCurrentInstance().getExternalContext().getRequestServletPath()\n-                + \"?referrer=\" + referringView\n-                + \"&templateId=\" + template.getId()\n-                + \"&projectId=\" + project.getId()\n-                + \"&faces-redirect=true\";\n+            + \"?referrer=\" + referringView\n+            + \"&templateId=\" + template.getId()\n+            + \"&projectId=\" + project.getId()\n+            + \"&faces-redirect=true\";\n     }\n \n     private boolean canCreateProcess() {\n         if (Objects.nonNull(titleRecordLinkTab.getTitleRecordProcess())\n-                && (Objects.isNull(titleRecordLinkTab.getSelectedInsertionPosition())\n-                        || titleRecordLinkTab.getSelectedInsertionPosition().isEmpty())) {\n+            && (Objects.isNull(titleRecordLinkTab.getSelectedInsertionPosition())\n+            || titleRecordLinkTab.getSelectedInsertionPosition().isEmpty())) {\n             Helper.setErrorMessage(\"createProcessForm.createNewProcess.noInsertionPositionSelected\");\n             return false;\n         }\n@@ -330,12 +331,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n     /**\n      * Prepare new process which will be created.\n      *\n-     * @param templateId\n-     *            id of template to query from database\n-     * @param projectId\n-     *            id of project to query from database\n-     * @param referringView\n-     *            view the user was coming from\n+     * @param templateId    id of template to query from database\n+     * @param projectId     id of project to query from database\n+     * @param referringView view the user was coming from\n      */\n     public void prepareProcess(int templateId, int projectId, String referringView, Integer parentId) {\n         this.referringView = referringView;\n@@ -344,19 +342,19 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n             boolean generated = processGenerator.generateProcess(templateId, projectId);\n             if (generated) {\n                 processes = new LinkedList<>(Collections.singletonList(new TempProcess(\n-                        processGenerator.getGeneratedProcess(), new Workpiece())));\n+                    processGenerator.getGeneratedProcess(), new Workpiece())));\n                 project = processGenerator.getProject();\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n                     Map<String, String> allowedSubstructuralElements = ServiceManager.getRulesetService()\n-                            .openRuleset(ServiceManager.getRulesetService().getById(parentProcess.getRuleset().getId()))\n-                            .getStructuralElementView(parentProcess.getBaseType(), null, null)\n-                            .getAllowedSubstructuralElements();\n+                        .openRuleset(ServiceManager.getRulesetService().getById(parentProcess.getRuleset().getId()))\n+                        .getStructuralElementView(parentProcess.getBaseType(), null, null)\n+                        .getAllowedSubstructuralElements();\n                     processDataTab.setAllDocTypes(null);\n \n                 }\n@@ -370,12 +368,12 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      * Create process hierarchy.\n      */\n     private void createProcessHierarchy()\n-            throws DataException, ProcessGenerationException, IOException, RulesetNotFoundException {\n+        throws DataException, ProcessGenerationException, IOException, RulesetNotFoundException {\n         // discard all processes in hierarchy except the first if parent process in\n         // title record link tab is selected!\n         if (this.processes.size() > 1 && Objects.nonNull(this.titleRecordLinkTab.getTitleRecordProcess())\n-                && Objects.nonNull(this.titleRecordLinkTab.getSelectedInsertionPosition())\n-                && !this.titleRecordLinkTab.getSelectedInsertionPosition().isEmpty()) {\n+            && Objects.nonNull(this.titleRecordLinkTab.getSelectedInsertionPosition())\n+            && !this.titleRecordLinkTab.getSelectedInsertionPosition().isEmpty()) {\n             this.processes = new LinkedList<>(Collections.singletonList(this.processes.get(0)));\n         }\n         ImportService.checkTasks(this.getMainProcess(), processDataTab.getDocType());\n@@ -424,7 +422,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      * Save links between child processes and main process.\n      *\n      * @throws DataException thrown if child process could not be saved\n-     * @throws IOException thrown if link between child and parent process could not be added\n+     * @throws IOException   thrown if link between child and parent process could not be added\n      */\n     private void saveChildProcessLinks() throws IOException, DataException {\n         this.progress = 0;\n@@ -435,7 +433,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         for (TempProcess childProcess : this.childProcesses) {\n             int currentIndex = childProcesses.indexOf(childProcess);\n             MetadataEditor.addLink(getMainProcess(), String.valueOf(currentIndex),\n-                    childProcess.getProcess().getId());\n+                childProcess.getProcess().getId());\n             ServiceManager.getProcessService().save(childProcess.getProcess());\n             this.progress = (currentIndex + 1) * 100 / this.childProcesses.size();\n             if (Objects.nonNull(PrimeFaces.current()) && Objects.nonNull(FacesContext.getCurrentInstance())) {\n@@ -451,9 +449,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         // set parent relations between main process and its imported child processes!\n         try {\n             ImportService.processProcessChildren(getMainProcess(), this.childProcesses, template,\n-                    rulesetManagementInterface, acquisitionStage, priorityList);\n+                rulesetManagementInterface, acquisitionStage, priorityList);\n         } catch (DataException | InvalidMetadataValueException | NoSuchMetadataFieldException\n-                | ProcessGenerationException | IOException | RulesetNotFoundException e) {\n+            | ProcessGenerationException | IOException | RulesetNotFoundException e) {\n             Helper.setErrorMessage(\"Unable to attach child documents to process: \" + e.getMessage());\n         }\n     }\n@@ -476,12 +474,12 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                 }\n                 processMetadataTab.preserve();\n                 ImportService.addProperties(process, template, processDetails, processDataTab.getDocType(),\n-                        processDataTab.getTiffHeaderImageDescription());\n+                    processDataTab.getTiffHeaderImageDescription());\n                 ImportService.updateTasks(process);\n             } else if (Objects.nonNull(tempProcess.getMetadataNodes())) {\n                 try {\n                     ImportService.processTempProcess(tempProcess, template, rulesetManagementInterface,\n-                            acquisitionStage, priorityList);\n+                        acquisitionStage, priorityList);\n                 } catch (InvalidMetadataValueException | NoSuchMetadataFieldException e) {\n                     throw new ProcessGenerationException(\"Error creating process hierarchy: invalid metadata found!\");\n                 } catch (IOException e) {\n@@ -509,7 +507,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n \n     private void saveTempProcessMetadata(TempProcess tempProcess) {\n         try (OutputStream out = ServiceManager.getFileService()\n-                .write(ServiceManager.getProcessService().getMetadataFileUri(tempProcess.getProcess()))) {\n+            .write(ServiceManager.getProcessService().getMetadataFileUri(tempProcess.getProcess()))) {\n             tempProcess.getWorkpiece().setId(tempProcess.getProcess().getId().toString());\n             ServiceManager.getMetsService().save(tempProcess.getWorkpiece(), out);\n         } catch (IOException e) {\n@@ -547,7 +545,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n             ProcessGenerator processGenerator = new ProcessGenerator();\n             processGenerator.generateProcess(template.getId(), project.getId());\n             this.processes = new LinkedList<>(Collections.singletonList(\n-                    new TempProcess(processGenerator.getGeneratedProcess(), new Workpiece())));\n+                new TempProcess(processGenerator.getGeneratedProcess(), new Workpiece())));\n             this.processMetadataTab.initializeProcessDetails(getProcesses().get(0).getWorkpiece().getRootElement());\n         } catch (ProcessGenerationException e) {\n             logger.error(e.getLocalizedMessage());\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/2/CreateProcessForm.java\nindex f37cd7c7669..4610b7344c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/2/CreateProcessForm.java\n@@ -349,7 +349,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n@@ -566,4 +566,4 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n     public String getReferringView() {\n         return this.referringView;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 240).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "343",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "348",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "373",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "382",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 298).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "427",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "430",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "481",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "541",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "581",
                    "severity": "warning",
                    "message": "Line is longer than 140 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/2/CreateProcessForm.java\nindex f37cd7c7669..d25ad605991 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/2/CreateProcessForm.java\n@@ -12,7 +12,6 @@\n package org.kitodo.production.forms.createprocess;\n \n import com.sun.jersey.api.NotFoundException;\n-\n import java.io.IOException;\n import java.io.OutputStream;\n import java.net.URI;\n@@ -25,12 +24,10 @@ import java.util.Locale;\n import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Collectors;\n-\n import javax.faces.context.FacesContext;\n import javax.faces.model.SelectItem;\n import javax.faces.view.ViewScoped;\n import javax.inject.Named;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.kitodo.api.dataeditor.rulesetmanagement.RulesetManagementInterface;\n@@ -65,13 +62,11 @@ import org.primefaces.PrimeFaces;\n public class CreateProcessForm extends BaseForm implements RulesetSetupInterface {\n \n     private static final Logger logger = LogManager.getLogger(CreateProcessForm.class);\n-\n     private final ImportDialog importDialog = new ImportDialog(this);\n     private final ProcessDataTab processDataTab = new ProcessDataTab(this);\n     private final ProcessMetadataTab processMetadataTab = new ProcessMetadataTab(this);\n     private final SearchTab searchTab = new SearchTab(this);\n     private final TitleRecordLinkTab titleRecordLinkTab = new TitleRecordLinkTab(this);\n-\n     private RulesetManagementInterface rulesetManagementInterface;\n     private List<Locale.LanguageRange> priorityList = ServiceManager.getUserService().getCurrentMetadataLanguage();\n     private String acquisitionStage = \"create\";\n@@ -88,6 +83,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return the ruleset\n      */\n+\n     @Override\n     public RulesetManagementInterface getRuleset() {\n         return rulesetManagementInterface;\n@@ -98,11 +94,14 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      * @param ruleset as Ruleset\n      * @throws RulesetNotFoundException thrown if ruleset could not be found\n      */\n+\n+\n     public void updateRulesetAndDocType(Ruleset ruleset) throws RulesetNotFoundException {\n         setRulesetManagementInterface(ruleset);\n         processDataTab.setAllDocTypes(getAllRulesetDivisions());\n     }\n \n+\n     private void setRulesetManagementInterface(Ruleset ruleset) throws RulesetNotFoundException {\n         try {\n             this.rulesetManagementInterface = ServiceManager.getRulesetService().openRuleset(ruleset);\n@@ -111,11 +110,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n     }\n \n+\n     private List<SelectItem> getAllRulesetDivisions() {\n-        List<SelectItem> allDocTypes = rulesetManagementInterface\n-                .getStructuralElements(priorityList).entrySet()\n-                .stream().map(entry -> new SelectItem(entry.getKey(), entry.getValue()))\n-                .collect(Collectors.toList());\n+        List<SelectItem> allDocTypes = rulesetManagementInterface.getStructuralElements(priorityList).entrySet().stream().map(entry -> new SelectItem(entry.getKey(), entry.getValue())).collect(Collectors.toList());\n         if (allDocTypes.isEmpty()) {\n             Helper.setErrorMessage(\"errorLoadingDocTypes\");\n         }\n@@ -128,6 +125,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return the current acquisition stage\n      */\n+\n     @Override\n     public String getAcquisitionStage() {\n         return acquisitionStage;\n@@ -139,6 +137,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return the language preference list\n      */\n+\n     @Override\n     public List<Locale.LanguageRange> getPriorityList() {\n         return priorityList;\n@@ -149,6 +148,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of importDialog\n      */\n+\n+\n     public ImportDialog getImportDialog() {\n         return importDialog;\n     }\n@@ -158,6 +159,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of processDataTab\n      */\n+\n+\n     public ProcessDataTab getProcessDataTab() {\n         return processDataTab;\n     }\n@@ -167,6 +170,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of processMetadataTab\n      */\n+\n+\n     public ProcessMetadataTab getProcessMetadataTab() {\n         return processMetadataTab;\n     }\n@@ -176,6 +181,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of searchTab\n      */\n+\n+\n     public SearchTab getSearchTab() {\n         return searchTab;\n     }\n@@ -185,6 +192,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of titleRecordLinkTab\n      */\n+\n+\n     public TitleRecordLinkTab getTitleRecordLinkTab() {\n         return titleRecordLinkTab;\n     }\n@@ -194,6 +203,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of newProcesses\n      */\n+\n+\n     public List<TempProcess> getProcesses() {\n         return processes;\n     }\n@@ -203,6 +214,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @param processes as java.util.List of Process\n      */\n+\n+\n     public void setProcesses(LinkedList<TempProcess> processes) {\n         this.processes = processes;\n     }\n@@ -212,6 +225,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return childProcesses\n      */\n+\n+\n     public List<TempProcess> getChildProcesses() {\n         return this.childProcesses;\n     }\n@@ -221,6 +236,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @param childProcesses as java.util.LinkedList of TempProcess\n      */\n+\n+\n     public void setChildProcesses(LinkedList<TempProcess> childProcesses) {\n         this.childProcesses = childProcesses;\n     }\n@@ -230,6 +247,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of first element in newProcesses\n      */\n+\n+\n     public Process getMainProcess() {\n         if (processes.isEmpty()) {\n             throw new NotFoundException(\"Process list is empty!\");\n@@ -242,6 +261,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of template\n      */\n+\n+\n     public Template getTemplate() {\n         return template;\n     }\n@@ -251,6 +272,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @param template as org.kitodo.data.database.beans.Template\n      */\n+\n+\n     public void setTemplate(Template template) {\n         this.template = template;\n     }\n@@ -260,6 +283,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return value of project\n      */\n+\n+\n     public Project getProject() {\n         return project;\n     }\n@@ -269,6 +294,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @param project as org.kitodo.data.database.beans.Project\n      */\n+\n+\n     public void setProject(Project project) {\n         this.project = project;\n     }\n@@ -276,6 +303,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n     /**\n      * Create the process and save the metadata.\n      */\n+\n+\n     public String createNewProcess() {\n         if (!canCreateProcess()) {\n             return this.stayOnCurrentPage;\n@@ -283,19 +312,18 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         try {\n             createProcessHierarchy();\n             if (Objects.nonNull(PrimeFaces.current()) && Objects.nonNull(FacesContext.getCurrentInstance())) {\n-                PrimeFaces.current().executeScript(\"PF('sticky-notifications').renderMessage({'summary':'\"\n-                        + Helper.getTranslation(\"processSaving\") + \"','detail':'\"\n-                        + Helper.getTranslation( \"youWillBeRedirected\") + \"','severity':'info'});\");\n+                PrimeFaces.current().executeScript(\"PF('sticky-notifications').renderMessage({'summary':'\" + Helper.getTranslation(\"processSaving\") + \"','detail':'\" + Helper.getTranslation(\"youWillBeRedirected\") + \"','severity':'info'});\");\n             }\n             return processListPath;\n         } catch (DataException e) {\n-            Helper.setErrorMessage(\"errorSaving\", new Object[] {ObjectType.PROCESS.getTranslationSingular() },\n-                    logger, e);\n+            Helper.setErrorMessage(\"errorSaving\", new Object[] {ObjectType.PROCESS.getTranslationSingular() }, logger, e);\n         } catch (IOException | ProcessGenerationException e) {\n             logger.error(e.getLocalizedMessage());\n         } catch (RulesetNotFoundException e) {\n-            Helper.setErrorMessage(\"rulesetNotFound\", new Object[] {this.getMainProcess().getRuleset().getFile()},\n-                    logger, e);\n+            Helper.setErrorMessage(\"rulesetNotFound\",\n+                new Object[] {this.getMainProcess().getRuleset().getFile() },\n+                logger,\n+                e);\n         }\n         return this.stayOnCurrentPage;\n     }\n@@ -305,22 +333,19 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return path to reload current view\n      */\n+\n+\n     public String createNewProcessAndContinue() {\n         if (!canCreateProcess()) {\n             return this.stayOnCurrentPage;\n         }\n         createNewProcess();\n-        return FacesContext.getCurrentInstance().getExternalContext().getRequestServletPath()\n-                + \"?referrer=\" + referringView\n-                + \"&templateId=\" + template.getId()\n-                + \"&projectId=\" + project.getId()\n-                + \"&faces-redirect=true\";\n+        return FacesContext.getCurrentInstance().getExternalContext().getRequestServletPath() + \"?referrer=\" + referringView + \"&templateId=\" + template.getId() + \"&projectId=\" + project.getId() + \"&faces-redirect=true\";\n     }\n \n+\n     private boolean canCreateProcess() {\n-        if (Objects.nonNull(titleRecordLinkTab.getTitleRecordProcess())\n-                && (Objects.isNull(titleRecordLinkTab.getSelectedInsertionPosition())\n-                        || titleRecordLinkTab.getSelectedInsertionPosition().isEmpty())) {\n+        if (Objects.nonNull(titleRecordLinkTab.getTitleRecordProcess()) && (Objects.isNull(titleRecordLinkTab.getSelectedInsertionPosition()) || titleRecordLinkTab.getSelectedInsertionPosition().isEmpty())) {\n             Helper.setErrorMessage(\"createProcessForm.createNewProcess.noInsertionPositionSelected\");\n             return false;\n         }\n@@ -337,28 +362,25 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      * @param referringView\n      *            view the user was coming from\n      */\n+\n+\n     public void prepareProcess(int templateId, int projectId, String referringView, Integer parentId) {\n         this.referringView = referringView;\n         ProcessGenerator processGenerator = new ProcessGenerator();\n         try {\n             boolean generated = processGenerator.generateProcess(templateId, projectId);\n             if (generated) {\n-                processes = new LinkedList<>(Collections.singletonList(new TempProcess(\n-                        processGenerator.getGeneratedProcess(), new Workpiece())));\n+                processes = new LinkedList<>(Collections.singletonList(new TempProcess(processGenerator.getGeneratedProcess(), new Workpiece())));\n                 project = processGenerator.getProject();\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n-                    Map<String, String> allowedSubstructuralElements = ServiceManager.getRulesetService()\n-                            .openRuleset(ServiceManager.getRulesetService().getById(parentProcess.getRuleset().getId()))\n-                            .getStructuralElementView(parentProcess.getBaseType(), null, null)\n-                            .getAllowedSubstructuralElements();\n+                    Map<String, String> allowedSubstructuralElements = ServiceManager.getRulesetService().openRuleset(ServiceManager.getRulesetService().getById(parentProcess.getRuleset().getId())).getStructuralElementView(parentProcess.getBaseType(), null, null).getAllowedSubstructuralElements();\n                     processDataTab.setAllDocTypes(null);\n-\n                 }\n             }\n         } catch (ProcessGenerationException | RulesetNotFoundException | DataException | DAOException | IOException e) {\n@@ -369,8 +391,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n     /**\n      * Create process hierarchy.\n      */\n-    private void createProcessHierarchy()\n-            throws DataException, ProcessGenerationException, IOException, RulesetNotFoundException {\n+\n+\n+    private void createProcessHierarchy() throws DataException, ProcessGenerationException, IOException, RulesetNotFoundException {\n         // discard all processes in hierarchy except the first if parent process in\n         // title record link tab is selected!\n         if (this.processes.size() > 1 && Objects.nonNull(this.titleRecordLinkTab.getTitleRecordProcess())\n@@ -386,7 +409,6 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         if (!createProcessesLocation(this.processes)) {\n             throw new IOException(\"Unable to create directories for process hierarchy!\");\n         }\n-\n         if (this.importDialog.isImportChildren() && !createProcessesLocation(this.childProcesses)) {\n             throw new IOException(\"Unable to create directories for child processes!\");\n         }\n@@ -402,13 +424,10 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n \n         // if a process is selected in 'TitleRecordLinkTab' link it as parent with the first process in the list\n         if (this.processes.size() > 0 && Objects.nonNull(titleRecordLinkTab.getTitleRecordProcess())) {\n-            MetadataEditor.addLink(titleRecordLinkTab.getTitleRecordProcess(),\n-                titleRecordLinkTab.getSelectedInsertionPosition(), this.processes.get(0).getProcess().getId());\n-            ProcessService.setParentRelations(titleRecordLinkTab.getTitleRecordProcess(),\n-                processes.get(0).getProcess());\n+            MetadataEditor.addLink(titleRecordLinkTab.getTitleRecordProcess(), titleRecordLinkTab.getSelectedInsertionPosition(), this.processes.get(0).getProcess().getId());\n+            ProcessService.setParentRelations(titleRecordLinkTab.getTitleRecordProcess(), processes.get(0).getProcess());\n             String summary = Helper.getTranslation(\"newProcess.catalogueSearch.linkedToExistingProcessSummary\");\n-            String detail = Helper.getTranslation(\"newProcess.catalogueSearch.linkedToExistingProcessDetail\",\n-                Collections.singletonList(titleRecordLinkTab.getTitleRecordProcess().getTitle()));\n+            String detail = Helper.getTranslation(\"newProcess.catalogueSearch.linkedToExistingProcessDetail\", Collections.singletonList(titleRecordLinkTab.getTitleRecordProcess().getTitle()));\n             importDialog.showGrowlMessage(summary, detail);\n         } else {\n             // add links between consecutive processes in list\n@@ -426,6 +445,8 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      * @throws DataException thrown if child process could not be saved\n      * @throws IOException thrown if link between child and parent process could not be added\n      */\n+\n+\n     private void saveChildProcessLinks() throws IOException, DataException {\n         this.progress = 0;\n         if (Objects.nonNull(PrimeFaces.current()) && Objects.nonNull(FacesContext.getCurrentInstance())) {\n@@ -434,10 +455,10 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n         for (TempProcess childProcess : this.childProcesses) {\n             int currentIndex = childProcesses.indexOf(childProcess);\n-            MetadataEditor.addLink(getMainProcess(), String.valueOf(currentIndex),\n-                    childProcess.getProcess().getId());\n+            MetadataEditor.addLink(getMainProcess(), String.valueOf(currentIndex), childProcess.getProcess().getId());\n             ServiceManager.getProcessService().save(childProcess.getProcess());\n-            this.progress = (currentIndex + 1) * 100 / this.childProcesses.size();\n+            this.progress = (currentIndex + 1) * 100\n+                / this.childProcesses.size();\n             if (Objects.nonNull(PrimeFaces.current()) && Objects.nonNull(FacesContext.getCurrentInstance())) {\n                 PrimeFaces.current().ajax().update(\"progressForm:progressBar\");\n             }\n@@ -447,17 +468,22 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n     }\n \n+\n     private void processChildren() {\n         // set parent relations between main process and its imported child processes!\n         try {\n-            ImportService.processProcessChildren(getMainProcess(), this.childProcesses, template,\n-                    rulesetManagementInterface, acquisitionStage, priorityList);\n-        } catch (DataException | InvalidMetadataValueException | NoSuchMetadataFieldException\n-                | ProcessGenerationException | IOException | RulesetNotFoundException e) {\n+            ImportService.processProcessChildren(getMainProcess(),\n+                this.childProcesses,\n+                template,\n+                rulesetManagementInterface,\n+                acquisitionStage,\n+                priorityList);\n+        } catch (DataException | InvalidMetadataValueException | NoSuchMetadataFieldException | ProcessGenerationException | IOException | RulesetNotFoundException e) {\n             Helper.setErrorMessage(\"Unable to attach child documents to process: \" + e.getMessage());\n         }\n     }\n \n+\n     private void processAncestors() throws ProcessGenerationException {\n         for (TempProcess tempProcess : this.processes) {\n             Process process = tempProcess.getProcess();\n@@ -475,13 +501,15 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                     throw new ProcessGenerationException(\"Error creating process hierarchy: invalid process content!\");\n                 }\n                 processMetadataTab.preserve();\n-                ImportService.addProperties(process, template, processDetails, processDataTab.getDocType(),\n-                        processDataTab.getTiffHeaderImageDescription());\n+                ImportService.addProperties(process,\n+                    template,\n+                    processDetails,\n+                    processDataTab.getDocType(),\n+                    processDataTab.getTiffHeaderImageDescription());\n                 ImportService.updateTasks(process);\n             } else if (Objects.nonNull(tempProcess.getMetadataNodes())) {\n                 try {\n-                    ImportService.processTempProcess(tempProcess, template, rulesetManagementInterface,\n-                            acquisitionStage, priorityList);\n+                    ImportService.processTempProcess(tempProcess, template, rulesetManagementInterface, acquisitionStage, priorityList);\n                 } catch (InvalidMetadataValueException | NoSuchMetadataFieldException e) {\n                     throw new ProcessGenerationException(\"Error creating process hierarchy: invalid metadata found!\");\n                 } catch (IOException e) {\n@@ -493,6 +521,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n     }\n \n+\n     private void saveProcessHierarchyMetadata() {\n         // save ancestor processes meta.xml files\n         for (TempProcess tempProcess : this.processes) {\n@@ -507,9 +536,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n     }\n \n+\n     private void saveTempProcessMetadata(TempProcess tempProcess) {\n-        try (OutputStream out = ServiceManager.getFileService()\n-                .write(ServiceManager.getProcessService().getMetadataFileUri(tempProcess.getProcess()))) {\n+        try (OutputStream out = ServiceManager.getFileService().write(ServiceManager.getProcessService().getMetadataFileUri(tempProcess.getProcess()))) {\n             tempProcess.getWorkpiece().setId(tempProcess.getProcess().getId().toString());\n             ServiceManager.getMetsService().save(tempProcess.getWorkpiece(), out);\n         } catch (IOException e) {\n@@ -517,6 +546,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n         }\n     }\n \n+\n     private boolean createProcessesLocation(List<TempProcess> processes) {\n         for (TempProcess tempProcess : processes) {\n             if (processes.indexOf(tempProcess) > 0 && Objects.isNull(tempProcess.getMetadataNodes())) {\n@@ -542,18 +572,20 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n     /**\n      * Initialize the list of created processes.\n      */\n+\n+\n     public void initializeProcesses() {\n         try {\n             ProcessGenerator processGenerator = new ProcessGenerator();\n             processGenerator.generateProcess(template.getId(), project.getId());\n-            this.processes = new LinkedList<>(Collections.singletonList(\n-                    new TempProcess(processGenerator.getGeneratedProcess(), new Workpiece())));\n+            this.processes = new LinkedList<>(Collections.singletonList(new TempProcess(processGenerator.getGeneratedProcess(), new Workpiece())));\n             this.processMetadataTab.initializeProcessDetails(getProcesses().get(0).getWorkpiece().getRootElement());\n         } catch (ProcessGenerationException e) {\n             logger.error(e.getLocalizedMessage());\n         }\n     }\n \n+\n     public int getProgress() {\n         return this.progress;\n     }\n@@ -563,7 +595,9 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n      *\n      * @return referring view\n      */\n+\n+\n     public String getReferringView() {\n         return this.referringView;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 121
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/2/CreateProcessForm.java\nindex f37cd7c7669..8fdf2d81ecf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/2/CreateProcessForm.java\n@@ -349,7 +349,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/2/CreateProcessForm.java\nindex f37cd7c7669..8fdf2d81ecf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/2/CreateProcessForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/2/CreateProcessForm.java\n@@ -349,7 +349,7 @@ public class CreateProcessForm extends BaseForm implements RulesetSetupInterface\n                 template = processGenerator.getTemplate();\n                 updateRulesetAndDocType(getMainProcess().getRuleset());\n                 processDataTab.prepare();\n-                if(Objects.nonNull(parentId)) {\n+                if (Objects.nonNull(parentId)) {\n                     titleRecordLinkTab.setChosenParentProcess(String.valueOf(parentId));\n                     titleRecordLinkTab.chooseParentProcess();\n                     ProcessDTO parentProcess = ServiceManager.getProcessService().findById(parentId);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "176",
    "information": {
        "errors": [
            {
                "line": "72",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 150).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @param messageArguments The values used to \"fill in the blanks\" of a Xerces error Message\n   */\n  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity, String uri, String errorKey, Object[] messageArguments)\n  {\n    this.message = message;\n    this.lineNumber = lineNumber;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/176/ValidationMessageImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/176/ValidationMessageImpl.java\nindex 5bfd64a6d13..23c893e8150 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/176/ValidationMessageImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/176/ValidationMessageImpl.java\n@@ -4,7 +4,7 @@\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n  * http://www.eclipse.org/legal/epl-v10.html\n- * \n+ *\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n@@ -20,8 +20,7 @@ import java.util.List;\n  * A validation message is created when there is information to report from\n  * validating a WSDL document.\n  */\n-public class ValidationMessageImpl implements IValidationMessage\n-{\n+public class ValidationMessageImpl implements IValidationMessage {\n   protected String message;\n   protected int lineNumber;\n   protected int columnNumber;\n@@ -33,44 +32,42 @@ public class ValidationMessageImpl implements IValidationMessage\n \n   /**\n    * Constructor.\n-   * \n-   * @param message The validation message.\n-   * @param lineNumber The line where the message should be displayed.\n+   *\n+   * @param message      The validation message.\n+   * @param lineNumber   The line where the message should be displayed.\n    * @param columnNumber The column where the message should be displayed.\n    * @deprecated Use contructor with URI parameter.\n    */\n-  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity)\n-  {\n+  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity) {\n     this(message, lineNumber, columnNumber, severity, null);\n   }\n \n   /**\n    * Constructor.\n    * Allows specifying a uri for the reference that the message refers to.\n-   * \n-   * @param message The validation message.\n-   * @param lineNumber The line where the message should be displayed.\n+   *\n+   * @param message      The validation message.\n+   * @param lineNumber   The line where the message should be displayed.\n    * @param columnNumber The column where the message should be displayed.\n-   * @param uri The uri of the reference file for the message.\n+   * @param uri          The uri of the reference file for the message.\n    */\n-  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity, String uri)\n-  {\n-      this(message, lineNumber, columnNumber, severity, uri, null, null);\n+  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity, String uri) {\n+    this(message, lineNumber, columnNumber, severity, uri, null, null);\n   }\n-  \n+\n   /**\n    * Constructor.\n    * Allows specifying a uri for the reference that the message refers to.\n-   * \n-   * @param message The validation message.\n-   * @param lineNumber The line where the message should be displayed.\n-   * @param columnNumber The column where the message should be displayed.\n-   * @param uri The uri of the reference file for the message.\n-   * @param errorKey The Xerces Error key\n+   *\n+   * @param message          The validation message.\n+   * @param lineNumber       The line where the message should be displayed.\n+   * @param columnNumber     The column where the message should be displayed.\n+   * @param uri              The uri of the reference file for the message.\n+   * @param errorKey         The Xerces Error key\n    * @param messageArguments The values used to \"fill in the blanks\" of a Xerces error Message\n    */\n-  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity, String uri, String errorKey, Object[] messageArguments)\n-  {\n+  public ValidationMessageImpl(String message, int lineNumber, int columnNumber, int severity, String uri,\n+                               String errorKey, Object[] messageArguments) {\n     this.message = message;\n     this.lineNumber = lineNumber;\n     this.columnNumber = columnNumber;\n@@ -82,112 +79,101 @@ public class ValidationMessageImpl implements IValidationMessage\n \n   /**\n    * Returns the validation message.\n-   * \n+   *\n    * @return The validation message.\n    */\n-  public String getMessage()\n-  {\n+  public String getMessage() {\n     return message;\n   }\n \n   /**\n    * Returns the column number.\n-   * \n+   *\n    * @return The column number where the message is located.\n    */\n-  public int getColumn()\n-  {\n+  public int getColumn() {\n     return columnNumber;\n   }\n \n   /**\n    * Returns the line number.\n-   * \n+   *\n    * @return The line number where the message is located.\n    */\n-  public int getLine()\n-  {\n+  public int getLine() {\n     return lineNumber;\n   }\n \n   /**\n    * returns the uri of the reference file for the validation message.\n-   * \n+   *\n    * @return The uri of the resource that the message refers to.\n    */\n-  public String getURI()\n-  {\n+  public String getURI() {\n     return uri;\n   }\n+\n   /**\n    * @see org.eclipse.wst.wsdl.validation.internal.IValidationMessage#getSeverity()\n    */\n-  public int getSeverity()\n-  {\n+  public int getSeverity() {\n     return severity;\n   }\n-  \n+\n   /**\n    * Set the severity of the message.\n-   * \n+   *\n    * @param severity The severity of the message.\n    */\n-  public void setSeverity(int severity)\n-  {\n-    if(severity == SEV_ERROR || severity == SEV_WARNING)\n-    {\n+  public void setSeverity(int severity) {\n+    if (severity == SEV_ERROR || severity == SEV_WARNING) {\n       this.severity = severity;\n     }\n   }\n-  \n+\n   /**\n    * Add a nested validation message to this validation message.\n-   * \n+   *\n    * @param validationMessage The validation message to add as a nested message.\n    */\n-  public void addNestedMessage(IValidationMessage validationMessage)\n-  {\n-    if (nestedErrors == null)\n-    {\n+  public void addNestedMessage(IValidationMessage validationMessage) {\n+    if (nestedErrors == null) {\n       nestedErrors = new ArrayList();\n     }\n     nestedErrors.add(validationMessage);\n     int validaitonmessageSeverity = validationMessage.getSeverity();\n-    if(validaitonmessageSeverity == SEV_ERROR)\n-    {\n+    if (validaitonmessageSeverity == SEV_ERROR) {\n       setSeverity(SEV_ERROR);\n     }\n   }\n \n   /**\n    * Get the list of nested validation messages.\n-   * \n+   *\n    * @return The list of nested validation messages.\n    */\n-  public List getNestedMessages()\n-  {\n+  public List getNestedMessages() {\n     return nestedErrors != null ? nestedErrors : Collections.EMPTY_LIST;\n   }\n+\n   /**\n    * @return the error key\n    */\n-  public String getErrorKey()\n-  {\n+  public String getErrorKey() {\n     return errorKey;\n   }\n-  \n+\n   /**\n    * @param errorKey the error key to set\n    */\n-  public void setErrorKey(String errorKey)\n-  {\n+  public void setErrorKey(String errorKey) {\n     this.errorKey = errorKey;\n   }\n+\n   /**\n    * @return the Xerces message arguments used to \"fill in the blanks\" of the messages\n    */\n-  public Object[] getMessageArguments()\n-  {\n+  public Object[] getMessageArguments() {\n     return messageArguments;\n   }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/176/ValidationMessageImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/176/ValidationMessageImpl.java\nindex 5bfd64a6d13..51488302516 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/176/ValidationMessageImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/176/ValidationMessageImpl.java\n@@ -190,4 +190,4 @@ public class ValidationMessageImpl implements IValidationMessage\n   {\n     return messageArguments;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
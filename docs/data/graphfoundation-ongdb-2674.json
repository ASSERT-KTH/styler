{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2674",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2674/NodeOrRelationship.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2674/NodeOrRelationship.java\nindex 169a173250b..30d2c3d7da8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2674/NodeOrRelationship.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2674/NodeOrRelationship.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import java.util.ArrayList;\n@@ -28,235 +29,235 @@ import org.neo4j.graphdb.Relationship;\n \n public abstract class NodeOrRelationship\n {\n-    public static final String TYPE_NODE = \"n\";\n-    public static final String TYPE_RELATIONSHIP = \"r\";\n+  public static final String TYPE_NODE = \"n\";\n+  public static final String TYPE_RELATIONSHIP = \"r\";\n+\n+  public static NodeOrRelationship wrap(Node node)\n+  {\n+    return new WrapNode(node);\n+  }\n+\n+  public static NodeOrRelationship wrap(Relationship rel)\n+  {\n+    return new WrapRelationship(rel);\n+  }\n+\n+  public static NodeOrRelationship wrap(PropertyContainer entity)\n+  {\n+    return entity instanceof Node ? wrap((Node) entity) : wrap((Relationship) entity);\n+  }\n+\n+  private final Object nodeOrRelationship;\n+\n+  NodeOrRelationship(Object nodeOrRelationship)\n+  {\n+    this.nodeOrRelationship = nodeOrRelationship;\n+  }\n+\n+  public boolean isNode()\n+  {\n+    return nodeOrRelationship instanceof Node;\n+  }\n+\n+  public Node asNode()\n+  {\n+    return (Node) nodeOrRelationship;\n+  }\n+\n+  public boolean isRelationship()\n+  {\n+    return nodeOrRelationship instanceof Relationship;\n+  }\n+\n+  public Relationship asRelationship()\n+  {\n+    return (Relationship) nodeOrRelationship;\n+  }\n+\n+  public PropertyContainer asPropertyContainer()\n+  {\n+    return (PropertyContainer) nodeOrRelationship;\n+  }\n+\n+  public TypedId getTypedId()\n+  {\n+    return new TypedId(getType(), getId());\n+  }\n+\n+  abstract String getType();\n+\n+  public abstract long getId();\n+\n+  public abstract boolean hasProperty(String key);\n+\n+  public abstract Object getProperty(String key);\n \n-    public static NodeOrRelationship wrap( Node node )\n+  public abstract Object getProperty(String key, Object defaultValue);\n+\n+  public abstract void setProperty(String key, Object value);\n+\n+  public abstract Object removeProperty(String key);\n+\n+  public abstract Iterable<String> getPropertyKeys();\n+\n+  public abstract Iterable<Relationship> getRelationships(\n+      Direction direction);\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    return o instanceof NodeOrRelationship && getTypedId().equals(((NodeOrRelationship) o).getTypedId());\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return getTypedId().hashCode();\n+  }\n+\n+  static class WrapNode extends NodeOrRelationship\n+  {\n+    private WrapNode(Node node)\n     {\n-        return new WrapNode( node );\n+      super(node);\n     }\n \n-    public static NodeOrRelationship wrap( Relationship rel )\n+    private Node object()\n     {\n-        return new WrapRelationship( rel );\n+      return asNode();\n     }\n \n-    public static NodeOrRelationship wrap( PropertyContainer entity )\n+    @Override\n+    public String getType()\n     {\n-        return entity instanceof Node ? wrap( (Node) entity ) : wrap( (Relationship) entity );\n+      return TYPE_NODE;\n     }\n \n-    private final Object nodeOrRelationship;\n+    @Override\n+    public long getId()\n+    {\n+      return object().getId();\n+    }\n \n-    NodeOrRelationship( Object nodeOrRelationship )\n+    @Override\n+    public boolean hasProperty(String key)\n     {\n-        this.nodeOrRelationship = nodeOrRelationship;\n+      return object().hasProperty(key);\n     }\n \n-    public boolean isNode()\n+    @Override\n+    public Object getProperty(String key)\n     {\n-        return nodeOrRelationship instanceof Node;\n+      return object().getProperty(key);\n     }\n \n-    public Node asNode()\n+    @Override\n+    public Object getProperty(String key, Object defaultValue)\n     {\n-        return (Node) nodeOrRelationship;\n+      return object().getProperty(key, defaultValue);\n     }\n \n-    public boolean isRelationship()\n+    @Override\n+    public void setProperty(String key, Object value)\n     {\n-        return nodeOrRelationship instanceof Relationship;\n+      object().setProperty(key, value);\n     }\n \n-    public Relationship asRelationship()\n+    @Override\n+    public Object removeProperty(String key)\n     {\n-        return (Relationship) nodeOrRelationship;\n+      return object().removeProperty(key);\n     }\n \n-    public PropertyContainer asPropertyContainer()\n+    @Override\n+    public Iterable<String> getPropertyKeys()\n     {\n-        return (PropertyContainer) nodeOrRelationship;\n+      return object().getPropertyKeys();\n     }\n \n-    public TypedId getTypedId()\n+    @Override\n+    public Iterable<Relationship> getRelationships(Direction direction)\n     {\n-        return new TypedId( getType(), getId() );\n+      return object().getRelationships(direction);\n     }\n \n-    abstract String getType();\n+    @Override\n+    public String toString()\n+    {\n+      return \"Shell wrapped node [\" + asNode() + \"]\";\n+    }\n+  }\n \n-    public abstract long getId();\n+  static class WrapRelationship extends NodeOrRelationship\n+  {\n+    private WrapRelationship(Relationship rel)\n+    {\n+      super(rel);\n+    }\n \n-    public abstract boolean hasProperty( String key );\n+    private Relationship object()\n+    {\n+      return asRelationship();\n+    }\n \n-    public abstract Object getProperty( String key );\n+    @Override\n+    public String getType()\n+    {\n+      return TYPE_RELATIONSHIP;\n+    }\n \n-    public abstract Object getProperty( String key, Object defaultValue );\n+    @Override\n+    public long getId()\n+    {\n+      return object().getId();\n+    }\n \n-    public abstract void setProperty( String key, Object value );\n+    @Override\n+    public boolean hasProperty(String key)\n+    {\n+      return object().hasProperty(key);\n+    }\n \n-    public abstract Object removeProperty( String key );\n+    @Override\n+    public Object getProperty(String key)\n+    {\n+      return object().getProperty(key);\n+    }\n \n-    public abstract Iterable<String> getPropertyKeys();\n+    @Override\n+    public Object getProperty(String key, Object defaultValue)\n+    {\n+      return object().getProperty(key, defaultValue);\n+    }\n \n-    public abstract Iterable<Relationship> getRelationships(\n-        Direction direction );\n+    @Override\n+    public void setProperty(String key, Object value)\n+    {\n+      object().setProperty(key, value);\n+    }\n \n     @Override\n-    public boolean equals( Object o )\n+    public Object removeProperty(String key)\n     {\n-        return o instanceof NodeOrRelationship && getTypedId().equals( ((NodeOrRelationship) o).getTypedId() );\n+      return object().removeProperty(key);\n     }\n \n     @Override\n-    public int hashCode()\n+    public Iterable<String> getPropertyKeys()\n     {\n-        return getTypedId().hashCode();\n+      return object().getPropertyKeys();\n     }\n \n-    static class WrapNode extends NodeOrRelationship\n+    @Override\n+    public Iterable<Relationship> getRelationships(Direction direction)\n     {\n-        private WrapNode( Node node )\n-        {\n-            super( node );\n-        }\n-\n-        private Node object()\n-        {\n-            return asNode();\n-        }\n-\n-        @Override\n-        public String getType()\n-        {\n-            return TYPE_NODE;\n-        }\n-\n-        @Override\n-        public long getId()\n-        {\n-            return object().getId();\n-        }\n-\n-        @Override\n-        public boolean hasProperty( String key )\n-        {\n-            return object().hasProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key )\n-        {\n-            return object().getProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key, Object defaultValue )\n-        {\n-            return object().getProperty( key, defaultValue );\n-        }\n-\n-        @Override\n-        public void setProperty( String key, Object value )\n-        {\n-            object().setProperty( key, value );\n-        }\n-\n-        @Override\n-        public Object removeProperty( String key )\n-        {\n-            return object().removeProperty( key );\n-        }\n-\n-        @Override\n-        public Iterable<String> getPropertyKeys()\n-        {\n-            return object().getPropertyKeys();\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( Direction direction )\n-        {\n-            return object().getRelationships( direction );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"Shell wrapped node [\" + asNode() + \"]\";\n-        }\n+      return new ArrayList<>();\n     }\n \n-    static class WrapRelationship extends NodeOrRelationship\n+    @Override\n+    public String toString()\n     {\n-        private WrapRelationship( Relationship rel )\n-        {\n-            super( rel );\n-        }\n-\n-        private Relationship object()\n-        {\n-            return asRelationship();\n-        }\n-\n-        @Override\n-        public String getType()\n-        {\n-            return TYPE_RELATIONSHIP;\n-        }\n-\n-        @Override\n-        public long getId()\n-        {\n-            return object().getId();\n-        }\n-\n-        @Override\n-        public boolean hasProperty( String key )\n-        {\n-            return object().hasProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key )\n-        {\n-            return object().getProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key, Object defaultValue )\n-        {\n-            return object().getProperty( key, defaultValue );\n-        }\n-\n-        @Override\n-        public void setProperty( String key, Object value )\n-        {\n-            object().setProperty( key, value );\n-        }\n-\n-        @Override\n-        public Object removeProperty( String key )\n-        {\n-            return object().removeProperty( key );\n-        }\n-\n-        @Override\n-        public Iterable<String> getPropertyKeys()\n-        {\n-            return object().getPropertyKeys();\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( Direction direction )\n-        {\n-            return new ArrayList<>();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"Shell wrapped relationship [\" + asRelationship() + \"]\";\n-        }\n+      return \"Shell wrapped relationship [\" + asRelationship() + \"]\";\n     }\n+  }\n }\n",
            "diff_size": 314
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2674/NodeOrRelationship.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2674/NodeOrRelationship.java\nindex 169a173250b..b0525bc44a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2674/NodeOrRelationship.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2674/NodeOrRelationship.java\n@@ -29,7 +29,8 @@ import org.neo4j.graphdb.Relationship;\n public abstract class NodeOrRelationship\n {\n     public static final String TYPE_NODE = \"n\";\n-    public static final String TYPE_RELATIONSHIP = \"r\";\n+\n+public static final String TYPE_RELATIONSHIP = \"r\";\n \n     public static NodeOrRelationship wrap( Node node )\n     {\n@@ -99,10 +100,9 @@ public abstract class NodeOrRelationship\n \n     public abstract Iterable<String> getPropertyKeys();\n \n-    public abstract Iterable<Relationship> getRelationships(\n-        Direction direction );\n+    public abstract Iterable<Relationship> getRelationships( Direction direction );\n \n-    @Override\n+@Override\n     public boolean equals( Object o )\n     {\n         return o instanceof NodeOrRelationship && getTypedId().equals( ((NodeOrRelationship) o).getTypedId() );\n@@ -259,4 +259,4 @@ public abstract class NodeOrRelationship\n             return \"Shell wrapped relationship [\" + asRelationship() + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "78",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "            SwingUtilities.invokeLater(new Runnable() {\n                public void run() {\n\t\t\t\t\tstageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n                }\n            });\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "86",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/32/RunAnalysisDialog.java\nindex 0ac1e08b325..88d4ae70a7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/32/RunAnalysisDialog.java\n@@ -75,7 +75,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         public void finishPerClassAnalysis() {\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n-\t\t\t\t\tstageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n+                    stageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n                 }\n             });\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/32/RunAnalysisDialog.java\nindex 0ac1e08b325..de1ff1c3386 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/32/RunAnalysisDialog.java\n@@ -75,7 +75,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         public void finishPerClassAnalysis() {\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n-\t\t\t\t\tstageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n+                    stageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n                 }\n             });\n         }\n@@ -83,39 +83,39 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         private void beginStage(final String stageName, final int goal) {\n             synchronized (this) {\n                 this.count = 0;\n-\t\t\t\tthis.goal = goal;\n+                this.goal = goal;\n             }\n \n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n                     int goal = getGoal();\n-\t\t\t\t\tstageNameLabel.setText(stageName);\n+                    stageNameLabel.setText(stageName);\n                     countValueLabel.setText(\"0/\" + goal);\n                     progressBar.setMaximum(goal);\n                     progressBar.setValue(0);\n-\t\t\t\t}\n+                }\n             });\n         }\n \n         private void step() {\n             synchronized (this) {\n                 count++;\n-\t\t\t}\n+            }\n \n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n                     int count = getCount();\n-\t\t\t\t\tint goal = getGoal();\n+                    int goal = getGoal();\n                     countValueLabel.setText(count + \"/\" + goal);\n                     progressBar.setValue(count);\n                 }\n-\t\t\t});\n+            });\n         }\n \n         public void predictPassCount(int[] classesPerPass) {\n             // noop\n         }\n-\t\t\n+\n         public void startArchive(String name) {\n             // noop\n         }\n@@ -124,17 +124,17 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     private final AnalysisRun analysisRun;\n     private Thread analysisThread;\n     private boolean completed;\n-\tprivate Exception fatalException;\n+    private Exception fatalException;\n     private int analysisPriority;\n \n     /**\n      * Creates new form RunAnalysisDialog\n      */\n-\tpublic RunAnalysisDialog(java.awt.Frame parent, AnalysisRun analysisRun_, int analysisPriority) {\n+    public RunAnalysisDialog(java.awt.Frame parent, AnalysisRun analysisRun_, int analysisPriority) {\n         super(parent, true);\n         initComponents();\n         this.analysisRun = analysisRun_;\n-\t\tthis.completed = false;\n+        this.completed = false;\n         this.analysisPriority = analysisPriority;\n \n         // Create a progress callback to give the user feedback\n@@ -144,28 +144,28 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         // This is the thread that will actually run the analysis.\n         this.analysisThread = new Thread() {\n             @Override\n-\t\t\tpublic void run() {\n+            public void run() {\n                 try {\n                     analysisRun.execute(progress);\n                     setCompleted(true);\n-\t\t\t\t} catch (java.io.IOException e) {\n+                } catch (java.io.IOException e) {\n                     setException(e);\n                 } catch (InterruptedException e) {\n                     // We don't need to do anything here.\n-\t\t\t\t\t// The completed flag is not set, so the frame\n+                    // The completed flag is not set, so the frame\n                     // will know that the analysis did not complete.\n                 } catch (Exception e) {\n                     setException(e);\n-\t\t\t\t}\n+                }\n \n                 // Send a message to the dialog that it should close\n                 // That way, it goes away without any need for user intervention\n                 SwingUtilities.invokeLater(new Runnable() {\n-\t\t\t\t\tpublic void run() {\n+                    public void run() {\n                         closeDialog(new WindowEvent(RunAnalysisDialog.this, WindowEvent.WINDOW_CLOSING));\n                     }\n                 });\n-\t\t\t}\n+            }\n         };\n     }\n \n@@ -176,7 +176,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * The creator of the dialog may call this method to find out whether\n      * or not the analysis completed normally.\n-\t */\n+     */\n     public synchronized boolean isCompleted() {\n         return completed;\n     }\n@@ -188,7 +188,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * Determine whether or not a fatal exception occurred\n      * during analysis.\n-\t */\n+     */\n     public synchronized boolean exceptionOccurred() {\n         return fatalException != null;\n     }\n@@ -196,27 +196,27 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * Get the exception that abnormally terminated the analysis.\n      */\n-\tpublic synchronized Exception getException() {\n+    public synchronized Exception getException() {\n         return fatalException;\n     }\n \n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n     private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n+        java.awt.GridBagConstraints gridBagConstraints;\n \n         findBugsLabel = new javax.swing.JLabel();\n         countLabel = new javax.swing.JLabel();\n         progressLabel = new javax.swing.JLabel();\n-\t\tprogressBar = new javax.swing.JProgressBar();\n+        progressBar = new javax.swing.JProgressBar();\n         cancelButton = new javax.swing.JButton();\n         jSeparator1 = new javax.swing.JSeparator();\n         stageLabel = new javax.swing.JLabel();\n-\t\tstageNameLabel = new javax.swing.JLabel();\n+        stageNameLabel = new javax.swing.JLabel();\n         topVerticalFiller = new javax.swing.JLabel();\n         bottomVerticalFiller = new javax.swing.JLabel();\n         countValueLabel = new javax.swing.JLabel();\n@@ -226,114 +226,115 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         setTitle(\"Run Analysis\");\n         this.setTitle(L10N.getLocalString(\"dlg.runanalysis_ttl\", \"Run Analysis\"));\n         addWindowListener(new java.awt.event.WindowAdapter() {\n-\t\t\t@Override\n+            @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 closeDialog(evt);\n             }\n-\t\t\t@Override\n+\n+            @Override\n             public void windowOpened(java.awt.event.WindowEvent evt) {\n                 formWindowOpened(evt);\n             }\n-\t\t});\n+        });\n \n         findBugsLabel.setBackground(new java.awt.Color(0, 0, 204));\n         findBugsLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n         findBugsLabel.setForeground(new java.awt.Color(255, 255, 255));\n-\t\tfindBugsLabel.setText(\"Find Bugs!\");\n+        findBugsLabel.setText(\"Find Bugs!\");\n         findBugsLabel.setOpaque(true);\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridwidth = 2;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);\n-\t\tgetContentPane().add(findBugsLabel, gridBagConstraints);\n+        getContentPane().add(findBugsLabel, gridBagConstraints);\n \n         countLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         countLabel.setText(\"Count:\");\n         countLabel.setText(L10N.getLocalString(\"dlg.count_lbl\", \"Count:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 3;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(countLabel, gridBagConstraints);\n \n         progressLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         progressLabel.setText(\"Progress:\");\n         progressLabel.setText(L10N.getLocalString(\"dlg.progress_lbl\", \"Progress:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 5;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(progressLabel, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 5;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         getContentPane().add(progressBar, gridBagConstraints);\n \n         cancelButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         cancelButton.setText(\"Cancel\");\n         cancelButton.setText(L10N.getLocalString(\"dlg.cancel_btn\", \"Cancel\"));\n-\t\tcancelButton.addActionListener(new java.awt.event.ActionListener() {\n+        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 cancelButtonActionPerformed(evt);\n             }\n-\t\t});\n+        });\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 8;\n-\t\tgridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.gridwidth = 2;\n         gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(cancelButton, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 7;\n-\t\tgridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.gridwidth = 2;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n \n         stageLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         stageLabel.setText(\"Stage:\");\n         stageLabel.setText(L10N.getLocalString(\"dlg.stage_lbl\", \"Stage:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(stageLabel, gridBagConstraints);\n \n         stageNameLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n-\t\tgridBagConstraints.gridy = 2;\n+        gridBagConstraints.gridy = 2;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(stageNameLabel, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 6;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n         gridBagConstraints.weighty = 0.5;\n         getContentPane().add(topVerticalFiller, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n         gridBagConstraints.weighty = 0.5;\n         getContentPane().add(bottomVerticalFiller, gridBagConstraints);\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         getContentPane().add(countValueLabel, gridBagConstraints);\n \n@@ -342,12 +343,12 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n \n     private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed\n         int option = JOptionPane.showConfirmDialog(this, L10N.getLocalString(\"msg.cancelanalysis_txt\", \"Cancel analysis?\"), L10N.getLocalString(\"msg.analyze_txt\", \"Analysis\"),\n-                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n+            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n \n         if (option == JOptionPane.YES_OPTION) {\n             // All we need to do to cancel the analysis is to interrupt\n             // the analysis thread.\n-\t\t\tanalysisThread.interrupt();\n+            analysisThread.interrupt();\n         }\n     }//GEN-LAST:event_cancelButtonActionPerformed\n \n@@ -364,7 +365,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         setVisible(false);\n         dispose();\n     }//GEN-LAST:event_closeDialog\n@@ -372,15 +373,15 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     // Variables declaration - do not modify//GEN-BEGIN:variables\n     private javax.swing.JLabel bottomVerticalFiller;\n     private javax.swing.JButton cancelButton;\n-\tprivate javax.swing.JLabel countLabel;\n+    private javax.swing.JLabel countLabel;\n     private javax.swing.JLabel countValueLabel;\n     private javax.swing.JLabel findBugsLabel;\n     private javax.swing.JSeparator jSeparator1;\n-\tprivate javax.swing.JProgressBar progressBar;\n+    private javax.swing.JProgressBar progressBar;\n     private javax.swing.JLabel progressLabel;\n     private javax.swing.JLabel stageLabel;\n     private javax.swing.JLabel stageNameLabel;\n-\tprivate javax.swing.JLabel topVerticalFiller;\n+    private javax.swing.JLabel topVerticalFiller;\n     // End of variables declaration//GEN-END:variables\n \n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/32/RunAnalysisDialog.java\nindex 0ac1e08b325..0bdf39aa060 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/32/RunAnalysisDialog.java\n@@ -26,10 +26,8 @@\n package edu.umd.cs.findbugs.gui;\n \n import java.awt.event.WindowEvent;\n-\n import javax.swing.JOptionPane;\n import javax.swing.SwingUtilities;\n-\n import edu.umd.cs.findbugs.FindBugsProgress;\n import edu.umd.cs.findbugs.L10N;\n \n@@ -42,7 +40,9 @@ import edu.umd.cs.findbugs.L10N;\n  *\n  * @author David Hovemeyer\n  */\n-public class RunAnalysisDialog extends javax.swing.JDialog {\n+\n+public class RunAnalysisDialog extends\n+    javax.swing.JDialog {\n     private static final long serialVersionUID = 1L;\n \n     private class RunAnalysisProgress implements FindBugsProgress {\n@@ -52,6 +52,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n             return goal;\n         }\n \n+\n         private synchronized int getCount() {\n             return count;\n         }\n@@ -75,100 +76,110 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         public void finishPerClassAnalysis() {\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n-\t\t\t\t\tstageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n+                    stageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n                 }\n             });\n         }\n \n+\n         private void beginStage(final String stageName, final int goal) {\n             synchronized (this) {\n                 this.count = 0;\n-\t\t\t\tthis.goal = goal;\n+                this.goal = goal;\n             }\n-\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n                     int goal = getGoal();\n-\t\t\t\t\tstageNameLabel.setText(stageName);\n+                    stageNameLabel.setText(stageName);\n                     countValueLabel.setText(\"0/\" + goal);\n                     progressBar.setMaximum(goal);\n                     progressBar.setValue(0);\n-\t\t\t\t}\n+                }\n             });\n         }\n \n+\n         private void step() {\n             synchronized (this) {\n                 count++;\n-\t\t\t}\n-\n+            }\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n                     int count = getCount();\n-\t\t\t\t\tint goal = getGoal();\n+                    int goal = getGoal();\n                     countValueLabel.setText(count + \"/\" + goal);\n                     progressBar.setValue(count);\n                 }\n-\t\t\t});\n+            });\n         }\n \n         public void predictPassCount(int[] classesPerPass) {\n             // noop\n         }\n-\t\t\n+\n         public void startArchive(String name) {\n             // noop\n         }\n     }\n \n+\n     private final AnalysisRun analysisRun;\n+\n     private Thread analysisThread;\n+\n     private boolean completed;\n-\tprivate Exception fatalException;\n+\n+    private Exception fatalException;\n+\n     private int analysisPriority;\n \n     /**\n      * Creates new form RunAnalysisDialog\n      */\n-\tpublic RunAnalysisDialog(java.awt.Frame parent, AnalysisRun analysisRun_, int analysisPriority) {\n+\n+\n+    public RunAnalysisDialog(java.awt.Frame parent, AnalysisRun analysisRun_, int analysisPriority) {\n         super(parent, true);\n         initComponents();\n         this.analysisRun = analysisRun_;\n-\t\tthis.completed = false;\n+        this.completed = false;\n         this.analysisPriority = analysisPriority;\n \n         // Create a progress callback to give the user feedback\n         // about how far along we are.\n+\n         final FindBugsProgress progress = new RunAnalysisProgress();\n \n         // This is the thread that will actually run the analysis.\n         this.analysisThread = new Thread() {\n             @Override\n-\t\t\tpublic void run() {\n+            public void run() {\n                 try {\n                     analysisRun.execute(progress);\n                     setCompleted(true);\n-\t\t\t\t} catch (java.io.IOException e) {\n+                } catch (java.io.IOException e) {\n                     setException(e);\n                 } catch (InterruptedException e) {\n                     // We don't need to do anything here.\n-\t\t\t\t\t// The completed flag is not set, so the frame\n+                    // The completed flag is not set, so the frame\n                     // will know that the analysis did not complete.\n+\n                 } catch (Exception e) {\n                     setException(e);\n-\t\t\t\t}\n+                }\n \n                 // Send a message to the dialog that it should close\n                 // That way, it goes away without any need for user intervention\n                 SwingUtilities.invokeLater(new Runnable() {\n-\t\t\t\t\tpublic void run() {\n+                    public void run() {\n                         closeDialog(new WindowEvent(RunAnalysisDialog.this, WindowEvent.WINDOW_CLOSING));\n                     }\n                 });\n-\t\t\t}\n+            }\n         };\n     }\n \n+\n     public synchronized void setCompleted(boolean completed) {\n         this.completed = completed;\n     }\n@@ -176,7 +187,8 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * The creator of the dialog may call this method to find out whether\n      * or not the analysis completed normally.\n-\t */\n+     */\n+\n     public synchronized boolean isCompleted() {\n         return completed;\n     }\n@@ -188,7 +200,8 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * Determine whether or not a fatal exception occurred\n      * during analysis.\n-\t */\n+     */\n+\n     public synchronized boolean exceptionOccurred() {\n         return fatalException != null;\n     }\n@@ -196,191 +209,195 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n     /**\n      * Get the exception that abnormally terminated the analysis.\n      */\n-\tpublic synchronized Exception getException() {\n+\n+    public synchronized Exception getException() {\n         return fatalException;\n     }\n \n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n-    private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n \n+\n+    private void initComponents() {//GEN-BEGIN:initComponents\n+        java.awt.GridBagConstraints gridBagConstraints;\n         findBugsLabel = new javax.swing.JLabel();\n         countLabel = new javax.swing.JLabel();\n         progressLabel = new javax.swing.JLabel();\n-\t\tprogressBar = new javax.swing.JProgressBar();\n+        progressBar = new javax.swing.JProgressBar();\n         cancelButton = new javax.swing.JButton();\n         jSeparator1 = new javax.swing.JSeparator();\n         stageLabel = new javax.swing.JLabel();\n-\t\tstageNameLabel = new javax.swing.JLabel();\n+        stageNameLabel = new javax.swing.JLabel();\n         topVerticalFiller = new javax.swing.JLabel();\n         bottomVerticalFiller = new javax.swing.JLabel();\n         countValueLabel = new javax.swing.JLabel();\n-\n         getContentPane().setLayout(new java.awt.GridBagLayout());\n-\n         setTitle(\"Run Analysis\");\n         this.setTitle(L10N.getLocalString(\"dlg.runanalysis_ttl\", \"Run Analysis\"));\n         addWindowListener(new java.awt.event.WindowAdapter() {\n-\t\t\t@Override\n+            @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 closeDialog(evt);\n             }\n-\t\t\t@Override\n+\n+            @Override\n             public void windowOpened(java.awt.event.WindowEvent evt) {\n                 formWindowOpened(evt);\n             }\n-\t\t});\n-\n+        });\n         findBugsLabel.setBackground(new java.awt.Color(0, 0, 204));\n         findBugsLabel.setFont(new java.awt.Font(\"Dialog\", 1, 24));\n         findBugsLabel.setForeground(new java.awt.Color(255, 255, 255));\n-\t\tfindBugsLabel.setText(\"Find Bugs!\");\n+        findBugsLabel.setText(\"Find Bugs!\");\n         findBugsLabel.setOpaque(true);\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridwidth = 2;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);\n-\t\tgetContentPane().add(findBugsLabel, gridBagConstraints);\n-\n+        getContentPane().add(findBugsLabel, gridBagConstraints);\n         countLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         countLabel.setText(\"Count:\");\n         countLabel.setText(L10N.getLocalString(\"dlg.count_lbl\", \"Count:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 3;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(countLabel, gridBagConstraints);\n-\n         progressLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         progressLabel.setText(\"Progress:\");\n         progressLabel.setText(L10N.getLocalString(\"dlg.progress_lbl\", \"Progress:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 5;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(progressLabel, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 5;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         getContentPane().add(progressBar, gridBagConstraints);\n-\n         cancelButton.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         cancelButton.setText(\"Cancel\");\n         cancelButton.setText(L10N.getLocalString(\"dlg.cancel_btn\", \"Cancel\"));\n-\t\tcancelButton.addActionListener(new java.awt.event.ActionListener() {\n+        cancelButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 cancelButtonActionPerformed(evt);\n             }\n-\t\t});\n-\n+        });\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 8;\n-\t\tgridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.gridwidth = 2;\n         gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(cancelButton, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 7;\n-\t\tgridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.gridwidth = 2;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n-\n         stageLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         stageLabel.setText(\"Stage:\");\n         stageLabel.setText(L10N.getLocalString(\"dlg.stage_lbl\", \"Stage:\"));\n-\t\tgridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         getContentPane().add(stageLabel, gridBagConstraints);\n-\n         stageNameLabel.setFont(new java.awt.Font(\"Dialog\", 0, 12));\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n-\t\tgridBagConstraints.gridy = 2;\n+        gridBagConstraints.gridy = 2;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(stageNameLabel, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 6;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n         gridBagConstraints.weighty = 0.5;\n         getContentPane().add(topVerticalFiller, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;\n         gridBagConstraints.weighty = 0.5;\n         getContentPane().add(bottomVerticalFiller, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 3;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         getContentPane().add(countValueLabel, gridBagConstraints);\n-\n         pack();\n     }//GEN-END:initComponents\n \n-    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed\n-        int option = JOptionPane.showConfirmDialog(this, L10N.getLocalString(\"msg.cancelanalysis_txt\", \"Cancel analysis?\"), L10N.getLocalString(\"msg.analyze_txt\", \"Analysis\"),\n-                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n \n+    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed\n+        int option = JOptionPane.showConfirmDialog(this,\n+L10N.getLocalString(\"msg.cancelanalysis_txt\", \"Cancel analysis?\"),\n+L10N.getLocalString(\"msg.analyze_txt\", \"Analysis\"),\n+JOptionPane.YES_NO_OPTION,\n+JOptionPane.QUESTION_MESSAGE);\n         if (option == JOptionPane.YES_OPTION) {\n             // All we need to do to cancel the analysis is to interrupt\n             // the analysis thread.\n-\t\t\tanalysisThread.interrupt();\n+            analysisThread.interrupt();\n         }\n     }//GEN-LAST:event_cancelButtonActionPerformed\n \n+\n     private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened\n         // Here is where we actually kick off the analysis thread.\n \n         // Lower the priority of the analysis thread to leave more\n         // CPU for interactive tasks.\n         analysisThread.setPriority(analysisPriority);\n-\n         analysisThread.start();\n     }//GEN-LAST:event_formWindowOpened\n \n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+\n+\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         setVisible(false);\n         dispose();\n     }//GEN-LAST:event_closeDialog\n \n     // Variables declaration - do not modify//GEN-BEGIN:variables\n+\n+\n     private javax.swing.JLabel bottomVerticalFiller;\n+\n     private javax.swing.JButton cancelButton;\n-\tprivate javax.swing.JLabel countLabel;\n+\n+    private javax.swing.JLabel countLabel;\n+\n     private javax.swing.JLabel countValueLabel;\n+\n     private javax.swing.JLabel findBugsLabel;\n+\n     private javax.swing.JSeparator jSeparator1;\n-\tprivate javax.swing.JProgressBar progressBar;\n+\n+    private javax.swing.JProgressBar progressBar;\n+\n     private javax.swing.JLabel progressLabel;\n+\n     private javax.swing.JLabel stageLabel;\n+\n     private javax.swing.JLabel stageNameLabel;\n-\tprivate javax.swing.JLabel topVerticalFiller;\n-    // End of variables declaration//GEN-END:variables\n \n-}\n+    private javax.swing.JLabel topVerticalFiller;\n+    // End of variables declaration//GEN-END:variables\n+}\n\\ No newline at end of file\n",
            "diff_size": 121
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "86",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/32/RunAnalysisDialog.java\nindex 0ac1e08b325..88d4ae70a7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/32/RunAnalysisDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/32/RunAnalysisDialog.java\n@@ -75,7 +75,7 @@ public class RunAnalysisDialog extends javax.swing.JDialog {\n         public void finishPerClassAnalysis() {\n             SwingUtilities.invokeLater(new Runnable() {\n                 public void run() {\n-\t\t\t\t\tstageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n+                    stageNameLabel.setText(L10N.getLocalString(\"msg.finishedanalysis_txt\", \"Finishing analysis\"));\n                 }\n             });\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
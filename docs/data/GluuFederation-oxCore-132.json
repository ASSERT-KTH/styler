{
    "project_name": "GluuFederation-oxCore",
    "error_id": "132",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public final class ProcessHelper {\n\n\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n\n    private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/132/ProcessHelper.java\nindex bb3d07e280d..a8e232ba26d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/132/ProcessHelper.java\n@@ -29,7 +29,7 @@ import org.slf4j.LoggerFactory;\n  */\n public final class ProcessHelper {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n \n     private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/132/ProcessHelper.java\nindex bb3d07e280d..14ca1ec3ecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/132/ProcessHelper.java\n@@ -29,7 +29,7 @@ import org.slf4j.LoggerFactory;\n  */\n public final class ProcessHelper {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n \n     private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n \n@@ -37,23 +37,23 @@ public final class ProcessHelper {\n     }\n \n     public static boolean executeProgram(String programPath, boolean executeInBackground, int successExitValue,\n-            OutputStream outputStream) {\n+                                         OutputStream outputStream) {\n         return executeProgram(programPath, null, executeInBackground, successExitValue, outputStream);\n     }\n \n     public static boolean executeProgram(String programPath, String workingDirectory, boolean executeInBackground,\n-            int successExitValue, OutputStream outputStream) {\n+                                         int successExitValue, OutputStream outputStream) {\n         CommandLine commandLine = new CommandLine(programPath);\n         return executeProgram(commandLine, workingDirectory, executeInBackground, successExitValue, outputStream);\n     }\n \n     public static boolean executeProgram(CommandLine commandLine, boolean executeInBackground, int successExitValue,\n-            OutputStream outputStream) {\n+                                         OutputStream outputStream) {\n         return executeProgram(commandLine, null, executeInBackground, successExitValue, outputStream);\n     }\n \n     public static boolean executeProgram(CommandLine commandLine, String workingDirectory, boolean executeInBackground,\n-            int successExitValue, OutputStream outputStream) {\n+                                         int successExitValue, OutputStream outputStream) {\n         long printJobTimeout = PRINT_JOB_TIMEOUT;\n \n         ExecuteStreamHandler streamHandler = null;\n@@ -65,7 +65,7 @@ public final class ProcessHelper {\n         try {\n             LOG.debug(String.format(\"Preparing to start process %s\", commandLine.toString()));\n             printResult = executeProgram(commandLine, workingDirectory, printJobTimeout, executeInBackground,\n-                    successExitValue, streamHandler);\n+                successExitValue, streamHandler);\n             LOG.debug(String.format(\"Successfully start process %s\", commandLine.toString()));\n         } catch (Exception ex) {\n             LOG.trace(String.format(\"Problem during starting process %s\", commandLine.toString()), ex);\n@@ -90,37 +90,31 @@ public final class ProcessHelper {\n     }\n \n     /**\n-     *\n-     * @param printJobTimeout\n-     *            the printJobTimeout (ms) before the watchdog terminates the print\n-     *            process\n-     * @param printInBackground\n-     *            printing done in the background or blocking\n+     * @param printJobTimeout   the printJobTimeout (ms) before the watchdog terminates the print\n+     *                          process\n+     * @param printInBackground printing done in the background or blocking\n      * @param streamHandler\n      * @return a print result handler (implementing a future)\n-     * @throws IOException\n-     *             the test failed\n+     * @throws IOException the test failed\n      */\n     public static PrintResultHandler executeProgram(CommandLine commandLine, long printJobTimeout,\n-            boolean printInBackground, int successExitValue, ExecuteStreamHandler streamHandler) throws IOException {\n+                                                    boolean printInBackground, int successExitValue, ExecuteStreamHandler streamHandler)\n+        throws IOException {\n         return executeProgram(commandLine, null, printJobTimeout, printInBackground, successExitValue, streamHandler);\n     }\n \n     /**\n-     *\n-     * @param printJobTimeout\n-     *            the printJobTimeout (ms) before the watchdog terminates the print\n-     *            process\n-     * @param printInBackground\n-     *            printing done in the background or blocking\n+     * @param printJobTimeout   the printJobTimeout (ms) before the watchdog terminates the print\n+     *                          process\n+     * @param printInBackground printing done in the background or blocking\n      * @param streamHandler\n      * @return a print result handler (implementing a future)\n-     * @throws IOException\n-     *             the test failed\n+     * @throws IOException the test failed\n      */\n     public static PrintResultHandler executeProgram(CommandLine commandLine, String workingDirectory,\n-            long printJobTimeout, boolean printInBackground, int successExitValue, ExecuteStreamHandler streamHandler)\n-            throws IOException {\n+                                                    long printJobTimeout, boolean printInBackground, int successExitValue,\n+                                                    ExecuteStreamHandler streamHandler)\n+        throws IOException {\n         ExecuteWatchdog watchdog = null;\n         PrintResultHandler resultHandler;\n \n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/132/ProcessHelper.java\nindex bb3d07e280d..c3a7e8d2580 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/132/ProcessHelper.java\n@@ -29,9 +29,9 @@ import org.slf4j.LoggerFactory;\n  */\n public final class ProcessHelper {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n \n-    private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n+private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n \n     private ProcessHelper() {\n     }\n@@ -119,8 +119,7 @@ public final class ProcessHelper {\n      *             the test failed\n      */\n     public static PrintResultHandler executeProgram(CommandLine commandLine, String workingDirectory,\n-            long printJobTimeout, boolean printInBackground, int successExitValue, ExecuteStreamHandler streamHandler)\n-            throws IOException {\n+            long printJobTimeout, boolean printInBackground, int successExitValue, ExecuteStreamHandler streamHandler) throws IOException {\n         ExecuteWatchdog watchdog = null;\n         PrintResultHandler resultHandler;\n \n@@ -184,4 +183,4 @@ public final class ProcessHelper {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/132/ProcessHelper.java\nindex bb3d07e280d..a8e232ba26d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/132/ProcessHelper.java\n@@ -29,7 +29,7 @@ import org.slf4j.LoggerFactory;\n  */\n public final class ProcessHelper {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n \n     private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/132/ProcessHelper.java\nindex bb3d07e280d..a8e232ba26d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/132/ProcessHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/132/ProcessHelper.java\n@@ -29,7 +29,7 @@ import org.slf4j.LoggerFactory;\n  */\n public final class ProcessHelper {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ProcessHelper.class);\n \n     private static final long PRINT_JOB_TIMEOUT = 100 * 1000;\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3240",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3240/PageCacheStressTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3240/PageCacheStressTest.java\nindex d4e3a3b7c52..217435b49a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3240/PageCacheStressTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3240/PageCacheStressTest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.stress;\n \n import java.nio.file.Path;\n@@ -37,18 +38,18 @@ import static org.neo4j.io.pagecache.tracing.PageCacheTracer.NULL;\n \n /**\n  * A stress test for page cache(s).\n- *\n+ * <p>\n  * The test will stress a page cache by mutating records and keeping an invariant for each record. Thus, before writing\n  * to a record, the record is be tested to see if the invariant still holds. Also, at the end of the test all records\n  * are verified in that same manner.\n- *\n+ * <p>\n  * The test runs using multiple threads. It relies on page cache's exclusive locks to maintain the invariant.\n- *\n+ * <p>\n  * The page cache covers a fraction of a file, and the access pattern is uniformly random, so that pages are loaded\n  * and evicted frequently.\n- *\n+ * <p>\n  * Records: a record is 1x counter for each thread, indexed by the threads' number, with 1x checksum = sum of counters.\n- *\n+ * <p>\n  * Invariant: the sum of counters is always equal to the checksum. For a blank file, this is trivially true:\n  * sum(0, 0, 0, ...) = 0. Any record mutation is a counter increment and checksum increment.\n  */\n@@ -64,7 +65,7 @@ public class PageCacheStressTest\n \n     private final Path workingDirectory;\n \n-    private PageCacheStressTest( Builder builder )\n+    private PageCacheStressTest(Builder builder)\n     {\n         this.numberOfPages = builder.numberOfPages;\n         this.numberOfThreads = builder.numberOfThreads;\n@@ -79,14 +80,14 @@ public class PageCacheStressTest\n \n     public void run() throws Exception\n     {\n-        try ( FileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              JobScheduler jobScheduler = new ThreadPoolJobScheduler() )\n+        try (FileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n+             JobScheduler jobScheduler = new ThreadPoolJobScheduler())\n         {\n-            PageSwapperFactory swapperFactory = new SingleFilePageSwapperFactory( fs );\n-            try ( PageCache pageCacheUnderTest = new MuninnPageCache( swapperFactory, jobScheduler, config( numberOfCachePages ).pageCacheTracer( tracer ) ) )\n+            PageSwapperFactory swapperFactory = new SingleFilePageSwapperFactory(fs);\n+            try (PageCache pageCacheUnderTest = new MuninnPageCache(swapperFactory, jobScheduler, config(numberOfCachePages).pageCacheTracer(tracer)))\n             {\n-                PageCacheStresser pageCacheStresser = new PageCacheStresser( numberOfPages, numberOfThreads, workingDirectory );\n-                pageCacheStresser.stress( pageCacheUnderTest, tracer, condition );\n+                PageCacheStresser pageCacheStresser = new PageCacheStresser(numberOfPages, numberOfThreads, workingDirectory);\n+                pageCacheStresser.stress(pageCacheUnderTest, tracer, condition);\n             }\n         }\n     }\n@@ -105,43 +106,43 @@ public class PageCacheStressTest\n \n         public PageCacheStressTest build()\n         {\n-            assertThat( numberOfPages )\n-                    .describedAs( \"the cache should cover only a fraction of the mapped file\" )\n-                    .isGreaterThanOrEqualTo( 10 * numberOfCachePages );\n-            return new PageCacheStressTest( this );\n+            assertThat(numberOfPages)\n+              .describedAs(\"the cache should cover only a fraction of the mapped file\")\n+              .isGreaterThanOrEqualTo(10 * numberOfCachePages);\n+            return new PageCacheStressTest(this);\n         }\n \n-        public Builder with( PageCacheTracer tracer )\n+        public Builder with(PageCacheTracer tracer)\n         {\n             this.tracer = tracer;\n             return this;\n         }\n \n-        public Builder with( Condition condition )\n+        public Builder with(Condition condition)\n         {\n             this.condition = condition;\n             return this;\n         }\n \n-        public Builder withNumberOfPages( int value )\n+        public Builder withNumberOfPages(int value)\n         {\n             this.numberOfPages = value;\n             return this;\n         }\n \n-        public Builder withNumberOfThreads( int numberOfThreads )\n+        public Builder withNumberOfThreads(int numberOfThreads)\n         {\n             this.numberOfThreads = numberOfThreads;\n             return this;\n         }\n \n-        public Builder withNumberOfCachePages( int numberOfCachePages )\n+        public Builder withNumberOfCachePages(int numberOfCachePages)\n         {\n             this.numberOfCachePages = numberOfCachePages;\n             return this;\n         }\n \n-        public Builder withWorkingDirectory( Path workingDirectory )\n+        public Builder withWorkingDirectory(Path workingDirectory)\n         {\n             this.workingDirectory = workingDirectory;\n             return this;\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
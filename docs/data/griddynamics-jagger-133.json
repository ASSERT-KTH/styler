{
    "project_name": "griddynamics-jagger",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 177).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    Logger log = LoggerFactory.getLogger(PeriodWorkloadProcess.class);\n\n    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context, ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n        super(executor, sessionId, command, context, timeoutsConfiguration);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/133/PeriodWorkloadProcess.java\nindex 36313144556..95e7c87aa6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/133/PeriodWorkloadProcess.java\n@@ -24,8 +24,9 @@ public class PeriodWorkloadProcess extends AbstractWorkloadProcess {\n \n     Logger log = LoggerFactory.getLogger(PeriodWorkloadProcess.class);\n \n-    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context, ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n-        super(executor, sessionId, command, context, timeoutsConfiguration);\n+    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context,\n+                    ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n+         super(executor, sessionId, command, context, timeoutsConfiguration);\n     }\n \n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/133/PeriodWorkloadProcess.java\nindex 36313144556..e56647c29a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/133/PeriodWorkloadProcess.java\n@@ -24,7 +24,8 @@ public class PeriodWorkloadProcess extends AbstractWorkloadProcess {\n \n     Logger log = LoggerFactory.getLogger(PeriodWorkloadProcess.class);\n \n-    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context, ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n+    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context, ThreadPoolExecutor executor,\n+                                 TimeoutsConfiguration timeoutsConfiguration) {\n         super(executor, sessionId, command, context, timeoutsConfiguration);\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/133/PeriodWorkloadProcess.java\nindex 36313144556..31330d2a37d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/133/PeriodWorkloadProcess.java\n@@ -95,4 +95,4 @@ public class PeriodWorkloadProcess extends AbstractWorkloadProcess {\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/133/PeriodWorkloadProcess.java\nindex 36313144556..95e7c87aa6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/133/PeriodWorkloadProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/133/PeriodWorkloadProcess.java\n@@ -24,8 +24,9 @@ public class PeriodWorkloadProcess extends AbstractWorkloadProcess {\n \n     Logger log = LoggerFactory.getLogger(PeriodWorkloadProcess.class);\n \n-    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context, ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n-        super(executor, sessionId, command, context, timeoutsConfiguration);\n+    public PeriodWorkloadProcess(String sessionId, StartWorkloadProcess command, NodeContext context,\n+                    ThreadPoolExecutor executor, TimeoutsConfiguration timeoutsConfiguration) {\n+         super(executor, sessionId, command, context, timeoutsConfiguration);\n     }\n \n     @Override\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
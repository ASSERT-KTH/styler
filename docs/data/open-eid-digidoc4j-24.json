{
    "project_name": "open-eid-digidoc4j",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * </p>\n * <p>\n *   {@link DataToSign#getDataToSign()} and {@link DataToSign#getDigestAlgorithm()} can be used to get the data bytes to be signed\n *   (this is usually data derived from signature parameters - SignedInfo) and\n *   digest algorithm (e.g. SHA-256, SHA-512 etc) used in signing.\n * </p>",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/24/DataToSign.java\nindex ed2cc7a90c0..15805f69091 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/24/DataToSign.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j;\n \n@@ -18,17 +18,17 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * <p>\n- *   Data to be signed externally (e.g. in the Web by a browser plugin).\n+ * Data to be signed externally (e.g. in the Web by a browser plugin).\n  * </p>\n  * <p>\n- *   {@link DataToSign#getDataToSign()} and {@link DataToSign#getDigestAlgorithm()} can be used to get the data bytes to be signed\n- *   (this is usually data derived from signature parameters - SignedInfo) and\n- *   digest algorithm (e.g. SHA-256, SHA-512 etc) used in signing.\n+ * {@link DataToSign#getDataToSign()} and {@link DataToSign#getDigestAlgorithm()} can be used to get the data bytes to be signed\n+ * (this is usually data derived from signature parameters - SignedInfo) and\n+ * digest algorithm (e.g. SHA-256, SHA-512 etc) used in signing.\n  * </p>\n  * <p>\n- *   After a signature has been created externally, then it must be included back by calling\n- *   {@link DataToSign#finalize(byte[])} with the signature value. This will return a {@link Signature} object\n- *   with the signature value, OCSP response etc included.\n+ * After a signature has been created externally, then it must be included back by calling\n+ * {@link DataToSign#finalize(byte[])} with the signature value. This will return a {@link Signature} object\n+ * with the signature value, OCSP response etc included.\n  * </p>\n  */\n public class DataToSign implements Serializable {\n@@ -41,9 +41,10 @@ public class DataToSign implements Serializable {\n \n   /**\n    * Constructor\n-   * @param data Digest value of the data\n+   *\n+   * @param data                Digest value of the data\n    * @param signatureParameters Signature parameters\n-   * @param signatureFinalizer Signature finalizer\n+   * @param signatureFinalizer  Signature finalizer\n    */\n   public DataToSign(byte[] data, SignatureParameters signatureParameters, SignatureFinalizer signatureFinalizer) {\n     this.dataToSign = data;\n@@ -53,6 +54,7 @@ public class DataToSign implements Serializable {\n \n   /**\n    * Signature parameters used to create the signature.\n+   *\n    * @return signature parameters.\n    */\n   public SignatureParameters getSignatureParameters() {\n@@ -61,6 +63,7 @@ public class DataToSign implements Serializable {\n \n   /**\n    * Signature digest algorithm to be used when creating the signature value.\n+   *\n    * @return signature digest algorithm.\n    */\n   public DigestAlgorithm getDigestAlgorithm() {\n@@ -69,6 +72,7 @@ public class DataToSign implements Serializable {\n \n   /**\n    * Data to be signed externally.\n+   *\n    * @return data bytes to be signed.\n    */\n   public byte[] getDataToSign() {\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/24/DataToSign.java\nindex ed2cc7a90c0..a0fc884b1bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/24/DataToSign.java\n@@ -86,4 +86,4 @@ public class DataToSign implements Serializable {\n     logger.debug(\"Finalizing signature\");\n     return signatureFinalizer.finalizeSignature(signatureValue);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/24/DataToSign.java\nindex ed2cc7a90c0..033369241fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/24/DataToSign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/24/DataToSign.java\n@@ -11,7 +11,6 @@\n package org.digidoc4j;\n \n import java.io.Serializable;\n-\n import org.digidoc4j.impl.SignatureFinalizer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -31,11 +30,12 @@ import org.slf4j.LoggerFactory;\n  *   with the signature value, OCSP response etc included.\n  * </p>\n  */\n+\n+\n public class DataToSign implements Serializable {\n \n   private static final Logger logger = LoggerFactory.getLogger(DataToSign.class);\n   private byte[] dataToSign;\n-\n   private SignatureParameters signatureParameters;\n   private SignatureFinalizer signatureFinalizer;\n \n@@ -45,6 +45,7 @@ public class DataToSign implements Serializable {\n    * @param signatureParameters Signature parameters\n    * @param signatureFinalizer Signature finalizer\n    */\n+\n   public DataToSign(byte[] data, SignatureParameters signatureParameters, SignatureFinalizer signatureFinalizer) {\n     this.dataToSign = data;\n     this.signatureParameters = signatureParameters;\n@@ -55,6 +56,8 @@ public class DataToSign implements Serializable {\n    * Signature parameters used to create the signature.\n    * @return signature parameters.\n    */\n+\n+\n   public SignatureParameters getSignatureParameters() {\n     return signatureParameters;\n   }\n@@ -63,6 +66,7 @@ public class DataToSign implements Serializable {\n    * Signature digest algorithm to be used when creating the signature value.\n    * @return signature digest algorithm.\n    */\n+\n   public DigestAlgorithm getDigestAlgorithm() {\n     return signatureParameters.getDigestAlgorithm();\n   }\n@@ -71,6 +75,7 @@ public class DataToSign implements Serializable {\n    * Data to be signed externally.\n    * @return data bytes to be signed.\n    */\n+\n   public byte[] getDataToSign() {\n     return dataToSign;\n   }\n@@ -82,8 +87,9 @@ public class DataToSign implements Serializable {\n    * @param signatureValue externally created signature value bytes.\n    * @return Finalized signature.\n    */\n+\n   public Signature finalize(byte[] signatureValue) {\n     logger.debug(\"Finalizing signature\");\n     return signatureFinalizer.finalizeSignature(signatureValue);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "cloudera-director-sdk",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/15/VersionsApi.java\nindex edde88b4363..335bab4f4ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/15/VersionsApi.java\n@@ -23,7 +23,7 @@ import java.util.Map;\n public class VersionsApi {\n \n   private static final Map<String, String> EMPTY_MAP =\n-    Collections.unmodifiableMap(new HashMap<String, String>());\n+      Collections.unmodifiableMap(new HashMap<String, String>());\n   private ApiClient apiClient;\n \n   public VersionsApi(ApiClient apiClient) {\n@@ -38,7 +38,7 @@ public class VersionsApi {\n    */\n   public Version get() throws ApiException {\n     return (Version) apiClient.invokeAPI(\"/api/versions\", \"GET\", EMPTY_MAP, null,\n-      EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n+        EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n   }\n \n   /**\n@@ -49,7 +49,7 @@ public class VersionsApi {\n    */\n   public String getLatestApiVersion() throws ApiException {\n     return (String) apiClient.invokeAPI(\"/api/versions/latest\", \"GET\", EMPTY_MAP, null, EMPTY_MAP,\n-      EMPTY_MAP, \"application/json\", \"\", String.class);\n+        EMPTY_MAP, \"application/json\", \"\", String.class);\n   }\n }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/15/VersionsApi.java\nindex edde88b4363..19ad4713abc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/15/VersionsApi.java\n@@ -22,8 +22,7 @@ import java.util.Map;\n \n public class VersionsApi {\n \n-  private static final Map<String, String> EMPTY_MAP =\n-    Collections.unmodifiableMap(new HashMap<String, String>());\n+  private static final Map<String, String> EMPTY_MAP = Collections.unmodifiableMap(new HashMap<String, String>());\n   private ApiClient apiClient;\n \n   public VersionsApi(ApiClient apiClient) {\n@@ -37,8 +36,7 @@ public class VersionsApi {\n    * @throws ApiException\n    */\n   public Version get() throws ApiException {\n-    return (Version) apiClient.invokeAPI(\"/api/versions\", \"GET\", EMPTY_MAP, null,\n-      EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n+    return (Version) apiClient.invokeAPI(\"/api/versions\", \"GET\", EMPTY_MAP, null, EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n   }\n \n   /**\n@@ -48,8 +46,6 @@ public class VersionsApi {\n    * @throws ApiException\n    */\n   public String getLatestApiVersion() throws ApiException {\n-    return (String) apiClient.invokeAPI(\"/api/versions/latest\", \"GET\", EMPTY_MAP, null, EMPTY_MAP,\n-      EMPTY_MAP, \"application/json\", \"\", String.class);\n+    return (String) apiClient.invokeAPI(\"/api/versions/latest\", \"GET\", EMPTY_MAP, null, EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", String.class);\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/15/VersionsApi.java\nindex edde88b4363..9eb5b50c8d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/15/VersionsApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/15/VersionsApi.java\n@@ -20,15 +20,17 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class VersionsApi {\n \n-  private static final Map<String, String> EMPTY_MAP =\n-    Collections.unmodifiableMap(new HashMap<String, String>());\n+  private static final Map<String, String> EMPTY_MAP = Collections.unmodifiableMap(new HashMap<String, String>());\n+\n   private ApiClient apiClient;\n \n+\n   public VersionsApi(ApiClient apiClient) {\n-    this.apiClient = apiClient;\n-  }\n+                                          this.apiClient = apiClient;\n+                         }\n \n   /**\n    * Returns the current version information.\n@@ -36,9 +38,9 @@ public class VersionsApi {\n    * @return The current version information.\n    * @throws ApiException\n    */\n+\n   public Version get() throws ApiException {\n-    return (Version) apiClient.invokeAPI(\"/api/versions\", \"GET\", EMPTY_MAP, null,\n-      EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n+    return (Version)apiClient.invokeAPI(\"/api/versions\", \"GET\", EMPTY_MAP, null, EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", Version.class);\n   }\n \n   /**\n@@ -47,9 +49,8 @@ public class VersionsApi {\n    * @return The latest API version supported by Director.\n    * @throws ApiException\n    */\n+\n   public String getLatestApiVersion() throws ApiException {\n-    return (String) apiClient.invokeAPI(\"/api/versions/latest\", \"GET\", EMPTY_MAP, null, EMPTY_MAP,\n-      EMPTY_MAP, \"application/json\", \"\", String.class);\n+    return (String)apiClient.invokeAPI(\"/api/versions/latest\", \"GET\", EMPTY_MAP, null, EMPTY_MAP, EMPTY_MAP, \"application/json\", \"\", String.class);\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
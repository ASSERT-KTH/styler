{
    "project_name": "DSC-SPIDAL-harp",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "3",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright 2013-2017 Indiana University\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/7/TopicCountMapCombiner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/7/TopicCountMapCombiner.java\nindex 756f9b408c9..0bff3ac1574 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/7/TopicCountMapCombiner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/7/TopicCountMapCombiner.java\n@@ -1,6 +1,6 @@\n /*\n  * Copyright 2013-2017 Indiana University\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n@@ -23,26 +23,26 @@ import it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap;\n import it.unimi.dsi.fastutil.objects.ObjectIterator;\n \n public class TopicCountMapCombiner\n-  extends PartitionCombiner<TopicCountMap> {\n+    extends PartitionCombiner<TopicCountMap> {\n \n-  @Override\n-  public PartitionStatus combine(\n-    TopicCountMap curPartition,\n-    TopicCountMap newPartition) {\n-    Int2IntOpenHashMap newTopicCount =\n-      newPartition.getTopicCount();\n-    if (!newTopicCount.isEmpty()) {\n-      Int2IntOpenHashMap curTopicCount =\n-        curPartition.getTopicCount();\n-      ObjectIterator<Int2IntMap.Entry> iterator =\n-        newTopicCount.int2IntEntrySet()\n-          .fastIterator();\n-      while (iterator.hasNext()) {\n-        Int2IntMap.Entry entry = iterator.next();\n-        curTopicCount.addTo(entry.getIntKey(),\n-          entry.getIntValue());\n-      }\n+    @Override\n+    public PartitionStatus combine(\n+        TopicCountMap curPartition,\n+        TopicCountMap newPartition) {\n+        Int2IntOpenHashMap newTopicCount =\n+            newPartition.getTopicCount();\n+        if (!newTopicCount.isEmpty()) {\n+            Int2IntOpenHashMap curTopicCount =\n+                curPartition.getTopicCount();\n+            ObjectIterator<Int2IntMap.Entry> iterator =\n+                newTopicCount.int2IntEntrySet()\n+                    .fastIterator();\n+            while (iterator.hasNext()) {\n+                Int2IntMap.Entry entry = iterator.next();\n+                curTopicCount.addTo(entry.getIntKey(),\n+                    entry.getIntValue());\n+            }\n+        }\n+        return PartitionStatus.COMBINED;\n     }\n-    return PartitionStatus.COMBINED;\n-  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/7/TopicCountMapCombiner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/7/TopicCountMapCombiner.java\nindex 756f9b408c9..32841525a88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/7/TopicCountMapCombiner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/7/TopicCountMapCombiner.java\n@@ -22,27 +22,22 @@ import it.unimi.dsi.fastutil.ints.Int2IntMap;\n import it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap;\n import it.unimi.dsi.fastutil.objects.ObjectIterator;\n \n-public class TopicCountMapCombiner\n-  extends PartitionCombiner<TopicCountMap> {\n+\n+public class TopicCountMapCombiner extends\n+  PartitionCombiner<TopicCountMap> {\n \n   @Override\n-  public PartitionStatus combine(\n-    TopicCountMap curPartition,\n-    TopicCountMap newPartition) {\n-    Int2IntOpenHashMap newTopicCount =\n-      newPartition.getTopicCount();\n-    if (!newTopicCount.isEmpty()) {\n-      Int2IntOpenHashMap curTopicCount =\n-        curPartition.getTopicCount();\n-      ObjectIterator<Int2IntMap.Entry> iterator =\n-        newTopicCount.int2IntEntrySet()\n-          .fastIterator();\n-      while (iterator.hasNext()) {\n-        Int2IntMap.Entry entry = iterator.next();\n-        curTopicCount.addTo(entry.getIntKey(),\n-          entry.getIntValue());\n-      }\n-    }\n-    return PartitionStatus.COMBINED;\n+  public PartitionStatus combine(TopicCountMap curPartition,\n+                                 TopicCountMap newPartition) {\n+                                 Int2IntOpenHashMap newTopicCount = newPartition.getTopicCount();\n+                                 if (!newTopicCount.isEmpty()) {\n+                                   Int2IntOpenHashMap curTopicCount = curPartition.getTopicCount();\n+                                   ObjectIterator<Int2IntMap.Entry> iterator = newTopicCount.int2IntEntrySet().fastIterator();\n+                                   while (iterator.hasNext()) {\n+                                     Int2IntMap.Entry entry = iterator.next();\n+                                     curTopicCount.addTo(entry.getIntKey(), entry.getIntValue());\n+                                   }\n+                                 }\n+                                 return PartitionStatus.COMBINED;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4047",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4047/ReadOnlyIndexSnapshotFileIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4047/ReadOnlyIndexSnapshotFileIterator.java\nindex 9e39e003ca3..880d9386635 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4047/ReadOnlyIndexSnapshotFileIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4047/ReadOnlyIndexSnapshotFileIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.backup;\n \n import org.apache.lucene.index.IndexCommit;\n@@ -31,44 +32,43 @@ import org.neo4j.helpers.collection.PrefetchingIterator;\n /**\n  * Iterator over Lucene read only index files for a particular {@link IndexCommit snapshot}.\n  * Applicable only to a single Lucene index partition.\n- *\n  */\n class ReadOnlyIndexSnapshotFileIterator extends PrefetchingIterator<File> implements ResourceIterator<File>\n {\n-    private final File indexDirectory;\n-    private final Iterator<String> fileNames;\n-    private final IndexCommit indexCommit;\n+  private final File indexDirectory;\n+  private final Iterator<String> fileNames;\n+  private final IndexCommit indexCommit;\n \n-    ReadOnlyIndexSnapshotFileIterator( File indexDirectory, IndexCommit indexCommit ) throws IOException\n-    {\n-        this.indexDirectory = indexDirectory;\n-        this.indexCommit = indexCommit;\n-        this.fileNames = this.indexCommit.getFileNames().iterator();\n-    }\n+  ReadOnlyIndexSnapshotFileIterator(File indexDirectory, IndexCommit indexCommit) throws IOException\n+  {\n+    this.indexDirectory = indexDirectory;\n+    this.indexCommit = indexCommit;\n+    this.fileNames = this.indexCommit.getFileNames().iterator();\n+  }\n \n-    @Override\n-    protected File fetchNextOrNull()\n+  @Override\n+  protected File fetchNextOrNull()\n+  {\n+    if (!fileNames.hasNext())\n     {\n-        if ( !fileNames.hasNext() )\n-        {\n-            return null;\n-        }\n-        return new File( indexDirectory, fileNames.next() );\n+      return null;\n     }\n+    return new File(indexDirectory, fileNames.next());\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        // nothing by default\n-    }\n+  @Override\n+  public void close()\n+  {\n+    // nothing by default\n+  }\n \n-    IndexCommit getIndexCommit()\n-    {\n-        return indexCommit;\n-    }\n+  IndexCommit getIndexCommit()\n+  {\n+    return indexCommit;\n+  }\n \n-    File getIndexDirectory()\n-    {\n-        return indexDirectory;\n-    }\n+  File getIndexDirectory()\n+  {\n+    return indexDirectory;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4047/ReadOnlyIndexSnapshotFileIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4047/ReadOnlyIndexSnapshotFileIterator.java\nindex 9e39e003ca3..27e0621cbf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4047/ReadOnlyIndexSnapshotFileIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4047/ReadOnlyIndexSnapshotFileIterator.java\n@@ -71,4 +71,4 @@ class ReadOnlyIndexSnapshotFileIterator extends PrefetchingIterator<File> implem\n     {\n         return indexDirectory;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport com.google.common.collect.ArrayListMultimap;\nimport com.google.common.collect.Multimap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/78/DefaultFactoryCollector.java\nindex 5660bc4c093..20e6171a37b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/78/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/78/DefaultFactoryCollector.java\nindex 5660bc4c093..76894fea06d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/78/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n@@ -31,7 +32,7 @@ class DefaultFactoryCollector {\n     }\n \n     Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n+                                        Collection<Class<?>> valueObjectClasses) {\n         Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n \n@@ -39,7 +40,7 @@ class DefaultFactoryCollector {\n             strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class,\n                     Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n                             .filter(this::isCandidate)\n-                            .map(candidate -> new Type[]{candidate})\n+                            .map(candidate -> new Type[] {candidate})\n                             .collect(Collectors.toList())));\n             bindGuiceFactory = false;\n         }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/78/DefaultFactoryCollector.java\nindex 5660bc4c093..7591199f40d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/78/DefaultFactoryCollector.java\n@@ -30,9 +30,8 @@ class DefaultFactoryCollector {\n         this.bindings = bindings;\n     }\n \n-    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n-        Collection<BindingStrategy> strategies = new ArrayList<>();\n+    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses, Collection<Class<?>> valueObjectClasses) {\n+    Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n \n         if (!aggregateClasses.isEmpty() || !valueObjectClasses.isEmpty()) {\n@@ -41,14 +40,13 @@ class DefaultFactoryCollector {\n                             .filter(this::isCandidate)\n                             .map(candidate -> new Type[]{candidate})\n                             .collect(Collectors.toList())));\n-            bindGuiceFactory = false;\n+        bindGuiceFactory = false;\n         }\n \n         Multimap<Type, Class<?>> producibleClasses = filterProducibleClasses(bindings);\n         if (!producibleClasses.isEmpty()) {\n-            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses,\n-                    bindGuiceFactory));\n-        }\n+            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses, bindGuiceFactory));\n+    }\n \n         return strategies;\n     }\n@@ -66,11 +64,10 @@ class DefaultFactoryCollector {\n                 .stream()\n                 .filter(entry -> isCandidate(entry.getKey()\n                         .getTypeLiteral()\n-                        .getType()))\n-                .forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n+                        .getType())).forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n                         .getTypeLiteral()\n                         .getType(), entry.getValue()));\n-        return defaultFactoryToBind;\n+return defaultFactoryToBind;\n     }\n \n     private boolean isCandidate(Type type) {\n@@ -82,4 +79,4 @@ class DefaultFactoryCollector {\n         }\n         return result && !bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "43",
                    "column": "45",
                    "severity": "warning",
                    "message": "'array initialization' child has incorrect indentation level 44, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "22",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "column": "58",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 57, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "54",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 53, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "22",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/78/DefaultFactoryCollector.java\nindex 5660bc4c093..6a8afa069da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/78/DefaultFactoryCollector.java\n@@ -23,33 +23,30 @@ import org.seedstack.business.internal.BusinessSpecifications;\n import org.seedstack.seed.core.internal.guice.BindingStrategy;\n import org.seedstack.seed.core.internal.guice.GenericBindingStrategy;\n \n+\n class DefaultFactoryCollector {\n+\n     private final Map<Key<?>, Class<?>> bindings;\n \n     DefaultFactoryCollector(Map<Key<?>, Class<?>> bindings) {\n         this.bindings = bindings;\n     }\n \n-    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n+    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses, Collection<Class<?>> valueObjectClasses) {\n         Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n-\n-        if (!aggregateClasses.isEmpty() || !valueObjectClasses.isEmpty()) {\n-            strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class,\n-                    Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n-                            .filter(this::isCandidate)\n-                            .map(candidate -> new Type[]{candidate})\n-                            .collect(Collectors.toList())));\n+        if(! aggregateClasses.isEmpty()|| ! valueObjectClasses.isEmpty()) {\n+            strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class, Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n+                .filter(this\n+                    :: isCandidate)\n+                .map(candidate-> new Type[] {\n+                                            candidate})\n+                .collect(Collectors.toList())));\n             bindGuiceFactory = false;\n+        } Multimap<Type, Class<?>> producibleClasses = filterProducibleClasses(bindings);\n+        if(! producibleClasses.isEmpty()) {\n+            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses, bindGuiceFactory));\n         }\n-\n-        Multimap<Type, Class<?>> producibleClasses = filterProducibleClasses(bindings);\n-        if (!producibleClasses.isEmpty()) {\n-            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses,\n-                    bindGuiceFactory));\n-        }\n-\n         return strategies;\n     }\n \n@@ -60,16 +57,16 @@ class DefaultFactoryCollector {\n      * @param bindings map of interface/implementation\n      * @return producible pairs\n      */\n+\n     private Multimap<Type, Class<?>> filterProducibleClasses(Map<Key<?>, Class<?>> bindings) {\n         Multimap<Type, Class<?>> defaultFactoryToBind = ArrayListMultimap.create();\n         bindings.entrySet()\n-                .stream()\n-                .filter(entry -> isCandidate(entry.getKey()\n-                        .getTypeLiteral()\n-                        .getType()))\n-                .forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n-                        .getTypeLiteral()\n-                        .getType(), entry.getValue()));\n+            .stream()\n+        .filter(entry-> isCandidate(entry.getKey()\n+            .getTypeLiteral()\n+            .getType())).forEach(entry-> defaultFactoryToBind.put(entry.getKey()\n+                .getTypeLiteral()\n+                .getType(), entry.getValue()));\n         return defaultFactoryToBind;\n     }\n \n@@ -77,9 +74,10 @@ class DefaultFactoryCollector {\n         boolean result = false;\n         if (type instanceof Class<?>) {\n             result = BusinessSpecifications.PRODUCIBLE.test((Class<?>) type);\n-        } else if (type instanceof ParameterizedType) {\n-            result = BusinessSpecifications.PRODUCIBLE.test((Class<?>) ((ParameterizedType) type).getRawType());\n-        }\n-        return result && !bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n+        } else if(type instanceof ParameterizedType) {\n+                                                         result = BusinessSpecifications.PRODUCIBLE.test((Class<?>) ((ParameterizedType) type)\n+                                                                                                                    .getRawType());\n+                                                     }\n+        return result&& ! bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/78/DefaultFactoryCollector.java\nindex 5660bc4c093..20e6171a37b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/78/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/78/DefaultFactoryCollector.java\nindex 5660bc4c093..20e6171a37b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/78/DefaultFactoryCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/78/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1760",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1760/AuthorizedRequestWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1760/AuthorizedRequestWrapper.java\nindex 41ccbfa4657..fb455b3cc83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1760/AuthorizedRequestWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1760/AuthorizedRequestWrapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.dbms;\n \n import com.sun.jersey.api.core.HttpContext;\n@@ -31,93 +32,93 @@ import org.neo4j.kernel.api.security.AnonymousContext;\n \n public class AuthorizedRequestWrapper extends HttpServletRequestWrapper\n {\n-    public static LoginContext getLoginContextFromHttpServletRequest( HttpServletRequest request )\n-    {\n-        Principal principal = request.getUserPrincipal();\n-        return getLoginContextFromUserPrincipal( principal );\n-    }\n+  public static LoginContext getLoginContextFromHttpServletRequest(HttpServletRequest request)\n+  {\n+    Principal principal = request.getUserPrincipal();\n+    return getLoginContextFromUserPrincipal(principal);\n+  }\n \n-    public static LoginContext getLoginContextFromHttpContext( HttpContext httpContext )\n-    {\n-        HttpRequestContext requestContext = httpContext.getRequest();\n-        Principal principal = requestContext.getUserPrincipal();\n-        return getLoginContextFromUserPrincipal( principal );\n-    }\n+  public static LoginContext getLoginContextFromHttpContext(HttpContext httpContext)\n+  {\n+    HttpRequestContext requestContext = httpContext.getRequest();\n+    Principal principal = requestContext.getUserPrincipal();\n+    return getLoginContextFromUserPrincipal(principal);\n+  }\n \n-    public static LoginContext getLoginContextFromUserPrincipal( Principal principal )\n+  public static LoginContext getLoginContextFromUserPrincipal(Principal principal)\n+  {\n+    if (principal instanceof DelegatingPrincipal)\n     {\n-        if ( principal instanceof DelegatingPrincipal )\n-        {\n-            return ((DelegatingPrincipal) principal).getLoginContext();\n-        }\n-        // If whitelisted uris can start transactions we cannot throw exception here\n-        //throw new IllegalArgumentException( \"Tried to get access mode on illegal user principal\" );\n-        return AnonymousContext.none();\n+      return ((DelegatingPrincipal) principal).getLoginContext();\n     }\n+    // If whitelisted uris can start transactions we cannot throw exception here\n+    //throw new IllegalArgumentException( \"Tried to get access mode on illegal user principal\" );\n+    return AnonymousContext.none();\n+  }\n \n-    private final String authType;\n-    private final DelegatingPrincipal principal;\n+  private final String authType;\n+  private final DelegatingPrincipal principal;\n \n-    public AuthorizedRequestWrapper( final String authType, final String username, final HttpServletRequest request,\n-            LoginContext loginContext )\n-    {\n-        super( request );\n-        this.authType = authType;\n-        this.principal = new DelegatingPrincipal( username, loginContext );\n-    }\n+  public AuthorizedRequestWrapper(final String authType, final String username, final HttpServletRequest request,\n+                                  LoginContext loginContext)\n+  {\n+    super(request);\n+    this.authType = authType;\n+    this.principal = new DelegatingPrincipal(username, loginContext);\n+  }\n \n-    @Override\n-    public String getAuthType()\n-    {\n-        return authType;\n-    }\n+  @Override\n+  public String getAuthType()\n+  {\n+    return authType;\n+  }\n \n-    @Override\n-    public Principal getUserPrincipal()\n-    {\n-        return principal;\n-    }\n+  @Override\n+  public Principal getUserPrincipal()\n+  {\n+    return principal;\n+  }\n \n-    @Override\n-    public boolean isUserInRole( String role )\n-    {\n-        return true;\n-    }\n+  @Override\n+  public boolean isUserInRole(String role)\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"AuthorizedRequestWrapper{\" +\n+        \"authType='\" + authType + '\\'' +\n+        \", principal=\" + principal +\n+        '}';\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return \"AuthorizedRequestWrapper{\" +\n-               \"authType='\" + authType + '\\'' +\n-               \", principal=\" + principal +\n-               '}';\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        AuthorizedRequestWrapper that = (AuthorizedRequestWrapper) o;\n-        if ( !authType.equals( that.authType ) )\n-        {\n-            return false;\n-        }\n-        return principal.equals( that.principal );\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode()\n+    AuthorizedRequestWrapper that = (AuthorizedRequestWrapper) o;\n+    if (!authType.equals(that.authType))\n     {\n-        int result = authType.hashCode();\n-        result = 31 * result + principal.hashCode();\n-        return result;\n+      return false;\n     }\n+    return principal.equals(that.principal);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = authType.hashCode();\n+    result = 31 * result + principal.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1760/AuthorizedRequestWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1760/AuthorizedRequestWrapper.java\nindex 41ccbfa4657..9769d534b30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1760/AuthorizedRequestWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1760/AuthorizedRequestWrapper.java\n@@ -87,10 +87,7 @@ public class AuthorizedRequestWrapper extends HttpServletRequestWrapper\n     @Override\n     public String toString()\n     {\n-        return \"AuthorizedRequestWrapper{\" +\n-               \"authType='\" + authType + '\\'' +\n-               \", principal=\" + principal +\n-               '}';\n+        return \"AuthorizedRequestWrapper{\" + \"authType='\" + authType + '\\'' + \", principal=\" + principal + '}';\n     }\n \n     @Override\n@@ -100,7 +97,8 @@ public class AuthorizedRequestWrapper extends HttpServletRequestWrapper\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -110,7 +108,8 @@ public class AuthorizedRequestWrapper extends HttpServletRequestWrapper\n         {\n             return false;\n         }\n-        return principal.equals( that.principal );\n+\n+return principal.equals( that.principal );\n     }\n \n     @Override\n@@ -120,4 +119,4 @@ public class AuthorizedRequestWrapper extends HttpServletRequestWrapper\n         result = 31 * result + principal.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
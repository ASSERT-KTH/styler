{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3262",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3262/LockClientStateHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3262/LockClientStateHolder.java\nindex 0d71d3a3e04..cb81f6162f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3262/LockClientStateHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3262/LockClientStateHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import java.util.concurrent.atomic.AtomicInteger;\n@@ -36,162 +37,162 @@ import java.util.concurrent.atomic.AtomicInteger;\n  */\n public final class LockClientStateHolder\n {\n-    private static final int FLAG_BITS = 2;\n-    private static final int CLIENT_BITS = Integer.SIZE - FLAG_BITS;\n-    private static final int STOPPED = 1 << CLIENT_BITS;\n-    private static final int PREPARE = 1 << CLIENT_BITS - 1;\n-    private static final int STATE_BIT_MASK = STOPPED | PREPARE;\n-    private static final int INITIAL_STATE = 0;\n-    private AtomicInteger clientState = new AtomicInteger( INITIAL_STATE );\n-\n-    /**\n-     * Check if we still have any active client\n-     *\n-     * @return true if have any open client, false otherwise.\n-     */\n-    public boolean hasActiveClients()\n-    {\n-        return getActiveClients( clientState.get() ) > 0;\n-    }\n-\n-    /**\n-     * Move the client to the PREPARE state, unless it is already STOPPED.\n-     */\n-    public void prepare( Locks.Client client )\n-    {\n-        int currentValue;\n-        int newValue;\n-        do\n-        {\n-            currentValue = clientState.get();\n-            if ( isStopped( currentValue ) )\n-            {\n-                throw new LockClientStoppedException( client );\n-            }\n-            newValue = stateWithNewStatus( currentValue, PREPARE );\n-        }\n-        while ( !clientState.compareAndSet( currentValue, newValue ) );\n-    }\n-\n-    /**\n-     * Move the client to STOPPED, unless it is already in PREPARE.\n-     */\n-    public boolean stopClient()\n-    {\n-        int currentValue;\n-        int newValue;\n-        do\n-        {\n-            currentValue = clientState.get();\n-            if ( isPrepare( currentValue ) )\n-            {\n-                return false; // Can't stop clients that are in PREPARE\n-            }\n-            newValue = stateWithNewStatus( currentValue, STOPPED );\n-        }\n-        while ( !clientState.compareAndSet( currentValue, newValue ) );\n-        return true;\n-    }\n-\n-    /**\n-     * Move the client to STOPPED as part of closing the current client, regardless of what state it is currently in.\n-     */\n-    public void closeClient()\n+  private static final int FLAG_BITS = 2;\n+  private static final int CLIENT_BITS = Integer.SIZE - FLAG_BITS;\n+  private static final int STOPPED = 1 << CLIENT_BITS;\n+  private static final int PREPARE = 1 << CLIENT_BITS - 1;\n+  private static final int STATE_BIT_MASK = STOPPED | PREPARE;\n+  private static final int INITIAL_STATE = 0;\n+  private AtomicInteger clientState = new AtomicInteger(INITIAL_STATE);\n+\n+  /**\n+   * Check if we still have any active client\n+   *\n+   * @return true if have any open client, false otherwise.\n+   */\n+  public boolean hasActiveClients()\n+  {\n+    return getActiveClients(clientState.get()) > 0;\n+  }\n+\n+  /**\n+   * Move the client to the PREPARE state, unless it is already STOPPED.\n+   */\n+  public void prepare(Locks.Client client)\n+  {\n+    int currentValue;\n+    int newValue;\n+    do\n     {\n-        int currentValue;\n-        int newValue;\n-        do\n-        {\n-            currentValue = clientState.get();\n-            newValue = stateWithNewStatus( currentValue, STOPPED );\n-        }\n-        while ( !clientState.compareAndSet( currentValue, newValue ) );\n+      currentValue = clientState.get();\n+      if (isStopped(currentValue))\n+      {\n+        throw new LockClientStoppedException(client);\n+      }\n+      newValue = stateWithNewStatus(currentValue, PREPARE);\n     }\n-\n-    /**\n-     * Increment active number of clients that use current state instance.\n-     *\n-     * @param client the locks client associated with this state; used only to create pretty exception\n-     * with {@link LockClientStoppedException#LockClientStoppedException(Locks.Client)}.\n-     * @throws LockClientStoppedException when stopped.\n-     */\n-    public void incrementActiveClients( Locks.Client client )\n+    while (!clientState.compareAndSet(currentValue, newValue));\n+  }\n+\n+  /**\n+   * Move the client to STOPPED, unless it is already in PREPARE.\n+   */\n+  public boolean stopClient()\n+  {\n+    int currentValue;\n+    int newValue;\n+    do\n     {\n-        int currentState;\n-        do\n-        {\n-            currentState = clientState.get();\n-            if ( isStopped( currentState ) )\n-            {\n-                throw new LockClientStoppedException( client );\n-            }\n-        }\n-        while ( !clientState.compareAndSet( currentState, incrementActiveClients( currentState ) ) );\n+      currentValue = clientState.get();\n+      if (isPrepare(currentValue))\n+      {\n+        return false; // Can't stop clients that are in PREPARE\n+      }\n+      newValue = stateWithNewStatus(currentValue, STOPPED);\n     }\n-\n-    /**\n-     * Decrement number of active clients that use current client state object.\n-     */\n-    public void decrementActiveClients()\n+    while (!clientState.compareAndSet(currentValue, newValue));\n+    return true;\n+  }\n+\n+  /**\n+   * Move the client to STOPPED as part of closing the current client, regardless of what state it is currently in.\n+   */\n+  public void closeClient()\n+  {\n+    int currentValue;\n+    int newValue;\n+    do\n     {\n-        int currentState;\n-        do\n-        {\n-            currentState = clientState.get();\n-        }\n-        while ( !clientState.compareAndSet( currentState, decrementActiveClients( currentState ) ) );\n+      currentValue = clientState.get();\n+      newValue = stateWithNewStatus(currentValue, STOPPED);\n     }\n-\n-    /**\n-     * Check if stopped\n-     *\n-     * @return true if client is stopped, false otherwise\n-     */\n-    public boolean isStopped()\n+    while (!clientState.compareAndSet(currentValue, newValue));\n+  }\n+\n+  /**\n+   * Increment active number of clients that use current state instance.\n+   *\n+   * @param client the locks client associated with this state; used only to create pretty exception\n+   *               with {@link LockClientStoppedException#LockClientStoppedException(Locks.Client)}.\n+   * @throws LockClientStoppedException when stopped.\n+   */\n+  public void incrementActiveClients(Locks.Client client)\n+  {\n+    int currentState;\n+    do\n     {\n-        return isStopped( clientState.get() );\n+      currentState = clientState.get();\n+      if (isStopped(currentState))\n+      {\n+        throw new LockClientStoppedException(client);\n+      }\n     }\n-\n-    /**\n-     * Reset state to initial state disregard any current state or number of active clients\n-     */\n-    public void reset()\n-    {\n-        clientState.set( INITIAL_STATE );\n-    }\n-\n-    private boolean isPrepare( int clientState )\n-    {\n-        return getStatus( clientState ) == PREPARE;\n-    }\n-\n-    private boolean isStopped( int clientState )\n-    {\n-        return getStatus( clientState ) == STOPPED;\n-    }\n-\n-    private int getStatus( int clientState )\n-    {\n-        return clientState & STATE_BIT_MASK;\n-    }\n-\n-    private int getActiveClients( int clientState )\n-    {\n-        return clientState & ~STATE_BIT_MASK;\n-    }\n-\n-    private int stateWithNewStatus( int clientState, int newStatus )\n-    {\n-        return newStatus | getActiveClients( clientState );\n-    }\n-\n-    private int incrementActiveClients( int clientState )\n-    {\n-        return getStatus( clientState ) | Math.incrementExact( getActiveClients( clientState ) );\n-    }\n-\n-    private int decrementActiveClients( int clientState )\n+    while (!clientState.compareAndSet(currentState, incrementActiveClients(currentState)));\n+  }\n+\n+  /**\n+   * Decrement number of active clients that use current client state object.\n+   */\n+  public void decrementActiveClients()\n+  {\n+    int currentState;\n+    do\n     {\n-        return getStatus( clientState ) | Math.decrementExact( getActiveClients( clientState ) );\n+      currentState = clientState.get();\n     }\n+    while (!clientState.compareAndSet(currentState, decrementActiveClients(currentState)));\n+  }\n+\n+  /**\n+   * Check if stopped\n+   *\n+   * @return true if client is stopped, false otherwise\n+   */\n+  public boolean isStopped()\n+  {\n+    return isStopped(clientState.get());\n+  }\n+\n+  /**\n+   * Reset state to initial state disregard any current state or number of active clients\n+   */\n+  public void reset()\n+  {\n+    clientState.set(INITIAL_STATE);\n+  }\n+\n+  private boolean isPrepare(int clientState)\n+  {\n+    return getStatus(clientState) == PREPARE;\n+  }\n+\n+  private boolean isStopped(int clientState)\n+  {\n+    return getStatus(clientState) == STOPPED;\n+  }\n+\n+  private int getStatus(int clientState)\n+  {\n+    return clientState & STATE_BIT_MASK;\n+  }\n+\n+  private int getActiveClients(int clientState)\n+  {\n+    return clientState & ~STATE_BIT_MASK;\n+  }\n+\n+  private int stateWithNewStatus(int clientState, int newStatus)\n+  {\n+    return newStatus | getActiveClients(clientState);\n+  }\n+\n+  private int incrementActiveClients(int clientState)\n+  {\n+    return getStatus(clientState) | Math.incrementExact(getActiveClients(clientState));\n+  }\n+\n+  private int decrementActiveClients(int clientState)\n+  {\n+    return getStatus(clientState) | Math.decrementExact(getActiveClients(clientState));\n+  }\n }\n",
            "diff_size": 224
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3262/LockClientStateHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3262/LockClientStateHolder.java\nindex 0d71d3a3e04..1f1965a5842 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3262/LockClientStateHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3262/LockClientStateHolder.java\n@@ -68,7 +68,8 @@ public final class LockClientStateHolder\n             {\n                 throw new LockClientStoppedException( client );\n             }\n-            newValue = stateWithNewStatus( currentValue, PREPARE );\n+\n+newValue = stateWithNewStatus( currentValue, PREPARE );\n         }\n         while ( !clientState.compareAndSet( currentValue, newValue ) );\n     }\n@@ -194,4 +195,4 @@ public final class LockClientStateHolder\n     {\n         return getStatus( clientState ) | Math.decrementExact( getActiveClients( clientState ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "open-eid-digidoc4j",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "93",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 143).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    } catch (Exception e) {\n      publishExternalServiceAccessEvent(url, false);\n      throw new NetworkException(\"Unable to process <\" + getServiceType() + \"> POST call for service <\" + url + \">\", url, getServiceType(), e);\n    } finally {\n      try {\n        if (httpRequest != null) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/35/SkDataLoader.java\nindex aa4a60cf3b7..7fa70c399ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/35/SkDataLoader.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl;\n \n@@ -90,7 +90,8 @@ public abstract class SkDataLoader extends CommonsDataLoader {\n       throw e;\n     } catch (Exception e) {\n       publishExternalServiceAccessEvent(url, false);\n-      throw new NetworkException(\"Unable to process <\" + getServiceType() + \"> POST call for service <\" + url + \">\", url, getServiceType(), e);\n+      throw new NetworkException(\"Unable to process <\" + getServiceType() + \"> POST call for service <\" + url + \">\",\n+          url, getServiceType(), e);\n     } finally {\n       try {\n         if (httpRequest != null) {\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/35/SkDataLoader.java\nindex aa4a60cf3b7..0d1403c88a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/35/SkDataLoader.java\n@@ -131,4 +131,4 @@ public abstract class SkDataLoader extends CommonsDataLoader {\n   public String getUserAgent() {\n     return userAgent;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "column": "71",
                    "severity": "error",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/35/SkDataLoader.java\nindex aa4a60cf3b7..13d27f0d6a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/35/SkDataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/35/SkDataLoader.java\n@@ -31,7 +31,6 @@ import org.digidoc4j.exceptions.TechnicalException;\n import org.digidoc4j.impl.asic.DataLoaderDecorator;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.ByteArrayInputStream;\n import java.io.InterruptedIOException;\n import java.net.URI;\n@@ -40,6 +39,8 @@ import java.net.UnknownHostException;\n /**\n  * Data loader implementation for SK ID Solutions AS\n  */\n+\n+\n public abstract class SkDataLoader extends CommonsDataLoader {\n \n   protected static final Logger LOGGER = LoggerFactory.getLogger(SkDataLoader.class);\n@@ -112,10 +113,10 @@ public abstract class SkDataLoader extends CommonsDataLoader {\n   }\n \n   private void publishExternalServiceAccessEvent(final String url, final boolean success) {\n-    ServiceAccessScope.notifyExternalServiceAccessListenerIfPresent(() -> {\n-      final ServiceType serviceType = getServiceType();\n-      return new ServiceAccessEvent(url, serviceType, success);\n-    });\n+    ServiceAccessScope.notifyExternalServiceAccessListenerIfPresent(()-> {\n+                                                                      final ServiceType serviceType = getServiceType();\n+                                                                      return new ServiceAccessEvent(url, serviceType, success);\n+                                                                    });\n   }\n \n   protected abstract ServiceType getServiceType();\n@@ -124,6 +125,7 @@ public abstract class SkDataLoader extends CommonsDataLoader {\n    * ACCESSORS\n    */\n \n+\n   public void setUserAgent(String userAgent) {\n     this.userAgent = userAgent;\n   }\n@@ -131,4 +133,4 @@ public abstract class SkDataLoader extends CommonsDataLoader {\n   public String getUserAgent() {\n     return userAgent;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
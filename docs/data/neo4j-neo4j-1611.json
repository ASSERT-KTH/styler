{
    "project_name": "neo4j-neo4j",
    "error_id": "1611",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1611/DelegatingPageSwapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1611/DelegatingPageSwapper.java\nindex 8088cc8ee4a..9faf0e85e5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1611/DelegatingPageSwapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1611/DelegatingPageSwapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache;\n \n import java.io.IOException;\n@@ -24,28 +25,28 @@ import java.nio.file.Path;\n \n /**\n  * A PageSwapper that delegates all calls to a wrapped PageSwapper instance.\n- *\n+ * <p>\n  * Useful for overriding specific functionality in a sub-class.\n  */\n public class DelegatingPageSwapper implements PageSwapper\n {\n     private final PageSwapper delegate;\n \n-    public DelegatingPageSwapper( PageSwapper delegate )\n+    public DelegatingPageSwapper(PageSwapper delegate)\n     {\n         this.delegate = delegate;\n     }\n \n     @Override\n-    public long read( long filePageId, long bufferAddress ) throws IOException\n+    public long read(long filePageId, long bufferAddress) throws IOException\n     {\n-        return delegate.read( filePageId, bufferAddress );\n+        return delegate.read(filePageId, bufferAddress);\n     }\n \n     @Override\n-    public long read( long filePageId, long bufferAddress, int bufferLength ) throws IOException\n+    public long read(long filePageId, long bufferAddress, int bufferLength) throws IOException\n     {\n-        return delegate.read( filePageId, bufferAddress, bufferLength );\n+        return delegate.read(filePageId, bufferAddress, bufferLength);\n     }\n \n     @Override\n@@ -55,9 +56,9 @@ public class DelegatingPageSwapper implements PageSwapper\n     }\n \n     @Override\n-    public void evicted( long filePageId )\n+    public void evicted(long filePageId)\n     {\n-        delegate.evicted( filePageId );\n+        delegate.evicted(filePageId);\n     }\n \n     @Override\n@@ -73,15 +74,15 @@ public class DelegatingPageSwapper implements PageSwapper\n     }\n \n     @Override\n-    public long write( long filePageId, long bufferAddress ) throws IOException\n+    public long write(long filePageId, long bufferAddress) throws IOException\n     {\n-        return delegate.write( filePageId, bufferAddress );\n+        return delegate.write(filePageId, bufferAddress);\n     }\n \n     @Override\n-    public long write( long filePageId, long bufferAddress, int bufferLength ) throws IOException\n+    public long write(long filePageId, long bufferAddress, int bufferLength) throws IOException\n     {\n-        return delegate.write( filePageId, bufferAddress, bufferLength );\n+        return delegate.write(filePageId, bufferAddress, bufferLength);\n     }\n \n     @Override\n@@ -103,9 +104,9 @@ public class DelegatingPageSwapper implements PageSwapper\n     }\n \n     @Override\n-    public void allocate( long newFileSize ) throws IOException\n+    public void allocate(long newFileSize) throws IOException\n     {\n-        delegate.allocate( newFileSize );\n+        delegate.allocate(newFileSize);\n     }\n \n     @Override\n@@ -115,15 +116,15 @@ public class DelegatingPageSwapper implements PageSwapper\n     }\n \n     @Override\n-    public long read( long startFilePageId, long[] bufferAddresses, int[] bufferLengths, int length ) throws IOException\n+    public long read(long startFilePageId, long[] bufferAddresses, int[] bufferLengths, int length) throws IOException\n     {\n-        return delegate.read( startFilePageId, bufferAddresses, bufferLengths, length );\n+        return delegate.read(startFilePageId, bufferAddresses, bufferLengths, length);\n     }\n \n     @Override\n-    public long write( long startFilePageId, long[] bufferAddresses, int[] bufferLengths, int length, int totalAffectedPages )\n-            throws IOException\n+    public long write(long startFilePageId, long[] bufferAddresses, int[] bufferLengths, int length, int totalAffectedPages)\n+      throws IOException\n     {\n-        return delegate.write( startFilePageId, bufferAddresses, bufferLengths, length, totalAffectedPages );\n+        return delegate.write(startFilePageId, bufferAddresses, bufferLengths, length, totalAffectedPages);\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
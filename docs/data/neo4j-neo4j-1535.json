{
    "project_name": "neo4j-neo4j",
    "error_id": "1535",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1535/BlockEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1535/BlockEntry.java\nindex b2cc7078159..fea21469925 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1535/BlockEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1535/BlockEntry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.Layout;\n@@ -34,12 +35,12 @@ import static org.neo4j.index.internal.gbptree.DynamicSizeUtil.readKeyValueSize;\n  * container class for key-value pairs, it also provide static methods for serializing and deserializing {@link BlockEntry} instances and calculating total\n  * store size of them.\n  */\n-class BlockEntry<KEY,VALUE>\n+class BlockEntry<KEY, VALUE>\n {\n     private final KEY key;\n     private final VALUE value;\n \n-    BlockEntry( KEY key, VALUE value )\n+    BlockEntry(KEY key, VALUE value)\n     {\n         this.key = key;\n         this.value = value;\n@@ -58,56 +59,56 @@ class BlockEntry<KEY,VALUE>\n     @Override\n     public String toString()\n     {\n-        return format( \"[%s=%s]\", key, value );\n+        return format(\"[%s=%s]\", key, value);\n     }\n \n-    static <VALUE, KEY> int entrySize( Layout<KEY,VALUE> layout, KEY key, VALUE value )\n+    static <VALUE, KEY> int entrySize(Layout<KEY, VALUE> layout, KEY key, VALUE value)\n     {\n-        int keySize = layout.keySize( key );\n-        int valueSize = layout.valueSize( value );\n-        return keySize + valueSize + getOverhead( keySize, valueSize, false );\n+        int keySize = layout.keySize(key);\n+        int valueSize = layout.valueSize(value);\n+        return keySize + valueSize + getOverhead(keySize, valueSize, false);\n     }\n \n-    static <VALUE, KEY> int keySize( Layout<KEY,VALUE> layout, KEY key )\n+    static <VALUE, KEY> int keySize(Layout<KEY, VALUE> layout, KEY key)\n     {\n-        int keySize = layout.keySize( key );\n-        return keySize + getOverhead( keySize, 0, false );\n+        int keySize = layout.keySize(key);\n+        return keySize + getOverhead(keySize, 0, false);\n     }\n \n-    static <KEY, VALUE> BlockEntry<KEY,VALUE> read( PageCursor pageCursor, Layout<KEY,VALUE> layout )\n+    static <KEY, VALUE> BlockEntry<KEY, VALUE> read(PageCursor pageCursor, Layout<KEY, VALUE> layout)\n     {\n         KEY key = layout.newKey();\n         VALUE value = layout.newValue();\n-        read( pageCursor, layout, key, value );\n-        return new BlockEntry<>( key, value );\n+        read(pageCursor, layout, key, value);\n+        return new BlockEntry<>(key, value);\n     }\n \n-    static <KEY, VALUE> void read( PageCursor pageCursor, Layout<KEY,VALUE> layout, KEY key, VALUE value )\n+    static <KEY, VALUE> void read(PageCursor pageCursor, Layout<KEY, VALUE> layout, KEY key, VALUE value)\n     {\n-        long entrySize = readKeyValueSize( pageCursor, false );\n-        layout.readKey( pageCursor, key, extractKeySize( entrySize ) );\n-        layout.readValue( pageCursor, value, extractValueSize( entrySize ) );\n+        long entrySize = readKeyValueSize(pageCursor, false);\n+        layout.readKey(pageCursor, key, extractKeySize(entrySize));\n+        layout.readValue(pageCursor, value, extractValueSize(entrySize));\n     }\n \n-    static <KEY, VALUE> void read( PageCursor pageCursor, Layout<KEY,VALUE> layout, KEY key )\n+    static <KEY, VALUE> void read(PageCursor pageCursor, Layout<KEY, VALUE> layout, KEY key)\n     {\n-        long entrySize = readKeyValueSize( pageCursor, false );\n-        layout.readKey( pageCursor, key, extractKeySize( entrySize ) );\n+        long entrySize = readKeyValueSize(pageCursor, false);\n+        layout.readKey(pageCursor, key, extractKeySize(entrySize));\n     }\n \n-    static <KEY, VALUE> void write( PageCursor pageCursor, Layout<KEY,VALUE> layout, KEY key, VALUE value )\n+    static <KEY, VALUE> void write(PageCursor pageCursor, Layout<KEY, VALUE> layout, KEY key, VALUE value)\n     {\n-        int keySize = layout.keySize( key );\n-        int valueSize = layout.valueSize( value );\n-        putKeyValueSize( pageCursor, keySize, valueSize, false );\n-        layout.writeKey( pageCursor, key );\n-        layout.writeValue( pageCursor, value );\n+        int keySize = layout.keySize(key);\n+        int valueSize = layout.valueSize(value);\n+        putKeyValueSize(pageCursor, keySize, valueSize, false);\n+        layout.writeKey(pageCursor, key);\n+        layout.writeValue(pageCursor, value);\n     }\n \n-    static <KEY, VALUE> void write( PageCursor pageCursor, Layout<KEY,VALUE> layout, KEY key )\n+    static <KEY, VALUE> void write(PageCursor pageCursor, Layout<KEY, VALUE> layout, KEY key)\n     {\n-        int keySize = layout.keySize( key );\n-        putKeyValueSize( pageCursor, keySize, 0, false );\n-        layout.writeKey( pageCursor, key );\n+        int keySize = layout.keySize(key);\n+        putKeyValueSize(pageCursor, keySize, 0, false);\n+        layout.writeKey(pageCursor, key);\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2401",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2401/IndexPopulationProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2401/IndexPopulationProgress.java\nindex 072f94ce92f..df1944e87e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2401/IndexPopulationProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2401/IndexPopulationProgress.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.index;\n \n /**\n@@ -27,49 +28,49 @@ package org.neo4j.graphdb.index;\n  */\n public class IndexPopulationProgress\n {\n-    public static final IndexPopulationProgress NONE = new IndexPopulationProgress( 0, 0 );\n-    public static final IndexPopulationProgress DONE = new IndexPopulationProgress( 1, 1 );\n+  public static final IndexPopulationProgress NONE = new IndexPopulationProgress(0, 0);\n+  public static final IndexPopulationProgress DONE = new IndexPopulationProgress(1, 1);\n \n-    private final long completedCount;\n-    private final long totalCount;\n+  private final long completedCount;\n+  private final long totalCount;\n \n-    public IndexPopulationProgress( long completed, long total )\n+  public IndexPopulationProgress(long completed, long total)\n+  {\n+    if (total < 0 || completed < 0 || completed > total)\n     {\n-        if ( total < 0 || completed < 0 || completed > total )\n-        {\n-            throw new IllegalArgumentException( \"Invalid progress specified: \" + completed + \"/\" + total );\n-        }\n-        this.completedCount = completed;\n-        this.totalCount = total;\n+      throw new IllegalArgumentException(\"Invalid progress specified: \" + completed + \"/\" + total);\n     }\n+    this.completedCount = completed;\n+    this.totalCount = total;\n+  }\n \n-    /**\n-     * @return percentage (from 0 to 100) of totalCount items which have been indexed. If totalCount is 0, returns 0.\n-     */\n-    public float getCompletedPercentage()\n-    {\n-        return totalCount > 0 ? ((float) (completedCount * 100) / totalCount) : 0.0f;\n-    }\n+  /**\n+   * @return percentage (from 0 to 100) of totalCount items which have been indexed. If totalCount is 0, returns 0.\n+   */\n+  public float getCompletedPercentage()\n+  {\n+    return totalCount > 0 ? ((float) (completedCount * 100) / totalCount) : 0.0f;\n+  }\n \n-    /**\n-     * @return number of completed items\n-     */\n-    public long getCompletedCount()\n-    {\n-        return completedCount;\n-    }\n+  /**\n+   * @return number of completed items\n+   */\n+  public long getCompletedCount()\n+  {\n+    return completedCount;\n+  }\n \n-    /**\n-     * @return total number of items to index\n-     */\n-    public long getTotalCount()\n-    {\n-        return totalCount;\n-    }\n+  /**\n+   * @return total number of items to index\n+   */\n+  public long getTotalCount()\n+  {\n+    return totalCount;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"%1.1f%%\", getCompletedPercentage() );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%1.1f%%\", getCompletedPercentage());\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "53",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2401/IndexPopulationProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2401/IndexPopulationProgress.java\nindex 072f94ce92f..222f5655901 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2401/IndexPopulationProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2401/IndexPopulationProgress.java\n@@ -35,7 +35,7 @@ public class IndexPopulationProgress\n \n     public IndexPopulationProgress( long completed, long total )\n     {\n-        if ( total < 0 || completed < 0 || completed > total )\n+        if ( total < 0 || completed < 0 || completed> total )\n         {\n             throw new IllegalArgumentException( \"Invalid progress specified: \" + completed + \"/\" + total );\n         }\n@@ -48,7 +48,7 @@ public class IndexPopulationProgress\n      */\n     public float getCompletedPercentage()\n     {\n-        return totalCount > 0 ? ((float) (completedCount * 100) / totalCount) : 0.0f;\n+        return totalCount> 0 ? ((float) ( completedCount * 100) / totalCount) : 0.0f;\n     }\n \n     /**\n@@ -72,4 +72,4 @@ public class IndexPopulationProgress\n     {\n         return String.format( \"%1.1f%%\", getCompletedPercentage() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
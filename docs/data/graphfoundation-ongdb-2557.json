{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2557",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2557/ServerExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2557/ServerExtender.java\nindex 84c876f796f..10fa2144515 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2557/ServerExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2557/ServerExtender.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import java.util.Collections;\n@@ -32,96 +33,96 @@ import org.neo4j.helpers.collection.NestingIterable;\n \n public final class ServerExtender\n {\n-    @SuppressWarnings( \"unchecked\" )\n-    private final Map<Class<?>, Map<String, PluginPoint>> targetToPluginMap = new HashMap();\n-    private PluginPointFactory pluginPointFactory;\n+  @SuppressWarnings(\"unchecked\")\n+  private final Map<Class<?>, Map<String, PluginPoint>> targetToPluginMap = new HashMap();\n+  private PluginPointFactory pluginPointFactory;\n \n-    ServerExtender( PluginPointFactory pluginPointFactory )\n-    {\n-        this.pluginPointFactory = pluginPointFactory;\n-        targetToPluginMap.put( Node.class, new ConcurrentHashMap<>() );\n-        targetToPluginMap.put( Relationship.class, new ConcurrentHashMap<>() );\n-        targetToPluginMap.put( GraphDatabaseService.class, new ConcurrentHashMap<>() );\n-    }\n+  ServerExtender(PluginPointFactory pluginPointFactory)\n+  {\n+    this.pluginPointFactory = pluginPointFactory;\n+    targetToPluginMap.put(Node.class, new ConcurrentHashMap<>());\n+    targetToPluginMap.put(Relationship.class, new ConcurrentHashMap<>());\n+    targetToPluginMap.put(GraphDatabaseService.class, new ConcurrentHashMap<>());\n+  }\n \n-    Iterable<PluginPoint> getExtensionsFor( Class<?> type )\n+  Iterable<PluginPoint> getExtensionsFor(Class<?> type)\n+  {\n+    Map<String, PluginPoint> ext = targetToPluginMap.get(type);\n+    if (ext == null)\n     {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n-        if ( ext == null )\n-        {\n-            return Collections.emptyList();\n-        }\n-        return ext.values();\n+      return Collections.emptyList();\n     }\n+    return ext.values();\n+  }\n \n-    Iterable<PluginPoint> all()\n+  Iterable<PluginPoint> all()\n+  {\n+    return new NestingIterable<PluginPoint, Map<String, PluginPoint>>(\n+        targetToPluginMap.values())\n     {\n-        return new NestingIterable<PluginPoint, Map<String, PluginPoint>>(\n-                targetToPluginMap.values() )\n-        {\n-            @Override\n-            protected Iterator<PluginPoint> createNestedIterator(\n-                    Map<String, PluginPoint> item )\n-            {\n-                return item.values().iterator();\n-            }\n-        };\n-    }\n+      @Override\n+      protected Iterator<PluginPoint> createNestedIterator(\n+          Map<String, PluginPoint> item)\n+      {\n+        return item.values().iterator();\n+      }\n+    };\n+  }\n \n-    PluginPoint getExtensionPoint( Class<?> type, String method )\n-            throws PluginLookupException\n+  PluginPoint getExtensionPoint(Class<?> type, String method)\n+      throws PluginLookupException\n+  {\n+    Map<String, PluginPoint> ext = targetToPluginMap.get(type);\n+    PluginPoint plugin = null;\n+    if (ext != null)\n     {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n-        PluginPoint plugin = null;\n-        if ( ext != null )\n-        {\n-            plugin = ext.get( method );\n-        }\n-        if ( plugin == null )\n-        {\n-            throw new PluginLookupException( \"No plugin \\\"\" + method + \"\\\" for \" + type );\n-        }\n-        return plugin;\n+      plugin = ext.get(method);\n     }\n-\n-    void addExtension( Class<?> type, PluginPoint plugin )\n+    if (plugin == null)\n     {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n-        if ( ext == null )\n-        {\n-            throw new IllegalStateException( \"Cannot extend \" + type );\n-        }\n-        add( ext, plugin );\n+      throw new PluginLookupException(\"No plugin \\\"\" + method + \"\\\" for \" + type);\n     }\n+    return plugin;\n+  }\n \n-    public void addGraphDatabaseExtensions( PluginPoint plugin )\n+  void addExtension(Class<?> type, PluginPoint plugin)\n+  {\n+    Map<String, PluginPoint> ext = targetToPluginMap.get(type);\n+    if (ext == null)\n     {\n-        add( targetToPluginMap.get( GraphDatabaseService.class ), plugin );\n+      throw new IllegalStateException(\"Cannot extend \" + type);\n     }\n+    add(ext, plugin);\n+  }\n \n-    public void addNodeExtensions( PluginPoint plugin )\n-    {\n-        add( targetToPluginMap.get( Node.class ), plugin );\n-    }\n+  public void addGraphDatabaseExtensions(PluginPoint plugin)\n+  {\n+    add(targetToPluginMap.get(GraphDatabaseService.class), plugin);\n+  }\n \n-    public void addRelationshipExtensions( PluginPoint plugin )\n-    {\n-        add( targetToPluginMap.get( Relationship.class ), plugin );\n-    }\n+  public void addNodeExtensions(PluginPoint plugin)\n+  {\n+    add(targetToPluginMap.get(Node.class), plugin);\n+  }\n \n-    private static void add( Map<String, PluginPoint> extensions, PluginPoint plugin )\n-    {\n-        if ( extensions.get( plugin.name() ) != null )\n-        {\n-            throw new IllegalArgumentException(\n-                    \"This plugin already has an plugin point with the name \\\"\"\n-                            + plugin.name() + \"\\\"\" );\n-        }\n-        extensions.put( plugin.name(), plugin );\n-    }\n+  public void addRelationshipExtensions(PluginPoint plugin)\n+  {\n+    add(targetToPluginMap.get(Relationship.class), plugin);\n+  }\n \n-    public PluginPointFactory getPluginPointFactory()\n+  private static void add(Map<String, PluginPoint> extensions, PluginPoint plugin)\n+  {\n+    if (extensions.get(plugin.name()) != null)\n     {\n-        return pluginPointFactory;\n+      throw new IllegalArgumentException(\n+          \"This plugin already has an plugin point with the name \\\"\"\n+              + plugin.name() + \"\\\"\");\n     }\n+    extensions.put(plugin.name(), plugin);\n+  }\n+\n+  public PluginPointFactory getPluginPointFactory()\n+  {\n+    return pluginPointFactory;\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2557/ServerExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2557/ServerExtender.java\nindex 84c876f796f..a0e12fa2e9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2557/ServerExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2557/ServerExtender.java\n@@ -46,52 +46,53 @@ public final class ServerExtender\n \n     Iterable<PluginPoint> getExtensionsFor( Class<?> type )\n     {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n+        Map<String,PluginPoint> ext = targetToPluginMap.get( type );\n         if ( ext == null )\n         {\n             return Collections.emptyList();\n         }\n-        return ext.values();\n+\n+return ext.values();\n     }\n \n     Iterable<PluginPoint> all()\n     {\n-        return new NestingIterable<PluginPoint, Map<String, PluginPoint>>(\n-                targetToPluginMap.values() )\n+        return new NestingIterable<PluginPoint, Map<String, PluginPoint>>( targetToPluginMap.values() )\n         {\n             @Override\n-            protected Iterator<PluginPoint> createNestedIterator(\n-                    Map<String, PluginPoint> item )\n+            protected Iterator<PluginPoint> createNestedIterator( Map<String,PluginPoint> item )\n             {\n                 return item.values().iterator();\n             }\n         };\n     }\n \n-    PluginPoint getExtensionPoint( Class<?> type, String method )\n-            throws PluginLookupException\n-    {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n+    PluginPoint getExtensionPoint( Class<?> type, String method ) throws PluginLookupException\n+{\n+        Map<String,PluginPoint> ext = targetToPluginMap.get( type );\n         PluginPoint plugin = null;\n         if ( ext != null )\n         {\n             plugin = ext.get( method );\n         }\n-        if ( plugin == null )\n+\n+if ( plugin == null )\n         {\n             throw new PluginLookupException( \"No plugin \\\"\" + method + \"\\\" for \" + type );\n         }\n-        return plugin;\n+\n+return plugin;\n     }\n \n     void addExtension( Class<?> type, PluginPoint plugin )\n     {\n-        Map<String, PluginPoint> ext = targetToPluginMap.get( type );\n+        Map<String,PluginPoint> ext = targetToPluginMap.get( type );\n         if ( ext == null )\n         {\n             throw new IllegalStateException( \"Cannot extend \" + type );\n         }\n-        add( ext, plugin );\n+\n+add( ext, plugin );\n     }\n \n     public void addGraphDatabaseExtensions( PluginPoint plugin )\n@@ -109,14 +110,12 @@ public final class ServerExtender\n         add( targetToPluginMap.get( Relationship.class ), plugin );\n     }\n \n-    private static void add( Map<String, PluginPoint> extensions, PluginPoint plugin )\n+    private static void add( Map<String,PluginPoint> extensions, PluginPoint plugin )\n     {\n         if ( extensions.get( plugin.name() ) != null )\n         {\n-            throw new IllegalArgumentException(\n-                    \"This plugin already has an plugin point with the name \\\"\"\n-                            + plugin.name() + \"\\\"\" );\n-        }\n+            throw new IllegalArgumentException( \"This plugin already has an plugin point with the name \\\"\" + plugin.name() + \"\\\"\" );\n+    }\n         extensions.put( plugin.name(), plugin );\n     }\n \n@@ -124,4 +123,4 @@ public final class ServerExtender\n     {\n         return pluginPointFactory;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
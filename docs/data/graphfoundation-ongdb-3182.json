{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3182",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3182/LuceneFulltext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3182/LuceneFulltext.java\nindex 16a9e7547bc..0964b86e500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3182/LuceneFulltext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3182/LuceneFulltext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -40,145 +41,144 @@ import org.neo4j.kernel.api.impl.schema.writer.PartitionedIndexWriter;\n \n class LuceneFulltext extends AbstractLuceneIndex\n {\n-    private final Analyzer analyzer;\n-    private final String identifier;\n-    private final FulltextIndexType type;\n-    private Set<String> properties;\n-    private volatile InternalIndexState state;\n-\n-    LuceneFulltext( PartitionedIndexStorage indexStorage, IndexPartitionFactory partitionFactory, Collection<String> properties, Analyzer analyzer,\n-            String identifier,\n-                    FulltextIndexType type )\n-    {\n-        super( indexStorage, partitionFactory );\n-        this.properties = Collections.unmodifiableSet( new HashSet<>( properties ) );\n-        this.analyzer = analyzer;\n-        this.identifier = identifier;\n-        this.type = type;\n-        state = InternalIndexState.POPULATING;\n-    }\n-\n-    LuceneFulltext( PartitionedIndexStorage indexStorage, WritableIndexPartitionFactory partitionFactory, Analyzer analyzer, String identifier,\n-            FulltextIndexType type ) throws IOException\n-    {\n-        this( indexStorage, partitionFactory, Collections.EMPTY_SET, analyzer, identifier, type );\n-        this.properties = readProperties();\n-    }\n-\n-    private Set<String> readProperties() throws IOException\n-    {\n-        Set<String> props;\n-        open();\n-        FulltextIndexConfiguration configurationDocument;\n-        try ( ReadOnlyFulltext indexReader = getIndexReader() )\n-        {\n-            configurationDocument = indexReader.getConfigurationDocument();\n-        }\n-        if ( configurationDocument != null )\n-        {\n-            props = Collections.unmodifiableSet( configurationDocument.getProperties() );\n-        }\n-        else\n-        {\n-            props = Collections.emptySet();\n-        }\n-        close();\n-        return props;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        LuceneFulltext that = (LuceneFulltext) o;\n-\n-        if ( !identifier.equals( that.identifier ) )\n-        {\n-            return false;\n-        }\n-        return type == that.type;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return Objects.hash( identifier, type );\n-    }\n-\n-    PartitionedIndexWriter getIndexWriter( WritableFulltext writableIndex )\n-    {\n-        ensureOpen();\n-        return new PartitionedIndexWriter( writableIndex );\n-    }\n-\n-    ReadOnlyFulltext getIndexReader() throws IOException\n-    {\n-        ensureOpen();\n-        List<AbstractIndexPartition> partitions = getPartitions();\n-        return hasSinglePartition( partitions ) ? createSimpleReader( partitions ) : createPartitionedReader( partitions );\n-    }\n-\n-    FulltextIndexType getType()\n-    {\n-        return type;\n-    }\n-\n-    Set<String> getProperties()\n-    {\n-        return properties;\n-    }\n+  private final Analyzer analyzer;\n+  private final String identifier;\n+  private final FulltextIndexType type;\n+  private Set<String> properties;\n+  private volatile InternalIndexState state;\n+\n+  LuceneFulltext(PartitionedIndexStorage indexStorage, IndexPartitionFactory partitionFactory, Collection<String> properties, Analyzer analyzer,\n+                 String identifier,\n+                 FulltextIndexType type)\n+  {\n+    super(indexStorage, partitionFactory);\n+    this.properties = Collections.unmodifiableSet(new HashSet<>(properties));\n+    this.analyzer = analyzer;\n+    this.identifier = identifier;\n+    this.type = type;\n+    state = InternalIndexState.POPULATING;\n+  }\n+\n+  LuceneFulltext(PartitionedIndexStorage indexStorage, WritableIndexPartitionFactory partitionFactory, Analyzer analyzer, String identifier,\n+                 FulltextIndexType type) throws IOException\n+  {\n+    this(indexStorage, partitionFactory, Collections.EMPTY_SET, analyzer, identifier, type);\n+    this.properties = readProperties();\n+  }\n+\n+  private Set<String> readProperties() throws IOException\n+  {\n+    Set<String> props;\n+    open();\n+    FulltextIndexConfiguration configurationDocument;\n+    try (ReadOnlyFulltext indexReader = getIndexReader())\n+    {\n+      configurationDocument = indexReader.getConfigurationDocument();\n+    }\n+    if (configurationDocument != null)\n+    {\n+      props = Collections.unmodifiableSet(configurationDocument.getProperties());\n+    } else\n+    {\n+      props = Collections.emptySet();\n+    }\n+    close();\n+    return props;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+\n+    LuceneFulltext that = (LuceneFulltext) o;\n+\n+    if (!identifier.equals(that.identifier))\n+    {\n+      return false;\n+    }\n+    return type == that.type;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(identifier, type);\n+  }\n+\n+  PartitionedIndexWriter getIndexWriter(WritableFulltext writableIndex)\n+  {\n+    ensureOpen();\n+    return new PartitionedIndexWriter(writableIndex);\n+  }\n+\n+  ReadOnlyFulltext getIndexReader() throws IOException\n+  {\n+    ensureOpen();\n+    List<AbstractIndexPartition> partitions = getPartitions();\n+    return hasSinglePartition(partitions) ? createSimpleReader(partitions) : createPartitionedReader(partitions);\n+  }\n+\n+  FulltextIndexType getType()\n+  {\n+    return type;\n+  }\n+\n+  Set<String> getProperties()\n+  {\n+    return properties;\n+  }\n+\n+  String getIdentifier()\n+  {\n+    return identifier;\n+  }\n+\n+  private SimpleFulltextReader createSimpleReader(List<AbstractIndexPartition> partitions) throws IOException\n+  {\n+    AbstractIndexPartition singlePartition = getFirstPartition(partitions);\n+    PartitionSearcher partitionSearcher = singlePartition.acquireSearcher();\n+    return new SimpleFulltextReader(partitionSearcher, properties.toArray(new String[0]), analyzer);\n+  }\n+\n+  private PartitionedFulltextReader createPartitionedReader(List<AbstractIndexPartition> partitions) throws IOException\n+  {\n+    List<PartitionSearcher> searchers = acquireSearchers(partitions);\n+    return new PartitionedFulltextReader(searchers, properties.toArray(new String[0]), analyzer);\n+  }\n+\n+  void saveConfiguration(long txId) throws IOException\n+  {\n+    PartitionedIndexWriter writer = getIndexWriter(new WritableFulltext(this));\n+    String analyzerName = analyzer.getClass().getCanonicalName();\n+    FulltextIndexConfiguration config = new FulltextIndexConfiguration(analyzerName, properties, txId);\n+    writer.updateDocument(FulltextIndexConfiguration.TERM, config.asDocument());\n+  }\n+\n+  String getAnalyzerName()\n+  {\n+    return analyzer.getClass().getCanonicalName();\n+  }\n+\n+  InternalIndexState getState()\n+  {\n+    return state;\n+  }\n \n-    String getIdentifier()\n-    {\n-        return identifier;\n-    }\n-\n-    private SimpleFulltextReader createSimpleReader( List<AbstractIndexPartition> partitions ) throws IOException\n-    {\n-        AbstractIndexPartition singlePartition = getFirstPartition( partitions );\n-        PartitionSearcher partitionSearcher = singlePartition.acquireSearcher();\n-        return new SimpleFulltextReader( partitionSearcher, properties.toArray( new String[0] ), analyzer );\n-    }\n-\n-    private PartitionedFulltextReader createPartitionedReader( List<AbstractIndexPartition> partitions ) throws IOException\n-    {\n-        List<PartitionSearcher> searchers = acquireSearchers( partitions );\n-        return new PartitionedFulltextReader( searchers, properties.toArray( new String[0] ), analyzer );\n-    }\n-\n-    void saveConfiguration( long txId ) throws IOException\n-    {\n-        PartitionedIndexWriter writer = getIndexWriter( new WritableFulltext( this ) );\n-        String analyzerName = analyzer.getClass().getCanonicalName();\n-        FulltextIndexConfiguration config = new FulltextIndexConfiguration( analyzerName, properties, txId );\n-        writer.updateDocument( FulltextIndexConfiguration.TERM, config.asDocument() );\n-    }\n-\n-    String getAnalyzerName()\n-    {\n-        return analyzer.getClass().getCanonicalName();\n-    }\n-\n-    InternalIndexState getState()\n-    {\n-        return state;\n-    }\n-\n-    void setPopulated()\n-    {\n-        state = InternalIndexState.ONLINE;\n-    }\n-\n-    void setFailed()\n-    {\n-        state = InternalIndexState.FAILED;\n-    }\n+  void setPopulated()\n+  {\n+    state = InternalIndexState.ONLINE;\n+  }\n+\n+  void setFailed()\n+  {\n+    state = InternalIndexState.FAILED;\n+  }\n }\n",
            "diff_size": 176
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3182/LuceneFulltext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3182/LuceneFulltext.java\nindex 16a9e7547bc..76cc0aea205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3182/LuceneFulltext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3182/LuceneFulltext.java\n@@ -49,7 +49,7 @@ class LuceneFulltext extends AbstractLuceneIndex\n     LuceneFulltext( PartitionedIndexStorage indexStorage, IndexPartitionFactory partitionFactory, Collection<String> properties, Analyzer analyzer,\n             String identifier,\n                     FulltextIndexType type )\n-    {\n+{\n         super( indexStorage, partitionFactory );\n         this.properties = Collections.unmodifiableSet( new HashSet<>( properties ) );\n         this.analyzer = analyzer;\n@@ -60,7 +60,7 @@ class LuceneFulltext extends AbstractLuceneIndex\n \n     LuceneFulltext( PartitionedIndexStorage indexStorage, WritableIndexPartitionFactory partitionFactory, Analyzer analyzer, String identifier,\n             FulltextIndexType type ) throws IOException\n-    {\n+{\n         this( indexStorage, partitionFactory, Collections.EMPTY_SET, analyzer, identifier, type );\n         this.properties = readProperties();\n     }\n@@ -74,7 +74,8 @@ class LuceneFulltext extends AbstractLuceneIndex\n         {\n             configurationDocument = indexReader.getConfigurationDocument();\n         }\n-        if ( configurationDocument != null )\n+\n+if ( configurationDocument != null )\n         {\n             props = Collections.unmodifiableSet( configurationDocument.getProperties() );\n         }\n@@ -82,7 +83,8 @@ class LuceneFulltext extends AbstractLuceneIndex\n         {\n             props = Collections.emptySet();\n         }\n-        close();\n+\n+close();\n         return props;\n     }\n \n@@ -93,7 +95,8 @@ class LuceneFulltext extends AbstractLuceneIndex\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -104,7 +107,8 @@ class LuceneFulltext extends AbstractLuceneIndex\n         {\n             return false;\n         }\n-        return type == that.type;\n+\n+return type == that.type;\n     }\n \n     @Override\n@@ -181,4 +185,4 @@ class LuceneFulltext extends AbstractLuceneIndex\n     {\n         state = InternalIndexState.FAILED;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-iotdb",
    "error_id": "129",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.iotdb.flink;\n\nimport org.apache.iotdb.flink.tsfile.RowTSRecordConverter;\nimport org.apache.iotdb.flink.tsfile.TSRecordOutputFormat;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/129/FlinkTsFileStreamSink.java\nindex c714792b840..e53e55a5ae6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/129/FlinkTsFileStreamSink.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.flink;\n \n import org.apache.iotdb.flink.tsfile.RowTSRecordConverter;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/129/FlinkTsFileStreamSink.java\nindex c714792b840..ec1755cfe21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/129/FlinkTsFileStreamSink.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.flink;\n \n import org.apache.iotdb.flink.tsfile.RowTSRecordConverter;\n@@ -40,7 +41,9 @@ import java.util.Arrays;\n import java.util.List;\n import java.util.stream.Collectors;\n \n-/** The example of writing to TsFile via Flink DataStream API. */\n+/**\n+ * The example of writing to TsFile via Flink DataStream API.\n+ */\n public class FlinkTsFileStreamSink {\n \n   public static final String DEFAULT_TEMPLATE = \"template\";\n@@ -49,17 +52,17 @@ public class FlinkTsFileStreamSink {\n     String path = new File(\"test.tsfile\").getAbsolutePath();\n     new File(path).deleteOnExit();\n     String[] filedNames = {\n-      QueryConstant.RESERVED_TIME,\n-      \"device_1.sensor_1\",\n-      \"device_1.sensor_2\",\n-      \"device_1.sensor_3\",\n-      \"device_2.sensor_1\",\n-      \"device_2.sensor_2\",\n-      \"device_2.sensor_3\"\n+        QueryConstant.RESERVED_TIME,\n+        \"device_1.sensor_1\",\n+        \"device_1.sensor_2\",\n+        \"device_1.sensor_3\",\n+        \"device_2.sensor_1\",\n+        \"device_2.sensor_2\",\n+        \"device_2.sensor_3\"\n     };\n     TypeInformation[] typeInformations =\n         new TypeInformation[] {\n-          Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG\n+            Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG\n         };\n     RowTypeInfo rowTypeInfo = new RowTypeInfo(typeInformations, filedNames);\n     Schema schema = new Schema();\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'\"sensor_1\"' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'\"sensor_2\"' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'\"sensor_3\"' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'1L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'2L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'3L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'4L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'6L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'7L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'8L' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'data' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 17, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 17, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 19, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 17, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 17, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 15, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/129/FlinkTsFileStreamSink.java\nindex c714792b840..1e35576530b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/129/FlinkTsFileStreamSink.java\n@@ -25,7 +25,6 @@ import org.apache.iotdb.tsfile.file.metadata.enums.TSEncoding;\n import org.apache.iotdb.tsfile.read.common.Path;\n import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n import org.apache.iotdb.tsfile.write.schema.Schema;\n-\n import org.apache.flink.api.common.typeinfo.TypeInformation;\n import org.apache.flink.api.common.typeinfo.Types;\n import org.apache.flink.api.java.tuple.Tuple7;\n@@ -33,7 +32,6 @@ import org.apache.flink.api.java.typeutils.RowTypeInfo;\n import org.apache.flink.streaming.api.datastream.DataStream;\n import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n import org.apache.flink.types.Row;\n-\n import java.io.File;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -41,84 +39,66 @@ import java.util.List;\n import java.util.stream.Collectors;\n \n /** The example of writing to TsFile via Flink DataStream API. */\n+\n public class FlinkTsFileStreamSink {\n \n   public static final String DEFAULT_TEMPLATE = \"template\";\n-\n   public static void main(String[] arg) throws Exception {\n     String path = new File(\"test.tsfile\").getAbsolutePath();\n     new File(path).deleteOnExit();\n-    String[] filedNames = {\n-      QueryConstant.RESERVED_TIME,\n-      \"device_1.sensor_1\",\n-      \"device_1.sensor_2\",\n-      \"device_1.sensor_3\",\n-      \"device_2.sensor_1\",\n-      \"device_2.sensor_2\",\n-      \"device_2.sensor_3\"\n-    };\n-    TypeInformation[] typeInformations =\n-        new TypeInformation[] {\n-          Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG\n-        };\n+    String[] filedNames = {QueryConstant.RESERVED_TIME, \"device_1.sensor_1\", \"device_1.sensor_2\", \"device_1.sensor_3\", \"device_2.sensor_1\", \"device_2.sensor_2\", \"device_2.sensor_3\"};\n+    TypeInformation[] typeInformations = new TypeInformation[] {Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG};\n     RowTypeInfo rowTypeInfo = new RowTypeInfo(typeInformations, filedNames);\n     Schema schema = new Schema();\n     schema.extendTemplate(\n-        DEFAULT_TEMPLATE, new MeasurementSchema(\"sensor_1\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n+                DEFAULT_TEMPLATE,\n+                new MeasurementSchema(\n+      \"sensor_1\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n     schema.extendTemplate(\n-        DEFAULT_TEMPLATE, new MeasurementSchema(\"sensor_2\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n+                DEFAULT_TEMPLATE,\n+                new MeasurementSchema(\n+      \"sensor_2\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n     schema.extendTemplate(\n-        DEFAULT_TEMPLATE, new MeasurementSchema(\"sensor_3\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n+                DEFAULT_TEMPLATE,\n+                new MeasurementSchema(\n+      \"sensor_3\", TSDataType.INT64, TSEncoding.TS_2DIFF));\n     RowTSRecordConverter converter = new RowTSRecordConverter(rowTypeInfo);\n     TSRecordOutputFormat<Row> outputFormat = new TSRecordOutputFormat<>(schema, converter);\n     outputFormat.setOutputFilePath(new org.apache.flink.core.fs.Path(path));\n-\n     List<Tuple7> data = new ArrayList<>(7);\n-    data.add(new Tuple7(1L, 2L, 3L, 4L, 5L, 6L, 7L));\n-    data.add(new Tuple7(2L, 3L, 4L, 5L, 6L, 7L, 8L));\n-    data.add(new Tuple7(3L, 4L, 5L, 6L, 7L, 8L, 9L));\n-    data.add(new Tuple7(4L, 5L, 6L, 7L, 8L, 9L, 10L));\n-    data.add(new Tuple7(6L, 6L, 7L, 8L, 9L, 10L, 11L));\n-    data.add(new Tuple7(7L, 7L, 8L, 9L, 10L, 11L, 12L));\n-    data.add(new Tuple7(8L, 8L, 9L, 10L, 11L, 12L, 13L));\n-\n+    data.add(new Tuple7(\n+    1L, 2L, 3L, 4L, 5L, 6L, 7L));\n+    data.add(new Tuple7(\n+    2L, 3L, 4L, 5L, 6L, 7L, 8L));\n+    data.add(new Tuple7(\n+    3L, 4L, 5L, 6L, 7L, 8L, 9L));\n+    data.add(new Tuple7(\n+    4L, 5L, 6L, 7L, 8L, 9L, 10L));\n+    data.add(new Tuple7(\n+    6L, 6L, 7L, 8L, 9L, 10L, 11L));\n+    data.add(new Tuple7(\n+    7L, 7L, 8L, 9L, 10L, 11L, 12L));\n+    data.add(new Tuple7(\n+    8L, 8L, 9L, 10L, 11L, 12L, 13L));\n     StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n     // If the parallelism > 1, flink create a directory and each subtask will create a tsfile under\n     // the directory.\n     env.setParallelism(1);\n-    DataStream<Tuple7> source =\n-        env.fromCollection(\n-            data,\n-            Types.TUPLE(\n-                Types.LONG,\n-                Types.LONG,\n-                Types.LONG,\n-                Types.LONG,\n-                Types.LONG,\n-                Types.LONG,\n-                Types.LONG));\n-    source\n-        .map(\n-            t -> {\n-              Row row = new Row(7);\n-              for (int i = 0; i < 7; i++) {\n-                row.setField(i, t.getField(i));\n-              }\n-              return row;\n-            })\n-        .returns(rowTypeInfo)\n-        .writeUsingOutputFormat(outputFormat);\n-\n+    DataStream<Tuple7> source = env.fromCollection(\n+      data,\n+      Types.TUPLE(Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG, Types.LONG));\n+    source.map(t -> {\n+                 Row row = new Row(7);\n+                 for (int i = 0; i < 7; i++) {\n+                   row.setField(i, t.getField(i));\n+                 }\n+                 return row;\n+               }).returns(rowTypeInfo).writeUsingOutputFormat(outputFormat);\n     env.execute();\n-\n-    List<Path> paths =\n-        Arrays.stream(filedNames)\n-            .filter(s -> !s.equals(QueryConstant.RESERVED_TIME))\n-            .map(s -> new Path(s, true))\n-            .collect(Collectors.toList());\n+    List<Path> paths = Arrays.stream(filedNames).filter(s -> !s.equals(QueryConstant.RESERVED_TIME)).map(s -> new Path(s, true)).collect(Collectors.toList());\n     String[] result = TsFileUtils.readTsFile(path, paths);\n     for (String row : result) {\n       System.out.println(row);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/129/FlinkTsFileStreamSink.java\nindex c714792b840..e53e55a5ae6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/129/FlinkTsFileStreamSink.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.flink;\n \n import org.apache.iotdb.flink.tsfile.RowTSRecordConverter;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/129/FlinkTsFileStreamSink.java\nindex c714792b840..e53e55a5ae6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/129/FlinkTsFileStreamSink.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/129/FlinkTsFileStreamSink.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.iotdb.flink;\n \n import org.apache.iotdb.flink.tsfile.RowTSRecordConverter;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1780",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1780/MediaTypeNotSupportedException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1780/MediaTypeNotSupportedException.java\nindex 65946a2b968..99344d57331 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1780/MediaTypeNotSupportedException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1780/MediaTypeNotSupportedException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.Collection;\n@@ -27,59 +28,56 @@ import javax.ws.rs.core.Response;\n \n public class MediaTypeNotSupportedException extends WebApplicationException\n {\n-    private static final long serialVersionUID = 5159216782240337940L;\n+  private static final long serialVersionUID = 5159216782240337940L;\n \n-    public MediaTypeNotSupportedException( Response.Status status, Collection<MediaType> supported,\n-            MediaType... requested )\n-    {\n-        super( createResponse( status, message( supported, requested ) ) );\n-    }\n+  public MediaTypeNotSupportedException(Response.Status status, Collection<MediaType> supported,\n+                                        MediaType... requested)\n+  {\n+    super(createResponse(status, message(supported, requested)));\n+  }\n+\n+  private static Response createResponse(Response.Status status, String message)\n+  {\n+    return Response.status(status)\n+        .entity(message)\n+        .build();\n+  }\n \n-    private static Response createResponse( Response.Status status, String message )\n+  private static String message(Collection<MediaType> supported, MediaType[] requested)\n+  {\n+    StringBuilder message = new StringBuilder(\"No matching representation format found.\\n\");\n+    if (requested.length == 0)\n     {\n-        return Response.status( status )\n-                .entity( message )\n-                .build();\n+      message.append(\"No requested representation format supplied.\");\n+    } else if (requested.length == 1)\n+    {\n+      message.append(\"Request format: \")\n+          .append(requested[0])\n+          .append(\"\\n\");\n+    } else\n+    {\n+      message.append(\"Requested formats:\\n\");\n+      for (int i = 0; i < requested.length; i++)\n+      {\n+        message.append(\" \")\n+            .append(i)\n+            .append(\". \");\n+        message.append(requested[i])\n+            .append(\"\\n\");\n+      }\n     }\n-\n-    private static String message( Collection<MediaType> supported, MediaType[] requested )\n+    message.append(\"Supported representation formats:\");\n+    if (supported.isEmpty())\n+    {\n+      message.append(\" none\");\n+    } else\n     {\n-        StringBuilder message = new StringBuilder( \"No matching representation format found.\\n\" );\n-        if ( requested.length == 0 )\n-        {\n-            message.append( \"No requested representation format supplied.\" );\n-        }\n-        else if ( requested.length == 1 )\n-        {\n-            message.append( \"Request format: \" )\n-                    .append( requested[0] )\n-                    .append( \"\\n\" );\n-        }\n-        else\n-        {\n-            message.append( \"Requested formats:\\n\" );\n-            for ( int i = 0; i < requested.length; i++ )\n-            {\n-                message.append( \" \" )\n-                        .append( i )\n-                        .append( \". \" );\n-                message.append( requested[i] )\n-                        .append( \"\\n\" );\n-            }\n-        }\n-        message.append( \"Supported representation formats:\" );\n-        if ( supported.isEmpty() )\n-        {\n-            message.append( \" none\" );\n-        }\n-        else\n-        {\n-            for ( MediaType type : supported )\n-            {\n-                message.append( \"\\n * \" )\n-                        .append( type );\n-            }\n-        }\n-        return message.toString();\n+      for (MediaType type : supported)\n+      {\n+        message.append(\"\\n * \")\n+            .append(type);\n+      }\n     }\n+    return message.toString();\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1780/MediaTypeNotSupportedException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1780/MediaTypeNotSupportedException.java\nindex 65946a2b968..2fd5edd8251 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1780/MediaTypeNotSupportedException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1780/MediaTypeNotSupportedException.java\n@@ -37,8 +37,7 @@ public class MediaTypeNotSupportedException extends WebApplicationException\n \n     private static Response createResponse( Response.Status status, String message )\n     {\n-        return Response.status( status )\n-                .entity( message )\n+        return Response.status( status ).entity( message )\n                 .build();\n     }\n \n@@ -51,21 +50,17 @@ public class MediaTypeNotSupportedException extends WebApplicationException\n         }\n         else if ( requested.length == 1 )\n         {\n-            message.append( \"Request format: \" )\n-                    .append( requested[0] )\n-                    .append( \"\\n\" );\n+            message.append( \"Request format: \" ).append( requested[0] ).append( \"\\n\" );\n         }\n         else\n         {\n             message.append( \"Requested formats:\\n\" );\n             for ( int i = 0; i < requested.length; i++ )\n             {\n-                message.append( \" \" )\n-                        .append( i )\n+                message.append( \" \" ).append( i )\n                         .append( \". \" );\n-                message.append( requested[i] )\n-                        .append( \"\\n\" );\n-            }\n+message.append( requested[i] ).append( \"\\n\" );\n+    }\n         }\n         message.append( \"Supported representation formats:\" );\n         if ( supported.isEmpty() )\n@@ -76,10 +71,9 @@ public class MediaTypeNotSupportedException extends WebApplicationException\n         {\n             for ( MediaType type : supported )\n             {\n-                message.append( \"\\n * \" )\n-                        .append( type );\n-            }\n+                message.append( \"\\n * \" ).append( type );\n+    }\n         }\n         return message.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
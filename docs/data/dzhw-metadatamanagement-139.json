{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "139",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "65",
                "severity": "error",
                "message": "'}' at column 65 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidAccessWays constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "65",
                    "severity": "error",
                    "message": "'}' at column 65 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/139/ValidAccessWaysValidator.java\nindex 869c32cb992..acd2b39117f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/139/ValidAccessWaysValidator.java\n@@ -10,24 +10,24 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.AccessWays;\n /**\n  * Validator for the access ways of a variable. Only valued from the {@link AccessWays} class are\n  * allowed.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ValidAccessWaysValidator\n     implements ConstraintValidator<ValidAccessWays, List<String>> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidAccessWays constraintAnnotation) {}\n+  public void initialize(ValidAccessWays constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "column": "65",
                    "severity": "error",
                    "message": "'}' at column 65 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/139/ValidAccessWaysValidator.java\nindex 869c32cb992..f84fbeb1a54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/139/ValidAccessWaysValidator.java\n@@ -51,4 +51,4 @@ public class ValidAccessWaysValidator\n     return true;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/139/ValidAccessWaysValidator.java\nindex 869c32cb992..f4ecdf3a233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/139/ValidAccessWaysValidator.java\n@@ -1,10 +1,8 @@\n package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.AccessWays;\n \n /**\n@@ -14,16 +12,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.AccessWays;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidAccessWaysValidator\n-    implements ConstraintValidator<ValidAccessWays, List<String>> {\n+\n+\n+public class ValidAccessWaysValidator implements ConstraintValidator<ValidAccessWays, List<String>> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidAccessWays constraintAnnotation) {}\n+  public void initialize(ValidAccessWays constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -31,11 +33,15 @@ public class ValidAccessWaysValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(List<String> accessWays, ConstraintValidatorContext context) {\n+  public boolean isValid(List<String> accessWays,\n+    ConstraintValidatorContext context) {\n \n     // min size 1!\n-    if (accessWays == null || accessWays.size() == 0) {\n+    if (accessWays == null\n+        || accessWays.size() == 0) {\n       return false;\n     }\n \n@@ -48,7 +54,7 @@ public class ValidAccessWaysValidator\n     }\n \n     // all access ways are valid.\n+\n     return true;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "65",
                    "severity": "error",
                    "message": "'}' at column 65 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "65",
                    "severity": "error",
                    "message": "'}' at column 65 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/139/ValidAccessWaysValidator.java\nindex 869c32cb992..4982afff712 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/139/ValidAccessWaysValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/139/ValidAccessWaysValidator.java\n@@ -24,7 +24,6 @@ public class ValidAccessWaysValidator\n    */\n   @Override\n   public void initialize(ValidAccessWays constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
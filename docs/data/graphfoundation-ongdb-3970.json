{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3970",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3970/UdcKernelExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3970/UdcKernelExtensionFactory.java\nindex 7d97a7042a7..87295b3ac08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3970/UdcKernelExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3970/UdcKernelExtensionFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.ext.udc.impl;\n \n import java.util.Timer;\n@@ -40,40 +41,44 @@ import org.neo4j.udc.UsageData;\n  * testing and short-run applications. Subsequent updates are made at regular\n  * intervals. Both times are specified in milliseconds.\n  */\n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class UdcKernelExtensionFactory extends KernelExtensionFactory<UdcKernelExtensionFactory.Dependencies>\n {\n-    static final String KEY = \"kernel udc\";\n+  static final String KEY = \"kernel udc\";\n+\n+  public interface Dependencies\n+  {\n+    Config config();\n+\n+    DataSourceManager dataSourceManager();\n+\n+    UsageData usageData();\n+\n+    IdGeneratorFactory idGeneratorFactory();\n \n-    public interface Dependencies\n-    {\n-        Config config();\n-        DataSourceManager dataSourceManager();\n-        UsageData usageData();\n-        IdGeneratorFactory idGeneratorFactory();\n-        StartupStatistics startupStats();\n-    }\n+    StartupStatistics startupStats();\n+  }\n \n-    public UdcKernelExtensionFactory()\n-    {\n-        super( KEY );\n-    }\n+  public UdcKernelExtensionFactory()\n+  {\n+    super(KEY);\n+  }\n \n-    @Override\n-    public Lifecycle newInstance( KernelContext kernelContext, UdcKernelExtensionFactory.Dependencies dependencies )\n-    {\n-        Config config = dependencies.config();\n-        return new UdcKernelExtension(\n-                config,\n-                dependencies.dataSourceManager(),\n-                dependencies.idGeneratorFactory(),\n-                dependencies.startupStats(),\n-                dependencies.usageData(),\n-                new Timer( \"Neo4j UDC Timer\", isAlwaysDaemon() ) );\n-    }\n+  @Override\n+  public Lifecycle newInstance(KernelContext kernelContext, UdcKernelExtensionFactory.Dependencies dependencies)\n+  {\n+    Config config = dependencies.config();\n+    return new UdcKernelExtension(\n+        config,\n+        dependencies.dataSourceManager(),\n+        dependencies.idGeneratorFactory(),\n+        dependencies.startupStats(),\n+        dependencies.usageData(),\n+        new Timer(\"Neo4j UDC Timer\", isAlwaysDaemon()));\n+  }\n \n-    private boolean isAlwaysDaemon()\n-    {\n-        return true;\n-    }\n+  private boolean isAlwaysDaemon()\n+  {\n+    return true;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3970/UdcKernelExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3970/UdcKernelExtensionFactory.java\nindex 7d97a7042a7..c27f4df51af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3970/UdcKernelExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3970/UdcKernelExtensionFactory.java\n@@ -63,17 +63,12 @@ public class UdcKernelExtensionFactory extends KernelExtensionFactory<UdcKernelE\n     public Lifecycle newInstance( KernelContext kernelContext, UdcKernelExtensionFactory.Dependencies dependencies )\n     {\n         Config config = dependencies.config();\n-        return new UdcKernelExtension(\n-                config,\n-                dependencies.dataSourceManager(),\n-                dependencies.idGeneratorFactory(),\n-                dependencies.startupStats(),\n-                dependencies.usageData(),\n-                new Timer( \"Neo4j UDC Timer\", isAlwaysDaemon() ) );\n+        return new UdcKernelExtension( config,\n+                dependencies.dataSourceManager(), dependencies.idGeneratorFactory(), dependencies.startupStats(), dependencies.usageData(), new Timer( \"Neo4j UDC Timer\", isAlwaysDaemon() ) );\n     }\n \n     private boolean isAlwaysDaemon()\n     {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
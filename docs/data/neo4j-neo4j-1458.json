{
    "project_name": "neo4j-neo4j",
    "error_id": "1458",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1458/RecordRelationshipCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1458/RecordRelationshipCursor.java\nindex 7149adde002..5d2ff7e8061 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1458/RecordRelationshipCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1458/RecordRelationshipCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -37,9 +38,9 @@ abstract class RecordRelationshipCursor extends RelationshipRecord implements Re\n     RecordLoadOverride loadMode;\n     private final PageCursorTracer cursorTracer;\n \n-    RecordRelationshipCursor( RelationshipStore relationshipStore, PageCursorTracer cursorTracer )\n+    RecordRelationshipCursor(RelationshipStore relationshipStore, PageCursorTracer cursorTracer)\n     {\n-        super( NO_ID );\n+        super(NO_ID);\n         this.relationshipStore = relationshipStore;\n         this.cursorTracer = cursorTracer;\n         this.loadMode = RecordLoadOverride.none();\n@@ -82,17 +83,17 @@ abstract class RecordRelationshipCursor extends RelationshipRecord implements Re\n     }\n \n     @Override\n-    public void properties( StoragePropertyCursor propertyCursor )\n+    public void properties(StoragePropertyCursor propertyCursor)\n     {\n-        propertyCursor.initRelationshipProperties( getNextProp() );\n+        propertyCursor.initRelationshipProperties(getNextProp());\n     }\n \n     // used to visit transaction state\n     @Override\n-    public void visit( long relationshipId, int typeId, long startNodeId, long endNodeId )\n+    public void visit(long relationshipId, int typeId, long startNodeId, long endNodeId)\n     {\n-        setId( relationshipId );\n-        initialize( true, NO_ID, startNodeId, endNodeId, typeId, NO_ID, NO_ID, NO_ID, NO_ID, false, false );\n+        setId(relationshipId);\n+        initialize(true, NO_ID, startNodeId, endNodeId, typeId, NO_ID, NO_ID, NO_ID, NO_ID, false, false);\n     }\n \n     protected void resetState()\n@@ -100,18 +101,18 @@ abstract class RecordRelationshipCursor extends RelationshipRecord implements Re\n         loadMode = RecordLoadOverride.none();\n     }\n \n-    PageCursor relationshipPage( long reference )\n+    PageCursor relationshipPage(long reference)\n     {\n-        return relationshipStore.openPageCursorForReading( reference, cursorTracer );\n+        return relationshipStore.openPageCursorForReading(reference, cursorTracer);\n     }\n \n-    void relationship( RelationshipRecord record, long reference, PageCursor pageCursor )\n+    void relationship(RelationshipRecord record, long reference, PageCursor pageCursor)\n     {\n         // When scanning, we inspect RelationshipRecord.inUse(), so using RecordLoad.CHECK is fine\n-        relationshipStore.getRecordByCursor( reference, record, loadMode.orElse( CHECK ).lenient(), pageCursor );\n+        relationshipStore.getRecordByCursor(reference, record, loadMode.orElse(CHECK).lenient(), pageCursor);\n     }\n \n-    void relationshipFull( RelationshipRecord record, long reference, PageCursor pageCursor )\n+    void relationshipFull(RelationshipRecord record, long reference, PageCursor pageCursor)\n     {\n         // We need to load forcefully for relationship chain traversal since otherwise we cannot\n         // traverse over relationship records which have been concurrently deleted\n@@ -119,12 +120,12 @@ abstract class RecordRelationshipCursor extends RelationshipRecord implements Re\n         // see\n         //      org.neo4j.kernel.impl.store.RelationshipChainPointerChasingTest\n         //      org.neo4j.kernel.impl.locking.RelationshipCreateDeleteIT\n-        relationshipStore.getRecordByCursor( reference, record, loadMode.orElse( ALWAYS ), pageCursor );\n+        relationshipStore.getRecordByCursor(reference, record, loadMode.orElse(ALWAYS), pageCursor);\n     }\n \n     long relationshipHighMark()\n     {\n-        return relationshipStore.getHighestPossibleIdInUse( cursorTracer );\n+        return relationshipStore.getHighestPossibleIdInUse(cursorTracer);\n     }\n \n     @Override\n@@ -136,6 +137,6 @@ abstract class RecordRelationshipCursor extends RelationshipRecord implements Re\n     @Override\n     public RelationshipRecord copy()\n     {\n-        throw new UnsupportedOperationException( \"Record cursors are not copyable.\" );\n+        throw new UnsupportedOperationException(\"Record cursors are not copyable.\");\n     }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
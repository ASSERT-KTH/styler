{
    "project_name": "graphfoundation-ongdb",
    "error_id": "359",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/359/ShellSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/359/ShellSettings.java\nindex b60582dbce4..db6362fd9c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/359/ShellSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/359/ShellSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import org.neo4j.configuration.Description;\n@@ -37,25 +38,25 @@ import static org.neo4j.kernel.configuration.Settings.setting;\n /**\n  * Settings for the shell extension\n  */\n-@Description( \"Settings for the remote shell extension\" )\n+@Description(\"Settings for the remote shell extension\")\n public class ShellSettings implements LoadableConfig\n {\n-    @Description( \"Enable a remote shell server which Neo4j Shell clients can log in to. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<Boolean> remote_shell_enabled = setting( \"dbms.shell.enabled\", BOOLEAN, FALSE );\n+  @Description(\"Enable a remote shell server which Neo4j Shell clients can log in to. Only applicable to `neo4j-shell`.\")\n+  public static final Setting<Boolean> remote_shell_enabled = setting(\"dbms.shell.enabled\", BOOLEAN, FALSE);\n \n-    @Description( \"Remote host for shell. By default, the shell server listens only on the loopback interface, \" +\n-            \"but you can specify the IP address of any network interface or use `0.0.0.0` for all interfaces. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<String> remote_shell_host = buildSetting( \"dbms.shell.host\", STRING, \"127.0.0.1\" ).constraint(\n-            illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n+  @Description(\"Remote host for shell. By default, the shell server listens only on the loopback interface, \" +\n+      \"but you can specify the IP address of any network interface or use `0.0.0.0` for all interfaces. Only applicable to `neo4j-shell`.\")\n+  public static final Setting<String> remote_shell_host = buildSetting(\"dbms.shell.host\", STRING, \"127.0.0.1\").constraint(\n+      illegalValueMessage(\"must be a valid name\", matches(ANY))).build();\n \n-    @Description( \"The port the shell will listen on. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<Integer> remote_shell_port =\n-            buildSetting( \"dbms.shell.port\", INTEGER, \"1337\" ).constraint( port ).build();\n+  @Description(\"The port the shell will listen on. Only applicable to `neo4j-shell`.\")\n+  public static final Setting<Integer> remote_shell_port =\n+      buildSetting(\"dbms.shell.port\", INTEGER, \"1337\").constraint(port).build();\n \n-    @Description( \"Read only mode. Will only allow read operations. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<Boolean> remote_shell_read_only = setting( \"dbms.shell.read_only\", BOOLEAN, FALSE );\n+  @Description(\"Read only mode. Will only allow read operations. Only applicable to `neo4j-shell`.\")\n+  public static final Setting<Boolean> remote_shell_read_only = setting(\"dbms.shell.read_only\", BOOLEAN, FALSE);\n \n-    @Description( \"The name of the shell. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<String> remote_shell_name = buildSetting( \"dbms.shell.rmi_name\", STRING, \"shell\" ).constraint(\n-            illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n+  @Description(\"The name of the shell. Only applicable to `neo4j-shell`.\")\n+  public static final Setting<String> remote_shell_name = buildSetting(\"dbms.shell.rmi_name\", STRING, \"shell\").constraint(\n+      illegalValueMessage(\"must be a valid name\", matches(ANY))).build();\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 249).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/359/ShellSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/359/ShellSettings.java\nindex b60582dbce4..2e8e79b0248 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/359/ShellSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/359/ShellSettings.java\n@@ -43,19 +43,15 @@ public class ShellSettings implements LoadableConfig\n     @Description( \"Enable a remote shell server which Neo4j Shell clients can log in to. Only applicable to `neo4j-shell`.\" )\n     public static final Setting<Boolean> remote_shell_enabled = setting( \"dbms.shell.enabled\", BOOLEAN, FALSE );\n \n-    @Description( \"Remote host for shell. By default, the shell server listens only on the loopback interface, \" +\n-            \"but you can specify the IP address of any network interface or use `0.0.0.0` for all interfaces. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<String> remote_shell_host = buildSetting( \"dbms.shell.host\", STRING, \"127.0.0.1\" ).constraint(\n-            illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n+    @Description( \"Remote host for shell. By default, the shell server listens only on the loopback interface, \" + \"but you can specify the IP address of any network interface or use `0.0.0.0` for all interfaces. Only applicable to `neo4j-shell`.\" )\n+    public static final Setting<String> remote_shell_host = buildSetting( \"dbms.shell.host\", STRING, \"127.0.0.1\" ).constraint( illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n \n-    @Description( \"The port the shell will listen on. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<Integer> remote_shell_port =\n-            buildSetting( \"dbms.shell.port\", INTEGER, \"1337\" ).constraint( port ).build();\n+@Description( \"The port the shell will listen on. Only applicable to `neo4j-shell`.\" )\n+    public static final Setting<Integer> remote_shell_port = buildSetting( \"dbms.shell.port\", INTEGER, \"1337\" ).constraint( port ).build();\n \n-    @Description( \"Read only mode. Will only allow read operations. Only applicable to `neo4j-shell`.\" )\n+@Description( \"Read only mode. Will only allow read operations. Only applicable to `neo4j-shell`.\" )\n     public static final Setting<Boolean> remote_shell_read_only = setting( \"dbms.shell.read_only\", BOOLEAN, FALSE );\n \n     @Description( \"The name of the shell. Only applicable to `neo4j-shell`.\" )\n-    public static final Setting<String> remote_shell_name = buildSetting( \"dbms.shell.rmi_name\", STRING, \"shell\" ).constraint(\n-            illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n-}\n+    public static final Setting<String> remote_shell_name = buildSetting( \"dbms.shell.rmi_name\", STRING, \"shell\" ).constraint( illegalValueMessage( \"must be a valid name\", matches( ANY ) ) ).build();\n+    }\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4369",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4369/LogPruneStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4369/LogPruneStrategy.java\nindex ecf4cc1e4c4..61b4c8f87f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4369/LogPruneStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4369/LogPruneStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n import java.util.stream.LongStream;\n@@ -31,17 +32,17 @@ import java.util.stream.LongStream;\n @FunctionalInterface\n public interface LogPruneStrategy\n {\n-    /**\n-     * Produce a stream of log versions which can be deleted, up to and <em>excluding</em> the given\n-     * {@code upToLogVersion}.\n-     * <p>\n-     * <strong>Note:</strong> It is important to delete the log files in the order specified by the stream,\n-     * which must be from the oldest version towards the newest. This way, no gaps are left behind if there is a crash\n-     * in the middle of log pruning.\n-     *\n-     * @param upToLogVersion Never suggest deleting log files at or greater than this version.\n-     * @return The, possibly empty, stream of log versions whose files can be deleted, according to this log pruning\n-     * strategy.\n-     */\n-    LongStream findLogVersionsToDelete( long upToLogVersion );\n+  /**\n+   * Produce a stream of log versions which can be deleted, up to and <em>excluding</em> the given\n+   * {@code upToLogVersion}.\n+   * <p>\n+   * <strong>Note:</strong> It is important to delete the log files in the order specified by the stream,\n+   * which must be from the oldest version towards the newest. This way, no gaps are left behind if there is a crash\n+   * in the middle of log pruning.\n+   *\n+   * @param upToLogVersion Never suggest deleting log files at or greater than this version.\n+   * @return The, possibly empty, stream of log versions whose files can be deleted, according to this log pruning\n+   * strategy.\n+   */\n+  LongStream findLogVersionsToDelete(long upToLogVersion);\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4369/LogPruneStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4369/LogPruneStrategy.java\nindex ecf4cc1e4c4..8afda0c9fd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4369/LogPruneStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4369/LogPruneStrategy.java\n@@ -44,4 +44,4 @@ public interface LogPruneStrategy\n      * strategy.\n      */\n     LongStream findLogVersionsToDelete( long upToLogVersion );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "vassalengine-vassal",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "326",
                "column": "23",
                "severity": "error",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public void paint (Graphics g, JComponent c) {\n      super.paint(g, c);\n      final Component cc = ((JLayer) c).getView();\n      if (parent.isHighlighted()) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler/4/NamedHotKeyConfigurer.java\nindex 335b2a674d2..3eaecfe1d86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler/4/NamedHotKeyConfigurer.java\n@@ -323,7 +323,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n     }\n \n     @Override\n-    public void paint (Graphics g, JComponent c) {\n+    public void paint(Graphics g, JComponent c) {\n       super.paint(g, c);\n       final Component cc = ((JLayer) c).getView();\n       if (parent.isHighlighted()) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/intellij/4/NamedHotKeyConfigurer.java\nindex 335b2a674d2..52ee03effa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/intellij/4/NamedHotKeyConfigurer.java\n@@ -15,6 +15,7 @@\n  * License along with this library; if not, copies are available\n  * at http://www.opensource.org.\n  */\n+\n package VASSAL.configure;\n \n import VASSAL.i18n.Resources;\n@@ -50,10 +51,10 @@ import net.miginfocom.swing.MigLayout;\n /**\n  * A configurer for Configuring Key Strokes. It allows the entry of either\n  * a standard keystroke, or a Named command.\n- *\n+ * <p>\n  * It contains two separate Text fields, one for the Name and one for the keystroke.\n  * A user can fill in one or the other. Filling in one, clears the other.\n- *\n+ * <p>\n  * This Configurer has a limited undo function. Whenever one of the two fields gains focus,\n  * the current state of the Configurer is saved and the Undo button enabled.\n  * The undo button will return to the state when that field gained focus.\n@@ -79,6 +80,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n \n   /**\n    * Return a String representation of a NamedKeyStroke\n+   *\n    * @param k NamedKeyStroke\n    * @return String representation\n    */\n@@ -88,6 +90,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n \n   /**\n    * Return a string representation of a KeyStroke\n+   *\n    * @param k KeyStroke\n    * @return String representation\n    */\n@@ -134,8 +137,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n           keyName.setText(((NamedKeyStroke) value).getName());\n         }\n         keyStroke.setText(\"\");\n-      }\n-      else {\n+      } else {\n         keyName.setText(\"\");\n         keyStroke.setText(keyToString());\n       }\n@@ -159,12 +161,11 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n   }\n \n   private void updateValueFromKeyName() {\n-    if (! isFrozen()) {\n+    if (!isFrozen()) {\n       final String key = keyName.getText();\n       if (key.isEmpty()) {\n         setValue(NamedKeyStroke.NULL_KEYSTROKE);\n-      }\n-      else {\n+      } else {\n         setValue(new NamedKeyStroke(NamedKeyManager.getMarkerKeyStroke(), key));\n       }\n     }\n@@ -265,8 +266,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n         name = parts[2];\n       }\n       return new NamedKeyStroke(stroke, name);\n-    }\n-    catch (Exception e) {\n+    } catch (Exception e) {\n       return NamedKeyStroke.NULL_KEYSTROKE;\n     }\n   }\n@@ -323,7 +323,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n     }\n \n     @Override\n-    public void paint (Graphics g, JComponent c) {\n+    public void paint(Graphics g, JComponent c) {\n       super.paint(g, c);\n       final Component cc = ((JLayer) c).getView();\n       if (parent.isHighlighted()) {\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_random/4/NamedHotKeyConfigurer.java\nindex 335b2a674d2..3eaecfe1d86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_random/4/NamedHotKeyConfigurer.java\n@@ -323,7 +323,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n     }\n \n     @Override\n-    public void paint (Graphics g, JComponent c) {\n+    public void paint(Graphics g, JComponent c) {\n       super.paint(g, c);\n       final Component cc = ((JLayer) c).getView();\n       if (parent.isHighlighted()) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_three_grams/4/NamedHotKeyConfigurer.java\nindex 335b2a674d2..3eaecfe1d86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/4/NamedHotKeyConfigurer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_three_grams/4/NamedHotKeyConfigurer.java\n@@ -323,7 +323,7 @@ public class NamedHotKeyConfigurer extends Configurer implements FocusListener {\n     }\n \n     @Override\n-    public void paint (Graphics g, JComponent c) {\n+    public void paint(Graphics g, JComponent c) {\n       super.paint(g, c);\n       final Component cc = ((JLayer) c).getView();\n       if (parent.isHighlighted()) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
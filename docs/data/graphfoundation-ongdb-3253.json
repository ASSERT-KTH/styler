{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3253",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "238",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3253/ChunkedOutput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3253/ChunkedOutput.java\nindex 1dfe19abea9..559c3dbb5c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3253/ChunkedOutput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3253/ChunkedOutput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.transport;\n \n import io.netty.buffer.ByteBuf;\n@@ -40,270 +41,268 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public class ChunkedOutput implements PackOutput\n {\n-    private static final int DEFAULT_BUFFER_SIZE = 8192;\n-\n-    public static final int CHUNK_HEADER_SIZE = 2;\n-    public static final int MESSAGE_BOUNDARY = 0;\n-\n-    private static final int MAX_CHUNK_SIZE = Short.MAX_VALUE / 2;\n-    private static final int NO_MESSAGE = -1;\n-\n-    private final Channel channel;\n-    private final int maxBufferSize;\n-    private final int maxChunkSize;\n-    private final TransportThrottleGroup throttleGroup;\n-\n-    private ByteBuf buffer;\n-    private int currentChunkStartIndex;\n-    private boolean closed;\n-\n-    /** Are currently in the middle of writing a chunk? */\n-    private boolean chunkOpen;\n-    private int currentMessageStartIndex = NO_MESSAGE;\n-\n-    public ChunkedOutput( Channel ch, TransportThrottleGroup throttleGroup )\n-    {\n-        this( ch, DEFAULT_BUFFER_SIZE, throttleGroup );\n-    }\n-\n-    public ChunkedOutput( Channel ch, int bufferSize, TransportThrottleGroup throttleGroup )\n-    {\n-        this( ch, bufferSize, MAX_CHUNK_SIZE, throttleGroup );\n-    }\n-\n-    public ChunkedOutput( Channel channel, int maxBufferSize, int maxChunkSize, TransportThrottleGroup throttleGroup )\n+  private static final int DEFAULT_BUFFER_SIZE = 8192;\n+\n+  public static final int CHUNK_HEADER_SIZE = 2;\n+  public static final int MESSAGE_BOUNDARY = 0;\n+\n+  private static final int MAX_CHUNK_SIZE = Short.MAX_VALUE / 2;\n+  private static final int NO_MESSAGE = -1;\n+\n+  private final Channel channel;\n+  private final int maxBufferSize;\n+  private final int maxChunkSize;\n+  private final TransportThrottleGroup throttleGroup;\n+\n+  private ByteBuf buffer;\n+  private int currentChunkStartIndex;\n+  private boolean closed;\n+\n+  /**\n+   * Are currently in the middle of writing a chunk?\n+   */\n+  private boolean chunkOpen;\n+  private int currentMessageStartIndex = NO_MESSAGE;\n+\n+  public ChunkedOutput(Channel ch, TransportThrottleGroup throttleGroup)\n+  {\n+    this(ch, DEFAULT_BUFFER_SIZE, throttleGroup);\n+  }\n+\n+  public ChunkedOutput(Channel ch, int bufferSize, TransportThrottleGroup throttleGroup)\n+  {\n+    this(ch, bufferSize, MAX_CHUNK_SIZE, throttleGroup);\n+  }\n+\n+  public ChunkedOutput(Channel channel, int maxBufferSize, int maxChunkSize, TransportThrottleGroup throttleGroup)\n+  {\n+    this.channel = Objects.requireNonNull(channel);\n+    this.maxBufferSize = maxBufferSize;\n+    this.maxChunkSize = maxChunkSize;\n+    this.buffer = allocateBuffer();\n+    this.throttleGroup = Objects.requireNonNull(throttleGroup);\n+  }\n+\n+  @Override\n+  public synchronized void beginMessage()\n+  {\n+    if (currentMessageStartIndex != NO_MESSAGE)\n     {\n-        this.channel = Objects.requireNonNull( channel );\n-        this.maxBufferSize = maxBufferSize;\n-        this.maxChunkSize = maxChunkSize;\n-        this.buffer = allocateBuffer();\n-        this.throttleGroup = Objects.requireNonNull( throttleGroup );\n+      throw new IllegalStateException(\"Message has already been started, index: \" + currentMessageStartIndex);\n     }\n \n-    @Override\n-    public synchronized void beginMessage()\n-    {\n-        if ( currentMessageStartIndex != NO_MESSAGE )\n-        {\n-            throw new IllegalStateException( \"Message has already been started, index: \" + currentMessageStartIndex );\n-        }\n+    currentMessageStartIndex = buffer.writerIndex();\n+  }\n \n-        currentMessageStartIndex = buffer.writerIndex();\n-    }\n+  @Override\n+  public synchronized void messageSucceeded() throws IOException\n+  {\n+    assertMessageStarted();\n+    currentMessageStartIndex = NO_MESSAGE;\n \n-    @Override\n-    public synchronized void messageSucceeded() throws IOException\n-    {\n-        assertMessageStarted();\n-        currentMessageStartIndex = NO_MESSAGE;\n+    closeChunkIfOpen();\n+    buffer.writeShort(MESSAGE_BOUNDARY);\n \n-        closeChunkIfOpen();\n-        buffer.writeShort( MESSAGE_BOUNDARY );\n-\n-        if ( buffer.readableBytes() >= maxBufferSize )\n-        {\n-            flush();\n-        }\n-        chunkOpen = false;\n-    }\n-\n-    @Override\n-    public synchronized void messageFailed() throws IOException\n+    if (buffer.readableBytes() >= maxBufferSize)\n     {\n-        assertMessageStarted();\n-        int writerIndex = currentMessageStartIndex;\n-        currentMessageStartIndex = NO_MESSAGE;\n-\n-        // truncate the buffer to remove all data written by an unfinished message\n-        buffer.capacity( writerIndex );\n-        chunkOpen = false;\n+      flush();\n     }\n-\n-    //Flush can be called from a separate thread, we therefor need to synchronize\n-    //on everything that touches the buffer\n-    @Override\n-    public synchronized PackOutput flush() throws IOException\n+    chunkOpen = false;\n+  }\n+\n+  @Override\n+  public synchronized void messageFailed() throws IOException\n+  {\n+    assertMessageStarted();\n+    int writerIndex = currentMessageStartIndex;\n+    currentMessageStartIndex = NO_MESSAGE;\n+\n+    // truncate the buffer to remove all data written by an unfinished message\n+    buffer.capacity(writerIndex);\n+    chunkOpen = false;\n+  }\n+\n+  //Flush can be called from a separate thread, we therefor need to synchronize\n+  //on everything that touches the buffer\n+  @Override\n+  public synchronized PackOutput flush() throws IOException\n+  {\n+    if (buffer != null && buffer.readableBytes() > 0)\n     {\n-        if ( buffer != null && buffer.readableBytes() > 0 )\n-        {\n-            closeChunkIfOpen();\n-\n-            // check for and apply write throttles\n-            try\n-            {\n-                throttleGroup.writeThrottle().acquire( channel );\n-            }\n-            catch ( TransportThrottleException ex )\n-            {\n-                throw new BoltIOException( Status.Request.InvalidUsage, ex.getMessage(), ex );\n-            }\n-\n-            // Local copy and clear the buffer field. This ensures that the buffer is not re-released if the flush call fails\n-            ByteBuf out = this.buffer;\n-            this.buffer = null;\n-\n-            channel.writeAndFlush( out, channel.voidPromise() );\n-\n-            buffer = allocateBuffer();\n-        }\n-        return this;\n-    }\n+      closeChunkIfOpen();\n \n-    @Override\n-    public synchronized PackOutput writeByte( byte value ) throws IOException\n-    {\n-        ensure( 1 );\n-        buffer.writeByte( value );\n-        return this;\n-    }\n+      // check for and apply write throttles\n+      try\n+      {\n+        throttleGroup.writeThrottle().acquire(channel);\n+      } catch (TransportThrottleException ex)\n+      {\n+        throw new BoltIOException(Status.Request.InvalidUsage, ex.getMessage(), ex);\n+      }\n \n-    @Override\n-    public synchronized PackOutput writeShort( short value ) throws IOException\n-    {\n-        ensure( 2 );\n-        buffer.writeShort( value );\n-        return this;\n-    }\n+      // Local copy and clear the buffer field. This ensures that the buffer is not re-released if the flush call fails\n+      ByteBuf out = this.buffer;\n+      this.buffer = null;\n \n-    @Override\n-    public synchronized PackOutput writeInt( int value ) throws IOException\n-    {\n-        ensure( 4 );\n-        buffer.writeInt( value );\n-        return this;\n-    }\n+      channel.writeAndFlush(out, channel.voidPromise());\n \n-    @Override\n-    public synchronized PackOutput writeLong( long value ) throws IOException\n-    {\n-        ensure( 8 );\n-        buffer.writeLong( value );\n-        return this;\n+      buffer = allocateBuffer();\n     }\n-\n-    @Override\n-    public synchronized PackOutput writeDouble( double value ) throws IOException\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeByte(byte value) throws IOException\n+  {\n+    ensure(1);\n+    buffer.writeByte(value);\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeShort(short value) throws IOException\n+  {\n+    ensure(2);\n+    buffer.writeShort(value);\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeInt(int value) throws IOException\n+  {\n+    ensure(4);\n+    buffer.writeInt(value);\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeLong(long value) throws IOException\n+  {\n+    ensure(8);\n+    buffer.writeLong(value);\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeDouble(double value) throws IOException\n+  {\n+    ensure(8);\n+    buffer.writeDouble(value);\n+    return this;\n+  }\n+\n+  @Override\n+  public synchronized PackOutput writeBytes(ByteBuffer data) throws IOException\n+  {\n+    while (data.remaining() > 0)\n     {\n-        ensure( 8 );\n-        buffer.writeDouble( value );\n-        return this;\n-    }\n+      // Ensure there is an open chunk, and that it has at least one byte of space left\n+      ensure(1);\n \n-    @Override\n-    public synchronized PackOutput writeBytes( ByteBuffer data ) throws IOException\n-    {\n-        while ( data.remaining() > 0 )\n-        {\n-            // Ensure there is an open chunk, and that it has at least one byte of space left\n-            ensure( 1 );\n-\n-            int oldLimit = data.limit();\n-            data.limit( data.position() + Math.min( availableBytesInCurrentChunk(), data.remaining() ) );\n-            buffer.writeBytes( data );\n-            data.limit( oldLimit );\n-        }\n-        return this;\n+      int oldLimit = data.limit();\n+      data.limit(data.position() + Math.min(availableBytesInCurrentChunk(), data.remaining()));\n+      buffer.writeBytes(data);\n+      data.limit(oldLimit);\n     }\n+    return this;\n+  }\n \n-    @Override\n-    public PackOutput writeBytes( byte[] data, int offset, int length ) throws IOException\n+  @Override\n+  public PackOutput writeBytes(byte[] data, int offset, int length) throws IOException\n+  {\n+    if (offset + length > data.length)\n     {\n-        if ( offset + length > data.length )\n-        {\n-            throw new IOException( \"Asked to write \" + length + \" bytes, but there is only \" + (data.length - offset) + \" bytes available in data provided.\" );\n-        }\n-        return writeBytes( ByteBuffer.wrap( data, offset, length ) );\n+      throw new IOException(\"Asked to write \" + length + \" bytes, but there is only \" + (data.length - offset) + \" bytes available in data provided.\");\n     }\n+    return writeBytes(ByteBuffer.wrap(data, offset, length));\n+  }\n \n-    public synchronized void close()\n+  public synchronized void close()\n+  {\n+    if (buffer != null)\n     {\n-        if ( buffer != null )\n-        {\n-            try\n-            {\n-                flush();\n-            }\n-            catch ( IOException ignore )\n-            {\n-            }\n-            finally\n-            {\n-                closed = true;\n-                buffer.release();\n-                buffer = null;\n-            }\n-        }\n+      try\n+      {\n+        flush();\n+      } catch (IOException ignore)\n+      {\n+      } finally\n+      {\n+        closed = true;\n+        buffer.release();\n+        buffer = null;\n+      }\n     }\n+  }\n \n-    private void ensure( int numberOfBytes ) throws IOException\n-    {\n-        assertOpen();\n-        assertMessageStarted();\n-\n-        if ( chunkOpen )\n-        {\n-            int targetChunkSize = currentChunkBodySize() + numberOfBytes + CHUNK_HEADER_SIZE;\n-            if ( targetChunkSize > maxChunkSize )\n-            {\n-                closeChunkIfOpen();\n-                startNewChunk();\n-            }\n-        }\n-        else\n-        {\n-            startNewChunk();\n-        }\n-    }\n+  private void ensure(int numberOfBytes) throws IOException\n+  {\n+    assertOpen();\n+    assertMessageStarted();\n \n-    private void startNewChunk()\n+    if (chunkOpen)\n     {\n-        currentChunkStartIndex = buffer.writerIndex();\n-\n-        // write empty chunk header\n-        buffer.writeShort( 0 );\n-        chunkOpen = true;\n-    }\n-\n-    private void closeChunkIfOpen()\n+      int targetChunkSize = currentChunkBodySize() + numberOfBytes + CHUNK_HEADER_SIZE;\n+      if (targetChunkSize > maxChunkSize)\n+      {\n+        closeChunkIfOpen();\n+        startNewChunk();\n+      }\n+    } else\n     {\n-        if ( chunkOpen )\n-        {\n-            int chunkBodySize = currentChunkBodySize();\n-            buffer.setShort( currentChunkStartIndex, chunkBodySize );\n-            chunkOpen = false;\n-        }\n+      startNewChunk();\n     }\n+  }\n \n-    private int availableBytesInCurrentChunk()\n-    {\n-        return maxChunkSize - currentChunkBodySize() - CHUNK_HEADER_SIZE;\n-    }\n+  private void startNewChunk()\n+  {\n+    currentChunkStartIndex = buffer.writerIndex();\n \n-    private int currentChunkBodySize()\n-    {\n-        return buffer.writerIndex() - (currentChunkStartIndex + CHUNK_HEADER_SIZE);\n-    }\n+    // write empty chunk header\n+    buffer.writeShort(0);\n+    chunkOpen = true;\n+  }\n \n-    private ByteBuf allocateBuffer()\n+  private void closeChunkIfOpen()\n+  {\n+    if (chunkOpen)\n     {\n-        return channel.alloc().buffer( maxBufferSize );\n+      int chunkBodySize = currentChunkBodySize();\n+      buffer.setShort(currentChunkStartIndex, chunkBodySize);\n+      chunkOpen = false;\n     }\n-\n-    private void assertMessageStarted()\n+  }\n+\n+  private int availableBytesInCurrentChunk()\n+  {\n+    return maxChunkSize - currentChunkBodySize() - CHUNK_HEADER_SIZE;\n+  }\n+\n+  private int currentChunkBodySize()\n+  {\n+    return buffer.writerIndex() - (currentChunkStartIndex + CHUNK_HEADER_SIZE);\n+  }\n+\n+  private ByteBuf allocateBuffer()\n+  {\n+    return channel.alloc().buffer(maxBufferSize);\n+  }\n+\n+  private void assertMessageStarted()\n+  {\n+    if (currentMessageStartIndex == NO_MESSAGE)\n     {\n-        if ( currentMessageStartIndex == NO_MESSAGE )\n-        {\n-            throw new IllegalStateException( \"Message has not been started\" );\n-        }\n+      throw new IllegalStateException(\"Message has not been started\");\n     }\n+  }\n \n-    private void assertOpen() throws PackOutputClosedException\n+  private void assertOpen() throws PackOutputClosedException\n+  {\n+    if (closed)\n     {\n-        if ( closed )\n-        {\n-            throw new PackOutputClosedException(\n-                    String.format( \"Network channel towards %s is closed. Client has probably been stopped.\", channel.remoteAddress() ),\n-                    String.format( \"%s\", channel.remoteAddress() ) );\n-        }\n+      throw new PackOutputClosedException(\n+          String.format(\"Network channel towards %s is closed. Client has probably been stopped.\", channel.remoteAddress()),\n+          String.format(\"%s\", channel.remoteAddress()));\n     }\n+  }\n }\n",
            "diff_size": 343
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
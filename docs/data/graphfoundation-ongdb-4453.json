{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4453",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4453/NodeStoreScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4453/NodeStoreScan.java\nindex 61f7a0badc6..17e95d43c64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4453/NodeStoreScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4453/NodeStoreScan.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n@@ -34,70 +35,71 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n /**\n  * Node scanner that will perform some sort of process over set of nodes\n  * from nodeStore {@link NodeStore} based on node ids supplied by underlying store aware id iterator.\n+ *\n  * @param <FAILURE> type of exception thrown on failure\n  */\n public abstract class NodeStoreScan<FAILURE extends Exception> implements StoreScan<FAILURE>\n {\n-    private volatile boolean continueScanning;\n-    private final NodeRecord record;\n+  private volatile boolean continueScanning;\n+  private final NodeRecord record;\n \n-    protected final NodeStore nodeStore;\n-    protected final LockService locks;\n-    private final long totalCount;\n+  protected final NodeStore nodeStore;\n+  protected final LockService locks;\n+  private final long totalCount;\n \n-    private long count;\n+  private long count;\n \n-    public abstract void process( NodeRecord loaded ) throws FAILURE;\n+  public abstract void process(NodeRecord loaded) throws FAILURE;\n \n-    public NodeStoreScan( NodeStore nodeStore, LockService locks, long totalCount )\n-    {\n-        this.nodeStore = nodeStore;\n-        this.record = nodeStore.newRecord();\n-        this.locks = locks;\n-        this.totalCount = totalCount;\n-    }\n+  public NodeStoreScan(NodeStore nodeStore, LockService locks, long totalCount)\n+  {\n+    this.nodeStore = nodeStore;\n+    this.record = nodeStore.newRecord();\n+    this.locks = locks;\n+    this.totalCount = totalCount;\n+  }\n \n-    @Override\n-    public void run() throws FAILURE\n+  @Override\n+  public void run() throws FAILURE\n+  {\n+    try (PrimitiveLongResourceIterator nodeIds = getNodeIdIterator())\n     {\n-        try ( PrimitiveLongResourceIterator nodeIds = getNodeIdIterator() )\n+      continueScanning = true;\n+      while (continueScanning && nodeIds.hasNext())\n+      {\n+        long id = nodeIds.next();\n+        try (Lock ignored = locks.acquireNodeLock(id, LockService.LockType.READ_LOCK))\n         {\n-            continueScanning = true;\n-            while ( continueScanning && nodeIds.hasNext() )\n-            {\n-                long id = nodeIds.next();\n-                try ( Lock ignored = locks.acquireNodeLock( id, LockService.LockType.READ_LOCK ) )\n-                {\n-                    count++;\n-                    if ( nodeStore.getRecord( id, record, FORCE ).inUse() )\n-                    {\n-                        process( record );\n-                    }\n-                }\n-            }\n+          count++;\n+          if (nodeStore.getRecord(id, record, FORCE).inUse())\n+          {\n+            process(record);\n+          }\n         }\n+      }\n     }\n+  }\n \n-    protected PrimitiveLongResourceIterator getNodeIdIterator()\n-    {\n-        return PrimitiveLongCollections.resourceIterator( new StoreIdIterator( nodeStore ), null );\n-    }\n+  protected PrimitiveLongResourceIterator getNodeIdIterator()\n+  {\n+    return PrimitiveLongCollections.resourceIterator(new StoreIdIterator(nodeStore), null);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        continueScanning = false;\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    continueScanning = false;\n+  }\n \n-    @Override\n-    public PopulationProgress getProgress()\n+  @Override\n+  public PopulationProgress getProgress()\n+  {\n+    if (totalCount > 0)\n     {\n-        if ( totalCount > 0 )\n-        {\n-            return new PopulationProgress( count, totalCount );\n-        }\n-\n-        // nothing to do 100% completed\n-        return PopulationProgress.DONE;\n+      return new PopulationProgress(count, totalCount);\n     }\n+\n+    // nothing to do 100% completed\n+    return PopulationProgress.DONE;\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4453/NodeStoreScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4453/NodeStoreScan.java\nindex 61f7a0badc6..1ae9988e6ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4453/NodeStoreScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4453/NodeStoreScan.java\n@@ -100,4 +100,4 @@ public abstract class NodeStoreScan<FAILURE extends Exception> implements StoreS\n         // nothing to do 100% completed\n         return PopulationProgress.DONE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-java-client",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 136).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private final long timeout;\n\n    public DefaultSpatialViewRow(CouchbaseEnvironment env, Bucket bucket, String id, JsonArray key, Object value, JsonObject geometry) {\n        this.asyncViewRow = new DefaultAsyncSpatialViewRow(bucket.async(), id, key, value, geometry);\n        this.timeout = env.kvTimeout();\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/intellij/32/DefaultSpatialViewRow.java\nindex a52e91474ac..3cded3a7741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/intellij/32/DefaultSpatialViewRow.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.java.view;\n \n import com.couchbase.client.java.Bucket;\n@@ -43,7 +44,8 @@ public class DefaultSpatialViewRow implements SpatialViewRow {\n     private final AsyncSpatialViewRow asyncViewRow;\n     private final long timeout;\n \n-    public DefaultSpatialViewRow(CouchbaseEnvironment env, Bucket bucket, String id, JsonArray key, Object value, JsonObject geometry) {\n+    public DefaultSpatialViewRow(CouchbaseEnvironment env, Bucket bucket, String id, JsonArray key, Object value,\n+                                 JsonObject geometry) {\n         this.asyncViewRow = new DefaultAsyncSpatialViewRow(bucket.async(), id, key, value, geometry);\n         this.timeout = env.kvTimeout();\n     }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/naturalize/32/DefaultSpatialViewRow.java\nindex a52e91474ac..52f9176f6e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/naturalize/32/DefaultSpatialViewRow.java\n@@ -98,4 +98,4 @@ public class DefaultSpatialViewRow implements SpatialViewRow {\n         sb.append('}');\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/codebuff/32/DefaultSpatialViewRow.java\nindex a52e91474ac..b387373897d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/errored/1/32/DefaultSpatialViewRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-java-client/codebuff/32/DefaultSpatialViewRow.java\n@@ -28,7 +28,6 @@ import com.couchbase.client.java.document.json.JsonArray;\n import com.couchbase.client.java.document.json.JsonObject;\n import com.couchbase.client.java.env.CouchbaseEnvironment;\n import com.couchbase.client.java.util.Blocking;\n-\n import java.util.concurrent.TimeUnit;\n \n /**\n@@ -37,6 +36,8 @@ import java.util.concurrent.TimeUnit;\n  * @author Michael Nitschinger\n  * @since 2.1.0\n  */\n+\n+\n public class DefaultSpatialViewRow implements SpatialViewRow {\n \n     private static final TimeUnit TIMEOUT_UNIT = TimeUnit.MILLISECONDS;\n@@ -98,4 +99,4 @@ public class DefaultSpatialViewRow implements SpatialViewRow {\n         sb.append('}');\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
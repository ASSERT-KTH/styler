{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3910",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3910/ReusableRecordsCompositeAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3910/ReusableRecordsCompositeAllocator.java\nindex 8f7fb444bde..f3035364491 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3910/ReusableRecordsCompositeAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3910/ReusableRecordsCompositeAllocator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.allocator;\n \n \n@@ -32,31 +33,31 @@ import org.neo4j.kernel.impl.store.record.DynamicRecord;\n  */\n public class ReusableRecordsCompositeAllocator implements DynamicRecordAllocator\n {\n-    private final ReusableRecordsAllocator reusableRecordsAllocator;\n-    private final DynamicRecordAllocator recordAllocator;\n-\n-    public ReusableRecordsCompositeAllocator( Collection<DynamicRecord> records,\n-            DynamicRecordAllocator recordAllocator )\n-    {\n-        this( records.iterator(), recordAllocator );\n-    }\n-\n-    public ReusableRecordsCompositeAllocator( Iterator<DynamicRecord> recordsIterator,\n-            DynamicRecordAllocator recordAllocator )\n-    {\n-        this.reusableRecordsAllocator = new ReusableRecordsAllocator( recordAllocator.getRecordDataSize(), recordsIterator );\n-        this.recordAllocator = recordAllocator;\n-    }\n-\n-    @Override\n-    public int getRecordDataSize()\n-    {\n-        return recordAllocator.getRecordDataSize();\n-    }\n-\n-    @Override\n-    public DynamicRecord nextRecord()\n-    {\n-        return reusableRecordsAllocator.hasNext() ? reusableRecordsAllocator.nextRecord() : recordAllocator.nextRecord();\n-    }\n+  private final ReusableRecordsAllocator reusableRecordsAllocator;\n+  private final DynamicRecordAllocator recordAllocator;\n+\n+  public ReusableRecordsCompositeAllocator(Collection<DynamicRecord> records,\n+                                           DynamicRecordAllocator recordAllocator)\n+  {\n+    this(records.iterator(), recordAllocator);\n+  }\n+\n+  public ReusableRecordsCompositeAllocator(Iterator<DynamicRecord> recordsIterator,\n+                                           DynamicRecordAllocator recordAllocator)\n+  {\n+    this.reusableRecordsAllocator = new ReusableRecordsAllocator(recordAllocator.getRecordDataSize(), recordsIterator);\n+    this.recordAllocator = recordAllocator;\n+  }\n+\n+  @Override\n+  public int getRecordDataSize()\n+  {\n+    return recordAllocator.getRecordDataSize();\n+  }\n+\n+  @Override\n+  public DynamicRecord nextRecord()\n+  {\n+    return reusableRecordsAllocator.hasNext() ? reusableRecordsAllocator.nextRecord() : recordAllocator.nextRecord();\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3910/ReusableRecordsCompositeAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3910/ReusableRecordsCompositeAllocator.java\nindex 8f7fb444bde..bfdcff2b534 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3910/ReusableRecordsCompositeAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3910/ReusableRecordsCompositeAllocator.java\n@@ -18,8 +18,6 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.kernel.impl.store.allocator;\n-\n-\n import java.util.Collection;\n import java.util.Iterator;\n \n@@ -59,4 +57,4 @@ public class ReusableRecordsCompositeAllocator implements DynamicRecordAllocator\n     {\n         return reusableRecordsAllocator.hasNext() ? reusableRecordsAllocator.nextRecord() : recordAllocator.nextRecord();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
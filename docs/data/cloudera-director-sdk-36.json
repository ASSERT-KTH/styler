{
    "project_name": "cloudera-director-sdk",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/36/Migration.java\nindex 6570eda5e70..b2cefade418 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/36/Migration.java\n@@ -24,7 +24,9 @@ public class Migration {\n   private MigratingGroup fromGroup;\n   /* Description of virtual instances to which to migrate roles */\n   private MigratingGroup toGroup;\n-  public Migration() { }\n+\n+  public Migration() {\n+  }\n \n   private Migration(MigratingGroup fromGroup, MigratingGroup toGroup) {\n     this.fromGroup = fromGroup;\n@@ -61,13 +63,15 @@ public class Migration {\n \n   public MigrationBuilder toBuilder() {\n     return builder()\n-      .fromGroup(fromGroup)\n-      .toGroup(toGroup)\n-      ;\n+        .fromGroup(fromGroup)\n+        .toGroup(toGroup)\n+        ;\n   }\n+\n   public MigratingGroup getFromGroup() {\n     return fromGroup;\n   }\n+\n   public void setFromGroup(MigratingGroup fromGroup) {\n     this.fromGroup = fromGroup;\n   }\n@@ -75,23 +79,32 @@ public class Migration {\n   public MigratingGroup getToGroup() {\n     return toGroup;\n   }\n+\n   public void setToGroup(MigratingGroup toGroup) {\n     this.toGroup = toGroup;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     Migration other = (Migration) o; // NOPMD\n \n     if (fromGroup != null ?\n         !fromGroup.equals(other.fromGroup) :\n-        other.fromGroup != null) return false;\n+        other.fromGroup != null) {\n+      return false;\n+    }\n     if (toGroup != null ?\n         !toGroup.equals(other.toGroup) :\n-        other.toGroup != null) return false;\n+        other.toGroup != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -104,7 +117,7 @@ public class Migration {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Migration {\" + newLine);\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/36/Migration.java\nindex 6570eda5e70..f0c085029f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/36/Migration.java\n@@ -1,30 +1,15 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v7.model;\n \n-\n public class Migration {\n   /* Description of virtual instances from which to migrate roles */\n   private MigratingGroup fromGroup;\n   /* Description of virtual instances to which to migrate roles */\n   private MigratingGroup toGroup;\n-  public Migration() { }\n+\n+public Migration() { }\n \n   private Migration(MigratingGroup fromGroup, MigratingGroup toGroup) {\n     this.fromGroup = fromGroup;\n@@ -41,7 +26,8 @@ public class Migration {\n   }\n \n   public static class MigrationBuilder {\n-    private MigratingGroup fromGroup = null;\n+\n+  private MigratingGroup fromGroup = null;\n     private MigratingGroup toGroup = null;\n \n     public MigrationBuilder fromGroup(MigratingGroup fromGroup) {\n@@ -60,12 +46,11 @@ public class Migration {\n   }\n \n   public MigrationBuilder toBuilder() {\n-    return builder()\n-      .fromGroup(fromGroup)\n-      .toGroup(toGroup)\n-      ;\n+    return builder().fromGroup(fromGroup)\n+      .toGroup(toGroup);\n   }\n-  public MigratingGroup getFromGroup() {\n+\n+public MigratingGroup getFromGroup() {\n     return fromGroup;\n   }\n   public void setFromGroup(MigratingGroup fromGroup) {\n@@ -82,16 +67,16 @@ public class Migration {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Migration other = (Migration) o;\n \n-    Migration other = (Migration) o; // NOPMD\n+// NOPMD\n \n-    if (fromGroup != null ?\n-        !fromGroup.equals(other.fromGroup) :\n-        other.fromGroup != null) return false;\n-    if (toGroup != null ?\n-        !toGroup.equals(other.toGroup) :\n-        other.toGroup != null) return false;\n+    if (fromGroup != null ?!fromGroup.equals(other.fromGroup) : other.fromGroup != null) return false;\n+\n+if (toGroup != null ?!toGroup.equals(other.toGroup) : other.toGroup != null) return false;\n     return true;\n   }\n \n@@ -104,7 +89,7 @@ public class Migration {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Migration {\" + newLine);\n@@ -113,5 +98,4 @@ public class Migration {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "30",
                    "column": "22",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "30",
                    "column": "23",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "94",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "99",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "55",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "42",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "62",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "62",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/36/Migration.java\nindex 6570eda5e70..d58ae927586 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/36/Migration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/36/Migration.java\n@@ -18,30 +18,36 @@\n \n package com.cloudera.director.client.v7.model;\n \n-\n public class Migration {\n   /* Description of virtual instances from which to migrate roles */\n+\n   private MigratingGroup fromGroup;\n   /* Description of virtual instances to which to migrate roles */\n+\n   private MigratingGroup toGroup;\n-  public Migration() { }\n+\n+\n+  public Migration() {}\n+\n \n   private Migration(MigratingGroup fromGroup, MigratingGroup toGroup) {\n-    this.fromGroup = fromGroup;\n-    this.toGroup = toGroup;\n-  }\n+                                                                      this.fromGroup = fromGroup;\n+                                                                      this.toGroup = toGroup;\n+                       }\n \n   private Migration(MigrationBuilder builder) {\n-    this.fromGroup = builder.fromGroup;\n-    this.toGroup = builder.toGroup;\n-  }\n+                                              this.fromGroup = builder.fromGroup;\n+                                              this.toGroup = builder.toGroup;\n+                       }\n \n   public static MigrationBuilder builder() {\n     return new MigrationBuilder();\n   }\n \n   public static class MigrationBuilder {\n+\n     private MigratingGroup fromGroup = null;\n+\n     private MigratingGroup toGroup = null;\n \n     public MigrationBuilder fromGroup(MigratingGroup fromGroup) {\n@@ -62,12 +68,13 @@ public class Migration {\n   public MigrationBuilder toBuilder() {\n     return builder()\n       .fromGroup(fromGroup)\n-      .toGroup(toGroup)\n-      ;\n+      .toGroup(toGroup);\n   }\n+\n   public MigratingGroup getFromGroup() {\n     return fromGroup;\n   }\n+\n   public void setFromGroup(MigratingGroup fromGroup) {\n     this.fromGroup = fromGroup;\n   }\n@@ -75,43 +82,46 @@ public class Migration {\n   public MigratingGroup getToGroup() {\n     return toGroup;\n   }\n+\n   public void setToGroup(MigratingGroup toGroup) {\n     this.toGroup = toGroup;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    Migration other = (Migration) o; // NOPMD\n+    Migration other = (Migration)o; // NOPMD\n \n-    if (fromGroup != null ?\n-        !fromGroup.equals(other.fromGroup) :\n-        other.fromGroup != null) return false;\n-    if (toGroup != null ?\n-        !toGroup.equals(other.toGroup) :\n-        other.toGroup != null) return false;\n+    if (fromGroup != null?!fromGroup.equals(other.fromGroup): other.fromGroup != null) return false;\n+    if (toGroup != null?!toGroup.equals(other.toGroup): other.toGroup != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (fromGroup != null ? fromGroup.hashCode() : 0);\n-    result = 31 * result + (toGroup != null ? toGroup.hashCode() : 0);\n+    result = 31*result + (fromGroup != null? fromGroup.hashCode():0);\n+    result = 31*result + (toGroup != null? toGroup.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Migration {\" + newLine);\n-    sb.append(\"  fromGroup: \").append(fromGroup).append(newLine);\n-    sb.append(\"  toGroup: \").append(toGroup).append(newLine);\n+    sb.append(\"  fromGroup: \")\n+      .append(fromGroup).append(newLine);\n+    sb.append(\"  toGroup: \")\n+      .append(toGroup).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
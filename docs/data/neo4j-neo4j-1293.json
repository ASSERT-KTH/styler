{
    "project_name": "neo4j-neo4j",
    "error_id": "1293",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1293/BoltAuthenticationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1293/BoltAuthenticationHelper.java\nindex 235db031b6b..6230f76bbf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1293/BoltAuthenticationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1293/BoltAuthenticationHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.messaging;\n \n import java.util.Map;\n@@ -30,29 +31,28 @@ import org.neo4j.values.storable.Values;\n \n public class BoltAuthenticationHelper\n {\n-    public static boolean processAuthentication( String userAgent, Map<String,Object> authToken, StateMachineContext context,\n-                                                RoutingContext routingContext ) throws BoltConnectionFatality\n+    public static boolean processAuthentication(String userAgent, Map<String, Object> authToken, StateMachineContext context,\n+                                                RoutingContext routingContext) throws BoltConnectionFatality\n     {\n         try\n         {\n             BoltStateMachineSPI boltSpi = context.boltSpi();\n \n-            AuthenticationResult authResult = boltSpi.authenticate( authToken );\n+            AuthenticationResult authResult = boltSpi.authenticate(authToken);\n             String username = authResult.getLoginContext().subject().username();\n-            context.authenticatedAsUser( username, userAgent );\n-            context.initStatementProcessorProvider( authResult, routingContext );\n+            context.authenticatedAsUser(username, userAgent);\n+            context.initStatementProcessorProvider(authResult, routingContext);\n \n-            if ( authResult.credentialsExpired() )\n+            if (authResult.credentialsExpired())\n             {\n-                context.connectionState().onMetadata( \"credentials_expired\", Values.TRUE );\n+                context.connectionState().onMetadata(\"credentials_expired\", Values.TRUE);\n             }\n-            context.connectionState().onMetadata( \"server\", Values.utf8Value( boltSpi.version() ) );\n+            context.connectionState().onMetadata(\"server\", Values.utf8Value(boltSpi.version()));\n \n             return true;\n-        }\n-        catch ( Throwable t )\n+        } catch (Throwable t)\n         {\n-            context.handleFailure( t, true );\n+            context.handleFailure(t, true);\n             return false;\n         }\n     }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1293/BoltAuthenticationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1293/BoltAuthenticationHelper.java\nindex 235db031b6b..e7b95b3d9ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1293/BoltAuthenticationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1293/BoltAuthenticationHelper.java\n@@ -30,8 +30,7 @@ import org.neo4j.values.storable.Values;\n \n public class BoltAuthenticationHelper\n {\n-    public static boolean processAuthentication( String userAgent, Map<String,Object> authToken, StateMachineContext context,\n-                                                RoutingContext routingContext ) throws BoltConnectionFatality\n+    public static boolean processAuthentication( String userAgent, Map<String,Object> authToken, StateMachineContext context, RoutingContext routingContext ) throws BoltConnectionFatality\n     {\n         try\n         {\n@@ -56,4 +55,4 @@ public class BoltAuthenticationHelper\n             return false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
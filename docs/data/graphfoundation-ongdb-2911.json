{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2911",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2911/ExplicitBatchIndexApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2911/ExplicitBatchIndexApplier.java\nindex 1863dfdc5f0..785cd0d9015 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2911/ExplicitBatchIndexApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2911/ExplicitBatchIndexApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.io.IOException;\n@@ -34,83 +35,81 @@ import org.neo4j.storageengine.api.TransactionApplicationMode;\n  */\n public class ExplicitBatchIndexApplier extends BatchTransactionApplier.Adapter\n {\n-    private final IdOrderingQueue transactionOrdering;\n-    private final TransactionApplicationMode mode;\n-    private final IndexConfigStore indexConfigStore;\n-    private final ExplicitIndexApplierLookup applierLookup;\n+  private final IdOrderingQueue transactionOrdering;\n+  private final TransactionApplicationMode mode;\n+  private final IndexConfigStore indexConfigStore;\n+  private final ExplicitIndexApplierLookup applierLookup;\n \n-    // There are some expensive lookups made in the TransactionApplier, so cache it\n-    private ExplicitIndexTransactionApplier txApplier;\n-    private long lastTransactionId = -1;\n+  // There are some expensive lookups made in the TransactionApplier, so cache it\n+  private ExplicitIndexTransactionApplier txApplier;\n+  private long lastTransactionId = -1;\n \n-    public ExplicitBatchIndexApplier( IndexConfigStore indexConfigStore, ExplicitIndexApplierLookup applierLookup,\n-            IdOrderingQueue transactionOrdering, TransactionApplicationMode mode )\n-    {\n-        this.indexConfigStore = indexConfigStore;\n-        this.applierLookup = applierLookup;\n-        this.transactionOrdering = transactionOrdering;\n-        this.mode = mode;\n-    }\n+  public ExplicitBatchIndexApplier(IndexConfigStore indexConfigStore, ExplicitIndexApplierLookup applierLookup,\n+                                   IdOrderingQueue transactionOrdering, TransactionApplicationMode mode)\n+  {\n+    this.indexConfigStore = indexConfigStore;\n+    this.applierLookup = applierLookup;\n+    this.transactionOrdering = transactionOrdering;\n+    this.mode = mode;\n+  }\n \n-    @Override\n-    public TransactionApplier startTx( CommandsToApply transaction ) throws IOException\n+  @Override\n+  public TransactionApplier startTx(CommandsToApply transaction) throws IOException\n+  {\n+    long activeTransactionId = transaction.transactionId();\n+    try\n     {\n-        long activeTransactionId = transaction.transactionId();\n-        try\n-        {\n-            // Cache transactionApplier because it has some expensive lookups\n-            if ( txApplier == null )\n-            {\n-                txApplier = new ExplicitIndexTransactionApplier( applierLookup, indexConfigStore, mode,\n-                        transactionOrdering );\n-            }\n-\n-            if ( transaction.requiresApplicationOrdering() )\n-            {\n-                // Index operations must preserve order so wait for previous tx to finish\n-                transactionOrdering.waitFor( activeTransactionId );\n-                // And set current tx so we can notify the next transaction when we are finished\n-                if ( transaction.next() != null )\n-                {\n-                    // Let each transaction notify the next\n-                    txApplier.setTransactionId( activeTransactionId );\n-                }\n-                else\n-                {\n-                    // except the last transaction, which notifies that it is done after appliers have been closed\n-                    lastTransactionId = activeTransactionId;\n-                }\n-            }\n+      // Cache transactionApplier because it has some expensive lookups\n+      if (txApplier == null)\n+      {\n+        txApplier = new ExplicitIndexTransactionApplier(applierLookup, indexConfigStore, mode,\n+            transactionOrdering);\n+      }\n \n-            return txApplier;\n-        }\n-        catch ( InterruptedException e )\n+      if (transaction.requiresApplicationOrdering())\n+      {\n+        // Index operations must preserve order so wait for previous tx to finish\n+        transactionOrdering.waitFor(activeTransactionId);\n+        // And set current tx so we can notify the next transaction when we are finished\n+        if (transaction.next() != null)\n+        {\n+          // Let each transaction notify the next\n+          txApplier.setTransactionId(activeTransactionId);\n+        } else\n         {\n-            Thread.currentThread().interrupt();\n-            throw new IOException( \"Interrupted while waiting for applying tx:\" + activeTransactionId +\n-                    \" explicit index updates\", e );\n+          // except the last transaction, which notifies that it is done after appliers have been closed\n+          lastTransactionId = activeTransactionId;\n         }\n+      }\n+\n+      return txApplier;\n+    } catch (InterruptedException e)\n+    {\n+      Thread.currentThread().interrupt();\n+      throw new IOException(\"Interrupted while waiting for applying tx:\" + activeTransactionId +\n+          \" explicit index updates\", e);\n     }\n+  }\n \n-    @Override\n-    public void close() throws Exception\n+  @Override\n+  public void close() throws Exception\n+  {\n+    if (txApplier == null)\n     {\n-        if ( txApplier == null )\n-        {\n-            // Never started a transaction, so nothing to do\n-            return;\n-        }\n+      // Never started a transaction, so nothing to do\n+      return;\n+    }\n \n-        for ( TransactionApplier applier : txApplier.applierByProvider.values() )\n-        {\n-            applier.close();\n-        }\n+    for (TransactionApplier applier : txApplier.applierByProvider.values())\n+    {\n+      applier.close();\n+    }\n \n-        // Allow other batches to run\n-        if ( lastTransactionId != -1 )\n-        {\n-            transactionOrdering.removeChecked( lastTransactionId );\n-            lastTransactionId = -1;\n-        }\n+    // Allow other batches to run\n+    if (lastTransactionId != -1)\n+    {\n+      transactionOrdering.removeChecked(lastTransactionId);\n+      lastTransactionId = -1;\n     }\n+  }\n }\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2911/ExplicitBatchIndexApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2911/ExplicitBatchIndexApplier.java\nindex 1863dfdc5f0..287a2b9bca1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2911/ExplicitBatchIndexApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2911/ExplicitBatchIndexApplier.java\n@@ -87,9 +87,8 @@ public class ExplicitBatchIndexApplier extends BatchTransactionApplier.Adapter\n         catch ( InterruptedException e )\n         {\n             Thread.currentThread().interrupt();\n-            throw new IOException( \"Interrupted while waiting for applying tx:\" + activeTransactionId +\n-                    \" explicit index updates\", e );\n-        }\n+            throw new IOException( \"Interrupted while waiting for applying tx:\" + activeTransactionId + \" explicit index updates\", e );\n+    }\n     }\n \n     @Override\n@@ -113,4 +112,4 @@ public class ExplicitBatchIndexApplier extends BatchTransactionApplier.Adapter\n             lastTransactionId = -1;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3418",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3418/ExecutorBoltScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3418/ExecutorBoltScheduler.java\nindex 8f973a5f97b..deee932f79e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3418/ExecutorBoltScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3418/ExecutorBoltScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime;\n \n import org.apache.commons.lang3.exception.ExceptionUtils;\n@@ -38,204 +39,198 @@ import static org.neo4j.concurrent.Futures.failedFuture;\n \n public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifetimeListener, BoltConnectionQueueMonitor\n {\n-    private final String connector;\n-    private final ExecutorFactory executorFactory;\n-    private final JobScheduler scheduler;\n-    private final Log log;\n-    private final ConcurrentHashMap<String, BoltConnection> activeConnections = new ConcurrentHashMap<>();\n-    private final ConcurrentHashMap<String, CompletableFuture<Boolean>> activeWorkItems = new ConcurrentHashMap<>();\n-    private final int corePoolSize;\n-    private final int maxPoolSize;\n-    private final Duration keepAlive;\n-    private final int queueSize;\n-    private final ExecutorService forkJoinPool;\n-\n-    private ExecutorService threadPool;\n-\n-    public ExecutorBoltScheduler( String connector, ExecutorFactory executorFactory, JobScheduler scheduler, LogService logService, int corePoolSize,\n-            int maxPoolSize, Duration keepAlive, int queueSize, ExecutorService forkJoinPool )\n-    {\n-        this.connector = connector;\n-        this.executorFactory = executorFactory;\n-        this.scheduler = scheduler;\n-        this.log = logService.getInternalLog( getClass() );\n-        this.corePoolSize = corePoolSize;\n-        this.maxPoolSize = maxPoolSize;\n-        this.keepAlive = keepAlive;\n-        this.queueSize = queueSize;\n-        this.forkJoinPool = forkJoinPool;\n+  private final String connector;\n+  private final ExecutorFactory executorFactory;\n+  private final JobScheduler scheduler;\n+  private final Log log;\n+  private final ConcurrentHashMap<String, BoltConnection> activeConnections = new ConcurrentHashMap<>();\n+  private final ConcurrentHashMap<String, CompletableFuture<Boolean>> activeWorkItems = new ConcurrentHashMap<>();\n+  private final int corePoolSize;\n+  private final int maxPoolSize;\n+  private final Duration keepAlive;\n+  private final int queueSize;\n+  private final ExecutorService forkJoinPool;\n+\n+  private ExecutorService threadPool;\n+\n+  public ExecutorBoltScheduler(String connector, ExecutorFactory executorFactory, JobScheduler scheduler, LogService logService, int corePoolSize,\n+                               int maxPoolSize, Duration keepAlive, int queueSize, ExecutorService forkJoinPool)\n+  {\n+    this.connector = connector;\n+    this.executorFactory = executorFactory;\n+    this.scheduler = scheduler;\n+    this.log = logService.getInternalLog(getClass());\n+    this.corePoolSize = corePoolSize;\n+    this.maxPoolSize = maxPoolSize;\n+    this.keepAlive = keepAlive;\n+    this.queueSize = queueSize;\n+    this.forkJoinPool = forkJoinPool;\n+  }\n+\n+  boolean isRegistered(BoltConnection connection)\n+  {\n+    return activeConnections.containsKey(connection.id());\n+  }\n+\n+  boolean isActive(BoltConnection connection)\n+  {\n+    return activeWorkItems.containsKey(connection.id());\n+  }\n+\n+  @Override\n+  public String connector()\n+  {\n+    return connector;\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    threadPool = executorFactory.create(corePoolSize, maxPoolSize, keepAlive, queueSize, true,\n+        new NameAppendingThreadFactory(connector, scheduler.threadFactory(JobScheduler.Groups.boltWorker)));\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    if (threadPool != null)\n+    {\n+      activeConnections.values().forEach(this::stopConnection);\n+\n+      threadPool.shutdown();\n+    }\n+  }\n+\n+  @Override\n+  public void created(BoltConnection connection)\n+  {\n+    BoltConnection previous = activeConnections.put(connection.id(), connection);\n+    // We do not expect the same (keyed) connection twice\n+    assert previous == null;\n+  }\n+\n+  @Override\n+  public void closed(BoltConnection connection)\n+  {\n+    String id = connection.id();\n+\n+    try\n+    {\n+      CompletableFuture<Boolean> currentFuture = activeWorkItems.remove(id);\n+      if (currentFuture != null)\n+      {\n+        currentFuture.cancel(false);\n+      }\n+    } finally\n+    {\n+      activeConnections.remove(id);\n     }\n+  }\n \n-    boolean isRegistered( BoltConnection connection )\n-    {\n-        return activeConnections.containsKey( connection.id() );\n-    }\n+  @Override\n+  public void enqueued(BoltConnection to, Job job)\n+  {\n+    handleSubmission(to);\n+  }\n \n-    boolean isActive( BoltConnection connection )\n-    {\n-        return activeWorkItems.containsKey( connection.id() );\n-    }\n+  @Override\n+  public void drained(BoltConnection from, Collection<Job> batch)\n+  {\n \n-    @Override\n-    public String connector()\n-    {\n-        return connector;\n-    }\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        threadPool = executorFactory.create( corePoolSize, maxPoolSize, keepAlive, queueSize, true,\n-                new NameAppendingThreadFactory( connector, scheduler.threadFactory( JobScheduler.Groups.boltWorker ) ) );\n-    }\n+  private void handleSubmission(BoltConnection connection)\n+  {\n+    activeWorkItems.computeIfAbsent(connection.id(),\n+        key -> scheduleBatchOrHandleError(connection).whenCompleteAsync((result, error) -> handleCompletion(connection, result, error),\n+            forkJoinPool));\n+  }\n \n-    @Override\n-    public void stop()\n+  private CompletableFuture<Boolean> scheduleBatchOrHandleError(BoltConnection connection)\n+  {\n+    try\n     {\n-        if ( threadPool != null )\n-        {\n-            activeConnections.values().forEach( this::stopConnection );\n-\n-            threadPool.shutdown();\n-        }\n-    }\n-\n-    @Override\n-    public void created( BoltConnection connection )\n+      return CompletableFuture.supplyAsync(() -> executeBatch(connection), threadPool);\n+    } catch (RejectedExecutionException ex)\n     {\n-        BoltConnection previous = activeConnections.put( connection.id(), connection );\n-        // We do not expect the same (keyed) connection twice\n-        assert previous == null;\n+      return failedFuture(ex);\n     }\n+  }\n \n-    @Override\n-    public void closed( BoltConnection connection )\n-    {\n-        String id = connection.id();\n-\n-        try\n-        {\n-            CompletableFuture<Boolean> currentFuture = activeWorkItems.remove( id );\n-            if ( currentFuture != null )\n-            {\n-                currentFuture.cancel( false );\n-            }\n-        }\n-        finally\n-        {\n-            activeConnections.remove( id );\n-        }\n-    }\n+  private boolean executeBatch(BoltConnection connection)\n+  {\n+    Thread currentThread = Thread.currentThread();\n+    String originalName = currentThread.getName();\n+    String newName = String.format(\"%s [%s] \", originalName, connection.remoteAddress());\n \n-    @Override\n-    public void enqueued( BoltConnection to, Job job )\n+    currentThread.setName(newName);\n+    try\n     {\n-        handleSubmission( to );\n-    }\n-\n-    @Override\n-    public void drained( BoltConnection from, Collection<Job> batch )\n+      return connection.processNextBatch();\n+    } finally\n     {\n-\n+      currentThread.setName(originalName);\n     }\n+  }\n \n-    private void handleSubmission( BoltConnection connection )\n+  private void handleCompletion(BoltConnection connection, Boolean shouldContinueScheduling, Throwable error)\n+  {\n+    try\n     {\n-        activeWorkItems.computeIfAbsent( connection.id(),\n-                key -> scheduleBatchOrHandleError( connection ).whenCompleteAsync( ( result, error ) -> handleCompletion( connection, result, error ),\n-                        forkJoinPool ) );\n-    }\n-\n-    private CompletableFuture<Boolean> scheduleBatchOrHandleError( BoltConnection connection )\n+      if (error != null && ExceptionUtils.hasCause(error, RejectedExecutionException.class))\n+      {\n+        connection.handleSchedulingError(error);\n+        return;\n+      }\n+    } finally\n     {\n-        try\n-        {\n-            return CompletableFuture.supplyAsync( () -> executeBatch( connection ), threadPool );\n-        }\n-        catch ( RejectedExecutionException ex )\n-        {\n-            return failedFuture( ex );\n-        }\n+      // we need to ensure that the entry is removed only after any possible handleSchedulingError\n+      // call is completed. Otherwise, we can end up having different threads executing against\n+      // bolt state machine.\n+      activeWorkItems.remove(connection.id());\n     }\n \n-    private boolean executeBatch( BoltConnection connection )\n+    if (error != null)\n+    {\n+      log.error(String.format(\"Unexpected error during job scheduling for session '%s'.\", connection.id()), error);\n+      stopConnection(connection);\n+    } else\n     {\n-        Thread currentThread = Thread.currentThread();\n-        String originalName = currentThread.getName();\n-        String newName = String.format( \"%s [%s] \", originalName, connection.remoteAddress() );\n-\n-        currentThread.setName( newName );\n-        try\n-        {\n-            return connection.processNextBatch();\n-        }\n-        finally\n-        {\n-            currentThread.setName( originalName );\n-        }\n+      if (shouldContinueScheduling && connection.hasPendingJobs())\n+      {\n+        handleSubmission(connection);\n+      }\n     }\n+  }\n \n-    private void handleCompletion( BoltConnection connection, Boolean shouldContinueScheduling, Throwable error )\n+  private void stopConnection(BoltConnection connection)\n+  {\n+    try\n     {\n-        try\n-        {\n-            if ( error != null && ExceptionUtils.hasCause( error, RejectedExecutionException.class ) )\n-            {\n-                connection.handleSchedulingError( error );\n-                return;\n-            }\n-        }\n-        finally\n-        {\n-            // we need to ensure that the entry is removed only after any possible handleSchedulingError\n-            // call is completed. Otherwise, we can end up having different threads executing against\n-            // bolt state machine.\n-            activeWorkItems.remove( connection.id() );\n-        }\n-\n-        if ( error != null )\n-        {\n-            log.error( String.format( \"Unexpected error during job scheduling for session '%s'.\", connection.id() ), error );\n-            stopConnection( connection );\n-        }\n-        else\n-        {\n-            if ( shouldContinueScheduling && connection.hasPendingJobs() )\n-            {\n-                handleSubmission( connection );\n-            }\n-        }\n+      connection.stop();\n+    } catch (Throwable t)\n+    {\n+      log.warn(String.format(\"An unexpected error occurred while stopping BoltConnection [%s]\", connection.id()), t);\n     }\n+  }\n+\n+  private static class NameAppendingThreadFactory implements ThreadFactory\n+  {\n+    private final String nameToAppend;\n+    private final ThreadFactory factory;\n \n-    private void stopConnection( BoltConnection connection )\n+    private NameAppendingThreadFactory(String nameToAppend, ThreadFactory factory)\n     {\n-        try\n-        {\n-            connection.stop();\n-        }\n-        catch ( Throwable t )\n-        {\n-            log.warn( String.format( \"An unexpected error occurred while stopping BoltConnection [%s]\", connection.id() ), t );\n-        }\n+      this.nameToAppend = nameToAppend;\n+      this.factory = factory;\n     }\n \n-    private static class NameAppendingThreadFactory implements ThreadFactory\n+    @Override\n+    public Thread newThread(Runnable r)\n     {\n-        private final String nameToAppend;\n-        private final ThreadFactory factory;\n-\n-        private NameAppendingThreadFactory( String nameToAppend, ThreadFactory factory )\n-        {\n-            this.nameToAppend = nameToAppend;\n-            this.factory = factory;\n-        }\n-\n-        @Override\n-        public Thread newThread( Runnable r )\n-        {\n-            Thread newThread = factory.newThread( r );\n-            newThread.setName( String.format( \"%s [%s]\", newThread.getName(), nameToAppend ) );\n-            return newThread;\n-        }\n+      Thread newThread = factory.newThread(r);\n+      newThread.setName(String.format(\"%s [%s]\", newThread.getName(), nameToAppend));\n+      return newThread;\n     }\n+  }\n }\n",
            "diff_size": 252
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3418/ExecutorBoltScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3418/ExecutorBoltScheduler.java\nindex 8f973a5f97b..a3eb927d947 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3418/ExecutorBoltScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3418/ExecutorBoltScheduler.java\n@@ -42,7 +42,7 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n     private final ExecutorFactory executorFactory;\n     private final JobScheduler scheduler;\n     private final Log log;\n-    private final ConcurrentHashMap<String, BoltConnection> activeConnections = new ConcurrentHashMap<>();\n+    private final ConcurrentHashMap<String,BoltConnection> activeConnections = new ConcurrentHashMap<>();\n     private final ConcurrentHashMap<String, CompletableFuture<Boolean>> activeWorkItems = new ConcurrentHashMap<>();\n     private final int corePoolSize;\n     private final int maxPoolSize;\n@@ -52,8 +52,7 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n \n     private ExecutorService threadPool;\n \n-    public ExecutorBoltScheduler( String connector, ExecutorFactory executorFactory, JobScheduler scheduler, LogService logService, int corePoolSize,\n-            int maxPoolSize, Duration keepAlive, int queueSize, ExecutorService forkJoinPool )\n+    public ExecutorBoltScheduler( String connector, ExecutorFactory executorFactory, JobScheduler scheduler, LogService logService, int corePoolSize, int maxPoolSize, Duration keepAlive, int queueSize, ExecutorService forkJoinPool )\n     {\n         this.connector = connector;\n         this.executorFactory = executorFactory;\n@@ -85,8 +84,7 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n     @Override\n     public void start()\n     {\n-        threadPool = executorFactory.create( corePoolSize, maxPoolSize, keepAlive, queueSize, true,\n-                new NameAppendingThreadFactory( connector, scheduler.threadFactory( JobScheduler.Groups.boltWorker ) ) );\n+        threadPool = executorFactory.create( corePoolSize, maxPoolSize, keepAlive, queueSize, true, new NameAppendingThreadFactory( connector, scheduler.threadFactory( JobScheduler.Groups.boltWorker ) ) );\n     }\n \n     @Override\n@@ -95,8 +93,7 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n         if ( threadPool != null )\n         {\n             activeConnections.values().forEach( this::stopConnection );\n-\n-            threadPool.shutdown();\n+threadPool.shutdown();\n         }\n     }\n \n@@ -136,14 +133,12 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n     @Override\n     public void drained( BoltConnection from, Collection<Job> batch )\n     {\n-\n-    }\n+}\n \n     private void handleSubmission( BoltConnection connection )\n     {\n         activeWorkItems.computeIfAbsent( connection.id(),\n-                key -> scheduleBatchOrHandleError( connection ).whenCompleteAsync( ( result, error ) -> handleCompletion( connection, result, error ),\n-                        forkJoinPool ) );\n+                key -> scheduleBatchOrHandleError( connection ).whenCompleteAsync( ( result, error ) -> handleCompletion( connection, result, error ), forkJoinPool ) );\n     }\n \n     private CompletableFuture<Boolean> scheduleBatchOrHandleError( BoltConnection connection )\n@@ -163,8 +158,7 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n         Thread currentThread = Thread.currentThread();\n         String originalName = currentThread.getName();\n         String newName = String.format( \"%s [%s] \", originalName, connection.remoteAddress() );\n-\n-        currentThread.setName( newName );\n+currentThread.setName( newName );\n         try\n         {\n             return connection.processNextBatch();\n@@ -238,4 +232,4 @@ public class ExecutorBoltScheduler implements BoltScheduler, BoltConnectionLifet\n             return newThread;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
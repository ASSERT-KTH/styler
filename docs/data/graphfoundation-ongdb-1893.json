{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1893",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1893/PhysicalLogicalTransactionStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1893/PhysicalLogicalTransactionStore.java\nindex ec176a74eba..0598d23d9e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1893/PhysicalLogicalTransactionStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1893/PhysicalLogicalTransactionStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.FileNotFoundException;\n@@ -45,216 +46,215 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryByteCodes.TX_S\n \n public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n {\n-    private static final TransactionMetadataCache.TransactionMetadata METADATA_FOR_EMPTY_STORE =\n-            new TransactionMetadataCache.TransactionMetadata( -1, -1, LogPosition.start( 0 ), BASE_TX_CHECKSUM,\n-                    BASE_TX_COMMIT_TIMESTAMP );\n+  private static final TransactionMetadataCache.TransactionMetadata METADATA_FOR_EMPTY_STORE =\n+      new TransactionMetadataCache.TransactionMetadata(-1, -1, LogPosition.start(0), BASE_TX_CHECKSUM,\n+          BASE_TX_COMMIT_TIMESTAMP);\n \n-    private final LogFile logFile;\n-    private final TransactionMetadataCache transactionMetadataCache;\n-    private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n-    private final Monitors monitors;\n-    private final boolean failOnCorruptedLogFiles;\n-    private LogFiles logFiles;\n+  private final LogFile logFile;\n+  private final TransactionMetadataCache transactionMetadataCache;\n+  private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n+  private final Monitors monitors;\n+  private final boolean failOnCorruptedLogFiles;\n+  private LogFiles logFiles;\n+\n+  public PhysicalLogicalTransactionStore(LogFiles logFiles,\n+                                         TransactionMetadataCache transactionMetadataCache,\n+                                         LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n+                                         boolean failOnCorruptedLogFiles)\n+  {\n+    this.logFiles = logFiles;\n+    this.logFile = logFiles.getLogFile();\n+    this.transactionMetadataCache = transactionMetadataCache;\n+    this.logEntryReader = logEntryReader;\n+    this.monitors = monitors;\n+    this.failOnCorruptedLogFiles = failOnCorruptedLogFiles;\n+  }\n+\n+  @Override\n+  public TransactionCursor getTransactions(LogPosition position) throws IOException\n+  {\n+    return new PhysicalTransactionCursor<>(logFile.getReader(position), new VersionAwareLogEntryReader<>());\n+  }\n \n-    public PhysicalLogicalTransactionStore( LogFiles logFiles,\n-            TransactionMetadataCache transactionMetadataCache,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n-            boolean failOnCorruptedLogFiles )\n+  @Override\n+  public TransactionCursor getTransactionsInReverseOrder(LogPosition backToPosition)\n+  {\n+    return ReversedMultiFileTransactionCursor\n+        .fromLogFile(logFiles, logFile, backToPosition, failOnCorruptedLogFiles,\n+            monitors.newMonitor(ReversedTransactionCursorMonitor.class));\n+  }\n+\n+  @Override\n+  public TransactionCursor getTransactions(final long transactionIdToStartFrom)\n+      throws IOException\n+  {\n+    // look up in position cache\n+    try\n     {\n-        this.logFiles = logFiles;\n-        this.logFile = logFiles.getLogFile();\n-        this.transactionMetadataCache = transactionMetadataCache;\n-        this.logEntryReader = logEntryReader;\n-        this.monitors = monitors;\n-        this.failOnCorruptedLogFiles = failOnCorruptedLogFiles;\n-    }\n+      TransactionMetadataCache.TransactionMetadata transactionMetadata =\n+          transactionMetadataCache.getTransactionMetadata(transactionIdToStartFrom);\n+      if (transactionMetadata != null)\n+      {\n+        // we're good\n+        ReadableLogChannel channel = logFile.getReader(transactionMetadata.getStartPosition());\n+        return new PhysicalTransactionCursor<>(channel, logEntryReader);\n+      }\n \n-    @Override\n-    public TransactionCursor getTransactions( LogPosition position ) throws IOException\n+      // ask logFiles about the version it may be in\n+      LogVersionLocator headerVisitor = new LogVersionLocator(transactionIdToStartFrom);\n+      logFiles.accept(headerVisitor);\n+\n+      // ask LogFile\n+      TransactionPositionLocator transactionPositionLocator =\n+          new TransactionPositionLocator(transactionIdToStartFrom, logEntryReader);\n+      logFile.accept(transactionPositionLocator, headerVisitor.getLogPosition());\n+      LogPosition position = transactionPositionLocator.getAndCacheFoundLogPosition(transactionMetadataCache);\n+      return new PhysicalTransactionCursor<>(logFile.getReader(position), logEntryReader);\n+    } catch (FileNotFoundException e)\n     {\n-        return new PhysicalTransactionCursor<>( logFile.getReader( position ), new VersionAwareLogEntryReader<>() );\n+      throw new NoSuchTransactionException(\n+          transactionIdToStartFrom,\n+          \"Log position acquired, but couldn't find the log file itself. Perhaps it just recently was \" +\n+              \"deleted? [\" + e.getMessage() + \"]\",\n+          e);\n     }\n+  }\n \n-    @Override\n-    public TransactionCursor getTransactionsInReverseOrder( LogPosition backToPosition )\n+  @Override\n+  public TransactionMetadata getMetadataFor(long transactionId) throws IOException\n+  {\n+    if (transactionId <= BASE_TX_ID)\n     {\n-        return ReversedMultiFileTransactionCursor\n-                .fromLogFile( logFiles, logFile, backToPosition, failOnCorruptedLogFiles,\n-                        monitors.newMonitor( ReversedTransactionCursorMonitor.class ) );\n+      return METADATA_FOR_EMPTY_STORE;\n     }\n \n-    @Override\n-    public TransactionCursor getTransactions( final long transactionIdToStartFrom )\n-            throws IOException\n+    TransactionMetadata transactionMetadata =\n+        transactionMetadataCache.getTransactionMetadata(transactionId);\n+    if (transactionMetadata == null)\n     {\n-        // look up in position cache\n-        try\n+      try (IOCursor<CommittedTransactionRepresentation> cursor = getTransactions(transactionId))\n+      {\n+        while (cursor.next())\n         {\n-            TransactionMetadataCache.TransactionMetadata transactionMetadata =\n-                    transactionMetadataCache.getTransactionMetadata( transactionIdToStartFrom );\n-            if ( transactionMetadata != null )\n-            {\n-                // we're good\n-                ReadableLogChannel channel = logFile.getReader( transactionMetadata.getStartPosition() );\n-                return new PhysicalTransactionCursor<>( channel, logEntryReader );\n-            }\n-\n-            // ask logFiles about the version it may be in\n-            LogVersionLocator headerVisitor = new LogVersionLocator( transactionIdToStartFrom );\n-            logFiles.accept( headerVisitor );\n-\n-            // ask LogFile\n-            TransactionPositionLocator transactionPositionLocator =\n-                    new TransactionPositionLocator( transactionIdToStartFrom, logEntryReader );\n-            logFile.accept( transactionPositionLocator, headerVisitor.getLogPosition() );\n-            LogPosition position = transactionPositionLocator.getAndCacheFoundLogPosition( transactionMetadataCache );\n-            return new PhysicalTransactionCursor<>( logFile.getReader( position ), logEntryReader );\n-        }\n-        catch ( FileNotFoundException e )\n-        {\n-            throw new NoSuchTransactionException(\n-                    transactionIdToStartFrom,\n-                    \"Log position acquired, but couldn't find the log file itself. Perhaps it just recently was \" +\n-                    \"deleted? [\" + e.getMessage() + \"]\",\n-                    e );\n+          CommittedTransactionRepresentation tx = cursor.get();\n+          LogEntryCommit commitEntry = tx.getCommitEntry();\n+          long committedTxId = commitEntry.getTxId();\n+          long timeWritten = commitEntry.getTimeWritten();\n+          TransactionMetadata metadata = transactionMetadataCache.cacheTransactionMetadata(committedTxId,\n+              tx.getStartEntry().getStartPosition(), tx.getStartEntry().getMasterId(),\n+              tx.getStartEntry().getLocalId(), LogEntryStart.checksum(tx.getStartEntry()),\n+              timeWritten);\n+          if (committedTxId == transactionId)\n+          {\n+            transactionMetadata = metadata;\n+          }\n         }\n+      }\n+      if (transactionMetadata == null)\n+      {\n+        throw new NoSuchTransactionException(transactionId);\n+      }\n     }\n \n-    @Override\n-    public TransactionMetadata getMetadataFor( long transactionId ) throws IOException\n-    {\n-        if ( transactionId <= BASE_TX_ID )\n-        {\n-            return METADATA_FOR_EMPTY_STORE;\n-        }\n+    return transactionMetadata;\n+  }\n \n-        TransactionMetadata transactionMetadata =\n-                transactionMetadataCache.getTransactionMetadata( transactionId );\n-        if ( transactionMetadata == null )\n-        {\n-            try ( IOCursor<CommittedTransactionRepresentation> cursor = getTransactions( transactionId ) )\n-            {\n-                while ( cursor.next() )\n-                {\n-                    CommittedTransactionRepresentation tx = cursor.get();\n-                    LogEntryCommit commitEntry = tx.getCommitEntry();\n-                    long committedTxId = commitEntry.getTxId();\n-                    long timeWritten = commitEntry.getTimeWritten();\n-                    TransactionMetadata metadata = transactionMetadataCache.cacheTransactionMetadata( committedTxId,\n-                            tx.getStartEntry().getStartPosition(), tx.getStartEntry().getMasterId(),\n-                            tx.getStartEntry().getLocalId(), LogEntryStart.checksum( tx.getStartEntry() ),\n-                            timeWritten );\n-                    if ( committedTxId == transactionId )\n-                    {\n-                        transactionMetadata = metadata;\n-                    }\n-                }\n-            }\n-            if ( transactionMetadata == null )\n-            {\n-                throw new NoSuchTransactionException( transactionId );\n-            }\n-        }\n+  @Override\n+  public boolean existsOnDisk(long transactionId) throws IOException\n+  {\n+    return logFiles.getLogFileInformation().transactionExistsOnDisk(transactionId);\n+  }\n \n-        return transactionMetadata;\n-    }\n+  public static class TransactionPositionLocator implements LogFile.LogFileVisitor\n+  {\n+    private final long startTransactionId;\n+    private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n+    private LogEntryStart startEntryForFoundTransaction;\n+    private long commitTimestamp;\n \n-    @Override\n-    public boolean existsOnDisk( long transactionId ) throws IOException\n+    TransactionPositionLocator(long startTransactionId,\n+                               LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader)\n     {\n-        return logFiles.getLogFileInformation().transactionExistsOnDisk( transactionId );\n+      this.startTransactionId = startTransactionId;\n+      this.logEntryReader = logEntryReader;\n     }\n \n-    public static class TransactionPositionLocator implements LogFile.LogFileVisitor\n+    @Override\n+    public boolean visit(ReadableClosablePositionAwareChannel channel) throws IOException\n     {\n-        private final long startTransactionId;\n-        private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n-        private LogEntryStart startEntryForFoundTransaction;\n-        private long commitTimestamp;\n-\n-        TransactionPositionLocator( long startTransactionId,\n-                LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader )\n-        {\n-            this.startTransactionId = startTransactionId;\n-            this.logEntryReader = logEntryReader;\n-        }\n-\n-        @Override\n-        public boolean visit( ReadableClosablePositionAwareChannel channel ) throws IOException\n-        {\n-            LogEntry logEntry;\n-            LogEntryStart startEntry = null;\n-            while ( (logEntry = logEntryReader.readLogEntry( channel )) != null )\n-            {\n-                switch ( logEntry.getType() )\n-                {\n-                case TX_START:\n-                    startEntry = logEntry.as();\n-                    break;\n-                case TX_COMMIT:\n-                    LogEntryCommit commit = logEntry.as();\n-                    if ( commit.getTxId() == startTransactionId )\n-                    {\n-                        startEntryForFoundTransaction = startEntry;\n-                        commitTimestamp = commit.getTimeWritten();\n-                        return false;\n-                    }\n-                default: // just skip commands\n-                    break;\n-                }\n-            }\n-            return true;\n-        }\n-\n-        public LogPosition getAndCacheFoundLogPosition( TransactionMetadataCache transactionMetadataCache )\n-                throws NoSuchTransactionException\n+      LogEntry logEntry;\n+      LogEntryStart startEntry = null;\n+      while ((logEntry = logEntryReader.readLogEntry(channel)) != null)\n+      {\n+        switch (logEntry.getType())\n         {\n-            if ( startEntryForFoundTransaction == null )\n+          case TX_START:\n+            startEntry = logEntry.as();\n+            break;\n+          case TX_COMMIT:\n+            LogEntryCommit commit = logEntry.as();\n+            if (commit.getTxId() == startTransactionId)\n             {\n-                throw new NoSuchTransactionException( startTransactionId );\n+              startEntryForFoundTransaction = startEntry;\n+              commitTimestamp = commit.getTimeWritten();\n+              return false;\n             }\n-            transactionMetadataCache.cacheTransactionMetadata(\n-                    startTransactionId,\n-                    startEntryForFoundTransaction.getStartPosition(),\n-                    startEntryForFoundTransaction.getMasterId(),\n-                    startEntryForFoundTransaction.getLocalId(),\n-                    LogEntryStart.checksum( startEntryForFoundTransaction ),\n-                    commitTimestamp\n-            );\n-            return startEntryForFoundTransaction.getStartPosition();\n+          default: // just skip commands\n+            break;\n         }\n+      }\n+      return true;\n     }\n \n-    public static final class LogVersionLocator implements LogHeaderVisitor\n+    public LogPosition getAndCacheFoundLogPosition(TransactionMetadataCache transactionMetadataCache)\n+        throws NoSuchTransactionException\n     {\n-        private final long transactionId;\n-        private LogPosition foundPosition;\n+      if (startEntryForFoundTransaction == null)\n+      {\n+        throw new NoSuchTransactionException(startTransactionId);\n+      }\n+      transactionMetadataCache.cacheTransactionMetadata(\n+          startTransactionId,\n+          startEntryForFoundTransaction.getStartPosition(),\n+          startEntryForFoundTransaction.getMasterId(),\n+          startEntryForFoundTransaction.getLocalId(),\n+          LogEntryStart.checksum(startEntryForFoundTransaction),\n+          commitTimestamp\n+      );\n+      return startEntryForFoundTransaction.getStartPosition();\n+    }\n+  }\n \n-        public LogVersionLocator( long transactionId )\n-        {\n-            this.transactionId = transactionId;\n-        }\n+  public static final class LogVersionLocator implements LogHeaderVisitor\n+  {\n+    private final long transactionId;\n+    private LogPosition foundPosition;\n \n-        @Override\n-        public boolean visit( LogPosition position, long firstTransactionIdInLog, long lastTransactionIdInLog )\n-        {\n-            boolean foundIt = transactionId >= firstTransactionIdInLog &&\n-                              transactionId <= lastTransactionIdInLog;\n-            if ( foundIt )\n-            {\n-                foundPosition = position;\n-            }\n-            return !foundIt; // continue as long we don't find it\n-        }\n+    public LogVersionLocator(long transactionId)\n+    {\n+      this.transactionId = transactionId;\n+    }\n \n-        public LogPosition getLogPosition() throws NoSuchTransactionException\n-        {\n-            if ( foundPosition == null )\n-            {\n-                throw new NoSuchTransactionException( transactionId,\n-                        \"Couldn't find any log containing \" + transactionId );\n-            }\n-            return foundPosition;\n-        }\n+    @Override\n+    public boolean visit(LogPosition position, long firstTransactionIdInLog, long lastTransactionIdInLog)\n+    {\n+      boolean foundIt = transactionId >= firstTransactionIdInLog &&\n+          transactionId <= lastTransactionIdInLog;\n+      if (foundIt)\n+      {\n+        foundPosition = position;\n+      }\n+      return !foundIt; // continue as long we don't find it\n+    }\n+\n+    public LogPosition getLogPosition() throws NoSuchTransactionException\n+    {\n+      if (foundPosition == null)\n+      {\n+        throw new NoSuchTransactionException(transactionId,\n+            \"Couldn't find any log containing \" + transactionId);\n+      }\n+      return foundPosition;\n     }\n+  }\n }\n",
            "diff_size": 273
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1893/PhysicalLogicalTransactionStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1893/PhysicalLogicalTransactionStore.java\nindex ec176a74eba..f273a95c97b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1893/PhysicalLogicalTransactionStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1893/PhysicalLogicalTransactionStore.java\n@@ -45,11 +45,9 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryByteCodes.TX_S\n \n public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n {\n-    private static final TransactionMetadataCache.TransactionMetadata METADATA_FOR_EMPTY_STORE =\n-            new TransactionMetadataCache.TransactionMetadata( -1, -1, LogPosition.start( 0 ), BASE_TX_CHECKSUM,\n+    private static final TransactionMetadataCache.TransactionMetadata METADATA_FOR_EMPTY_STORE = new TransactionMetadataCache.TransactionMetadata( -1, -1, LogPosition.start( 0 ), BASE_TX_CHECKSUM,\n                     BASE_TX_COMMIT_TIMESTAMP );\n-\n-    private final LogFile logFile;\n+private final LogFile logFile;\n     private final TransactionMetadataCache transactionMetadataCache;\n     private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n     private final Monitors monitors;\n@@ -57,8 +55,7 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n     private LogFiles logFiles;\n \n     public PhysicalLogicalTransactionStore( LogFiles logFiles,\n-            TransactionMetadataCache transactionMetadataCache,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n+            TransactionMetadataCache transactionMetadataCache, LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n             boolean failOnCorruptedLogFiles )\n     {\n         this.logFiles = logFiles;\n@@ -78,21 +75,18 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n     @Override\n     public TransactionCursor getTransactionsInReverseOrder( LogPosition backToPosition )\n     {\n-        return ReversedMultiFileTransactionCursor\n-                .fromLogFile( logFiles, logFile, backToPosition, failOnCorruptedLogFiles,\n+        return ReversedMultiFileTransactionCursor.fromLogFile( logFiles, logFile, backToPosition, failOnCorruptedLogFiles,\n                         monitors.newMonitor( ReversedTransactionCursorMonitor.class ) );\n     }\n \n     @Override\n-    public TransactionCursor getTransactions( final long transactionIdToStartFrom )\n-            throws IOException\n-    {\n+    public TransactionCursor getTransactions( final long transactionIdToStartFrom ) throws IOException\n+{\n         // look up in position cache\n         try\n         {\n-            TransactionMetadataCache.TransactionMetadata transactionMetadata =\n-                    transactionMetadataCache.getTransactionMetadata( transactionIdToStartFrom );\n-            if ( transactionMetadata != null )\n+            TransactionMetadataCache.TransactionMetadata transactionMetadata = transactionMetadataCache.getTransactionMetadata( transactionIdToStartFrom );\n+if ( transactionMetadata != null )\n             {\n                 // we're good\n                 ReadableLogChannel channel = logFile.getReader( transactionMetadata.getStartPosition() );\n@@ -104,20 +98,15 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n             logFiles.accept( headerVisitor );\n \n             // ask LogFile\n-            TransactionPositionLocator transactionPositionLocator =\n-                    new TransactionPositionLocator( transactionIdToStartFrom, logEntryReader );\n-            logFile.accept( transactionPositionLocator, headerVisitor.getLogPosition() );\n+            TransactionPositionLocator transactionPositionLocator = new TransactionPositionLocator( transactionIdToStartFrom, logEntryReader );\n+logFile.accept( transactionPositionLocator, headerVisitor.getLogPosition() );\n             LogPosition position = transactionPositionLocator.getAndCacheFoundLogPosition( transactionMetadataCache );\n             return new PhysicalTransactionCursor<>( logFile.getReader( position ), logEntryReader );\n         }\n         catch ( FileNotFoundException e )\n         {\n-            throw new NoSuchTransactionException(\n-                    transactionIdToStartFrom,\n-                    \"Log position acquired, but couldn't find the log file itself. Perhaps it just recently was \" +\n-                    \"deleted? [\" + e.getMessage() + \"]\",\n-                    e );\n-        }\n+            throw new NoSuchTransactionException( transactionIdToStartFrom, \"Log position acquired, but couldn't find the log file itself. Perhaps it just recently was \" + \"deleted? [\" + e.getMessage() + \"]\", e );\n+    }\n     }\n \n     @Override\n@@ -128,9 +117,8 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n             return METADATA_FOR_EMPTY_STORE;\n         }\n \n-        TransactionMetadata transactionMetadata =\n-                transactionMetadataCache.getTransactionMetadata( transactionId );\n-        if ( transactionMetadata == null )\n+        TransactionMetadata transactionMetadata = transactionMetadataCache.getTransactionMetadata( transactionId );\n+if ( transactionMetadata == null )\n         {\n             try ( IOCursor<CommittedTransactionRepresentation> cursor = getTransactions( transactionId ) )\n             {\n@@ -141,10 +129,8 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n                     long committedTxId = commitEntry.getTxId();\n                     long timeWritten = commitEntry.getTimeWritten();\n                     TransactionMetadata metadata = transactionMetadataCache.cacheTransactionMetadata( committedTxId,\n-                            tx.getStartEntry().getStartPosition(), tx.getStartEntry().getMasterId(),\n-                            tx.getStartEntry().getLocalId(), LogEntryStart.checksum( tx.getStartEntry() ),\n-                            timeWritten );\n-                    if ( committedTxId == transactionId )\n+                            tx.getStartEntry().getStartPosition(), tx.getStartEntry().getMasterId(), tx.getStartEntry().getLocalId(), LogEntryStart.checksum( tx.getStartEntry() ), timeWritten );\n+if ( committedTxId == transactionId )\n                     {\n                         transactionMetadata = metadata;\n                     }\n@@ -172,8 +158,7 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n         private LogEntryStart startEntryForFoundTransaction;\n         private long commitTimestamp;\n \n-        TransactionPositionLocator( long startTransactionId,\n-                LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader )\n+        TransactionPositionLocator( long startTransactionId, LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader )\n         {\n             this.startTransactionId = startTransactionId;\n             this.logEntryReader = logEntryReader;\n@@ -206,21 +191,14 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n             return true;\n         }\n \n-        public LogPosition getAndCacheFoundLogPosition( TransactionMetadataCache transactionMetadataCache )\n-                throws NoSuchTransactionException\n-        {\n+        public LogPosition getAndCacheFoundLogPosition( TransactionMetadataCache transactionMetadataCache ) throws NoSuchTransactionException\n+{\n             if ( startEntryForFoundTransaction == null )\n             {\n                 throw new NoSuchTransactionException( startTransactionId );\n             }\n-            transactionMetadataCache.cacheTransactionMetadata(\n-                    startTransactionId,\n-                    startEntryForFoundTransaction.getStartPosition(),\n-                    startEntryForFoundTransaction.getMasterId(),\n-                    startEntryForFoundTransaction.getLocalId(),\n-                    LogEntryStart.checksum( startEntryForFoundTransaction ),\n-                    commitTimestamp\n-            );\n+            transactionMetadataCache.cacheTransactionMetadata( startTransactionId,\n+                    startEntryForFoundTransaction.getStartPosition(), startEntryForFoundTransaction.getMasterId(), startEntryForFoundTransaction.getLocalId(), LogEntryStart.checksum( startEntryForFoundTransaction ), commitTimestamp );\n             return startEntryForFoundTransaction.getStartPosition();\n         }\n     }\n@@ -238,9 +216,8 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n         @Override\n         public boolean visit( LogPosition position, long firstTransactionIdInLog, long lastTransactionIdInLog )\n         {\n-            boolean foundIt = transactionId >= firstTransactionIdInLog &&\n-                              transactionId <= lastTransactionIdInLog;\n-            if ( foundIt )\n+            boolean foundIt = transactionId >= firstTransactionIdInLog && transactionId <= lastTransactionIdInLog;\n+if ( foundIt )\n             {\n                 foundPosition = position;\n             }\n@@ -251,10 +228,10 @@ public class PhysicalLogicalTransactionStore implements LogicalTransactionStore\n         {\n             if ( foundPosition == null )\n             {\n-                throw new NoSuchTransactionException( transactionId,\n-                        \"Couldn't find any log containing \" + transactionId );\n+                throw new NoSuchTransactionException( transactionId, \"Couldn't find any log containing \" + transactionId );\n             }\n-            return foundPosition;\n+\n+return foundPosition;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3022",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3022/HttpHeaderUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3022/HttpHeaderUtils.java\nindex a117682e0c0..97b316bc7c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3022/HttpHeaderUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3022/HttpHeaderUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.nio.charset.StandardCharsets;\n@@ -32,88 +33,88 @@ import org.neo4j.logging.Log;\n public class HttpHeaderUtils\n {\n \n-    public static final String MAX_EXECUTION_TIME_HEADER = \"max-execution-time\";\n+  public static final String MAX_EXECUTION_TIME_HEADER = \"max-execution-time\";\n+\n+  public static final Map<String, String> CHARSET =\n+      Collections.singletonMap(\"charset\", StandardCharsets.UTF_8.name());\n+\n+  private HttpHeaderUtils()\n+  {\n+  }\n \n-    public static final Map<String,String> CHARSET =\n-            Collections.singletonMap( \"charset\", StandardCharsets.UTF_8.name() );\n+  public static MediaType mediaTypeWithCharsetUtf8(String mediaType)\n+  {\n+    return new MediaType(mediaType, null, CHARSET);\n+  }\n \n-    private HttpHeaderUtils()\n+  public static MediaType mediaTypeWithCharsetUtf8(MediaType mediaType)\n+  {\n+    Map<String, String> parameters = mediaType.getParameters();\n+    if (parameters.isEmpty())\n     {\n+      return new MediaType(mediaType.getType(), mediaType.getSubtype(), CHARSET);\n     }\n-\n-    public static MediaType mediaTypeWithCharsetUtf8( String mediaType )\n+    if (parameters.containsKey(\"charset\"))\n     {\n-        return new MediaType( mediaType, null, CHARSET );\n+      return mediaType;\n     }\n+    Map<String, String> paramsWithCharset = new HashMap<>(parameters);\n+    paramsWithCharset.putAll(CHARSET);\n+    return new MediaType(mediaType.getType(), mediaType.getSubtype(), paramsWithCharset);\n+  }\n \n-    public static MediaType mediaTypeWithCharsetUtf8( MediaType mediaType )\n+  /**\n+   * Retrieve custom transaction timeout in milliseconds from numeric {@link #MAX_EXECUTION_TIME_HEADER} request\n+   * header.\n+   * If header is not set returns -1.\n+   *\n+   * @param request  http request\n+   * @param errorLog errors log for header parsing errors\n+   * @return custom timeout if header set, -1 otherwise or when value is not a valid number.\n+   */\n+  public static long getTransactionTimeout(HttpServletRequest request, Log errorLog)\n+  {\n+    String headerValue = request.getHeader(MAX_EXECUTION_TIME_HEADER);\n+    if (headerValue != null)\n     {\n-        Map<String,String> parameters = mediaType.getParameters();\n-        if ( parameters.isEmpty() )\n-        {\n-            return new MediaType( mediaType.getType(), mediaType.getSubtype(), CHARSET );\n-        }\n-        if ( parameters.containsKey( \"charset\" ) )\n-        {\n-            return mediaType;\n-        }\n-        Map<String,String> paramsWithCharset = new HashMap<>( parameters );\n-        paramsWithCharset.putAll( CHARSET );\n-        return new MediaType( mediaType.getType(), mediaType.getSubtype(), paramsWithCharset );\n+      try\n+      {\n+        return Long.parseLong(headerValue);\n+      } catch (NumberFormatException e)\n+      {\n+        errorLog.error(String.format(\"Fail to parse `%s` header with value: '%s'. Should be a positive number.\",\n+            MAX_EXECUTION_TIME_HEADER, headerValue), e);\n+      }\n     }\n+    return GraphDatabaseSettings.UNSPECIFIED_TIMEOUT;\n+  }\n \n-    /**\n-     * Retrieve custom transaction timeout in milliseconds from numeric {@link #MAX_EXECUTION_TIME_HEADER} request\n-     * header.\n-     * If header is not set returns -1.\n-     * @param request http request\n-     * @param errorLog errors log for header parsing errors\n-     * @return custom timeout if header set, -1 otherwise or when value is not a valid number.\n-     */\n-    public static long getTransactionTimeout( HttpServletRequest request, Log errorLog )\n+  /**\n+   * Validates given HTTP header name. Does not allow blank names and names with control characters, like '\\n' (LF) and '\\r' (CR).\n+   * Can be used to detect and neutralize CRLF in HTTP headers.\n+   *\n+   * @param name the HTTP header name, like 'Accept' or 'Content-Type'.\n+   * @return {@code true} when given name represents a valid HTTP header, {@code false} otherwise.\n+   */\n+  public static boolean isValidHttpHeaderName(String name)\n+  {\n+    if (name == null || name.length() == 0)\n     {\n-        String headerValue = request.getHeader( MAX_EXECUTION_TIME_HEADER );\n-        if ( headerValue != null )\n-        {\n-            try\n-            {\n-                return Long.parseLong( headerValue );\n-            }\n-            catch ( NumberFormatException e )\n-            {\n-                errorLog.error( String.format( \"Fail to parse `%s` header with value: '%s'. Should be a positive number.\",\n-                        MAX_EXECUTION_TIME_HEADER, headerValue), e );\n-            }\n-        }\n-        return GraphDatabaseSettings.UNSPECIFIED_TIMEOUT;\n+      return false;\n     }\n-\n-    /**\n-     * Validates given HTTP header name. Does not allow blank names and names with control characters, like '\\n' (LF) and '\\r' (CR).\n-     * Can be used to detect and neutralize CRLF in HTTP headers.\n-     *\n-     * @param name the HTTP header name, like 'Accept' or 'Content-Type'.\n-     * @return {@code true} when given name represents a valid HTTP header, {@code false} otherwise.\n-     */\n-    public static boolean isValidHttpHeaderName( String name )\n+    boolean isBlank = true;\n+    for (int i = 0; i < name.length(); i++)\n     {\n-        if ( name == null || name.length() == 0 )\n-        {\n-            return false;\n-        }\n-        boolean isBlank = true;\n-        for ( int i = 0; i < name.length(); i++ )\n-        {\n-            char c = name.charAt( i );\n-            if ( Character.isISOControl( c ) )\n-            {\n-                return false;\n-            }\n-            if ( !Character.isWhitespace( c ) )\n-            {\n-                isBlank = false;\n-            }\n-        }\n-        return !isBlank;\n+      char c = name.charAt(i);\n+      if (Character.isISOControl(c))\n+      {\n+        return false;\n+      }\n+      if (!Character.isWhitespace(c))\n+      {\n+        isBlank = false;\n+      }\n     }\n+    return !isBlank;\n+  }\n }\n",
            "diff_size": 105
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3022/HttpHeaderUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3022/HttpHeaderUtils.java\nindex a117682e0c0..dbd48149858 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3022/HttpHeaderUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3022/HttpHeaderUtils.java\n@@ -31,13 +31,11 @@ import org.neo4j.logging.Log;\n \n public class HttpHeaderUtils\n {\n-\n     public static final String MAX_EXECUTION_TIME_HEADER = \"max-execution-time\";\n \n-    public static final Map<String,String> CHARSET =\n-            Collections.singletonMap( \"charset\", StandardCharsets.UTF_8.name() );\n+    public static final Map<String,String> CHARSET = Collections.singletonMap( \"charset\", StandardCharsets.UTF_8.name() );\n \n-    private HttpHeaderUtils()\n+private HttpHeaderUtils()\n     {\n     }\n \n@@ -53,7 +51,8 @@ public class HttpHeaderUtils\n         {\n             return new MediaType( mediaType.getType(), mediaType.getSubtype(), CHARSET );\n         }\n-        if ( parameters.containsKey( \"charset\" ) )\n+\n+if ( parameters.containsKey( \"charset\" ) )\n         {\n             return mediaType;\n         }\n@@ -83,7 +82,7 @@ public class HttpHeaderUtils\n             {\n                 errorLog.error( String.format( \"Fail to parse `%s` header with value: '%s'. Should be a positive number.\",\n                         MAX_EXECUTION_TIME_HEADER, headerValue), e );\n-            }\n+    }\n         }\n         return GraphDatabaseSettings.UNSPECIFIED_TIMEOUT;\n     }\n@@ -109,11 +108,12 @@ public class HttpHeaderUtils\n             {\n                 return false;\n             }\n-            if ( !Character.isWhitespace( c ) )\n+\n+if ( !Character.isWhitespace( c ) )\n             {\n                 isBlank = false;\n             }\n         }\n         return !isBlank;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
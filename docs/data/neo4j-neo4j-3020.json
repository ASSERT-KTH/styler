{
    "project_name": "neo4j-neo4j",
    "error_id": "3020",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3020/Neo4jTransactionalContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3020/Neo4jTransactionalContext.java\nindex e4c44eb2312..445746096ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3020/Neo4jTransactionalContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3020/Neo4jTransactionalContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import org.neo4j.graphdb.TransactionTerminatedException;\n@@ -57,8 +58,8 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     private long pageHits;\n     private long pageMisses;\n \n-    public Neo4jTransactionalContext( GraphDatabaseQueryService graph, InternalTransaction transaction,\n-            KernelStatement initialStatement, ExecutingQuery executingQuery, KernelTransactionFactory transactionFactory )\n+    public Neo4jTransactionalContext(GraphDatabaseQueryService graph, InternalTransaction transaction,\n+                                     KernelStatement initialStatement, ExecutingQuery executingQuery, KernelTransactionFactory transactionFactory)\n     {\n         this.graph = graph;\n         this.transactionType = transaction.transactionType();\n@@ -70,7 +71,7 @@ public class Neo4jTransactionalContext implements TransactionalContext\n         this.namedDatabaseId = initialStatement.namedDatabaseId();\n         this.kernelTransaction = transaction.kernelTransaction();\n         this.statement = initialStatement;\n-        this.valueMapper = new DefaultValueMapper( transaction );\n+        this.valueMapper = new DefaultValueMapper(transaction);\n         this.transactionFactory = transactionFactory;\n     }\n \n@@ -107,14 +108,13 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     @Override\n     public void close()\n     {\n-        if ( isOpen )\n+        if (isOpen)\n         {\n             try\n             {\n-                statement.queryRegistration().unregisterExecutingQuery( executingQuery );\n+                statement.queryRegistration().unregisterExecutingQuery(executingQuery);\n                 statement.close();\n-            }\n-            finally\n+            } finally\n             {\n                 statement = null;\n                 isOpen = false;\n@@ -128,8 +128,7 @@ public class Neo4jTransactionalContext implements TransactionalContext\n         try\n         {\n             close();\n-        }\n-        finally\n+        } finally\n         {\n             transaction.rollback();\n         }\n@@ -138,7 +137,7 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     @Override\n     public void terminate()\n     {\n-        if ( isOpen )\n+        if (isOpen)\n         {\n             transaction.terminate();\n         }\n@@ -147,16 +146,16 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     @Override\n     public long commitAndRestartTx()\n     {\n-       /*\n-        * This method is use by the Cypher runtime to cater for PERIODIC COMMIT, which allows a single query to\n-        * periodically, after x number of rows, to commit a transaction and spawn a new one.\n-        *\n-        * To still keep track of the running stream after switching transactions, we need to open the new transaction\n-        * before closing the old one. This way, a query will not disappear and appear when switching transactions.\n-        *\n-        * Since our transactions are thread bound, we must first unbind the old transaction from the thread before\n-        * creating a new one. And then we need to do that thread switching again to close the old transaction.\n-        */\n+        /*\n+         * This method is use by the Cypher runtime to cater for PERIODIC COMMIT, which allows a single query to\n+         * periodically, after x number of rows, to commit a transaction and spawn a new one.\n+         *\n+         * To still keep track of the running stream after switching transactions, we need to open the new transaction\n+         * before closing the old one. This way, a query will not disappear and appear when switching transactions.\n+         *\n+         * Since our transactions are thread bound, we must first unbind the old transaction from the thread before\n+         * creating a new one. And then we need to do that thread switching again to close the old transaction.\n+         */\n \n         checkNotTerminated();\n \n@@ -168,24 +167,23 @@ public class Neo4jTransactionalContext implements TransactionalContext\n         KernelTransaction oldKernelTx = transaction.kernelTransaction();\n \n         // (2) Create and register new transaction\n-        kernelTransaction = transactionFactory.beginKernelTransaction( transactionType, securityContext, clientInfo );\n+        kernelTransaction = transactionFactory.beginKernelTransaction(transactionType, securityContext, clientInfo);\n         statement = (KernelStatement) kernelTransaction.acquireStatement();\n-        statement.queryRegistration().registerExecutingQuery( executingQuery );\n-        transaction.setTransaction( kernelTransaction );\n+        statement.queryRegistration().registerExecutingQuery(executingQuery);\n+        transaction.setTransaction(kernelTransaction);\n \n         // (3) Commit and close old transaction (and unregister as a side effect of that)\n-        oldQueryRegistry.unregisterExecutingQuery( executingQuery );\n+        oldQueryRegistry.unregisterExecutingQuery(executingQuery);\n         try\n         {\n             oldStatement.close();\n             return oldKernelTx.commit();\n-        }\n-        catch ( Throwable t )\n+        } catch (Throwable t)\n         {\n             // Corner case: The old transaction might have been terminated by the user. Now we also need to\n             // terminate the new transaction.\n             transaction.rollback();\n-            throw new RuntimeException( t );\n+            throw new RuntimeException(t);\n         }\n     }\n \n@@ -194,10 +192,10 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     {\n         checkNotTerminated();\n \n-        if ( !isOpen )\n+        if (!isOpen)\n         {\n             statement = (KernelStatement) kernelTransaction.acquireStatement();\n-            statement.queryRegistration().registerExecutingQuery( executingQuery );\n+            statement.queryRegistration().registerExecutingQuery(executingQuery);\n             isOpen = true;\n         }\n         return this;\n@@ -205,10 +203,10 @@ public class Neo4jTransactionalContext implements TransactionalContext\n \n     private void checkNotTerminated()\n     {\n-        transaction.terminationReason().ifPresent( status ->\n+        transaction.terminationReason().ifPresent(status ->\n         {\n-            throw new TransactionTerminatedException( status );\n-        } );\n+            throw new TransactionTerminatedException(status);\n+        });\n     }\n \n     @Override\n@@ -236,9 +234,9 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     }\n \n     @Override\n-    public KernelTransaction.Revertable restrictCurrentTransaction( SecurityContext context )\n+    public KernelTransaction.Revertable restrictCurrentTransaction(SecurityContext context)\n     {\n-        return transaction.overrideWith( context );\n+        return transaction.overrideWith(context);\n     }\n \n     @Override\n@@ -258,7 +256,7 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     @Override\n     public StatisticProvider kernelStatisticProvider()\n     {\n-        return new TransactionalContextStatisticProvider( kernelTransaction().executionStatistics() );\n+        return new TransactionalContextStatisticProvider(kernelTransaction().executionStatistics());\n     }\n \n     private void collectTransactionExecutionStatistic()\n@@ -272,9 +270,9 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     interface Creator\n     {\n         Neo4jTransactionalContext create(\n-                InternalTransaction tx,\n-                KernelStatement initialStatement,\n-                ExecutingQuery executingQuery\n+          InternalTransaction tx,\n+          KernelStatement initialStatement,\n+          ExecutingQuery executingQuery\n         );\n     }\n \n@@ -282,7 +280,7 @@ public class Neo4jTransactionalContext implements TransactionalContext\n     {\n         private final ExecutionStatistics executionStatistics;\n \n-        private TransactionalContextStatisticProvider( ExecutionStatistics executionStatistics )\n+        private TransactionalContextStatisticProvider(ExecutionStatistics executionStatistics)\n         {\n             this.executionStatistics = executionStatistics;\n         }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3020/Neo4jTransactionalContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3020/Neo4jTransactionalContext.java\nindex e4c44eb2312..b7d6064d4d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3020/Neo4jTransactionalContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3020/Neo4jTransactionalContext.java\n@@ -299,4 +299,4 @@ public class Neo4jTransactionalContext implements TransactionalContext\n             return executionStatistics.pageFaults() + pageMisses;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
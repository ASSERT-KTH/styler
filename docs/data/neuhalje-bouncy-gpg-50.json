{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n\nimport java.util.Collection;\nimport name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.Feature;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..e10a0afd2ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/50/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..1af7b5e7011 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/50/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n@@ -48,7 +49,7 @@ public interface KeySpecBuilderInterface {\n    * decision is left wholly up to the implementation; the authors of this\n    * document do not claim any special wisdom on the issue and realize\n    * that accepted opinion may change.\n-   *\n+   * <p>\n    * The \"split key\" (0x10) and \"group key\" (0x80) flags are placed on a\n    * self-signature only; they are meaningless on a certification\n    * signature.  They SHOULD be placed only on a direct-key signature\n@@ -57,7 +58,6 @@ public interface KeySpecBuilderInterface {\n    * </blockquote>\n    *\n    * @param flags Flags to be enabled for this sub- or master-key\n-   *\n    * @return next step\n    */\n   WithDetailedConfiguration allowKeyToBeUsedTo(KeyFlag... flags);\n@@ -84,7 +84,7 @@ public interface KeySpecBuilderInterface {\n    * decision is left wholly up to the implementation; the authors of this\n    * document do not claim any special wisdom on the issue and realize\n    * that accepted opinion may change.\n-   *\n+   * <p>\n    * The \"split key\" (0x10) and \"group key\" (0x80) flags are placed on a\n    * self-signature only; they are meaningless on a certification\n    * signature.  They SHOULD be placed only on a direct-key signature\n@@ -98,6 +98,7 @@ public interface KeySpecBuilderInterface {\n \n   /**\n    * Copy all key flags, algorithms, ... from the parent key.\n+   *\n    * @return key spec.\n    */\n   KeySpec withInheritedSubPackets();\n@@ -115,7 +116,6 @@ public interface KeySpecBuilderInterface {\n      * </ul>\n      *\n      * @return keyspec\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithmIds()\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithmIds()\n      * @see PGPHashAlgorithms#recommendedAlgorithmIds()\n@@ -160,7 +160,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms set of preferred algorithms\n-     *\n      * @return next builder step\n      */\n     WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n@@ -183,7 +182,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms set of preferred algorithms\n-     *\n      * @return next builder step\n      */\n     WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n@@ -208,7 +206,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms();\n@@ -238,7 +235,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n@@ -265,9 +261,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n@@ -290,9 +284,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n@@ -315,7 +307,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n@@ -343,9 +334,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withPreferredCompressionAlgorithms(PGPCompressionAlgorithms... algorithms);\n@@ -369,9 +358,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withPreferredCompressionAlgorithms(\n@@ -396,7 +383,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withDefaultCompressionAlgorithms();\n@@ -409,7 +395,6 @@ public interface KeySpecBuilderInterface {\n      * Add features to the key.\n      *\n      * @param feature the feature\n-     *\n      * @return next step\n      */\n     WithFeatures withFeature(Feature feature);\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..ceaa9393d18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/50/KeySpecBuilderInterface.java\n@@ -417,4 +417,4 @@ public interface KeySpecBuilderInterface {\n     KeySpec done();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'INTERFACE_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "312",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "394",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..8bda57f64d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/50/KeySpecBuilderInterface.java\n@@ -22,6 +22,7 @@ import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPHashAlg\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPSymmetricEncryptionAlgorithms;\n import org.bouncycastle.bcpg.sig.Features;\n \n+\n public interface KeySpecBuilderInterface {\n \n   /**\n@@ -60,6 +61,7 @@ public interface KeySpecBuilderInterface {\n    *\n    * @return next step\n    */\n+\n   WithDetailedConfiguration allowKeyToBeUsedTo(KeyFlag... flags);\n \n   /**\n@@ -94,14 +96,17 @@ public interface KeySpecBuilderInterface {\n    *\n    * @return next step\n    */\n+\n+\n   WithDetailedConfiguration allowKeyToBeUsedForEverything();\n \n   /**\n    * Copy all key flags, algorithms, ... from the parent key.\n    * @return key spec.\n    */\n-  KeySpec withInheritedSubPackets();\n \n+\n+  KeySpec withInheritedSubPackets();\n   interface WithDetailedConfiguration {\n \n     WithPreferredSymmetricAlgorithms withDetailedConfiguration();\n@@ -121,6 +126,8 @@ public interface KeySpecBuilderInterface {\n      * @see PGPHashAlgorithms#recommendedAlgorithmIds()\n      * @see Features#FEATURE_MODIFICATION_DETECTION\n      */\n+\n+\n     KeySpec withDefaultAlgorithms();\n   }\n \n@@ -141,6 +148,7 @@ public interface KeySpecBuilderInterface {\n    * signature.\n    * </blockquote>\n    */\n+\n   interface WithPreferredSymmetricAlgorithms {\n \n     /**\n@@ -163,8 +171,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @return next builder step\n      */\n-    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n-        PGPSymmetricEncryptionAlgorithms... algorithms);\n+\n+    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(PGPSymmetricEncryptionAlgorithms... algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -186,8 +194,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @return next builder step\n      */\n-    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n-        Collection<PGPSymmetricEncryptionAlgorithms> algorithms);\n+\n+\n+    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(Collection<PGPSymmetricEncryptionAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -211,6 +220,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      */\n+\n+\n     WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms();\n \n     /**\n@@ -243,8 +254,9 @@ public interface KeySpecBuilderInterface {\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withDefaultAlgorithms();\n \n+\n+    WithFeatures withDefaultAlgorithms();\n   }\n \n   interface WithPreferredHashAlgorithms {\n@@ -270,8 +282,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n-        PGPHashAlgorithms... algorithms);\n+\n+    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(PGPHashAlgorithms... algorithms);\n \n \n     /**\n@@ -295,8 +307,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n-        Collection<PGPHashAlgorithms> algorithms);\n+\n+\n+    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(Collection<PGPHashAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -318,8 +331,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n \n+\n+    WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n   }\n \n   interface WithPreferredCompressionAlgorithms {\n@@ -348,6 +362,7 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n+\n     WithFeatures withPreferredCompressionAlgorithms(PGPCompressionAlgorithms... algorithms);\n \n     /**\n@@ -374,8 +389,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withPreferredCompressionAlgorithms(\n-        Collection<PGPCompressionAlgorithms> algorithms);\n+\n+\n+    WithFeatures withPreferredCompressionAlgorithms(Collection<PGPCompressionAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -399,8 +415,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withDefaultCompressionAlgorithms();\n \n+\n+    WithFeatures withDefaultCompressionAlgorithms();\n   }\n \n   interface WithFeatures {\n@@ -412,9 +429,10 @@ public interface KeySpecBuilderInterface {\n      *\n      * @return next step\n      */\n+\n     WithFeatures withFeature(Feature feature);\n \n+\n     KeySpec done();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..e10a0afd2ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/50/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/50/KeySpecBuilderInterface.java\nindex 03f955a9b01..3642c050550 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/50/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/50/KeySpecBuilderInterface.java\n@@ -13,7 +13,8 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n+\n+package name.neuhalfen.projects.crypto.bouncycastle.openpgp. keys. generation;\n \n import java.util.Collection;\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.Feature;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
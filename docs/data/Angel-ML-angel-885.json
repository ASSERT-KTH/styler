{
    "project_name": "Angel-ML-angel",
    "error_id": "885",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/885/ParameterServerServiceTest.java\nindex a5a88842f2d..4a5ac6d042a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/885/ParameterServerServiceTest.java\n@@ -143,10 +143,12 @@ public class ParameterServerServiceTest {\n   }\n \n   @Test\n-  public void testGetHostAddress() throws Exception {}\n+  public void testGetHostAddress() throws Exception {\n+  }\n \n   @Test\n-  public void testGetPort() throws Exception {}\n+  public void testGetPort() throws Exception {\n+  }\n \n \n   @Test\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/885/ParameterServerServiceTest.java\nindex a5a88842f2d..496e9de2051 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/885/ParameterServerServiceTest.java\n@@ -72,8 +72,7 @@ public class ParameterServerServiceTest {\n     PropertyConfigurator.configure(\"../conf/log4j.propertiess\");\n   }\n \n-\n-  @Before\n+@Before\n   public void setup() throws Exception {\n     // set basic configuration keys\n     conf = new Configuration();\n@@ -148,8 +147,7 @@ public class ParameterServerServiceTest {\n   @Test\n   public void testGetPort() throws Exception {}\n \n-\n-  @Test\n+@Test\n   public void testPsThreadStack() throws Exception {\n     LOG.info(psAttempt0Id.toString());\n     ParameterServer ps = LocalClusterContext.get().getPS(psAttempt0Id).getPS();\n@@ -158,6 +156,6 @@ public class ParameterServerServiceTest {\n         MasterPSServiceProtos.GetThreadStackRequest.newBuilder().build();\n     MasterPSServiceProtos.GetThreadStackResponse getThreadStackResponse =\n         parameterServerService.psThreadStack(null, request);\n-    assertNotNull(getThreadStackResponse.getStack());\n+assertNotNull(getThreadStackResponse.getStack());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/885/ParameterServerServiceTest.java\nindex a5a88842f2d..c95f6f4973f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/885/ParameterServerServiceTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/885/ParameterServerServiceTest.java\n@@ -31,7 +31,6 @@ import com.tencent.angel.protobuf.generated.MLProtos;\n import com.tencent.angel.protobuf.generated.MasterPSServiceProtos;\n import com.tencent.angel.ps.PSAttemptId;\n import com.tencent.angel.ps.ParameterServerId;\n-\n import com.tencent.angel.worker.Worker;\n import com.tencent.angel.worker.WorkerAttemptId;\n import com.tencent.angel.worker.WorkerGroupId;\n@@ -46,11 +45,10 @@ import org.apache.log4j.PropertyConfigurator;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n-\n import static org.junit.Assert.assertNotNull;\n \n-\n public class ParameterServerServiceTest {\n+\n   private static final Log LOG = LogFactory.getLog(MasterServiceTest.class);\n   private static final String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n   private static final String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n@@ -72,7 +70,6 @@ public class ParameterServerServiceTest {\n     PropertyConfigurator.configure(\"../conf/log4j.propertiess\");\n   }\n \n-\n   @Before\n   public void setup() throws Exception {\n     // set basic configuration keys\n@@ -88,7 +85,6 @@ public class ParameterServerServiceTest {\n     conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n     conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, LOCAL_FS + TMP_PATH + \"/in\");\n     conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/log\");\n-\n     conf.setInt(AngelConfiguration.ANGEL_WORKERGROUP_NUMBER, 1);\n     conf.setInt(AngelConfiguration.ANGEL_PS_NUMBER, 1);\n     conf.setInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, 2);\n@@ -109,7 +105,6 @@ public class ParameterServerServiceTest {\n     mMatrix.set(MatrixConfiguration.MATRIX_AVERAGE, \"false\");\n     mMatrix.set(MatrixConfiguration.MATRIX_OPLOG_TYPE, \"DENSE_INT\");\n     angelClient.addMatrix(mMatrix);\n-\n     mMatrix.setName(\"w2\");\n     mMatrix.setRowNum(1);\n     mMatrix.setColNum(100000);\n@@ -121,7 +116,6 @@ public class ParameterServerServiceTest {\n     mMatrix.set(MatrixConfiguration.MATRIX_AVERAGE, \"false\");\n     mMatrix.set(MatrixConfiguration.MATRIX_OPLOG_TYPE, \"DENSE_DOUBLE\");\n     angelClient.addMatrix(mMatrix);\n-\n     angelClient.startPSServer();\n     angelClient.run();\n     Thread.sleep(5000);\n@@ -133,7 +127,6 @@ public class ParameterServerServiceTest {\n     // task1Id = new TaskId(1);\n     psId = new ParameterServerId(0);\n     psAttempt0Id = new PSAttemptId(psId, 0);\n-\n   }\n \n   @After\n@@ -148,16 +141,14 @@ public class ParameterServerServiceTest {\n   @Test\n   public void testGetPort() throws Exception {}\n \n-\n   @Test\n   public void testPsThreadStack() throws Exception {\n     LOG.info(psAttempt0Id.toString());\n     ParameterServer ps = LocalClusterContext.get().getPS(psAttempt0Id).getPS();\n     ParameterServerService parameterServerService = ps.getPsService();\n-    MasterPSServiceProtos.GetThreadStackRequest request =\n-        MasterPSServiceProtos.GetThreadStackRequest.newBuilder().build();\n-    MasterPSServiceProtos.GetThreadStackResponse getThreadStackResponse =\n-        parameterServerService.psThreadStack(null, request);\n+    MasterPSServiceProtos.GetThreadStackRequest request = MasterPSServiceProtos.GetThreadStackRequest.newBuilder().build();\n+    MasterPSServiceProtos.GetThreadStackResponse getThreadStackResponse = parameterServerService.psThreadStack(null, request);\n     assertNotNull(getThreadStackResponse.getStack());\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
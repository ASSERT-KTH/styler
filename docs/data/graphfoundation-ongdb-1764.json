{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1764",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1764/AbstractIntHopScotchCollection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1764/AbstractIntHopScotchCollection.java\nindex 5e48e7aae59..d8471457464 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1764/AbstractIntHopScotchCollection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1764/AbstractIntHopScotchCollection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveIntCollection;\n@@ -25,39 +26,39 @@ import org.neo4j.collection.primitive.PrimitiveIntIterator;\n import org.neo4j.collection.primitive.PrimitiveIntVisitor;\n \n public abstract class AbstractIntHopScotchCollection<VALUE> extends AbstractHopScotchCollection<VALUE>\n-        implements PrimitiveIntCollection\n+    implements PrimitiveIntCollection\n {\n-    public AbstractIntHopScotchCollection( Table<VALUE> table )\n-    {\n-        super( table );\n-    }\n+  public AbstractIntHopScotchCollection(Table<VALUE> table)\n+  {\n+    super(table);\n+  }\n \n-    @Override\n-    public PrimitiveIntIterator iterator()\n+  @Override\n+  public PrimitiveIntIterator iterator()\n+  {\n+    final TableKeyIterator<VALUE> longIterator = new TableKeyIterator<>(table, this);\n+    return new PrimitiveIntBaseIterator()\n     {\n-        final TableKeyIterator<VALUE> longIterator = new TableKeyIterator<>( table, this );\n-        return new PrimitiveIntBaseIterator()\n-        {\n-            @Override\n-            protected boolean fetchNext()\n-            {\n-                return longIterator.hasNext() && next( (int) longIterator.next() );\n-            }\n-        };\n-    }\n+      @Override\n+      protected boolean fetchNext()\n+      {\n+        return longIterator.hasNext() && next((int) longIterator.next());\n+      }\n+    };\n+  }\n \n-    @Override\n-    public <E extends Exception> void visitKeys( PrimitiveIntVisitor<E> visitor ) throws E\n+  @Override\n+  public <E extends Exception> void visitKeys(PrimitiveIntVisitor<E> visitor) throws E\n+  {\n+    int capacity = table.capacity();\n+    long nullKey = table.nullKey();\n+    for (int i = 0; i < capacity; i++)\n     {\n-        int capacity = table.capacity();\n-        long nullKey = table.nullKey();\n-        for ( int i = 0; i < capacity; i++ )\n-        {\n-            long key = table.key( i );\n-            if ( key != nullKey && visitor.visited( (int) key ) )\n-            {\n-                return;\n-            }\n-        }\n+      long key = table.key(i);\n+      if (key != nullKey && visitor.visited((int) key))\n+      {\n+        return;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1764/AbstractIntHopScotchCollection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1764/AbstractIntHopScotchCollection.java\nindex 5e48e7aae59..24e20809642 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1764/AbstractIntHopScotchCollection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1764/AbstractIntHopScotchCollection.java\n@@ -24,8 +24,7 @@ import org.neo4j.collection.primitive.PrimitiveIntCollections.PrimitiveIntBaseIt\n import org.neo4j.collection.primitive.PrimitiveIntIterator;\n import org.neo4j.collection.primitive.PrimitiveIntVisitor;\n \n-public abstract class AbstractIntHopScotchCollection<VALUE> extends AbstractHopScotchCollection<VALUE>\n-        implements PrimitiveIntCollection\n+public abstract class AbstractIntHopScotchCollection<VALUE> extends AbstractHopScotchCollection<VALUE> implements PrimitiveIntCollection\n {\n     public AbstractIntHopScotchCollection( Table<VALUE> table )\n     {\n@@ -41,7 +40,7 @@ public abstract class AbstractIntHopScotchCollection<VALUE> extends AbstractHopS\n             @Override\n             protected boolean fetchNext()\n             {\n-                return longIterator.hasNext() && next( (int) longIterator.next() );\n+                return longIterator.hasNext() && next( ( int) longIterator.next() );\n             }\n         };\n     }\n@@ -54,10 +53,10 @@ public abstract class AbstractIntHopScotchCollection<VALUE> extends AbstractHopS\n         for ( int i = 0; i < capacity; i++ )\n         {\n             long key = table.key( i );\n-            if ( key != nullKey && visitor.visited( (int) key ) )\n+            if ( key != nullKey && visitor.visited( ( int) key ) )\n             {\n                 return;\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1711",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1711/NonUniqueLuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1711/NonUniqueLuceneIndexPopulatingUpdater.java\nindex 006e77d6689..b0c6ccbbe9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1711/NonUniqueLuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1711/NonUniqueLuceneIndexPopulatingUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.populator;\n \n import org.neo4j.kernel.api.impl.schema.LuceneDocumentStructure;\n@@ -29,40 +30,40 @@ import org.neo4j.kernel.impl.api.index.sampling.NonUniqueIndexSampler;\n  */\n public class NonUniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulatingUpdater\n {\n-    private final NonUniqueIndexSampler sampler;\n+  private final NonUniqueIndexSampler sampler;\n \n-    public NonUniqueLuceneIndexPopulatingUpdater( LuceneIndexWriter writer, NonUniqueIndexSampler sampler )\n-    {\n-        super( writer );\n-        this.sampler = sampler;\n-    }\n+  public NonUniqueLuceneIndexPopulatingUpdater(LuceneIndexWriter writer, NonUniqueIndexSampler sampler)\n+  {\n+    super(writer);\n+    this.sampler = sampler;\n+  }\n \n-    @Override\n-    protected void added( IndexEntryUpdate<?> update )\n-    {\n-        String encodedValue = LuceneDocumentStructure.encodedStringValuesForSampling( update.values() );\n-        sampler.include( encodedValue );\n-    }\n+  @Override\n+  protected void added(IndexEntryUpdate<?> update)\n+  {\n+    String encodedValue = LuceneDocumentStructure.encodedStringValuesForSampling(update.values());\n+    sampler.include(encodedValue);\n+  }\n \n-    @Override\n-    protected void changed( IndexEntryUpdate<?> update )\n-    {\n-        String encodedValueBefore = LuceneDocumentStructure.encodedStringValuesForSampling( update.beforeValues() );\n-        sampler.exclude( encodedValueBefore );\n+  @Override\n+  protected void changed(IndexEntryUpdate<?> update)\n+  {\n+    String encodedValueBefore = LuceneDocumentStructure.encodedStringValuesForSampling(update.beforeValues());\n+    sampler.exclude(encodedValueBefore);\n \n-        String encodedValueAfter = LuceneDocumentStructure.encodedStringValuesForSampling( update.values() );\n-        sampler.include( encodedValueAfter );\n-    }\n+    String encodedValueAfter = LuceneDocumentStructure.encodedStringValuesForSampling(update.values());\n+    sampler.include(encodedValueAfter);\n+  }\n \n-    @Override\n-    protected void removed( IndexEntryUpdate<?> update )\n-    {\n-        String removedValue = LuceneDocumentStructure.encodedStringValuesForSampling( update.values() );\n-        sampler.exclude( removedValue );\n-    }\n+  @Override\n+  protected void removed(IndexEntryUpdate<?> update)\n+  {\n+    String removedValue = LuceneDocumentStructure.encodedStringValuesForSampling(update.values());\n+    sampler.exclude(removedValue);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-    }\n+  @Override\n+  public void close()\n+  {\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1711/NonUniqueLuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1711/NonUniqueLuceneIndexPopulatingUpdater.java\nindex 006e77d6689..560e1a39185 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1711/NonUniqueLuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1711/NonUniqueLuceneIndexPopulatingUpdater.java\n@@ -49,8 +49,7 @@ public class NonUniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulating\n     {\n         String encodedValueBefore = LuceneDocumentStructure.encodedStringValuesForSampling( update.beforeValues() );\n         sampler.exclude( encodedValueBefore );\n-\n-        String encodedValueAfter = LuceneDocumentStructure.encodedStringValuesForSampling( update.values() );\n+String encodedValueAfter = LuceneDocumentStructure.encodedStringValuesForSampling( update.values() );\n         sampler.include( encodedValueAfter );\n     }\n \n@@ -65,4 +64,4 @@ public class NonUniqueLuceneIndexPopulatingUpdater extends LuceneIndexPopulating\n     public void close()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
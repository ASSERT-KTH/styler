{
    "project_name": "neo4j-neo4j",
    "error_id": "318",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/318/SetDefaultAdminCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/318/SetDefaultAdminCommand.java\nindex 54e2e5d0c04..09fd54b872a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/318/SetDefaultAdminCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/318/SetDefaultAdminCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin.security;\n \n import java.nio.file.Path;\n@@ -38,9 +39,9 @@ import static picocli.CommandLine.Command;\n import static picocli.CommandLine.Parameters;\n \n @Command(\n-        name = \"set-default-admin\",\n-        description = \"Sets the default admin user.%n\" +\n-                      \"This user will be granted the admin role on startup if the system has no roles.\"\n+  name = \"set-default-admin\",\n+  description = \"Sets the default admin user.%n\" +\n+    \"This user will be granted the admin role on startup if the system has no roles.\"\n )\n public class SetDefaultAdminCommand extends AbstractCommand\n {\n@@ -49,9 +50,9 @@ public class SetDefaultAdminCommand extends AbstractCommand\n     @Parameters\n     private String username;\n \n-    public SetDefaultAdminCommand( ExecutionContext ctx )\n+    public SetDefaultAdminCommand(ExecutionContext ctx)\n     {\n-        super( ctx );\n+        super(ctx);\n     }\n \n     @Override\n@@ -60,33 +61,32 @@ public class SetDefaultAdminCommand extends AbstractCommand\n         Config config = loadNeo4jConfig();\n         try\n         {\n-            Path adminIniFile = CommunitySecurityModule.getUserRepositoryFile( config ).getParent().resolve( ADMIN_INI );\n-            if ( ctx.fs().fileExists( adminIniFile ) )\n+            Path adminIniFile = CommunitySecurityModule.getUserRepositoryFile(config).getParent().resolve(ADMIN_INI);\n+            if (ctx.fs().fileExists(adminIniFile))\n             {\n-                ctx.fs().deleteFile( adminIniFile );\n+                ctx.fs().deleteFile(adminIniFile);\n             }\n-            UserRepository admins = new FileUserRepository( ctx.fs(), adminIniFile, NullLogProvider.getInstance() );\n+            UserRepository admins = new FileUserRepository(ctx.fs(), adminIniFile, NullLogProvider.getInstance());\n             admins.init();\n             admins.start();\n-            admins.create( new User.Builder( username, LegacyCredential.INACCESSIBLE ).build() );\n+            admins.create(new User.Builder(username, LegacyCredential.INACCESSIBLE).build());\n             admins.stop();\n             admins.shutdown();\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new RuntimeException( e );\n+            throw new RuntimeException(e);\n         }\n \n-        ctx.out().println( \"default admin user set to '\" + username + \"'\" );\n+        ctx.out().println(\"default admin user set to '\" + username + \"'\");\n     }\n \n     @VisibleForTesting\n     Config loadNeo4jConfig()\n     {\n         Config cfg = Config.newBuilder()\n-                .fromFileNoThrow( ctx.confDir().resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .set( GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath() ).build();\n-        ConfigUtils.disableAllConnectors( cfg );\n+          .fromFileNoThrow(ctx.confDir().resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+          .set(GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath()).build();\n+        ConfigUtils.disableAllConnectors(cfg);\n         return cfg;\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
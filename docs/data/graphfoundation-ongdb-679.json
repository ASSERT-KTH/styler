{
    "project_name": "graphfoundation-ongdb",
    "error_id": "679",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/679/Connector.java\nindex 11a5dcf573b..fe1fb1737d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/679/Connector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import org.neo4j.configuration.Description;\n@@ -27,47 +28,47 @@ import static org.neo4j.kernel.configuration.Settings.NO_DEFAULT;\n import static org.neo4j.kernel.configuration.Settings.options;\n import static org.neo4j.kernel.configuration.Settings.setting;\n \n-@Group( \"dbms.connector\" )\n+@Group(\"dbms.connector\")\n public class Connector\n {\n-    @Description( \"Enable this connector\" )\n-    public final Setting<Boolean> enabled;\n+  @Description(\"Enable this connector\")\n+  public final Setting<Boolean> enabled;\n \n-    @Description( \"Connector type. You should always set this to the connector type you want\" )\n-    public final Setting<ConnectorType> type;\n+  @Description(\"Connector type. You should always set this to the connector type you want\")\n+  public final Setting<ConnectorType> type;\n \n-    // Note: Be careful about adding things here that does not apply to all connectors,\n-    //       consider future options like non-tcp transports, making `address` a bad choice\n-    //       as a setting that applies to every connector, for instance.\n+  // Note: Be careful about adding things here that does not apply to all connectors,\n+  //       consider future options like non-tcp transports, making `address` a bad choice\n+  //       as a setting that applies to every connector, for instance.\n \n-    public final GroupSettingSupport group;\n+  public final GroupSettingSupport group;\n \n-    /**\n-     * Deprecated, please use other constructor. This constructor will be removed in 4.0.\n-     *\n-     * @param key of connector\n-     * @param typeDefault unused parameter\n-     */\n-    @Deprecated\n-    public Connector( String key, @SuppressWarnings( \"UnusedParameters\" ) String typeDefault )\n-    {\n-        this( key );\n-    }\n+  /**\n+   * Deprecated, please use other constructor. This constructor will be removed in 4.0.\n+   *\n+   * @param key         of connector\n+   * @param typeDefault unused parameter\n+   */\n+  @Deprecated\n+  public Connector(String key, @SuppressWarnings(\"UnusedParameters\") String typeDefault)\n+  {\n+    this(key);\n+  }\n \n-    public Connector( String key )\n-    {\n-        group = new GroupSettingSupport( Connector.class, key );\n-        enabled = group.scope( setting( \"enabled\", BOOLEAN, \"false\" ) );\n-        type = group.scope( setting( \"type\", options( ConnectorType.class ), NO_DEFAULT ) );\n-    }\n+  public Connector(String key)\n+  {\n+    group = new GroupSettingSupport(Connector.class, key);\n+    enabled = group.scope(setting(\"enabled\", BOOLEAN, \"false\"));\n+    type = group.scope(setting(\"type\", options(ConnectorType.class), NO_DEFAULT));\n+  }\n \n-    public enum ConnectorType\n-    {\n-        BOLT, HTTP\n-    }\n+  public enum ConnectorType\n+  {\n+    BOLT, HTTP\n+  }\n \n-    public String key()\n-    {\n-        return group.groupKey;\n-    }\n+  public String key()\n+  {\n+    return group.groupKey;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/679/Connector.java\nindex 11a5dcf573b..ebb69eee534 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/679/Connector.java\n@@ -70,4 +70,4 @@ public class Connector\n     {\n         return group.groupKey;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'{' at column 30 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "column": "42",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/679/Connector.java\nindex 11a5dcf573b..b370d05fd1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/679/Connector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/679/Connector.java\n@@ -21,19 +21,20 @@ package org.neo4j.kernel.configuration;\n \n import org.neo4j.configuration.Description;\n import org.neo4j.graphdb.config.Setting;\n-\n import static org.neo4j.kernel.configuration.Settings.BOOLEAN;\n+\n import static org.neo4j.kernel.configuration.Settings.NO_DEFAULT;\n+\n import static org.neo4j.kernel.configuration.Settings.options;\n+\n import static org.neo4j.kernel.configuration.Settings.setting;\n \n-@Group( \"dbms.connector\" )\n+@ Group( \"dbms.connector\")\n public class Connector\n {\n-    @Description( \"Enable this connector\" )\n+    @ Description( \"Enable this connector\")\n     public final Setting<Boolean> enabled;\n-\n-    @Description( \"Connector type. You should always set this to the connector type you want\" )\n+    @ Description( \"Connector type. You should always set this to the connector type you want\")\n     public final Setting<ConnectorType> type;\n \n     // Note: Be careful about adding things here that does not apply to all connectors,\n@@ -48,10 +49,11 @@ public class Connector\n      * @param key of connector\n      * @param typeDefault unused parameter\n      */\n+\n     @Deprecated\n-    public Connector( String key, @SuppressWarnings( \"UnusedParameters\" ) String typeDefault )\n+    public Connector( String key, @ SuppressWarnings( \"UnusedParameters\") String typeDefault )\n     {\n-        this( key );\n+        this ( key );\n     }\n \n     public Connector( String key )\n@@ -61,13 +63,10 @@ public class Connector\n         type = group.scope( setting( \"type\", options( ConnectorType.class ), NO_DEFAULT ) );\n     }\n \n-    public enum ConnectorType\n-    {\n-        BOLT, HTTP\n-    }\n+    public enum ConnectorType{ BOLT, HTTP}\n \n     public String key()\n     {\n         return group.groupKey;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
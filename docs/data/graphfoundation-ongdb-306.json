{
    "project_name": "graphfoundation-ongdb",
    "error_id": "306",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/306/CausalClusterInProcessRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/306/CausalClusterInProcessRunner.java\nindex 7dd805e7f96..04ff72be6f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/306/CausalClusterInProcessRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/306/CausalClusterInProcessRunner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.harness;\n \n import java.nio.file.Files;\n@@ -47,37 +48,36 @@ import static org.neo4j.logging.FormattedLogProvider.toOutputStream;\n public class CausalClusterInProcessRunner\n {\n \n-    public static void main( String[] args )\n+  public static void main(String[] args)\n+  {\n+    try\n     {\n-        try\n-        {\n-            Path clusterPath = Files.createTempDirectory( \"causal-cluster\" );\n-            System.out.println( \"clusterPath = \" + clusterPath );\n+      Path clusterPath = Files.createTempDirectory(\"causal-cluster\");\n+      System.out.println(\"clusterPath = \" + clusterPath);\n \n-            CausalClusterInProcessBuilder.CausalCluster cluster =\n-                    CausalClusterInProcessBuilder.init()\n-                            .withCores( 3 )\n-                            .withReplicas( 3 )\n-                            .withLogger( toOutputStream( System.out ) )\n-                            .atPath( clusterPath )\n-                            .build();\n+      CausalClusterInProcessBuilder.CausalCluster cluster =\n+          CausalClusterInProcessBuilder.init()\n+              .withCores(3)\n+              .withReplicas(3)\n+              .withLogger(toOutputStream(System.out))\n+              .atPath(clusterPath)\n+              .build();\n \n-            System.out.println( \"Waiting for cluster to boot up...\" );\n-            cluster.boot();\n+      System.out.println(\"Waiting for cluster to boot up...\");\n+      cluster.boot();\n \n-            System.out.println( \"Press ENTER to exit...\" );\n-            //noinspection ResultOfMethodCallIgnored\n-            System.in.read();\n+      System.out.println(\"Press ENTER to exit...\");\n+      //noinspection ResultOfMethodCallIgnored\n+      System.in.read();\n \n-            System.out.println( \"Shutting down...\" );\n-            cluster.shutdown();\n-        }\n-        catch ( Throwable e )\n-        {\n-            e.printStackTrace();\n-            System.exit( -1 );\n-        }\n-        System.exit( 0 );\n+      System.out.println(\"Shutting down...\");\n+      cluster.shutdown();\n+    } catch (Throwable e)\n+    {\n+      e.printStackTrace();\n+      System.exit(-1);\n     }\n+    System.exit(0);\n+  }\n \n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/306/CausalClusterInProcessRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/306/CausalClusterInProcessRunner.java\nindex 7dd805e7f96..5e2d2bfff75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/306/CausalClusterInProcessRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/306/CausalClusterInProcessRunner.java\n@@ -46,30 +46,20 @@ import static org.neo4j.logging.FormattedLogProvider.toOutputStream;\n  */\n public class CausalClusterInProcessRunner\n {\n-\n     public static void main( String[] args )\n     {\n         try\n         {\n             Path clusterPath = Files.createTempDirectory( \"causal-cluster\" );\n             System.out.println( \"clusterPath = \" + clusterPath );\n-\n-            CausalClusterInProcessBuilder.CausalCluster cluster =\n-                    CausalClusterInProcessBuilder.init()\n-                            .withCores( 3 )\n-                            .withReplicas( 3 )\n-                            .withLogger( toOutputStream( System.out ) )\n-                            .atPath( clusterPath )\n+CausalClusterInProcessBuilder.CausalCluster cluster = CausalClusterInProcessBuilder.init().withCores( 3 ).withReplicas( 3 ).withLogger( toOutputStream( System.out ) ).atPath( clusterPath )\n                             .build();\n-\n-            System.out.println( \"Waiting for cluster to boot up...\" );\n+System.out.println( \"Waiting for cluster to boot up...\" );\n             cluster.boot();\n-\n-            System.out.println( \"Press ENTER to exit...\" );\n+System.out.println( \"Press ENTER to exit...\" );\n             //noinspection ResultOfMethodCallIgnored\n             System.in.read();\n-\n-            System.out.println( \"Shutting down...\" );\n+System.out.println( \"Shutting down...\" );\n             cluster.shutdown();\n         }\n         catch ( Throwable e )\n@@ -79,5 +69,4 @@ public class CausalClusterInProcessRunner\n         }\n         System.exit( 0 );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
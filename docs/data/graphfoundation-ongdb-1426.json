{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1426",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "178",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "219",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "445",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "500",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1426/LabelScanWriteMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1426/LabelScanWriteMonitor.java\nindex 7ad1e17d95c..3cf5548f076 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1426/LabelScanWriteMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1426/LabelScanWriteMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import java.io.BufferedOutputStream;\n@@ -55,550 +56,537 @@ import static org.neo4j.io.ByteUnit.mebiBytes;\n  */\n public class LabelScanWriteMonitor implements NativeLabelScanWriter.WriteMonitor\n {\n-    // configuration for this monitor\n-    static final boolean ENABLED = FeatureToggles.flag( LabelScanWriteMonitor.class, \"enabled\", false );\n-    private static final long ROTATION_SIZE_THRESHOLD = FeatureToggles.getLong( LabelScanWriteMonitor.class, \"rotationThreshold\", mebiBytes( 200 ) );\n-    private static final long PRUNE_THRESHOLD = FeatureToggles.getLong( LabelScanWriteMonitor.class, \"pruneThreshold\", TimeUnit.DAYS.toMillis( 2 ) );\n-\n-    static final String NAME = NativeLabelScanStore.FILE_NAME + \".writelog\";\n-    private static final byte TYPE_PREPARE_ADD = 0;\n-    private static final byte TYPE_PREPARE_REMOVE = 1;\n-    private static final byte TYPE_MERGE_ADD = 2;\n-    private static final byte TYPE_MERGE_REMOVE = 3;\n-    private static final byte TYPE_RANGE = 4;\n-    private static final byte TYPE_FLUSH = 5;\n-    private static final byte TYPE_SESSION_END = 6;\n-\n-    private static final String ARG_TOFILE = \"tofile\";\n-    private static final String ARG_TXFILTER = \"txfilter\";\n-\n-    private final FileSystemAbstraction fs;\n-    private final File storeDir;\n-    private final File file;\n-    private FlushableChannel channel;\n-    private Lock lock = new ReentrantLock();\n-    private LongAdder position = new LongAdder();\n-    private long rotationThreshold;\n-    private long pruneThreshold;\n-\n-    LabelScanWriteMonitor( FileSystemAbstraction fs, File storeDir )\n-    {\n-        this( fs, storeDir, ROTATION_SIZE_THRESHOLD, ByteUnit.Byte, PRUNE_THRESHOLD, TimeUnit.MILLISECONDS );\n+  // configuration for this monitor\n+  static final boolean ENABLED = FeatureToggles.flag(LabelScanWriteMonitor.class, \"enabled\", false);\n+  private static final long ROTATION_SIZE_THRESHOLD = FeatureToggles.getLong(LabelScanWriteMonitor.class, \"rotationThreshold\", mebiBytes(200));\n+  private static final long PRUNE_THRESHOLD = FeatureToggles.getLong(LabelScanWriteMonitor.class, \"pruneThreshold\", TimeUnit.DAYS.toMillis(2));\n+\n+  static final String NAME = NativeLabelScanStore.FILE_NAME + \".writelog\";\n+  private static final byte TYPE_PREPARE_ADD = 0;\n+  private static final byte TYPE_PREPARE_REMOVE = 1;\n+  private static final byte TYPE_MERGE_ADD = 2;\n+  private static final byte TYPE_MERGE_REMOVE = 3;\n+  private static final byte TYPE_RANGE = 4;\n+  private static final byte TYPE_FLUSH = 5;\n+  private static final byte TYPE_SESSION_END = 6;\n+\n+  private static final String ARG_TOFILE = \"tofile\";\n+  private static final String ARG_TXFILTER = \"txfilter\";\n+\n+  private final FileSystemAbstraction fs;\n+  private final File storeDir;\n+  private final File file;\n+  private FlushableChannel channel;\n+  private Lock lock = new ReentrantLock();\n+  private LongAdder position = new LongAdder();\n+  private long rotationThreshold;\n+  private long pruneThreshold;\n+\n+  LabelScanWriteMonitor(FileSystemAbstraction fs, File storeDir)\n+  {\n+    this(fs, storeDir, ROTATION_SIZE_THRESHOLD, ByteUnit.Byte, PRUNE_THRESHOLD, TimeUnit.MILLISECONDS);\n+  }\n+\n+  LabelScanWriteMonitor(FileSystemAbstraction fs, File storeDir,\n+                        long rotationThreshold, ByteUnit rotationThresholdUnit,\n+                        long pruneThreshold, TimeUnit pruneThresholdUnit)\n+  {\n+    this.fs = fs;\n+    this.storeDir = storeDir;\n+    this.rotationThreshold = rotationThresholdUnit.toBytes(rotationThreshold);\n+    this.pruneThreshold = pruneThresholdUnit.toMillis(pruneThreshold);\n+    this.file = new File(storeDir, NAME);\n+    try\n+    {\n+      if (fs.fileExists(file))\n+      {\n+        moveAwayFile();\n+      }\n+      this.channel = instantiateChannel();\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    LabelScanWriteMonitor( FileSystemAbstraction fs, File storeDir,\n-            long rotationThreshold, ByteUnit rotationThresholdUnit,\n-            long pruneThreshold, TimeUnit pruneThresholdUnit )\n+  private PhysicalFlushableChannel instantiateChannel() throws IOException\n+  {\n+    return new PhysicalFlushableChannel(fs.open(file, OpenMode.READ_WRITE));\n+  }\n+\n+  @Override\n+  public void range(long range, int labelId)\n+  {\n+    try\n     {\n-        this.fs = fs;\n-        this.storeDir = storeDir;\n-        this.rotationThreshold = rotationThresholdUnit.toBytes( rotationThreshold );\n-        this.pruneThreshold = pruneThresholdUnit.toMillis( pruneThreshold );\n-        this.file = new File( storeDir, NAME );\n-        try\n-        {\n-            if ( fs.fileExists( file ) )\n-            {\n-                moveAwayFile();\n-            }\n-            this.channel = instantiateChannel();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      channel.put(TYPE_RANGE);\n+      channel.putLong(range);\n+      channel.putInt(labelId);\n+      position.add(1 + 8 + 4);\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n-\n-    private PhysicalFlushableChannel instantiateChannel() throws IOException\n+  }\n+\n+  @Override\n+  public void prepareAdd(long txId, int offset)\n+  {\n+    prepare(TYPE_PREPARE_ADD, txId, offset);\n+  }\n+\n+  @Override\n+  public void prepareRemove(long txId, int offset)\n+  {\n+    prepare(TYPE_PREPARE_REMOVE, txId, offset);\n+  }\n+\n+  private void prepare(byte type, long txId, int offset)\n+  {\n+    try\n+    {\n+      channel.put(type);\n+      channel.putLong(txId);\n+      channel.put((byte) offset);\n+      position.add(1 + 8 + 1);\n+    } catch (IOException e)\n     {\n-        return new PhysicalFlushableChannel( fs.open( file, OpenMode.READ_WRITE ) );\n+      throw new UncheckedIOException(e);\n     }\n-\n-    @Override\n-    public void range( long range, int labelId )\n+  }\n+\n+  @Override\n+  public void mergeAdd(LabelScanValue existingValue, LabelScanValue newValue)\n+  {\n+    merge(TYPE_MERGE_ADD, existingValue, newValue);\n+  }\n+\n+  @Override\n+  public void mergeRemove(LabelScanValue existingValue, LabelScanValue newValue)\n+  {\n+    merge(TYPE_MERGE_REMOVE, existingValue, newValue);\n+  }\n+\n+  private void merge(byte type, LabelScanValue existingValue, LabelScanValue newValue)\n+  {\n+    try\n     {\n-        try\n-        {\n-            channel.put( TYPE_RANGE );\n-            channel.putLong( range );\n-            channel.putInt( labelId );\n-            position.add( 1 + 8 + 4 );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      channel.put(type);\n+      channel.putLong(existingValue.bits);\n+      channel.putLong(newValue.bits);\n+      position.add(1 + 8 + 8);\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public void prepareAdd( long txId, int offset )\n+  @Override\n+  public void flushPendingUpdates()\n+  {\n+    try\n+    {\n+      channel.put(TYPE_FLUSH);\n+    } catch (IOException e)\n     {\n-        prepare( TYPE_PREPARE_ADD, txId, offset );\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public void prepareRemove( long txId, int offset )\n+  @Override\n+  public void writeSessionEnded()\n+  {\n+    try\n+    {\n+      channel.put(TYPE_SESSION_END);\n+    } catch (IOException e)\n     {\n-        prepare( TYPE_PREPARE_REMOVE, txId, offset );\n+      throw new UncheckedIOException(e);\n     }\n \n-    private void prepare( byte type, long txId, int offset )\n+    position.add(1);\n+    if (position.sum() > rotationThreshold)\n     {\n-        try\n-        {\n-            channel.put( type );\n-            channel.putLong( txId );\n-            channel.put( (byte) offset );\n-            position.add( 1 + 8 + 1 );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      // Rotate\n+      lock.lock();\n+      try\n+      {\n+        channel.prepareForFlush().flush();\n+        channel.close();\n+        moveAwayFile();\n+        position.reset();\n+        channel = instantiateChannel();\n+      } catch (IOException e)\n+      {\n+        throw new UncheckedIOException(e);\n+      } finally\n+      {\n+        lock.unlock();\n+      }\n+\n+      // Prune\n+      long time = currentTimeMillis();\n+      long threshold = time - pruneThreshold;\n+      for (File file : fs.listFiles(storeDir, (dir, name) -> name.startsWith(NAME + \"-\")))\n+      {\n+        if (millisOf(file) < threshold)\n+        {\n+          fs.deleteFile(file);\n+        }\n+      }\n     }\n+  }\n \n-    @Override\n-    public void mergeAdd( LabelScanValue existingValue, LabelScanValue newValue )\n+  static long millisOf(File file)\n+  {\n+    String name = file.getName();\n+    int dashIndex = name.lastIndexOf('-');\n+    if (dashIndex == -1)\n     {\n-        merge( TYPE_MERGE_ADD, existingValue, newValue );\n+      return 0;\n     }\n-\n-    @Override\n-    public void mergeRemove( LabelScanValue existingValue, LabelScanValue newValue )\n+    return Long.parseLong(name.substring(dashIndex + 1));\n+  }\n+\n+  @Override\n+  public void force()\n+  {\n+    // checkpoint does this\n+    lock.lock();\n+    try\n+    {\n+      channel.prepareForFlush().flush();\n+    } catch (IOException e)\n     {\n-        merge( TYPE_MERGE_REMOVE, existingValue, newValue );\n+      throw new UncheckedIOException(e);\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n \n-    private void merge( byte type, LabelScanValue existingValue, LabelScanValue newValue )\n+  @Override\n+  public void close()\n+  {\n+    try\n     {\n-        try\n-        {\n-            channel.put( type );\n-            channel.putLong( existingValue.bits );\n-            channel.putLong( newValue.bits );\n-            position.add( 1 + 8 + 8 );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      channel.close();\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public void flushPendingUpdates()\n+  private void moveAwayFile() throws IOException\n+  {\n+    File to;\n+    do\n     {\n-        try\n-        {\n-            channel.put( TYPE_FLUSH );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      to = timestampedFile();\n     }\n-\n-    @Override\n-    public void writeSessionEnded()\n+    while (fs.fileExists(to));\n+    fs.renameFile(file, to);\n+  }\n+\n+  private File timestampedFile()\n+  {\n+    return new File(storeDir, NAME + \"-\" + currentTimeMillis());\n+  }\n+\n+  /**\n+   * Dumps a label scan write log as plain text. Arguments:\n+   * <ul>\n+   *     <li>{@value #ARG_TOFILE}: dumps to a .txt file next to the writelog</li>\n+   *     <li>{@value #ARG_TXFILTER}: filter for which tx ids to include in the dump.\n+   * <p>\n+   *     Consists of one or more groups separated by comma.\n+   * <p>\n+   *     Each group is either a txId, or a txId range, e.g. 123-456\n+   *     </li>\n+   * </ul>\n+   * <p>\n+   * How to interpret the dump, e.g:\n+   * <pre>\n+   * === ..../neostore.labelscanstore.db.writelog ===\n+   * [1,1]+tx:6,node:0,label:0\n+   * [1,1]+tx:3,node:20,label:0\n+   * [1,1]+tx:4,node:40,label:0\n+   * [1,1]+tx:5,node:60,label:0\n+   * [2,1]+tx:8,node:80,label:1\n+   * [3,1]+tx:10,node:41,label:1\n+   * [4,1]+tx:9,node:21,label:1\n+   * [4,1]+tx:11,node:61,label:1\n+   * [4,1]+range:0,labelId:1\n+   *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000]\n+   *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000]\n+   * [5,1]+tx:12,node:81,label:1\n+   * [5,1]+range:1,labelId:1\n+   *  [00000000 00000000 00000000 00000000 00000000 00000001 00000000 00000000]\n+   *  [00000000 00000000 00000000 00000000 00000000 00000010 00000000 00000000]\n+   * [6,1]+tx:13,node:1,label:1\n+   * [6,1]+range:0,labelId:1\n+   *  [00100000 00000000 00000010 00000000 00000000 00100000 00000000 00000000]\n+   *  [00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010]\n+   * [7,1]+tx:14,node:62,label:1\n+   * [7,1]+range:0,labelId:1\n+   * </pre>\n+   * How to interpret a message like:\n+   * <pre>\n+   * [1,1]+tx:6,node:0,label:0\n+   *  \u25b2 \u25b2 \u25b2   \u25b2      \u25b2       \u25b2\n+   *  \u2502 \u2502 \u2502   \u2502      \u2502       \u2514\u2500\u2500\u2500\u2500 label id of the change\n+   *  \u2502 \u2502 \u2502   \u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 node id of the change\n+   *  \u2502 \u2502 \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 id of transaction making this particular change\n+   *  \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 addition, a minus means removal\n+   *  \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 flush, local to each write session, incremented when a batch of changes is flushed internally in a writer session\n+   *  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 write session, incremented for each {@link LabelScanStore#newWriter()}\n+   * </pre>\n+   * How to interpret a message like:\n+   * <pre>\n+   * [4,1]+range:0,labelId:1\n+   *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000]\n+   *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000]\n+   * </pre>\n+   * First the first line (parts within bracket same as above):\n+   * <pre>\n+   * [4,1]+range:0,labelId:1\n+   *             \u25b2         \u25b2\n+   *             \u2502         \u2514\u2500\u2500 label id of the changed bitset to apply\n+   *             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 range, i.e. which bitset to apply this change for\n+   * </pre>\n+   * Then the bitsets are printed\n+   * <pre>\n+   *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000] : state of the bitset for this label id before the change\n+   *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000] : bits that applied to this bitset\n+   *                                                                              for addition the 1-bits denotes bits to be added\n+   *                                                                              for removal the 1-bits denotes bits to be removed\n+   * </pre>\n+   */\n+  public static void main(String[] args) throws IOException\n+  {\n+    Args arguments = Args.withFlags(ARG_TOFILE).parse(args);\n+    if (arguments.orphans().size() == 0)\n     {\n-        try\n-        {\n-            channel.put( TYPE_SESSION_END );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-\n-        position.add( 1 );\n-        if ( position.sum() > rotationThreshold )\n-        {\n-            // Rotate\n-            lock.lock();\n-            try\n-            {\n-                channel.prepareForFlush().flush();\n-                channel.close();\n-                moveAwayFile();\n-                position.reset();\n-                channel = instantiateChannel();\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UncheckedIOException( e );\n-            }\n-            finally\n-            {\n-                lock.unlock();\n-            }\n-\n-            // Prune\n-            long time = currentTimeMillis();\n-            long threshold = time - pruneThreshold;\n-            for ( File file : fs.listFiles( storeDir, ( dir, name ) -> name.startsWith( NAME + \"-\" ) ) )\n-            {\n-                if ( millisOf( file ) < threshold )\n-                {\n-                    fs.deleteFile( file );\n-                }\n-            }\n-        }\n+      System.err.println(\"Please supply database directory\");\n+      return;\n     }\n \n-    static long millisOf( File file )\n+    File storeDir = new File(arguments.orphans().get(0));\n+    FileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n+    TxFilter txFilter = parseTxFilter(arguments.get(ARG_TXFILTER, null));\n+    PrintStream out = System.out;\n+    boolean redirectsToFile = arguments.getBoolean(ARG_TOFILE);\n+    if (redirectsToFile)\n     {\n-        String name = file.getName();\n-        int dashIndex = name.lastIndexOf( '-' );\n-        if ( dashIndex == -1 )\n-        {\n-            return 0;\n-        }\n-        return Long.parseLong( name.substring( dashIndex + 1 ) );\n+      File outFile = new File(storeDir, NAME + \".txt\");\n+      System.out.println(\"Redirecting output to \" + outFile);\n+      out = new PrintStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n     }\n-\n-    @Override\n-    public void force()\n+    Dumper dumper = new PrintStreamDumper(out);\n+    dump(fs, storeDir, dumper, txFilter);\n+    if (redirectsToFile)\n     {\n-        // checkpoint does this\n-        lock.lock();\n-        try\n-        {\n-            channel.prepareForFlush().flush();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n+      out.close();\n     }\n-\n-    @Override\n-    public void close()\n+  }\n+\n+  public static void dump(FileSystemAbstraction fs, File storeDir, Dumper dumper, TxFilter txFilter) throws IOException\n+  {\n+    File[] files = fs.listFiles(storeDir, (dir, name) -> name.startsWith(NAME));\n+    Arrays.sort(files, comparing(file -> file.getName().equals(NAME) ? 0 : millisOf(file)));\n+    long session = 0;\n+    for (File file : files)\n     {\n-        try\n-        {\n-            channel.close();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      dumper.file(file);\n+      session = dumpFile(fs, file, dumper, txFilter, session);\n     }\n+  }\n \n-    private void moveAwayFile() throws IOException\n+  private static long dumpFile(FileSystemAbstraction fs, File file, Dumper dumper, TxFilter txFilter, long session) throws IOException\n+  {\n+    try (ReadableChannel channel = new ReadAheadChannel<>(fs.open(file, OpenMode.READ)))\n     {\n-        File to;\n-        do\n-        {\n-            to = timestampedFile();\n-        }\n-        while ( fs.fileExists( to ) );\n-        fs.renameFile( file, to );\n+      long range = -1;\n+      int labelId = -1;\n+      long flush = 0;\n+      while (true)\n+      {\n+        byte type = channel.get();\n+        switch (type)\n+        {\n+          case TYPE_RANGE:\n+            range = channel.getLong();\n+            labelId = channel.getInt();\n+            if (txFilter != null)\n+            {\n+              txFilter.clear();\n+            }\n+            break;\n+          case TYPE_PREPARE_ADD:\n+          case TYPE_PREPARE_REMOVE:\n+            dumpPrepare(dumper, type, channel, range, labelId, txFilter, session, flush);\n+            break;\n+          case TYPE_MERGE_ADD:\n+          case TYPE_MERGE_REMOVE:\n+            dumpMerge(dumper, type, channel, range, labelId, txFilter, session, flush);\n+            break;\n+          case TYPE_FLUSH:\n+            flush++;\n+            break;\n+          case TYPE_SESSION_END:\n+            session++;\n+            flush = 0;\n+            break;\n+          default:\n+            System.out.println(\"Unknown type \" + type + \" at \" + ((ReadAheadChannel) channel).position());\n+            break;\n+        }\n+      }\n+    } catch (ReadPastEndException e)\n+    {\n+      // This is OK. we're done with this file\n     }\n-\n-    private File timestampedFile()\n+    return session;\n+  }\n+\n+  private static void dumpMerge(Dumper dumper, byte type, ReadableChannel channel, long range, int labelId, TxFilter txFilter,\n+                                long session, long flush) throws IOException\n+  {\n+    long existingBits = channel.getLong();\n+    long newBits = channel.getLong();\n+    if (txFilter == null || txFilter.contains())\n     {\n-        return new File( storeDir, NAME + \"-\" + currentTimeMillis() );\n+      dumper.merge(type == TYPE_MERGE_ADD, session, flush, range, labelId, existingBits, newBits);\n     }\n-\n-    /**\n-     * Dumps a label scan write log as plain text. Arguments:\n-     * <ul>\n-     *     <li>{@value #ARG_TOFILE}: dumps to a .txt file next to the writelog</li>\n-     *     <li>{@value #ARG_TXFILTER}: filter for which tx ids to include in the dump.\n-     *     <p>\n-     *     Consists of one or more groups separated by comma.\n-     *     <p>\n-     *     Each group is either a txId, or a txId range, e.g. 123-456\n-     *     </li>\n-     * </ul>\n-     * <p>\n-     * How to interpret the dump, e.g:\n-     * <pre>\n-     * === ..../neostore.labelscanstore.db.writelog ===\n-     * [1,1]+tx:6,node:0,label:0\n-     * [1,1]+tx:3,node:20,label:0\n-     * [1,1]+tx:4,node:40,label:0\n-     * [1,1]+tx:5,node:60,label:0\n-     * [2,1]+tx:8,node:80,label:1\n-     * [3,1]+tx:10,node:41,label:1\n-     * [4,1]+tx:9,node:21,label:1\n-     * [4,1]+tx:11,node:61,label:1\n-     * [4,1]+range:0,labelId:1\n-     *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000]\n-     *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000]\n-     * [5,1]+tx:12,node:81,label:1\n-     * [5,1]+range:1,labelId:1\n-     *  [00000000 00000000 00000000 00000000 00000000 00000001 00000000 00000000]\n-     *  [00000000 00000000 00000000 00000000 00000000 00000010 00000000 00000000]\n-     * [6,1]+tx:13,node:1,label:1\n-     * [6,1]+range:0,labelId:1\n-     *  [00100000 00000000 00000010 00000000 00000000 00100000 00000000 00000000]\n-     *  [00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000010]\n-     * [7,1]+tx:14,node:62,label:1\n-     * [7,1]+range:0,labelId:1\n-     * </pre>\n-     * How to interpret a message like:\n-     * <pre>\n-     * [1,1]+tx:6,node:0,label:0\n-     *  \u25b2 \u25b2 \u25b2   \u25b2      \u25b2       \u25b2\n-     *  \u2502 \u2502 \u2502   \u2502      \u2502       \u2514\u2500\u2500\u2500\u2500 label id of the change\n-     *  \u2502 \u2502 \u2502   \u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 node id of the change\n-     *  \u2502 \u2502 \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 id of transaction making this particular change\n-     *  \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 addition, a minus means removal\n-     *  \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 flush, local to each write session, incremented when a batch of changes is flushed internally in a writer session\n-     *  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 write session, incremented for each {@link LabelScanStore#newWriter()}\n-     * </pre>\n-     * How to interpret a message like:\n-     * <pre>\n-     * [4,1]+range:0,labelId:1\n-     *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000]\n-     *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000]\n-     * </pre>\n-     * First the first line (parts within bracket same as above):\n-     * <pre>\n-     * [4,1]+range:0,labelId:1\n-     *             \u25b2         \u25b2\n-     *             \u2502         \u2514\u2500\u2500 label id of the changed bitset to apply\n-     *             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 range, i.e. which bitset to apply this change for\n-     * </pre>\n-     * Then the bitsets are printed\n-     * <pre>\n-     *  [00000000 00000000 00000010 00000000 00000000 00000000 00000000 00000000] : state of the bitset for this label id before the change\n-     *  [00100000 00000000 00000000 00000000 00000000 00100000 00000000 00000000] : bits that applied to this bitset\n-     *                                                                              for addition the 1-bits denotes bits to be added\n-     *                                                                              for removal the 1-bits denotes bits to be removed\n-     * </pre>\n-     */\n-    public static void main( String[] args ) throws IOException\n-    {\n-        Args arguments = Args.withFlags( ARG_TOFILE ).parse( args );\n-        if ( arguments.orphans().size() == 0 )\n-        {\n-            System.err.println( \"Please supply database directory\" );\n-            return;\n-        }\n-\n-        File storeDir = new File( arguments.orphans().get( 0 ) );\n-        FileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-        TxFilter txFilter = parseTxFilter( arguments.get( ARG_TXFILTER, null ) );\n-        PrintStream out = System.out;\n-        boolean redirectsToFile = arguments.getBoolean( ARG_TOFILE );\n-        if ( redirectsToFile )\n-        {\n-            File outFile = new File( storeDir, NAME + \".txt\" );\n-            System.out.println( \"Redirecting output to \" + outFile );\n-            out = new PrintStream( new BufferedOutputStream( new FileOutputStream( outFile ) ) );\n-        }\n-        Dumper dumper = new PrintStreamDumper( out );\n-        dump( fs, storeDir, dumper, txFilter );\n-        if ( redirectsToFile )\n-        {\n-            out.close();\n-        }\n+  }\n+\n+  private static void dumpPrepare(Dumper dumper, byte type, ReadableChannel channel, long range, int labelId, TxFilter txFilter, long session, long flush)\n+      throws IOException\n+  {\n+    long txId = channel.getLong();\n+    int offset = channel.get();\n+    long nodeId = range * 64 + offset;\n+    if (txFilter == null || txFilter.contains(txId))\n+    {\n+      // I.e. if the txId this update comes from is within the txFilter\n+      dumper.prepare(type == TYPE_PREPARE_ADD, session, flush, txId, nodeId, labelId);\n     }\n+  }\n \n-    public static void dump( FileSystemAbstraction fs, File storeDir, Dumper dumper, TxFilter txFilter ) throws IOException\n+  static TxFilter parseTxFilter(String txFilter)\n+  {\n+    if (txFilter == null)\n     {\n-        File[] files = fs.listFiles( storeDir, ( dir, name ) -> name.startsWith( NAME ) );\n-        Arrays.sort( files, comparing( file -> file.getName().equals( NAME ) ? 0 : millisOf( file ) ) );\n-        long session = 0;\n-        for ( File file : files )\n-        {\n-            dumper.file( file );\n-            session = dumpFile( fs, file, dumper, txFilter, session );\n-        }\n+      return null;\n     }\n \n-    private static long dumpFile( FileSystemAbstraction fs, File file, Dumper dumper, TxFilter txFilter, long session ) throws IOException\n+    String[] tokens = txFilter.split(\",\");\n+    long[][] filters = new long[tokens.length][];\n+    for (int i = 0; i < tokens.length; i++)\n     {\n-        try ( ReadableChannel channel = new ReadAheadChannel<>( fs.open( file, OpenMode.READ ) ) )\n-        {\n-            long range = -1;\n-            int labelId = -1;\n-            long flush = 0;\n-            while ( true )\n-            {\n-                byte type = channel.get();\n-                switch ( type )\n-                {\n-                case TYPE_RANGE:\n-                    range = channel.getLong();\n-                    labelId = channel.getInt();\n-                    if ( txFilter != null )\n-                    {\n-                        txFilter.clear();\n-                    }\n-                    break;\n-                case TYPE_PREPARE_ADD:\n-                case TYPE_PREPARE_REMOVE:\n-                    dumpPrepare( dumper, type, channel, range, labelId, txFilter, session, flush );\n-                    break;\n-                case TYPE_MERGE_ADD:\n-                case TYPE_MERGE_REMOVE:\n-                    dumpMerge( dumper, type, channel, range, labelId, txFilter, session, flush );\n-                    break;\n-                case TYPE_FLUSH:\n-                    flush++;\n-                    break;\n-                case TYPE_SESSION_END:\n-                    session++;\n-                    flush = 0;\n-                    break;\n-                default:\n-                    System.out.println( \"Unknown type \" + type + \" at \" + ((ReadAheadChannel) channel).position() );\n-                    break;\n-                }\n-            }\n-        }\n-        catch ( ReadPastEndException e )\n-        {\n-            // This is OK. we're done with this file\n-        }\n-        return session;\n+      String token = tokens[i];\n+      int index = token.lastIndexOf('-');\n+      long low, high;\n+      if (index == -1)\n+      {\n+        low = high = Long.parseLong(token);\n+      } else\n+      {\n+        low = Long.parseLong(token.substring(0, index));\n+        high = Long.parseLong(token.substring(index + 1));\n+      }\n+      filters[i] = new long[] {low, high};\n     }\n+    return new TxFilter(filters);\n+  }\n+\n+  static class TxFilter\n+  {\n+    private final long[][] lowsAndHighs;\n+    private boolean contains;\n \n-    private static void dumpMerge( Dumper dumper, byte type, ReadableChannel channel, long range, int labelId, TxFilter txFilter,\n-            long session, long flush ) throws IOException\n+    TxFilter(long[]... lowsAndHighs)\n     {\n-        long existingBits = channel.getLong();\n-        long newBits = channel.getLong();\n-        if ( txFilter == null || txFilter.contains() )\n-        {\n-            dumper.merge( type == TYPE_MERGE_ADD, session, flush, range, labelId, existingBits, newBits );\n-        }\n+      this.lowsAndHighs = lowsAndHighs;\n     }\n \n-    private static void dumpPrepare( Dumper dumper, byte type, ReadableChannel channel, long range, int labelId, TxFilter txFilter, long session, long flush )\n-            throws IOException\n+    void clear()\n     {\n-        long txId = channel.getLong();\n-        int offset = channel.get();\n-        long nodeId = range * 64 + offset;\n-        if ( txFilter == null || txFilter.contains( txId ) )\n-        {\n-            // I.e. if the txId this update comes from is within the txFilter\n-            dumper.prepare( type == TYPE_PREPARE_ADD, session, flush, txId, nodeId, labelId );\n-        }\n+      contains = false;\n     }\n \n-    static TxFilter parseTxFilter( String txFilter )\n+    boolean contains(long txId)\n     {\n-        if ( txFilter == null )\n-        {\n-            return null;\n-        }\n-\n-        String[] tokens = txFilter.split( \",\" );\n-        long[][] filters = new long[tokens.length][];\n-        for ( int i = 0; i < tokens.length; i++ )\n+      for (long[] filter : lowsAndHighs)\n+      {\n+        if (txId >= filter[0] && txId <= filter[1])\n         {\n-            String token = tokens[i];\n-            int index = token.lastIndexOf( '-' );\n-            long low, high;\n-            if ( index == -1 )\n-            {\n-                low = high = Long.parseLong( token );\n-            }\n-            else\n-            {\n-                low = Long.parseLong( token.substring( 0, index ) );\n-                high = Long.parseLong( token.substring( index + 1 ) );\n-            }\n-            filters[i] = new long[]{low, high};\n+          contains = true;\n+          return true;\n         }\n-        return new TxFilter( filters );\n+      }\n+      return false;\n     }\n \n-    static class TxFilter\n+    boolean contains()\n     {\n-        private final long[][] lowsAndHighs;\n-        private boolean contains;\n+      return contains;\n+    }\n+  }\n \n-        TxFilter( long[]... lowsAndHighs )\n-        {\n-            this.lowsAndHighs = lowsAndHighs;\n-        }\n+  public interface Dumper\n+  {\n+    void file(File file);\n \n-        void clear()\n-        {\n-            contains = false;\n-        }\n+    void prepare(boolean add, long session, long flush, long txId, long nodeId, int labelId);\n \n-        boolean contains( long txId )\n-        {\n-            for ( long[] filter : lowsAndHighs )\n-            {\n-                if ( txId >= filter[0] && txId <= filter[1] )\n-                {\n-                    contains = true;\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n+    void merge(boolean add, long session, long flush, long range, int labelId, long existingBits, long newBits);\n+  }\n \n-        boolean contains()\n-        {\n-            return contains;\n-        }\n-    }\n+  public static class PrintStreamDumper implements Dumper\n+  {\n+    private final PrintStream out;\n+    private final char[] bitsAsChars = new char[64 + 7/*separators*/];\n \n-    public interface Dumper\n+    PrintStreamDumper(PrintStream out)\n     {\n-        void file( File file );\n-\n-        void prepare( boolean add, long session, long flush, long txId, long nodeId, int labelId );\n-\n-        void merge( boolean add, long session, long flush, long range, int labelId, long existingBits, long newBits );\n+      this.out = out;\n+      Arrays.fill(bitsAsChars, ' ');\n     }\n \n-    public static class PrintStreamDumper implements Dumper\n+    @Override\n+    public void file(File file)\n     {\n-        private final PrintStream out;\n-        private final char[] bitsAsChars = new char[64 + 7/*separators*/];\n-\n-        PrintStreamDumper( PrintStream out )\n-        {\n-            this.out = out;\n-            Arrays.fill( bitsAsChars, ' ' );\n-        }\n-\n-        @Override\n-        public void file( File file )\n-        {\n-            out.println( \"=== \" + file.getAbsolutePath() + \" ===\" );\n-        }\n+      out.println(\"=== \" + file.getAbsolutePath() + \" ===\");\n+    }\n \n-        @Override\n-        public void prepare( boolean add, long session, long flush, long txId, long nodeId, int labelId )\n-        {\n-            out.println( format( \"[%d,%d]%stx:%d,node:%d,label:%d\", session, flush, add ? '+' : '-', txId, nodeId, labelId ) );\n-        }\n+    @Override\n+    public void prepare(boolean add, long session, long flush, long txId, long nodeId, int labelId)\n+    {\n+      out.println(format(\"[%d,%d]%stx:%d,node:%d,label:%d\", session, flush, add ? '+' : '-', txId, nodeId, labelId));\n+    }\n \n-        @Override\n-        public void merge( boolean add, long session, long flush, long range, int labelId, long existingBits, long newBits )\n-        {\n-            out.println( format( \"[%d,%d]%srange:%d,labelId:%d%n [%s]%n [%s]\", session, flush, add ? '+' : '-', range, labelId,\n-                    bits( existingBits, bitsAsChars ), bits( newBits, bitsAsChars ) ) );\n-        }\n+    @Override\n+    public void merge(boolean add, long session, long flush, long range, int labelId, long existingBits, long newBits)\n+    {\n+      out.println(format(\"[%d,%d]%srange:%d,labelId:%d%n [%s]%n [%s]\", session, flush, add ? '+' : '-', range, labelId,\n+          bits(existingBits, bitsAsChars), bits(newBits, bitsAsChars)));\n+    }\n \n-        private static String bits( long bits, char[] bitsAsChars )\n-        {\n-            long mask = 1;\n-            for ( int i = 0, c = 0; i < 64; i++, c++ )\n-            {\n-                if ( i % 8 == 0 )\n-                {\n-                    c++;\n-                }\n-                boolean set = (bits & mask) != 0;\n-                bitsAsChars[bitsAsChars.length - c] = set ? '1' : '0';\n-                mask <<= 1;\n-            }\n-            return String.valueOf( bitsAsChars );\n-        }\n+    private static String bits(long bits, char[] bitsAsChars)\n+    {\n+      long mask = 1;\n+      for (int i = 0, c = 0; i < 64; i++, c++)\n+      {\n+        if (i % 8 == 0)\n+        {\n+          c++;\n+        }\n+        boolean set = (bits & mask) != 0;\n+        bitsAsChars[bitsAsChars.length - c] = set ? '1' : '0';\n+        mask <<= 1;\n+      }\n+      return String.valueOf(bitsAsChars);\n     }\n+  }\n }\n",
            "diff_size": 734
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "507",
    "information": {
        "errors": [
            {
                "line": "76",
                "column": "20",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "            responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n            dataFlowContext.setResponseEntity(responseEntity);\n            return ;\n        }\n\n        FeeDto feeDto = feeDtos.get(0);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..447465b14cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/507/QueryFeeByParkingSpaceListener.java\n@@ -73,7 +73,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..3c1fd9d3e6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/507/QueryFeeByParkingSpaceListener.java\n@@ -73,7 +73,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n@@ -91,7 +91,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         BeanConvertUtil.covertBean(parkingSpaceDto, apiFeeVo);\n \n         //\u67e5\u8be2\u8f66\u8f86\u4fe1\u606f\n-        OwnerCarDto  ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n+        OwnerCarDto ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n \n         List<OwnerCarDto> ownerCarDtos = ownerCarInnerServiceSMOImpl.queryOwnerCars(ownerCarDto);\n         Assert.listOnlyOne(ownerCarDtos, \"\u672a\u67e5\u8be2\u5230\u6216\u67e5\u8be2\u591a\u6761 \u8f66\u8f86\u4fe1\u606f\");\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..7fe0a8cac0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/507/QueryFeeByParkingSpaceListener.java\n@@ -73,7 +73,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n@@ -91,7 +91,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         BeanConvertUtil.covertBean(parkingSpaceDto, apiFeeVo);\n \n         //\u67e5\u8be2\u8f66\u8f86\u4fe1\u606f\n-        OwnerCarDto  ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n+        OwnerCarDto ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n \n         List<OwnerCarDto> ownerCarDtos = ownerCarInnerServiceSMOImpl.queryOwnerCars(ownerCarDto);\n         Assert.listOnlyOne(ownerCarDtos, \"\u672a\u67e5\u8be2\u5230\u6216\u67e5\u8be2\u591a\u6761 \u8f66\u8f86\u4fe1\u606f\");\n@@ -148,4 +148,4 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n     public void setOwnerCarInnerServiceSMOImpl(IOwnerCarInnerServiceSMO ownerCarInnerServiceSMOImpl) {\n         this.ownerCarInnerServiceSMOImpl = ownerCarInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..4c7c628e8c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/507/QueryFeeByParkingSpaceListener.java\n@@ -1,6 +1,5 @@\n package com.java110.api.listener.fee;\n \n-\n import com.alibaba.fastjson.JSONObject;\n import com.java110.api.listener.AbstractServiceApiDataFlowListener;\n import com.java110.utils.constant.ServiceCodeConstant;\n@@ -20,7 +19,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -31,6 +29,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @Java110Listener(\"queryFeeByParkingSpace\")\n public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowListener {\n \n@@ -40,7 +40,6 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n     @Autowired\n     private IParkingSpaceInnerServiceSMO parkingSpaceInnerServiceSMOImpl;\n \n-\n     @Autowired\n     private IOwnerCarInnerServiceSMO ownerCarInnerServiceSMOImpl;\n \n@@ -59,6 +58,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n      *\n      * @param event \u65f6\u95f4\u5bf9\u8c61\n      */\n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n@@ -67,42 +67,31 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         validateFeeData(reqJson);\n         FeeDto feeDtoParamIn = BeanConvertUtil.covertBean(reqJson, FeeDto.class);\n         feeDtoParamIn.setPayerObjId(reqJson.getString(\"psId\"));\n-\n         List<FeeDto> feeDtos = feeInnerServiceSMOImpl.queryFees(feeDtoParamIn);\n         ResponseEntity<String> responseEntity = null;\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n-\n         ApiParkingSpaceFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiParkingSpaceFeeVo.class);\n \n         //\u505c\u8f66\u4f4d\u4fe1\u606f\n         ParkingSpaceDto parkingSpaceDto = BeanConvertUtil.covertBean(reqJson, ParkingSpaceDto.class);\n         List<ParkingSpaceDto> parkingSpaceDtos = parkingSpaceInnerServiceSMOImpl.queryParkingSpaces(parkingSpaceDto);\n-\n         Assert.listOnlyOne(parkingSpaceDtos, \"\u672a\u67e5\u8be2\u5230\u6216\u67e5\u8be2\u591a\u6761 \u8f66\u4f4d\u4fe1\u606f\");\n-\n         parkingSpaceDto = parkingSpaceDtos.get(0);\n-\n         BeanConvertUtil.covertBean(parkingSpaceDto, apiFeeVo);\n \n         //\u67e5\u8be2\u8f66\u8f86\u4fe1\u606f\n-        OwnerCarDto  ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n-\n+        OwnerCarDto ownerCarDto = BeanConvertUtil.covertBean(reqJson, OwnerCarDto.class);\n         List<OwnerCarDto> ownerCarDtos = ownerCarInnerServiceSMOImpl.queryOwnerCars(ownerCarDto);\n         Assert.listOnlyOne(ownerCarDtos, \"\u672a\u67e5\u8be2\u5230\u6216\u67e5\u8be2\u591a\u6761 \u8f66\u8f86\u4fe1\u606f\");\n         ownerCarDto = ownerCarDtos.get(0);\n-\n         BeanConvertUtil.covertBean(ownerCarDto, apiFeeVo);\n-\n-\n         responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n-\n-\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n@@ -111,11 +100,11 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n      *\n      * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n      */\n+\n+\n     private void validateFeeData(JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"psId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bpsId\u4fe1\u606f\");\n-\n-\n     }\n \n     @Override\n@@ -131,7 +120,6 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n     }\n \n-\n     public IParkingSpaceInnerServiceSMO getParkingSpaceInnerServiceSMOImpl() {\n         return parkingSpaceInnerServiceSMOImpl;\n     }\n@@ -140,7 +128,6 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         this.parkingSpaceInnerServiceSMOImpl = parkingSpaceInnerServiceSMOImpl;\n     }\n \n-\n     public IOwnerCarInnerServiceSMO getOwnerCarInnerServiceSMOImpl() {\n         return ownerCarInnerServiceSMOImpl;\n     }\n@@ -148,4 +135,4 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n     public void setOwnerCarInnerServiceSMOImpl(IOwnerCarInnerServiceSMO ownerCarInnerServiceSMOImpl) {\n         this.ownerCarInnerServiceSMOImpl = ownerCarInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..447465b14cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/507/QueryFeeByParkingSpaceListener.java\n@@ -73,7 +73,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/507/QueryFeeByParkingSpaceListener.java\nindex c73bb9ef6f8..447465b14cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/507/QueryFeeByParkingSpaceListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/507/QueryFeeByParkingSpaceListener.java\n@@ -73,7 +73,7 @@ public class QueryFeeByParkingSpaceListener extends AbstractServiceApiDataFlowLi\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
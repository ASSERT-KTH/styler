{
    "project_name": "java110-MicroCommunity",
    "error_id": "339",
    "information": {
        "errors": [
            {
                "line": "69",
                "column": "20",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "            responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n            dataFlowContext.setResponseEntity(responseEntity);\n            return ;\n        }\n\n        FeeDto feeDto = feeDtos.get(0);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..94e09c99d05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/339/QueryFeeByCarInoutListener.java\n@@ -66,7 +66,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..94e09c99d05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/339/QueryFeeByCarInoutListener.java\n@@ -66,7 +66,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..330e0b1d51f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/339/QueryFeeByCarInoutListener.java\n@@ -66,7 +66,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n@@ -102,4 +102,4 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n     public void setFeeInnerServiceSMOImpl(IFeeInnerServiceSMO feeInnerServiceSMOImpl) {\n         this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..ad09c9451e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/339/QueryFeeByCarInoutListener.java\n@@ -1,6 +1,5 @@\n package com.java110.api.listener.fee;\n \n-\n import com.alibaba.fastjson.JSONObject;\n import com.java110.api.listener.AbstractServiceApiDataFlowListener;\n import com.java110.core.annotation.Java110Listener;\n@@ -17,7 +16,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -28,6 +26,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @Java110Listener(\"queryFeeByCarInout\")\n public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListener {\n \n@@ -49,6 +49,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n      *\n      * @param event \u65f6\u95f4\u5bf9\u8c61\n      */\n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n@@ -60,22 +61,17 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         feeDtoParamIn.setState(reqJson.getString(\"state\"));\n         feeDtoParamIn.setFeeTypeCd(FeeTypeConstant.FEE_TYPE_TEMP_DOWN_PARKING_SPACE);\n         feeDtoParamIn.setFeeFlag(\"2006012\");\n-\n         List<FeeDto> feeDtos = feeInnerServiceSMOImpl.queryFees(feeDtoParamIn);\n         ResponseEntity<String> responseEntity = null;\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n-\n         ApiMainFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiMainFeeVo.class);\n-\n         responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n-\n-\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n@@ -84,6 +80,8 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n      *\n      * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n      */\n+\n+\n     private void validateFeeData(JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"inoutId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542binoutId\u4fe1\u606f\");\n@@ -102,4 +100,4 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n     public void setFeeInnerServiceSMOImpl(IFeeInnerServiceSMO feeInnerServiceSMOImpl) {\n         this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..94e09c99d05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/339/QueryFeeByCarInoutListener.java\n@@ -66,7 +66,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/339/QueryFeeByCarInoutListener.java\nindex e011604b76c..94e09c99d05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/339/QueryFeeByCarInoutListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/339/QueryFeeByCarInoutListener.java\n@@ -66,7 +66,7 @@ public class QueryFeeByCarInoutListener extends AbstractServiceApiDataFlowListen\n         if (feeDtos == null || feeDtos.size() == 0) {\n             responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n             dataFlowContext.setResponseEntity(responseEntity);\n-            return ;\n+            return;\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
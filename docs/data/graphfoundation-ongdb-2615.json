{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2615",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2615/BranchSelector.java\nindex ff69410662b..b5118aa0b55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2615/BranchSelector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n /**\n@@ -27,16 +28,16 @@ package org.neo4j.graphdb.traversal;\n  */\n public interface BranchSelector\n {\n-    /**\n-     * Decides the next position (\"where to go from here\") from the current\n-     * position, based on the {@code rules}. Since {@link TraversalBranch}\n-     * has the {@link TraversalBranch#endNode()} of the position and the\n-     * {@link TraversalBranch#lastRelationship()} to how it got there, decisions\n-     * can be based on the current expansion source and the given rules.\n-     *\n-     * @param metadata the context for the traversal\n-     * @return the next position based on the current position and the\n-     * {@code rules} of the traversal.\n-     */\n-    TraversalBranch next( TraversalContext metadata );\n+  /**\n+   * Decides the next position (\"where to go from here\") from the current\n+   * position, based on the {@code rules}. Since {@link TraversalBranch}\n+   * has the {@link TraversalBranch#endNode()} of the position and the\n+   * {@link TraversalBranch#lastRelationship()} to how it got there, decisions\n+   * can be based on the current expansion source and the given rules.\n+   *\n+   * @param metadata the context for the traversal\n+   * @return the next position based on the current position and the\n+   * {@code rules} of the traversal.\n+   */\n+  TraversalBranch next(TraversalContext metadata);\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2615/BranchSelector.java\nindex ff69410662b..0b0f06274f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2615/BranchSelector.java\n@@ -39,4 +39,4 @@ public interface BranchSelector\n      * {@code rules} of the traversal.\n      */\n     TraversalBranch next( TraversalContext metadata );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "6",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2615/BranchSelector.java\nindex ff69410662b..f98fd15fdf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2615/BranchSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2615/BranchSelector.java\n@@ -25,6 +25,7 @@ package org.neo4j.graphdb.traversal;\n  * \"breadth first\". This is an interface to implement if you'd like to implement\n  * f.ex. a \"best first\" selector based on your own criteria.\n  */\n+\n public interface BranchSelector\n {\n     /**\n@@ -38,5 +39,5 @@ public interface BranchSelector\n      * @return the next position based on the current position and the\n      * {@code rules} of the traversal.\n      */\n-    TraversalBranch next( TraversalContext metadata );\n-}\n+    TraversalBranch next( TraversalContext metadata )\n+    ;}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
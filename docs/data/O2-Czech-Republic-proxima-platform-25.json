{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    this.path = path;\n    this.writer =\n        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix)\n            .withConf(config)\n            .withWriteMode(Mode.OVERWRITE)\n            // For some reason Writer ignores settings this via withConf()",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/25/ProximaParquetWriter.java\nindex b7d619c3a29..0b31c4ee856 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/25/ProximaParquetWriter.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.bulk.fs.parquet;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -47,7 +48,8 @@ public class ProximaParquetWriter implements Writer {\n       throws IOException {\n     this.path = path;\n     this.writer =\n-        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix)\n+        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema,\n+            attributeNamesPrefix)\n             .withConf(config)\n             .withWriteMode(Mode.OVERWRITE)\n             // For some reason Writer ignores settings this via withConf()\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/25/ProximaParquetWriter.java\nindex b7d619c3a29..98995e0cc69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/25/ProximaParquetWriter.java\n@@ -43,9 +43,9 @@ public class ProximaParquetWriter implements Writer {\n       MessageType schema,\n       String attributeNamesPrefix,\n       CompressionCodecName compressionCodecName,\n-      Configuration config)\n-      throws IOException {\n-    this.path = path;\n+      Configuration config) throws IOException {\n+\n+  this.path = path;\n     this.writer =\n         new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix)\n             .withConf(config)\n@@ -55,12 +55,10 @@ public class ProximaParquetWriter implements Writer {\n             .withRowGroupSize(\n                 config.getInt(\n                     ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME,\n-                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n-            .withPageSize(\n+                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE)).withPageSize(\n                 config.getInt(\n                     ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME,\n-                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n-            .build();\n+                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE)).build();\n   }\n \n   @Override\n@@ -85,12 +83,12 @@ public class ProximaParquetWriter implements Writer {\n   private static class ParquetWriterBuilder\n       extends ParquetWriter.Builder<StreamElement, ParquetWriterBuilder> {\n \n-    private final MessageType parquetSchema;\n+  private final MessageType parquetSchema;\n     private final String attributeNamesPrefix;\n \n     private ParquetWriterBuilder(\n         OutputFile outputFile, MessageType parquetSchema, String attributeNamesPrefix) {\n-      super(outputFile);\n+  super(outputFile);\n       this.parquetSchema = parquetSchema;\n       this.attributeNamesPrefix = attributeNamesPrefix;\n     }\n@@ -176,4 +174,4 @@ public class ProximaParquetWriter implements Writer {\n       delegate.close();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'Path' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'MessageType' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'CompressionCodecName' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 12, expected is 107, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/25/ProximaParquetWriter.java\nindex b7d619c3a29..36f6c380db6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/25/ProximaParquetWriter.java\n@@ -32,6 +32,8 @@ import org.apache.parquet.io.PositionOutputStream;\n import org.apache.parquet.schema.MessageType;\n \n /** {@link Writer} for writing data in parquet format. */\n+\n+\n @Internal\n public class ProximaParquetWriter implements Writer {\n \n@@ -39,28 +41,18 @@ public class ProximaParquetWriter implements Writer {\n   private final ParquetWriter<StreamElement> writer;\n \n   public ProximaParquetWriter(\n-      Path path,\n-      MessageType schema,\n-      String attributeNamesPrefix,\n-      CompressionCodecName compressionCodecName,\n-      Configuration config)\n-      throws IOException {\n+    Path path,\n+    MessageType schema,\n+    String attributeNamesPrefix,\n+    CompressionCodecName compressionCodecName, Configuration config) throws IOException {\n     this.path = path;\n-    this.writer =\n-        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix)\n-            .withConf(config)\n-            .withWriteMode(Mode.OVERWRITE)\n+    this.writer = new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix).withConf(config)\n+                                                                                                           .withWriteMode(Mode.OVERWRITE)\n             // For some reason Writer ignores settings this via withConf()\n-            .withCompressionCodec(compressionCodecName)\n-            .withRowGroupSize(\n-                config.getInt(\n-                    ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME,\n-                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n-            .withPageSize(\n-                config.getInt(\n-                    ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME,\n-                    ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n-            .build();\n+                                                                                                           .withCompressionCodec(compressionCodecName)\n+                                                                                                           .withRowGroupSize(config.getInt(ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME, ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n+                                                                                                           .withPageSize(config.getInt(ParquetFileFormat.PARQUET_CONFIG_PAGE_SIZE_KEY_NAME, ParquetFileFormat.PARQUET_DEFAULT_PAGE_SIZE))\n+                                                                                                           .build();\n   }\n \n   @Override\n@@ -82,14 +74,12 @@ public class ProximaParquetWriter implements Writer {\n     return path;\n   }\n \n-  private static class ParquetWriterBuilder\n-      extends ParquetWriter.Builder<StreamElement, ParquetWriterBuilder> {\n+  private static class ParquetWriterBuilder extends ParquetWriter.Builder<StreamElement, ParquetWriterBuilder> {\n \n     private final MessageType parquetSchema;\n     private final String attributeNamesPrefix;\n \n-    private ParquetWriterBuilder(\n-        OutputFile outputFile, MessageType parquetSchema, String attributeNamesPrefix) {\n+    private ParquetWriterBuilder(OutputFile outputFile, MessageType parquetSchema, String attributeNamesPrefix) {\n       super(outputFile);\n       this.parquetSchema = parquetSchema;\n       this.attributeNamesPrefix = attributeNamesPrefix;\n@@ -176,4 +166,4 @@ public class ProximaParquetWriter implements Writer {\n       delegate.close();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/25/ProximaParquetWriter.java\nindex b7d619c3a29..1680490882c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/25/ProximaParquetWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/25/ProximaParquetWriter.java\n@@ -47,8 +47,7 @@ public class ProximaParquetWriter implements Writer {\n       throws IOException {\n     this.path = path;\n     this.writer =\n-        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix)\n-            .withConf(config)\n+        new ParquetWriterBuilder(new BulkOutputFile(path.writer()), schema, attributeNamesPrefix).withConf(config)\n             .withWriteMode(Mode.OVERWRITE)\n             // For some reason Writer ignores settings this via withConf()\n             .withCompressionCodec(compressionCodecName)\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
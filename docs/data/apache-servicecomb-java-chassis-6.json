{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "219",
                "column": "14",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "                  + \"&version=\" + HttpUtils.encodeURLParam(versionRule)\n                  + \"&rev=\" + HttpUtils.encodeURLParam(revision)\n              , headers, null);\n      FindMicroserviceInstancesResponse result = new FindMicroserviceInstancesResponse();\n      if (response.getStatusCode() == HttpStatus.SC_OK) {\n        result.setModified(true);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/6/ServiceCenterClient.java\nindex fdbd64a6ab2..579015613da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/6/ServiceCenterClient.java\n@@ -215,8 +215,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n           .getHttpRequest(\"/registry/instances?appId=\" + URLEncoder.encode(appId, \"UTF-8\")\r\n                   + \"&serviceName=\" + HttpUtils.encodeURLParam(serviceName)\r\n                   + \"&version=\" + HttpUtils.encodeURLParam(versionRule)\r\n-                  + \"&rev=\" + HttpUtils.encodeURLParam(revision)\r\n-              , headers, null);\r\n+                  + \"&rev=\" + HttpUtils.encodeURLParam(revision), headers, null);\r\n       FindMicroserviceInstancesResponse result = new FindMicroserviceInstancesResponse();\r\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         result.setModified(true);\r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "219",
                    "column": "14",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/6/ServiceCenterClient.java\nindex fdbd64a6ab2..d5745d33c73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/6/ServiceCenterClient.java\n@@ -65,9 +65,9 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n   }\r\n \r\n   public ServiceCenterClient(AddressManager addressManager, SSLProperties sslProperties,\r\n-      AKSKProperties akskProperties,\r\n-      String tenantName,\r\n-      Map<String, String> extraGlobalHeaders) {\r\n+                             AKSKProperties akskProperties,\r\n+                             String tenantName,\r\n+                             Map<String, String> extraGlobalHeaders) {\r\n     HttpTransport httpTransport = HttpTransportFactory.createHttpTransport(sslProperties, akskProperties);\r\n     httpTransport.addHeaders(extraGlobalHeaders);\r\n \r\n@@ -206,8 +206,8 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n \r\n   @Override\r\n   public FindMicroserviceInstancesResponse findMicroserviceInstance(String consumerId, String appId, String serviceName,\r\n-      String versionRule,\r\n-      String revision) {\r\n+                                                                    String versionRule,\r\n+                                                                    String revision) {\r\n     try {\r\n       Map<String, String> headers = new HashMap<>();\r\n       headers.put(\"X-ConsumerId\", consumerId);\r\n@@ -307,7 +307,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n \r\n   @Override\r\n   public boolean updateMicroserviceInstanceStatus(String serviceId, String instanceId,\r\n-      MicroserviceInstanceStatus status) {\r\n+                                                  MicroserviceInstanceStatus status) {\r\n     try {\r\n       HttpResponse response = httpClient.putHttpRequest(\r\n           \"/registry/microservices/\" + serviceId + \"/instances/\" + instanceId + \"/status?value=\" + status, null, null);\r\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "207",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 266).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/6/ServiceCenterClient.java\nindex fdbd64a6ab2..aa2d66ff213 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/6/ServiceCenterClient.java\n@@ -65,8 +65,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n   }\r\n \r\n   public ServiceCenterClient(AddressManager addressManager, SSLProperties sslProperties,\r\n-      AKSKProperties akskProperties,\r\n-      String tenantName,\r\n+      AKSKProperties akskProperties, String tenantName,\r\n       Map<String, String> extraGlobalHeaders) {\r\n     HttpTransport httpTransport = HttpTransportFactory.createHttpTransport(sslProperties, akskProperties);\r\n     httpTransport.addHeaders(extraGlobalHeaders);\r\n@@ -86,8 +85,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service-center instances fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -107,8 +105,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"register service fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -125,8 +122,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service List fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -149,8 +145,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n         return HttpUtils.deserialize(response.getContent(), RegisteredMicroserviceResponse.class);\r\n       } else {\r\n         LOGGER.info(\"Query serviceId fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-            .getMessage()\r\n-            + \"; content = \" + response.getContent());\r\n+            .getMessage() + \"; content = \" + response.getContent());\r\n         return null;\r\n       }\r\n     } catch (IOException e) {\r\n@@ -173,8 +168,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service message fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -189,14 +183,13 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       request.setInstance(instance);\r\n       HttpResponse response = httpClient\r\n           .postHttpRequest(\"/registry/microservices/\" + instance.getServiceId() + \"/instances\", null,\r\n-              HttpUtils.serialize(request));\r\n-      if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n+              HttpUtils.serialize(request));\n+if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         return HttpUtils.deserialize(response.getContent(), RegisteredMicroserviceInstanceResponse.class);\r\n       } else {\r\n         throw new OperationException(\r\n             \"register service instance fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -206,17 +199,12 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n \r\n   @Override\r\n   public FindMicroserviceInstancesResponse findMicroserviceInstance(String consumerId, String appId, String serviceName,\r\n-      String versionRule,\r\n-      String revision) {\r\n+      String versionRule, String revision) {\r\n     try {\r\n       Map<String, String> headers = new HashMap<>();\r\n       headers.put(\"X-ConsumerId\", consumerId);\r\n       HttpResponse response = httpClient\r\n-          .getHttpRequest(\"/registry/instances?appId=\" + URLEncoder.encode(appId, \"UTF-8\")\r\n-                  + \"&serviceName=\" + HttpUtils.encodeURLParam(serviceName)\r\n-                  + \"&version=\" + HttpUtils.encodeURLParam(versionRule)\r\n-                  + \"&rev=\" + HttpUtils.encodeURLParam(revision)\r\n-              , headers, null);\r\n+          .getHttpRequest(\"/registry/instances?appId=\" + URLEncoder.encode(appId, \"UTF-8\") + \"&serviceName=\" + HttpUtils.encodeURLParam(serviceName) + \"&version=\" + HttpUtils.encodeURLParam(versionRule) + \"&rev=\" + HttpUtils.encodeURLParam(revision), headers, null);\r\n       FindMicroserviceInstancesResponse result = new FindMicroserviceInstancesResponse();\r\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         result.setModified(true);\r\n@@ -230,8 +218,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service instances list fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -249,8 +236,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service instances list fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -270,8 +256,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service instance message fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -296,8 +281,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"delete service instance fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -317,8 +301,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"update service instance status fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -356,9 +339,8 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n     try {\r\n       HttpResponse response = httpClient\r\n           .putHttpRequest(\"/registry/microservices/\" + serviceId + \"/instances/\" + instanceId + \"/heartbeat\",\r\n-              null, null);\r\n-\r\n-      if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n+              null, null);\n+if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         return true;\r\n       } else {\r\n         throw new OperationException(\r\n@@ -389,8 +371,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service schemas list fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -416,8 +397,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       } else {\r\n         throw new OperationException(\r\n             \"get service schema context fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -430,14 +410,13 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n     try {\r\n       HttpResponse response = httpClient\r\n           .putHttpRequest(\"/registry/microservices/\" + serviceId + \"/schemas/\" + schemaId, null,\r\n-              HttpUtils.serialize(schema));\r\n-      if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n+              HttpUtils.serialize(schema));\n+if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         return true;\r\n       } else {\r\n         throw new OperationException(\r\n             \"update service schema fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -453,14 +432,13 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n       request.setSummary(schemaInfo.getSummary());\r\n       HttpResponse response = httpClient\r\n           .putHttpRequest(\"/registry/microservices/\" + serviceId + \"/schemas/\" + schemaInfo.getSchemaId(), null,\r\n-              HttpUtils.serialize(request));\r\n-      if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n+              HttpUtils.serialize(request));\n+if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         return true;\r\n       } else {\r\n         throw new OperationException(\r\n             \"update service schema fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n@@ -473,19 +451,18 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n     try {\r\n       HttpResponse response = httpClient\r\n           .postHttpRequest(\"/registry/microservices/\" + serviceId + \"/schemas\", null,\r\n-              HttpUtils.serialize(modifySchemasRequest));\r\n-      if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n+              HttpUtils.serialize(modifySchemasRequest));\n+if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         LOGGER.info(\"UPDATE SCHEMA OK\");\r\n         return true;\r\n       } else {\r\n         throw new OperationException(\r\n             \"update service schema fails, statusCode = \" + response.getStatusCode() + \"; message = \" + response\r\n-                .getMessage()\r\n-                + \"; content = \" + response.getContent());\r\n+                .getMessage() + \"; content = \" + response.getContent());\r\n       }\r\n     } catch (IOException e) {\r\n       throw new OperationException(\r\n           \"update service schema fails\", e);\r\n     }\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/6/ServiceCenterClient.java\nindex fdbd64a6ab2..579015613da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/6/ServiceCenterClient.java\n@@ -215,8 +215,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n           .getHttpRequest(\"/registry/instances?appId=\" + URLEncoder.encode(appId, \"UTF-8\")\r\n                   + \"&serviceName=\" + HttpUtils.encodeURLParam(serviceName)\r\n                   + \"&version=\" + HttpUtils.encodeURLParam(versionRule)\r\n-                  + \"&rev=\" + HttpUtils.encodeURLParam(revision)\r\n-              , headers, null);\r\n+                  + \"&rev=\" + HttpUtils.encodeURLParam(revision), headers, null);\r\n       FindMicroserviceInstancesResponse result = new FindMicroserviceInstancesResponse();\r\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         result.setModified(true);\r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/6/ServiceCenterClient.java\nindex fdbd64a6ab2..579015613da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/6/ServiceCenterClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/6/ServiceCenterClient.java\n@@ -215,8 +215,7 @@ public class ServiceCenterClient implements ServiceCenterOperation {\n           .getHttpRequest(\"/registry/instances?appId=\" + URLEncoder.encode(appId, \"UTF-8\")\r\n                   + \"&serviceName=\" + HttpUtils.encodeURLParam(serviceName)\r\n                   + \"&version=\" + HttpUtils.encodeURLParam(versionRule)\r\n-                  + \"&rev=\" + HttpUtils.encodeURLParam(revision)\r\n-              , headers, null);\r\n+                  + \"&rev=\" + HttpUtils.encodeURLParam(revision), headers, null);\r\n       FindMicroserviceInstancesResponse result = new FindMicroserviceInstancesResponse();\r\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\r\n         result.setModified(true);\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "277",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/277/DefaultReconciledTransactionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/277/DefaultReconciledTransactionTracker.java\nindex 1aae28bd450..3b6d183fdca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/277/DefaultReconciledTransactionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/277/DefaultReconciledTransactionTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.txtracking;\n \n import java.util.ArrayList;\n@@ -55,10 +56,10 @@ public class DefaultReconciledTransactionTracker implements ReconciledTransactio\n     private Collection<Long> outstanding = new ArrayList<>();\n     private long fixedId = NO_RECONCILED_TRANSACTION_ID;\n \n-    public DefaultReconciledTransactionTracker( LogService logService )\n+    public DefaultReconciledTransactionTracker(LogService logService)\n     {\n         initializationLock = new ReentrantReadWriteLock();\n-        log = logService.getInternalLog( getClass() );\n+        log = logService.getInternalLog(getClass());\n     }\n \n     @Override\n@@ -67,48 +68,45 @@ public class DefaultReconciledTransactionTracker implements ReconciledTransactio\n         initializationLock.writeLock().lock();\n         try\n         {\n-            if ( sequence == null )\n+            if (sequence == null)\n             {\n                 return;\n             }\n             fixedId = sequence.getHighestGapFreeNumber();\n             sequence = null;\n-        }\n-        finally\n+        } finally\n         {\n             initializationLock.writeLock().unlock();\n         }\n     }\n \n     @Override\n-    public void enable( long reconciledTransactionId )\n+    public void enable(long reconciledTransactionId)\n     {\n-        requireNonNegative( reconciledTransactionId );\n+        requireNonNegative(reconciledTransactionId);\n \n         initializationLock.writeLock().lock();\n         try\n         {\n-            if ( sequence == null )\n+            if (sequence == null)\n             {\n-                log.info( \"Enabling with transaction ID %s\", reconciledTransactionId );\n-            }\n-            else\n+                log.info(\"Enabling with transaction ID %s\", reconciledTransactionId);\n+            } else\n             {\n                 // This isn't expected to be used, but we leave the code path for robustness.\n-                log.warn( \"Enabling when not disabled with %s to transaction ID %s\", sequence, reconciledTransactionId );\n+                log.warn(\"Enabling when not disabled with %s to transaction ID %s\", sequence, reconciledTransactionId);\n             }\n-            sequence = new ArrayQueueOutOfOrderSequence( reconciledTransactionId, INITIAL_ARRAY_SIZE, NO_METADATA );\n+            sequence = new ArrayQueueOutOfOrderSequence(reconciledTransactionId, INITIAL_ARRAY_SIZE, NO_METADATA);\n             startingNumber = reconciledTransactionId;\n-            for ( long txId : outstanding )\n+            for (long txId : outstanding)\n             {\n-                if ( txId > reconciledTransactionId )\n+                if (txId > reconciledTransactionId)\n                 {\n-                    sequence.offer( txId, NO_METADATA );\n+                    sequence.offer(txId, NO_METADATA);\n                 }\n             }\n             outstanding.clear();\n-        }\n-        finally\n+        } finally\n         {\n             initializationLock.writeLock().unlock();\n         }\n@@ -121,45 +119,41 @@ public class DefaultReconciledTransactionTracker implements ReconciledTransactio\n         try\n         {\n             return sequence != null ? sequence.getHighestGapFreeNumber() : fixedId;\n-        }\n-        finally\n+        } finally\n         {\n             initializationLock.readLock().unlock();\n         }\n     }\n \n     @Override\n-    public void offerReconciledTransactionId( long reconciledTransactionId )\n+    public void offerReconciledTransactionId(long reconciledTransactionId)\n     {\n-        requireNonNegative( reconciledTransactionId );\n+        requireNonNegative(reconciledTransactionId);\n \n         initializationLock.readLock().lock();\n         try\n         {\n-            if ( sequence == null )\n+            if (sequence == null)\n             {\n-                log.info( \"Outstanding ID %s\", reconciledTransactionId );\n-                outstanding.add( reconciledTransactionId );\n-            }\n-            else if ( reconciledTransactionId < startingNumber )\n+                log.info(\"Outstanding ID %s\", reconciledTransactionId);\n+                outstanding.add(reconciledTransactionId);\n+            } else if (reconciledTransactionId < startingNumber)\n             {\n                 // this can happen when a store copy happens concurrently with a reconciliation\n-                log.info( \"Ignoring pre-enabled ID %s\", reconciledTransactionId );\n-            }\n-            else\n+                log.info(\"Ignoring pre-enabled ID %s\", reconciledTransactionId);\n+            } else\n             {\n                 var currentLastReconciledTxId = sequence.getHighestGapFreeNumber();\n \n                 // gap-free ID should always be lower than the given ID\n-                checkArgument( reconciledTransactionId > currentLastReconciledTxId,\n-                        \"Received illegal transaction ID %s which is lower than the current transaction ID %s. Sequence: %s\", reconciledTransactionId,\n-                        currentLastReconciledTxId, sequence );\n+                checkArgument(reconciledTransactionId > currentLastReconciledTxId,\n+                  \"Received illegal transaction ID %s which is lower than the current transaction ID %s. Sequence: %s\", reconciledTransactionId,\n+                  currentLastReconciledTxId, sequence);\n \n-                log.debug( \"Updating %s with transaction ID %s\", sequence, reconciledTransactionId );\n-                sequence.offer( reconciledTransactionId, NO_METADATA );\n+                log.debug(\"Updating %s with transaction ID %s\", sequence, reconciledTransactionId);\n+                sequence.offer(reconciledTransactionId, NO_METADATA);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             initializationLock.readLock().unlock();\n         }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "moquette-io-moquette",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "warning",
                "message": "two or more consecutive empty lines",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
            }
        ]
    },
    "source_code": "            m_qos = qos;\n            m_payload = message;\n            m_topic = topic;\n        }\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler/6/IMessagesStore.java\nindex 209834a2398..50142191bf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler/6/IMessagesStore.java\n@@ -41,11 +41,7 @@ public interface IMessagesStore {\n         public StoredMessage(byte[] message, MqttQoS qos, String topic) {\n             m_qos = qos;\n             m_payload = message;\n-            m_topic = topic;\n-        }\n-\n-\n-        public void setQos(MqttQoS qos) {\n+            m_topic = topic ; } public void setQos(MqttQoS qos) {\n             this.m_qos = qos;\n         }\n \n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/6/IMessagesStore.java\nindex 209834a2398..50211172deb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/6/IMessagesStore.java\n@@ -28,85 +28,84 @@ import java.util.Collection;\n  */\n public interface IMessagesStore {\n \n-    class StoredMessage implements Serializable {\n-\n-        private static final long serialVersionUID = 1755296138639817304L;\n-        private MqttQoS m_qos;\n-        final byte[] m_payload;\n-        final String m_topic;\n-        private boolean m_retained;\n-        private String m_clientID;\n-        private MessageGUID m_guid;\n-\n-        public StoredMessage(byte[] message, MqttQoS qos, String topic) {\n-            m_qos = qos;\n-            m_payload = message;\n-            m_topic = topic;\n-        }\n-\n-\n-        public void setQos(MqttQoS qos) {\n-            this.m_qos = qos;\n-        }\n-\n-        public MqttQoS getQos() {\n-            return m_qos;\n-        }\n-\n-        public String getTopic() {\n-            return m_topic;\n-        }\n-\n-        public void setGuid(MessageGUID guid) {\n-            this.m_guid = guid;\n-        }\n-\n-        public MessageGUID getGuid() {\n-            return m_guid;\n-        }\n-\n-        public String getClientID() {\n-            return m_clientID;\n-        }\n-\n-        public void setClientID(String m_clientID) {\n-            this.m_clientID = m_clientID;\n-        }\n-\n-        public ByteBuf getPayload() {\n-            return Unpooled.copiedBuffer(m_payload);\n-        }\n-\n-        public void setRetained(boolean retained) {\n-            this.m_retained = retained;\n-        }\n-\n-        public boolean isRetained() {\n-            return m_retained;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return \"PublishEvent{clientID='\" + m_clientID + '\\'' + \", m_retain=\"\n-                    + m_retained + \", m_qos=\" + m_qos + \", m_topic='\" + m_topic + '\\'' + '}';\n-        }\n+  class StoredMessage implements Serializable {\n+\n+    private static final long serialVersionUID = 1755296138639817304L;\n+    private MqttQoS m_qos;\n+    final byte[] m_payload;\n+    final String m_topic;\n+    private boolean m_retained;\n+    private String m_clientID;\n+    private MessageGUID m_guid;\n+\n+    public StoredMessage(byte[] message, MqttQoS qos, String topic) {\n+      m_qos = qos;\n+      m_payload = message;\n+      m_topic = topic;\n     }\n \n-    /**\n-     * Used to initialize all persistent store structures\n-     */\n-    void initStore();\n \n-    /**\n-     * Return a list of retained messages that satisfy the condition.\n-     *\n-     * @param condition\n-     *            the condition to match during the search.\n-     * @return the collection of matching messages.\n-     */\n-    Collection<StoredMessage> searchMatching(IMatchingCondition condition);\n+    public void setQos(MqttQoS qos) {\n+      this.m_qos = qos;\n+    }\n+\n+    public MqttQoS getQos() {\n+      return m_qos;\n+    }\n+\n+    public String getTopic() {\n+      return m_topic;\n+    }\n+\n+    public void setGuid(MessageGUID guid) {\n+      this.m_guid = guid;\n+    }\n+\n+    public MessageGUID getGuid() {\n+      return m_guid;\n+    }\n+\n+    public String getClientID() {\n+      return m_clientID;\n+    }\n+\n+    public void setClientID(String m_clientID) {\n+      this.m_clientID = m_clientID;\n+    }\n+\n+    public ByteBuf getPayload() {\n+      return Unpooled.copiedBuffer(m_payload);\n+    }\n+\n+    public void setRetained(boolean retained) {\n+      this.m_retained = retained;\n+    }\n+\n+    public boolean isRetained() {\n+      return m_retained;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return \"PublishEvent{clientID='\" + m_clientID + '\\'' + \", m_retain=\"\n+          + m_retained + \", m_qos=\" + m_qos + \", m_topic='\" + m_topic + '\\'' + '}';\n+    }\n+  }\n+\n+  /**\n+   * Used to initialize all persistent store structures\n+   */\n+  void initStore();\n+\n+  /**\n+   * Return a list of retained messages that satisfy the condition.\n+   *\n+   * @param condition the condition to match during the search.\n+   * @return the collection of matching messages.\n+   */\n+  Collection<StoredMessage> searchMatching(IMatchingCondition condition);\n \n-    void cleanRetained(Topic topic);\n+  void cleanRetained(Topic topic);\n \n-    void storeRetained(Topic topic, StoredMessage storedMessage);\n+  void storeRetained(Topic topic, StoredMessage storedMessage);\n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/6/IMessagesStore.java\nindex 209834a2398..7a0b7d14b4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/6/IMessagesStore.java\n@@ -44,8 +44,7 @@ public interface IMessagesStore {\n             m_topic = topic;\n         }\n \n-\n-        public void setQos(MqttQoS qos) {\n+public void setQos(MqttQoS qos) {\n             this.m_qos = qos;\n         }\n \n@@ -109,4 +108,4 @@ public interface IMessagesStore {\n     void cleanRetained(Topic topic);\n \n     void storeRetained(Topic topic, StoredMessage storedMessage);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/6/IMessagesStore.java\nindex 209834a2398..53673bdc460 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/6/IMessagesStore.java\n@@ -26,6 +26,8 @@ import java.util.Collection;\n /**\n  * Defines the SPI to be implemented by a StorageService that handle persistence of messages\n  */\n+\n+\n public interface IMessagesStore {\n \n     class StoredMessage implements Serializable {\n@@ -44,7 +46,6 @@ public interface IMessagesStore {\n             m_topic = topic;\n         }\n \n-\n         public void setQos(MqttQoS qos) {\n             this.m_qos = qos;\n         }\n@@ -87,14 +88,15 @@ public interface IMessagesStore {\n \n         @Override\n         public String toString() {\n-            return \"PublishEvent{clientID='\" + m_clientID + '\\'' + \", m_retain=\"\n-                    + m_retained + \", m_qos=\" + m_qos + \", m_topic='\" + m_topic + '\\'' + '}';\n+            return \"PublishEvent{clientID='\" + m_clientID + '\\'' + \", m_retain=\" + m_retained + \", m_qos=\" + m_qos + \", m_topic='\" + m_topic + '\\'' + '}';\n         }\n     }\n \n     /**\n      * Used to initialize all persistent store structures\n      */\n+\n+\n     void initStore();\n \n     /**\n@@ -104,9 +106,11 @@ public interface IMessagesStore {\n      *            the condition to match during the search.\n      * @return the collection of matching messages.\n      */\n+\n+\n     Collection<StoredMessage> searchMatching(IMatchingCondition condition);\n \n     void cleanRetained(Topic topic);\n \n     void storeRetained(Topic topic, StoredMessage storedMessage);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_three_grams/6/IMessagesStore.java\nindex 209834a2398..50142191bf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/6/IMessagesStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/styler_three_grams/6/IMessagesStore.java\n@@ -41,11 +41,7 @@ public interface IMessagesStore {\n         public StoredMessage(byte[] message, MqttQoS qos, String topic) {\n             m_qos = qos;\n             m_payload = message;\n-            m_topic = topic;\n-        }\n-\n-\n-        public void setQos(MqttQoS qos) {\n+            m_topic = topic ; } public void setQos(MqttQoS qos) {\n             this.m_qos = qos;\n         }\n \n",
            "diff_size": 5
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff",
        "styler_random"
    ]
}
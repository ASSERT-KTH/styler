{
    "project_name": "graphfoundation-ongdb",
    "error_id": "507",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/507/InwardKernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/507/InwardKernel.java\nindex ac6ccce009f..fa41b5efb52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/507/InwardKernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/507/InwardKernel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api;\n \n import org.neo4j.internal.kernel.api.Kernel;\n@@ -30,7 +31,7 @@ import org.neo4j.kernel.api.proc.CallableUserFunction;\n /**\n  * The main API through which access to the Neo4j kernel is made, both read\n  * and write operations are supported as well as creating transactions.\n- *\n+ * <p>\n  * Changes to the graph (i.e. write operations) are performed via a\n  * {@link #newTransaction(KernelTransaction.Type, LoginContext) transaction context} where changes done\n  * inside the transaction are visible in read operations for {@link Statement statements}\n@@ -38,54 +39,55 @@ import org.neo4j.kernel.api.proc.CallableUserFunction;\n  */\n public interface InwardKernel extends Kernel\n {\n-    /**\n-     * Creates and returns a new {@link KernelTransaction} capable of modifying the\n-     * underlying graph.\n-     *\n-     * @param type the type of the new transaction: implicit (internally created) or explicit (created by the user)\n-     * @param loginContext transaction login context\n-     */\n-    KernelTransaction newTransaction( KernelTransaction.Type type, LoginContext loginContext ) throws TransactionFailureException;\n+  /**\n+   * Creates and returns a new {@link KernelTransaction} capable of modifying the\n+   * underlying graph.\n+   *\n+   * @param type         the type of the new transaction: implicit (internally created) or explicit (created by the user)\n+   * @param loginContext transaction login context\n+   */\n+  KernelTransaction newTransaction(KernelTransaction.Type type, LoginContext loginContext) throws TransactionFailureException;\n \n-    /**\n-     * Creates and returns a new {@link KernelTransaction} capable of modifying the\n-     * underlying graph with custom timeout in milliseconds.\n-     *\n-     * @param type the type of the new transaction: implicit (internally created) or explicit (created by the user)\n-     * @param loginContext transaction login context\n-     * @param timeout transaction timeout in millisiseconds\n-     */\n-    KernelTransaction newTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout )\n-            throws TransactionFailureException;\n+  /**\n+   * Creates and returns a new {@link KernelTransaction} capable of modifying the\n+   * underlying graph with custom timeout in milliseconds.\n+   *\n+   * @param type         the type of the new transaction: implicit (internally created) or explicit (created by the user)\n+   * @param loginContext transaction login context\n+   * @param timeout      transaction timeout in millisiseconds\n+   */\n+  KernelTransaction newTransaction(KernelTransaction.Type type, LoginContext loginContext, long timeout)\n+      throws TransactionFailureException;\n \n-    /**\n-     * Registers a {@link TransactionHook} that will receive notifications about committing transactions\n-     * and the changes they commit.\n-     * @param hook {@link TransactionHook} for receiving notifications about transactions to commit.\n-     */\n-    void registerTransactionHook( TransactionHook hook );\n+  /**\n+   * Registers a {@link TransactionHook} that will receive notifications about committing transactions\n+   * and the changes they commit.\n+   *\n+   * @param hook {@link TransactionHook} for receiving notifications about transactions to commit.\n+   */\n+  void registerTransactionHook(TransactionHook hook);\n \n-    /**\n-     * Register a procedure that should be available from this kernel. This is not a transactional method, the procedure is not\n-     * durably stored, and is not propagated in a cluster.\n-     *\n-     * @param procedure procedure to register\n-     */\n-    void registerProcedure( CallableProcedure procedure ) throws ProcedureException;\n+  /**\n+   * Register a procedure that should be available from this kernel. This is not a transactional method, the procedure is not\n+   * durably stored, and is not propagated in a cluster.\n+   *\n+   * @param procedure procedure to register\n+   */\n+  void registerProcedure(CallableProcedure procedure) throws ProcedureException;\n \n-    /**\n-     * Register a function that should be available from this kernel. This is not a transactional method, the function is not\n-     * durably stored, and is not propagated in a cluster.\n-     *\n-     * @param function function to register\n-     */\n-    void registerUserFunction( CallableUserFunction function ) throws ProcedureException;\n+  /**\n+   * Register a function that should be available from this kernel. This is not a transactional method, the function is not\n+   * durably stored, and is not propagated in a cluster.\n+   *\n+   * @param function function to register\n+   */\n+  void registerUserFunction(CallableUserFunction function) throws ProcedureException;\n \n-    /**\n-     * Register an aggregation function that should be available from this kernel. This is not a transactional method, the function is not\n-     * durably stored, and is not propagated in a cluster.\n-     *\n-     * @param function function to register\n-     */\n-    void registerUserAggregationFunction( CallableUserAggregationFunction function ) throws ProcedureException;\n+  /**\n+   * Register an aggregation function that should be available from this kernel. This is not a transactional method, the function is not\n+   * durably stored, and is not propagated in a cluster.\n+   *\n+   * @param function function to register\n+   */\n+  void registerUserAggregationFunction(CallableUserAggregationFunction function) throws ProcedureException;\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/507/InwardKernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/507/InwardKernel.java\nindex ac6ccce009f..e6aa2037c04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/507/InwardKernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/507/InwardKernel.java\n@@ -55,10 +55,9 @@ public interface InwardKernel extends Kernel\n      * @param loginContext transaction login context\n      * @param timeout transaction timeout in millisiseconds\n      */\n-    KernelTransaction newTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout )\n-            throws TransactionFailureException;\n+    KernelTransaction newTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout ) throws TransactionFailureException;\n \n-    /**\n+/**\n      * Registers a {@link TransactionHook} that will receive notifications about committing transactions\n      * and the changes they commit.\n      * @param hook {@link TransactionHook} for receiving notifications about transactions to commit.\n@@ -88,4 +87,4 @@ public interface InwardKernel extends Kernel\n      * @param function function to register\n      */\n     void registerUserAggregationFunction( CallableUserAggregationFunction function ) throws ProcedureException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
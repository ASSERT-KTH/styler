{
    "project_name": "neo4j-neo4j",
    "error_id": "1112",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "95",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "333",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "338",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "370",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "388",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "395",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "432",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "535",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "610",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "610",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "652",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "670",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "676",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "692",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "729",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "735",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "749",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "752",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "761",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "764",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "784",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "784",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "790",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "790",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "800",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "815",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "815",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "821",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "825",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "825",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "825",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "830",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "840",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "840",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "846",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "846",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "850",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "850",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "855",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "855",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "104",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "864",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "864",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "871",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "871",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "871",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "878",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "895",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "895",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "903",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "903",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "906",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "906",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "923",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "923",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "930",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "930",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "933",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "933",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "939",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "939",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "941",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "941",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "955",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "955",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "964",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "964",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "986",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "986",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "995",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "995",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1000",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1000",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1006",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1006",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1018",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1018",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1018",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1022",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1022",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1036",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1036",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1051",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1051",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1055",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1055",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1059",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1059",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1064",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1066",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1067",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1073",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1073",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1079",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1079",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1089",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1089",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1127",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1127",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1148",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1148",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1163",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1163",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1167",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1167",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1172",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1172",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1188",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1188",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1190",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1190",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1203",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1203",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1205",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1205",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1207",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1207",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1209",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1209",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1112/Config.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1112/Config.java\nindex 8c7924cc05c..f19f975e80e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1112/Config.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1112/Config.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import org.apache.commons.exec.CommandLine;\n@@ -83,193 +84,191 @@ public class Config implements Configuration\n         private final Collection<Class<? extends SettingsDeclaration>> settingsClasses = new HashSet<>();\n         private final Collection<Class<? extends GroupSetting>> groupSettingClasses = new HashSet<>();\n         private final Collection<SettingMigrator> settingMigrators = new HashSet<>();\n-        private final Map<String,String> settingValueStrings = new HashMap<>();\n-        private final Map<String,Object> settingValueObjects = new HashMap<>();\n-        private final Map<String,Object> overriddenDefaults = new HashMap<>();\n+        private final Map<String, String> settingValueStrings = new HashMap<>();\n+        private final Map<String, Object> settingValueObjects = new HashMap<>();\n+        private final Map<String, Object> overriddenDefaults = new HashMap<>();\n         private final List<Path> configFiles = new ArrayList<>();\n         private Config fromConfig;\n         private final Log log = new BufferingLog();\n         private boolean expandCommands;\n \n-        private static boolean allowedToLogOverriddenValues( String setting )\n+        private static boolean allowedToLogOverriddenValues(String setting)\n         {\n-            return !Objects.equals( setting, ExternalSettings.additional_jvm.name() );\n+            return !Objects.equals(setting, ExternalSettings.additional_jvm.name());\n         }\n \n-        private void overrideSettingValue( String setting, Object value )\n+        private void overrideSettingValue(String setting, Object value)\n         {\n             String msg = \"The '%s' setting is overridden. Setting value changed from '%s' to '%s'.\";\n-            if ( settingValueStrings.containsKey( setting ) && allowedToLogOverriddenValues( setting ) )\n+            if (settingValueStrings.containsKey(setting) && allowedToLogOverriddenValues(setting))\n             {\n-                log.warn( msg, setting, settingValueStrings.remove( setting ), value );\n+                log.warn(msg, setting, settingValueStrings.remove(setting), value);\n             }\n \n-            if ( settingValueObjects.containsKey( setting ) )\n+            if (settingValueObjects.containsKey(setting))\n             {\n-                log.warn( msg, setting, settingValueObjects.remove( setting ), value );\n+                log.warn(msg, setting, settingValueObjects.remove(setting), value);\n             }\n         }\n \n-        private Builder setRaw( String setting, String value )\n+        private Builder setRaw(String setting, String value)\n         {\n-            overrideSettingValue( setting, value );\n-            settingValueStrings.put( setting, value );\n+            overrideSettingValue(setting, value);\n+            settingValueStrings.put(setting, value);\n             return this;\n         }\n \n-        private Builder set( String setting, Object value )\n+        private Builder set(String setting, Object value)\n         {\n-            overrideSettingValue( setting, value );\n-            settingValueObjects.put( setting, value );\n+            overrideSettingValue(setting, value);\n+            settingValueObjects.put(setting, value);\n             return this;\n         }\n \n-        public Builder setRaw( Map<String,String> settingValues )\n+        public Builder setRaw(Map<String, String> settingValues)\n         {\n-            settingValues.forEach( this::setRaw );\n+            settingValues.forEach(this::setRaw);\n             return this;\n         }\n \n-        public <T> Builder set( Setting<T> setting, T value )\n+        public <T> Builder set(Setting<T> setting, T value)\n         {\n-            return set( setting.name(), value );\n+            return set(setting.name(), value);\n         }\n \n-        public Builder set( Map<Setting<?>,Object> settingValues )\n+        public Builder set(Map<Setting<?>, Object> settingValues)\n         {\n-            settingValues.forEach( ( setting, value ) -> set( setting.name(), value )  );\n+            settingValues.forEach((setting, value) -> set(setting.name(), value));\n             return this;\n         }\n \n-        private Builder setDefault( String setting, Object value )\n+        private Builder setDefault(String setting, Object value)\n         {\n-            if ( overriddenDefaults.containsKey( setting ) && allowedToLogOverriddenValues( setting ) )\n+            if (overriddenDefaults.containsKey(setting) && allowedToLogOverriddenValues(setting))\n             {\n-                log.warn( \"The overridden default value of '%s' setting is overridden. Setting value changed from '%s' to '%s'.\", setting,\n-                        overriddenDefaults.get( setting ), value );\n+                log.warn(\"The overridden default value of '%s' setting is overridden. Setting value changed from '%s' to '%s'.\", setting,\n+                  overriddenDefaults.get(setting), value);\n             }\n-            overriddenDefaults.put( setting, value );\n+            overriddenDefaults.put(setting, value);\n             return this;\n         }\n \n-        public Builder setDefaults( Map<Setting<?>, Object> overriddenDefaults )\n+        public Builder setDefaults(Map<Setting<?>, Object> overriddenDefaults)\n         {\n-            overriddenDefaults.forEach( ( setting, value ) -> setDefault( setting.name(), value )  );\n+            overriddenDefaults.forEach((setting, value) -> setDefault(setting.name(), value));\n             return this;\n         }\n \n-        public <T> Builder setDefault( Setting<T> setting, T value )\n+        public <T> Builder setDefault(Setting<T> setting, T value)\n         {\n-            return setDefault( setting.name(), value );\n+            return setDefault(setting.name(), value);\n         }\n \n-        public Builder remove( Setting<?> setting )\n+        public Builder remove(Setting<?> setting)\n         {\n-            settingValueStrings.remove( setting.name() );\n-            settingValueObjects.remove( setting.name() );\n+            settingValueStrings.remove(setting.name());\n+            settingValueObjects.remove(setting.name());\n             return this;\n         }\n \n-        public Builder removeDefault( Setting<?> setting )\n+        public Builder removeDefault(Setting<?> setting)\n         {\n-            overriddenDefaults.remove( setting.name() );\n+            overriddenDefaults.remove(setting.name());\n             return this;\n         }\n \n-        Builder addSettingsClass( Class<? extends SettingsDeclaration> settingsClass )\n+        Builder addSettingsClass(Class<? extends SettingsDeclaration> settingsClass)\n         {\n-            this.settingsClasses.add( settingsClass );\n+            this.settingsClasses.add(settingsClass);\n             return this;\n         }\n \n-        Builder addGroupSettingClass( Class<? extends GroupSetting> groupSettingClass )\n+        Builder addGroupSettingClass(Class<? extends GroupSetting> groupSettingClass)\n         {\n-            this.groupSettingClasses.add( groupSettingClass );\n+            this.groupSettingClasses.add(groupSettingClass);\n             return this;\n         }\n \n-        public Builder addMigrator( SettingMigrator migrator )\n+        public Builder addMigrator(SettingMigrator migrator)\n         {\n-            this.settingMigrators.add( migrator );\n+            this.settingMigrators.add(migrator);\n             return this;\n         }\n \n-        public Builder fromConfig( Config config )\n+        public Builder fromConfig(Config config)\n         {\n-            if ( fromConfig != null )\n+            if (fromConfig != null)\n             {\n-                throw new IllegalArgumentException( \"Can only build a config from one other config.\" );\n+                throw new IllegalArgumentException(\"Can only build a config from one other config.\");\n             }\n             fromConfig = config;\n             return this;\n         }\n \n-        public Builder fromFileNoThrow( Path path )\n+        public Builder fromFileNoThrow(Path path)\n         {\n-            if ( path != null )\n+            if (path != null)\n             {\n-                fromFile( path, false );\n+                fromFile(path, false);\n             }\n             return this;\n         }\n \n-        public Builder fromFile( Path cfg )\n+        public Builder fromFile(Path cfg)\n         {\n-            return fromFile( cfg, true );\n+            return fromFile(cfg, true);\n         }\n \n-        private Builder fromFile( Path file, boolean allowThrow )\n+        private Builder fromFile(Path file, boolean allowThrow)\n         {\n-            if ( file == null || Files.notExists( file ) )\n+            if (file == null || Files.notExists(file))\n             {\n-                if ( allowThrow )\n+                if (allowThrow)\n                 {\n-                    throw new IllegalArgumentException( new IOException( \"Config file [\" + file + \"] does not exist.\" ) );\n+                    throw new IllegalArgumentException(new IOException(\"Config file [\" + file + \"] does not exist.\"));\n                 }\n-                log.warn( \"Config file [%s] does not exist.\", file );\n+                log.warn(\"Config file [%s] does not exist.\", file);\n                 return this;\n             }\n \n             try\n             {\n-                if ( Files.isDirectory( file ) )\n+                if (Files.isDirectory(file))\n                 {\n-                    Files.walkFileTree( file, new ConfigDirectoryFileVisitor( file ) );\n-                }\n-                else\n+                    Files.walkFileTree(file, new ConfigDirectoryFileVisitor(file));\n+                } else\n                 {\n-                    try ( InputStream stream = Files.newInputStream( file ) )\n+                    try (InputStream stream = Files.newInputStream(file))\n                     {\n                         new Properties()\n                         {\n                             @Override\n-                            public synchronized Object put( Object key, Object value )\n+                            public synchronized Object put(Object key, Object value)\n                             {\n-                                setRaw( key.toString(), value.toString() );\n+                                setRaw(key.toString(), value.toString());\n                                 return null;\n                             }\n-                        }.load( stream );\n+                        }.load(stream);\n                     }\n-                    configFiles.add( file );\n+                    configFiles.add(file);\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                if ( allowThrow )\n+                if (allowThrow)\n                 {\n-                    throw new IllegalArgumentException( \"Unable to load config file [\" + file + \"].\", e );\n+                    throw new IllegalArgumentException(\"Unable to load config file [\" + file + \"].\", e);\n                 }\n-                log.error( \"Unable to load config file [%s]: %s\", file, e.getMessage() );\n+                log.error(\"Unable to load config file [%s]: %s\", file, e.getMessage());\n             }\n             return this;\n         }\n \n         public Builder allowCommandExpansion()\n         {\n-            return commandExpansion( true );\n+            return commandExpansion(true);\n         }\n \n-        public Builder commandExpansion( boolean expandCommands )\n+        public Builder commandExpansion(boolean expandCommands)\n         {\n             this.expandCommands = expandCommands;\n             return this;\n@@ -283,122 +282,117 @@ public class Config implements Configuration\n         public Config build()\n         {\n             expandCommands |= fromConfig != null && fromConfig.expandCommands; //inherit expandCommands from another config\n-            if ( expandCommands )\n+            if (expandCommands)\n             {\n-                validateFilePermissionForCommandExpansion( configFiles );\n+                validateFilePermissionForCommandExpansion(configFiles);\n             }\n-            return new Config( settingsClasses, groupSettingClasses, settingMigrators, settingValueStrings, settingValueObjects, overriddenDefaults,\n-                    fromConfig, log, expandCommands );\n+            return new Config(settingsClasses, groupSettingClasses, settingMigrators, settingValueStrings, settingValueObjects, overriddenDefaults,\n+              fromConfig, log, expandCommands);\n         }\n \n-        private void validateFilePermissionForCommandExpansion( List<Path> files )\n+        private void validateFilePermissionForCommandExpansion(List<Path> files)\n         {\n-            if ( files.isEmpty() )\n+            if (files.isEmpty())\n             {\n                 return;\n             }\n             String processOwner = SystemUtils.getUserName();\n-            if ( SystemUtils.IS_OS_UNIX )\n+            if (SystemUtils.IS_OS_UNIX)\n             {\n-                String processGroup = executeCommand( \"id -gn\", config_command_evaluation_timeout.defaultValue() );\n+                String processGroup = executeCommand(\"id -gn\", config_command_evaluation_timeout.defaultValue());\n \n-                for ( Path path : files )\n+                for (Path path : files)\n                 {\n                     try\n                     {\n-                        final Set<PosixFilePermission> unixPermission600 = Set.of( PosixFilePermission.OWNER_READ, PosixFilePermission.OWNER_WRITE );\n-                        PosixFileAttributes attrs = Files.getFileAttributeView( path, PosixFileAttributeView.class ).readAttributes();\n+                        final Set<PosixFilePermission> unixPermission600 = Set.of(PosixFilePermission.OWNER_READ, PosixFilePermission.OWNER_WRITE);\n+                        PosixFileAttributes attrs = Files.getFileAttributeView(path, PosixFileAttributeView.class).readAttributes();\n                         Set<PosixFilePermission> permissions = attrs.permissions();\n-                        if ( !unixPermission600.containsAll( permissions ) ) //actual permission is a subset of required ones\n+                        if (!unixPermission600.containsAll(permissions)) //actual permission is a subset of required ones\n                         {\n                             throw new IllegalArgumentException(\n-                                    format( \"%s does not have the correct file permissions to evaluate commands. Has %s, requires at most %s.\", path,\n-                                            permissions, unixPermission600 ) );\n+                              format(\"%s does not have the correct file permissions to evaluate commands. Has %s, requires at most %s.\", path,\n+                                permissions, unixPermission600));\n                         }\n \n                         String fileOwner = attrs.owner().getName();\n-                        if ( !fileOwner.equals( processOwner ) )\n+                        if (!fileOwner.equals(processOwner))\n                         {\n                             throw new IllegalArgumentException(\n-                                    format( \"%s does not have the correct file owner to evaluate commands. Has %s, requires %s.\", path, fileOwner,\n-                                            processOwner ) );\n+                              format(\"%s does not have the correct file owner to evaluate commands. Has %s, requires %s.\", path, fileOwner,\n+                                processOwner));\n                         }\n \n                         String fileGroup = attrs.group().getName();\n-                        if ( !fileGroup.equals( processGroup ) )\n+                        if (!fileGroup.equals(processGroup))\n                         {\n                             throw new IllegalArgumentException(\n-                                    format( \"%s does not have the correct file group to evaluate commands. Has %s, requires %s.\", path, fileGroup,\n-                                            processGroup ) );\n+                              format(\"%s does not have the correct file group to evaluate commands. Has %s, requires %s.\", path, fileGroup,\n+                                processGroup));\n                         }\n-                    }\n-                    catch ( IOException | UnsupportedOperationException e )\n+                    } catch (IOException | UnsupportedOperationException e)\n                     {\n-                        throw new IllegalStateException( \"Unable to access file permissions for \" + path, e );\n+                        throw new IllegalStateException(\"Unable to access file permissions for \" + path, e);\n                     }\n                 }\n-            }\n-            else if ( SystemUtils.IS_OS_WINDOWS )\n+            } else if (SystemUtils.IS_OS_WINDOWS)\n             {\n-                for ( Path path : files )\n+                for (Path path : files)\n                 {\n                     try\n                     {\n-                        AclFileAttributeView attrs = Files.getFileAttributeView( path, AclFileAttributeView.class );\n+                        AclFileAttributeView attrs = Files.getFileAttributeView(path, AclFileAttributeView.class);\n                         UserPrincipal owner = attrs.getOwner();\n \n                         final Set<AclEntryPermission> windowsUserNoExecute = Set.of( //All but execute for owner\n-                                AclEntryPermission.READ_DATA, AclEntryPermission.WRITE_DATA, AclEntryPermission.APPEND_DATA,\n-                                AclEntryPermission.READ_ATTRIBUTES, AclEntryPermission.WRITE_ATTRIBUTES,\n-                                AclEntryPermission.READ_NAMED_ATTRS, AclEntryPermission.WRITE_NAMED_ATTRS,\n-                                AclEntryPermission.READ_ACL, AclEntryPermission.WRITE_ACL,\n-                                AclEntryPermission.DELETE, AclEntryPermission.DELETE_CHILD,\n-                                AclEntryPermission.WRITE_OWNER, AclEntryPermission.SYNCHRONIZE\n+                          AclEntryPermission.READ_DATA, AclEntryPermission.WRITE_DATA, AclEntryPermission.APPEND_DATA,\n+                          AclEntryPermission.READ_ATTRIBUTES, AclEntryPermission.WRITE_ATTRIBUTES,\n+                          AclEntryPermission.READ_NAMED_ATTRS, AclEntryPermission.WRITE_NAMED_ATTRS,\n+                          AclEntryPermission.READ_ACL, AclEntryPermission.WRITE_ACL,\n+                          AclEntryPermission.DELETE, AclEntryPermission.DELETE_CHILD,\n+                          AclEntryPermission.WRITE_OWNER, AclEntryPermission.SYNCHRONIZE\n                         );\n-                        for ( AclEntry acl : attrs.getAcl() )\n+                        for (AclEntry acl : attrs.getAcl())\n                         {\n                             Set<AclEntryPermission> permissions = acl.permissions();\n-                            if ( AclEntryType.ALLOW.equals( acl.type() ) )\n+                            if (AclEntryType.ALLOW.equals(acl.type()))\n                             {\n-                                if ( acl.principal().equals( owner ) )\n+                                if (acl.principal().equals(owner))\n                                 {\n-                                    if ( !windowsUserNoExecute.containsAll( permissions ) )\n+                                    if (!windowsUserNoExecute.containsAll(permissions))\n                                     {\n                                         throw new IllegalArgumentException(\n-                                                format( \"%s does not have the correct ACL for owner to evaluate commands. Has %s for %s, requires at most %s.\",\n-                                                        path, permissions, acl.principal().getName(), windowsUserNoExecute ) );\n+                                          format(\"%s does not have the correct ACL for owner to evaluate commands. Has %s for %s, requires at most %s.\",\n+                                            path, permissions, acl.principal().getName(), windowsUserNoExecute));\n                                     }\n-                                }\n-                                else\n+                                } else\n                                 {\n-                                    if ( !permissions.isEmpty() )\n+                                    if (!permissions.isEmpty())\n                                     {\n                                         throw new IllegalArgumentException(\n-                                                format( \"%s does not have the correct ACL. Has %s for %s, should be none for all except owner.\",\n-                                                        path, permissions, acl.principal().getName() ) );\n+                                          format(\"%s does not have the correct ACL. Has %s for %s, should be none for all except owner.\",\n+                                            path, permissions, acl.principal().getName()));\n                                     }\n                                 }\n                             }\n                         }\n \n                         String domainAndName = owner.getName();\n-                        String fileOwner = domainAndName.contains( \"\\\\\" ) ? domainAndName.split( \"\\\\\\\\\" )[1] : domainAndName; //remove domain\n-                        if ( !fileOwner.equals( processOwner ) )\n+                        String fileOwner = domainAndName.contains(\"\\\\\") ? domainAndName.split(\"\\\\\\\\\")[1] : domainAndName; //remove domain\n+                        if (!fileOwner.equals(processOwner))\n                         {\n                             throw new IllegalArgumentException(\n-                                    format( \"%s does not have the correct file owner to evaluate commands. Has %s, requires %s.\", path, domainAndName,\n-                                            processOwner ) );\n+                              format(\"%s does not have the correct file owner to evaluate commands. Has %s, requires %s.\", path, domainAndName,\n+                                processOwner));\n                         }\n-                    }\n-                    catch ( IOException | UnsupportedOperationException e )\n+                    } catch (IOException | UnsupportedOperationException e)\n                     {\n-                        throw new IllegalStateException( \"Unable to access file permissions for \" + path, e );\n+                        throw new IllegalStateException(\"Unable to access file permissions for \" + path, e);\n                     }\n                 }\n-            }\n-            else\n+            } else\n             {\n-                throw new IllegalStateException( \"Configuration command expansion not supported for \" + SystemUtils.OS_NAME );\n+                throw new IllegalStateException(\"Configuration command expansion not supported for \" + SystemUtils.OS_NAME);\n             }\n         }\n \n@@ -406,67 +400,66 @@ public class Config implements Configuration\n         {\n             private final Path root;\n \n-            ConfigDirectoryFileVisitor( Path root )\n+            ConfigDirectoryFileVisitor(Path root)\n             {\n                 this.root = root;\n             }\n \n-            private boolean isRoot( Path dir )\n+            private boolean isRoot(Path dir)\n             {\n-                return root.equals( dir );\n+                return root.equals(dir);\n             }\n \n-            private boolean isNotHidden( Path file )\n+            private boolean isNotHidden(Path file)\n             {\n-                return !file.getFileName().toString().startsWith( \".\" );\n+                return !file.getFileName().toString().startsWith(\".\");\n             }\n \n-            private boolean isFile( Path file, BasicFileAttributes attrs )\n+            private boolean isFile(Path file, BasicFileAttributes attrs)\n             {\n-                return attrs.isRegularFile() || Files.isRegularFile( file );\n+                return attrs.isRegularFile() || Files.isRegularFile(file);\n             }\n \n             @Override\n-            public FileVisitResult preVisitDirectory( Path dir, BasicFileAttributes attrs )\n+            public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)\n             {\n-                if ( isRoot( dir ) )\n+                if (isRoot(dir))\n                 {\n                     return FileVisitResult.CONTINUE;\n-                }\n-                else\n+                } else\n                 {\n                     // We don't go into subdirectories, it's too risky\n-                    if ( isNotHidden( dir ) )\n+                    if (isNotHidden(dir))\n                     {\n-                        log.warn( \"Ignoring subdirectory in config directory [\" + dir + \"].\" );\n+                        log.warn(\"Ignoring subdirectory in config directory [\" + dir + \"].\");\n                     }\n                     return FileVisitResult.SKIP_SUBTREE;\n                 }\n             }\n \n             @Override\n-            public FileVisitResult visitFile( Path file, BasicFileAttributes attrs ) throws IOException\n+            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException\n             {\n-                if ( isNotHidden( file ) && isFile( file, attrs ) )\n+                if (isNotHidden(file) && isFile(file, attrs))\n                 {\n                     String key = file.getFileName().toString();\n-                    String value = Files.readString( file );\n-                    setRaw( key, value );\n-                    configFiles.add( file );\n+                    String value = Files.readString(file);\n+                    setRaw(key, value);\n+                    configFiles.add(file);\n                 }\n                 return FileVisitResult.CONTINUE;\n             }\n \n             @Override\n-            public FileVisitResult visitFileFailed( Path file, IOException exc ) throws IOException\n+            public FileVisitResult visitFileFailed(Path file, IOException exc) throws IOException\n             {\n-                throw exc != null ? exc : new IOException( \"Unknown failure loading config file [\" + file.toAbsolutePath() + \"]\" );\n+                throw exc != null ? exc : new IOException(\"Unknown failure loading config file [\" + file.toAbsolutePath() + \"]\");\n             }\n \n             @Override\n-            public FileVisitResult postVisitDirectory( Path dir, IOException exc ) throws IOException\n+            public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOException\n             {\n-                if ( exc != null )\n+                if (exc != null)\n                 {\n                     throw exc;\n                 }\n@@ -477,25 +470,25 @@ public class Config implements Configuration\n \n     public static Config defaults()\n     {\n-        return defaults( Map.of() );\n+        return defaults(Map.of());\n     }\n \n-    public static <T> Config defaults( Setting<T> setting, T value )\n+    public static <T> Config defaults(Setting<T> setting, T value)\n     {\n-        return defaults( Map.of( setting, value ) );\n+        return defaults(Map.of(setting, value));\n     }\n \n-    public static Config defaults( Map<Setting<?>,Object> settingValues )\n+    public static Config defaults(Map<Setting<?>, Object> settingValues)\n     {\n-        return Config.newBuilder().set( settingValues ).build();\n+        return Config.newBuilder().set(settingValues).build();\n     }\n \n     public static Builder newBuilder()\n     {\n         Builder builder = new Builder();\n-        Services.loadAll( SettingsDeclaration.class ).forEach( decl -> builder.addSettingsClass( decl.getClass() ) );\n-        Services.loadAll( GroupSetting.class ).forEach( decl -> builder.addGroupSettingClass( decl.getClass() ) );\n-        Services.loadAll( SettingMigrator.class ).forEach( builder::addMigrator );\n+        Services.loadAll(SettingsDeclaration.class).forEach(decl -> builder.addSettingsClass(decl.getClass()));\n+        Services.loadAll(GroupSetting.class).forEach(decl -> builder.addGroupSettingClass(decl.getClass()));\n+        Services.loadAll(SettingMigrator.class).forEach(builder::addMigrator);\n \n         return builder;\n     }\n@@ -505,8 +498,8 @@ public class Config implements Configuration\n         return new Builder();\n     }\n \n-    protected final Map<String,Entry<?>> settings = new HashMap<>();\n-    private final Map<Class<? extends GroupSetting>, Map<String,GroupSetting>> allGroupInstances = new HashMap<>();\n+    protected final Map<String, Entry<?>> settings = new HashMap<>();\n+    private final Map<Class<? extends GroupSetting>, Map<String, GroupSetting>> allGroupInstances = new HashMap<>();\n     private Log log;\n     private final boolean expandCommands;\n     private final Configuration validationConfig = new ValidationConfig();\n@@ -517,218 +510,212 @@ public class Config implements Configuration\n         expandCommands = false;\n     }\n \n-    private Config( Collection<Class<? extends SettingsDeclaration>> settingsClasses,\n-            Collection<Class<? extends GroupSetting>> groupSettingClasses,\n-            Collection<SettingMigrator> settingMigrators,\n-            Map<String,String> settingValueStrings,\n-            Map<String,Object> settingValueObjects,\n-            Map<String,Object> overriddenDefaultObjects,\n-            Config fromConfig,\n-            Log log,\n-            boolean expandCommands )\n+    private Config(Collection<Class<? extends SettingsDeclaration>> settingsClasses,\n+                   Collection<Class<? extends GroupSetting>> groupSettingClasses,\n+                   Collection<SettingMigrator> settingMigrators,\n+                   Map<String, String> settingValueStrings,\n+                   Map<String, Object> settingValueObjects,\n+                   Map<String, Object> overriddenDefaultObjects,\n+                   Config fromConfig,\n+                   Log log,\n+                   boolean expandCommands)\n     {\n         this.log = log;\n         this.expandCommands = expandCommands;\n \n-        if ( expandCommands )\n+        if (expandCommands)\n         {\n-            log.info( \"Command expansion is explicitly enabled for configuration\" );\n+            log.info(\"Command expansion is explicitly enabled for configuration\");\n         }\n \n-        Map<String,String> overriddenDefaultStrings = new HashMap<>();\n+        Map<String, String> overriddenDefaultStrings = new HashMap<>();\n         try\n         {\n-            settingMigrators.forEach( migrator -> migrator.migrate( settingValueStrings, overriddenDefaultStrings, log )  );\n-        }\n-        catch ( RuntimeException e )\n+            settingMigrators.forEach(migrator -> migrator.migrate(settingValueStrings, overriddenDefaultStrings, log));\n+        } catch (RuntimeException e)\n         {\n-            throw new IllegalArgumentException( \"Error while migrating settings, please see the exception cause\", e );\n+            throw new IllegalArgumentException(\"Error while migrating settings, please see the exception cause\", e);\n         }\n \n-        Map<String,SettingImpl<?>> definedSettings = getDefinedSettings( settingsClasses );\n-        Map<String,Class<? extends GroupSetting>> definedGroups = getDefinedGroups( groupSettingClasses );\n-        Set<String> keys = new HashSet<>( definedSettings.keySet() );\n-        keys.addAll( settingValueStrings.keySet() );\n-        keys.addAll( settingValueObjects.keySet() );\n+        Map<String, SettingImpl<?>> definedSettings = getDefinedSettings(settingsClasses);\n+        Map<String, Class<? extends GroupSetting>> definedGroups = getDefinedGroups(groupSettingClasses);\n+        Set<String> keys = new HashSet<>(definedSettings.keySet());\n+        keys.addAll(settingValueStrings.keySet());\n+        keys.addAll(settingValueObjects.keySet());\n \n         List<SettingImpl<?>> newSettings = new ArrayList<>();\n \n-        if ( fromConfig != null ) //When building from another config, extract values\n+        if (fromConfig != null) //When building from another config, extract values\n         {\n             //fromConfig.log is ignored, until different behaviour is expected\n-            fromConfig.allGroupInstances.forEach( ( cls, fromGroupMap ) -> {\n-                Map<String, GroupSetting> groupMap = allGroupInstances.computeIfAbsent( cls, k -> new HashMap<>() );\n-                groupMap.putAll( fromGroupMap );\n-            } );\n-            for ( Map.Entry<String,Entry<?>> entry : fromConfig.settings.entrySet() )\n+            fromConfig.allGroupInstances.forEach((cls, fromGroupMap) -> {\n+                Map<String, GroupSetting> groupMap = allGroupInstances.computeIfAbsent(cls, k -> new HashMap<>());\n+                groupMap.putAll(fromGroupMap);\n+            });\n+            for (Map.Entry<String, Entry<?>> entry : fromConfig.settings.entrySet())\n             {\n-                newSettings.add( entry.getValue().setting );\n-                keys.remove( entry.getKey() );\n+                newSettings.add(entry.getValue().setting);\n+                keys.remove(entry.getKey());\n             }\n         }\n \n         boolean strict = strict_config_validation.defaultValue();\n-        if ( keys.remove( strict_config_validation.name() ) ) //evaluate strict_config_validation setting first, as we need it when validating other settings\n+        if (keys.remove(strict_config_validation.name())) //evaluate strict_config_validation setting first, as we need it when validating other settings\n         {\n-            evaluateSetting( strict_config_validation, settingValueStrings, settingValueObjects,\n-                    fromConfig, overriddenDefaultStrings, overriddenDefaultObjects );\n-            strict = get( strict_config_validation );\n+            evaluateSetting(strict_config_validation, settingValueStrings, settingValueObjects,\n+              fromConfig, overriddenDefaultStrings, overriddenDefaultObjects);\n+            strict = get(strict_config_validation);\n         }\n \n-        if ( keys.remove( config_command_evaluation_timeout.name() ) )\n+        if (keys.remove(config_command_evaluation_timeout.name()))\n         {\n-            evaluateSetting( config_command_evaluation_timeout, settingValueStrings, settingValueObjects,\n-                    fromConfig, overriddenDefaultStrings, overriddenDefaultObjects );\n-            commandEvaluationTimeout = get( config_command_evaluation_timeout );\n+            evaluateSetting(config_command_evaluation_timeout, settingValueStrings, settingValueObjects,\n+              fromConfig, overriddenDefaultStrings, overriddenDefaultObjects);\n+            commandEvaluationTimeout = get(config_command_evaluation_timeout);\n         }\n \n-        newSettings.addAll( getActiveSettings( keys, definedGroups, definedSettings, strict ) );\n+        newSettings.addAll(getActiveSettings(keys, definedGroups, definedSettings, strict));\n \n-        evaluateSettingValues( newSettings, settingValueStrings, settingValueObjects, overriddenDefaultStrings, overriddenDefaultObjects, fromConfig );\n+        evaluateSettingValues(newSettings, settingValueStrings, settingValueObjects, overriddenDefaultStrings, overriddenDefaultObjects, fromConfig);\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private void evaluateSettingValues( Collection<SettingImpl<?>> settingsToEvaluate, Map<String,String> settingValueStrings,\n-            Map<String,Object> settingValueObjects,Map<String,String> overriddenDefaultStrings, Map<String,Object> overriddenDefaultObjects, Config fromConfig )\n+    @SuppressWarnings(\"unchecked\")\n+    private void evaluateSettingValues(Collection<SettingImpl<?>> settingsToEvaluate, Map<String, String> settingValueStrings,\n+                                       Map<String, Object> settingValueObjects, Map<String, String> overriddenDefaultStrings,\n+                                       Map<String, Object> overriddenDefaultObjects, Config fromConfig)\n     {\n-        Deque<SettingImpl<?>> newSettings = new ArrayDeque<>( settingsToEvaluate );\n-        while ( !newSettings.isEmpty() )\n+        Deque<SettingImpl<?>> newSettings = new ArrayDeque<>(settingsToEvaluate);\n+        while (!newSettings.isEmpty())\n         {\n             boolean modified = false;\n             SettingImpl<?> last = newSettings.peekLast();\n             SettingImpl<Object> setting;\n-            Map<Setting<?>,Setting<?>> dependencies = new HashMap<>();\n+            Map<Setting<?>, Setting<?>> dependencies = new HashMap<>();\n             do\n             {\n-                setting = (SettingImpl<Object>) requireNonNull( newSettings.pollFirst() );\n+                setting = (SettingImpl<Object>) requireNonNull(newSettings.pollFirst());\n \n                 boolean retry = false;\n-                if ( setting.dependency() != null && !settings.containsKey( setting.dependency().name() ) )\n+                if (setting.dependency() != null && !settings.containsKey(setting.dependency().name()))\n                 {\n                     //dependency not yet evaluated\n-                    dependencies.put( setting, setting.dependency() );\n+                    dependencies.put(setting, setting.dependency());\n                     retry = true;\n-                }\n-                else\n+                } else\n                 {\n                     try\n                     {\n-                        evaluateSetting( setting, settingValueStrings, settingValueObjects, fromConfig, overriddenDefaultStrings, overriddenDefaultObjects );\n+                        evaluateSetting(setting, settingValueStrings, settingValueObjects, fromConfig, overriddenDefaultStrings, overriddenDefaultObjects);\n                         modified = true;\n-                    }\n-                    catch ( AccessDuringEvaluationException e )\n+                    } catch (AccessDuringEvaluationException e)\n                     {\n                         //Constraint with internal dependencies yet not evaluated\n-                        dependencies.put( setting, e.getAttemptedAccess() );\n+                        dependencies.put(setting, e.getAttemptedAccess());\n                         retry = true;\n                     }\n                 }\n-                if ( retry )\n+                if (retry)\n                 {\n-                    newSettings.addLast( setting );\n+                    newSettings.addLast(setting);\n                 }\n             }\n-            while ( setting != last );\n+            while (setting != last);\n \n-            if ( !modified && !newSettings.isEmpty() )\n+            if (!modified && !newSettings.isEmpty())\n             {\n                 //Settings left depend on settings not present in this config.\n                 String unsolvable = newSettings.stream()\n-                        .map( s -> format(\"'%s'->'%s'\", s.name(), dependencies.get( s ).name() ) )\n-                        .collect( Collectors.joining(\",\\n\",\"[\",\"]\"));\n+                  .map(s -> format(\"'%s'->'%s'\", s.name(), dependencies.get(s).name()))\n+                  .collect(Collectors.joining(\",\\n\", \"[\", \"]\"));\n                 throw new IllegalArgumentException(\n-                        format( \"Can not resolve setting dependencies. %s depend on settings not present in config, or are in a circular dependency \",\n-                                unsolvable ) );\n+                  format(\"Can not resolve setting dependencies. %s depend on settings not present in config, or are in a circular dependency \",\n+                    unsolvable));\n             }\n         }\n     }\n \n-    private Collection<SettingImpl<?>> getActiveSettings( Set<String> settingNames, Map<String,Class<? extends GroupSetting>> definedGroups,\n-            Map<String,SettingImpl<?>> declaredSettings, boolean strict )\n+    private Collection<SettingImpl<?>> getActiveSettings(Set<String> settingNames, Map<String, Class<? extends GroupSetting>> definedGroups,\n+                                                         Map<String, SettingImpl<?>> declaredSettings, boolean strict)\n     {\n         List<SettingImpl<?>> newSettings = new ArrayList<>();\n-        for ( String key : settingNames )\n+        for (String key : settingNames)\n         {\n             // Try to find in settings\n-            SettingImpl<?> setting = declaredSettings.get( key );\n-            if ( setting != null )\n+            SettingImpl<?> setting = declaredSettings.get(key);\n+            if (setting != null)\n             {\n-                newSettings.add( setting );\n-            }\n-            else\n+                newSettings.add(setting);\n+            } else\n             {\n                 // Not found, could be a group setting, e.g \"dbms.ssl.policy.*\"\n-                var groupEntryOpt = definedGroups.entrySet().stream().filter( e -> key.startsWith( e.getKey() + '.' ) ).findAny();\n-                if ( groupEntryOpt.isEmpty() )\n+                var groupEntryOpt = definedGroups.entrySet().stream().filter(e -> key.startsWith(e.getKey() + '.')).findAny();\n+                if (groupEntryOpt.isEmpty())\n                 {\n-                    String msg = format( \"Unrecognized setting. No declared setting with name: %s\", key );\n-                    if ( strict )\n+                    String msg = format(\"Unrecognized setting. No declared setting with name: %s\", key);\n+                    if (strict)\n                     {\n-                        throw new IllegalArgumentException( msg );\n+                        throw new IllegalArgumentException(msg);\n                     }\n-                    log.warn( msg );\n+                    log.warn(msg);\n                     continue;\n                 }\n                 var groupEntry = groupEntryOpt.get();\n \n                 String prefix = groupEntry.getKey();\n-                String keyWithoutPrefix = key.substring( prefix.length() + 1 );\n+                String keyWithoutPrefix = key.substring(prefix.length() + 1);\n                 String id;\n-                if ( keyWithoutPrefix.matches(\"^[^.]+$\") )\n+                if (keyWithoutPrefix.matches(\"^[^.]+$\"))\n                 {\n                     id = keyWithoutPrefix;\n-                }\n-                else if ( keyWithoutPrefix.matches(\"^[^.]+\\\\.[^.]+$\") )\n+                } else if (keyWithoutPrefix.matches(\"^[^.]+\\\\.[^.]+$\"))\n                 {\n-                    id = keyWithoutPrefix.substring( 0, keyWithoutPrefix.indexOf( '.' ) );\n-                }\n-                else\n+                    id = keyWithoutPrefix.substring(0, keyWithoutPrefix.indexOf('.'));\n+                } else\n                 {\n-                    String msg = format( \"Malformed group setting name: '%s', does not match any setting in its group.\", key );\n-                    if ( strict )\n+                    String msg = format(\"Malformed group setting name: '%s', does not match any setting in its group.\", key);\n+                    if (strict)\n                     {\n-                        throw new IllegalArgumentException( msg );\n+                        throw new IllegalArgumentException(msg);\n                     }\n-                    log.warn( msg );\n+                    log.warn(msg);\n                     continue;\n                 }\n \n-                Map<String, GroupSetting> groupInstances = allGroupInstances.computeIfAbsent( groupEntry.getValue(), k -> new HashMap<>() );\n-                if ( !groupInstances.containsKey( id ) )\n+                Map<String, GroupSetting> groupInstances = allGroupInstances.computeIfAbsent(groupEntry.getValue(), k -> new HashMap<>());\n+                if (!groupInstances.containsKey(id))\n                 {\n \n                     GroupSetting group;\n                     try\n                     {\n-                        group = createStringInstance( groupEntry.getValue(), id );\n-                    }\n-                    catch ( IllegalArgumentException e )\n+                        group = createStringInstance(groupEntry.getValue(), id);\n+                    } catch (IllegalArgumentException e)\n                     {\n-                        String msg = format( \"Unrecognized setting. No declared setting with name: %s\", key );\n-                        if ( strict )\n+                        String msg = format(\"Unrecognized setting. No declared setting with name: %s\", key);\n+                        if (strict)\n                         {\n-                            throw new IllegalArgumentException( msg );\n+                            throw new IllegalArgumentException(msg);\n                         }\n-                        log.warn( msg );\n+                        log.warn(msg);\n                         continue;\n                     }\n-                    groupInstances.put( id, group );\n+                    groupInstances.put(id, group);\n                     //Add all settings from created groups, to get possible default values.\n-                    Map<String,SettingImpl<?>> definedSettings = getDefinedSettings( group.getClass(), group );\n-                    if ( definedSettings.values().stream().anyMatch( SettingImpl::dynamic ) )\n+                    Map<String, SettingImpl<?>> definedSettings = getDefinedSettings(group.getClass(), group);\n+                    if (definedSettings.values().stream().anyMatch(SettingImpl::dynamic))\n                     {\n-                        throw new IllegalArgumentException( format( \"Group setting can not be dynamic: '%s'\", key ) );\n+                        throw new IllegalArgumentException(format(\"Group setting can not be dynamic: '%s'\", key));\n                     }\n-                    newSettings.addAll( definedSettings.values() );\n+                    newSettings.addAll(definedSettings.values());\n                 }\n             }\n         }\n         return newSettings;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private void evaluateSetting( Setting<?> untypedSetting, Map<String,String> settingValueStrings, Map<String,Object> settingValueObjects, Config fromConfig,\n-            Map<String,String> overriddenDefaultStrings, Map<String,Object> overriddenDefaultObjects )\n+    @SuppressWarnings(\"unchecked\")\n+    private void evaluateSetting(Setting<?> untypedSetting, Map<String, String> settingValueStrings, Map<String, Object> settingValueObjects, Config fromConfig,\n+                                 Map<String, String> overriddenDefaultStrings, Map<String, Object> overriddenDefaultObjects)\n     {\n         SettingImpl<Object> setting = (SettingImpl<Object>) untypedSetting;\n         String key = setting.name();\n@@ -736,21 +723,19 @@ public class Config implements Configuration\n         try\n         {\n             Object defaultValue = null;\n-            if ( overriddenDefaultObjects.containsKey( key ) ) // Map default value\n+            if (overriddenDefaultObjects.containsKey(key)) // Map default value\n             {\n-                defaultValue = overriddenDefaultObjects.get( key );\n-            }\n-            else if ( overriddenDefaultStrings.containsKey( key ) )\n+                defaultValue = overriddenDefaultObjects.get(key);\n+            } else if (overriddenDefaultStrings.containsKey(key))\n             {\n-                defaultValue = setting.parse( evaluateIfCommand( key, overriddenDefaultStrings.get( key ) ) );\n-            }\n-            else\n+                defaultValue = setting.parse(evaluateIfCommand(key, overriddenDefaultStrings.get(key)));\n+            } else\n             {\n                 defaultValue = setting.defaultValue();\n-                if ( fromConfig != null && fromConfig.settings.containsKey( key ) )\n+                if (fromConfig != null && fromConfig.settings.containsKey(key))\n                 {\n-                    Object fromDefault = fromConfig.settings.get( key ).defaultValue;\n-                    if ( !Objects.equals( defaultValue, fromDefault ) )\n+                    Object fromDefault = fromConfig.settings.get(key).defaultValue;\n+                    if (!Objects.equals(defaultValue, fromDefault))\n                     {\n                         defaultValue = fromDefault;\n                     }\n@@ -758,152 +743,143 @@ public class Config implements Configuration\n             }\n \n             Object value = null;\n-            if ( settingValueObjects.containsKey( key ) )\n+            if (settingValueObjects.containsKey(key))\n             {\n-                value = settingValueObjects.get( key );\n-            }\n-            else if ( settingValueStrings.containsKey( key ) ) // Map value\n+                value = settingValueObjects.get(key);\n+            } else if (settingValueStrings.containsKey(key)) // Map value\n             {\n-                value = setting.parse( evaluateIfCommand( key, settingValueStrings.get( key ) ) );\n-            }\n-            else if ( fromConfig != null && fromConfig.settings.containsKey( key ) )\n+                value = setting.parse(evaluateIfCommand(key, settingValueStrings.get(key)));\n+            } else if (fromConfig != null && fromConfig.settings.containsKey(key))\n             {\n-                Entry<?> entry = fromConfig.settings.get( key );\n+                Entry<?> entry = fromConfig.settings.get(key);\n                 value = entry.isDefault ? null : entry.value;\n             }\n \n-            value = setting.solveDefault( value, defaultValue );\n+            value = setting.solveDefault(value, defaultValue);\n \n-            settings.put( key, createEntry( setting, value, defaultValue ) );\n-        }\n-        catch ( AccessDuringEvaluationException exception )\n+            settings.put(key, createEntry(setting, value, defaultValue));\n+        } catch (AccessDuringEvaluationException exception)\n         {\n             throw exception; //Bubble up\n-        }\n-        catch ( RuntimeException exception )\n+        } catch (RuntimeException exception)\n         {\n-            String msg = format( \"Error evaluating value for setting '%s'. %s\", setting.name(), exception.getMessage() );\n-            throw new IllegalArgumentException( msg, exception );\n+            String msg = format(\"Error evaluating value for setting '%s'. %s\", setting.name(), exception.getMessage());\n+            throw new IllegalArgumentException(msg, exception);\n         }\n     }\n \n-    private String evaluateIfCommand( String settingName, String entry )\n+    private String evaluateIfCommand(String settingName, String entry)\n     {\n-        if ( isCommand( entry ) )\n+        if (isCommand(entry))\n         {\n-            Preconditions.checkArgument( expandCommands, format( \"%s is a command, but config is not explicitly told to expand it.\", entry )  );\n+            Preconditions.checkArgument(expandCommands, format(\"%s is a command, but config is not explicitly told to expand it.\", entry));\n             String str = entry.trim();\n-            String command = str.substring( 2, str.length() - 1 );\n-            log.info( \"Executing external script to retrieve value of setting \" + settingName );\n-            return executeCommand( command, commandEvaluationTimeout );\n+            String command = str.substring(2, str.length() - 1);\n+            log.info(\"Executing external script to retrieve value of setting \" + settingName);\n+            return executeCommand(command, commandEvaluationTimeout);\n         }\n         return entry;\n     }\n \n-    private static boolean isCommand( String entry )\n+    private static boolean isCommand(String entry)\n     {\n         String str = entry.trim();\n-        return str.length() > 3 && str.charAt( 0 ) == '$' && str.charAt( 1 ) == '(' && str.charAt( str.length() - 1 ) == ')';\n+        return str.length() > 3 && str.charAt(0) == '$' && str.charAt(1) == '(' && str.charAt(str.length() - 1) == ')';\n     }\n \n-    private static String executeCommand( String command, Duration timeout )\n+    private static String executeCommand(String command, Duration timeout)\n     {\n         Process process = null;\n         try\n         {\n-            String[] commands = CommandLine.parse( command ).toStrings();\n+            String[] commands = CommandLine.parse(command).toStrings();\n             //Unquote the arguments, as ProcessBuilder does not handle that\n-            for ( int i = 1; i < commands.length; i++ )\n+            for (int i = 1; i < commands.length; i++)\n             {\n                 String arg = commands[i];\n-                if ( StringUtils.isQuoted( arg ) )\n+                if (StringUtils.isQuoted(arg))\n                 {\n-                    commands[i] = arg.substring( 1, arg.length() - 1 );\n+                    commands[i] = arg.substring(1, arg.length() - 1);\n                 }\n             }\n-            process = new ProcessBuilder( commands ).start();\n-            BufferedReader out = new BufferedReader( new InputStreamReader( process.getInputStream() ) );\n-            BufferedReader err = new BufferedReader( new InputStreamReader( process.getErrorStream() ) );\n-            if ( !process.waitFor( timeout.toMillis(), TimeUnit.MILLISECONDS ) )\n+            process = new ProcessBuilder(commands).start();\n+            BufferedReader out = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+            BufferedReader err = new BufferedReader(new InputStreamReader(process.getErrorStream()));\n+            if (!process.waitFor(timeout.toMillis(), TimeUnit.MILLISECONDS))\n             {\n-                throw new IllegalArgumentException( format( \"Timed out executing command `%s`\", command ) );\n+                throw new IllegalArgumentException(format(\"Timed out executing command `%s`\", command));\n             }\n-            String output = out.lines().collect( Collectors.joining( lineSeparator() ) );\n+            String output = out.lines().collect(Collectors.joining(lineSeparator()));\n \n             int exitCode = process.exitValue();\n-            if ( exitCode != 0 )\n+            if (exitCode != 0)\n             {\n-                String errOutput =  err.lines().collect( Collectors.joining( lineSeparator() ) );\n-                throw new IllegalArgumentException( format( \"Command `%s` failed with exit code %s.%n%s%n%s\", command, exitCode, output, errOutput ) );\n+                String errOutput = err.lines().collect(Collectors.joining(lineSeparator()));\n+                throw new IllegalArgumentException(format(\"Command `%s` failed with exit code %s.%n%s%n%s\", command, exitCode, output, errOutput));\n             }\n             return output;\n-        }\n-        catch ( InterruptedException e )\n+        } catch (InterruptedException e)\n         {\n             Thread.currentThread().interrupt();\n-            throw new IllegalArgumentException( \"Interrupted while executing command\", e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalArgumentException(\"Interrupted while executing command\", e);\n+        } catch (IOException e)\n         {\n-            throw new IllegalArgumentException( e );\n-        }\n-        finally\n+            throw new IllegalArgumentException(e);\n+        } finally\n         {\n-            if ( process != null && process.isAlive() )\n+            if (process != null && process.isAlive())\n             {\n                 process.destroyForcibly();\n             }\n         }\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private <T> Entry<T> createEntry( SettingImpl<T> setting, T value, T defaultValue )\n+    @SuppressWarnings(\"unchecked\")\n+    private <T> Entry<T> createEntry(SettingImpl<T> setting, T value, T defaultValue)\n     {\n-        if ( setting.dependency() != null )\n+        if (setting.dependency() != null)\n         {\n-            var dep = settings.get( setting.dependency().name() );\n-            T solvedValue = setting.solveDependency( value != null ? value : defaultValue, (T) dep.getValue() );\n-            return new DepEntry<>( setting, value, defaultValue, solvedValue );\n+            var dep = settings.get(setting.dependency().name());\n+            T solvedValue = setting.solveDependency(value != null ? value : defaultValue, (T) dep.getValue());\n+            return new DepEntry<>(setting, value, defaultValue, solvedValue);\n         }\n-        return new Entry<>( setting, value, defaultValue );\n+        return new Entry<>(setting, value, defaultValue);\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public <T extends GroupSetting> Map<String,T> getGroups( Class<T> group )\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends GroupSetting> Map<String, T> getGroups(Class<T> group)\n     {\n-        return new HashMap<>( (Map<? extends String,? extends T>) allGroupInstances.getOrDefault( group, new HashMap<>() ) );\n+        return new HashMap<>((Map<? extends String, ? extends T>) allGroupInstances.getOrDefault(group, new HashMap<>()));\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public <T extends GroupSetting, U extends T> Map<Class<U>,Map<String,U>> getGroupsFromInheritance( Class<T> parentClass )\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends GroupSetting, U extends T> Map<Class<U>, Map<String, U>> getGroupsFromInheritance(Class<T> parentClass)\n     {\n         return allGroupInstances.keySet().stream()\n-                .filter( parentClass::isAssignableFrom )\n-                .map( childClass -> (Class<U>) childClass )\n-                .collect( Collectors.toMap( childClass -> childClass, this::getGroups ) );\n+          .filter(parentClass::isAssignableFrom)\n+          .map(childClass -> (Class<U>) childClass)\n+          .collect(Collectors.toMap(childClass -> childClass, this::getGroups));\n     }\n \n-    private static <T> T createInstance( Class<T> classObj )\n+    private static <T> T createInstance(Class<T> classObj)\n     {\n \n         T instance;\n         try\n         {\n-            instance = createStringInstance( classObj, null );\n-        }\n-        catch ( Exception first )\n+            instance = createStringInstance(classObj, null);\n+        } catch (Exception first)\n         {\n             try\n             {\n                 Constructor<T> constructor = classObj.getDeclaredConstructor();\n-                constructor.setAccessible( true );\n+                constructor.setAccessible(true);\n                 instance = constructor.newInstance();\n-            }\n-            catch ( Exception second )\n+            } catch (Exception second)\n             {\n                 String name = classObj.getSimpleName();\n-                String msg = format( \"Failed to create instance of: %s, please see the exception cause\", name );\n-                throw new IllegalArgumentException( msg, Exceptions.chain( second, first ) );\n+                String msg = format(\"Failed to create instance of: %s, please see the exception cause\", name);\n+                throw new IllegalArgumentException(msg, Exceptions.chain(second, first));\n             }\n \n         }\n@@ -911,60 +887,60 @@ public class Config implements Configuration\n     }\n \n     @Override\n-    public <T> T get( org.neo4j.graphdb.config.Setting<T> setting )\n+    public <T> T get(org.neo4j.graphdb.config.Setting<T> setting)\n     {\n-        return getObserver( setting ).getValue();\n+        return getObserver(setting).getValue();\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public <T> SettingObserver<T> getObserver( Setting<T> setting )\n+    @SuppressWarnings(\"unchecked\")\n+    public <T> SettingObserver<T> getObserver(Setting<T> setting)\n     {\n-        SettingObserver<T> observer = (SettingObserver<T>) settings.get( setting.name() );\n-        if ( observer != null )\n+        SettingObserver<T> observer = (SettingObserver<T>) settings.get(setting.name());\n+        if (observer != null)\n         {\n             return observer;\n         }\n-        throw new IllegalArgumentException( format( \"Config has no association with setting: '%s'\", setting.name() ) );\n+        throw new IllegalArgumentException(format(\"Config has no association with setting: '%s'\", setting.name()));\n     }\n \n-    public <T> void setDynamic( Setting<T> setting, T value, String scope )\n+    public <T> void setDynamic(Setting<T> setting, T value, String scope)\n     {\n-        Entry<T> entry = (Entry<T>) getObserver( setting );\n+        Entry<T> entry = (Entry<T>) getObserver(setting);\n         SettingImpl<T> actualSetting = entry.setting;\n-        if ( !actualSetting.dynamic() )\n+        if (!actualSetting.dynamic())\n         {\n-            throw new IllegalArgumentException( format(\"Setting '%s' is not dynamic and can not be changed at runtime\", setting.name() ) );\n+            throw new IllegalArgumentException(format(\"Setting '%s' is not dynamic and can not be changed at runtime\", setting.name()));\n         }\n-        set( setting, value );\n-        log.info( \"%s changed to %s, by %s\", setting.name(), actualSetting.valueToString( value ), scope );\n+        set(setting, value);\n+        log.info(\"%s changed to %s, by %s\", setting.name(), actualSetting.valueToString(value), scope);\n \n     }\n \n-    public <T> void set( Setting<T> setting, T value )\n+    public <T> void set(Setting<T> setting, T value)\n     {\n-        Entry<T> entry = (Entry<T>) getObserver( setting );\n+        Entry<T> entry = (Entry<T>) getObserver(setting);\n         SettingImpl<T> actualSetting = entry.setting;\n-        if ( actualSetting.immutable() )\n+        if (actualSetting.immutable())\n         {\n-            throw new IllegalArgumentException( format(\"Setting '%s' immutable (final). Can not amend\", actualSetting.name() ) );\n+            throw new IllegalArgumentException(format(\"Setting '%s' immutable (final). Can not amend\", actualSetting.name()));\n         }\n-        entry.setValue( value );\n+        entry.setValue(value);\n     }\n \n-    public <T> void setIfNotSet( Setting<T> setting, T value )\n+    public <T> void setIfNotSet(Setting<T> setting, T value)\n     {\n-        Entry<T> entry = (Entry<T>) getObserver( setting );\n-        if ( entry == null || entry.isDefault )\n+        Entry<T> entry = (Entry<T>) getObserver(setting);\n+        if (entry == null || entry.isDefault)\n         {\n-            set( setting, value );\n+            set(setting, value);\n         }\n     }\n \n-    public boolean isExplicitlySet( Setting<?> setting )\n+    public boolean isExplicitlySet(Setting<?> setting)\n     {\n-        if ( settings.containsKey( setting.name() ) )\n+        if (settings.containsKey(setting.name()))\n         {\n-            return !settings.get( setting.name() ).isDefault;\n+            return !settings.get(setting.name()).isDefault;\n         }\n         return false;\n     }\n@@ -972,151 +948,149 @@ public class Config implements Configuration\n     @Override\n     public String toString()\n     {\n-        return toString( true );\n+        return toString(true);\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public String toString( boolean includeNullValues )\n+    @SuppressWarnings(\"unchecked\")\n+    public String toString(boolean includeNullValues)\n     {\n         StringBuilder sb = new StringBuilder();\n         settings.entrySet().stream()\n-                .sorted( Map.Entry.comparingByKey() )\n-                .forEachOrdered( e ->\n-                {\n-                    SettingImpl<Object> setting = (SettingImpl<Object>) e.getValue().setting;\n-                    Object valueObj = e.getValue().getValue();\n-                    if ( valueObj != null || includeNullValues )\n-                    {\n-                        String value = setting.valueToString( valueObj );\n-                        sb.append( format( \"%s=%s%n\", e.getKey(), value ) );\n-                    }\n-                } );\n+          .sorted(Map.Entry.comparingByKey())\n+          .forEachOrdered(e ->\n+          {\n+              SettingImpl<Object> setting = (SettingImpl<Object>) e.getValue().setting;\n+              Object valueObj = e.getValue().getValue();\n+              if (valueObj != null || includeNullValues)\n+              {\n+                  String value = setting.valueToString(valueObj);\n+                  sb.append(format(\"%s=%s%n\", e.getKey(), value));\n+              }\n+          });\n         return sb.toString();\n     }\n \n-    public void setLogger( Log log )\n+    public void setLogger(Log log)\n     {\n-        if ( this.log instanceof BufferingLog )\n+        if (this.log instanceof BufferingLog)\n         {\n-            ((BufferingLog) this.log).replayInto( log );\n+            ((BufferingLog) this.log).replayInto(log);\n         }\n         this.log = log;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public Map<Setting<Object>,Object> getValues()\n+    @SuppressWarnings(\"unchecked\")\n+    public Map<Setting<Object>, Object> getValues()\n     {\n-        Map<Setting<Object>,Object> values = new HashMap<>();\n-        settings.forEach( ( s, entry ) -> values.put( (Setting<Object>) entry.setting, entry.value ) );\n+        Map<Setting<Object>, Object> values = new HashMap<>();\n+        settings.forEach((s, entry) -> values.put((Setting<Object>) entry.setting, entry.value));\n         return values;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public Setting<Object> getSetting( String name )\n+    @SuppressWarnings(\"unchecked\")\n+    public Setting<Object> getSetting(String name)\n     {\n-        if ( !settings.containsKey( name ) )\n+        if (!settings.containsKey(name))\n         {\n-            throw new IllegalArgumentException( format( \"Setting `%s` not found\", name ) );\n+            throw new IllegalArgumentException(format(\"Setting `%s` not found\", name));\n         }\n-        return (Setting<Object>) settings.get( name ).setting;\n+        return (Setting<Object>) settings.get(name).setting;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public Map<String,Setting<Object>> getDeclaredSettings()\n+    @SuppressWarnings(\"unchecked\")\n+    public Map<String, Setting<Object>> getDeclaredSettings()\n     {\n-        return settings.entrySet().stream().collect( Collectors.toMap( Map.Entry::getKey, entry -> (Setting<Object>) entry.getValue().setting ) );\n+        return settings.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey, entry -> (Setting<Object>) entry.getValue().setting));\n     }\n \n-    private static Map<String,Class<? extends GroupSetting>> getDefinedGroups( Collection<Class<? extends GroupSetting>> groupSettingClasses )\n+    private static Map<String, Class<? extends GroupSetting>> getDefinedGroups(Collection<Class<? extends GroupSetting>> groupSettingClasses)\n     {\n-        return groupSettingClasses.stream().collect( Collectors.toMap( cls -> createInstance( cls ).getPrefix(), cls -> cls ) );\n+        return groupSettingClasses.stream().collect(Collectors.toMap(cls -> createInstance(cls).getPrefix(), cls -> cls));\n     }\n \n-    private static <T> T createStringInstance( Class<T> cls, String id )\n+    private static <T> T createStringInstance(Class<T> cls, String id)\n     {\n         try\n         {\n-            Constructor<T> constructor = cls.getDeclaredConstructor( String.class );\n-            constructor.setAccessible( true );\n-            return constructor.newInstance( id );\n-        }\n-        catch ( Exception e )\n+            Constructor<T> constructor = cls.getDeclaredConstructor(String.class);\n+            constructor.setAccessible(true);\n+            return constructor.newInstance(id);\n+        } catch (Exception e)\n         {\n-            if ( e.getCause() instanceof  IllegalArgumentException )\n+            if (e.getCause() instanceof IllegalArgumentException)\n             {\n-                throw new IllegalArgumentException( \"Could not create instance with id: \" + id, e );\n+                throw new IllegalArgumentException(\"Could not create instance with id: \" + id, e);\n             }\n-            String msg = format( \"'%s' must have a ( @Nullable String ) constructor, be static & non-abstract\", cls.getSimpleName() );\n-            throw new RuntimeException( msg, e );\n+            String msg = format(\"'%s' must have a ( @Nullable String ) constructor, be static & non-abstract\", cls.getSimpleName());\n+            throw new RuntimeException(msg, e);\n         }\n     }\n \n-    private static Map<String,SettingImpl<?>> getDefinedSettings( Collection<Class<? extends SettingsDeclaration>> settingsClasses )\n+    private static Map<String, SettingImpl<?>> getDefinedSettings(Collection<Class<? extends SettingsDeclaration>> settingsClasses)\n     {\n-        Map<String,SettingImpl<?>> settings = new HashMap<>();\n-        settingsClasses.forEach( c -> settings.putAll( getDefinedSettings( c, null ) ) );\n+        Map<String, SettingImpl<?>> settings = new HashMap<>();\n+        settingsClasses.forEach(c -> settings.putAll(getDefinedSettings(c, null)));\n         return settings;\n     }\n \n-    private static Map<String,SettingImpl<?>> getDefinedSettings( Class<?> settingClass, Object fromObject )\n+    private static Map<String, SettingImpl<?>> getDefinedSettings(Class<?> settingClass, Object fromObject)\n     {\n-        Map<String,SettingImpl<?>> settings = new HashMap<>();\n-        Arrays.stream( FieldUtils.getAllFields( settingClass ) )\n-                .filter( f -> f.getType().isAssignableFrom( SettingImpl.class ) )\n-                .forEach( field ->\n-                {\n-                    try\n-                    {\n-                        field.setAccessible( true );\n-                        SettingImpl<?> setting = (SettingImpl<?>) field.get( fromObject );\n-                        if ( field.isAnnotationPresent( Description.class ) )\n-                        {\n-                            setting.setDescription( field.getAnnotation( Description.class ).value() );\n-                        }\n-                        if ( field.isAnnotationPresent( DocumentedDefaultValue.class ) )\n-                        {\n-                            setting.setDocumentedDefaultValue( field.getAnnotation( DocumentedDefaultValue.class ).value() );\n-                        }\n-                        if ( field.isAnnotationPresent( Internal.class ) )\n-                        {\n-                            setting.setInternal();\n-                        }\n-                        if ( field.isAnnotationPresent( Deprecated.class ) )\n-                        {\n-                            setting.setDeprecated();\n-                        }\n-                        settings.put( setting.name(), setting );\n-                    }\n-                    catch ( Exception e )\n-                    {\n-                        throw new RuntimeException( format( \"%s %s, from %s is not accessible.\", field.getType(), field.getName(),\n-                                settingClass.getSimpleName() ), e );\n-                    }\n-                } );\n+        Map<String, SettingImpl<?>> settings = new HashMap<>();\n+        Arrays.stream(FieldUtils.getAllFields(settingClass))\n+          .filter(f -> f.getType().isAssignableFrom(SettingImpl.class))\n+          .forEach(field ->\n+          {\n+              try\n+              {\n+                  field.setAccessible(true);\n+                  SettingImpl<?> setting = (SettingImpl<?>) field.get(fromObject);\n+                  if (field.isAnnotationPresent(Description.class))\n+                  {\n+                      setting.setDescription(field.getAnnotation(Description.class).value());\n+                  }\n+                  if (field.isAnnotationPresent(DocumentedDefaultValue.class))\n+                  {\n+                      setting.setDocumentedDefaultValue(field.getAnnotation(DocumentedDefaultValue.class).value());\n+                  }\n+                  if (field.isAnnotationPresent(Internal.class))\n+                  {\n+                      setting.setInternal();\n+                  }\n+                  if (field.isAnnotationPresent(Deprecated.class))\n+                  {\n+                      setting.setDeprecated();\n+                  }\n+                  settings.put(setting.name(), setting);\n+              } catch (Exception e)\n+              {\n+                  throw new RuntimeException(format(\"%s %s, from %s is not accessible.\", field.getType(), field.getName(),\n+                    settingClass.getSimpleName()), e);\n+              }\n+          });\n         return settings;\n     }\n \n-    public <T> void addListener( Setting<T> setting, SettingChangeListener<T> listener )\n+    public <T> void addListener(Setting<T> setting, SettingChangeListener<T> listener)\n     {\n-        Entry<T> entry = (Entry<T>) getObserver( setting );\n-        entry.addListener( listener );\n+        Entry<T> entry = (Entry<T>) getObserver(setting);\n+        entry.addListener(listener);\n     }\n \n-    public <T> void removeListener( Setting<T> setting, SettingChangeListener<T> listener )\n+    public <T> void removeListener(Setting<T> setting, SettingChangeListener<T> listener)\n     {\n-        Entry<T> entry = (Entry<T>) getObserver( setting );\n-        entry.removeListener( listener );\n+        Entry<T> entry = (Entry<T>) getObserver(setting);\n+        entry.removeListener(listener);\n     }\n \n     private class DepEntry<T> extends Entry<T>\n     {\n         private volatile T solved;\n \n-        private DepEntry( SettingImpl<T> setting, T value, T defaultValue, T solved )\n+        private DepEntry(SettingImpl<T> setting, T value, T defaultValue, T solved)\n         {\n-            super( setting, value, defaultValue, false );\n+            super(setting, value, defaultValue, false);\n             this.solved = solved;\n-            setting.validate( solved, validationConfig );\n+            setting.validate(solved, validationConfig);\n         }\n \n         @Override\n@@ -1126,13 +1100,13 @@ public class Config implements Configuration\n         }\n \n         @Override\n-        synchronized void setValue( T value )\n+        synchronized void setValue(T value)\n         {\n             T oldValue = solved;\n-            solved = setting.solveDependency( value != null ? value : defaultValue, getObserver( setting.dependency() ).getValue() );\n-            setting.validate( solved, validationConfig );\n-            internalSetValue( value );\n-            notifyListeners( oldValue, solved );\n+            solved = setting.solveDependency(value != null ? value : defaultValue, getObserver(setting.dependency()).getValue());\n+            setting.validate(solved, validationConfig);\n+            internalSetValue(value);\n+            notifyListeners(oldValue, solved);\n         }\n     }\n \n@@ -1145,17 +1119,17 @@ public class Config implements Configuration\n         private volatile T value;\n         private volatile boolean isDefault;\n \n-        private Entry( SettingImpl<T> setting, T value, T defaultValue )\n+        private Entry(SettingImpl<T> setting, T value, T defaultValue)\n         {\n-            this( setting, value, defaultValue, true );\n+            this(setting, value, defaultValue, true);\n         }\n \n-        private Entry( SettingImpl<T> setting, T value, T defaultValue, boolean validate )\n+        private Entry(SettingImpl<T> setting, T value, T defaultValue, boolean validate)\n         {\n             this.setting = setting;\n             this.defaultValue = defaultValue;\n             this.validate = validate;\n-            internalSetValue( value );\n+            internalSetValue(value);\n         }\n \n         @Override\n@@ -1164,46 +1138,46 @@ public class Config implements Configuration\n             return value;\n         }\n \n-        synchronized void setValue( T value )\n+        synchronized void setValue(T value)\n         {\n             T oldValue = this.value;\n-            internalSetValue( value );\n-            notifyListeners( oldValue, this.value );\n+            internalSetValue(value);\n+            notifyListeners(oldValue, this.value);\n         }\n \n-        void internalSetValue( T value )\n+        void internalSetValue(T value)\n         {\n             isDefault = value == null;\n             this.value = isDefault ? defaultValue : value;\n-            if ( validate )\n+            if (validate)\n             {\n-                setting.validate( this.value, validationConfig );\n+                setting.validate(this.value, validationConfig);\n             }\n         }\n \n-        protected void notifyListeners( T oldValue, T newValue )\n+        protected void notifyListeners(T oldValue, T newValue)\n         {\n-            updateListeners.forEach( listener -> listener.accept( oldValue, newValue ) );\n+            updateListeners.forEach(listener -> listener.accept(oldValue, newValue));\n         }\n \n-        private void addListener( SettingChangeListener<T> listener )\n+        private void addListener(SettingChangeListener<T> listener)\n         {\n-            if ( !setting.dynamic() )\n+            if (!setting.dynamic())\n             {\n-                throw new IllegalArgumentException( \"Setting is not dynamic and will not change\" );\n+                throw new IllegalArgumentException(\"Setting is not dynamic and will not change\");\n             }\n-            updateListeners.add( listener );\n+            updateListeners.add(listener);\n         }\n \n-        private void removeListener( SettingChangeListener<T> listener )\n+        private void removeListener(SettingChangeListener<T> listener)\n         {\n-            updateListeners.remove( listener );\n+            updateListeners.remove(listener);\n         }\n \n         @Override\n         public String toString()\n         {\n-            return setting.valueToString( value ) + (isDefault ? \" (default)\" : \" (configured)\");\n+            return setting.valueToString(value) + (isDefault ? \" (default)\" : \" (configured)\");\n         }\n     }\n \n@@ -1211,9 +1185,9 @@ public class Config implements Configuration\n     {\n         private final Setting<?> attemptedAccess;\n \n-        AccessDuringEvaluationException( Setting<?> attemptedAccess )\n+        AccessDuringEvaluationException(Setting<?> attemptedAccess)\n         {\n-            super( format( \"AccessDuringEvaluationException{ Tried to access %s in config during construction }\", attemptedAccess.name() ) );\n+            super(format(\"AccessDuringEvaluationException{ Tried to access %s in config during construction }\", attemptedAccess.name()));\n             this.attemptedAccess = attemptedAccess;\n         }\n \n@@ -1226,17 +1200,17 @@ public class Config implements Configuration\n     private class ValidationConfig implements Configuration\n     {\n         @Override\n-        public <T> T get( Setting<T> setting )\n+        public <T> T get(Setting<T> setting)\n         {\n-            if ( setting.dynamic() )\n+            if (setting.dynamic())\n             {\n-                throw new IllegalArgumentException( \"Can not depend on dynamic setting:\" + setting.name() );\n+                throw new IllegalArgumentException(\"Can not depend on dynamic setting:\" + setting.name());\n             }\n-            if ( !settings.containsKey( setting.name() ) )\n+            if (!settings.containsKey(setting.name()))\n             {\n-                throw new AccessDuringEvaluationException( setting );\n+                throw new AccessDuringEvaluationException(setting);\n             }\n-            return Config.this.get( setting );\n+            return Config.this.get(setting);\n         }\n     }\n }\n",
            "diff_size": 488
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1112/Config.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1112/Config.java\nindex 8c7924cc05c..53dc9fc57c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1112/Config.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1112/Config.java\n@@ -353,8 +353,7 @@ public class Config implements Configuration\n                                 AclEntryPermission.READ_NAMED_ATTRS, AclEntryPermission.WRITE_NAMED_ATTRS,\n                                 AclEntryPermission.READ_ACL, AclEntryPermission.WRITE_ACL,\n                                 AclEntryPermission.DELETE, AclEntryPermission.DELETE_CHILD,\n-                                AclEntryPermission.WRITE_OWNER, AclEntryPermission.SYNCHRONIZE\n-                        );\n+                                AclEntryPermission.WRITE_OWNER, AclEntryPermission.SYNCHRONIZE );\n                         for ( AclEntry acl : attrs.getAcl() )\n                         {\n                             Set<AclEntryPermission> permissions = acl.permissions();\n@@ -833,7 +832,7 @@ public class Config implements Configuration\n             int exitCode = process.exitValue();\n             if ( exitCode != 0 )\n             {\n-                String errOutput =  err.lines().collect( Collectors.joining( lineSeparator() ) );\n+                String errOutput = err.lines().collect( Collectors.joining( lineSeparator() ) );\n                 throw new IllegalArgumentException( format( \"Command `%s` failed with exit code %s.%n%s%n%s\", command, exitCode, output, errOutput ) );\n             }\n             return output;\n@@ -937,7 +936,6 @@ public class Config implements Configuration\n         }\n         set( setting, value );\n         log.info( \"%s changed to %s, by %s\", setting.name(), actualSetting.valueToString( value ), scope );\n-\n     }\n \n     public <T> void set( Setting<T> setting, T value )\n@@ -1239,4 +1237,4 @@ public class Config implements Configuration\n             return Config.this.get( setting );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
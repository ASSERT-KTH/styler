{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3055",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3055/ResourceLocker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3055/ResourceLocker.java\nindex 85164abe64e..fc6a9b57423 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3055/ResourceLocker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3055/ResourceLocker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.lock;\n \n import java.util.Arrays;\n@@ -25,20 +26,20 @@ import org.neo4j.kernel.impl.locking.LockTracer;\n \n public interface ResourceLocker\n {\n-    /**\n-     * Can be grabbed when no other client holds locks on the relevant resources. No other clients can hold locks\n-     * while one client holds an exclusive lock. If the lock cannot be acquired,\n-     * behavior is specified by the {@link WaitStrategy} for the given {@link ResourceType}.\n-     *\n-     * @param tracer\n-     * @param resourceType type or resource(s) to lock.\n-     * @param resourceIds id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n-     */\n-    void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException;\n+  /**\n+   * Can be grabbed when no other client holds locks on the relevant resources. No other clients can hold locks\n+   * while one client holds an exclusive lock. If the lock cannot be acquired,\n+   * behavior is specified by the {@link WaitStrategy} for the given {@link ResourceType}.\n+   *\n+   * @param tracer\n+   * @param resourceType type or resource(s) to lock.\n+   * @param resourceIds  id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n+   */\n+  void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException;\n \n-    ResourceLocker NONE = ( tracer, resourceType, resourceIds ) ->\n-    {\n-        throw new UnsupportedOperationException(\n-                \"Unexpected call to lock a resource \" + resourceType + \" \" + Arrays.toString( resourceIds ) );\n-    };\n+  ResourceLocker NONE = (tracer, resourceType, resourceIds) ->\n+  {\n+    throw new UnsupportedOperationException(\n+        \"Unexpected call to lock a resource \" + resourceType + \" \" + Arrays.toString(resourceIds));\n+  };\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3055/ResourceLocker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3055/ResourceLocker.java\nindex 85164abe64e..4defac0c120 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3055/ResourceLocker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3055/ResourceLocker.java\n@@ -38,7 +38,6 @@ public interface ResourceLocker\n \n     ResourceLocker NONE = ( tracer, resourceType, resourceIds ) ->\n     {\n-        throw new UnsupportedOperationException(\n-                \"Unexpected call to lock a resource \" + resourceType + \" \" + Arrays.toString( resourceIds ) );\n+        throw new UnsupportedOperationException( \"Unexpected call to lock a resource \" + resourceType + \" \" + Arrays.toString( resourceIds ) );\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2478",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2478/EnqueuingIdUpdateListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2478/EnqueuingIdUpdateListener.java\nindex 5d9ed41fc68..5cabdbcc9ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2478/EnqueuingIdUpdateListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2478/EnqueuingIdUpdateListener.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.EnumMap;\n@@ -31,27 +32,27 @@ import org.neo4j.util.concurrent.WorkSync;\n \n class EnqueuingIdUpdateListener implements IdUpdateListener\n {\n-    private final EnumMap<IdType,ChangedIds> idUpdates;\n-    private final Map<IdType,WorkSync<IdGenerator,IdGeneratorUpdateWork>> idGeneratorWorkSyncs;\n+    private final EnumMap<IdType, ChangedIds> idUpdates;\n+    private final Map<IdType, WorkSync<IdGenerator, IdGeneratorUpdateWork>> idGeneratorWorkSyncs;\n     private final PageCacheTracer pageCacheTracer;\n \n-    EnqueuingIdUpdateListener( Map<IdType,WorkSync<IdGenerator,IdGeneratorUpdateWork>> idGeneratorWorkSyncs, PageCacheTracer pageCacheTracer )\n+    EnqueuingIdUpdateListener(Map<IdType, WorkSync<IdGenerator, IdGeneratorUpdateWork>> idGeneratorWorkSyncs, PageCacheTracer pageCacheTracer)\n     {\n         this.pageCacheTracer = pageCacheTracer;\n-        this.idUpdates = new EnumMap<>( IdType.class );\n+        this.idUpdates = new EnumMap<>(IdType.class);\n         this.idGeneratorWorkSyncs = idGeneratorWorkSyncs;\n     }\n \n     @Override\n-    public void markIdAsUsed( IdType idType, IdGenerator idGenerator, long id, PageCursorTracer cursorTracer )\n+    public void markIdAsUsed(IdType idType, IdGenerator idGenerator, long id, PageCursorTracer cursorTracer)\n     {\n-        idUpdates.computeIfAbsent( idType, k -> new ChangedIds() ).addUsedId( id );\n+        idUpdates.computeIfAbsent(idType, k -> new ChangedIds()).addUsedId(id);\n     }\n \n     @Override\n-    public void markIdAsUnused( IdType idType, IdGenerator idGenerator, long id, PageCursorTracer cursorTracer )\n+    public void markIdAsUnused(IdType idType, IdGenerator idGenerator, long id, PageCursorTracer cursorTracer)\n     {\n-        idUpdates.computeIfAbsent( idType, k -> new ChangedIds() ).addUnusedId( id );\n+        idUpdates.computeIfAbsent(idType, k -> new ChangedIds()).addUnusedId(id);\n     }\n \n     @Override\n@@ -60,14 +61,14 @@ class EnqueuingIdUpdateListener implements IdUpdateListener\n         // Run through the id changes and apply them, or rather apply them asynchronously.\n         // This allows multiple concurrent threads applying batches of transactions to help each other out so that\n         // there's a higher chance that changes to different id types can be applied in parallel.\n-        for ( Map.Entry<IdType,ChangedIds> idChanges : idUpdates.entrySet() )\n+        for (Map.Entry<IdType, ChangedIds> idChanges : idUpdates.entrySet())\n         {\n             ChangedIds unit = idChanges.getValue();\n-            unit.applyAsync( idGeneratorWorkSyncs.get( idChanges.getKey() ), pageCacheTracer );\n+            unit.applyAsync(idGeneratorWorkSyncs.get(idChanges.getKey()), pageCacheTracer);\n         }\n \n         // Wait for all id updates to complete\n-        for ( Map.Entry<IdType,ChangedIds> idChanges : idUpdates.entrySet() )\n+        for (Map.Entry<IdType, ChangedIds> idChanges : idUpdates.entrySet())\n         {\n             ChangedIds unit = idChanges.getValue();\n             unit.awaitApply();\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2478/EnqueuingIdUpdateListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2478/EnqueuingIdUpdateListener.java\nindex 5d9ed41fc68..020465c0a61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2478/EnqueuingIdUpdateListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2478/EnqueuingIdUpdateListener.java\n@@ -73,4 +73,4 @@ class EnqueuingIdUpdateListener implements IdUpdateListener\n             unit.awaitApply();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
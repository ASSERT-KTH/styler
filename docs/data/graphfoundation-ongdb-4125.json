{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4125",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4125/ConnectRandomlyToServerGroupStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4125/ConnectRandomlyToServerGroupStrategy.java\nindex bf3ed8c8acb..6e2399355b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4125/ConnectRandomlyToServerGroupStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4125/ConnectRandomlyToServerGroupStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.upstream.strategies;\n \n import java.util.List;\n@@ -28,37 +29,36 @@ import org.neo4j.causalclustering.identity.MemberId;\n import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionStrategy;\n import org.neo4j.helpers.Service;\n \n-@Service.Implementation( UpstreamDatabaseSelectionStrategy.class )\n+@Service.Implementation(UpstreamDatabaseSelectionStrategy.class)\n public class ConnectRandomlyToServerGroupStrategy extends UpstreamDatabaseSelectionStrategy\n {\n-    static final String IDENTITY = \"connect-randomly-to-server-group\";\n-    private ConnectRandomlyToServerGroupImpl strategyImpl;\n-\n-    public ConnectRandomlyToServerGroupStrategy()\n-    {\n-        super( IDENTITY );\n-    }\n+  static final String IDENTITY = \"connect-randomly-to-server-group\";\n+  private ConnectRandomlyToServerGroupImpl strategyImpl;\n \n-    @Override\n-    public void init()\n-    {\n-        List<String> groups = config.get( CausalClusteringSettings.connect_randomly_to_server_group_strategy );\n-        strategyImpl = new ConnectRandomlyToServerGroupImpl( groups, topologyService, myself );\n+  public ConnectRandomlyToServerGroupStrategy()\n+  {\n+    super(IDENTITY);\n+  }\n \n-        if ( groups.isEmpty() )\n-        {\n-            log.warn( \"No server groups configured for upstream strategy \" + readableName + \". Strategy will not find upstream servers.\" );\n-        }\n-        else\n-        {\n-            String readableGroups = groups.stream().collect( Collectors.joining( \", \" ) );\n-            log.info( \"Upstream selection strategy \" + readableName + \" configured with server groups \" + readableGroups );\n-        }\n-    }\n+  @Override\n+  public void init()\n+  {\n+    List<String> groups = config.get(CausalClusteringSettings.connect_randomly_to_server_group_strategy);\n+    strategyImpl = new ConnectRandomlyToServerGroupImpl(groups, topologyService, myself);\n \n-    @Override\n-    public Optional<MemberId> upstreamDatabase()\n+    if (groups.isEmpty())\n     {\n-        return strategyImpl.upstreamDatabase();\n+      log.warn(\"No server groups configured for upstream strategy \" + readableName + \". Strategy will not find upstream servers.\");\n+    } else\n+    {\n+      String readableGroups = groups.stream().collect(Collectors.joining(\", \"));\n+      log.info(\"Upstream selection strategy \" + readableName + \" configured with server groups \" + readableGroups);\n     }\n+  }\n+\n+  @Override\n+  public Optional<MemberId> upstreamDatabase()\n+  {\n+    return strategyImpl.upstreamDatabase();\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4125/ConnectRandomlyToServerGroupStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4125/ConnectRandomlyToServerGroupStrategy.java\nindex bf3ed8c8acb..553a66cb0a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4125/ConnectRandomlyToServerGroupStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4125/ConnectRandomlyToServerGroupStrategy.java\n@@ -44,8 +44,7 @@ public class ConnectRandomlyToServerGroupStrategy extends UpstreamDatabaseSelect\n     {\n         List<String> groups = config.get( CausalClusteringSettings.connect_randomly_to_server_group_strategy );\n         strategyImpl = new ConnectRandomlyToServerGroupImpl( groups, topologyService, myself );\n-\n-        if ( groups.isEmpty() )\n+if ( groups.isEmpty() )\n         {\n             log.warn( \"No server groups configured for upstream strategy \" + readableName + \". Strategy will not find upstream servers.\" );\n         }\n@@ -61,4 +60,4 @@ public class ConnectRandomlyToServerGroupStrategy extends UpstreamDatabaseSelect\n     {\n         return strategyImpl.upstreamDatabase();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
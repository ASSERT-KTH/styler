{
    "project_name": "graphfoundation-ongdb",
    "error_id": "84",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/84/Parameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/84/Parameter.java\nindex fd501d9554d..d8cade57ab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/84/Parameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/84/Parameter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import static java.util.Objects.requireNonNull;\n@@ -25,141 +26,141 @@ import static org.neo4j.codegen.TypeReference.typeReference;\n \n public class Parameter\n {\n-    public static Parameter param( Class<?> type, String name )\n-    {\n-        return param( typeReference( type ), name );\n-    }\n+  public static Parameter param(Class<?> type, String name)\n+  {\n+    return param(typeReference(type), name);\n+  }\n \n-    public static Parameter param( TypeReference type, String name )\n-    {\n-        return new Parameter( requireNonNull( type, \"TypeReference\" ), requireValidName( name ) );\n-    }\n+  public static Parameter param(TypeReference type, String name)\n+  {\n+    return new Parameter(requireNonNull(type, \"TypeReference\"), requireValidName(name));\n+  }\n \n-    static final Parameter[] NO_PARAMETERS = new Parameter[0];\n+  static final Parameter[] NO_PARAMETERS = new Parameter[0];\n \n-    private final TypeReference type;\n-    private final String name;\n+  private final TypeReference type;\n+  private final String name;\n \n-    private Parameter( TypeReference type, String name )\n+  private Parameter(TypeReference type, String name)\n+  {\n+    if (type == VOID)\n     {\n-        if ( type == VOID )\n-        {\n-            throw new IllegalArgumentException( \"Variables cannot be declared as void.\" );\n-        }\n-        this.type = type;\n-        this.name = name;\n+      throw new IllegalArgumentException(\"Variables cannot be declared as void.\");\n     }\n+    this.type = type;\n+    this.name = name;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return writeTo( new StringBuilder() ).toString();\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return writeTo(new StringBuilder()).toString();\n+  }\n \n-    StringBuilder writeTo( StringBuilder result )\n-    {\n-        result.append( \"Parameter[ \" );\n-        type.writeTo( result );\n-        return result.append( \" \" ).append( name ).append( \" ]\" );\n-    }\n+  StringBuilder writeTo(StringBuilder result)\n+  {\n+    result.append(\"Parameter[ \");\n+    type.writeTo(result);\n+    return result.append(\" \").append(name).append(\" ]\");\n+  }\n \n-    public TypeReference type()\n-    {\n-        return type;\n-    }\n+  public TypeReference type()\n+  {\n+    return type;\n+  }\n+\n+  public String name()\n+  {\n+    return name;\n+  }\n \n-    public String name()\n+  static String requireValidName(String name)\n+  {\n+    if (name == null)\n     {\n-        return name;\n+      throw new NullPointerException(\"name\");\n     }\n-\n-    static String requireValidName( String name )\n+    notKeyword(name);\n+    if (!Character.isJavaIdentifierStart(name.codePointAt(0)))\n     {\n-        if ( name == null )\n-        {\n-            throw new NullPointerException( \"name\" );\n-        }\n-        notKeyword( name );\n-        if ( !Character.isJavaIdentifierStart( name.codePointAt( 0 ) ) )\n-        {\n-            throw new IllegalArgumentException( \"Invalid name: \" + name );\n-        }\n-        for ( int i = 0, cp; i < name.length(); i += Character.charCount( cp ) )\n-        {\n-            if ( !Character.isJavaIdentifierPart( cp = name.codePointAt( i ) ) )\n-            {\n-                throw new IllegalArgumentException( \"Invalid name: \" + name );\n-            }\n-        }\n-        return name;\n+      throw new IllegalArgumentException(\"Invalid name: \" + name);\n     }\n-\n-    private static void notKeyword( String name )\n+    for (int i = 0, cp; i < name.length(); i += Character.charCount(cp))\n     {\n-        switch ( name )\n-        {\n-        case \"abstract\":\n-        case \"continue\":\n-        case \"for\":\n-        case \"new\":\n-        case \"switch\":\n-        case \"assert\":\n-        case \"default\":\n-        case \"goto\":\n-        case \"package\":\n-        case \"synchronized\":\n-        case \"boolean\":\n-        case \"do\":\n-        case \"if\":\n-        case \"private\":\n-        case \"break\":\n-        case \"double\":\n-        case \"implements\":\n-        case \"protected\":\n-        case \"throw\":\n-        case \"byte\":\n-        case \"else\":\n-        case \"import\":\n-        case \"public\":\n-        case \"throws\":\n-        case \"case\":\n-        case \"enum\":\n-        case \"instanceof\":\n-        case \"return\":\n-        case \"transient\":\n-        case \"catch\":\n-        case \"extends\":\n-        case \"int\":\n-        case \"short\":\n-        case \"try\":\n-        case \"char\":\n-        case \"final\":\n-        case \"interface\":\n-        case \"static\":\n-        case \"void\":\n-        case \"class\":\n-        case \"finally\":\n-        case \"long\":\n-        case \"strictfp\":\n-        case \"volatile\":\n-        case \"const\":\n-        case \"float\":\n-        case \"native\":\n-        case \"super\":\n-        case \"while\":\n-            throw new IllegalArgumentException( \"'\" + name + \"' is a java keyword\" );\n-        case \"this\":\n-        case \"null\":\n-        case \"true\":\n-        case \"false\":\n-            throw new IllegalArgumentException( \"'\" + name + \"' is a reserved name\" );\n-        default:\n-            break;\n-        }\n+      if (!Character.isJavaIdentifierPart(cp = name.codePointAt(i)))\n+      {\n+        throw new IllegalArgumentException(\"Invalid name: \" + name);\n+      }\n     }\n+    return name;\n+  }\n \n-    boolean isVarArg()\n+  private static void notKeyword(String name)\n+  {\n+    switch (name)\n     {\n-        return false;\n+      case \"abstract\":\n+      case \"continue\":\n+      case \"for\":\n+      case \"new\":\n+      case \"switch\":\n+      case \"assert\":\n+      case \"default\":\n+      case \"goto\":\n+      case \"package\":\n+      case \"synchronized\":\n+      case \"boolean\":\n+      case \"do\":\n+      case \"if\":\n+      case \"private\":\n+      case \"break\":\n+      case \"double\":\n+      case \"implements\":\n+      case \"protected\":\n+      case \"throw\":\n+      case \"byte\":\n+      case \"else\":\n+      case \"import\":\n+      case \"public\":\n+      case \"throws\":\n+      case \"case\":\n+      case \"enum\":\n+      case \"instanceof\":\n+      case \"return\":\n+      case \"transient\":\n+      case \"catch\":\n+      case \"extends\":\n+      case \"int\":\n+      case \"short\":\n+      case \"try\":\n+      case \"char\":\n+      case \"final\":\n+      case \"interface\":\n+      case \"static\":\n+      case \"void\":\n+      case \"class\":\n+      case \"finally\":\n+      case \"long\":\n+      case \"strictfp\":\n+      case \"volatile\":\n+      case \"const\":\n+      case \"float\":\n+      case \"native\":\n+      case \"super\":\n+      case \"while\":\n+        throw new IllegalArgumentException(\"'\" + name + \"' is a java keyword\");\n+      case \"this\":\n+      case \"null\":\n+      case \"true\":\n+      case \"false\":\n+        throw new IllegalArgumentException(\"'\" + name + \"' is a reserved name\");\n+      default:\n+        break;\n     }\n+  }\n+\n+  boolean isVarArg()\n+  {\n+    return false;\n+  }\n }\n",
            "diff_size": 197
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/84/Parameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/84/Parameter.java\nindex fd501d9554d..3a5d49774d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/84/Parameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/84/Parameter.java\n@@ -79,7 +79,8 @@ public class Parameter\n         {\n             throw new NullPointerException( \"name\" );\n         }\n-        notKeyword( name );\n+\n+notKeyword( name );\n         if ( !Character.isJavaIdentifierStart( name.codePointAt( 0 ) ) )\n         {\n             throw new IllegalArgumentException( \"Invalid name: \" + name );\n@@ -162,4 +163,4 @@ public class Parameter\n     {\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
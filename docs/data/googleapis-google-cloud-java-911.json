{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "911",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "warning",
                "message": "'CLASS_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "  private static final boolean RETRYABLE = true;\n  private static final boolean IDEMPOTENT = true;\n  private static class CustomServiceException extends BaseServiceException {\n\n    private static final long serialVersionUID = -195251309124875103L;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..5c94b6a18bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/911/BaseServiceExceptionTest.java\n@@ -47,6 +47,7 @@ public class BaseServiceExceptionTest {\n   private static final String REASON = \"some reason\";\n   private static final boolean RETRYABLE = true;\n   private static final boolean IDEMPOTENT = true;\n+\n   private static class CustomServiceException extends BaseServiceException {\n \n     private static final long serialVersionUID = -195251309124875103L;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..5c94b6a18bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/911/BaseServiceExceptionTest.java\n@@ -47,6 +47,7 @@ public class BaseServiceExceptionTest {\n   private static final String REASON = \"some reason\";\n   private static final boolean RETRYABLE = true;\n   private static final boolean IDEMPOTENT = true;\n+\n   private static class CustomServiceException extends BaseServiceException {\n \n     private static final long serialVersionUID = -195251309124875103L;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..27bc16baa5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/911/BaseServiceExceptionTest.java\n@@ -168,4 +168,4 @@ public class BaseServiceExceptionTest {\n       verify(exceptionMock);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..53e3a8e9f1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/911/BaseServiceExceptionTest.java\n@@ -28,9 +28,7 @@ import static org.junit.Assert.assertTrue;\n \n import com.google.api.client.googleapis.json.GoogleJsonError;\n import com.google.common.collect.ImmutableSet;\n-\n import org.junit.Test;\n-\n import java.io.IOException;\n import java.net.SocketException;\n import java.net.SocketTimeoutException;\n@@ -39,6 +37,8 @@ import java.util.Set;\n /**\n  * Tests for {@link BaseServiceException}.\n  */\n+\n+\n public class BaseServiceExceptionTest {\n \n   private static final int CODE = 1;\n@@ -57,22 +57,19 @@ public class BaseServiceExceptionTest {\n \n     @Override\n     protected Set<Error> getRetryableErrors() {\n-      return ImmutableSet.of(new Error(CODE, REASON), new Error(null, REASON),\n-          new Error(CODE_NO_REASON, null));\n+      return ImmutableSet.of(new Error(CODE, REASON), new Error(null, REASON), new Error(CODE_NO_REASON, null));\n     }\n   }\n \n   @Test\n   public void testBaseServiceException() {\n-    BaseServiceException serviceException = new BaseServiceException(CODE, MESSAGE, REASON,\n-        IDEMPOTENT);\n+    BaseServiceException serviceException = new BaseServiceException(CODE, MESSAGE, REASON, IDEMPOTENT);\n     assertEquals(CODE, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n     assertEquals(REASON, serviceException.getReason());\n     assertFalse(serviceException.isRetryable());\n     assertEquals(IDEMPOTENT, serviceException.isIdempotent());\n     assertNull(serviceException.getCause());\n-\n     serviceException = new BaseServiceException(CODE, MESSAGE, REASON, IDEMPOTENT);\n     assertEquals(CODE, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n@@ -80,7 +77,6 @@ public class BaseServiceExceptionTest {\n     assertFalse(serviceException.isRetryable());\n     assertEquals(IDEMPOTENT, serviceException.isIdempotent());\n     assertNull(serviceException.getCause());\n-\n     Exception cause = new RuntimeException();\n     serviceException = new BaseServiceException(CODE, MESSAGE, REASON, IDEMPOTENT, cause);\n     assertEquals(CODE, serviceException.getCode());\n@@ -89,7 +85,6 @@ public class BaseServiceExceptionTest {\n     assertFalse(serviceException.isRetryable());\n     assertEquals(IDEMPOTENT, serviceException.isIdempotent());\n     assertEquals(cause, serviceException.getCause());\n-\n     serviceException = new BaseServiceException(CODE, MESSAGE, REASON, false, cause);\n     assertEquals(CODE, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n@@ -97,28 +92,24 @@ public class BaseServiceExceptionTest {\n     assertFalse(serviceException.isRetryable());\n     assertFalse(serviceException.isIdempotent());\n     assertEquals(cause, serviceException.getCause());\n-\n     IOException exception = new SocketTimeoutException();\n     serviceException = new BaseServiceException(exception, true);\n     assertTrue(serviceException.isRetryable());\n     assertTrue(serviceException.isIdempotent());\n     assertNull(serviceException.getMessage());\n     assertEquals(exception, serviceException.getCause());\n-\n     exception = new SocketException();\n     serviceException = new BaseServiceException(exception, true);\n     assertTrue(serviceException.isRetryable());\n     assertTrue(serviceException.isIdempotent());\n     assertNull(serviceException.getMessage());\n     assertEquals(exception, serviceException.getCause());\n-\n     exception = new IOException(\"insufficient data written\");\n     serviceException = new BaseServiceException(exception, true);\n     assertTrue(serviceException.isRetryable());\n     assertTrue(serviceException.isIdempotent());\n     assertEquals(\"insufficient data written\", serviceException.getMessage());\n     assertEquals(exception, serviceException.getCause());\n-\n     GoogleJsonError error = new GoogleJsonError();\n     error.setCode(CODE);\n     error.setMessage(MESSAGE);\n@@ -127,21 +118,18 @@ public class BaseServiceExceptionTest {\n     assertEquals(MESSAGE, serviceException.getMessage());\n     assertFalse(serviceException.isRetryable());\n     assertTrue(serviceException.isIdempotent());\n-\n     serviceException = new CustomServiceException(CODE, MESSAGE, REASON, IDEMPOTENT);\n     assertEquals(CODE, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n     assertEquals(REASON, serviceException.getReason());\n     assertEquals(RETRYABLE, serviceException.isRetryable());\n     assertEquals(IDEMPOTENT, serviceException.isIdempotent());\n-\n     serviceException = new CustomServiceException(CODE_NO_REASON, MESSAGE, null, IDEMPOTENT);\n     assertEquals(CODE_NO_REASON, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n     assertNull(serviceException.getReason());\n     assertEquals(RETRYABLE, serviceException.isRetryable());\n     assertEquals(IDEMPOTENT, serviceException.isIdempotent());\n-\n     serviceException = new CustomServiceException(UNKNOWN_CODE, MESSAGE, REASON, IDEMPOTENT);\n     assertEquals(UNKNOWN_CODE, serviceException.getCode());\n     assertEquals(MESSAGE, serviceException.getMessage());\n@@ -153,8 +141,7 @@ public class BaseServiceExceptionTest {\n   @Test\n   public void testTranslateAndThrow() throws Exception {\n     BaseServiceException cause = new BaseServiceException(CODE, MESSAGE, REASON, IDEMPOTENT);\n-    RetryHelper.RetryHelperException exceptionMock =\n-        createMock(RetryHelper.RetryHelperException.class);\n+    RetryHelper.RetryHelperException exceptionMock = createMock(RetryHelper.RetryHelperException.class);\n     expect(exceptionMock.getCause()).andReturn(cause).times(2);\n     replay(exceptionMock);\n     try {\n@@ -168,4 +155,4 @@ public class BaseServiceExceptionTest {\n       verify(exceptionMock);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..5c94b6a18bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/911/BaseServiceExceptionTest.java\n@@ -47,6 +47,7 @@ public class BaseServiceExceptionTest {\n   private static final String REASON = \"some reason\";\n   private static final boolean RETRYABLE = true;\n   private static final boolean IDEMPOTENT = true;\n+\n   private static class CustomServiceException extends BaseServiceException {\n \n     private static final long serialVersionUID = -195251309124875103L;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/911/BaseServiceExceptionTest.java\nindex 9ac4b4b9894..5c94b6a18bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/911/BaseServiceExceptionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/911/BaseServiceExceptionTest.java\n@@ -47,6 +47,7 @@ public class BaseServiceExceptionTest {\n   private static final String REASON = \"some reason\";\n   private static final boolean RETRYABLE = true;\n   private static final boolean IDEMPOTENT = true;\n+\n   private static class CustomServiceException extends BaseServiceException {\n \n     private static final long serialVersionUID = -195251309124875103L;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
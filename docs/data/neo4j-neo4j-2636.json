{
    "project_name": "neo4j-neo4j",
    "error_id": "2636",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "223",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "235",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2636/TableOutputFormatter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2636/TableOutputFormatter.java\nindex 068c813f6bd..ce1a75dd5fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2636/TableOutputFormatter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2636/TableOutputFormatter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.prettyprint;\n \n import java.util.ArrayList;\n@@ -45,70 +46,70 @@ public class TableOutputFormatter implements OutputFormatter\n     private final boolean wrap;\n     private final int numSampleRows;\n \n-    public TableOutputFormatter( boolean wrap, int numSampleRows )\n+    public TableOutputFormatter(boolean wrap, int numSampleRows)\n     {\n         this.wrap = wrap;\n         this.numSampleRows = numSampleRows;\n     }\n \n     @Override\n-    public int formatAndCount( @Nonnull BoltResult result, @Nonnull LinePrinter output )\n+    public int formatAndCount(@Nonnull BoltResult result, @Nonnull LinePrinter output)\n     {\n-        String[] columns = result.getKeys().toArray( new String[0] );\n-        if ( columns.length == 0 )\n+        String[] columns = result.getKeys().toArray(new String[0]);\n+        if (columns.length == 0)\n         {\n             return 0;\n         }\n \n         Iterator<Record> records = result.iterate();\n-        return formatResultAndCountRows( columns, records, output );\n+        return formatResultAndCountRows(columns, records, output);\n     }\n \n-    private List<Record> take( Iterator<Record> records, int count )\n+    private List<Record> take(Iterator<Record> records, int count)\n     {\n-        List<Record> topRecords = new ArrayList<>( count );\n-        while ( records.hasNext() && topRecords.size() < count )\n+        List<Record> topRecords = new ArrayList<>(count);\n+        while (records.hasNext() && topRecords.size() < count)\n         {\n-            topRecords.add( records.next() );\n+            topRecords.add(records.next());\n         }\n         return topRecords;\n     }\n \n-    private int formatResultAndCountRows( String[] columns,\n-                                          Iterator<Record> records,\n-                                          LinePrinter output )\n+    private int formatResultAndCountRows(String[] columns,\n+                                         Iterator<Record> records,\n+                                         LinePrinter output)\n     {\n \n-        List<Record> topRecords = take( records, numSampleRows );\n-        int[] columnSizes = calculateColumnSizes( columns, topRecords, records.hasNext() );\n+        List<Record> topRecords = take(records, numSampleRows);\n+        int[] columnSizes = calculateColumnSizes(columns, topRecords, records.hasNext());\n \n         int totalWidth = 1;\n-        for ( int columnSize : columnSizes )\n+        for (int columnSize : columnSizes)\n         {\n             totalWidth += columnSize + 3;\n         }\n \n-        StringBuilder builder = new StringBuilder( totalWidth );\n-        String headerLine = formatRow( builder, columnSizes, columns, new boolean[columnSizes.length] );\n+        StringBuilder builder = new StringBuilder(totalWidth);\n+        String headerLine = formatRow(builder, columnSizes, columns, new boolean[columnSizes.length]);\n         int lineWidth = totalWidth - 2;\n-        String dashes = \"+\" + OutputFormatter.repeat( '-', lineWidth ) + \"+\";\n+        String dashes = \"+\" + OutputFormatter.repeat('-', lineWidth) + \"+\";\n \n-        output.printOut( dashes );\n-        output.printOut( headerLine );\n-        output.printOut( dashes );\n+        output.printOut(dashes);\n+        output.printOut(headerLine);\n+        output.printOut(dashes);\n \n         int numberOfRows = 0;\n-        for ( Record record : topRecords )\n+        for (Record record : topRecords)\n         {\n-            output.printOut( formatRecord( builder, columnSizes, record ) );\n+            output.printOut(formatRecord(builder, columnSizes, record));\n             numberOfRows++;\n         }\n-        while ( records.hasNext() )\n+        while (records.hasNext())\n         {\n-            output.printOut( formatRecord( builder, columnSizes, records.next() ) );\n+            output.printOut(formatRecord(builder, columnSizes, records.next()));\n             numberOfRows++;\n         }\n-        output.printOut( String.format( \"%s%n\", dashes ) );\n+        output.printOut(String.format(\"%s%n\", dashes));\n         return numberOfRows;\n     }\n \n@@ -120,19 +121,19 @@ public class TableOutputFormatter implements OutputFormatter\n      * @param moreDataAfterSamples if there is more data that should be written into the table after `data`\n      * @return the column sizes\n      */\n-    private int[] calculateColumnSizes( @Nonnull String[] columns, @Nonnull List<Record> data, boolean moreDataAfterSamples )\n+    private int[] calculateColumnSizes(@Nonnull String[] columns, @Nonnull List<Record> data, boolean moreDataAfterSamples)\n     {\n         int[] columnSizes = new int[columns.length];\n-        for ( int i = 0; i < columns.length; i++ )\n+        for (int i = 0; i < columns.length; i++)\n         {\n             columnSizes[i] = columns[i].length();\n         }\n-        for ( Record record : data )\n+        for (Record record : data)\n         {\n-            for ( int i = 0; i < columns.length; i++ )\n+            for (int i = 0; i < columns.length; i++)\n             {\n-                int len = columnLengthForValue( record.get( i ), moreDataAfterSamples );\n-                if ( columnSizes[i] < len )\n+                int len = columnLengthForValue(record.get(i), moreDataAfterSamples);\n+                if (columnSizes[i] < len)\n                 {\n                     columnSizes[i] = len;\n                 }\n@@ -148,30 +149,29 @@ public class TableOutputFormatter implements OutputFormatter\n      * @param moreDataAfterSamples if there is more data that should be written into the table after `data`\n      * @return the column size for this value.\n      */\n-    private int columnLengthForValue( Value value, boolean moreDataAfterSamples )\n+    private int columnLengthForValue(Value value, boolean moreDataAfterSamples)\n     {\n-        if ( value instanceof NumberValueAdapter && moreDataAfterSamples )\n+        if (value instanceof NumberValueAdapter && moreDataAfterSamples)\n         {\n             return 19; // The number of digits of Long.Max\n-        }\n-        else\n+        } else\n         {\n-            return formatValue( value ).length();\n+            return formatValue(value).length();\n         }\n     }\n \n-    private String formatRecord( StringBuilder sb, int[] columnSizes, Record record )\n+    private String formatRecord(StringBuilder sb, int[] columnSizes, Record record)\n     {\n-        sb.setLength( 0 );\n-        return formatRow( sb, columnSizes, formatValues( record ), new boolean[columnSizes.length] );\n+        sb.setLength(0);\n+        return formatRow(sb, columnSizes, formatValues(record), new boolean[columnSizes.length]);\n     }\n \n-    private String[] formatValues( Record record )\n+    private String[] formatValues(Record record)\n     {\n         String[] row = new String[record.size()];\n-        for ( int i = 0; i < row.length; i++ )\n+        for (int i = 0; i < row.length; i++)\n         {\n-            row[i] = formatValue( record.get( i ) );\n+            row[i] = formatValue(record.get(i));\n         }\n         return row;\n     }\n@@ -185,107 +185,102 @@ public class TableOutputFormatter implements OutputFormatter\n      * @param continuation for each column whether it holds the remainder of data that did not fit in the column\n      * @return the String result\n      */\n-    private String formatRow( StringBuilder sb, int[] columnSizes, String[] row, boolean[] continuation )\n+    private String formatRow(StringBuilder sb, int[] columnSizes, String[] row, boolean[] continuation)\n     {\n-        if ( !continuation[0] )\n+        if (!continuation[0])\n         {\n-            sb.append( \"|\" );\n-        }\n-        else\n+            sb.append(\"|\");\n+        } else\n         {\n-            sb.append( \"\\\\\" );\n+            sb.append(\"\\\\\");\n         }\n         boolean remainder = false;\n-        for ( int i = 0; i < row.length; i++ )\n+        for (int i = 0; i < row.length; i++)\n         {\n-            sb.append( \" \" );\n+            sb.append(\" \");\n             int length = columnSizes[i];\n             String txt = row[i];\n-            if ( txt != null )\n+            if (txt != null)\n             {\n-                if ( txt.length() > length )\n+                if (txt.length() > length)\n                 {\n-                    if ( wrap )\n+                    if (wrap)\n                     {\n-                        sb.append( txt, 0, length );\n-                        row[i] = txt.substring( length );\n+                        sb.append(txt, 0, length);\n+                        row[i] = txt.substring(length);\n                         continuation[i] = true;\n                         remainder = true;\n-                    }\n-                    else\n+                    } else\n                     {\n-                        sb.append( txt, 0, length - 1 );\n-                        sb.append( \"\u2026\" );\n+                        sb.append(txt, 0, length - 1);\n+                        sb.append(\"\u2026\");\n                     }\n-                }\n-                else\n+                } else\n                 {\n                     row[i] = null;\n-                    sb.append( OutputFormatter.rightPad( txt, length ) );\n+                    sb.append(OutputFormatter.rightPad(txt, length));\n                 }\n-            }\n-            else\n+            } else\n             {\n-                sb.append( OutputFormatter.repeat( ' ', length ) );\n+                sb.append(OutputFormatter.repeat(' ', length));\n             }\n-            if ( i == row.length - 1 || !continuation[i + 1] )\n+            if (i == row.length - 1 || !continuation[i + 1])\n             {\n-                sb.append( \" |\" );\n-            }\n-            else\n+                sb.append(\" |\");\n+            } else\n             {\n-                sb.append( \" \\\\\" );\n+                sb.append(\" \\\\\");\n             }\n         }\n-        if ( wrap && remainder )\n+        if (wrap && remainder)\n         {\n-            sb.append( OutputFormatter.NEWLINE );\n-            formatRow( sb, columnSizes, row, continuation );\n+            sb.append(OutputFormatter.NEWLINE);\n+            formatRow(sb, columnSizes, row, continuation);\n         }\n         return sb.toString();\n     }\n \n     @Override\n     @Nonnull\n-    public String formatFooter( @Nonnull BoltResult result, int numberOfRows )\n+    public String formatFooter(@Nonnull BoltResult result, int numberOfRows)\n     {\n         ResultSummary summary = result.getSummary();\n-        return String.format( \"%d row%s available after %d ms, \" +\n-                              \"consumed after another %d ms\", numberOfRows, numberOfRows != 1 ? \"s\" : \"\",\n-                              summary.resultAvailableAfter( MILLISECONDS ),\n-                              summary.resultConsumedAfter( MILLISECONDS ) );\n+        return String.format(\"%d row%s available after %d ms, \" +\n+            \"consumed after another %d ms\", numberOfRows, numberOfRows != 1 ? \"s\" : \"\",\n+          summary.resultAvailableAfter(MILLISECONDS),\n+          summary.resultConsumedAfter(MILLISECONDS));\n     }\n \n     @Override\n     @Nonnull\n-    public String formatInfo( @Nonnull ResultSummary summary )\n+    public String formatInfo(@Nonnull ResultSummary summary)\n     {\n-        Map<String, Value> info = OutputFormatter.info( summary );\n-        if ( info.isEmpty() )\n+        Map<String, Value> info = OutputFormatter.info(summary);\n+        if (info.isEmpty())\n         {\n             return \"\";\n         }\n-        String[] columns = info.keySet().toArray( new String[0] );\n+        String[] columns = info.keySet().toArray(new String[0]);\n         StringBuilder sb = new StringBuilder();\n-        Record record = new InternalRecord( asList( columns ), info.values().toArray( new Value[0] ) );\n-        formatResultAndCountRows( columns, Collections.singletonList( record ).iterator(), line -> sb.append( line ).append( OutputFormatter.NEWLINE ) );\n+        Record record = new InternalRecord(asList(columns), info.values().toArray(new Value[0]));\n+        formatResultAndCountRows(columns, Collections.singletonList(record).iterator(), line -> sb.append(line).append(OutputFormatter.NEWLINE));\n         return sb.toString();\n     }\n \n     @Override\n     @Nonnull\n-    public String formatPlan( @Nullable ResultSummary summary )\n+    public String formatPlan(@Nullable ResultSummary summary)\n     {\n-        if ( summary == null || !summary.hasPlan() )\n+        if (summary == null || !summary.hasPlan())\n         {\n             return \"\";\n         }\n-        return new TablePlanFormatter().formatPlan( summary.plan() );\n+        return new TablePlanFormatter().formatPlan(summary.plan());\n     }\n \n     @Override\n     public Set<Capabilities> capabilities()\n     {\n-        return EnumSet.allOf( Capabilities.class );\n+        return EnumSet.allOf(Capabilities.class);\n     }\n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
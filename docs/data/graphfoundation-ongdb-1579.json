{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1579",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1579/ByteCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1579/ByteCode.java\nindex 63537ab0e2c..0fe135d56bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1579/ByteCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1579/ByteCode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.bytecode;\n \n import org.neo4j.codegen.CodeGenerationStrategy;\n@@ -25,48 +26,47 @@ import org.neo4j.codegen.CodeGeneratorOption;\n \n public enum ByteCode implements CodeGeneratorOption\n {\n-    ;\n-    public static final CodeGenerationStrategy<?> BYTECODE = new CodeGenerationStrategy<Configuration>()\n+  ;\n+  public static final CodeGenerationStrategy<?> BYTECODE = new CodeGenerationStrategy<Configuration>()\n+  {\n+    @Override\n+    protected Configuration createConfigurator(ClassLoader loader)\n     {\n-        @Override\n-        protected Configuration createConfigurator( ClassLoader loader )\n-        {\n-            return new Configuration();\n-        }\n-\n-        @Override\n-        protected CodeGenerator createCodeGenerator( ClassLoader loader, Configuration configuration )\n-        {\n-            return new ByteCodeGenerator( loader, configuration );\n-        }\n+      return new Configuration();\n+    }\n \n-        @Override\n-        protected String name()\n-        {\n-            return \"BYTECODE\";\n-        }\n-    };\n-    public static final CodeGeneratorOption VERIFY_GENERATED_BYTECODE = load( \"Verifier\" );\n+    @Override\n+    protected CodeGenerator createCodeGenerator(ClassLoader loader, Configuration configuration)\n+    {\n+      return new ByteCodeGenerator(loader, configuration);\n+    }\n \n     @Override\n-    public void applyTo( Object target )\n+    protected String name()\n     {\n-        if ( target instanceof Configuration )\n-        {\n-            ((Configuration) target).withFlag( this );\n-        }\n+      return \"BYTECODE\";\n     }\n+  };\n+  public static final CodeGeneratorOption VERIFY_GENERATED_BYTECODE = load(\"Verifier\");\n \n-    private static CodeGeneratorOption load( String option )\n+  @Override\n+  public void applyTo(Object target)\n+  {\n+    if (target instanceof Configuration)\n+    {\n+      ((Configuration) target).withFlag(this);\n+    }\n+  }\n+\n+  private static CodeGeneratorOption load(String option)\n+  {\n+    try\n+    {\n+      return (CodeGeneratorOption) Class.forName(ByteCode.class.getName() + option)\n+          .getDeclaredMethod(\"load\" + option).invoke(null);\n+    } catch (Throwable e)\n     {\n-        try\n-        {\n-            return (CodeGeneratorOption) Class.forName( ByteCode.class.getName() + option )\n-                    .getDeclaredMethod( \"load\" + option ).invoke( null );\n-        }\n-        catch ( Throwable e )\n-        {\n-            return BLANK_OPTION;\n-        }\n+      return BLANK_OPTION;\n     }\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1579/ByteCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1579/ByteCode.java\nindex 63537ab0e2c..176d6ffa1e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1579/ByteCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1579/ByteCode.java\n@@ -46,7 +46,8 @@ public enum ByteCode implements CodeGeneratorOption\n             return \"BYTECODE\";\n         }\n     };\n-    public static final CodeGeneratorOption VERIFY_GENERATED_BYTECODE = load( \"Verifier\" );\n+\n+public static final CodeGeneratorOption VERIFY_GENERATED_BYTECODE = load( \"Verifier\" );\n \n     @Override\n     public void applyTo( Object target )\n@@ -61,12 +62,11 @@ public enum ByteCode implements CodeGeneratorOption\n     {\n         try\n         {\n-            return (CodeGeneratorOption) Class.forName( ByteCode.class.getName() + option )\n-                    .getDeclaredMethod( \"load\" + option ).invoke( null );\n-        }\n+            return (CodeGeneratorOption) Class.forName( ByteCode.class.getName() + option ).getDeclaredMethod( \"load\" + option ).invoke( null );\n+    }\n         catch ( Throwable e )\n         {\n             return BLANK_OPTION;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
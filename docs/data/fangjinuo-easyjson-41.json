{
    "project_name": "fangjinuo-easyjson",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "80",
                "column": "109",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n        EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n        propertyBuilder.setObjectMapper(objectMapper);\n        return propertyBuilder;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..4ddccc17a23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/41/EasyJsonBeanSerializerFactory.java\n@@ -77,7 +77,7 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..df3f7f2134b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/41/EasyJsonBeanSerializerFactory.java\n@@ -42,15 +42,15 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         }\n         if (getClass() != EasyJsonBeanSerializerFactory.class) {\n             throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\" + getClass().getName()\n-                    + \") has not properly overridden method 'withAdditionalSerializers': cannot instantiate subtype with \"\n-                    + \"additional serializer definitions\");\n+                + \") has not properly overridden method 'withAdditionalSerializers': cannot instantiate subtype with \"\n+                + \"additional serializer definitions\");\n         }\n         return new EasyJsonBeanSerializerFactory(config, objectMapper);\n     }\n \n     @Override\n     protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)\n-            throws JsonMappingException {\n+        throws JsonMappingException {\n         //==================EasyJson exclusion start=========================\n         if (objectMapper != null && objectMapper.getJsonBuilder() != null) {\n             // filter using exclusion strategies\n@@ -77,7 +77,7 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..d183e34aac6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/41/EasyJsonBeanSerializerFactory.java\n@@ -77,10 +77,10 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..31986484646 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/41/EasyJsonBeanSerializerFactory.java\n@@ -22,7 +22,6 @@ import com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;\n import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;\n import com.fasterxml.jackson.databind.ser.*;\n import com.jn.easyjson.core.exclusion.ExclusionConfiguration;\n-\n import java.lang.reflect.Field;\n import java.util.Iterator;\n import java.util.List;\n@@ -41,16 +40,13 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n             return this;\n         }\n         if (getClass() != EasyJsonBeanSerializerFactory.class) {\n-            throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\" + getClass().getName()\n-                    + \") has not properly overridden method 'withAdditionalSerializers': cannot instantiate subtype with \"\n-                    + \"additional serializer definitions\");\n+            throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\" + getClass().getName() + \") has not properly overridden method 'withAdditionalSerializers': cannot instantiate subtype with \" + \"additional serializer definitions\");\n         }\n         return new EasyJsonBeanSerializerFactory(config, objectMapper);\n     }\n \n     @Override\n-    protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder)\n-            throws JsonMappingException {\n+    protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov, BeanDescription beanDesc, BeanSerializerBuilder builder) throws JsonMappingException {\n         //==================EasyJson exclusion start=========================\n         if (objectMapper != null && objectMapper.getJsonBuilder() != null) {\n             // filter using exclusion strategies\n@@ -77,10 +73,9 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..4ddccc17a23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/41/EasyJsonBeanSerializerFactory.java\n@@ -77,7 +77,7 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/41/EasyJsonBeanSerializerFactory.java\nindex 1a9906b8f10..4ddccc17a23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/41/EasyJsonBeanSerializerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/41/EasyJsonBeanSerializerFactory.java\n@@ -77,7 +77,7 @@ public class EasyJsonBeanSerializerFactory extends BeanSerializerFactory {\n         return super.findBeanProperties(prov, beanDesc, builder);\n     }\n \n-    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc){\n+    protected PropertyBuilder constructPropertyBuilder(SerializationConfig config, BeanDescription beanDesc) {\n         EasyjsonPropertyBuilder propertyBuilder = new EasyjsonPropertyBuilder(config, beanDesc);\n         propertyBuilder.setObjectMapper(objectMapper);\n         return propertyBuilder;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
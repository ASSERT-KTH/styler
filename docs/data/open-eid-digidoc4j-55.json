{
    "project_name": "open-eid-digidoc4j",
    "error_id": "55",
    "information": {
        "errors": [
            {
                "line": "139",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    for (Signature signature : signatures) {\n      if (!canExtendSignatureToProfile(signature, profile)) {\n        String message = \"It is not possible to extend \" + signature.getProfile() + \" signature to \" + signature.getProfile() + \".\";\n        logger.error(message);\n        throw new NotSupportedException(message);\n      }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/55/SignatureExtender.java\nindex ece982f7982..6848a83758c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/55/SignatureExtender.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.xades;\n \n@@ -136,7 +136,8 @@ public class SignatureExtender {\n     logger.debug(\"Validating if it's possible to extend all the signatures to \" + profile);\n     for (Signature signature : signatures) {\n       if (!canExtendSignatureToProfile(signature, profile)) {\n-        String message = \"It is not possible to extend \" + signature.getProfile() + \" signature to \" + signature.getProfile() + \".\";\n+        String message =\n+            \"It is not possible to extend \" + signature.getProfile() + \" signature to \" + signature.getProfile() + \".\";\n         logger.error(message);\n         throw new NotSupportedException(message);\n       }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "column": "64",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "60",
                    "column": "62",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/55/SignatureExtender.java\nindex ece982f7982..7da354e7fd6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/55/SignatureExtender.java\n@@ -56,8 +56,8 @@ public class SignatureExtender {\n     possibleExtensions.put(B_BES, new HashSet<>(asList(LT, LTA)));\n     possibleExtensions.put(B_EPES, new HashSet<>(singletonList(LT_TM)));\n     possibleExtensions.put(LT, new HashSet<>(singletonList(LTA)));\n-    possibleExtensions.put(LT_TM, Collections.<SignatureProfile>emptySet());\n-    possibleExtensions.put(LTA, Collections.<SignatureProfile>emptySet());\n+    possibleExtensions.put(LT_TM, Collections.<SignatureProfile> emptySet());\n+    possibleExtensions.put(LTA, Collections.<SignatureProfile> emptySet());\n   }\n \n   public SignatureExtender(Configuration configuration, DSSDocument detachedContent) {\n@@ -146,4 +146,4 @@ public class SignatureExtender {\n   private boolean canExtendSignatureToProfile(Signature signature, SignatureProfile profile) {\n     return possibleExtensions.get(signature.getProfile()).contains(profile);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/55/SignatureExtender.java\nindex ece982f7982..2a09a2bb4b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/55/SignatureExtender.java\n@@ -26,7 +26,6 @@ import org.digidoc4j.utils.Helper;\n import org.digidoc4j.utils.PolicyUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -34,7 +33,6 @@ import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-\n import static java.util.Arrays.asList;\n import static java.util.Collections.singletonList;\n import static org.digidoc4j.SignatureProfile.B_BES;\n@@ -43,6 +41,7 @@ import static org.digidoc4j.SignatureProfile.LT;\n import static org.digidoc4j.SignatureProfile.LTA;\n import static org.digidoc4j.SignatureProfile.LT_TM;\n \n+\n public class SignatureExtender {\n \n   private static final Logger logger = LoggerFactory.getLogger(SignatureExtender.class);\n@@ -60,18 +59,21 @@ public class SignatureExtender {\n     possibleExtensions.put(LTA, Collections.<SignatureProfile>emptySet());\n   }\n \n+\n   public SignatureExtender(Configuration configuration, DSSDocument detachedContent) {\n     this.configuration = configuration;\n     this.detachedContent = detachedContent;\n     extendingFacade = new XadesSigningDssFacade();\n   }\n \n+\n   public SignatureExtender(Configuration configuration, List<DSSDocument> detachedContent) {\n     this.configuration = configuration;\n     this.detachedContents = detachedContent;\n     extendingFacade = new XadesSigningDssFacade();\n   }\n \n+\n   public List<DSSDocument> extend(List<Signature> signaturesToExtend, SignatureProfile profile) {\n     logger.debug(\"Extending signatures to \" + profile);\n     validatePossibilityToExtendTo(signaturesToExtend, profile);\n@@ -102,8 +104,7 @@ public class SignatureExtender {\n   }\n \n   private OCSPSource createOcspSource(SignatureProfile profile, byte[] signatureValue) {\n-    return OCSPSourceBuilder.anOcspSource().withSignatureProfile(profile).withSignatureValue(signatureValue).\n-        withConfiguration(this.configuration).build();\n+    return OCSPSourceBuilder.anOcspSource().withSignatureProfile(profile).withSignatureValue(signatureValue).withConfiguration(this.configuration).build();\n   }\n \n   private OnlineTSPSource createTimeStampProviderSource(SignatureProfile profile) {\n@@ -146,4 +147,4 @@ public class SignatureExtender {\n   private boolean canExtendSignatureToProfile(Signature signature, SignatureProfile profile) {\n     return possibleExtensions.get(signature.getProfile()).contains(profile);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "139",
                    "column": "57",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "139",
                    "column": "57",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "140",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "141",
                    "column": "9",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/55/SignatureExtender.java\nindex ece982f7982..d082368b203 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/55/SignatureExtender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/55/SignatureExtender.java\n@@ -136,8 +136,10 @@ public class SignatureExtender {\n     logger.debug(\"Validating if it's possible to extend all the signatures to \" + profile);\n     for (Signature signature : signatures) {\n       if (!canExtendSignatureToProfile(signature, profile)) {\n-        String message = \"It is not possible to extend \" + signature.getProfile() + \" signature to \" + signature.getProfile() + \".\";\n-        logger.error(message);\n+        String message = \"It is not possible to extend \"+signature.getProfile\n+            ( )+\" signature to \"\n+        +signature.getProfile() + \".\";\n+         logger.error(message);\n         throw new NotSupportedException(message);\n       }\n     }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "552",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/552/AddressResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/552/AddressResolver.java\nindex b142f4bb43d..ef226730f23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/552/AddressResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/552/AddressResolver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import org.neo4j.causalclustering.core.CausalClusteringSettings;\n@@ -29,32 +30,32 @@ import org.neo4j.kernel.impl.enterprise.configuration.OnlineBackupSettings;\n \n class AddressResolver\n {\n-    HostnamePort resolveCorrectHAAddress( Config config, OptionalHostnamePort userProvidedAddress )\n-    {\n-        HostnamePort defaultValues = readDefaultConfigAddressHA( config );\n-        return new HostnamePort( userProvidedAddress.getHostname().orElse( defaultValues.getHost() ),\n-                userProvidedAddress.getPort().orElse( defaultValues.getPort() ) );\n-    }\n+  HostnamePort resolveCorrectHAAddress(Config config, OptionalHostnamePort userProvidedAddress)\n+  {\n+    HostnamePort defaultValues = readDefaultConfigAddressHA(config);\n+    return new HostnamePort(userProvidedAddress.getHostname().orElse(defaultValues.getHost()),\n+        userProvidedAddress.getPort().orElse(defaultValues.getPort()));\n+  }\n \n-    AdvertisedSocketAddress resolveCorrectCCAddress( Config config, OptionalHostnamePort userProvidedAddress )\n-    {\n-        AdvertisedSocketAddress defaultValue = readDefaultConfigAddressCC( config );\n-        return new AdvertisedSocketAddress( userProvidedAddress.getHostname().orElse( defaultValue.getHostname() ),\n-                userProvidedAddress.getPort().orElse( defaultValue.getPort() ) );\n-    }\n+  AdvertisedSocketAddress resolveCorrectCCAddress(Config config, OptionalHostnamePort userProvidedAddress)\n+  {\n+    AdvertisedSocketAddress defaultValue = readDefaultConfigAddressCC(config);\n+    return new AdvertisedSocketAddress(userProvidedAddress.getHostname().orElse(defaultValue.getHostname()),\n+        userProvidedAddress.getPort().orElse(defaultValue.getPort()));\n+  }\n \n-    private HostnamePort readDefaultConfigAddressHA( Config config )\n-    {\n-        return config.get( OnlineBackupSettings.online_backup_server );\n-    }\n+  private HostnamePort readDefaultConfigAddressHA(Config config)\n+  {\n+    return config.get(OnlineBackupSettings.online_backup_server);\n+  }\n \n-    private AdvertisedSocketAddress readDefaultConfigAddressCC( Config config )\n-    {\n-        return advertisedFromListenAddress( config.get( CausalClusteringSettings.transaction_listen_address ) );\n-    }\n+  private AdvertisedSocketAddress readDefaultConfigAddressCC(Config config)\n+  {\n+    return advertisedFromListenAddress(config.get(CausalClusteringSettings.transaction_listen_address));\n+  }\n \n-    private AdvertisedSocketAddress advertisedFromListenAddress( ListenSocketAddress listenSocketAddress )\n-    {\n-        return new AdvertisedSocketAddress( listenSocketAddress.getHostname(), listenSocketAddress.getPort() );\n-    }\n+  private AdvertisedSocketAddress advertisedFromListenAddress(ListenSocketAddress listenSocketAddress)\n+  {\n+    return new AdvertisedSocketAddress(listenSocketAddress.getHostname(), listenSocketAddress.getPort());\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/552/AddressResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/552/AddressResolver.java\nindex b142f4bb43d..6af72575c43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/552/AddressResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/552/AddressResolver.java\n@@ -32,15 +32,13 @@ class AddressResolver\n     HostnamePort resolveCorrectHAAddress( Config config, OptionalHostnamePort userProvidedAddress )\n     {\n         HostnamePort defaultValues = readDefaultConfigAddressHA( config );\n-        return new HostnamePort( userProvidedAddress.getHostname().orElse( defaultValues.getHost() ),\n-                userProvidedAddress.getPort().orElse( defaultValues.getPort() ) );\n+        return new HostnamePort( userProvidedAddress.getHostname().orElse( defaultValues.getHost() ), userProvidedAddress.getPort().orElse( defaultValues.getPort() ) );\n     }\n \n     AdvertisedSocketAddress resolveCorrectCCAddress( Config config, OptionalHostnamePort userProvidedAddress )\n     {\n         AdvertisedSocketAddress defaultValue = readDefaultConfigAddressCC( config );\n-        return new AdvertisedSocketAddress( userProvidedAddress.getHostname().orElse( defaultValue.getHostname() ),\n-                userProvidedAddress.getPort().orElse( defaultValue.getPort() ) );\n+        return new AdvertisedSocketAddress( userProvidedAddress.getHostname().orElse( defaultValue.getHostname() ), userProvidedAddress.getPort().orElse( defaultValue.getPort() ) );\n     }\n \n     private HostnamePort readDefaultConfigAddressHA( Config config )\n@@ -57,4 +55,4 @@ class AddressResolver\n     {\n         return new AdvertisedSocketAddress( listenSocketAddress.getHostname(), listenSocketAddress.getPort() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
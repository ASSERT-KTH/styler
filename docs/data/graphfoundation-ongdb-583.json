{
    "project_name": "graphfoundation-ongdb",
    "error_id": "583",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "189",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "203",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "257",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "292",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "299",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "367",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "424",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "484",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "487",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "491",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/583/RaftLogShipper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/583/RaftLogShipper.java\nindex 070d2fb8a07..25cf68cf15e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/583/RaftLogShipper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/583/RaftLogShipper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.shipping;\n \n import java.io.IOException;\n@@ -65,463 +66,451 @@ import static org.neo4j.scheduler.JobScheduler.Groups.raft;\n  */\n public class RaftLogShipper\n {\n-    private static final long MIN_INDEX = 1L; // we never ship entry zero, which must be bootstrapped or received as part of a snapshot\n-    private final int TIMER_INACTIVE = 0;\n-\n-    enum Mode\n-    {\n-        /**\n-         * In the mismatch mode we are unsure about the follower state, thus\n-         * we tread with caution, going backwards trying to find the point where\n-         * our logs match. We send empty append entries to minimize the cost of\n-         * this mode.\n-         */\n-        MISMATCH,\n-        /**\n-         * In the catchup mode we are trying to catch up the follower as quickly\n-         * as possible. The follower receives batches of entries in series until\n-         * it is fully caught up.\n-         */\n-        CATCHUP,\n-        /**\n-         * In the pipeline mode the follower is treated as caught up and we\n-         * optimistically ship any latest entries without waiting for responses,\n-         * expecting successful responses.\n-         */\n-        PIPELINE\n-    }\n-\n-    public enum Timeouts implements TimerService.TimerName\n-    {\n-        RESEND\n-    }\n+  private static final long MIN_INDEX = 1L; // we never ship entry zero, which must be bootstrapped or received as part of a snapshot\n+  private final int TIMER_INACTIVE = 0;\n \n-    private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n-    private final Log log;\n-    private final ReadableRaftLog raftLog;\n-    private final Clock clock;\n-    private final MemberId follower;\n-    private final MemberId leader;\n-    private final long retryTimeMillis;\n-    private final int catchupBatchSize;\n-    private final int maxAllowedShippingLag;\n-    private final InFlightCache inFlightCache;\n-\n-    private TimerService timerService;\n-    private Timer timer;\n-    private long timeoutAbsoluteMillis;\n-    private long lastSentIndex;\n-    private long matchIndex = -1;\n-    private LeaderContext lastLeaderContext;\n-    private Mode mode = Mode.MISMATCH;\n-\n-    RaftLogShipper( Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n-                    ReadableRaftLog raftLog, Clock clock, TimerService timerService,\n-                    MemberId leader, MemberId follower, long leaderTerm, long leaderCommit, long retryTimeMillis,\n-                    int catchupBatchSize, int maxAllowedShippingLag, InFlightCache inFlightCache )\n+  enum Mode\n+  {\n+    /**\n+     * In the mismatch mode we are unsure about the follower state, thus\n+     * we tread with caution, going backwards trying to find the point where\n+     * our logs match. We send empty append entries to minimize the cost of\n+     * this mode.\n+     */\n+    MISMATCH,\n+    /**\n+     * In the catchup mode we are trying to catch up the follower as quickly\n+     * as possible. The follower receives batches of entries in series until\n+     * it is fully caught up.\n+     */\n+    CATCHUP,\n+    /**\n+     * In the pipeline mode the follower is treated as caught up and we\n+     * optimistically ship any latest entries without waiting for responses,\n+     * expecting successful responses.\n+     */\n+    PIPELINE\n+  }\n+\n+  public enum Timeouts implements TimerService.TimerName\n+  {\n+    RESEND\n+  }\n+\n+  private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n+  private final Log log;\n+  private final ReadableRaftLog raftLog;\n+  private final Clock clock;\n+  private final MemberId follower;\n+  private final MemberId leader;\n+  private final long retryTimeMillis;\n+  private final int catchupBatchSize;\n+  private final int maxAllowedShippingLag;\n+  private final InFlightCache inFlightCache;\n+\n+  private TimerService timerService;\n+  private Timer timer;\n+  private long timeoutAbsoluteMillis;\n+  private long lastSentIndex;\n+  private long matchIndex = -1;\n+  private LeaderContext lastLeaderContext;\n+  private Mode mode = Mode.MISMATCH;\n+\n+  RaftLogShipper(Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n+                 ReadableRaftLog raftLog, Clock clock, TimerService timerService,\n+                 MemberId leader, MemberId follower, long leaderTerm, long leaderCommit, long retryTimeMillis,\n+                 int catchupBatchSize, int maxAllowedShippingLag, InFlightCache inFlightCache)\n+  {\n+    this.outbound = outbound;\n+    this.timerService = timerService;\n+    this.catchupBatchSize = catchupBatchSize;\n+    this.maxAllowedShippingLag = maxAllowedShippingLag;\n+    this.log = logProvider.getLog(getClass());\n+    this.raftLog = raftLog;\n+    this.clock = clock;\n+    this.follower = follower;\n+    this.leader = leader;\n+    this.retryTimeMillis = retryTimeMillis;\n+    this.lastLeaderContext = new LeaderContext(leaderTerm, leaderCommit);\n+    this.inFlightCache = inFlightCache;\n+  }\n+\n+  public Object identity()\n+  {\n+    return follower;\n+  }\n+\n+  public synchronized void start()\n+  {\n+    log.info(\"Starting log shipper: %s\", statusAsString());\n+    sendEmpty(raftLog.appendIndex(), lastLeaderContext);\n+  }\n+\n+  public synchronized void stop()\n+  {\n+    log.info(\"Stopping log shipper %s\", statusAsString());\n+    abortTimeout();\n+  }\n+\n+  public synchronized void onMismatch(long lastRemoteAppendIndex, LeaderContext leaderContext)\n+  {\n+    switch (mode)\n     {\n-        this.outbound = outbound;\n-        this.timerService = timerService;\n-        this.catchupBatchSize = catchupBatchSize;\n-        this.maxAllowedShippingLag = maxAllowedShippingLag;\n-        this.log = logProvider.getLog( getClass() );\n-        this.raftLog = raftLog;\n-        this.clock = clock;\n-        this.follower = follower;\n-        this.leader = leader;\n-        this.retryTimeMillis = retryTimeMillis;\n-        this.lastLeaderContext = new LeaderContext( leaderTerm, leaderCommit );\n-        this.inFlightCache = inFlightCache;\n+      case MISMATCH:\n+        long logIndex = max(min(lastSentIndex - 1, lastRemoteAppendIndex), MIN_INDEX);\n+        sendEmpty(logIndex, leaderContext);\n+        break;\n+      case PIPELINE:\n+      case CATCHUP:\n+        log.info(\"%s: mismatch in mode %s from follower %s, moving to MISMATCH mode\",\n+            statusAsString(), mode, follower);\n+        mode = Mode.MISMATCH;\n+        sendEmpty(lastSentIndex, leaderContext);\n+        break;\n+\n+      default:\n+        throw new IllegalStateException(\"Unknown mode: \" + mode);\n     }\n \n-    public Object identity()\n-    {\n-        return follower;\n-    }\n+    lastLeaderContext = leaderContext;\n+  }\n \n-    public synchronized void start()\n+  public synchronized void onMatch(long newMatchIndex, LeaderContext leaderContext)\n+  {\n+    boolean progress = newMatchIndex > matchIndex;\n+    if (newMatchIndex > matchIndex)\n     {\n-        log.info( \"Starting log shipper: %s\", statusAsString() );\n-        sendEmpty( raftLog.appendIndex(), lastLeaderContext );\n-   }\n-\n-    public synchronized void stop()\n+      matchIndex = newMatchIndex;\n+    } else\n     {\n-        log.info( \"Stopping log shipper %s\", statusAsString() );\n-        abortTimeout();\n+      log.warn(\"%s: match index not progressing. This should be transient.\", statusAsString());\n     }\n \n-    public synchronized void onMismatch( long lastRemoteAppendIndex, LeaderContext leaderContext )\n+    switch (mode)\n     {\n-        switch ( mode )\n+      case MISMATCH:\n+        if (sendNextBatchAfterMatch(leaderContext))\n         {\n-            case MISMATCH:\n-                long logIndex = max( min( lastSentIndex - 1, lastRemoteAppendIndex ), MIN_INDEX );\n-                sendEmpty( logIndex, leaderContext );\n-                break;\n-            case PIPELINE:\n-            case CATCHUP:\n-                log.info( \"%s: mismatch in mode %s from follower %s, moving to MISMATCH mode\",\n-                        statusAsString(), mode, follower );\n-                mode = Mode.MISMATCH;\n-                sendEmpty( lastSentIndex, leaderContext );\n-                break;\n-\n-            default:\n-                throw new IllegalStateException( \"Unknown mode: \" + mode );\n-        }\n-\n-        lastLeaderContext = leaderContext;\n-    }\n-\n-    public synchronized void onMatch( long newMatchIndex, LeaderContext leaderContext )\n-    {\n-        boolean progress = newMatchIndex > matchIndex;\n-        if ( newMatchIndex > matchIndex )\n+          log.info(\"%s: caught up after mismatch, moving to PIPELINE mode\", statusAsString());\n+          mode = PIPELINE;\n+        } else\n         {\n-            matchIndex = newMatchIndex;\n+          log.info(\"%s: starting catch up after mismatch, moving to CATCHUP mode\", statusAsString());\n+          mode = Mode.CATCHUP;\n         }\n-        else\n+        break;\n+      case CATCHUP:\n+        if (matchIndex >= lastSentIndex)\n         {\n-            log.warn( \"%s: match index not progressing. This should be transient.\", statusAsString() );\n+          if (sendNextBatchAfterMatch(leaderContext))\n+          {\n+            log.info(\"%s: caught up, moving to PIPELINE mode\", statusAsString());\n+            mode = PIPELINE;\n+          }\n         }\n-\n-        switch ( mode )\n+        break;\n+      case PIPELINE:\n+        if (matchIndex == lastSentIndex)\n+        {\n+          abortTimeout();\n+        } else if (progress)\n         {\n-            case MISMATCH:\n-                if ( sendNextBatchAfterMatch( leaderContext ) )\n-                {\n-                    log.info( \"%s: caught up after mismatch, moving to PIPELINE mode\", statusAsString() );\n-                    mode = PIPELINE;\n-                }\n-                else\n-                {\n-                    log.info( \"%s: starting catch up after mismatch, moving to CATCHUP mode\", statusAsString() );\n-                    mode = Mode.CATCHUP;\n-                }\n-                break;\n-            case CATCHUP:\n-                if ( matchIndex >= lastSentIndex )\n-                {\n-                    if ( sendNextBatchAfterMatch( leaderContext ) )\n-                    {\n-                        log.info( \"%s: caught up, moving to PIPELINE mode\", statusAsString() );\n-                        mode = PIPELINE;\n-                    }\n-                }\n-                break;\n-            case PIPELINE:\n-                if ( matchIndex == lastSentIndex )\n-                {\n-                    abortTimeout();\n-                }\n-                else if ( progress )\n-                {\n-                    scheduleTimeout( retryTimeMillis );\n-                }\n-                break;\n-\n-            default:\n-                throw new IllegalStateException( \"Unknown mode: \" + mode );\n+          scheduleTimeout(retryTimeMillis);\n         }\n+        break;\n \n-        lastLeaderContext = leaderContext;\n+      default:\n+        throw new IllegalStateException(\"Unknown mode: \" + mode);\n     }\n \n-    public synchronized void onNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newLogEntries,\n-                                           LeaderContext leaderContext )\n+    lastLeaderContext = leaderContext;\n+  }\n+\n+  public synchronized void onNewEntries(long prevLogIndex, long prevLogTerm, RaftLogEntry[] newLogEntries,\n+                                        LeaderContext leaderContext)\n+  {\n+    if (mode == Mode.PIPELINE)\n     {\n-        if ( mode == Mode.PIPELINE )\n+      while (lastSentIndex <= prevLogIndex)\n+      {\n+        if (prevLogIndex - matchIndex <= maxAllowedShippingLag)\n+        {\n+          // all sending functions update lastSentIndex\n+          sendNewEntries(prevLogIndex, prevLogTerm, newLogEntries, leaderContext);\n+        } else\n         {\n-            while ( lastSentIndex <= prevLogIndex )\n-            {\n-                if ( prevLogIndex - matchIndex <= maxAllowedShippingLag )\n-                {\n-                    // all sending functions update lastSentIndex\n-                    sendNewEntries( prevLogIndex, prevLogTerm, newLogEntries, leaderContext );\n-                }\n-                else\n-                {\n-                    /* The timer is still set at this point. Either we will send the next batch\n-                     * as soon as the follower has caught up with the last pipelined entry,\n-                     * or when we timeout and resend. */\n-                    log.info( \"%s: follower has fallen behind (target prevLogIndex was %d, maxAllowedShippingLag \" +\n-                              \"is %d), moving to CATCHUP mode\", statusAsString(), prevLogIndex,\n-                            maxAllowedShippingLag );\n-                    mode = Mode.CATCHUP;\n-                    break;\n-                }\n-            }\n+          /* The timer is still set at this point. Either we will send the next batch\n+           * as soon as the follower has caught up with the last pipelined entry,\n+           * or when we timeout and resend. */\n+          log.info(\"%s: follower has fallen behind (target prevLogIndex was %d, maxAllowedShippingLag \" +\n+                  \"is %d), moving to CATCHUP mode\", statusAsString(), prevLogIndex,\n+              maxAllowedShippingLag);\n+          mode = Mode.CATCHUP;\n+          break;\n         }\n-\n-        lastLeaderContext = leaderContext;\n+      }\n     }\n \n-    public synchronized void onCommitUpdate( LeaderContext leaderContext )\n-    {\n-        if ( mode == Mode.PIPELINE )\n-        {\n-            sendCommitUpdate( leaderContext );\n-        }\n+    lastLeaderContext = leaderContext;\n+  }\n \n-        lastLeaderContext = leaderContext;\n+  public synchronized void onCommitUpdate(LeaderContext leaderContext)\n+  {\n+    if (mode == Mode.PIPELINE)\n+    {\n+      sendCommitUpdate(leaderContext);\n     }\n \n-    /**\n-     * Callback invoked by the external timer service.\n-     */\n-    private synchronized void onScheduledTimeoutExpiry()\n+    lastLeaderContext = leaderContext;\n+  }\n+\n+  /**\n+   * Callback invoked by the external timer service.\n+   */\n+  private synchronized void onScheduledTimeoutExpiry()\n+  {\n+    if (timedOut())\n     {\n-        if ( timedOut() )\n-        {\n-            onTimeout();\n-        }\n-        else if ( timeoutAbsoluteMillis != TIMER_INACTIVE )\n-        {\n-            /* Timer was moved, so we need to reschedule. */\n-            long timeLeft = timeoutAbsoluteMillis - clock.millis();\n-            if ( timeLeft > 0 )\n-            {\n-                scheduleTimeout( timeLeft );\n-            }\n-            else\n-            {\n-                /* However it managed to expire, so we can just handle it immediately. */\n-                onTimeout();\n-            }\n-        }\n+      onTimeout();\n+    } else if (timeoutAbsoluteMillis != TIMER_INACTIVE)\n+    {\n+      /* Timer was moved, so we need to reschedule. */\n+      long timeLeft = timeoutAbsoluteMillis - clock.millis();\n+      if (timeLeft > 0)\n+      {\n+        scheduleTimeout(timeLeft);\n+      } else\n+      {\n+        /* However it managed to expire, so we can just handle it immediately. */\n+        onTimeout();\n+      }\n     }\n+  }\n \n-    void onTimeout()\n+  void onTimeout()\n+  {\n+    if (mode == PIPELINE)\n     {\n-        if ( mode == PIPELINE )\n-        {\n-            /* The follower seems unresponsive and we do not want to spam it with new entries.\n-             * The catchup will pick-up when the last sent pipelined entry matches. */\n-            log.info( \"%s: timed out, moving to CATCHUP mode\", statusAsString() );\n-            mode = Mode.CATCHUP;\n-            scheduleTimeout( retryTimeMillis );\n-        }\n-        else if ( mode == CATCHUP )\n-        {\n-            /* The follower seems unresponsive so we move back to mismatch mode to\n-             * slowly poke it and figure out what is going on. Catchup will resume\n-             * on the next match. */\n-            log.info( \"%s: timed out, moving to MISMATCH mode\", statusAsString() );\n-            mode = Mode.MISMATCH;\n-        }\n-\n-        if ( lastLeaderContext != null )\n-        {\n-            sendEmpty( lastSentIndex, lastLeaderContext );\n-        }\n+      /* The follower seems unresponsive and we do not want to spam it with new entries.\n+       * The catchup will pick-up when the last sent pipelined entry matches. */\n+      log.info(\"%s: timed out, moving to CATCHUP mode\", statusAsString());\n+      mode = Mode.CATCHUP;\n+      scheduleTimeout(retryTimeMillis);\n+    } else if (mode == CATCHUP)\n+    {\n+      /* The follower seems unresponsive so we move back to mismatch mode to\n+       * slowly poke it and figure out what is going on. Catchup will resume\n+       * on the next match. */\n+      log.info(\"%s: timed out, moving to MISMATCH mode\", statusAsString());\n+      mode = Mode.MISMATCH;\n     }\n \n-    /**\n-     * This function is necessary because the scheduled callback blocks on the monitor before\n-     * entry and the expiry time of the timer might have been moved or even cancelled before\n-     * the entry is granted.\n-     *\n-     * @return True if we actually timed out, otherwise false.\n-     */\n-    private boolean timedOut()\n+    if (lastLeaderContext != null)\n     {\n-        return timeoutAbsoluteMillis != TIMER_INACTIVE && (clock.millis() - timeoutAbsoluteMillis) >= 0;\n+      sendEmpty(lastSentIndex, lastLeaderContext);\n     }\n-\n-    private void scheduleTimeout( long deltaMillis )\n+  }\n+\n+  /**\n+   * This function is necessary because the scheduled callback blocks on the monitor before\n+   * entry and the expiry time of the timer might have been moved or even cancelled before\n+   * the entry is granted.\n+   *\n+   * @return True if we actually timed out, otherwise false.\n+   */\n+  private boolean timedOut()\n+  {\n+    return timeoutAbsoluteMillis != TIMER_INACTIVE && (clock.millis() - timeoutAbsoluteMillis) >= 0;\n+  }\n+\n+  private void scheduleTimeout(long deltaMillis)\n+  {\n+    timeoutAbsoluteMillis = clock.millis() + deltaMillis;\n+\n+    if (timer == null)\n     {\n-        timeoutAbsoluteMillis = clock.millis() + deltaMillis;\n+      timer = timerService.create(RESEND, raft, timeout -> onScheduledTimeoutExpiry());\n+    }\n \n-        if ( timer == null )\n-        {\n-            timer = timerService.create( RESEND, raft, timeout -> onScheduledTimeoutExpiry() );\n-        }\n+    timer.set(fixedTimeout(deltaMillis, MILLISECONDS));\n+  }\n \n-        timer.set( fixedTimeout( deltaMillis, MILLISECONDS ) );\n+  private void abortTimeout()\n+  {\n+    if (timer != null)\n+    {\n+      timer.cancel(ASYNC);\n     }\n+    timeoutAbsoluteMillis = TIMER_INACTIVE;\n+  }\n+\n+  /**\n+   * Returns true if this sent the last batch.\n+   */\n+  private boolean sendNextBatchAfterMatch(LeaderContext leaderContext)\n+  {\n+    long lastIndex = raftLog.appendIndex();\n \n-    private void abortTimeout()\n+    if (lastIndex > matchIndex)\n     {\n-        if ( timer != null )\n-        {\n-            timer.cancel( ASYNC );\n-        }\n-        timeoutAbsoluteMillis = TIMER_INACTIVE;\n-    }\n+      long endIndex = min(lastIndex, matchIndex + catchupBatchSize);\n \n-    /**\n-     * Returns true if this sent the last batch.\n-     */\n-    private boolean sendNextBatchAfterMatch( LeaderContext leaderContext )\n+      scheduleTimeout(retryTimeMillis);\n+      sendRange(matchIndex + 1, endIndex, leaderContext);\n+      return endIndex == lastIndex;\n+    } else\n     {\n-        long lastIndex = raftLog.appendIndex();\n+      return true;\n+    }\n+  }\n+\n+  private void sendCommitUpdate(LeaderContext leaderContext)\n+  {\n+    /*\n+     * This is a commit update. That means that we just received enough success responses to an append\n+     * request to allow us to send a commit. By Raft invariants, this means that the term for the committed\n+     * entry is the current term.\n+     */\n+    RaftMessages.Heartbeat appendRequest =\n+        new RaftMessages.Heartbeat(leader, leaderContext.term, leaderContext.commitIndex,\n+            leaderContext.term);\n \n-        if ( lastIndex > matchIndex )\n-        {\n-            long endIndex = min( lastIndex, matchIndex + catchupBatchSize );\n+    outbound.send(follower, appendRequest);\n+  }\n \n-            scheduleTimeout( retryTimeMillis );\n-            sendRange( matchIndex + 1, endIndex, leaderContext );\n-            return endIndex == lastIndex;\n-        }\n-        else\n-        {\n-            return true;\n-        }\n-    }\n+  private void sendNewEntries(long prevLogIndex, long prevLogTerm, RaftLogEntry[] newEntries,\n+                              LeaderContext leaderContext)\n+  {\n+    scheduleTimeout(retryTimeMillis);\n \n-    private void sendCommitUpdate( LeaderContext leaderContext )\n-    {\n-        /*\n-         * This is a commit update. That means that we just received enough success responses to an append\n-         * request to allow us to send a commit. By Raft invariants, this means that the term for the committed\n-         * entry is the current term.\n-         */\n-        RaftMessages.Heartbeat appendRequest =\n-                new RaftMessages.Heartbeat( leader, leaderContext.term, leaderContext.commitIndex,\n-                        leaderContext.term );\n-\n-        outbound.send( follower, appendRequest );\n-    }\n+    lastSentIndex = prevLogIndex + 1;\n \n-    private void sendNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newEntries,\n-                                 LeaderContext leaderContext )\n-    {\n-        scheduleTimeout( retryTimeMillis );\n+    RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n+        leader, leaderContext.term, prevLogIndex, prevLogTerm, newEntries, leaderContext.commitIndex\n+    );\n \n-        lastSentIndex = prevLogIndex + 1;\n+    outbound.send(follower, appendRequest);\n+  }\n \n-        RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                leader, leaderContext.term, prevLogIndex, prevLogTerm, newEntries, leaderContext.commitIndex\n-        );\n+  private void sendEmpty(long logIndex, LeaderContext leaderContext)\n+  {\n+    scheduleTimeout(retryTimeMillis);\n \n-        outbound.send( follower, appendRequest );\n-    }\n+    logIndex = max(raftLog.prevIndex() + 1, logIndex);\n+    lastSentIndex = logIndex;\n \n-    private void sendEmpty( long logIndex, LeaderContext leaderContext )\n+    try\n     {\n-        scheduleTimeout( retryTimeMillis );\n-\n-        logIndex = max( raftLog.prevIndex() + 1, logIndex );\n-        lastSentIndex = logIndex;\n+      long prevLogIndex = logIndex - 1;\n+      long prevLogTerm = raftLog.readEntryTerm(prevLogIndex);\n+\n+      if (prevLogTerm > leaderContext.term)\n+      {\n+        log.warn(\"%s: aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n+            statusAsString(), leaderContext, prevLogTerm);\n+        return;\n+      }\n+\n+      if (doesNotExistInLog(prevLogIndex, prevLogTerm))\n+      {\n+        log.warn(\"%s: Entry was pruned when sending empty (prevLogIndex=%d, prevLogTerm=%d)\",\n+            statusAsString(), prevLogIndex, prevLogTerm);\n+        return;\n+      }\n+\n+      RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n+          leader, leaderContext.term, prevLogIndex, prevLogTerm, RaftLogEntry.empty, leaderContext.commitIndex);\n+      outbound.send(follower, appendRequest);\n+    } catch (IOException e)\n+    {\n+      log.warn(statusAsString() + \" exception during empty send\", e);\n+    }\n+  }\n \n-        try\n-        {\n-            long prevLogIndex = logIndex - 1;\n-            long prevLogTerm = raftLog.readEntryTerm( prevLogIndex );\n-\n-            if ( prevLogTerm > leaderContext.term )\n-            {\n-                log.warn( \"%s: aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n-                        statusAsString(), leaderContext, prevLogTerm );\n-                return;\n-            }\n-\n-            if ( doesNotExistInLog( prevLogIndex, prevLogTerm ) )\n-            {\n-                log.warn( \"%s: Entry was pruned when sending empty (prevLogIndex=%d, prevLogTerm=%d)\",\n-                        statusAsString(), prevLogIndex, prevLogTerm );\n-                return;\n-            }\n-\n-            RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                    leader, leaderContext.term, prevLogIndex, prevLogTerm, RaftLogEntry.empty, leaderContext.commitIndex );\n-            outbound.send( follower, appendRequest );\n-        }\n-        catch ( IOException e )\n-        {\n-            log.warn( statusAsString() + \" exception during empty send\", e );\n-        }\n+  private void sendRange(long startIndex, long endIndex, LeaderContext leaderContext)\n+  {\n+    if (startIndex > endIndex)\n+    {\n+      return;\n     }\n \n-    private void sendRange( long startIndex, long endIndex, LeaderContext leaderContext )\n+    lastSentIndex = endIndex;\n+\n+    try\n     {\n-        if ( startIndex > endIndex )\n+      int batchSize = (int) (endIndex - startIndex + 1);\n+      RaftLogEntry[] entries = new RaftLogEntry[batchSize];\n+\n+      long prevLogIndex = startIndex - 1;\n+      long prevLogTerm = raftLog.readEntryTerm(prevLogIndex);\n+\n+      if (prevLogTerm > leaderContext.term)\n+      {\n+        log.warn(\"%s aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n+            statusAsString(), leaderContext, prevLogTerm);\n+        return;\n+      }\n+\n+      boolean entryMissing = false;\n+      try (InFlightLogEntryReader logEntrySupplier = new InFlightLogEntryReader(raftLog, inFlightCache, false))\n+      {\n+        for (int offset = 0; offset < batchSize; offset++)\n         {\n+          entries[offset] = logEntrySupplier.get(startIndex + offset);\n+          if (entries[offset] == null)\n+          {\n+            entryMissing = true;\n+            break;\n+          }\n+          if (entries[offset].term() > leaderContext.term)\n+          {\n+            log.warn(\"%s aborting send. Not leader anymore? %s, entryTerm=%d\",\n+                statusAsString(), leaderContext, entries[offset].term());\n             return;\n+          }\n         }\n+      }\n \n-        lastSentIndex = endIndex;\n-\n-        try\n+      if (entryMissing || doesNotExistInLog(prevLogIndex, prevLogTerm))\n+      {\n+        if (raftLog.prevIndex() >= prevLogIndex)\n         {\n-            int batchSize = (int) (endIndex - startIndex + 1);\n-            RaftLogEntry[] entries = new RaftLogEntry[batchSize];\n-\n-            long prevLogIndex = startIndex - 1;\n-            long prevLogTerm = raftLog.readEntryTerm( prevLogIndex );\n-\n-            if ( prevLogTerm > leaderContext.term )\n-            {\n-                log.warn( \"%s aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n-                        statusAsString(), leaderContext, prevLogTerm );\n-                return;\n-            }\n-\n-            boolean entryMissing = false;\n-            try ( InFlightLogEntryReader logEntrySupplier = new InFlightLogEntryReader( raftLog, inFlightCache, false ) )\n-            {\n-                for ( int offset = 0; offset < batchSize; offset++ )\n-                {\n-                    entries[offset] = logEntrySupplier.get( startIndex + offset );\n-                    if ( entries[offset] == null )\n-                    {\n-                        entryMissing = true;\n-                        break;\n-                    }\n-                    if ( entries[offset].term() > leaderContext.term )\n-                    {\n-                        log.warn( \"%s aborting send. Not leader anymore? %s, entryTerm=%d\",\n-                                statusAsString(), leaderContext, entries[offset].term() );\n-                        return;\n-                    }\n-                }\n-            }\n-\n-            if ( entryMissing || doesNotExistInLog( prevLogIndex, prevLogTerm ) )\n-            {\n-                if ( raftLog.prevIndex() >= prevLogIndex )\n-                {\n-                    sendLogCompactionInfo( leaderContext );\n-                }\n-                else\n-                {\n-                    log.error( \"%s: Could not send compaction info and entries were missing, but log is not behind.\",\n-                            statusAsString() );\n-                }\n-            }\n-            else\n-            {\n-                RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                        leader, leaderContext.term, prevLogIndex, prevLogTerm, entries, leaderContext.commitIndex );\n-\n-                outbound.send( follower, appendRequest );\n-            }\n-        }\n-        catch ( IOException e )\n+          sendLogCompactionInfo(leaderContext);\n+        } else\n         {\n-            log.warn( statusAsString() + \" exception during batch send\", e );\n+          log.error(\"%s: Could not send compaction info and entries were missing, but log is not behind.\",\n+              statusAsString());\n         }\n-    }\n-\n-    private boolean doesNotExistInLog( long logIndex, long logTerm )\n-    {\n-        return logTerm == -1 && logIndex != -1;\n-    }\n-\n-    private void sendLogCompactionInfo( LeaderContext leaderContext )\n-    {\n-        log.warn( \"Sending log compaction info. Log pruned? Status=%s, LeaderContext=%s\",\n-                statusAsString(), leaderContext );\n-\n-        outbound.send( follower, new RaftMessages.LogCompactionInfo(\n-                leader, leaderContext.term, raftLog.prevIndex() ) );\n-    }\n+      } else\n+      {\n+        RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n+            leader, leaderContext.term, prevLogIndex, prevLogTerm, entries, leaderContext.commitIndex);\n \n-    private String statusAsString()\n+        outbound.send(follower, appendRequest);\n+      }\n+    } catch (IOException e)\n     {\n-        return format( \"%s[matchIndex: %d, lastSentIndex: %d, localAppendIndex: %d, mode: %s]\", follower, matchIndex,\n-                lastSentIndex, raftLog.appendIndex(), mode );\n+      log.warn(statusAsString() + \" exception during batch send\", e);\n     }\n+  }\n+\n+  private boolean doesNotExistInLog(long logIndex, long logTerm)\n+  {\n+    return logTerm == -1 && logIndex != -1;\n+  }\n+\n+  private void sendLogCompactionInfo(LeaderContext leaderContext)\n+  {\n+    log.warn(\"Sending log compaction info. Log pruned? Status=%s, LeaderContext=%s\",\n+        statusAsString(), leaderContext);\n+\n+    outbound.send(follower, new RaftMessages.LogCompactionInfo(\n+        leader, leaderContext.term, raftLog.prevIndex()));\n+  }\n+\n+  private String statusAsString()\n+  {\n+    return format(\"%s[matchIndex: %d, lastSentIndex: %d, localAppendIndex: %d, mode: %s]\", follower, matchIndex,\n+        lastSentIndex, raftLog.appendIndex(), mode);\n+  }\n }\n",
            "diff_size": 618
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "column": "41",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "243",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "353",
                    "column": "15",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "384",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "398",
                    "column": "17",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "412",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "423",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "432",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "17",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "479",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/583/RaftLogShipper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/583/RaftLogShipper.java\nindex 070d2fb8a07..2f728189103 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/583/RaftLogShipper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/583/RaftLogShipper.java\n@@ -115,11 +115,9 @@ public class RaftLogShipper\n     private LeaderContext lastLeaderContext;\n     private Mode mode = Mode.MISMATCH;\n \n-    RaftLogShipper( Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n-                    ReadableRaftLog raftLog, Clock clock, TimerService timerService,\n-                    MemberId leader, MemberId follower, long leaderTerm, long leaderCommit, long retryTimeMillis,\n-                    int catchupBatchSize, int maxAllowedShippingLag, InFlightCache inFlightCache )\n-    {\n+    RaftLogShipper( Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider, ReadableRaftLog raftLog, Clock clock, TimerService timerService,\n+                    MemberId leader, MemberId follower, long leaderTerm, long leaderCommit, long retryTimeMillis, int catchupBatchSize, int maxAllowedShippingLag, InFlightCache inFlightCache )\n+{\n         this.outbound = outbound;\n         this.timerService = timerService;\n         this.catchupBatchSize = catchupBatchSize;\n@@ -143,9 +141,9 @@ public class RaftLogShipper\n     {\n         log.info( \"Starting log shipper: %s\", statusAsString() );\n         sendEmpty( raftLog.appendIndex(), lastLeaderContext );\n-   }\n+    }\n \n-    public synchronized void stop()\n+public synchronized void stop()\n     {\n         log.info( \"Stopping log shipper %s\", statusAsString() );\n         abortTimeout();\n@@ -155,7 +153,7 @@ public class RaftLogShipper\n     {\n         switch ( mode )\n         {\n-            case MISMATCH:\n+case MISMATCH:\n                 long logIndex = max( min( lastSentIndex - 1, lastRemoteAppendIndex ), MIN_INDEX );\n                 sendEmpty( logIndex, leaderContext );\n                 break;\n@@ -163,21 +161,20 @@ public class RaftLogShipper\n             case CATCHUP:\n                 log.info( \"%s: mismatch in mode %s from follower %s, moving to MISMATCH mode\",\n                         statusAsString(), mode, follower );\n-                mode = Mode.MISMATCH;\n+mode = Mode.MISMATCH;\n                 sendEmpty( lastSentIndex, leaderContext );\n                 break;\n-\n-            default:\n+    default:\n                 throw new IllegalStateException( \"Unknown mode: \" + mode );\n-        }\n+    }\n \n         lastLeaderContext = leaderContext;\n     }\n \n     public synchronized void onMatch( long newMatchIndex, LeaderContext leaderContext )\n     {\n-        boolean progress = newMatchIndex > matchIndex;\n-        if ( newMatchIndex > matchIndex )\n+        boolean progress = newMatchIndex> matchIndex;\n+        if ( newMatchIndex> matchIndex )\n         {\n             matchIndex = newMatchIndex;\n         }\n@@ -188,7 +185,7 @@ public class RaftLogShipper\n \n         switch ( mode )\n         {\n-            case MISMATCH:\n+case MISMATCH:\n                 if ( sendNextBatchAfterMatch( leaderContext ) )\n                 {\n                     log.info( \"%s: caught up after mismatch, moving to PIPELINE mode\", statusAsString() );\n@@ -220,17 +217,15 @@ public class RaftLogShipper\n                     scheduleTimeout( retryTimeMillis );\n                 }\n                 break;\n-\n-            default:\n+    default:\n                 throw new IllegalStateException( \"Unknown mode: \" + mode );\n-        }\n+    }\n \n         lastLeaderContext = leaderContext;\n     }\n \n-    public synchronized void onNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newLogEntries,\n-                                           LeaderContext leaderContext )\n-    {\n+    public synchronized void onNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newLogEntries, LeaderContext leaderContext )\n+{\n         if ( mode == Mode.PIPELINE )\n         {\n             while ( lastSentIndex <= prevLogIndex )\n@@ -245,10 +240,8 @@ public class RaftLogShipper\n                     /* The timer is still set at this point. Either we will send the next batch\n                      * as soon as the follower has caught up with the last pipelined entry,\n                      * or when we timeout and resend. */\n-                    log.info( \"%s: follower has fallen behind (target prevLogIndex was %d, maxAllowedShippingLag \" +\n-                              \"is %d), moving to CATCHUP mode\", statusAsString(), prevLogIndex,\n-                            maxAllowedShippingLag );\n-                    mode = Mode.CATCHUP;\n+                    log.info( \"%s: follower has fallen behind (target prevLogIndex was %d, maxAllowedShippingLag \" + \"is %d), moving to CATCHUP mode\", statusAsString(), prevLogIndex, maxAllowedShippingLag );\n+mode = Mode.CATCHUP;\n                     break;\n                 }\n             }\n@@ -347,7 +340,8 @@ public class RaftLogShipper\n         {\n             timer.cancel( ASYNC );\n         }\n-        timeoutAbsoluteMillis = TIMER_INACTIVE;\n+\n+timeoutAbsoluteMillis = TIMER_INACTIVE;\n     }\n \n     /**\n@@ -356,8 +350,7 @@ public class RaftLogShipper\n     private boolean sendNextBatchAfterMatch( LeaderContext leaderContext )\n     {\n         long lastIndex = raftLog.appendIndex();\n-\n-        if ( lastIndex > matchIndex )\n+if ( lastIndex> matchIndex )\n         {\n             long endIndex = min( lastIndex, matchIndex + catchupBatchSize );\n \n@@ -378,56 +371,46 @@ public class RaftLogShipper\n          * request to allow us to send a commit. By Raft invariants, this means that the term for the committed\n          * entry is the current term.\n          */\n-        RaftMessages.Heartbeat appendRequest =\n-                new RaftMessages.Heartbeat( leader, leaderContext.term, leaderContext.commitIndex,\n+        RaftMessages.Heartbeat appendRequest = new RaftMessages.Heartbeat( leader, leaderContext.term, leaderContext.commitIndex,\n                         leaderContext.term );\n-\n-        outbound.send( follower, appendRequest );\n+outbound.send( follower, appendRequest );\n     }\n \n-    private void sendNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newEntries,\n-                                 LeaderContext leaderContext )\n-    {\n+    private void sendNewEntries( long prevLogIndex, long prevLogTerm, RaftLogEntry[] newEntries, LeaderContext leaderContext )\n+{\n         scheduleTimeout( retryTimeMillis );\n+lastSentIndex = prevLogIndex + 1;\n \n-        lastSentIndex = prevLogIndex + 1;\n-\n-        RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                leader, leaderContext.term, prevLogIndex, prevLogTerm, newEntries, leaderContext.commitIndex\n-        );\n-\n-        outbound.send( follower, appendRequest );\n+        RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request( leader, leaderContext.term, prevLogIndex, prevLogTerm, newEntries, leaderContext.commitIndex );\n+outbound.send( follower, appendRequest );\n     }\n \n     private void sendEmpty( long logIndex, LeaderContext leaderContext )\n     {\n         scheduleTimeout( retryTimeMillis );\n-\n-        logIndex = max( raftLog.prevIndex() + 1, logIndex );\n+logIndex = max( raftLog.prevIndex() + 1, logIndex );\n         lastSentIndex = logIndex;\n \n         try\n         {\n             long prevLogIndex = logIndex - 1;\n             long prevLogTerm = raftLog.readEntryTerm( prevLogIndex );\n-\n-            if ( prevLogTerm > leaderContext.term )\n+if ( prevLogTerm> leaderContext.term )\n             {\n                 log.warn( \"%s: aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n                         statusAsString(), leaderContext, prevLogTerm );\n-                return;\n+return;\n             }\n \n             if ( doesNotExistInLog( prevLogIndex, prevLogTerm ) )\n             {\n                 log.warn( \"%s: Entry was pruned when sending empty (prevLogIndex=%d, prevLogTerm=%d)\",\n                         statusAsString(), prevLogIndex, prevLogTerm );\n-                return;\n+return;\n             }\n \n-            RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                    leader, leaderContext.term, prevLogIndex, prevLogTerm, RaftLogEntry.empty, leaderContext.commitIndex );\n-            outbound.send( follower, appendRequest );\n+            RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request( leader, leaderContext.term, prevLogIndex, prevLogTerm, RaftLogEntry.empty, leaderContext.commitIndex );\n+outbound.send( follower, appendRequest );\n         }\n         catch ( IOException e )\n         {\n@@ -437,7 +420,7 @@ public class RaftLogShipper\n \n     private void sendRange( long startIndex, long endIndex, LeaderContext leaderContext )\n     {\n-        if ( startIndex > endIndex )\n+        if ( startIndex> endIndex )\n         {\n             return;\n         }\n@@ -446,17 +429,16 @@ public class RaftLogShipper\n \n         try\n         {\n-            int batchSize = (int) (endIndex - startIndex + 1);\n+            int batchSize = ( int) ( endIndex - startIndex + 1 );\n             RaftLogEntry[] entries = new RaftLogEntry[batchSize];\n \n             long prevLogIndex = startIndex - 1;\n             long prevLogTerm = raftLog.readEntryTerm( prevLogIndex );\n-\n-            if ( prevLogTerm > leaderContext.term )\n+if ( prevLogTerm> leaderContext.term )\n             {\n                 log.warn( \"%s aborting send. Not leader anymore? %s, prevLogTerm=%d\",\n                         statusAsString(), leaderContext, prevLogTerm );\n-                return;\n+return;\n             }\n \n             boolean entryMissing = false;\n@@ -470,11 +452,12 @@ public class RaftLogShipper\n                         entryMissing = true;\n                         break;\n                     }\n-                    if ( entries[offset].term() > leaderContext.term )\n+\n+if ( entries[offset].term() > leaderContext.term )\n                     {\n                         log.warn( \"%s aborting send. Not leader anymore? %s, entryTerm=%d\",\n                                 statusAsString(), leaderContext, entries[offset].term() );\n-                        return;\n+return;\n                     }\n                 }\n             }\n@@ -489,14 +472,12 @@ public class RaftLogShipper\n                 {\n                     log.error( \"%s: Could not send compaction info and entries were missing, but log is not behind.\",\n                             statusAsString() );\n-                }\n+    }\n             }\n             else\n             {\n-                RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request(\n-                        leader, leaderContext.term, prevLogIndex, prevLogTerm, entries, leaderContext.commitIndex );\n-\n-                outbound.send( follower, appendRequest );\n+                RaftMessages.AppendEntries.Request appendRequest = new RaftMessages.AppendEntries.Request( leader, leaderContext.term, prevLogIndex, prevLogTerm, entries, leaderContext.commitIndex );\n+outbound.send( follower, appendRequest );\n             }\n         }\n         catch ( IOException e )\n@@ -514,9 +495,7 @@ public class RaftLogShipper\n     {\n         log.warn( \"Sending log compaction info. Log pruned? Status=%s, LeaderContext=%s\",\n                 statusAsString(), leaderContext );\n-\n-        outbound.send( follower, new RaftMessages.LogCompactionInfo(\n-                leader, leaderContext.term, raftLog.prevIndex() ) );\n+outbound.send( follower, new RaftMessages.LogCompactionInfo( leader, leaderContext.term, raftLog.prevIndex() ) );\n     }\n \n     private String statusAsString()\n@@ -524,4 +503,4 @@ public class RaftLogShipper\n         return format( \"%s[matchIndex: %d, lastSentIndex: %d, localAppendIndex: %d, mode: %s]\", follower, matchIndex,\n                 lastSentIndex, raftLog.appendIndex(), mode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 70
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
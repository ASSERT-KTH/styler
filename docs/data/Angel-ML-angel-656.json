{
    "project_name": "Angel-ML-angel",
    "error_id": "656",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/656/IIntLongOp.java\nindex d9440510d4c..c58a81dd3ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/656/IIntLongOp.java\n@@ -53,7 +53,7 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * Set element values\n    *\n    * @param indices element indices\n-   * @param values new element values\n+   * @param values  new element values\n    */\n   void set(int[] indices, long[] values);\n \n@@ -69,7 +69,7 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * Add to the elements\n    *\n    * @param indices element indices\n-   * @param values element updates\n+   * @param values  element updates\n    */\n   void addTo(int[] indices, long[] values);\n \n@@ -84,7 +84,7 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * Get the element value, if the element does not exist, just init it use the function first\n    *\n    * @param index element index\n-   * @param func element initial function\n+   * @param func  element initial function\n    * @return element value\n    */\n   long initAndGet(int index, InitFunc func);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/656/IIntLongOp.java\nindex d9440510d4c..341d98052c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/656/IIntLongOp.java\n@@ -88,4 +88,4 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @return element value\n    */\n   long initAndGet(int index, InitFunc func);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/656/IIntLongOp.java\nindex d9440510d4c..f7284e220a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/656/IIntLongOp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/656/IIntLongOp.java\n@@ -23,6 +23,8 @@ import com.tencent.angel.ps.server.data.request.InitFunc;\n /**\n  * The operator for the storage that store <int, long> values\n  */\n+\n+\n public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n \n   /**\n@@ -39,6 +41,8 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param index element index\n    * @param value new element value\n    */\n+\n+\n   void set(int index, long value);\n \n   /**\n@@ -47,6 +51,7 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param indices element indices\n    * @return element value\n    */\n+\n   long[] get(int[] indices);\n \n   /**\n@@ -55,6 +60,8 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param indices element indices\n    * @param values new element values\n    */\n+\n+\n   void set(int[] indices, long[] values);\n \n   /**\n@@ -63,6 +70,8 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param index element index\n    * @param value element update\n    */\n+\n+\n   void addTo(int index, long value);\n \n   /**\n@@ -71,6 +80,8 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param indices element indices\n    * @param values element updates\n    */\n+\n+\n   void addTo(int[] indices, long[] values);\n \n   /**\n@@ -78,6 +89,8 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    *\n    * @param vector the merge destination vector\n    */\n+\n+\n   void mergeTo(IntLongVector vector);\n \n   /**\n@@ -87,5 +100,6 @@ public interface IIntLongOp extends IIntKeyOp, ILongValueOp {\n    * @param func element initial function\n    * @return element value\n    */\n+\n   long initAndGet(int index, InitFunc func);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
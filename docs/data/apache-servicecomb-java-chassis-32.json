{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "66",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n\n  private boolean scanRestController = restControllerCls != null &&\n      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n\n  public List<ProducerMeta> getProducerMetaList() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/32/RestProducers.java\nindex 59a6018dbeb..f8b34c6cb28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/32/RestProducers.java\n@@ -38,8 +38,8 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null\n+      && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "66",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/32/RestProducers.java\nindex 59a6018dbeb..0b2cb228657 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/32/RestProducers.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.provider.rest.common;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/32/RestProducers.java\nindex 59a6018dbeb..7c4d738cb40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/32/RestProducers.java\n@@ -38,8 +38,7 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n@@ -77,4 +76,4 @@ public class RestProducers implements BeanPostProcessor {\n       producerMetaList.add(producerMeta);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "66",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/32/RestProducers.java\nindex 59a6018dbeb..f8b34c6cb28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/32/RestProducers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/32/RestProducers.java\n@@ -38,8 +38,8 @@ public class RestProducers implements BeanPostProcessor {\n   private Class<? extends Annotation> restControllerCls = (Class<? extends Annotation>) ReflectUtils\n       .getClassByName(\"org.springframework.web.bind.annotation.RestController\");\n \n-  private boolean scanRestController = restControllerCls != null &&\n-      DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n+  private boolean scanRestController = restControllerCls != null\n+      && DynamicPropertyFactory.getInstance().getBooleanProperty(RestConst.PROVIDER_SCAN_REST_CONTROLLER, true).get();\n \n   public List<ProducerMeta> getProducerMetaList() {\n     return producerMetaList;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
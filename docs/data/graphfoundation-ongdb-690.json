{
    "project_name": "graphfoundation-ongdb",
    "error_id": "690",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/690/RemotelyAvailableServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/690/RemotelyAvailableServer.java\nindex 12bd71fa9b6..4198f8b2d4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/690/RemotelyAvailableServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/690/RemotelyAvailableServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -39,99 +40,98 @@ import org.neo4j.shell.Welcome;\n  */\n class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n {\n-    private final ShellServer actual;\n-    private RmiLocation location;\n-\n-    RemotelyAvailableServer( ShellServer actual ) throws RemoteException\n-    {\n-        super();\n-        this.actual = actual;\n-    }\n-\n-    @Override\n-    public String getName() throws RemoteException\n+  private final ShellServer actual;\n+  private RmiLocation location;\n+\n+  RemotelyAvailableServer(ShellServer actual) throws RemoteException\n+  {\n+    super();\n+    this.actual = actual;\n+  }\n+\n+  @Override\n+  public String getName() throws RemoteException\n+  {\n+    return actual.getName();\n+  }\n+\n+  @Override\n+  public Response interpretLine(Serializable clientId, String line, Output out) throws ShellException,\n+      RemoteException\n+  {\n+    return actual.interpretLine(clientId, line, out);\n+  }\n+\n+  @Override\n+  public Serializable interpretVariable(Serializable clientId, String key)\n+      throws ShellException, RemoteException\n+  {\n+    return actual.interpretVariable(clientId, key);\n+  }\n+\n+  @Override\n+  public void terminate(Serializable clientID) throws RemoteException\n+  {\n+    actual.terminate(clientID);\n+  }\n+\n+  @Override\n+  public Welcome welcome(Map<String, Serializable> initialSession) throws RemoteException, ShellException\n+  {\n+    return actual.welcome(initialSession);\n+  }\n+\n+  @Override\n+  public void leave(Serializable clientID) throws RemoteException\n+  {\n+    actual.leave(clientID);\n+  }\n+\n+  @Override\n+  public void shutdown() throws RemoteException\n+  {\n+    try\n     {\n-        return actual.getName();\n-    }\n-\n-    @Override\n-    public Response interpretLine( Serializable clientId, String line, Output out ) throws ShellException,\n-            RemoteException\n-    {\n-        return actual.interpretLine( clientId, line, out );\n-    }\n-\n-    @Override\n-    public Serializable interpretVariable( Serializable clientId, String key )\n-            throws ShellException, RemoteException\n-    {\n-        return actual.interpretVariable( clientId, key );\n-    }\n-\n-    @Override\n-    public void terminate( Serializable clientID ) throws RemoteException\n-    {\n-        actual.terminate( clientID );\n-    }\n-\n-    @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n-    {\n-        return actual.welcome( initialSession );\n-    }\n-\n-    @Override\n-    public void leave( Serializable clientID ) throws RemoteException\n-    {\n-        actual.leave( clientID );\n-    }\n-\n-    @Override\n-    public void shutdown() throws RemoteException\n-    {\n-        try\n-        {\n-            if ( this.location != null )\n-            {\n-                this.location.unbind();\n-            }\n-            unexportObject( this, true );\n-        }\n-        catch ( NoSuchObjectException e )\n-        {\n-            // Ok\n-        }\n-    }\n-\n-    @Override\n-    public void makeRemotelyAvailable( int port, String name ) throws RemoteException\n-    {\n-        makeRemotelyAvailable( \"localhost\", port, name );\n-    }\n-\n-    @Override\n-    public void makeRemotelyAvailable( String host, int port, String name ) throws RemoteException\n-    {\n-        this.location = RmiLocation.location( host, port, name );\n-        this.location.bind( this );\n-    }\n-\n-    @Override\n-    public String[] getAllAvailableCommands() throws RemoteException\n-    {\n-        return actual.getAllAvailableCommands();\n-    }\n-\n-    @Override\n-    public TabCompletion tabComplete( Serializable clientId, String partOfLine ) throws ShellException,\n-            RemoteException\n-    {\n-        return actual.tabComplete( clientId, partOfLine );\n-    }\n-\n-    @Override\n-    public void setSessionVariable( Serializable clientID, String key, Object value ) throws RemoteException, ShellException\n+      if (this.location != null)\n+      {\n+        this.location.unbind();\n+      }\n+      unexportObject(this, true);\n+    } catch (NoSuchObjectException e)\n     {\n-        actual.setSessionVariable( clientID, key, value );\n+      // Ok\n     }\n+  }\n+\n+  @Override\n+  public void makeRemotelyAvailable(int port, String name) throws RemoteException\n+  {\n+    makeRemotelyAvailable(\"localhost\", port, name);\n+  }\n+\n+  @Override\n+  public void makeRemotelyAvailable(String host, int port, String name) throws RemoteException\n+  {\n+    this.location = RmiLocation.location(host, port, name);\n+    this.location.bind(this);\n+  }\n+\n+  @Override\n+  public String[] getAllAvailableCommands() throws RemoteException\n+  {\n+    return actual.getAllAvailableCommands();\n+  }\n+\n+  @Override\n+  public TabCompletion tabComplete(Serializable clientId, String partOfLine) throws ShellException,\n+      RemoteException\n+  {\n+    return actual.tabComplete(clientId, partOfLine);\n+  }\n+\n+  @Override\n+  public void setSessionVariable(Serializable clientID, String key, Object value) throws RemoteException, ShellException\n+  {\n+    actual.setSessionVariable(clientID, key, value);\n+  }\n }\n",
            "diff_size": 166
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/690/RemotelyAvailableServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/690/RemotelyAvailableServer.java\nindex 12bd71fa9b6..3911453d726 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/690/RemotelyAvailableServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/690/RemotelyAvailableServer.java\n@@ -57,14 +57,13 @@ class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n     @Override\n     public Response interpretLine( Serializable clientId, String line, Output out ) throws ShellException,\n             RemoteException\n-    {\n+{\n         return actual.interpretLine( clientId, line, out );\n     }\n \n     @Override\n-    public Serializable interpretVariable( Serializable clientId, String key )\n-            throws ShellException, RemoteException\n-    {\n+    public Serializable interpretVariable( Serializable clientId, String key ) throws ShellException, RemoteException\n+{\n         return actual.interpretVariable( clientId, key );\n     }\n \n@@ -75,7 +74,7 @@ class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n     }\n \n     @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n+    public Welcome welcome( Map<String,Serializable> initialSession ) throws RemoteException, ShellException\n     {\n         return actual.welcome( initialSession );\n     }\n@@ -95,7 +94,8 @@ class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n             {\n                 this.location.unbind();\n             }\n-            unexportObject( this, true );\n+\n+unexportObject( this, true );\n         }\n         catch ( NoSuchObjectException e )\n         {\n@@ -125,7 +125,7 @@ class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n     @Override\n     public TabCompletion tabComplete( Serializable clientId, String partOfLine ) throws ShellException,\n             RemoteException\n-    {\n+{\n         return actual.tabComplete( clientId, partOfLine );\n     }\n \n@@ -134,4 +134,4 @@ class RemotelyAvailableServer extends UnicastRemoteObject implements ShellServer\n     {\n         actual.setSessionVariable( clientID, key, value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
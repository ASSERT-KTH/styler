{
    "project_name": "neo4j-neo4j",
    "error_id": "1991",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1991/QuerySubscriber.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1991/QuerySubscriber.java\nindex 4fde7b40d81..8d0451c86be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1991/QuerySubscriber.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1991/QuerySubscriber.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import org.neo4j.graphdb.QueryStatistics;\n@@ -28,7 +29,7 @@ import org.neo4j.values.AnyValue;\n  * Used in conjunction with a {@link QuerySubscription}. The subscription will demand a number of records, {@link\n  * QuerySubscription#request(long)}, and when there is data available the subscriber will receive a call chain like.\n  *\n- <pre>\n+ * <pre>\n  *     onResult(3)\n  *     onRecord()\n  *     onField(0, v1)\n@@ -53,7 +54,7 @@ public interface QuerySubscriber\n      *\n      * @param numberOfFields the number of fields each record of the stream will contain\n      */\n-    void onResult( int numberOfFields ) throws Exception;\n+    void onResult(int numberOfFields) throws Exception;\n \n     /**\n      * Called whenever a new record is ready to be written\n@@ -69,7 +70,7 @@ public interface QuerySubscriber\n      *\n      * @param value the value of the field at the current offset.\n      */\n-    void onField( int offset, AnyValue value ) throws Exception;\n+    void onField(int offset, AnyValue value) throws Exception;\n \n     /**\n      * The current record has been completed\n@@ -81,31 +82,31 @@ public interface QuerySubscriber\n      *\n      * @param throwable the error\n      */\n-    void onError( Throwable throwable ) throws Exception;\n+    void onError(Throwable throwable) throws Exception;\n \n     /**\n      * Call onError while suppressing any new exception.\n      */\n-    static void safelyOnError( QuerySubscriber subscriber, Throwable t )\n+    static void safelyOnError(QuerySubscriber subscriber, Throwable t)\n     {\n         try\n         {\n-            subscriber.onError( t );\n-        }\n-        catch ( Exception onErrorException )\n+            subscriber.onError(t);\n+        } catch (Exception onErrorException)\n         {\n-            t.addSuppressed( onErrorException );\n+            t.addSuppressed(onErrorException);\n         }\n     }\n \n     /**\n      * The result stream is done, no more data to stream.\n-     *\n+     * <p>\n      * This means that further calls {@link QuerySubscription#request(long)} will not result in more data being\n      * streamed to the subscriber.\n+     *\n      * @param statistics The query statistics of the results.\n      */\n-    void onResultCompleted( QueryStatistics statistics );\n+    void onResultCompleted(QueryStatistics statistics);\n \n     /**\n      * Dummy implementation that will throw whenever it is being called.\n@@ -113,7 +114,7 @@ public interface QuerySubscriber\n     QuerySubscriber DO_NOTHING_SUBSCRIBER = new QuerySubscriber()\n     {\n         @Override\n-        public void onResult( int numberOfFields )\n+        public void onResult(int numberOfFields)\n         {\n \n         }\n@@ -125,7 +126,7 @@ public interface QuerySubscriber\n         }\n \n         @Override\n-        public void onField( int offset, AnyValue value )\n+        public void onField(int offset, AnyValue value)\n         {\n \n         }\n@@ -137,13 +138,13 @@ public interface QuerySubscriber\n         }\n \n         @Override\n-        public void onError( Throwable throwable )\n+        public void onError(Throwable throwable)\n         {\n \n         }\n \n         @Override\n-        public void onResultCompleted( QueryStatistics statistics )\n+        public void onResultCompleted(QueryStatistics statistics)\n         {\n \n         }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
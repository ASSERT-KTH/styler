{
    "project_name": "eclipse-kura",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "69",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = super.hashCode();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "70",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..2a44b97d992 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/18/EthernetInterfaceImpl.java\n@@ -66,7 +66,7 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n+    @Override\n \tpublic int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = super.hashCode();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..4984589897b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/18/EthernetInterfaceImpl.java\n@@ -9,6 +9,7 @@\n  * Contributors:\n  *     Eurotech\n  *******************************************************************************/\n+\n package org.eclipse.kura.core.net;\n \n import java.util.ArrayList;\n@@ -19,7 +20,7 @@ import org.eclipse.kura.net.NetInterfaceAddress;\n import org.eclipse.kura.net.NetInterfaceType;\n \n public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends AbstractNetInterface<T>\n-        implements EthernetInterface<T> {\n+    implements EthernetInterface<T> {\n \n     private boolean linkUp;\n \n@@ -66,29 +67,29 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = super.hashCode();\n-\t\tresult = prime * result + (linkUp ? 1231 : 1237);\n-\t\treturn result;\n-\t}\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = super.hashCode();\n+        result = prime * result + (linkUp ? 1231 : 1237);\n+        return result;\n+    }\n \n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (!super.equals(obj)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!(obj instanceof EthernetInterfaceImpl)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tEthernetInterfaceImpl other = (EthernetInterfaceImpl) obj;\n-\t\tif (linkUp != other.linkUp) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}    \n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (!super.equals(obj)) {\n+            return false;\n+        }\n+        if (!(obj instanceof EthernetInterfaceImpl)) {\n+            return false;\n+        }\n+        EthernetInterfaceImpl other = (EthernetInterfaceImpl) obj;\n+        if (linkUp != other.linkUp) {\n+            return false;\n+        }\n+        return true;\n+    }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "70",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..8efeef5efd6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/18/EthernetInterfaceImpl.java\n@@ -66,29 +66,29 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n+@Override\n \tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n+    final int prime = 31;\n \t\tint result = super.hashCode();\n \t\tresult = prime * result + (linkUp ? 1231 : 1237);\n \t\treturn result;\n-\t}\n+    }\n \n \t@Override\n \tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n+    if (this == obj) {\n+    return true;\n+    }\n \t\tif (!super.equals(obj)) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tif (!(obj instanceof EthernetInterfaceImpl)) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\tEthernetInterfaceImpl other = (EthernetInterfaceImpl) obj;\n \t\tif (linkUp != other.linkUp) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\treturn true;\n-\t}    \n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..766ed0e9ff3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/18/EthernetInterfaceImpl.java\n@@ -13,13 +13,11 @@ package org.eclipse.kura.core.net;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import org.eclipse.kura.net.EthernetInterface;\n import org.eclipse.kura.net.NetInterfaceAddress;\n import org.eclipse.kura.net.NetInterfaceType;\n \n-public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends AbstractNetInterface<T>\n-        implements EthernetInterface<T> {\n+public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends AbstractNetInterface<T> implements EthernetInterface<T> {\n \n     private boolean linkUp;\n \n@@ -35,7 +33,6 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         // Copy the NetInterfaceAddresses\n         List<? extends NetInterfaceAddress> otherNetInterfaceAddresses = other.getNetInterfaceAddresses();\n         ArrayList<T> interfaceAddresses = new ArrayList<T>();\n-\n         if (otherNetInterfaceAddresses != null) {\n             for (NetInterfaceAddress netInterfaceAddress : otherNetInterfaceAddresses) {\n                 NetInterfaceAddressImpl copiedInterfaceAddressImpl = new NetInterfaceAddressImpl(netInterfaceAddress);\n@@ -66,29 +63,30 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n-\tpublic int hashCode() {\n-\t\tfinal int prime = 31;\n-\t\tint result = super.hashCode();\n-\t\tresult = prime * result + (linkUp ? 1231 : 1237);\n-\t\treturn result;\n-\t}\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = super.hashCode();\n+        result = prime * result + (linkUp ? 1231 : 1237);\n+        return result;\n+    }\n \n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj) {\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (!super.equals(obj)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (!(obj instanceof EthernetInterfaceImpl)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tEthernetInterfaceImpl other = (EthernetInterfaceImpl) obj;\n-\t\tif (linkUp != other.linkUp) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}    \n-}\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (!super.equals(obj)) {\n+            return false;\n+        }\n+        if (!(obj instanceof EthernetInterfaceImpl)) {\n+            return false;\n+        }\n+\n+        EthernetInterfaceImpl other = (EthernetInterfaceImpl) obj;\n+        if (linkUp != other.linkUp) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "70",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..2a44b97d992 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/18/EthernetInterfaceImpl.java\n@@ -66,7 +66,7 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n+    @Override\n \tpublic int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = super.hashCode();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "70",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/18/EthernetInterfaceImpl.java\nindex 3de433a20fc..2a44b97d992 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/18/EthernetInterfaceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/18/EthernetInterfaceImpl.java\n@@ -66,7 +66,7 @@ public class EthernetInterfaceImpl<T extends NetInterfaceAddress> extends Abstra\n         return sb.toString();\n     }\n \n-\t@Override\n+    @Override\n \tpublic int hashCode() {\n \t\tfinal int prime = 31;\n \t\tint result = super.hashCode();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
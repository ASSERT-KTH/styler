{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3722",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3722/LoggingLogFileMonitor.java\nindex 246260ab7e1..297a38360de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3722/LoggingLogFileMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.File;\n@@ -31,98 +32,97 @@ import org.neo4j.logging.Log;\n import static java.lang.String.format;\n \n public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n-        LogRotation.Monitor, RecoveryMonitor,\n-        RecoveryStartInformationProvider.Monitor\n+    LogRotation.Monitor, RecoveryMonitor,\n+    RecoveryStartInformationProvider.Monitor\n {\n-    private long firstTransactionRecovered = -1;\n-    private long lastTransactionRecovered;\n-    private final Log log;\n-\n-    public LoggingLogFileMonitor( Log log )\n-    {\n-        this.log = log;\n-    }\n-\n-    @Override\n-    public void recoveryRequired( LogPosition startPosition )\n-    {\n-        log.info( \"Recovery required from position \" + startPosition );\n-    }\n-\n-    @Override\n-    public void recoveryCompleted( int numberOfRecoveredTransactions )\n-    {\n-        if ( numberOfRecoveredTransactions != 0 )\n-        {\n-            log.info( format( \"Recovery completed. %d transactions, first:%d, last:%d recovered\",\n-                    numberOfRecoveredTransactions, firstTransactionRecovered, lastTransactionRecovered ) );\n-        }\n-        else\n-        {\n-            log.info( \"No recovery required\" );\n-        }\n-    }\n-\n-    @Override\n-    public void failToRecoverTransactionsAfterCommit( Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition )\n-    {\n-        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n-                        \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n-                commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n-    }\n-\n-    @Override\n-    public void failToRecoverTransactionsAfterPosition( Throwable t, LogPosition recoveryFromPosition )\n-    {\n-        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" +\n-                \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n-    }\n-\n-    @Override\n-    public void startedRotating( long currentVersion )\n-    {\n-    }\n-\n-    @Override\n-    public void finishedRotating( long currentVersion )\n-    {\n-    }\n-\n-    @Override\n-    public void transactionRecovered( long txId )\n-    {\n-        if ( firstTransactionRecovered == -1 )\n-        {\n-            firstTransactionRecovered = txId;\n-        }\n-        lastTransactionRecovered = txId;\n-    }\n-\n-    @Override\n-    public void created( File logFile, long logVersion, long lastTransactionId )\n-    {\n-        log.info( format( \"Rotated to transaction log [%s] version=%d, last transaction in previous log=%d\",\n-                logFile, logVersion, lastTransactionId ) );\n-    }\n-\n-    @Override\n-    public void noCommitsAfterLastCheckPoint( LogPosition logPosition )\n+  private long firstTransactionRecovered = -1;\n+  private long lastTransactionRecovered;\n+  private final Log log;\n+\n+  public LoggingLogFileMonitor(Log log)\n+  {\n+    this.log = log;\n+  }\n+\n+  @Override\n+  public void recoveryRequired(LogPosition startPosition)\n+  {\n+    log.info(\"Recovery required from position \" + startPosition);\n+  }\n+\n+  @Override\n+  public void recoveryCompleted(int numberOfRecoveredTransactions)\n+  {\n+    if (numberOfRecoveredTransactions != 0)\n     {\n-        log.info( format( \"No commits found after last check point (which is at %s)\",\n-                logPosition != null ? logPosition.toString() : \"<no log position given>\" ) );\n-    }\n-\n-    @Override\n-    public void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n+      log.info(format(\"Recovery completed. %d transactions, first:%d, last:%d recovered\",\n+          numberOfRecoveredTransactions, firstTransactionRecovered, lastTransactionRecovered));\n+    } else\n     {\n-        log.info( format(\n-                \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n-                logPosition, firstTxIdAfterLastCheckPoint ) );\n+      log.info(\"No recovery required\");\n     }\n-\n-    @Override\n-    public void noCheckPointFound()\n+  }\n+\n+  @Override\n+  public void failToRecoverTransactionsAfterCommit(Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition)\n+  {\n+    log.warn(format(\"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n+            \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n+        commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition), t);\n+  }\n+\n+  @Override\n+  public void failToRecoverTransactionsAfterPosition(Throwable t, LogPosition recoveryFromPosition)\n+  {\n+    log.warn(format(\"Fail to recover all transactions. Any later transactions after position %s are \" +\n+        \"unreadable and will be truncated.\", recoveryFromPosition), t);\n+  }\n+\n+  @Override\n+  public void startedRotating(long currentVersion)\n+  {\n+  }\n+\n+  @Override\n+  public void finishedRotating(long currentVersion)\n+  {\n+  }\n+\n+  @Override\n+  public void transactionRecovered(long txId)\n+  {\n+    if (firstTransactionRecovered == -1)\n     {\n-        log.info( \"No check point found in transaction log\" );\n+      firstTransactionRecovered = txId;\n     }\n+    lastTransactionRecovered = txId;\n+  }\n+\n+  @Override\n+  public void created(File logFile, long logVersion, long lastTransactionId)\n+  {\n+    log.info(format(\"Rotated to transaction log [%s] version=%d, last transaction in previous log=%d\",\n+        logFile, logVersion, lastTransactionId));\n+  }\n+\n+  @Override\n+  public void noCommitsAfterLastCheckPoint(LogPosition logPosition)\n+  {\n+    log.info(format(\"No commits found after last check point (which is at %s)\",\n+        logPosition != null ? logPosition.toString() : \"<no log position given>\"));\n+  }\n+\n+  @Override\n+  public void commitsAfterLastCheckPoint(LogPosition logPosition, long firstTxIdAfterLastCheckPoint)\n+  {\n+    log.info(format(\n+        \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n+        logPosition, firstTxIdAfterLastCheckPoint));\n+  }\n+\n+  @Override\n+  public void noCheckPointFound()\n+  {\n+    log.info(\"No check point found in transaction log\");\n+  }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3722/LoggingLogFileMonitor.java\nindex 246260ab7e1..4e254de4ce0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3722/LoggingLogFileMonitor.java\n@@ -66,16 +66,13 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     @Override\n     public void failToRecoverTransactionsAfterCommit( Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition )\n     {\n-        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n-                        \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n-                commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n+        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" + \"at:%d. Any later transaction after %s are unreadable and will be truncated.\", commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n     }\n \n     @Override\n     public void failToRecoverTransactionsAfterPosition( Throwable t, LogPosition recoveryFromPosition )\n     {\n-        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" +\n-                \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n+        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" + \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n     }\n \n     @Override\n@@ -95,7 +92,8 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n         {\n             firstTransactionRecovered = txId;\n         }\n-        lastTransactionRecovered = txId;\n+\n+lastTransactionRecovered = txId;\n     }\n \n     @Override\n@@ -115,9 +113,7 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     @Override\n     public void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n     {\n-        log.info( format(\n-                \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n-                logPosition, firstTxIdAfterLastCheckPoint ) );\n+        log.info( format( \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \", logPosition, firstTxIdAfterLastCheckPoint ) );\n     }\n \n     @Override\n@@ -125,4 +121,4 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     {\n         log.info( \"No check point found in transaction log\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3722/LoggingLogFileMonitor.java\nindex 246260ab7e1..d2afcc30d13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3722/LoggingLogFileMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3722/LoggingLogFileMonitor.java\n@@ -20,21 +20,17 @@\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.File;\n-\n import org.neo4j.kernel.impl.transaction.log.entry.LogEntryCommit;\n import org.neo4j.kernel.impl.transaction.log.files.LogFileCreationMonitor;\n import org.neo4j.kernel.impl.transaction.log.rotation.LogRotation;\n import org.neo4j.kernel.recovery.RecoveryMonitor;\n import org.neo4j.kernel.recovery.RecoveryStartInformationProvider;\n import org.neo4j.logging.Log;\n-\n import static java.lang.String.format;\n \n-public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n-        LogRotation.Monitor, RecoveryMonitor,\n-        RecoveryStartInformationProvider.Monitor\n+public class LoggingLogFileMonitor implements LogFileCreationMonitor, LogRotation.Monitor, RecoveryMonitor, RecoveryStartInformationProvider.Monitor\n {\n-    private long firstTransactionRecovered = -1;\n+    private long firstTransactionRecovered = - 1;\n     private long lastTransactionRecovered;\n     private final Log log;\n \n@@ -54,8 +50,7 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     {\n         if ( numberOfRecoveredTransactions != 0 )\n         {\n-            log.info( format( \"Recovery completed. %d transactions, first:%d, last:%d recovered\",\n-                    numberOfRecoveredTransactions, firstTransactionRecovered, lastTransactionRecovered ) );\n+            log.info( format( \"Recovery completed. %d transactions, first:%d, last:%d recovered\", numberOfRecoveredTransactions, firstTransactionRecovered, lastTransactionRecovered ) );\n         }\n         else\n         {\n@@ -66,16 +61,13 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     @Override\n     public void failToRecoverTransactionsAfterCommit( Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition )\n     {\n-        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n-                        \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n-                commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n+        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" + \"at:%d. Any later transaction after %s are unreadable and will be truncated.\", commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n     }\n \n     @Override\n     public void failToRecoverTransactionsAfterPosition( Throwable t, LogPosition recoveryFromPosition )\n     {\n-        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" +\n-                \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n+        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" + \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n     }\n \n     @Override\n@@ -91,33 +83,30 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     @Override\n     public void transactionRecovered( long txId )\n     {\n-        if ( firstTransactionRecovered == -1 )\n+        if ( firstTransactionRecovered == - 1 )\n         {\n             firstTransactionRecovered = txId;\n         }\n+\n         lastTransactionRecovered = txId;\n     }\n \n     @Override\n     public void created( File logFile, long logVersion, long lastTransactionId )\n     {\n-        log.info( format( \"Rotated to transaction log [%s] version=%d, last transaction in previous log=%d\",\n-                logFile, logVersion, lastTransactionId ) );\n+        log.info( format( \"Rotated to transaction log [%s] version=%d, last transaction in previous log=%d\", logFile, logVersion, lastTransactionId ) );\n     }\n \n     @Override\n     public void noCommitsAfterLastCheckPoint( LogPosition logPosition )\n     {\n-        log.info( format( \"No commits found after last check point (which is at %s)\",\n-                logPosition != null ? logPosition.toString() : \"<no log position given>\" ) );\n+        log.info( format( \"No commits found after last check point (which is at %s)\", logPosition != null ? logPosition.toString() : \"<no log position given>\" ) );\n     }\n \n     @Override\n     public void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n     {\n-        log.info( format(\n-                \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n-                logPosition, firstTxIdAfterLastCheckPoint ) );\n+        log.info( format( \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \", logPosition, firstTxIdAfterLastCheckPoint ) );\n     }\n \n     @Override\n@@ -125,4 +114,4 @@ public class LoggingLogFileMonitor implements LogFileCreationMonitor,\n     {\n         log.info( \"No check point found in transaction log\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
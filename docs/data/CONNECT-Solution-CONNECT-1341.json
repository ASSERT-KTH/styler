{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1341",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpilib;\n\nimport gov.hhs.fha.nhinc.nhinclib.NullChecker;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1341/Identifier.java\nindex 9570ddba0cc..a62577eafd6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1341/Identifier.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1341/Identifier.java\nindex 9570ddba0cc..a48ec89fa4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1341/Identifier.java\n@@ -24,96 +24,96 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n \n /**\n- *\n  * @author rayj\n  */\n public class Identifier implements java.io.Serializable {\n-    static final long serialVersionUID = -4713959967816233116L;\n-\n-    private String id = \"\";\n-    private String organizationId = \"\";\n-\n-    /**\n-     * Default constructor for Identifier.\n-     */\n-    public Identifier() {\n-    }\n-\n-    /**\n-     * Constructor for Identifier.\n-     *\n-     * @param id the ID for this Identifier\n-     * @param organizationId the organizationID for this Identifier\n-     */\n-    public Identifier(String id, String organizationId) {\n-        this.id = id;\n-        this.organizationId = organizationId;\n-    }\n-\n-    /**\n-     * @return the OrganizationId for this Identifier\n-     */\n-    public String getOrganizationId() {\n-        return organizationId;\n+  static final long serialVersionUID = -4713959967816233116L;\n+\n+  private String id = \"\";\n+  private String organizationId = \"\";\n+\n+  /**\n+   * Default constructor for Identifier.\n+   */\n+  public Identifier() {\n+  }\n+\n+  /**\n+   * Constructor for Identifier.\n+   *\n+   * @param id             the ID for this Identifier\n+   * @param organizationId the organizationID for this Identifier\n+   */\n+  public Identifier(String id, String organizationId) {\n+    this.id = id;\n+    this.organizationId = organizationId;\n+  }\n+\n+  /**\n+   * @return the OrganizationId for this Identifier\n+   */\n+  public String getOrganizationId() {\n+    return organizationId;\n+  }\n+\n+  /**\n+   * @param identifier the organizationId to set for this Identifier\n+   */\n+  public void setOrganizationId(String identifier) {\n+    organizationId = identifier;\n+  }\n+\n+  /**\n+   * @return the Id for this Identifier\n+   */\n+  public String getId() {\n+    return id;\n+  }\n+\n+  /**\n+   * @param id the id to set for this Identifier\n+   */\n+  public void setId(String id) {\n+    this.id = id;\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n     }\n \n-    /**\n-     * @param identifier the organizationId to set for this Identifier\n-     */\n-    public void setOrganizationId(String identifier) {\n-        organizationId = identifier;\n+    if (!(obj instanceof Identifier)) {\n+      return false;\n     }\n \n-    /**\n-     * @return the Id for this Identifier\n-     */\n-    public String getId() {\n-        return id;\n-    }\n-\n-    /**\n-     * @param id the id to set for this Identifier\n-     */\n-    public void setId(String id) {\n-        this.id = id;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-\n-        if (!(obj instanceof Identifier)) {\n-            return false;\n-        }\n-\n-        Identifier rhs = (Identifier) obj;\n-\n-        if ((NullChecker.isNullish(this.getId())) || (this.getOrganizationId() == null)\n-            || (NullChecker.isNullish(rhs.getId())) || (rhs.getOrganizationId() == null)) {\n-            return false;\n-        }\n+    Identifier rhs = (Identifier) obj;\n \n-        return this.getId().contentEquals(rhs.getId())\n-            && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n+    if ((NullChecker.isNullish(this.getId())) || (this.getOrganizationId() == null)\n+        || (NullChecker.isNullish(rhs.getId())) || (rhs.getOrganizationId() == null)) {\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode() {\n-        int hashCode = 0;\n-        if (NullChecker.isNotNullish(id)) {\n-            hashCode = id.hashCode();\n-            if (NullChecker.isNotNullish(organizationId)) {\n-                hashCode += organizationId.hashCode();\n-            }\n-        }\n-        return hashCode;\n+    return this.getId().contentEquals(rhs.getId())\n+        && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hashCode = 0;\n+    if (NullChecker.isNotNullish(id)) {\n+      hashCode = id.hashCode();\n+      if (NullChecker.isNotNullish(organizationId)) {\n+        hashCode += organizationId.hashCode();\n+      }\n     }\n+    return hashCode;\n+  }\n \n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1341/Identifier.java\nindex 9570ddba0cc..007c0cc7874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1341/Identifier.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n@@ -94,14 +95,11 @@ public class Identifier implements java.io.Serializable {\n         }\n \n         Identifier rhs = (Identifier) obj;\n-\n-        if ((NullChecker.isNullish(this.getId())) || (this.getOrganizationId() == null)\n-            || (NullChecker.isNullish(rhs.getId())) || (rhs.getOrganizationId() == null)) {\n-            return false;\n+if ((NullChecker.isNullish(this.getId())) || (this.getOrganizationId() == null) || (NullChecker.isNullish(rhs.getId())) || (rhs.getOrganizationId() == null)) {\n+    return false;\n         }\n \n-        return this.getId().contentEquals(rhs.getId())\n-            && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n+        return this.getId().contentEquals(rhs.getId()) && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n     }\n \n     @Override\n@@ -116,4 +114,4 @@ public class Identifier implements java.io.Serializable {\n         return hashCode;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "107",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "113",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "52",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "52",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "114",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "54",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "54",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "115",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1341/Identifier.java\nindex 9570ddba0cc..1af57a217f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1341/Identifier.java\n@@ -32,17 +32,21 @@ import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n  *\n  * @author rayj\n  */\n+\n+\n public class Identifier implements java.io.Serializable {\n-    static final long serialVersionUID = -4713959967816233116L;\n \n+    static final long serialVersionUID = -\n+                                             4713959967816233116L;\n     private String id = \"\";\n     private String organizationId = \"\";\n \n     /**\n      * Default constructor for Identifier.\n      */\n+\n     public Identifier() {\n-    }\n+}\n \n     /**\n      * Constructor for Identifier.\n@@ -50,6 +54,8 @@ public class Identifier implements java.io.Serializable {\n      * @param id the ID for this Identifier\n      * @param organizationId the organizationID for this Identifier\n      */\n+\n+\n     public Identifier(String id, String organizationId) {\n         this.id = id;\n         this.organizationId = organizationId;\n@@ -58,6 +64,8 @@ public class Identifier implements java.io.Serializable {\n     /**\n      * @return the OrganizationId for this Identifier\n      */\n+\n+\n     public String getOrganizationId() {\n         return organizationId;\n     }\n@@ -65,6 +73,8 @@ public class Identifier implements java.io.Serializable {\n     /**\n      * @param identifier the organizationId to set for this Identifier\n      */\n+\n+\n     public void setOrganizationId(String identifier) {\n         organizationId = identifier;\n     }\n@@ -72,6 +82,8 @@ public class Identifier implements java.io.Serializable {\n     /**\n      * @return the Id for this Identifier\n      */\n+\n+\n     public String getId() {\n         return id;\n     }\n@@ -79,31 +91,34 @@ public class Identifier implements java.io.Serializable {\n     /**\n      * @param id the id to set for this Identifier\n      */\n+\n+\n     public void setId(String id) {\n         this.id = id;\n     }\n \n+\n     @Override\n     public boolean equals(Object obj) {\n         if (this == obj) {\n             return true;\n         }\n-\n-        if (!(obj instanceof Identifier)) {\n+        if (!\n+                ( obj instanceof Identifier)) {\n             return false;\n         }\n-\n-        Identifier rhs = (Identifier) obj;\n-\n-        if ((NullChecker.isNullish(this.getId())) || (this.getOrganizationId() == null)\n-            || (NullChecker.isNullish(rhs.getId())) || (rhs.getOrganizationId() == null)) {\n+        Identifier rhs = (Identifier)\n+                             obj;\n+        if ((NullChecker.isNullish(this.getId()))||\n+                ( this.getOrganizationId() == null)||\n+                ( NullChecker.isNullish(rhs.getId()))||\n+            ( rhs.getOrganizationId() == null)) {\n             return false;\n         }\n-\n-        return this.getId().contentEquals(rhs.getId())\n-            && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n+        return this.getId().contentEquals(rhs.getId()) && this.getOrganizationId().contentEquals(rhs.getOrganizationId());\n     }\n \n+\n     @Override\n     public int hashCode() {\n         int hashCode = 0;\n@@ -116,4 +131,4 @@ public class Identifier implements java.io.Serializable {\n         return hashCode;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1341/Identifier.java\nindex 9570ddba0cc..a7a58ef4ecd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1341/Identifier.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n+gov.hhs.fha.nhinc.nhinclib.NullChecker;\n \n /**\n  *\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1341/Identifier.java\nindex 9570ddba0cc..a62577eafd6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1341/Identifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1341/Identifier.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
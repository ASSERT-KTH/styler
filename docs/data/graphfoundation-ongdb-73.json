{
    "project_name": "graphfoundation-ongdb",
    "error_id": "73",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/73/NoQueryEngine.java\nindex 0c280efd2ee..db6fb7758ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/73/NoQueryEngine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import java.util.Map;\n@@ -26,46 +27,46 @@ import org.neo4j.values.virtual.MapValue;\n \n enum NoQueryEngine implements QueryExecutionEngine\n {\n-    INSTANCE;\n+  INSTANCE;\n \n-    @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public Result executeQuery(String query, MapValue parameters, TransactionalContext context)\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    @Override\n-    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext context)\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    @Override\n-    public String prettify( String query )\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public String prettify(String query)\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    @Override\n-    public Result profileQuery( String query, Map<String,Object> parameter, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public Result profileQuery(String query, Map<String, Object> parameter, TransactionalContext context)\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    @Override\n-    public boolean isPeriodicCommit( String query )\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public boolean isPeriodicCommit(String query)\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    @Override\n-    public long clearQueryCaches()\n-    {\n-        throw noQueryEngine();\n-    }\n+  @Override\n+  public long clearQueryCaches()\n+  {\n+    throw noQueryEngine();\n+  }\n \n-    private RuntimeException noQueryEngine()\n-    {\n-        return new UnsupportedOperationException( \"No query engine installed.\" );\n-    }\n+  private RuntimeException noQueryEngine()\n+  {\n+    return new UnsupportedOperationException(\"No query engine installed.\");\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/73/NoQueryEngine.java\nindex 0c280efd2ee..091ba721450 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/73/NoQueryEngine.java\n@@ -68,4 +68,4 @@ enum NoQueryEngine implements QueryExecutionEngine\n     {\n         return new UnsupportedOperationException( \"No query engine installed.\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/73/NoQueryEngine.java\nindex 0c280efd2ee..efb8a16fd6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/73/NoQueryEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/73/NoQueryEngine.java\n@@ -20,52 +20,51 @@\n package org.neo4j.kernel.impl.query;\n \n import java.util.Map;\n-\n import org.neo4j.graphdb.Result;\n import org.neo4j.values.virtual.MapValue;\n \n enum NoQueryEngine implements QueryExecutionEngine\n {\n-    INSTANCE;\n+    INSTANCE ;\n+                 @Override\n+                 public Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+                 @Override\n+                 public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+                 @Override\n+                 public String prettify( String query )\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public String prettify( String query )\n-    {\n-        throw noQueryEngine();\n-    }\n+                 @Override\n+                 public Result profileQuery( String query, Map<String,Object> parameter, TransactionalContext context )\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public Result profileQuery( String query, Map<String,Object> parameter, TransactionalContext context )\n-    {\n-        throw noQueryEngine();\n-    }\n+                 @Override\n+                 public boolean isPeriodicCommit( String query )\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public boolean isPeriodicCommit( String query )\n-    {\n-        throw noQueryEngine();\n-    }\n+                 @Override\n+                 public long clearQueryCaches()\n+                 {\n+                     throw noQueryEngine();\n+                 }\n \n-    @Override\n-    public long clearQueryCaches()\n-    {\n-        throw noQueryEngine();\n-    }\n+                 private RuntimeException noQueryEngine()\n+                 {\n+                     return new UnsupportedOperationException( \"No query engine installed.\" );\n+                 }\n \n-    private RuntimeException noQueryEngine()\n-    {\n-        return new UnsupportedOperationException( \"No query engine installed.\" );\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1542",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1542/FabricTransactionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1542/FabricTransactionInfo.java\nindex 64aefd0d081..0726b0803a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1542/FabricTransactionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1542/FabricTransactionInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.transaction;\n \n import java.time.Duration;\n@@ -36,16 +37,16 @@ public class FabricTransactionInfo\n     private final boolean implicitTransaction;\n     private final Duration txTimeout;\n     private final RoutingContext routingContext;\n-    private Map<String,Object> txMetadata;\n+    private Map<String, Object> txMetadata;\n \n-    public FabricTransactionInfo( AccessMode accessMode,\n-            LoginContext loginContext,\n-            ClientConnectionInfo clientConnectionInfo,\n-            String databaseName,\n-            boolean implicitTransaction,\n-            Duration txTimeout,\n-            Map<String,Object> txMetadata,\n-            RoutingContext routingContext )\n+    public FabricTransactionInfo(AccessMode accessMode,\n+                                 LoginContext loginContext,\n+                                 ClientConnectionInfo clientConnectionInfo,\n+                                 String databaseName,\n+                                 boolean implicitTransaction,\n+                                 Duration txTimeout,\n+                                 Map<String, Object> txMetadata,\n+                                 RoutingContext routingContext)\n     {\n         this.accessMode = accessMode;\n         this.loginContext = loginContext;\n@@ -87,12 +88,12 @@ public class FabricTransactionInfo\n         return txTimeout;\n     }\n \n-    public Map<String,Object> getTxMetadata()\n+    public Map<String, Object> getTxMetadata()\n     {\n         return txMetadata;\n     }\n \n-    public void setMetaData( Map<String,Object> txMeta )\n+    public void setMetaData(Map<String, Object> txMeta)\n     {\n         txMetadata = txMeta;\n     }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "186",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/186/CachingOffHeapBlockAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/186/CachingOffHeapBlockAllocator.java\nindex 6fc44c71fa9..d3d8d2ada8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/186/CachingOffHeapBlockAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/186/CachingOffHeapBlockAllocator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.collection;\n \n import org.jctools.queues.MpmcArrayQueue;\n@@ -56,106 +57,105 @@ public class CachingOffHeapBlockAllocator implements OffHeapBlockAllocator\n     @VisibleForTesting\n     public CachingOffHeapBlockAllocator()\n     {\n-        this( ByteUnit.kibiBytes( 512 ), 128 );\n+        this(ByteUnit.kibiBytes(512), 128);\n     }\n \n     /**\n      * @param maxCacheableBlockSize Max size of cached blocks including alignment padding, must be a power of 2\n-     * @param maxCachedBlocks Max number of blocks of each size to store\n+     * @param maxCachedBlocks       Max number of blocks of each size to store\n      */\n-    public CachingOffHeapBlockAllocator( long maxCacheableBlockSize, int maxCachedBlocks )\n+    public CachingOffHeapBlockAllocator(long maxCacheableBlockSize, int maxCachedBlocks)\n     {\n-        requirePositive( maxCachedBlocks );\n-        this.maxCacheableBlockSize = requirePowerOfTwo( maxCacheableBlockSize );\n+        requirePositive(maxCachedBlocks);\n+        this.maxCacheableBlockSize = requirePowerOfTwo(maxCacheableBlockSize);\n \n-        final int numOfCaches = log2floor( maxCacheableBlockSize ) + 1;\n+        final int numOfCaches = log2floor(maxCacheableBlockSize) + 1;\n         //noinspection unchecked\n         this.caches = new Queue[numOfCaches];\n-        for ( int i = 0; i < caches.length; i++ )\n+        for (int i = 0; i < caches.length; i++)\n         {\n-            caches[i] = new MpmcArrayQueue<>( maxCachedBlocks );\n+            caches[i] = new MpmcArrayQueue<>(maxCachedBlocks);\n         }\n     }\n \n     @Override\n-    public MemoryBlock allocate( long size, MemoryTracker tracker )\n+    public MemoryBlock allocate(long size, MemoryTracker tracker)\n     {\n-        requirePositive( size );\n-        checkState( !released, \"Allocator is already released\" );\n-        if ( notCacheable( size ) )\n+        requirePositive(size);\n+        checkState(!released, \"Allocator is already released\");\n+        if (notCacheable(size))\n         {\n-            return allocateNew( size, tracker );\n+            return allocateNew(size, tracker);\n         }\n \n-        final Queue<MemoryBlock> cache = caches[log2floor( size )];\n+        final Queue<MemoryBlock> cache = caches[log2floor(size)];\n         MemoryBlock block = cache.poll();\n-        if ( block == null )\n+        if (block == null)\n         {\n-            block = allocateNew( size, tracker );\n-        }\n-        else\n+            block = allocateNew(size, tracker);\n+        } else\n         {\n-            tracker.allocateNative( block.size );\n+            tracker.allocateNative(block.size);\n         }\n         return block;\n     }\n \n     @Override\n-    public void free( MemoryBlock block, MemoryTracker tracker )\n+    public void free(MemoryBlock block, MemoryTracker tracker)\n     {\n-        if ( released || notCacheable( block.size ) )\n+        if (released || notCacheable(block.size))\n         {\n-            doFree( block, tracker );\n+            doFree(block, tracker);\n             return;\n         }\n \n-        final Queue<MemoryBlock> cache = caches[log2floor( block.size )];\n-        if ( !cache.offer( block ) )\n+        final Queue<MemoryBlock> cache = caches[log2floor(block.size)];\n+        if (!cache.offer(block))\n         {\n-            doFree( block, tracker );\n+            doFree(block, tracker);\n             return;\n         }\n \n         // it is possible that allocator is released just before we put the block into queue;\n         // in such case case we need to free memory right away, since release() will never be called again\n-        if ( released && cache.remove( block ) )\n+        if (released && cache.remove(block))\n         {\n-            doFree( block, tracker );\n+            doFree(block, tracker);\n             return;\n         }\n \n-        tracker.releaseNative( block.size );\n+        tracker.releaseNative(block.size);\n     }\n \n     @Override\n     public void release()\n     {\n         released = true;\n-        for ( Queue<MemoryBlock> cache : caches )\n+        for (Queue<MemoryBlock> cache : caches)\n         {\n             MemoryBlock block;\n-            while ( (block = cache.poll()) != null )\n+            while ((block = cache.poll()) != null)\n             {\n-                UnsafeUtil.free( block.addr, block.size, INSTANCE );\n+                UnsafeUtil.free(block.addr, block.size, INSTANCE);\n             }\n         }\n     }\n \n     @VisibleForTesting\n-    void doFree( MemoryBlock block, MemoryTracker tracker )\n+    void doFree(MemoryBlock block, MemoryTracker tracker)\n     {\n-        UnsafeUtil.free( block.addr, block.size, tracker );\n+        UnsafeUtil.free(block.addr, block.size, tracker);\n     }\n \n     @VisibleForTesting\n-    MemoryBlock allocateNew( long size, MemoryTracker tracker )\n+    MemoryBlock allocateNew(long size, MemoryTracker tracker)\n     {\n-        final long addr = UnsafeUtil.allocateMemory( size, tracker );\n-        return new MemoryBlock( addr, size );\n+        final long addr = UnsafeUtil.allocateMemory(size, tracker);\n+        return new MemoryBlock(addr, size);\n     }\n \n-    private boolean notCacheable( long size )\n+    private boolean notCacheable(long size)\n     {\n-        return !isPowerOfTwo( size ) || size > maxCacheableBlockSize;\n+        return !isPowerOfTwo(size) || size > maxCacheableBlockSize;\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
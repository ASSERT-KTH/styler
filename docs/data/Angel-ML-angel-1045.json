{
    "project_name": "Angel-ML-angel",
    "error_id": "1045",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1045/TVectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1045/TVectorFactory.java\nindex 7b40f10d210..48a12adb92e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1045/TVectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1045/TVectorFactory.java\n@@ -26,11 +26,9 @@ public class TVectorFactory {\n   public static GenericObjectPool initSparseDoubleVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n     int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n             AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n+GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n     config.maxIdle = taskNumber;\n@@ -40,19 +38,16 @@ public class TVectorFactory {\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n     GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new SparseDoubleVectorBuilder()), config);\n+        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new SparseDoubleVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initDenseDoubleVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n     int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n             AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n+GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n     config.maxIdle = taskNumber;\n@@ -62,19 +57,16 @@ public class TVectorFactory {\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n     GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new DenseDoubleVectorBuilder()), config);\n+        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new DenseDoubleVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initDenseIntVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n     int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n             AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n+GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n     config.maxIdle = taskNumber;\n@@ -84,19 +76,16 @@ public class TVectorFactory {\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n     GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new DenseIntVectorBuilder()), config);\n+        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new DenseIntVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initSparseIntVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n     int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n             AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n+GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n     config.maxIdle = taskNumber;\n@@ -106,8 +95,7 @@ public class TVectorFactory {\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n     GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new SparseIntVectorBuilder()), config);\n+        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new SparseIntVectorBuilder()), config);\n     return pool;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1045/TVectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1045/TVectorFactory.java\nindex 7b40f10d210..e7509257e39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1045/TVectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1045/TVectorFactory.java\n@@ -25,11 +25,7 @@ public class TVectorFactory {\n \n   public static GenericObjectPool initSparseDoubleVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n+    int taskNumber = conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n     GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n@@ -39,19 +35,13 @@ public class TVectorFactory {\n     config.testOnReturn = false;\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new SparseDoubleVectorBuilder()), config);\n+    GenericObjectPool pool = new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new SparseDoubleVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initDenseDoubleVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n+    int taskNumber = conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n     GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n@@ -61,19 +51,13 @@ public class TVectorFactory {\n     config.testOnReturn = false;\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new DenseDoubleVectorBuilder()), config);\n+    GenericObjectPool pool = new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new DenseDoubleVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initDenseIntVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n+    int taskNumber = conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n     GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n@@ -83,19 +67,13 @@ public class TVectorFactory {\n     config.testOnReturn = false;\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new DenseIntVectorBuilder()), config);\n+    GenericObjectPool pool = new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new DenseIntVectorBuilder()), config);\n     return pool;\n   }\n \n   public static GenericObjectPool initSparseIntVectorPool(int dimension) {\n     Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n+    int taskNumber = conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n     GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n@@ -105,9 +83,8 @@ public class TVectorFactory {\n     config.testOnReturn = false;\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(new TVectorPoolableObjectFactory(dimension,\n-            new SparseIntVectorBuilder()), config);\n+    GenericObjectPool pool = new GenericObjectPool(new TVectorPoolableObjectFactory(dimension, new SparseIntVectorBuilder()), config);\n     return pool;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "313",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n\n\t/**\n\t * @return a version of this which, when evaluated, returns a Node iterator in document order\n\t */\n\t@Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/313/ReverseAxisExpr.java\nindex d6210a9fe3b..57132ff06c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/313/ReverseAxisExpr.java\n@@ -37,10 +37,10 @@ abstract class ReverseAxisExpr\n     extends AxisExpr\r\n {\r\n \r\n-\t/**\r\n+/**\r\n \t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n \t */\r\n-\t@Override\r\n+ @Override\r\n \tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n \t{\r\n \t\treturn new ConvertibleNodeSetExprImpl()\r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/313/ReverseAxisExpr.java\nindex d6210a9fe3b..0512b4f3bae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/313/ReverseAxisExpr.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.expressions;\r\n \r\n import java.util.ArrayList;\r\n@@ -33,36 +34,34 @@ import org.genxdm.xpath.v10.NodeIterator;\n /**\r\n  * A reverse axis (XPath) expression represents a Node set which may need to be seen in document order (thus reversed)\r\n  */\r\n-abstract class ReverseAxisExpr \r\n-    extends AxisExpr\r\n-{\r\n+abstract class ReverseAxisExpr\r\n+    extends AxisExpr {\r\n \r\n-\t/**\r\n-\t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n-\t */\r\n-\t@Override\r\n-\tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n-\t{\r\n-\t\treturn new ConvertibleNodeSetExprImpl()\r\n-\t\t{\r\n-\t\t\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn reverse(expr.nodeIterator(model, node, dynEnv), model);\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n+    /**\r\n+     * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n+     */\r\n+    @Override\r\n+    ConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr) {\r\n+        return new ConvertibleNodeSetExprImpl() {\r\n+            public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node,\r\n+                                                    final ExprContextDynamic<N> dynEnv)\r\n+                throws ExprException {\r\n+                return reverse(expr.nodeIterator(model, node, dynEnv), model);\r\n+            }\r\n+        };\r\n+    }\r\n \r\n-\tprivate static <N> NodeIterator<N> reverse(final NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n-\t{\r\n-\t    List<N> list = new ArrayList<N>(10);\r\n-\t\tfor (;;)\r\n-\t\t{\r\n-\t\t\tN node = iter.next();\r\n-\t\t\tif (node == null)\r\n-\t\t\t\tbreak;\r\n-\t\t\tlist.add(node);\r\n-\t\t}\r\n-\t\tCollections.reverse(list);\r\n-\t\treturn new ListNodeIterator<N>(list);\r\n-\t}\r\n+    private static <N> NodeIterator<N> reverse(final NodeIterator<N> iter, final Model<N> model)\r\n+        throws ExprException {\r\n+        List<N> list = new ArrayList<N>(10);\r\n+        for (; ; ) {\r\n+            N node = iter.next();\r\n+            if (node == null) {\r\n+                break;\r\n+            }\r\n+            list.add(node);\r\n+        }\r\n+        Collections.reverse(list);\r\n+        return new ListNodeIterator<N>(list);\r\n+    }\r\n }\r\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/313/ReverseAxisExpr.java\nindex d6210a9fe3b..78122d29676 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/313/ReverseAxisExpr.java\n@@ -34,35 +34,34 @@ import org.genxdm.xpath.v10.NodeIterator;\n  * A reverse axis (XPath) expression represents a Node set which may need to be seen in document order (thus reversed)\r\n  */\r\n abstract class ReverseAxisExpr \r\n-    extends AxisExpr\r\n-{\r\n-\r\n-\t/**\r\n+    extends AxisExpr\n+{\n+    /**\r\n \t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n \t */\r\n \t@Override\r\n \tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n-\t{\r\n-\t\treturn new ConvertibleNodeSetExprImpl()\r\n-\t\t{\r\n-\t\t\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn reverse(expr.nodeIterator(model, node, dynEnv), model);\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n+\t{\n+    return new ConvertibleNodeSetExprImpl()\r\n+\t\t{\n+    public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n+\t\t\t{\n+    return reverse(expr.nodeIterator(model, node, dynEnv), model);\n+    }\n+    };\n+    }\r\n \r\n \tprivate static <N> NodeIterator<N> reverse(final NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n \t{\r\n-\t    List<N> list = new ArrayList<N>(10);\r\n-\t\tfor (;;)\r\n-\t\t{\r\n-\t\t\tN node = iter.next();\r\n-\t\t\tif (node == null)\r\n-\t\t\t\tbreak;\r\n-\t\t\tlist.add(node);\r\n-\t\t}\r\n+\t    List<N> list = new ArrayList<N>(10);\n+for (;;)\r\n+\t\t{\n+    N node = iter.next();\r\n+\t\t\tif (node == null)\n+    break;\n+list.add(node);\n+    }\r\n \t\tCollections.reverse(list);\r\n-\t\treturn new ListNodeIterator<N>(list);\r\n-\t}\r\n-}\r\n+\t\treturn new ListNodeIterator<N>(list);\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/313/ReverseAxisExpr.java\nindex d6210a9fe3b..5818bd8b5be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/313/ReverseAxisExpr.java\n@@ -18,51 +18,51 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.expressions;\r\n-\r\n-import java.util.ArrayList;\r\n-import java.util.Collections;\r\n-import java.util.List;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.processor.xpath.v10.iterators.ListNodeIterator;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.ExprException;\r\n+package org.genxdm.processor.xpath.v10.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.genxdm.Model;\n+import org.genxdm.processor.xpath.v10.iterators.ListNodeIterator;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.ExprException;\n import org.genxdm.xpath.v10.NodeIterator;\r\n \r\n /**\r\n  * A reverse axis (XPath) expression represents a Node set which may need to be seen in document order (thus reversed)\r\n- */\r\n-abstract class ReverseAxisExpr \r\n-    extends AxisExpr\r\n+ */\n+\n+abstract class ReverseAxisExpr extends AxisExpr\n {\r\n \r\n-\t/**\r\n-\t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n-\t */\r\n-\t@Override\r\n-\tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n-\t{\r\n-\t\treturn new ConvertibleNodeSetExprImpl()\r\n-\t\t{\r\n-\t\t\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t\t\t{\r\n-\t\t\t\treturn reverse(expr.nodeIterator(model, node, dynEnv), model);\r\n-\t\t\t}\r\n-\t\t};\r\n-\t}\r\n-\r\n-\tprivate static <N> NodeIterator<N> reverse(final NodeIterator<N> iter, final Model<N> model) throws ExprException\r\n-\t{\r\n-\t    List<N> list = new ArrayList<N>(10);\r\n-\t\tfor (;;)\r\n-\t\t{\r\n-\t\t\tN node = iter.next();\r\n-\t\t\tif (node == null)\r\n-\t\t\t\tbreak;\r\n-\t\t\tlist.add(node);\r\n-\t\t}\r\n-\t\tCollections.reverse(list);\r\n-\t\treturn new ListNodeIterator<N>(list);\r\n-\t}\r\n-}\r\n+    /**\r\n+     * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n+     */\n+\n+    @Override\n+    ConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\n+    {\n+        return new ConvertibleNodeSetExprImpl()\n+        {\n+            public <N> NodeIterator<N> nodeIterator(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\n+            {\n+                return reverse(expr.nodeIterator(model, node, dynEnv), model);\n+            }\n+        };\n+    }\n+\n+    private static <N> NodeIterator<N> reverse(final NodeIterator<N> iter, final Model<N> model) throws ExprException\n+    {\n+        List<N> list = new ArrayList<N>(10);\n+        for (;;)\n+        {\n+            N node = iter.next();\n+            if (node == null)\n+            break;\n+            list.add(node);\n+        }\n+        Collections.reverse(list);\n+        return new ListNodeIterator<N>(list);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/313/ReverseAxisExpr.java\nindex d6210a9fe3b..57132ff06c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/313/ReverseAxisExpr.java\n@@ -37,10 +37,10 @@ abstract class ReverseAxisExpr\n     extends AxisExpr\r\n {\r\n \r\n-\t/**\r\n+/**\r\n \t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n \t */\r\n-\t@Override\r\n+ @Override\r\n \tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n \t{\r\n \t\treturn new ConvertibleNodeSetExprImpl()\r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/313/ReverseAxisExpr.java\nindex d6210a9fe3b..d2703ec885d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/313/ReverseAxisExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/313/ReverseAxisExpr.java\n@@ -37,10 +37,10 @@ abstract class ReverseAxisExpr\n     extends AxisExpr\r\n {\r\n \r\n-\t/**\r\n+    /**\r\n \t * @return a version of this which, when evaluated, returns a Node iterator in document order\r\n \t */\r\n-\t@Override\r\n+ @Override\r\n \tConvertibleNodeSetExprImpl makeDocumentOrderExpr(final ConvertibleNodeSetExprImpl expr)\r\n \t{\r\n \t\treturn new ConvertibleNodeSetExprImpl()\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
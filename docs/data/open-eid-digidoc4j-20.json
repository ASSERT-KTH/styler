{
    "project_name": "open-eid-digidoc4j",
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "85",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    String currentSealValue = registry.generateSealValue();\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Seal {} {} {}\", this.sealValue, this.sealValue.equals(currentSealValue) ? \"==\" : \"!=\", currentSealValue);\n    }\n    if (!this.sealValue.equals(currentSealValue)) {\n      logger.info(\"Overwriting deserialized registry with current one\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/20/ConfigurationRegistry.java\nindex fe2a2af5051..1c6ac1aaabd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/20/ConfigurationRegistry.java\n@@ -82,7 +82,8 @@ public class ConfigurationRegistry extends HashMap<ConfigurationParameter, Strin\n     ConfigurationRegistry registry = Configuration.getInstance().getRegistry();\n     String currentSealValue = registry.generateSealValue();\n     if (logger.isDebugEnabled()) {\n-      logger.debug(\"Seal {} {} {}\", this.sealValue, this.sealValue.equals(currentSealValue) ? \"==\" : \"!=\", currentSealValue);\n+      logger.debug(\"Seal {} {} {}\", this.sealValue, this.sealValue.equals(currentSealValue) ? \"==\" : \"!=\",\n+          currentSealValue);\n     }\n     if (!this.sealValue.equals(currentSealValue)) {\n       logger.info(\"Overwriting deserialized registry with current one\");\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/20/ConfigurationRegistry.java\nindex fe2a2af5051..4a7008dda98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/20/ConfigurationRegistry.java\n@@ -107,4 +107,4 @@ public class ConfigurationRegistry extends HashMap<ConfigurationParameter, Strin\n     return sb.toString();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/20/ConfigurationRegistry.java\nindex fe2a2af5051..191d1220fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/20/ConfigurationRegistry.java\n@@ -5,7 +5,6 @@ import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.security.MessageDigest;\n import java.util.HashMap;\n-\n import org.apache.commons.codec.binary.Hex;\n import org.apache.commons.lang3.StringUtils;\n import org.digidoc4j.impl.asic.asice.bdoc.BDocContainer;\n@@ -24,6 +23,7 @@ import org.slf4j.LoggerFactory;\n  * @author Janar Rahumeel (CGI Estonia)\n  */\n \n+\n public class ConfigurationRegistry extends HashMap<ConfigurationParameter, String> {\n \n   private static final Logger logger = LoggerFactory.getLogger(ConfigurationRegistry.class);\n@@ -106,5 +106,4 @@ public class ConfigurationRegistry extends HashMap<ConfigurationParameter, Strin\n     }\n     return sb.toString();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/20/ConfigurationRegistry.java\nindex fe2a2af5051..e0b4c98c1a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/20/ConfigurationRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/20/ConfigurationRegistry.java\n@@ -82,9 +82,10 @@ public class ConfigurationRegistry extends HashMap<ConfigurationParameter, Strin\n     ConfigurationRegistry registry = Configuration.getInstance().getRegistry();\n     String currentSealValue = registry.generateSealValue();\n     if (logger.isDebugEnabled()) {\n-      logger.debug(\"Seal {} {} {}\", this.sealValue, this.sealValue.equals(currentSealValue) ? \"==\" : \"!=\", currentSealValue);\n-    }\n-    if (!this.sealValue.equals(currentSealValue)) {\n+      logger.debug(\"Seal {} {} {}\",this.sealValue,\n+      this .sealValue.equals(currentSealValue) ? \"==\" : \"!=\", currentSealValue);\n+     }\n+     if (!this.sealValue.equals(currentSealValue)) {\n       logger.info(\"Overwriting deserialized registry with current one\");\n       this.clear();\n       this.putAll(registry);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
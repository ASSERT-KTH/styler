{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4502",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4502/WindowPoolInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4502/WindowPoolInfo.java\nindex 2c923612dc8..cfbf4736569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4502/WindowPoolInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4502/WindowPoolInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management;\n \n import java.beans.ConstructorProperties;\n@@ -24,71 +25,71 @@ import java.io.Serializable;\n \n public final class WindowPoolInfo implements Serializable\n {\n-    private static final long serialVersionUID = 7743724554758487292L;\n+  private static final long serialVersionUID = 7743724554758487292L;\n \n-    private String name;\n-    private long memAvail;\n-    private long memUsed;\n-    private int windowCount;\n-    private int windowSize;\n-    private int hitCount;\n-    private int missCount;\n-    private int oomCount;\n+  private String name;\n+  private long memAvail;\n+  private long memUsed;\n+  private int windowCount;\n+  private int windowSize;\n+  private int hitCount;\n+  private int missCount;\n+  private int oomCount;\n \n-    @ConstructorProperties( { \"windowPoolName\", \"availableMemory\",\n-            \"usedMemory\", \"numberOfWindows\", \"windowSize\", \"windowHitCount\",\n-            \"windowMissCount\", \"numberOfOutOfMemory\" } )\n-    public WindowPoolInfo( String name, long memAvail, long memUsed,\n-            int windowCount, int windowSize, int hitCount, int missCount,\n-            int oomCount )\n-    {\n-        this.name = name;\n-        this.memAvail = memAvail;\n-        this.memUsed = memUsed;\n-        this.windowCount = windowCount;\n-        this.windowSize = windowSize;\n-        this.hitCount = hitCount;\n-        this.missCount = missCount;\n-        this.oomCount = oomCount;\n-    }\n+  @ConstructorProperties({\"windowPoolName\", \"availableMemory\",\n+      \"usedMemory\", \"numberOfWindows\", \"windowSize\", \"windowHitCount\",\n+      \"windowMissCount\", \"numberOfOutOfMemory\"})\n+  public WindowPoolInfo(String name, long memAvail, long memUsed,\n+                        int windowCount, int windowSize, int hitCount, int missCount,\n+                        int oomCount)\n+  {\n+    this.name = name;\n+    this.memAvail = memAvail;\n+    this.memUsed = memUsed;\n+    this.windowCount = windowCount;\n+    this.windowSize = windowSize;\n+    this.hitCount = hitCount;\n+    this.missCount = missCount;\n+    this.oomCount = oomCount;\n+  }\n \n-    public String getWindowPoolName()\n-    {\n-        return name;\n-    }\n+  public String getWindowPoolName()\n+  {\n+    return name;\n+  }\n \n-    public long getAvailableMemory()\n-    {\n-        return memAvail;\n-    }\n+  public long getAvailableMemory()\n+  {\n+    return memAvail;\n+  }\n \n-    public long getUsedMemory()\n-    {\n-        return memUsed;\n-    }\n+  public long getUsedMemory()\n+  {\n+    return memUsed;\n+  }\n \n-    public int getNumberOfWindows()\n-    {\n-        return windowCount;\n-    }\n+  public int getNumberOfWindows()\n+  {\n+    return windowCount;\n+  }\n \n-    public int getWindowSize()\n-    {\n-        return windowSize;\n-    }\n+  public int getWindowSize()\n+  {\n+    return windowSize;\n+  }\n \n-    public int getWindowHitCount()\n-    {\n-        return hitCount;\n-    }\n+  public int getWindowHitCount()\n+  {\n+    return hitCount;\n+  }\n \n-    public int getWindowMissCount()\n-    {\n-        return missCount;\n-    }\n+  public int getWindowMissCount()\n+  {\n+    return missCount;\n+  }\n \n-    public int getNumberOfOutOfMemory()\n-    {\n-        return oomCount;\n-    }\n+  public int getNumberOfOutOfMemory()\n+  {\n+    return oomCount;\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4502/WindowPoolInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4502/WindowPoolInfo.java\nindex 2c923612dc8..26b93e8eabc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4502/WindowPoolInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4502/WindowPoolInfo.java\n@@ -35,12 +35,8 @@ public final class WindowPoolInfo implements Serializable\n     private int missCount;\n     private int oomCount;\n \n-    @ConstructorProperties( { \"windowPoolName\", \"availableMemory\",\n-            \"usedMemory\", \"numberOfWindows\", \"windowSize\", \"windowHitCount\",\n-            \"windowMissCount\", \"numberOfOutOfMemory\" } )\n-    public WindowPoolInfo( String name, long memAvail, long memUsed,\n-            int windowCount, int windowSize, int hitCount, int missCount,\n-            int oomCount )\n+    @ConstructorProperties( { \"windowPoolName\", \"availableMemory\", \"usedMemory\", \"numberOfWindows\", \"windowSize\", \"windowHitCount\", \"windowMissCount\", \"numberOfOutOfMemory\" } )\n+public WindowPoolInfo( String name, long memAvail, long memUsed, int windowCount, int windowSize, int hitCount, int missCount, int oomCount )\n     {\n         this.name = name;\n         this.memAvail = memAvail;\n@@ -91,4 +87,4 @@ public final class WindowPoolInfo implements Serializable\n     {\n         return oomCount;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
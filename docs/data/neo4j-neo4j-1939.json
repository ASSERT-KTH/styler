{
    "project_name": "neo4j-neo4j",
    "error_id": "1939",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1939/LocalMemoryTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1939/LocalMemoryTracker.java\nindex e81df8bfdd0..f2f4f2fc5b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1939/LocalMemoryTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1939/LocalMemoryTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.memory;\n \n import static java.lang.Math.max;\n@@ -83,91 +84,91 @@ public class LocalMemoryTracker implements LimitedMemoryTracker\n \n     public LocalMemoryTracker()\n     {\n-        this( NO_TRACKING, INFINITY, DEFAULT_GRAB_SIZE, null );\n+        this(NO_TRACKING, INFINITY, DEFAULT_GRAB_SIZE, null);\n     }\n \n-    public LocalMemoryTracker( MemoryPool memoryPool )\n+    public LocalMemoryTracker(MemoryPool memoryPool)\n     {\n-        this( memoryPool, INFINITY, DEFAULT_GRAB_SIZE, null );\n+        this(memoryPool, INFINITY, DEFAULT_GRAB_SIZE, null);\n     }\n \n-    public LocalMemoryTracker( MemoryPool memoryPool, long localBytesLimit, long grabSize, String limitSettingName )\n+    public LocalMemoryTracker(MemoryPool memoryPool, long localBytesLimit, long grabSize, String limitSettingName)\n     {\n-        this.memoryPool = requireNonNull( memoryPool );\n-        this.localBytesLimit = validateLimit( localBytesLimit );\n-        this.grabSize = requireNonNegative( grabSize );\n+        this.memoryPool = requireNonNull(memoryPool);\n+        this.localBytesLimit = validateLimit(localBytesLimit);\n+        this.grabSize = requireNonNegative(grabSize);\n         this.limitSettingName = limitSettingName;\n     }\n \n     @Override\n-    public void allocateNative( long bytes )\n+    public void allocateNative(long bytes)\n     {\n-        if ( bytes == 0 )\n+        if (bytes == 0)\n         {\n             return;\n         }\n-        requirePositive( bytes );\n+        requirePositive(bytes);\n \n         this.allocatedBytesNative += bytes;\n \n-        if ( allocatedBytesHeap + allocatedBytesNative > localBytesLimit )\n+        if (allocatedBytesHeap + allocatedBytesNative > localBytesLimit)\n         {\n             allocatedBytesNative -= bytes;\n-            throw new MemoryLimitExceededException( bytes, localBytesLimit, allocatedBytesHeap + allocatedBytesNative, TransactionOutOfMemoryError,\n-                    limitSettingName );\n+            throw new MemoryLimitExceededException(bytes, localBytesLimit, allocatedBytesHeap + allocatedBytesNative, TransactionOutOfMemoryError,\n+              limitSettingName);\n         }\n \n-        this.memoryPool.reserveNative( bytes );\n+        this.memoryPool.reserveNative(bytes);\n     }\n \n     @Override\n-    public void releaseNative( long bytes )\n+    public void releaseNative(long bytes)\n     {\n         this.allocatedBytesNative -= bytes;\n-        this.memoryPool.releaseNative( bytes );\n+        this.memoryPool.releaseNative(bytes);\n     }\n \n     @Override\n-    public void allocateHeap( long bytes )\n+    public void allocateHeap(long bytes)\n     {\n-        if ( bytes == 0 )\n+        if (bytes == 0)\n         {\n             return;\n         }\n-        requirePositive( bytes );\n+        requirePositive(bytes);\n \n         allocatedBytesHeap += bytes;\n \n-        if ( allocatedBytesHeap + allocatedBytesNative > localBytesLimit )\n+        if (allocatedBytesHeap + allocatedBytesNative > localBytesLimit)\n         {\n             allocatedBytesHeap -= bytes;\n-            throw new MemoryLimitExceededException( bytes, localBytesLimit, allocatedBytesHeap + allocatedBytesNative, TransactionOutOfMemoryError,\n-                    limitSettingName );\n+            throw new MemoryLimitExceededException(bytes, localBytesLimit, allocatedBytesHeap + allocatedBytesNative, TransactionOutOfMemoryError,\n+              limitSettingName);\n         }\n \n-        if ( allocatedBytesHeap > heapHighWaterMark )\n+        if (allocatedBytesHeap > heapHighWaterMark)\n         {\n             heapHighWaterMark = allocatedBytesHeap;\n         }\n \n-        if ( allocatedBytesHeap > localHeapPool )\n+        if (allocatedBytesHeap > localHeapPool)\n         {\n-            long grab = max( bytes, grabSize );\n-            reserveHeapFromPool( grab );\n+            long grab = max(bytes, grabSize);\n+            reserveHeapFromPool(grab);\n         }\n     }\n \n     @Override\n-    public void releaseHeap( long bytes )\n+    public void releaseHeap(long bytes)\n     {\n-        requireNonNegative( bytes );\n+        requireNonNegative(bytes);\n         allocatedBytesHeap -= bytes;\n \n         // If the localHeapPool has reserved a lot more memory than is being used release part of it again.\n-        if ( localHeapPool > grabSize && (localHeapPool / 2) > allocatedBytesHeap )\n+        if (localHeapPool > grabSize && (localHeapPool / 2) > allocatedBytesHeap)\n         {\n             long memoryToRelease = localHeapPool / 4;\n-            memoryPool.releaseHeap( memoryToRelease );\n+            memoryPool.releaseHeap(memoryToRelease);\n             localHeapPool -= memoryToRelease;\n         }\n     }\n@@ -196,8 +197,8 @@ public class LocalMemoryTracker implements LimitedMemoryTracker\n     @Override\n     public void reset()\n     {\n-        checkState( allocatedBytesNative == 0, \"Potential direct memory leak\" );\n-        memoryPool.releaseHeap( localHeapPool );\n+        checkState(allocatedBytesNative == 0, \"Potential direct memory leak\");\n+        memoryPool.releaseHeap(localHeapPool);\n         localHeapPool = 0;\n         allocatedBytesHeap = 0;\n         heapHighWaterMark = 0;\n@@ -206,12 +207,12 @@ public class LocalMemoryTracker implements LimitedMemoryTracker\n     @Override\n     public MemoryTracker getScopedMemoryTracker()\n     {\n-        return new ScopedMemoryTracker( this );\n+        return new ScopedMemoryTracker(this);\n     }\n \n-    public void setLimit( long localBytesLimit )\n+    public void setLimit(long localBytesLimit)\n     {\n-        this.localBytesLimit = validateLimit( localBytesLimit );\n+        this.localBytesLimit = validateLimit(localBytesLimit);\n     }\n \n     /**\n@@ -220,14 +221,14 @@ public class LocalMemoryTracker implements LimitedMemoryTracker\n      * @param size heap space to reserve for the local pool\n      * @throws MemoryLimitExceededException if not enough free memory\n      */\n-    private void reserveHeapFromPool( long size )\n+    private void reserveHeapFromPool(long size)\n     {\n-        memoryPool.reserveHeap( size );\n+        memoryPool.reserveHeap(size);\n         localHeapPool += size;\n     }\n \n-    private static long validateLimit( long localBytesLimit )\n+    private static long validateLimit(long localBytesLimit)\n     {\n-        return localBytesLimit == NO_LIMIT ? INFINITY : requireNonNegative( localBytesLimit );\n+        return localBytesLimit == NO_LIMIT ? INFINITY : requireNonNegative(localBytesLimit);\n     }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
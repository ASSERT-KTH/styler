{
    "project_name": "apache-iotdb",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.rpc;\n\nimport org.apache.thrift.transport.TFramedTransport;\nimport org.apache.thrift.transport.TTransport;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/6/TCompressedElasticFramedTransport.java\nindex 133fd95e5b8..83ed3daed8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/6/TCompressedElasticFramedTransport.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.rpc;\n \n import org.apache.thrift.transport.TFramedTransport;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/6/TCompressedElasticFramedTransport.java\nindex 133fd95e5b8..83ed3daed8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/6/TCompressedElasticFramedTransport.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.rpc;\n \n import org.apache.thrift.transport.TFramedTransport;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/6/TCompressedElasticFramedTransport.java\nindex 133fd95e5b8..d408c73b17e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/6/TCompressedElasticFramedTransport.java\n@@ -21,7 +21,6 @@ package org.apache.iotdb.rpc;\n import org.apache.thrift.transport.TFramedTransport;\n import org.apache.thrift.transport.TTransport;\n import org.apache.thrift.transport.TTransportException;\n-\n import java.io.IOException;\n \n public abstract class TCompressedElasticFramedTransport extends TElasticFramedTransport {\n@@ -29,8 +28,7 @@ public abstract class TCompressedElasticFramedTransport extends TElasticFramedTr\n   private AutoScalingBufferWriteTransport writeCompressBuffer;\n   private AutoScalingBufferReadTransport readCompressBuffer;\n \n-  protected TCompressedElasticFramedTransport(\n-      TTransport underlying, int thriftDefaultBufferSize, int thriftMaxFrameSize) {\n+  protected TCompressedElasticFramedTransport(TTransport underlying, int thriftDefaultBufferSize, int thriftMaxFrameSize) {\n     super(underlying, thriftDefaultBufferSize, thriftMaxFrameSize);\n     writeCompressBuffer = new AutoScalingBufferWriteTransport(thriftDefaultBufferSize);\n     readCompressBuffer = new AutoScalingBufferReadTransport(thriftDefaultBufferSize);\n@@ -40,13 +38,10 @@ public abstract class TCompressedElasticFramedTransport extends TElasticFramedTr\n   protected void readFrame() throws TTransportException {\n     underlying.readAll(i32buf, 0, 4);\n     int size = TFramedTransport.decodeFrameSize(i32buf);\n-\n     if (size < 0) {\n       close();\n-      throw new TTransportException(\n-          TTransportException.CORRUPTED_DATA, \"Read a negative frame size (\" + size + \")!\");\n+      throw new TTransportException(TTransportException.CORRUPTED_DATA, \"Read a negative frame size (\" + size + \")!\");\n     }\n-\n     readBuffer.fill(underlying, size);\n     RpcStat.readCompressedBytes.addAndGet(size);\n     try {\n@@ -69,8 +64,7 @@ public abstract class TCompressedElasticFramedTransport extends TElasticFramedTr\n     try {\n       int maxCompressedLength = maxCompressedLength(length);\n       writeCompressBuffer.resizeIfNecessary(maxCompressedLength);\n-      int compressedLength =\n-          compress(writeBuffer.getBuffer(), 0, length, writeCompressBuffer.getBuffer(), 0);\n+      int compressedLength = compress(writeBuffer.getBuffer(), 0, length, writeCompressBuffer.getBuffer(), 0);\n       RpcStat.writeCompressedBytes.addAndGet(compressedLength);\n       TFramedTransport.encodeFrameSize(compressedLength, i32buf);\n       underlying.write(i32buf, 0, 4);\n@@ -78,7 +72,6 @@ public abstract class TCompressedElasticFramedTransport extends TElasticFramedTr\n     } catch (IOException e) {\n       throw new TTransportException(e);\n     }\n-\n     writeBuffer.reset();\n     if (thriftDefaultBufferSize < length) {\n       writeBuffer.resizeIfNecessary(thriftDefaultBufferSize);\n@@ -90,9 +83,7 @@ public abstract class TCompressedElasticFramedTransport extends TElasticFramedTr\n \n   protected abstract int maxCompressedLength(int len);\n \n-  protected abstract int compress(byte[] input, int inOff, int len, byte[] output, int outOff)\n-      throws IOException;\n+  protected abstract int compress(byte[] input, int inOff, int len, byte[] output, int outOff) throws IOException;\n \n-  protected abstract void uncompress(byte[] input, int inOff, int size, byte[] output, int outOff)\n-      throws IOException;\n-}\n+  protected abstract void uncompress(byte[] input, int inOff, int size, byte[] output, int outOff) throws IOException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/6/TCompressedElasticFramedTransport.java\nindex 133fd95e5b8..83ed3daed8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/6/TCompressedElasticFramedTransport.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.rpc;\n \n import org.apache.thrift.transport.TFramedTransport;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/6/TCompressedElasticFramedTransport.java\nindex 133fd95e5b8..83ed3daed8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/6/TCompressedElasticFramedTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/6/TCompressedElasticFramedTransport.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.rpc;\n \n import org.apache.thrift.transport.TFramedTransport;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
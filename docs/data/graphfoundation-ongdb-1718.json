{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1718",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "194",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1718/NativeSchemaIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1718/NativeSchemaIndexReader.java\nindex 5320f3114b0..2510dcb5e64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1718/NativeSchemaIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1718/NativeSchemaIndexReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -42,193 +43,188 @@ import org.neo4j.storageengine.api.schema.IndexSampler;\n import org.neo4j.values.storable.Value;\n \n abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        implements IndexReader\n+    implements IndexReader\n {\n-    protected final SchemaIndexDescriptor descriptor;\n-    final Layout<KEY,VALUE> layout;\n-    final Set<RawCursor<Hit<KEY,VALUE>,IOException>> openSeekers;\n-    final GBPTree<KEY,VALUE> tree;\n-    private final IndexSamplingConfig samplingConfig;\n-\n-    NativeSchemaIndexReader( GBPTree<KEY,VALUE> tree, Layout<KEY,VALUE> layout,\n-            IndexSamplingConfig samplingConfig,\n-            SchemaIndexDescriptor descriptor )\n+  protected final SchemaIndexDescriptor descriptor;\n+  final Layout<KEY, VALUE> layout;\n+  final Set<RawCursor<Hit<KEY, VALUE>, IOException>> openSeekers;\n+  final GBPTree<KEY, VALUE> tree;\n+  private final IndexSamplingConfig samplingConfig;\n+\n+  NativeSchemaIndexReader(GBPTree<KEY, VALUE> tree, Layout<KEY, VALUE> layout,\n+                          IndexSamplingConfig samplingConfig,\n+                          SchemaIndexDescriptor descriptor)\n+  {\n+    this.tree = tree;\n+    this.layout = layout;\n+    this.samplingConfig = samplingConfig;\n+    this.descriptor = descriptor;\n+    this.openSeekers = new HashSet<>();\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    ensureOpenSeekersClosed();\n+  }\n+\n+  @Override\n+  public IndexSampler createSampler()\n+  {\n+    // For a unique index there's an optimization, knowing that all values in it are unique, to simply count\n+    // the number of indexed values and create a sample for that count. The GBPTree doesn't have an O(1)\n+    // count mechanism, it will have to manually count the indexed values in it to get it.\n+    // For that reason this implementation opts for keeping complexity down by just using the existing\n+    // non-unique sampler which scans the index and counts (potentially duplicates, of which there will\n+    // be none in a unique index).\n+\n+    FullScanNonUniqueIndexSampler<KEY, VALUE> sampler =\n+        new FullScanNonUniqueIndexSampler<>(tree, layout, samplingConfig);\n+    return sampler::result;\n+  }\n+\n+  @Override\n+  public long countIndexedNodes(long nodeId, Value... propertyValues)\n+  {\n+    KEY treeKeyFrom = layout.newKey();\n+    KEY treeKeyTo = layout.newKey();\n+    treeKeyFrom.from(nodeId, propertyValues);\n+    treeKeyTo.from(nodeId, propertyValues);\n+    try (RawCursor<Hit<KEY, VALUE>, IOException> seeker = tree.seek(treeKeyFrom, treeKeyTo))\n     {\n-        this.tree = tree;\n-        this.layout = layout;\n-        this.samplingConfig = samplingConfig;\n-        this.descriptor = descriptor;\n-        this.openSeekers = new HashSet<>();\n-    }\n-\n-    @Override\n-    public void close()\n+      long count = 0;\n+      while (seeker.next())\n+      {\n+        if (seeker.get().key().getEntityId() == nodeId)\n+        {\n+          count++;\n+        }\n+      }\n+      return count;\n+    } catch (IOException e)\n     {\n-        ensureOpenSeekersClosed();\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public IndexSampler createSampler()\n-    {\n-        // For a unique index there's an optimization, knowing that all values in it are unique, to simply count\n-        // the number of indexed values and create a sample for that count. The GBPTree doesn't have an O(1)\n-        // count mechanism, it will have to manually count the indexed values in it to get it.\n-        // For that reason this implementation opts for keeping complexity down by just using the existing\n-        // non-unique sampler which scans the index and counts (potentially duplicates, of which there will\n-        // be none in a unique index).\n-\n-        FullScanNonUniqueIndexSampler<KEY,VALUE> sampler =\n-                new FullScanNonUniqueIndexSampler<>( tree, layout, samplingConfig );\n-        return sampler::result;\n-    }\n+  @Override\n+  public PrimitiveLongResourceIterator query(IndexQuery... predicates)\n+  {\n+    KEY treeKeyFrom = layout.newKey();\n+    KEY treeKeyTo = layout.newKey();\n \n-    @Override\n-    public long countIndexedNodes( long nodeId, Value... propertyValues )\n+    boolean needFilter = initializeRangeForQuery(treeKeyFrom, treeKeyTo, predicates);\n+    if (isBackwardsSeek(treeKeyFrom, treeKeyTo))\n     {\n-        KEY treeKeyFrom = layout.newKey();\n-        KEY treeKeyTo = layout.newKey();\n-        treeKeyFrom.from( nodeId, propertyValues );\n-        treeKeyTo.from( nodeId, propertyValues );\n-        try ( RawCursor<Hit<KEY,VALUE>,IOException> seeker = tree.seek( treeKeyFrom, treeKeyTo ) )\n-        {\n-            long count = 0;\n-            while ( seeker.next() )\n-            {\n-                if ( seeker.get().key().getEntityId() == nodeId )\n-                {\n-                    count++;\n-                }\n-            }\n-            return count;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      return PrimitiveLongResourceCollections.emptyIterator();\n     }\n \n-    @Override\n-    public PrimitiveLongResourceIterator query( IndexQuery... predicates )\n+    try\n     {\n-        KEY treeKeyFrom = layout.newKey();\n-        KEY treeKeyTo = layout.newKey();\n-\n-        boolean needFilter = initializeRangeForQuery( treeKeyFrom, treeKeyTo, predicates );\n-        if ( isBackwardsSeek( treeKeyFrom, treeKeyTo ) )\n-        {\n-            return PrimitiveLongResourceCollections.emptyIterator();\n-        }\n-\n-        try\n-        {\n-            RawCursor<Hit<KEY,VALUE>,IOException> seeker = tree.seek( treeKeyFrom, treeKeyTo );\n-            openSeekers.add( seeker );\n-            return getHitIterator( seeker, needFilter, predicates );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-    }\n-\n-    private PrimitiveLongResourceIterator getHitIterator( RawCursor<Hit<KEY,VALUE>,IOException> seeker, boolean needFilter, IndexQuery[] predicates )\n+      RawCursor<Hit<KEY, VALUE>, IOException> seeker = tree.seek(treeKeyFrom, treeKeyTo);\n+      openSeekers.add(seeker);\n+      return getHitIterator(seeker, needFilter, predicates);\n+    } catch (IOException e)\n     {\n-        return needFilter ? new FilteringNativeHitIterator<>( seeker, openSeekers, predicates )\n-                          : new NativeHitIterator<>( seeker, openSeekers );\n+      throw new UncheckedIOException(e);\n     }\n-\n-    @Override\n-    public void query( IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates )\n+  }\n+\n+  private PrimitiveLongResourceIterator getHitIterator(RawCursor<Hit<KEY, VALUE>, IOException> seeker, boolean needFilter, IndexQuery[] predicates)\n+  {\n+    return needFilter ? new FilteringNativeHitIterator<>(seeker, openSeekers, predicates)\n+        : new NativeHitIterator<>(seeker, openSeekers);\n+  }\n+\n+  @Override\n+  public void query(IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates)\n+  {\n+    validateQuery(indexOrder, predicates);\n+\n+    KEY treeKeyFrom = layout.newKey();\n+    KEY treeKeyTo = layout.newKey();\n+\n+    boolean needFilter = initializeRangeForQuery(treeKeyFrom, treeKeyTo, predicates);\n+    startSeekForInitializedRange(cursor, treeKeyFrom, treeKeyTo, predicates, needFilter);\n+  }\n+\n+  @Override\n+  public abstract boolean hasFullValuePrecision(IndexQuery... predicates);\n+\n+  @Override\n+  public void distinctValues(IndexProgressor.NodeValueClient client, PropertyAccessor propertyAccessor)\n+  {\n+    KEY lowest = layout.newKey();\n+    lowest.initialize(Long.MIN_VALUE);\n+    lowest.initValueAsLowest();\n+    KEY highest = layout.newKey();\n+    highest.initialize(Long.MAX_VALUE);\n+    highest.initValueAsHighest();\n+    try\n     {\n-        validateQuery( indexOrder, predicates );\n-\n-        KEY treeKeyFrom = layout.newKey();\n-        KEY treeKeyTo = layout.newKey();\n-\n-        boolean needFilter = initializeRangeForQuery( treeKeyFrom, treeKeyTo, predicates );\n-        startSeekForInitializedRange( cursor, treeKeyFrom, treeKeyTo, predicates, needFilter );\n-    }\n-\n-    @Override\n-    public abstract boolean hasFullValuePrecision( IndexQuery... predicates );\n-\n-    @Override\n-    public void distinctValues( IndexProgressor.NodeValueClient client, PropertyAccessor propertyAccessor )\n+      RawCursor<Hit<KEY, VALUE>, IOException> seeker = tree.seek(lowest, highest);\n+      SchemaLayout<KEY> schemaLayout = (SchemaLayout<KEY>) layout;\n+      client.initialize(descriptor, new NativeDistinctValuesProgressor<>(seeker, client, openSeekers, schemaLayout, schemaLayout::compareValue),\n+          new IndexQuery[0]);\n+    } catch (IOException e)\n     {\n-        KEY lowest = layout.newKey();\n-        lowest.initialize( Long.MIN_VALUE );\n-        lowest.initValueAsLowest();\n-        KEY highest = layout.newKey();\n-        highest.initialize( Long.MAX_VALUE );\n-        highest.initValueAsHighest();\n-        try\n-        {\n-            RawCursor<Hit<KEY,VALUE>,IOException> seeker = tree.seek( lowest, highest );\n-            SchemaLayout<KEY> schemaLayout = (SchemaLayout<KEY>) layout;\n-            client.initialize( descriptor, new NativeDistinctValuesProgressor<>( seeker, client, openSeekers, schemaLayout, schemaLayout::compareValue ),\n-                    new IndexQuery[0] );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    abstract void validateQuery( IndexOrder indexOrder, IndexQuery[] predicates );\n+  abstract void validateQuery(IndexOrder indexOrder, IndexQuery[] predicates);\n \n-    /**\n-     * @return true if query results from seek will need to be filtered through the predicates, else false\n-     */\n-    abstract boolean initializeRangeForQuery( KEY treeKeyFrom, KEY treeKeyTo, IndexQuery[] predicates );\n+  /**\n+   * @return true if query results from seek will need to be filtered through the predicates, else false\n+   */\n+  abstract boolean initializeRangeForQuery(KEY treeKeyFrom, KEY treeKeyTo, IndexQuery[] predicates);\n \n-    void startSeekForInitializedRange( IndexProgressor.NodeValueClient client, KEY treeKeyFrom, KEY treeKeyTo, IndexQuery[] query, boolean needFilter )\n+  void startSeekForInitializedRange(IndexProgressor.NodeValueClient client, KEY treeKeyFrom, KEY treeKeyTo, IndexQuery[] query, boolean needFilter)\n+  {\n+    if (isBackwardsSeek(treeKeyFrom, treeKeyTo))\n     {\n-        if ( isBackwardsSeek( treeKeyFrom, treeKeyTo ) )\n-        {\n-            client.initialize( descriptor, IndexProgressor.EMPTY, query );\n-            return;\n-        }\n-        try\n-        {\n-            RawCursor<Hit<KEY,VALUE>,IOException> seeker = makeIndexSeeker( treeKeyFrom, treeKeyTo );\n-            IndexProgressor hitProgressor = getIndexProgressor( seeker, client, needFilter, query );\n-            client.initialize( descriptor, hitProgressor, query );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      client.initialize(descriptor, IndexProgressor.EMPTY, query);\n+      return;\n     }\n-\n-    RawCursor<Hit<KEY,VALUE>,IOException> makeIndexSeeker( KEY treeKeyFrom, KEY treeKeyTo ) throws IOException\n+    try\n     {\n-        RawCursor<Hit<KEY,VALUE>,IOException> seeker = tree.seek( treeKeyFrom, treeKeyTo );\n-        openSeekers.add( seeker );\n-        return seeker;\n-    }\n-\n-    private IndexProgressor getIndexProgressor( RawCursor<Hit<KEY,VALUE>,IOException> seeker, IndexProgressor.NodeValueClient client, boolean needFilter,\n-            IndexQuery[] query )\n+      RawCursor<Hit<KEY, VALUE>, IOException> seeker = makeIndexSeeker(treeKeyFrom, treeKeyTo);\n+      IndexProgressor hitProgressor = getIndexProgressor(seeker, client, needFilter, query);\n+      client.initialize(descriptor, hitProgressor, query);\n+    } catch (IOException e)\n     {\n-        return needFilter ? new FilteringNativeHitIndexProgressor<>( seeker, client, openSeekers, query )\n-                          : new NativeHitIndexProgressor<>( seeker, client, openSeekers );\n+      throw new UncheckedIOException(e);\n     }\n-\n-    private boolean isBackwardsSeek( KEY treeKeyFrom, KEY treeKeyTo )\n+  }\n+\n+  RawCursor<Hit<KEY, VALUE>, IOException> makeIndexSeeker(KEY treeKeyFrom, KEY treeKeyTo) throws IOException\n+  {\n+    RawCursor<Hit<KEY, VALUE>, IOException> seeker = tree.seek(treeKeyFrom, treeKeyTo);\n+    openSeekers.add(seeker);\n+    return seeker;\n+  }\n+\n+  private IndexProgressor getIndexProgressor(RawCursor<Hit<KEY, VALUE>, IOException> seeker, IndexProgressor.NodeValueClient client, boolean needFilter,\n+                                             IndexQuery[] query)\n+  {\n+    return needFilter ? new FilteringNativeHitIndexProgressor<>(seeker, client, openSeekers, query)\n+        : new NativeHitIndexProgressor<>(seeker, client, openSeekers);\n+  }\n+\n+  private boolean isBackwardsSeek(KEY treeKeyFrom, KEY treeKeyTo)\n+  {\n+    return layout.compare(treeKeyFrom, treeKeyTo) > 0;\n+  }\n+\n+  private void ensureOpenSeekersClosed()\n+  {\n+    try\n     {\n-        return layout.compare( treeKeyFrom, treeKeyTo ) > 0;\n-    }\n-\n-    private void ensureOpenSeekersClosed()\n+      IOUtils.closeAll(openSeekers);\n+      openSeekers.clear();\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            IOUtils.closeAll( openSeekers );\n-            openSeekers.clear();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n+      throw new UncheckedIOException(e);\n     }\n+  }\n }\n",
            "diff_size": 259
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1718/NativeSchemaIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1718/NativeSchemaIndexReader.java\nindex 5320f3114b0..847018579b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1718/NativeSchemaIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1718/NativeSchemaIndexReader.java\n@@ -41,8 +41,7 @@ import org.neo4j.storageengine.api.schema.IndexReader;\n import org.neo4j.storageengine.api.schema.IndexSampler;\n import org.neo4j.values.storable.Value;\n \n-abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        implements IndexReader\n+abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements IndexReader\n {\n     protected final SchemaIndexDescriptor descriptor;\n     final Layout<KEY,VALUE> layout;\n@@ -77,9 +76,8 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n         // non-unique sampler which scans the index and counts (potentially duplicates, of which there will\n         // be none in a unique index).\n \n-        FullScanNonUniqueIndexSampler<KEY,VALUE> sampler =\n-                new FullScanNonUniqueIndexSampler<>( tree, layout, samplingConfig );\n-        return sampler::result;\n+        FullScanNonUniqueIndexSampler<KEY,VALUE> sampler = new FullScanNonUniqueIndexSampler<>( tree, layout, samplingConfig );\n+return sampler::result;\n     }\n \n     @Override\n@@ -133,16 +131,14 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n \n     private PrimitiveLongResourceIterator getHitIterator( RawCursor<Hit<KEY,VALUE>,IOException> seeker, boolean needFilter, IndexQuery[] predicates )\n     {\n-        return needFilter ? new FilteringNativeHitIterator<>( seeker, openSeekers, predicates )\n-                          : new NativeHitIterator<>( seeker, openSeekers );\n+        return needFilter ? new FilteringNativeHitIterator<>( seeker, openSeekers, predicates ) : new NativeHitIterator<>( seeker, openSeekers );\n     }\n \n     @Override\n     public void query( IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates )\n     {\n         validateQuery( indexOrder, predicates );\n-\n-        KEY treeKeyFrom = layout.newKey();\n+KEY treeKeyFrom = layout.newKey();\n         KEY treeKeyTo = layout.newKey();\n \n         boolean needFilter = initializeRangeForQuery( treeKeyFrom, treeKeyTo, predicates );\n@@ -165,9 +161,8 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n         {\n             RawCursor<Hit<KEY,VALUE>,IOException> seeker = tree.seek( lowest, highest );\n             SchemaLayout<KEY> schemaLayout = (SchemaLayout<KEY>) layout;\n-            client.initialize( descriptor, new NativeDistinctValuesProgressor<>( seeker, client, openSeekers, schemaLayout, schemaLayout::compareValue ),\n-                    new IndexQuery[0] );\n-        }\n+            client.initialize( descriptor, new NativeDistinctValuesProgressor<>( seeker, client, openSeekers, schemaLayout, schemaLayout::compareValue ), new IndexQuery[0] );\n+    }\n         catch ( IOException e )\n         {\n             throw new UncheckedIOException( e );\n@@ -188,7 +183,8 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n             client.initialize( descriptor, IndexProgressor.EMPTY, query );\n             return;\n         }\n-        try\n+\n+try\n         {\n             RawCursor<Hit<KEY,VALUE>,IOException> seeker = makeIndexSeeker( treeKeyFrom, treeKeyTo );\n             IndexProgressor hitProgressor = getIndexProgressor( seeker, client, needFilter, query );\n@@ -210,8 +206,7 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n     private IndexProgressor getIndexProgressor( RawCursor<Hit<KEY,VALUE>,IOException> seeker, IndexProgressor.NodeValueClient client, boolean needFilter,\n             IndexQuery[] query )\n     {\n-        return needFilter ? new FilteringNativeHitIndexProgressor<>( seeker, client, openSeekers, query )\n-                          : new NativeHitIndexProgressor<>( seeker, client, openSeekers );\n+        return needFilter ? new FilteringNativeHitIndexProgressor<>( seeker, client, openSeekers, query ) : new NativeHitIndexProgressor<>( seeker, client, openSeekers );\n     }\n \n     private boolean isBackwardsSeek( KEY treeKeyFrom, KEY treeKeyTo )\n@@ -231,4 +226,4 @@ abstract class NativeSchemaIndexReader<KEY extends NativeSchemaKey<KEY>, VALUE e\n             throw new UncheckedIOException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
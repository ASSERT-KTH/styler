{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3376",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "272",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "389",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "394",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "449",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "457",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "481",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "500",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "503",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "543",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3376/SwitchToSlave.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3376/SwitchToSlave.java\nindex fe290d8055f..bb58f21b926 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3376/SwitchToSlave.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3376/SwitchToSlave.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.io.File;\n@@ -94,521 +95,511 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n \n public abstract class SwitchToSlave\n {\n-    // TODO solve this with lifecycle instance grouping or something\n-    @SuppressWarnings( \"unchecked\" )\n-    private static final Class<? extends Lifecycle>[] SERVICES_TO_RESTART_FOR_STORE_COPY = new Class[]{\n-            StoreLockerLifecycleAdapter.class,\n-            DataSourceManager.class,\n-            RequestContextFactory.class,\n-            TransactionCommittingResponseUnpacker.class,\n-            IndexConfigStore.class,\n-            OnlineBackupKernelExtension.class,\n-            FileSystemWatcherService.class\n-    };\n-    private final StoreCopyClient storeCopyClient;\n-    private final Function<Slave,SlaveServer> slaveServerFactory;\n-    protected final UpdatePuller updatePuller;\n-    protected final Monitors monitors;\n-    final Log userLog;\n-    final Log msgLog;\n-    protected final Config config;\n-    protected final DependencyResolver resolver;\n-    private final HaIdGeneratorFactory idGeneratorFactory;\n-    private final DelegateInvocationHandler<Master> masterDelegateHandler;\n-    private final ClusterMemberAvailability clusterMemberAvailability;\n-    protected final RequestContextFactory requestContextFactory;\n-    private final MasterClientResolver masterClientResolver;\n-    private final PullerFactory updatePullerFactory;\n-    protected final Monitor monitor;\n-    protected final File storeDir;\n-    protected final PageCache pageCache;\n-\n-    private final Supplier<NeoStoreDataSource> neoDataSourceSupplier;\n-    private final Supplier<TransactionIdStore> transactionIdStoreSupplier;\n-    private final TransactionStats transactionCounters;\n-\n-    SwitchToSlave( HaIdGeneratorFactory idGeneratorFactory, DependencyResolver resolver, Monitors monitors,\n-                   RequestContextFactory requestContextFactory, DelegateInvocationHandler<Master>\n-                           masterDelegateHandler, ClusterMemberAvailability clusterMemberAvailability,\n-                   MasterClientResolver masterClientResolver, Monitor monitor, PullerFactory pullerFactory,\n-                   UpdatePuller updatePuller, Function<Slave, SlaveServer> slaveServerFactory, Config config,\n-                   LogService logService, PageCache pageCache, File storeDir,\n-                   Supplier<TransactionIdStore> transactionIdStoreSupplier, TransactionStats\n-                           transactionCounters, Supplier<NeoStoreDataSource> neoDataSourceSupplier, StoreCopyClient storeCopyClient )\n+  // TODO solve this with lifecycle instance grouping or something\n+  @SuppressWarnings(\"unchecked\")\n+  private static final Class<? extends Lifecycle>[] SERVICES_TO_RESTART_FOR_STORE_COPY = new Class[] {\n+      StoreLockerLifecycleAdapter.class,\n+      DataSourceManager.class,\n+      RequestContextFactory.class,\n+      TransactionCommittingResponseUnpacker.class,\n+      IndexConfigStore.class,\n+      OnlineBackupKernelExtension.class,\n+      FileSystemWatcherService.class\n+  };\n+  private final StoreCopyClient storeCopyClient;\n+  private final Function<Slave, SlaveServer> slaveServerFactory;\n+  protected final UpdatePuller updatePuller;\n+  protected final Monitors monitors;\n+  final Log userLog;\n+  final Log msgLog;\n+  protected final Config config;\n+  protected final DependencyResolver resolver;\n+  private final HaIdGeneratorFactory idGeneratorFactory;\n+  private final DelegateInvocationHandler<Master> masterDelegateHandler;\n+  private final ClusterMemberAvailability clusterMemberAvailability;\n+  protected final RequestContextFactory requestContextFactory;\n+  private final MasterClientResolver masterClientResolver;\n+  private final PullerFactory updatePullerFactory;\n+  protected final Monitor monitor;\n+  protected final File storeDir;\n+  protected final PageCache pageCache;\n+\n+  private final Supplier<NeoStoreDataSource> neoDataSourceSupplier;\n+  private final Supplier<TransactionIdStore> transactionIdStoreSupplier;\n+  private final TransactionStats transactionCounters;\n+\n+  SwitchToSlave(HaIdGeneratorFactory idGeneratorFactory, DependencyResolver resolver, Monitors monitors,\n+                RequestContextFactory requestContextFactory, DelegateInvocationHandler<Master>\n+                    masterDelegateHandler, ClusterMemberAvailability clusterMemberAvailability,\n+                MasterClientResolver masterClientResolver, Monitor monitor, PullerFactory pullerFactory,\n+                UpdatePuller updatePuller, Function<Slave, SlaveServer> slaveServerFactory, Config config,\n+                LogService logService, PageCache pageCache, File storeDir,\n+                Supplier<TransactionIdStore> transactionIdStoreSupplier, TransactionStats\n+                    transactionCounters, Supplier<NeoStoreDataSource> neoDataSourceSupplier, StoreCopyClient storeCopyClient)\n+  {\n+    this.idGeneratorFactory = idGeneratorFactory;\n+    this.resolver = resolver;\n+    this.monitors = monitors;\n+    this.requestContextFactory = requestContextFactory;\n+    this.masterDelegateHandler = masterDelegateHandler;\n+    this.clusterMemberAvailability = clusterMemberAvailability;\n+    this.masterClientResolver = masterClientResolver;\n+    this.userLog = logService.getUserLog(getClass());\n+    this.msgLog = logService.getInternalLog(getClass());\n+    this.monitor = monitor;\n+    this.updatePullerFactory = pullerFactory;\n+    this.updatePuller = updatePuller;\n+    this.slaveServerFactory = slaveServerFactory;\n+    this.config = config;\n+    this.pageCache = pageCache;\n+    this.storeDir = storeDir;\n+    this.transactionIdStoreSupplier = transactionIdStoreSupplier;\n+    this.transactionCounters = transactionCounters;\n+    this.neoDataSourceSupplier = neoDataSourceSupplier;\n+    this.storeCopyClient = storeCopyClient;\n+  }\n+\n+  /**\n+   * Performs a switch to the slave state. Starts the communication endpoints, switches components to the slave state\n+   * and ensures that the current database is appropriate for this cluster. It also broadcasts the appropriate\n+   * Slave Is Available event\n+   *\n+   * @param haCommunicationLife The LifeSupport instance to register the network facilities required for\n+   *                            communication with the rest of the cluster\n+   * @param me                  The URI this instance must bind to\n+   * @param masterUri           The URI of the master for which this instance must become slave to\n+   * @param cancellationRequest A handle for gracefully aborting the switch\n+   * @return The URI that was broadcasted as the slave endpoint or null if the task was cancelled\n+   */\n+  public URI switchToSlave(LifeSupport haCommunicationLife, URI me, URI masterUri,\n+                           CancellationRequest cancellationRequest) throws Throwable\n+  {\n+    URI slaveUri;\n+    boolean success = false;\n+\n+    monitor.switchToSlaveStarted();\n+\n+    // Wait a short while for current transactions to stop first, just to be nice.\n+    // We can't wait forever since switching to our designated role is quite important.\n+    Clock clock = Clocks.systemClock();\n+    long deadline = clock.millis() + config.get(HaSettings.internal_state_switch_timeout).toMillis();\n+    while (transactionCounters.getNumberOfActiveTransactions() > 0 && clock.millis() < deadline)\n     {\n-        this.idGeneratorFactory = idGeneratorFactory;\n-        this.resolver = resolver;\n-        this.monitors = monitors;\n-        this.requestContextFactory = requestContextFactory;\n-        this.masterDelegateHandler = masterDelegateHandler;\n-        this.clusterMemberAvailability = clusterMemberAvailability;\n-        this.masterClientResolver = masterClientResolver;\n-        this.userLog = logService.getUserLog( getClass() );\n-        this.msgLog = logService.getInternalLog( getClass() );\n-        this.monitor = monitor;\n-        this.updatePullerFactory = pullerFactory;\n-        this.updatePuller = updatePuller;\n-        this.slaveServerFactory = slaveServerFactory;\n-        this.config = config;\n-        this.pageCache = pageCache;\n-        this.storeDir = storeDir;\n-        this.transactionIdStoreSupplier = transactionIdStoreSupplier;\n-        this.transactionCounters = transactionCounters;\n-        this.neoDataSourceSupplier = neoDataSourceSupplier;\n-        this.storeCopyClient = storeCopyClient;\n+      parkNanos(MILLISECONDS.toNanos(10));\n     }\n \n-    /**\n-     * Performs a switch to the slave state. Starts the communication endpoints, switches components to the slave state\n-     * and ensures that the current database is appropriate for this cluster. It also broadcasts the appropriate\n-     * Slave Is Available event\n-     *\n-     * @param haCommunicationLife The LifeSupport instance to register the network facilities required for\n-     *                            communication with the rest of the cluster\n-     * @param me The URI this instance must bind to\n-     * @param masterUri The URI of the master for which this instance must become slave to\n-     * @param cancellationRequest A handle for gracefully aborting the switch\n-     * @return The URI that was broadcasted as the slave endpoint or null if the task was cancelled\n-     */\n-    public URI switchToSlave( LifeSupport haCommunicationLife, URI me, URI masterUri,\n-                              CancellationRequest cancellationRequest ) throws Throwable\n+    try\n     {\n-        URI slaveUri;\n-        boolean success = false;\n-\n-        monitor.switchToSlaveStarted();\n-\n-        // Wait a short while for current transactions to stop first, just to be nice.\n-        // We can't wait forever since switching to our designated role is quite important.\n-        Clock clock = Clocks.systemClock();\n-        long deadline = clock.millis() + config.get( HaSettings.internal_state_switch_timeout ).toMillis();\n-        while ( transactionCounters.getNumberOfActiveTransactions() > 0 && clock.millis() < deadline )\n-        {\n-            parkNanos( MILLISECONDS.toNanos( 10 ) );\n-        }\n-\n-        try\n-        {\n-            InstanceId myId = config.get( ClusterSettings.server_id );\n-\n-            userLog.info( \"ServerId %s, moving to slave for master %s\", myId, masterUri );\n-\n-            assert masterUri != null; // since we are here it must already have been set from outside\n-\n-            idGeneratorFactory.switchToSlave();\n-\n-            copyStoreFromMasterIfNeeded( masterUri, me, cancellationRequest );\n-\n-            /*\n-             * The following check is mandatory, since the store copy can be cancelled and if it was actually\n-             * happening then we can't continue, as there is no store in place\n-             */\n-            if ( cancellationRequest.cancellationRequested() )\n-            {\n-                msgLog.info( \"Switch to slave cancelled during store copy if no local store is present.\" );\n-                return null;\n-            }\n-\n-            /*\n-             * We get here either with a fresh store from the master copy above so we need to\n-             * start the ds or we already had a store, so we have already started the ds. Either way,\n-             * make sure it's there.\n-             */\n-            NeoStoreDataSource neoDataSource = neoDataSourceSupplier.get();\n-            neoDataSource.afterModeSwitch();\n-            StoreId myStoreId = neoDataSource.getStoreId();\n-\n-            boolean consistencyChecksExecutedSuccessfully = executeConsistencyChecks(\n-                    transactionIdStoreSupplier.get(), masterUri, me, myStoreId, cancellationRequest );\n-\n-            if ( !consistencyChecksExecutedSuccessfully )\n-            {\n-                msgLog.info( \"Switch to slave cancelled due to consistency check failure.\" );\n-                return null;\n-            }\n-\n-            if ( cancellationRequest.cancellationRequested() )\n-            {\n-                msgLog.info( \"Switch to slave cancelled after consistency checks.\" );\n-                return null;\n-            }\n-\n-            // no exception were thrown and we can proceed\n-            slaveUri = startHaCommunication( haCommunicationLife, neoDataSource, me, masterUri, myStoreId, cancellationRequest );\n-            if ( slaveUri == null )\n-            {\n-                msgLog.info( \"Switch to slave unable to connect.\" );\n-                return null;\n-            }\n-\n-            success = true;\n-            userLog.info( \"ServerId %s, successfully moved to slave for master %s\", myId, masterUri );\n-        }\n-        finally\n-        {\n-            monitor.switchToSlaveCompleted( success );\n-        }\n-\n-        return slaveUri;\n+      InstanceId myId = config.get(ClusterSettings.server_id);\n+\n+      userLog.info(\"ServerId %s, moving to slave for master %s\", myId, masterUri);\n+\n+      assert masterUri != null; // since we are here it must already have been set from outside\n+\n+      idGeneratorFactory.switchToSlave();\n+\n+      copyStoreFromMasterIfNeeded(masterUri, me, cancellationRequest);\n+\n+      /*\n+       * The following check is mandatory, since the store copy can be cancelled and if it was actually\n+       * happening then we can't continue, as there is no store in place\n+       */\n+      if (cancellationRequest.cancellationRequested())\n+      {\n+        msgLog.info(\"Switch to slave cancelled during store copy if no local store is present.\");\n+        return null;\n+      }\n+\n+      /*\n+       * We get here either with a fresh store from the master copy above so we need to\n+       * start the ds or we already had a store, so we have already started the ds. Either way,\n+       * make sure it's there.\n+       */\n+      NeoStoreDataSource neoDataSource = neoDataSourceSupplier.get();\n+      neoDataSource.afterModeSwitch();\n+      StoreId myStoreId = neoDataSource.getStoreId();\n+\n+      boolean consistencyChecksExecutedSuccessfully = executeConsistencyChecks(\n+          transactionIdStoreSupplier.get(), masterUri, me, myStoreId, cancellationRequest);\n+\n+      if (!consistencyChecksExecutedSuccessfully)\n+      {\n+        msgLog.info(\"Switch to slave cancelled due to consistency check failure.\");\n+        return null;\n+      }\n+\n+      if (cancellationRequest.cancellationRequested())\n+      {\n+        msgLog.info(\"Switch to slave cancelled after consistency checks.\");\n+        return null;\n+      }\n+\n+      // no exception were thrown and we can proceed\n+      slaveUri = startHaCommunication(haCommunicationLife, neoDataSource, me, masterUri, myStoreId, cancellationRequest);\n+      if (slaveUri == null)\n+      {\n+        msgLog.info(\"Switch to slave unable to connect.\");\n+        return null;\n+      }\n+\n+      success = true;\n+      userLog.info(\"ServerId %s, successfully moved to slave for master %s\", myId, masterUri);\n+    } finally\n+    {\n+      monitor.switchToSlaveCompleted(success);\n     }\n \n-    void checkMyStoreIdAndMastersStoreId( StoreId myStoreId, URI masterUri, DependencyResolver resolver )\n+    return slaveUri;\n+  }\n+\n+  void checkMyStoreIdAndMastersStoreId(StoreId myStoreId, URI masterUri, DependencyResolver resolver)\n+  {\n+    ClusterMembers clusterMembers = resolver.resolveDependency(ClusterMembers.class);\n+    InstanceId serverId = HighAvailabilityModeSwitcher.getServerId(masterUri);\n+    Iterable<ClusterMember> members = clusterMembers.getMembers();\n+    ClusterMember master = firstOrNull(filter(hasInstanceId(serverId), members));\n+    if (master == null)\n     {\n-        ClusterMembers clusterMembers = resolver.resolveDependency( ClusterMembers.class );\n-        InstanceId serverId = HighAvailabilityModeSwitcher.getServerId( masterUri );\n-        Iterable<ClusterMember> members = clusterMembers.getMembers();\n-        ClusterMember master = firstOrNull( filter( hasInstanceId( serverId ), members ) );\n-        if ( master == null )\n-        {\n-            throw new IllegalStateException( \"Cannot find the master among \" + members +\n-                    \" with master serverId=\" + serverId + \" and uri=\" + masterUri );\n-        }\n+      throw new IllegalStateException(\"Cannot find the master among \" + members +\n+          \" with master serverId=\" + serverId + \" and uri=\" + masterUri);\n+    }\n \n-        StoreId masterStoreId = master.getStoreId();\n+    StoreId masterStoreId = master.getStoreId();\n \n-        if ( !myStoreId.equals( masterStoreId ) )\n-        {\n-            throw new MismatchingStoreIdException( myStoreId, master.getStoreId() );\n-        }\n-        else if ( !myStoreId.equalsByUpgradeId( master.getStoreId() ) )\n-        {\n-            throw new BranchedDataException( \"My store with \" + myStoreId + \" was updated independently from \" +\n-                    \"master's store \" + masterStoreId );\n-        }\n+    if (!myStoreId.equals(masterStoreId))\n+    {\n+      throw new MismatchingStoreIdException(myStoreId, master.getStoreId());\n+    } else if (!myStoreId.equalsByUpgradeId(master.getStoreId()))\n+    {\n+      throw new BranchedDataException(\"My store with \" + myStoreId + \" was updated independently from \" +\n+          \"master's store \" + masterStoreId);\n     }\n+  }\n \n-    private URI startHaCommunication( LifeSupport haCommunicationLife, NeoStoreDataSource neoDataSource,\n-                                      URI me, URI masterUri, StoreId storeId, CancellationRequest\n-                                              cancellationRequest )\n-            throws IllegalArgumentException, InterruptedException\n-    {\n-        MasterClient master = newMasterClient( masterUri, me, neoDataSource.getStoreId(), haCommunicationLife );\n+  private URI startHaCommunication(LifeSupport haCommunicationLife, NeoStoreDataSource neoDataSource,\n+                                   URI me, URI masterUri, StoreId storeId, CancellationRequest\n+                                       cancellationRequest)\n+      throws IllegalArgumentException, InterruptedException\n+  {\n+    MasterClient master = newMasterClient(masterUri, me, neoDataSource.getStoreId(), haCommunicationLife);\n \n-        TransactionObligationFulfiller obligationFulfiller =\n-                resolver.resolveDependency( TransactionObligationFulfiller.class );\n-        UpdatePullerScheduler updatePullerScheduler = updatePullerFactory.createUpdatePullerScheduler( updatePuller );\n+    TransactionObligationFulfiller obligationFulfiller =\n+        resolver.resolveDependency(TransactionObligationFulfiller.class);\n+    UpdatePullerScheduler updatePullerScheduler = updatePullerFactory.createUpdatePullerScheduler(updatePuller);\n \n-        Slave slaveImpl = new SlaveImpl( obligationFulfiller );\n+    Slave slaveImpl = new SlaveImpl(obligationFulfiller);\n \n-        SlaveServer server = slaveServerFactory.apply( slaveImpl );\n+    SlaveServer server = slaveServerFactory.apply(slaveImpl);\n \n-        if ( cancellationRequest.cancellationRequested() )\n-        {\n-            msgLog.info( \"Switch to slave cancelled, unable to start HA-communication\" );\n-            return null;\n-        }\n-\n-        masterDelegateHandler.setDelegate( master );\n-\n-        haCommunicationLife.add( updatePullerScheduler );\n-        haCommunicationLife.add( server );\n-        haCommunicationLife.start();\n+    if (cancellationRequest.cancellationRequested())\n+    {\n+      msgLog.info(\"Switch to slave cancelled, unable to start HA-communication\");\n+      return null;\n+    }\n \n-        /*\n-         * Take the opportunity to catch up with master, now that we're alone here, right before we\n-         * drop the availability guard, so that other transactions might start.\n-         */\n-        if ( !catchUpWithMaster( updatePuller ) )\n-        {\n-            return null;\n-        }\n+    masterDelegateHandler.setDelegate(master);\n \n-        URI slaveHaURI = createHaURI( me, server );\n-        clusterMemberAvailability.memberIsAvailable( HighAvailabilityModeSwitcher.SLAVE, slaveHaURI, storeId );\n+    haCommunicationLife.add(updatePullerScheduler);\n+    haCommunicationLife.add(server);\n+    haCommunicationLife.start();\n \n-        return slaveHaURI;\n+    /*\n+     * Take the opportunity to catch up with master, now that we're alone here, right before we\n+     * drop the availability guard, so that other transactions might start.\n+     */\n+    if (!catchUpWithMaster(updatePuller))\n+    {\n+      return null;\n     }\n \n-    private boolean catchUpWithMaster( UpdatePuller updatePuller ) throws IllegalArgumentException, InterruptedException\n-    {\n-        monitor.catchupStarted();\n-        RequestContext catchUpRequestContext = requestContextFactory.newRequestContext();\n-        userLog.info( \"Catching up with master. I'm at %s\", catchUpRequestContext );\n+    URI slaveHaURI = createHaURI(me, server);\n+    clusterMemberAvailability.memberIsAvailable(HighAvailabilityModeSwitcher.SLAVE, slaveHaURI, storeId);\n \n-        if ( !updatePuller.tryPullUpdates() )\n-        {\n-            return false;\n-        }\n+    return slaveHaURI;\n+  }\n \n-        userLog.info( \"Now caught up with master\" );\n-        monitor.catchupCompleted();\n-        return true;\n-    }\n+  private boolean catchUpWithMaster(UpdatePuller updatePuller) throws IllegalArgumentException, InterruptedException\n+  {\n+    monitor.catchupStarted();\n+    RequestContext catchUpRequestContext = requestContextFactory.newRequestContext();\n+    userLog.info(\"Catching up with master. I'm at %s\", catchUpRequestContext);\n \n-    private URI createHaURI( URI me, Server<?,?> server )\n+    if (!updatePuller.tryPullUpdates())\n     {\n-        InetSocketAddress serverSocketAddress = server.getSocketAddress();\n-        String hostString = ServerUtil.getHostString( serverSocketAddress );\n+      return false;\n+    }\n \n-        String host = isWildcard( hostString ) ? me.getHost() : hostString;\n-        host = ensureWrapForIpv6Uri( host );\n+    userLog.info(\"Now caught up with master\");\n+    monitor.catchupCompleted();\n+    return true;\n+  }\n \n-        InstanceId serverId = config.get( ClusterSettings.server_id );\n-        return URI.create( \"ha://\" + host + \":\" + serverSocketAddress.getPort() + \"?serverId=\" + serverId );\n-    }\n+  private URI createHaURI(URI me, Server<?, ?> server)\n+  {\n+    InetSocketAddress serverSocketAddress = server.getSocketAddress();\n+    String hostString = ServerUtil.getHostString(serverSocketAddress);\n \n-    private String ensureWrapForIpv6Uri( String host )\n-    {\n-        if ( host.contains( \":\" ) && !host.contains( \"[\" ) )\n-        {\n-            host = \"[\" + host + \"]\";\n-        }\n-        return host;\n-    }\n+    String host = isWildcard(hostString) ? me.getHost() : hostString;\n+    host = ensureWrapForIpv6Uri(host);\n \n-    private static boolean isWildcard( String hostString )\n-    {\n-        return hostString.contains( \"0.0.0.0\" ) || hostString.contains( \"::\" ) || hostString.contains( \"0:0:0:0:0:0:0:0\" );\n-    }\n+    InstanceId serverId = config.get(ClusterSettings.server_id);\n+    return URI.create(\"ha://\" + host + \":\" + serverSocketAddress.getPort() + \"?serverId=\" + serverId);\n+  }\n \n-    MasterClient newMasterClient( URI masterUri, URI me, StoreId storeId, LifeSupport life )\n+  private String ensureWrapForIpv6Uri(String host)\n+  {\n+    if (host.contains(\":\") && !host.contains(\"[\"))\n     {\n-        return masterClientResolver.instantiate( masterUri.getHost(), masterUri.getPort(),\n-                me.getHost(), monitors, storeId, life );\n+      host = \"[\" + host + \"]\";\n     }\n-\n-    private void startServicesAgain() throws Throwable\n+    return host;\n+  }\n+\n+  private static boolean isWildcard(String hostString)\n+  {\n+    return hostString.contains(\"0.0.0.0\") || hostString.contains(\"::\") || hostString.contains(\"0:0:0:0:0:0:0:0\");\n+  }\n+\n+  MasterClient newMasterClient(URI masterUri, URI me, StoreId storeId, LifeSupport life)\n+  {\n+    return masterClientResolver.instantiate(masterUri.getHost(), masterUri.getPort(),\n+        me.getHost(), monitors, storeId, life);\n+  }\n+\n+  private void startServicesAgain() throws Throwable\n+  {\n+    msgLog.debug(\"Starting services again\");\n+    for (Class<? extends Lifecycle> serviceClass : SwitchToSlave.SERVICES_TO_RESTART_FOR_STORE_COPY)\n     {\n-        msgLog.debug( \"Starting services again\" );\n-        for ( Class<? extends Lifecycle> serviceClass : SwitchToSlave.SERVICES_TO_RESTART_FOR_STORE_COPY )\n-        {\n-            resolver.resolveDependency( serviceClass ).start();\n-        }\n+      resolver.resolveDependency(serviceClass).start();\n     }\n-\n-    void checkDataConsistencyWithMaster( URI availableMasterId, Master master,\n-                                         StoreId storeId,\n-                                         TransactionIdStore transactionIdStore )\n+  }\n+\n+  void checkDataConsistencyWithMaster(URI availableMasterId, Master master,\n+                                      StoreId storeId,\n+                                      TransactionIdStore transactionIdStore)\n+  {\n+    TransactionId myLastCommittedTxData = transactionIdStore.getLastCommittedTransaction();\n+    long myLastCommittedTx = myLastCommittedTxData.transactionId();\n+    HandshakeResult handshake;\n+    try (Response<HandshakeResult> response = master.handshake(myLastCommittedTx, storeId))\n     {\n-        TransactionId myLastCommittedTxData = transactionIdStore.getLastCommittedTransaction();\n-        long myLastCommittedTx = myLastCommittedTxData.transactionId();\n-        HandshakeResult handshake;\n-        try ( Response<HandshakeResult> response = master.handshake( myLastCommittedTx, storeId ) )\n-        {\n-            handshake = response.response();\n-            requestContextFactory.setEpoch( handshake.epoch() );\n-        }\n-        catch ( BranchedDataException e )\n-        {\n-            // Rethrow wrapped in a branched data exception on our side, to clarify where the problem originates.\n-            throw new BranchedDataException( \"The database stored on this machine has diverged from that \" +\n-                    \"of the master. This will be automatically resolved.\", e );\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            // Checked exceptions will be wrapped as the cause if this was a serialized\n-            // server-side exception\n-            if ( e.getCause() instanceof MissingLogDataException )\n-            {\n-                /*\n-                 * This means the master was unable to find a log entry for the txid we just asked. This\n-                 * probably means the thing we asked for is too old or too new. Anyway, since it doesn't\n-                 * have the tx it is better if we just throw our store away and ask for a new copy. Next\n-                 * time around it shouldn't have to even pass from here.\n-                 */\n-                throw new StoreOutOfDateException( \"The master is missing the log required to complete the \" +\n-                        \"consistency check\", e.getCause() );\n-            }\n-            throw e;\n-        }\n-\n-        long myChecksum = myLastCommittedTxData.checksum();\n-        if ( myChecksum != handshake.txChecksum() )\n-        {\n-            String msg = \"The cluster contains two logically different versions of the database.. This will be \" +\n-                    \"automatically resolved. Details: I (server_id:\" + config.get( ClusterSettings.server_id ) +\n-                    \") think checksum for txId (\" + myLastCommittedTx + \") is \" + myChecksum +\n-                    \", but master (server_id:\" + getServerId( availableMasterId ) + \") says that it's \" +\n-                    handshake.txChecksum() + \", where handshake is \" + handshake;\n-            throw new BranchedDataException( msg );\n-        }\n-        msgLog.info( \"Checksum for last committed tx ok with lastTxId=\" +\n-                myLastCommittedTx + \" with checksum=\" + myChecksum );\n+      handshake = response.response();\n+      requestContextFactory.setEpoch(handshake.epoch());\n+    } catch (BranchedDataException e)\n+    {\n+      // Rethrow wrapped in a branched data exception on our side, to clarify where the problem originates.\n+      throw new BranchedDataException(\"The database stored on this machine has diverged from that \" +\n+          \"of the master. This will be automatically resolved.\", e);\n+    } catch (RuntimeException e)\n+    {\n+      // Checked exceptions will be wrapped as the cause if this was a serialized\n+      // server-side exception\n+      if (e.getCause() instanceof MissingLogDataException)\n+      {\n+        /*\n+         * This means the master was unable to find a log entry for the txid we just asked. This\n+         * probably means the thing we asked for is too old or too new. Anyway, since it doesn't\n+         * have the tx it is better if we just throw our store away and ask for a new copy. Next\n+         * time around it shouldn't have to even pass from here.\n+         */\n+        throw new StoreOutOfDateException(\"The master is missing the log required to complete the \" +\n+            \"consistency check\", e.getCause());\n+      }\n+      throw e;\n     }\n \n-    private void copyStoreFromMasterIfNeeded( URI masterUri, URI me, CancellationRequest cancellationRequest )\n-            throws Throwable\n+    long myChecksum = myLastCommittedTxData.checksum();\n+    if (myChecksum != handshake.txChecksum())\n     {\n-        if ( !isStorePresent( pageCache, storeDir ) )\n-        {\n-            boolean success = false;\n-            monitor.storeCopyStarted();\n-            LifeSupport copyLife = new LifeSupport();\n-            try\n-            {\n-                MasterClient masterClient = newMasterClient( masterUri, me, null, copyLife );\n-                copyLife.start();\n-\n-                boolean masterIsOld = MasterClient.CURRENT.compareTo( masterClient.getProtocolVersion() ) > 0;\n-                if ( masterIsOld )\n-                {\n-                    throw new UnableToCopyStoreFromOldMasterException( MasterClient.CURRENT.getApplicationProtocol(),\n-                            masterClient.getProtocolVersion().getApplicationProtocol() );\n-                }\n-                else\n-                {\n-                    copyStoreFromMaster( masterClient, cancellationRequest, MoveAfterCopy.moveReplaceExisting() );\n-                    success = true;\n-                }\n-            }\n-            finally\n-            {\n-                monitor.storeCopyCompleted( success );\n-                copyLife.shutdown();\n-            }\n-        }\n+      String msg = \"The cluster contains two logically different versions of the database.. This will be \" +\n+          \"automatically resolved. Details: I (server_id:\" + config.get(ClusterSettings.server_id) +\n+          \") think checksum for txId (\" + myLastCommittedTx + \") is \" + myChecksum +\n+          \", but master (server_id:\" + getServerId(availableMasterId) + \") says that it's \" +\n+          handshake.txChecksum() + \", where handshake is \" + handshake;\n+      throw new BranchedDataException(msg);\n     }\n-\n-    private boolean executeConsistencyChecks( TransactionIdStore txIdStore,\n-                                              URI masterUri, URI me,\n-                                              StoreId storeId,\n-                                              CancellationRequest cancellationRequest ) throws Throwable\n+    msgLog.info(\"Checksum for last committed tx ok with lastTxId=\" +\n+        myLastCommittedTx + \" with checksum=\" + myChecksum);\n+  }\n+\n+  private void copyStoreFromMasterIfNeeded(URI masterUri, URI me, CancellationRequest cancellationRequest)\n+      throws Throwable\n+  {\n+    if (!isStorePresent(pageCache, storeDir))\n     {\n-        LifeSupport consistencyCheckLife = new LifeSupport();\n-        try\n+      boolean success = false;\n+      monitor.storeCopyStarted();\n+      LifeSupport copyLife = new LifeSupport();\n+      try\n+      {\n+        MasterClient masterClient = newMasterClient(masterUri, me, null, copyLife);\n+        copyLife.start();\n+\n+        boolean masterIsOld = MasterClient.CURRENT.compareTo(masterClient.getProtocolVersion()) > 0;\n+        if (masterIsOld)\n         {\n-            MasterClient masterClient = newMasterClient( masterUri, me, storeId, consistencyCheckLife );\n-            consistencyCheckLife.start();\n-\n-            if ( cancellationRequest.cancellationRequested() )\n-            {\n-                return false;\n-            }\n-\n-            checkDataConsistency( masterClient, txIdStore, storeId, masterUri, me, cancellationRequest );\n-        }\n-        finally\n+          throw new UnableToCopyStoreFromOldMasterException(MasterClient.CURRENT.getApplicationProtocol(),\n+              masterClient.getProtocolVersion().getApplicationProtocol());\n+        } else\n         {\n-            consistencyCheckLife.shutdown();\n+          copyStoreFromMaster(masterClient, cancellationRequest, MoveAfterCopy.moveReplaceExisting());\n+          success = true;\n         }\n-        return true;\n+      } finally\n+      {\n+        monitor.storeCopyCompleted(success);\n+        copyLife.shutdown();\n+      }\n     }\n+  }\n+\n+  private boolean executeConsistencyChecks(TransactionIdStore txIdStore,\n+                                           URI masterUri, URI me,\n+                                           StoreId storeId,\n+                                           CancellationRequest cancellationRequest) throws Throwable\n+  {\n+    LifeSupport consistencyCheckLife = new LifeSupport();\n+    try\n+    {\n+      MasterClient masterClient = newMasterClient(masterUri, me, storeId, consistencyCheckLife);\n+      consistencyCheckLife.start();\n \n-    abstract void checkDataConsistency( MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId, URI\n-            masterUri, URI me, CancellationRequest cancellationRequest )\n-            throws Throwable;\n+      if (cancellationRequest.cancellationRequested())\n+      {\n+        return false;\n+      }\n \n-    void cleanStoreDir() throws IOException\n+      checkDataConsistency(masterClient, txIdStore, storeId, masterUri, me, cancellationRequest);\n+    } finally\n     {\n-        // Tests verify that this method is called\n-        StoreUtil.cleanStoreDir( storeDir, pageCache );\n+      consistencyCheckLife.shutdown();\n     }\n-\n-    void stopServices() throws Exception\n+    return true;\n+  }\n+\n+  abstract void checkDataConsistency(MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId, URI\n+      masterUri, URI me, CancellationRequest cancellationRequest)\n+      throws Throwable;\n+\n+  void cleanStoreDir() throws IOException\n+  {\n+    // Tests verify that this method is called\n+    StoreUtil.cleanStoreDir(storeDir, pageCache);\n+  }\n+\n+  void stopServices() throws Exception\n+  {\n+    msgLog.debug(\"Stopping services to handle branched store\");\n+    for (int i = SERVICES_TO_RESTART_FOR_STORE_COPY.length - 1; i >= 0; i--)\n     {\n-        msgLog.debug( \"Stopping services to handle branched store\" );\n-        for ( int i = SERVICES_TO_RESTART_FOR_STORE_COPY.length - 1; i >= 0; i-- )\n-        {\n-            Class<? extends Lifecycle> serviceClass = SERVICES_TO_RESTART_FOR_STORE_COPY[i];\n-            try\n-            {\n-                resolver.resolveDependency( serviceClass ).stop();\n-            }\n-            catch ( Exception exception )\n-            {\n-                throw exception;\n-            }\n-            catch ( Throwable throwable )\n-            {\n-                throw new Exception( \"Unexpected error while stopping services to handle branched data\", throwable );\n-            }\n-        }\n+      Class<? extends Lifecycle> serviceClass = SERVICES_TO_RESTART_FOR_STORE_COPY[i];\n+      try\n+      {\n+        resolver.resolveDependency(serviceClass).stop();\n+      } catch (Exception exception)\n+      {\n+        throw exception;\n+      } catch (Throwable throwable)\n+      {\n+        throw new Exception(\"Unexpected error while stopping services to handle branched data\", throwable);\n+      }\n     }\n+  }\n \n-    void copyStoreFromMaster( MasterClient masterClient, CancellationRequest cancellationRequest,\n-                              MoveAfterCopy moveAfterCopy )\n-            throws Throwable\n+  void copyStoreFromMaster(MasterClient masterClient, CancellationRequest cancellationRequest,\n+                           MoveAfterCopy moveAfterCopy)\n+      throws Throwable\n+  {\n+    try\n     {\n-        try\n+      userLog.info(\"Copying store from master\");\n+      StoreCopyClient.StoreCopyRequester requester = new StoreCopyClient.StoreCopyRequester()\n+      {\n+        @Override\n+        public Response<?> copyStore(StoreWriter writer)\n         {\n-            userLog.info( \"Copying store from master\" );\n-            StoreCopyClient.StoreCopyRequester requester = new StoreCopyClient.StoreCopyRequester()\n-            {\n-                @Override\n-                public Response<?> copyStore( StoreWriter writer )\n-                {\n-                    return masterClient.copyStore( new RequestContext( 0,\n-                                    config.get( ClusterSettings.server_id ).toIntegerIndex(), 0, BASE_TX_ID, 0 ),\n-                            writer );\n-                }\n-\n-                @Override\n-                public void done()\n-                {   // Nothing to clean up here\n-                }\n-            };\n-            MoveAfterCopy moveAfterCopyWithLogging = ( moves, fromDirectory, toDirectory ) ->\n-            {\n-                userLog.info( \"Copied store from master to \" + fromDirectory );\n-                msgLog.info( \"Starting post copy operation to move store from \" + fromDirectory + \" to \" + storeDir );\n-                moveAfterCopy.move( moves, fromDirectory, toDirectory );\n-            };\n-            storeCopyClient.copyStore(\n-                    requester, cancellationRequest, moveAfterCopyWithLogging );\n-\n-            startServicesAgain();\n-            userLog.info( \"Finished copying store from master\" );\n+          return masterClient.copyStore(new RequestContext(0,\n+                  config.get(ClusterSettings.server_id).toIntegerIndex(), 0, BASE_TX_ID, 0),\n+              writer);\n         }\n-        catch ( Throwable t )\n-        {\n-            // Delete store so that we can copy from master without conflicts next time\n-            cleanStoreDir();\n-            throw t;\n+\n+        @Override\n+        public void done()\n+        {   // Nothing to clean up here\n         }\n+      };\n+      MoveAfterCopy moveAfterCopyWithLogging = (moves, fromDirectory, toDirectory) ->\n+      {\n+        userLog.info(\"Copied store from master to \" + fromDirectory);\n+        msgLog.info(\"Starting post copy operation to move store from \" + fromDirectory + \" to \" + storeDir);\n+        moveAfterCopy.move(moves, fromDirectory, toDirectory);\n+      };\n+      storeCopyClient.copyStore(\n+          requester, cancellationRequest, moveAfterCopyWithLogging);\n+\n+      startServicesAgain();\n+      userLog.info(\"Finished copying store from master\");\n+    } catch (Throwable t)\n+    {\n+      // Delete store so that we can copy from master without conflicts next time\n+      cleanStoreDir();\n+      throw t;\n     }\n+  }\n \n+  /**\n+   * Monitors events in {@link SwitchToSlave}\n+   */\n+  public interface Monitor\n+  {\n     /**\n-     * Monitors events in {@link SwitchToSlave}\n+     * Called before any other slave-switching code is executed.\n      */\n-    public interface Monitor\n-    {\n-        /**\n-         * Called before any other slave-switching code is executed.\n-         */\n-        default void switchToSlaveStarted()\n-        {   // no-op by default\n-        }\n+    default void switchToSlaveStarted()\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * Called after all slave-switching code has been executed, regardless of whether it was successful or not.\n-         *\n-         * @param wasSuccessful whether or not the slave switch was successful. Depending on the type of failure\n-         * other failure handling outside this class kicks in and there may be a switch retry later.\n-         */\n-        default void switchToSlaveCompleted( boolean wasSuccessful )\n-        {   // no-op by default\n-        }\n+    /**\n+     * Called after all slave-switching code has been executed, regardless of whether it was successful or not.\n+     *\n+     * @param wasSuccessful whether or not the slave switch was successful. Depending on the type of failure\n+     *                      other failure handling outside this class kicks in and there may be a switch retry later.\n+     */\n+    default void switchToSlaveCompleted(boolean wasSuccessful)\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * A full store-copy is required, either if this is the first time this db starts up or if this\n-         * store has branched and needs to fetch a new copy from master.\n-         */\n-        default void storeCopyStarted()\n-        {   // no-op by default\n-        }\n+    /**\n+     * A full store-copy is required, either if this is the first time this db starts up or if this\n+     * store has branched and needs to fetch a new copy from master.\n+     */\n+    default void storeCopyStarted()\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * A full store-copy has completed.\n-         *\n-         * @param wasSuccessful whether or not this store-copy was successful.\n-         */\n-        default void storeCopyCompleted( boolean wasSuccessful )\n-        {   // no-op by default\n-        }\n+    /**\n+     * A full store-copy has completed.\n+     *\n+     * @param wasSuccessful whether or not this store-copy was successful.\n+     */\n+    default void storeCopyCompleted(boolean wasSuccessful)\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * After a successful handshake with master an optimized catch-up is performed.\n-         * This call marks the start of that.\n-         */\n-        default void catchupStarted()\n-        {   // no-op by default\n-        }\n+    /**\n+     * After a successful handshake with master an optimized catch-up is performed.\n+     * This call marks the start of that.\n+     */\n+    default void catchupStarted()\n+    {   // no-op by default\n+    }\n \n-        /**\n-         * This db is now caught up with the master.\n-         */\n-        default void catchupCompleted()\n-        {   // no-op by default\n-        }\n+    /**\n+     * This db is now caught up with the master.\n+     */\n+    default void catchupCompleted()\n+    {   // no-op by default\n     }\n+  }\n }\n",
            "diff_size": 623
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "180",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "54",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "     * @throws IllegalArgumentException if source is null.\n     */\n    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n        super(source);\n        this.dataFlowContext = dataFlowContext;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..4c4eaaeae57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/180/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..63419a26b15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/180/BusinessServiceDataFlowEvent.java\n@@ -10,13 +10,14 @@ import java.util.EventObject;\n public class BusinessServiceDataFlowEvent extends EventObject {\n \n     private DataFlowContext dataFlowContext;\n+\n     /**\n      * Constructs a prototypical Event.\n      *\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..0b6a29da308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/180/BusinessServiceDataFlowEvent.java\n@@ -10,13 +10,14 @@ import java.util.EventObject;\n public class BusinessServiceDataFlowEvent extends EventObject {\n \n     private DataFlowContext dataFlowContext;\n-    /**\n+\n+/**\n      * Constructs a prototypical Event.\n      *\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n@@ -25,8 +26,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n     public DataFlowContext getDataFlowContext() {\n         return dataFlowContext;\n     }\n-\n-    /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n+ /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n         this.dataFlowContext = dataFlowContext;\n     }*/\n-}\n+   }\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..aa89cf35d78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/180/BusinessServiceDataFlowEvent.java\n@@ -1,12 +1,13 @@\n package com.java110.event.service;\n \n import com.java110.core.context.DataFlowContext;\n-\n import java.util.EventObject;\n \n /**\n  * Created by wuxw on 2018/5/18.\n  */\n+\n+\n public class BusinessServiceDataFlowEvent extends EventObject {\n \n     private DataFlowContext dataFlowContext;\n@@ -16,7 +17,9 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+\n+\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n@@ -29,4 +32,4 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n     /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n         this.dataFlowContext = dataFlowContext;\n     }*/\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..4c4eaaeae57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/180/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/180/BusinessServiceDataFlowEvent.java\nindex a34c713c4fc..4c4eaaeae57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/180/BusinessServiceDataFlowEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/180/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
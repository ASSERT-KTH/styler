{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n\n  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n\n  public static final StatusType CONSUMER_INNER_STATUS =\n      new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/125/ExceptionFactory.java\nindex b1c6f72319f..7bbe45e2f38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/125/ExceptionFactory.java\n@@ -44,9 +44,10 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new\n+    ExceptionToProducerResponseConverters();\n \n-  public static final StatusType CONSUMER_INNER_STATUS =\n+   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/125/ExceptionFactory.java\nindex b1c6f72319f..38a6311734b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/125/ExceptionFactory.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.invocation.exception;\n \n import java.lang.reflect.InvocationTargetException;\n@@ -44,7 +45,8 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters =\n+      new ExceptionToProducerResponseConverters();\n \n   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n@@ -53,7 +55,7 @@ public final class ExceptionFactory {\n   }\n \n   public static InvocationException create(StatusType status,\n-      Object exceptionOrErrorData) {\n+                                           Object exceptionOrErrorData) {\n     if (InvocationException.class.isInstance(exceptionOrErrorData)) {\n       return (InvocationException) exceptionOrErrorData;\n     }\n@@ -70,12 +72,12 @@ public final class ExceptionFactory {\n   }\n \n   protected static InvocationException doCreate(StatusType status,\n-      Object errorData) {\n+                                                Object errorData) {\n     return new InvocationException(status, errorData);\n   }\n \n   protected static InvocationException doCreate(int statusCode, String reasonPhrase, CommonExceptionData data,\n-      Throwable e) {\n+                                                Throwable e) {\n     return new InvocationException(statusCode, reasonPhrase, data, e);\n   }\n \n@@ -111,7 +113,7 @@ public final class ExceptionFactory {\n   // \u5219\u9700\u8981\u521b\u5efa\u65b0\u7684InvocationException\u5b9e\u4f8b\uff0c\u6b64\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528e.getMessage\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6d89\u53ca\u5173\u952e\u4fe1\u606f\u88ab\u4f20\u7ed9\u8fdc\u7aef\n   // \u65b0\u521b\u5efa\u7684InvocationException\uff0c\u4f1a\u4f7f\u7528errorMsg\u6765\u6784\u5efaCommonExceptionData\n   protected static InvocationException convertException(int statusCode, String reasonPhrase, Throwable e,\n-      String errorMsg) {\n+                                                        String errorMsg) {\n     if (InvocationTargetException.class.isInstance(e)) {\n       e = ((InvocationTargetException) e).getTargetException();\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/125/ExceptionFactory.java\nindex b1c6f72319f..355ed25d37c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/125/ExceptionFactory.java\n@@ -127,4 +127,4 @@ public final class ExceptionFactory {\n   public static Response convertExceptionToResponse(SwaggerInvocation swaggerInvocation, Throwable e) {\n     return exceptionToProducerResponseConverters.convertExceptionToResponse(swaggerInvocation, e);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/125/ExceptionFactory.java\nindex b1c6f72319f..7bbe45e2f38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/125/ExceptionFactory.java\n@@ -44,9 +44,10 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new\n+    ExceptionToProducerResponseConverters();\n \n-  public static final StatusType CONSUMER_INNER_STATUS =\n+   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "139",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/125/ExceptionFactory.java\nindex b1c6f72319f..794f472832d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/125/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/125/ExceptionFactory.java\n@@ -44,9 +44,7 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n-\n-  public static final StatusType CONSUMER_INNER_STATUS =\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = newExceptionToProducerResponseConverters();public static static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
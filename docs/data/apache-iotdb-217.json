{
    "project_name": "apache-iotdb",
    "error_id": "217",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.common;\n\nimport org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\nimport org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/217/DescReadWriteBatchData.java\nindex c299534e4de..f1b173a52ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/217/DescReadWriteBatchData.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.common;\n \n import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/217/DescReadWriteBatchData.java\nindex c299534e4de..f1b173a52ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/217/DescReadWriteBatchData.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.common;\n \n import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "275",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "305",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "310",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "325",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/217/DescReadWriteBatchData.java\nindex c299534e4de..7293d2ceba9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/217/DescReadWriteBatchData.java\n@@ -21,7 +21,6 @@ package org.apache.iotdb.tsfile.read.common;\n import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n import org.apache.iotdb.tsfile.utils.Binary;\n-\n import java.util.LinkedList;\n \n /**\n@@ -30,6 +29,7 @@ import java.util.LinkedList;\n  * timestamp should be ascending. It will be written in reverse, i.e. the timeRet will be [1, 1000].\n  * Then it can be handled the same as DescReadBatchData.\n  */\n+\n public class DescReadWriteBatchData extends DescReadBatchData {\n \n   public DescReadWriteBatchData(TSDataType dataType) {\n@@ -39,11 +39,9 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n     this.readCurArrayIndex = 0;\n     this.writeCurListIndex = 0;\n     this.writeCurArrayIndex = capacity - 1;\n-\n     timeRet = new LinkedList<>();\n     timeRet.add(new long[capacity]);\n     count = 0;\n-\n     switch (dataType) {\n       case BOOLEAN:\n         booleanRet = new LinkedList<>();\n@@ -80,6 +78,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v boolean data\n    */\n+\n   @Override\n   public void putBoolean(long t, boolean v) {\n     if (writeCurArrayIndex == -1) {\n@@ -90,23 +89,18 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         boolean[] newValueData = new boolean[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(booleanRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         booleanRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     booleanRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n@@ -117,6 +111,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v int data\n    */\n+\n   @Override\n   public void putInt(long t, int v) {\n     if (writeCurArrayIndex == -1) {\n@@ -127,23 +122,18 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         int[] newValueData = new int[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(intRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         intRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     intRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n@@ -154,6 +144,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v long data\n    */\n+\n   @Override\n   public void putLong(long t, long v) {\n     if (writeCurArrayIndex == -1) {\n@@ -164,23 +155,18 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         long[] newValueData = new long[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(longRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         longRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     longRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n@@ -191,6 +177,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v float data\n    */\n+\n   @Override\n   public void putFloat(long t, float v) {\n     if (writeCurArrayIndex == -1) {\n@@ -201,23 +188,18 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         float[] newValueData = new float[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(floatRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         floatRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     floatRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n@@ -228,6 +210,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v double data\n    */\n+\n   @Override\n   public void putDouble(long t, double v) {\n     if (writeCurArrayIndex == -1) {\n@@ -238,23 +221,18 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         double[] newValueData = new double[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(doubleRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         doubleRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     doubleRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n@@ -265,6 +243,7 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n    * @param t timestamp\n    * @param v binary data.\n    */\n+\n   @Override\n   public void putBinary(long t, Binary v) {\n     if (writeCurArrayIndex == -1) {\n@@ -275,38 +254,31 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n         writeCurArrayIndex = capacity - 1;\n       } else {\n         int newCapacity = capacity << 1;\n-\n         long[] newTimeData = new long[newCapacity];\n         Binary[] newValueData = new Binary[newCapacity];\n-\n         System.arraycopy(timeRet.get(0), 0, newTimeData, newCapacity - capacity, capacity);\n         System.arraycopy(binaryRet.get(0), 0, newValueData, newCapacity - capacity, capacity);\n-\n         timeRet.set(0, newTimeData);\n         binaryRet.set(0, newValueData);\n-\n         writeCurArrayIndex = newCapacity - capacity - 1;\n         capacity = newCapacity;\n       }\n     }\n     timeRet.get(0)[writeCurArrayIndex] = t;\n     binaryRet.get(0)[writeCurArrayIndex] = v;\n-\n     writeCurArrayIndex--;\n     count++;\n   }\n \n   @Override\n   public boolean hasCurrent() {\n-    return (readCurListIndex == 0 && readCurArrayIndex > writeCurArrayIndex)\n-        || (readCurListIndex > 0 && readCurArrayIndex >= 0);\n+    return (readCurListIndex == 0 && readCurArrayIndex > writeCurArrayIndex) || (readCurListIndex > 0 && readCurArrayIndex >= 0);\n   }\n \n   @Override\n   public void next() {\n     super.readCurArrayIndex--;\n-    if ((readCurListIndex == 0 && readCurArrayIndex <= writeCurArrayIndex)\n-        || readCurArrayIndex == -1) {\n+    if ((readCurListIndex == 0 && readCurArrayIndex <= writeCurArrayIndex) || readCurArrayIndex == -1) {\n       super.readCurListIndex--;\n       super.readCurArrayIndex = capacity - 1;\n     }\n@@ -320,54 +292,48 @@ public class DescReadWriteBatchData extends DescReadBatchData {\n \n   @Override\n   public long getTimeByIndex(int idx) {\n-    return timeRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return timeRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public long getLongByIndex(int idx) {\n-    return longRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return longRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public double getDoubleByIndex(int idx) {\n-    return doubleRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return doubleRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public int getIntByIndex(int idx) {\n-    return intRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return intRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public float getFloatByIndex(int idx) {\n-    return floatRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return floatRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public Binary getBinaryByIndex(int idx) {\n-    return binaryRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return binaryRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   @Override\n   public boolean getBooleanByIndex(int idx) {\n-    return booleanRet\n-        .get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n+    return booleanRet.get((idx + writeCurArrayIndex + 1) / capacity)[(idx + writeCurArrayIndex + 1) % capacity];\n   }\n \n   /**\n    * Read: When put data, the writeIndex increases while the readIndex remains 0. For descending\n    * read, we need to read from writeIndex to writeCurArrayIndex\n    */\n+\n   @Override\n   public BatchData flip() {\n     super.readCurArrayIndex = capacity - 1;\n     super.readCurListIndex = writeCurListIndex;\n     return this;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/217/DescReadWriteBatchData.java\nindex c299534e4de..f1b173a52ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/217/DescReadWriteBatchData.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.common;\n \n import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/217/DescReadWriteBatchData.java\nindex c299534e4de..f1b173a52ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/217/DescReadWriteBatchData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/217/DescReadWriteBatchData.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.common;\n \n import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
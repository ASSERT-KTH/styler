{
    "project_name": "graphfoundation-ongdb",
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/46/FreeListIdProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/46/FreeListIdProvider.java\nindex ab61b337b7c..adb668089e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/46/FreeListIdProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/46/FreeListIdProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -30,322 +31,322 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.goTo;\n \n class FreeListIdProvider implements IdProvider\n {\n-    interface Monitor\n-    {\n-        /**\n-         * Called when a page id was acquired for storing released ids into.\n-         *\n-         * @param freelistPageId page id of the acquired page.\n-         */\n-        default void acquiredFreelistPageId( long freelistPageId )\n-        {   // Empty by default\n-        }\n-\n-        /**\n-         * Called when a free-list page was released due to all its ids being acquired.\n-         * A released free-list page ends up in the free-list itself.\n-         *\n-         * @param freelistPageId page if of the released page.\n-         */\n-        default void releasedFreelistPageId( long freelistPageId )\n-        {   // Empty by default\n-        }\n-    }\n-\n-    static final Monitor NO_MONITOR = new Monitor()\n-    {   // Empty\n-    };\n-\n-    private final PagedFile pagedFile;\n-\n+  interface Monitor\n+  {\n     /**\n-     * {@link FreelistNode} governs physical layout of a free-list.\n-     */\n-    private final FreelistNode freelistNode;\n-\n-    /**\n-     * There's one free-list which both stable and unstable state (the state pages A/B) shares.\n-     * Each free list page links to a potential next free-list page, by using the last entry containing\n-     * page id to the next.\n-     * <p>\n-     * Each entry in the the free list consist of a page id and the generation in which it was freed.\n-     * <p>\n-     * Read pointer cannot go beyond entries belonging to stable generation.\n-     * About the free-list id/offset variables below:\n-     * <pre>\n-     * Every cell in picture contains generation, page id is omitted for briefness.\n-     * StableGeneration   = 1\n-     * UnstableGeneration = 2\n+     * Called when a page id was acquired for storing released ids into.\n      *\n-     *        {@link #readPos}                         {@link #writePos}\n-     *        v                               v\n-     *  \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n-     *  \u2502 1 \u2502 1 \u2502 1 \u2502 2 \u2502 2 \u2502 2 \u2502-->\u2502 2 \u2502 2 \u2502   \u2502   \u2502   \u2502   \u2502\n-     *  \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n-     *  ^                           ^\n-     *  {@link #readPageId}                  {@link #writePageId}\n-     * </pre>\n-     */\n-    private volatile long writePageId;\n-    private volatile long readPageId;\n-    private volatile int writePos;\n-    private volatile int readPos;\n-\n-    /**\n-     * Last allocated page id, used for allocating new ids as more data gets inserted into the tree.\n+     * @param freelistPageId page id of the acquired page.\n      */\n-    private volatile long lastId;\n+    default void acquiredFreelistPageId(long freelistPageId)\n+    {   // Empty by default\n+    }\n \n     /**\n-     * For monitoring internal free-list activity.\n+     * Called when a free-list page was released due to all its ids being acquired.\n+     * A released free-list page ends up in the free-list itself.\n+     *\n+     * @param freelistPageId page if of the released page.\n      */\n-    private final Monitor monitor;\n-\n-    FreeListIdProvider( PagedFile pagedFile, int pageSize, long lastId, Monitor monitor )\n-    {\n-        this.pagedFile = pagedFile;\n-        this.monitor = monitor;\n-        this.freelistNode = new FreelistNode( pageSize );\n-        this.lastId = lastId;\n+    default void releasedFreelistPageId(long freelistPageId)\n+    {   // Empty by default\n     }\n-\n-    void initialize( long lastId, long writePageId, long readPageId, int writePos, int readPos )\n-    {\n-        this.lastId = lastId;\n-        this.writePageId = writePageId;\n-        this.readPageId = readPageId;\n-        this.writePos = writePos;\n-        this.readPos = readPos;\n-    }\n-\n-    void initializeAfterCreation() throws IOException\n-    {\n-        // Allocate a new free-list page id and set both write/read free-list page id to it.\n-        writePageId = nextLastId();\n-        readPageId = writePageId;\n-\n-        try ( PageCursor cursor = pagedFile.io( writePageId, PagedFile.PF_SHARED_WRITE_LOCK ) )\n-        {\n-            goTo( cursor, \"free-list\", writePageId );\n-            FreelistNode.initialize( cursor );\n-            checkOutOfBounds( cursor );\n-        }\n-    }\n-\n-    @Override\n-    public long acquireNewId( long stableGeneration, long unstableGeneration ) throws IOException\n+  }\n+\n+  static final Monitor NO_MONITOR = new Monitor()\n+  {   // Empty\n+  };\n+\n+  private final PagedFile pagedFile;\n+\n+  /**\n+   * {@link FreelistNode} governs physical layout of a free-list.\n+   */\n+  private final FreelistNode freelistNode;\n+\n+  /**\n+   * There's one free-list which both stable and unstable state (the state pages A/B) shares.\n+   * Each free list page links to a potential next free-list page, by using the last entry containing\n+   * page id to the next.\n+   * <p>\n+   * Each entry in the the free list consist of a page id and the generation in which it was freed.\n+   * <p>\n+   * Read pointer cannot go beyond entries belonging to stable generation.\n+   * About the free-list id/offset variables below:\n+   * <pre>\n+   * Every cell in picture contains generation, page id is omitted for briefness.\n+   * StableGeneration   = 1\n+   * UnstableGeneration = 2\n+   *\n+   *        {@link #readPos}                         {@link #writePos}\n+   *        v                               v\n+   *  \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n+   *  \u2502 1 \u2502 1 \u2502 1 \u2502 2 \u2502 2 \u2502 2 \u2502-->\u2502 2 \u2502 2 \u2502   \u2502   \u2502   \u2502   \u2502\n+   *  \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+   *  ^                           ^\n+   *  {@link #readPageId}                  {@link #writePageId}\n+   * </pre>\n+   */\n+  private volatile long writePageId;\n+  private volatile long readPageId;\n+  private volatile int writePos;\n+  private volatile int readPos;\n+\n+  /**\n+   * Last allocated page id, used for allocating new ids as more data gets inserted into the tree.\n+   */\n+  private volatile long lastId;\n+\n+  /**\n+   * For monitoring internal free-list activity.\n+   */\n+  private final Monitor monitor;\n+\n+  FreeListIdProvider(PagedFile pagedFile, int pageSize, long lastId, Monitor monitor)\n+  {\n+    this.pagedFile = pagedFile;\n+    this.monitor = monitor;\n+    this.freelistNode = new FreelistNode(pageSize);\n+    this.lastId = lastId;\n+  }\n+\n+  void initialize(long lastId, long writePageId, long readPageId, int writePos, int readPos)\n+  {\n+    this.lastId = lastId;\n+    this.writePageId = writePageId;\n+    this.readPageId = readPageId;\n+    this.writePos = writePos;\n+    this.readPos = readPos;\n+  }\n+\n+  void initializeAfterCreation() throws IOException\n+  {\n+    // Allocate a new free-list page id and set both write/read free-list page id to it.\n+    writePageId = nextLastId();\n+    readPageId = writePageId;\n+\n+    try (PageCursor cursor = pagedFile.io(writePageId, PagedFile.PF_SHARED_WRITE_LOCK))\n     {\n-        return acquireNewId( stableGeneration, unstableGeneration, true );\n+      goTo(cursor, \"free-list\", writePageId);\n+      FreelistNode.initialize(cursor);\n+      checkOutOfBounds(cursor);\n     }\n-\n-    private long acquireNewId( long stableGeneration, long unstableGeneration, boolean allowTakeLastFromPage )\n-            throws IOException\n+  }\n+\n+  @Override\n+  public long acquireNewId(long stableGeneration, long unstableGeneration) throws IOException\n+  {\n+    return acquireNewId(stableGeneration, unstableGeneration, true);\n+  }\n+\n+  private long acquireNewId(long stableGeneration, long unstableGeneration, boolean allowTakeLastFromPage)\n+      throws IOException\n+  {\n+    // Acquire id from free-list or end of store file\n+    long acquiredId = acquireNewIdFromFreelistOrEnd(stableGeneration, unstableGeneration, allowTakeLastFromPage);\n+\n+    // Zap the page, i.e. set all bytes to zero\n+    try (PageCursor cursor = pagedFile.io(acquiredId, PagedFile.PF_SHARED_WRITE_LOCK))\n     {\n-        // Acquire id from free-list or end of store file\n-        long acquiredId = acquireNewIdFromFreelistOrEnd( stableGeneration, unstableGeneration, allowTakeLastFromPage );\n-\n-        // Zap the page, i.e. set all bytes to zero\n-        try ( PageCursor cursor = pagedFile.io( acquiredId, PagedFile.PF_SHARED_WRITE_LOCK ) )\n-        {\n-            PageCursorUtil.goTo( cursor, \"newly allocated free-list page\", acquiredId );\n-            cursor.zapPage();\n-            // don't initialize node here since this acquisition can be used both for tree nodes\n-            // as well as free-list nodes.\n-        }\n-        return acquiredId;\n+      PageCursorUtil.goTo(cursor, \"newly allocated free-list page\", acquiredId);\n+      cursor.zapPage();\n+      // don't initialize node here since this acquisition can be used both for tree nodes\n+      // as well as free-list nodes.\n     }\n-\n-    private long acquireNewIdFromFreelistOrEnd( long stableGeneration, long unstableGeneration,\n-            boolean allowTakeLastFromPage ) throws IOException\n+    return acquiredId;\n+  }\n+\n+  private long acquireNewIdFromFreelistOrEnd(long stableGeneration, long unstableGeneration,\n+                                             boolean allowTakeLastFromPage) throws IOException\n+  {\n+    if ((readPageId != writePageId || readPos < writePos) &&\n+        (allowTakeLastFromPage || readPos < freelistNode.maxEntries() - 1))\n     {\n-        if ( (readPageId != writePageId || readPos < writePos) &&\n-                (allowTakeLastFromPage || readPos < freelistNode.maxEntries() - 1) )\n+      // It looks like reader isn't even caught up to the writer page-wise,\n+      // or the read pos is < write pos so check if we can grab the next id (generation could still mismatch).\n+      try (PageCursor cursor = pagedFile.io(readPageId, PagedFile.PF_SHARED_READ_LOCK))\n+      {\n+        if (!cursor.next())\n         {\n-            // It looks like reader isn't even caught up to the writer page-wise,\n-            // or the read pos is < write pos so check if we can grab the next id (generation could still mismatch).\n-            try ( PageCursor cursor = pagedFile.io( readPageId, PagedFile.PF_SHARED_READ_LOCK ) )\n-            {\n-                if ( !cursor.next() )\n-                {\n-                    throw new IOException( \"Couldn't go to free-list read page \" + readPageId );\n-                }\n-\n-                long resultPageId;\n-                do\n-                {\n-                    resultPageId = freelistNode.read( cursor, stableGeneration, readPos );\n-                }\n-                while ( cursor.shouldRetry() );\n-\n-                if ( resultPageId != FreelistNode.NO_PAGE_ID )\n-                {\n-                    // FreelistNode compares generation and so this means that we have an available\n-                    // id in the free list which we can acquire from a stable generation. Increment readPos\n-                    readPos++;\n-                    if ( readPos >= freelistNode.maxEntries() )\n-                    {\n-                        // The current reader page is exhausted, go to the next free-list page.\n-                        readPos = 0;\n-                        do\n-                        {\n-                            readPageId = FreelistNode.next( cursor );\n-                        }\n-                        while ( cursor.shouldRetry() );\n-\n-                        // Put the exhausted free-list page id itself on the free-list\n-                        long exhaustedFreelistPageId = cursor.getCurrentPageId();\n-                        releaseId( stableGeneration, unstableGeneration, exhaustedFreelistPageId );\n-                        monitor.releasedFreelistPageId( exhaustedFreelistPageId );\n-                    }\n-                    return resultPageId;\n-                }\n-            }\n+          throw new IOException(\"Couldn't go to free-list read page \" + readPageId);\n         }\n \n-        // Fall-back to acquiring at the end of the file\n-        return nextLastId();\n-    }\n-\n-    private long nextLastId()\n-    {\n-        return ++lastId;\n-    }\n-\n-    @Override\n-    public void releaseId( long stableGeneration, long unstableGeneration, long id ) throws IOException\n-    {\n-        try ( PageCursor cursor = pagedFile.io( writePageId, PagedFile.PF_SHARED_WRITE_LOCK ) )\n+        long resultPageId;\n+        do\n         {\n-            PageCursorUtil.goTo( cursor, \"free-list write page\", writePageId );\n-            freelistNode.write( cursor, unstableGeneration, id, writePos );\n-            writePos++;\n+          resultPageId = freelistNode.read(cursor, stableGeneration, readPos);\n         }\n+        while (cursor.shouldRetry());\n \n-        if ( writePos >= freelistNode.maxEntries() )\n+        if (resultPageId != FreelistNode.NO_PAGE_ID)\n         {\n-            // Current free-list write page is full, allocate a new one.\n-            long nextFreelistPage = acquireNewId( stableGeneration, unstableGeneration, false );\n-            try ( PageCursor cursor = pagedFile.io( writePageId, PagedFile.PF_SHARED_WRITE_LOCK ) )\n+          // FreelistNode compares generation and so this means that we have an available\n+          // id in the free list which we can acquire from a stable generation. Increment readPos\n+          readPos++;\n+          if (readPos >= freelistNode.maxEntries())\n+          {\n+            // The current reader page is exhausted, go to the next free-list page.\n+            readPos = 0;\n+            do\n             {\n-                PageCursorUtil.goTo( cursor, \"free-list write page\", writePageId );\n-                FreelistNode.initialize( cursor );\n-                // Link previous --> new writer page\n-                FreelistNode.setNext( cursor, nextFreelistPage );\n+              readPageId = FreelistNode.next(cursor);\n             }\n-            writePageId = nextFreelistPage;\n-            writePos = 0;\n-            monitor.acquiredFreelistPageId( nextFreelistPage );\n+            while (cursor.shouldRetry());\n+\n+            // Put the exhausted free-list page id itself on the free-list\n+            long exhaustedFreelistPageId = cursor.getCurrentPageId();\n+            releaseId(stableGeneration, unstableGeneration, exhaustedFreelistPageId);\n+            monitor.releasedFreelistPageId(exhaustedFreelistPageId);\n+          }\n+          return resultPageId;\n         }\n+      }\n     }\n \n-    /**\n-     * Visits all page ids currently in use as free-list pages.\n-     *\n-     * @param visitor {@link LongConsumer} getting calls about free-list page ids.\n-     * @throws IOException on {@link PageCursor} error.\n-     */\n-    void visitFreelistPageIds( LongConsumer visitor ) throws IOException\n-    {\n-        if ( readPageId == FreelistNode.NO_PAGE_ID )\n-        {\n-            return;\n-        }\n+    // Fall-back to acquiring at the end of the file\n+    return nextLastId();\n+  }\n \n-        long pageId = readPageId;\n-        visitor.accept( pageId );\n-        try ( PageCursor cursor = pagedFile.io( pageId, PagedFile.PF_SHARED_READ_LOCK ) )\n-        {\n-            while ( pageId != writePageId )\n-            {\n-                PageCursorUtil.goTo( cursor, \"free-list\", pageId );\n-                long nextFreelistPageId;\n-                do\n-                {\n-                    nextFreelistPageId = FreelistNode.next( cursor );\n-                }\n-                while ( cursor.shouldRetry() );\n-                visitor.accept( nextFreelistPageId );\n-                pageId = nextFreelistPageId;\n-            }\n-        }\n-    }\n+  private long nextLastId()\n+  {\n+    return ++lastId;\n+  }\n \n-    /**\n-     * Visits all unacquired ids, i.e. ids that have been {@link #releaseId(long, long, long) released},\n-     * but not yet {@link #acquireNewId(long, long) acquired}.\n-     * Calling this method will not change the free-list.\n-     * All released ids will be visited, even ones released in unstable generation.\n-     *\n-     * @param visitor {@link LongConsumer} getting calls about unacquired ids.\n-     * @throws IOException on {@link PageCursor} error.\n-     */\n-    void visitUnacquiredIds( LongConsumer visitor, long stableGeneration ) throws IOException\n+  @Override\n+  public void releaseId(long stableGeneration, long unstableGeneration, long id) throws IOException\n+  {\n+    try (PageCursor cursor = pagedFile.io(writePageId, PagedFile.PF_SHARED_WRITE_LOCK))\n     {\n-        if ( readPageId == FreelistNode.NO_PAGE_ID )\n-        {\n-            return;\n-        }\n-\n-        long pageId = readPageId;\n-        int pos = readPos;\n-        try ( PageCursor cursor = pagedFile.io( pageId, PagedFile.PF_SHARED_READ_LOCK ) )\n-        {\n-            while ( pageId != writePageId || pos < writePos )\n-            {\n-                PageCursorUtil.goTo( cursor, \"free-list\", pageId );\n-\n-                // Read next un-acquired id\n-                long unacquiredId;\n-                long nextFreelistPageId;\n-                do\n-                {\n-                    unacquiredId = freelistNode.read( cursor, stableGeneration, pos );\n-                    nextFreelistPageId = FreelistNode.next( cursor );\n-                }\n-                while ( cursor.shouldRetry() );\n-\n-                // Tell visitor\n-                visitor.accept( unacquiredId );\n-\n-                // Go to next id\n-                if ( ++pos == freelistNode.maxEntries() )\n-                {\n-                    // Go to next free-list page\n-                    pos = 0;\n-                    pageId = nextFreelistPageId;\n-                }\n-            }\n-        }\n+      PageCursorUtil.goTo(cursor, \"free-list write page\", writePageId);\n+      freelistNode.write(cursor, unstableGeneration, id, writePos);\n+      writePos++;\n     }\n \n-    long lastId()\n+    if (writePos >= freelistNode.maxEntries())\n     {\n-        return lastId;\n+      // Current free-list write page is full, allocate a new one.\n+      long nextFreelistPage = acquireNewId(stableGeneration, unstableGeneration, false);\n+      try (PageCursor cursor = pagedFile.io(writePageId, PagedFile.PF_SHARED_WRITE_LOCK))\n+      {\n+        PageCursorUtil.goTo(cursor, \"free-list write page\", writePageId);\n+        FreelistNode.initialize(cursor);\n+        // Link previous --> new writer page\n+        FreelistNode.setNext(cursor, nextFreelistPage);\n+      }\n+      writePageId = nextFreelistPage;\n+      writePos = 0;\n+      monitor.acquiredFreelistPageId(nextFreelistPage);\n     }\n-\n-    long writePageId()\n+  }\n+\n+  /**\n+   * Visits all page ids currently in use as free-list pages.\n+   *\n+   * @param visitor {@link LongConsumer} getting calls about free-list page ids.\n+   * @throws IOException on {@link PageCursor} error.\n+   */\n+  void visitFreelistPageIds(LongConsumer visitor) throws IOException\n+  {\n+    if (readPageId == FreelistNode.NO_PAGE_ID)\n     {\n-        return writePageId;\n+      return;\n     }\n \n-    long readPageId()\n+    long pageId = readPageId;\n+    visitor.accept(pageId);\n+    try (PageCursor cursor = pagedFile.io(pageId, PagedFile.PF_SHARED_READ_LOCK))\n     {\n-        return readPageId;\n+      while (pageId != writePageId)\n+      {\n+        PageCursorUtil.goTo(cursor, \"free-list\", pageId);\n+        long nextFreelistPageId;\n+        do\n+        {\n+          nextFreelistPageId = FreelistNode.next(cursor);\n+        }\n+        while (cursor.shouldRetry());\n+        visitor.accept(nextFreelistPageId);\n+        pageId = nextFreelistPageId;\n+      }\n     }\n-\n-    int writePos()\n+  }\n+\n+  /**\n+   * Visits all unacquired ids, i.e. ids that have been {@link #releaseId(long, long, long) released},\n+   * but not yet {@link #acquireNewId(long, long) acquired}.\n+   * Calling this method will not change the free-list.\n+   * All released ids will be visited, even ones released in unstable generation.\n+   *\n+   * @param visitor {@link LongConsumer} getting calls about unacquired ids.\n+   * @throws IOException on {@link PageCursor} error.\n+   */\n+  void visitUnacquiredIds(LongConsumer visitor, long stableGeneration) throws IOException\n+  {\n+    if (readPageId == FreelistNode.NO_PAGE_ID)\n     {\n-        return writePos;\n+      return;\n     }\n \n-    int readPos()\n+    long pageId = readPageId;\n+    int pos = readPos;\n+    try (PageCursor cursor = pagedFile.io(pageId, PagedFile.PF_SHARED_READ_LOCK))\n     {\n-        return readPos;\n-    }\n+      while (pageId != writePageId || pos < writePos)\n+      {\n+        PageCursorUtil.goTo(cursor, \"free-list\", pageId);\n+\n+        // Read next un-acquired id\n+        long unacquiredId;\n+        long nextFreelistPageId;\n+        do\n+        {\n+          unacquiredId = freelistNode.read(cursor, stableGeneration, pos);\n+          nextFreelistPageId = FreelistNode.next(cursor);\n+        }\n+        while (cursor.shouldRetry());\n \n-    // test-access method\n-    int entriesPerPage()\n-    {\n-        return freelistNode.maxEntries();\n+        // Tell visitor\n+        visitor.accept(unacquiredId);\n+\n+        // Go to next id\n+        if (++pos == freelistNode.maxEntries())\n+        {\n+          // Go to next free-list page\n+          pos = 0;\n+          pageId = nextFreelistPageId;\n+        }\n+      }\n     }\n+  }\n+\n+  long lastId()\n+  {\n+    return lastId;\n+  }\n+\n+  long writePageId()\n+  {\n+    return writePageId;\n+  }\n+\n+  long readPageId()\n+  {\n+    return readPageId;\n+  }\n+\n+  int writePos()\n+  {\n+    return writePos;\n+  }\n+\n+  int readPos()\n+  {\n+    return readPos;\n+  }\n+\n+  // test-access method\n+  int entriesPerPage()\n+  {\n+    return freelistNode.maxEntries();\n+  }\n }\n",
            "diff_size": 463
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1714",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1714/AuthorizationDisabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1714/AuthorizationDisabledFilter.java\nindex 1d7699fcca4..741d1854f97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1714/AuthorizationDisabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1714/AuthorizationDisabledFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.dbms;\n \n import java.io.IOException;\n@@ -37,11 +38,11 @@ import static javax.servlet.http.HttpServletRequest.BASIC_AUTH;\n public class AuthorizationDisabledFilter extends AuthorizationFilter\n {\n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException\n     {\n-        validateRequestType( servletRequest );\n-        validateResponseType( servletResponse );\n+        validateRequestType(servletRequest);\n+        validateResponseType(servletResponse);\n \n         final HttpServletRequest request = (HttpServletRequest) servletRequest;\n         final HttpServletResponse response = (HttpServletResponse) servletResponse;\n@@ -49,17 +50,16 @@ public class AuthorizationDisabledFilter extends AuthorizationFilter\n         try\n         {\n             LoginContext loginContext = getAuthDisabledLoginContext();\n-            String userAgent = request.getHeader( HttpHeaders.USER_AGENT );\n+            String userAgent = request.getHeader(HttpHeaders.USER_AGENT);\n \n-            JettyHttpConnection.updateUserForCurrentConnection( loginContext.subject().username(), userAgent );\n+            JettyHttpConnection.updateUserForCurrentConnection(loginContext.subject().username(), userAgent);\n \n             filterChain.doFilter(\n-                    new AuthorizedRequestWrapper( BASIC_AUTH, \"neo4j\", request, loginContext ),\n-                    servletResponse );\n-        }\n-        catch ( AuthorizationViolationException e )\n+              new AuthorizedRequestWrapper(BASIC_AUTH, \"neo4j\", request, loginContext),\n+              servletResponse);\n+        } catch (AuthorizationViolationException e)\n         {\n-            unauthorizedAccess( e.getMessage() ).accept( response );\n+            unauthorizedAccess(e.getMessage()).accept(response);\n         }\n     }\n \n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
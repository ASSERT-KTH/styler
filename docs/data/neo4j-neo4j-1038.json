{
    "project_name": "neo4j-neo4j",
    "error_id": "1038",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1038/IndexDefineCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1038/IndexDefineCommand.java\nindex 15a2f83d460..8bf708c355c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1038/IndexDefineCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1038/IndexDefineCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage.legacy;\n \n import org.eclipse.collections.api.map.primitive.IntObjectMap;\n@@ -47,7 +48,7 @@ import static org.neo4j.io.fs.IoPrimitiveUtils.write2bLengthAndString;\n  * to ids instead of names. This reduced the number of bytes needed for commands\n  * roughly 50% for transaction with more than a couple of commands in it,\n  * depending on the size of the value.\n- *\n+ * <p>\n  * After this command has been created it will act as a factory for other\n  * commands so that it can spit out correct index name and key ids.\n  */\n@@ -61,104 +62,104 @@ public class IndexDefineCommand extends Command\n     private MutableIntObjectMap<String> idToIndexName = new IntObjectHashMap<>();\n     private MutableIntObjectMap<String> idToKey = new IntObjectHashMap<>();\n \n-    public void init( MutableObjectIntMap<String> indexNames, MutableObjectIntMap<String> keys )\n+    public void init(MutableObjectIntMap<String> indexNames, MutableObjectIntMap<String> keys)\n     {\n-        this.indexNameIdRange = requireNonNull( indexNames, \"indexNames\" );\n-        this.keyIdRange = requireNonNull( keys, \"keys\" );\n+        this.indexNameIdRange = requireNonNull(indexNames, \"indexNames\");\n+        this.keyIdRange = requireNonNull(keys, \"keys\");\n         this.idToIndexName = indexNames.flipUniqueValues();\n         this.idToKey = keys.flipUniqueValues();\n     }\n \n-    private static String getFromMap( IntObjectMap<String> map, int id )\n+    private static String getFromMap(IntObjectMap<String> map, int id)\n     {\n-        if ( id == -1 )\n+        if (id == -1)\n         {\n             return null;\n         }\n-        String result = map.get( id );\n-        if ( result == null )\n+        String result = map.get(id);\n+        if (result == null)\n         {\n-            throw new IllegalArgumentException( String.valueOf( id ) );\n+            throw new IllegalArgumentException(String.valueOf(id));\n         }\n         return result;\n     }\n \n-    public String getKey( int id )\n+    public String getKey(int id)\n     {\n-        return getFromMap( idToKey, id );\n+        return getFromMap(idToKey, id);\n     }\n \n-    public int getOrAssignIndexNameId( String indexName )\n+    public int getOrAssignIndexNameId(String indexName)\n     {\n-        return getOrAssignId( indexNameIdRange, idToIndexName, nextIndexNameId, indexName );\n+        return getOrAssignId(indexNameIdRange, idToIndexName, nextIndexNameId, indexName);\n     }\n \n-    public int getOrAssignKeyId( String key )\n+    public int getOrAssignKeyId(String key)\n     {\n-        return getOrAssignId( keyIdRange, idToKey, nextKeyId, key );\n+        return getOrAssignId(keyIdRange, idToKey, nextKeyId, key);\n     }\n \n-    private int getOrAssignId( MutableObjectIntMap<String> stringToId, MutableIntObjectMap<String> idToString,\n-            AtomicInteger nextId, String string )\n+    private int getOrAssignId(MutableObjectIntMap<String> stringToId, MutableIntObjectMap<String> idToString,\n+                              AtomicInteger nextId, String string)\n     {\n-        if ( string == null )\n+        if (string == null)\n         {\n             return -1;\n         }\n \n-        if ( stringToId.containsKey( string ) )\n+        if (stringToId.containsKey(string))\n         {\n-            return stringToId.get( string );\n+            return stringToId.get(string);\n         }\n \n         int id = nextId.incrementAndGet();\n-        if ( id > HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID )\n+        if (id > HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID)\n         {\n-            throw new IllegalStateException( format(\n-                    \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n-                    HIGHEST_POSSIBLE_ID + 1 ) );\n+            throw new IllegalStateException(format(\n+              \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n+              HIGHEST_POSSIBLE_ID + 1));\n         }\n \n-        stringToId.put( string, id );\n-        idToString.put( id, string );\n+        stringToId.put(string, id);\n+        idToString.put(id, string);\n         return id;\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n-        if ( !super.equals( o ) )\n+        if (!super.equals(o))\n         {\n             return false;\n         }\n         IndexDefineCommand that = (IndexDefineCommand) o;\n         return nextIndexNameId.get() == that.nextIndexNameId.get() &&\n-               nextKeyId.get() == that.nextKeyId.get() &&\n-               Objects.equals( indexNameIdRange, that.indexNameIdRange ) &&\n-               Objects.equals( keyIdRange, that.keyIdRange ) &&\n-               Objects.equals( idToIndexName, that.idToIndexName ) &&\n-               Objects.equals( idToKey, that.idToKey );\n+          nextKeyId.get() == that.nextKeyId.get() &&\n+          Objects.equals(indexNameIdRange, that.indexNameIdRange) &&\n+          Objects.equals(keyIdRange, that.keyIdRange) &&\n+          Objects.equals(idToIndexName, that.idToIndexName) &&\n+          Objects.equals(idToKey, that.idToKey);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( super.hashCode(), nextIndexNameId.get(), nextKeyId.get(), indexNameIdRange, keyIdRange,\n-                idToIndexName, idToKey );\n+        return Objects.hash(super.hashCode(), nextIndexNameId.get(), nextKeyId.get(), indexNameIdRange, keyIdRange,\n+          idToIndexName, idToKey);\n     }\n \n     @Override\n-    public boolean handle( CommandVisitor visitor ) throws IOException\n+    public boolean handle(CommandVisitor visitor) throws IOException\n     {\n-        throw new UnsupportedOperationException( \"Legacy command can't be applied.\" );\n+        throw new UnsupportedOperationException(\"Legacy command can't be applied.\");\n     }\n \n     @VisibleForTesting\n@@ -180,39 +181,37 @@ public class IndexDefineCommand extends Command\n     }\n \n     @Override\n-    public void serialize( WritableChannel channel ) throws IOException\n+    public void serialize(WritableChannel channel) throws IOException\n     {\n-        channel.put( NeoCommandType.INDEX_DEFINE_COMMAND );\n+        channel.put(NeoCommandType.INDEX_DEFINE_COMMAND);\n         byte zero = 0;\n-        IndexCommand.writeIndexCommandHeader( channel, zero, zero, zero, zero, zero, zero, zero );\n+        IndexCommand.writeIndexCommandHeader(channel, zero, zero, zero, zero, zero, zero, zero);\n         try\n         {\n-            writeMap( channel, indexNameIdRange );\n-            writeMap( channel, keyIdRange );\n-        }\n-        catch ( UncheckedIOException e )\n+            writeMap(channel, indexNameIdRange);\n+            writeMap(channel, keyIdRange);\n+        } catch (UncheckedIOException e)\n         {\n-            throw new IOException( e );\n+            throw new IOException(e);\n         }\n     }\n \n-    private static void writeMap( WritableChannel channel, ObjectIntMap<String> map ) throws IOException\n+    private static void writeMap(WritableChannel channel, ObjectIntMap<String> map) throws IOException\n     {\n         assert map.size() <= HIGHEST_POSSIBLE_ID : \"Can not write map with size larger than 2 bytes. Actual size \" + map.size();\n-        channel.putShort( (short) map.size() );\n+        channel.putShort((short) map.size());\n \n-        map.forEachKeyValue( ( key, id ) ->\n+        map.forEachKeyValue((key, id) ->\n         {\n             assert id <= HIGHEST_POSSIBLE_ID : \"Can not write id larger than 2 bytes. Actual value \" + id;\n             try\n             {\n-                write2bLengthAndString( channel, key );\n-                channel.putShort( (short) id );\n-            }\n-            catch ( IOException e )\n+                write2bLengthAndString(channel, key);\n+                channel.putShort((short) id);\n+            } catch (IOException e)\n             {\n-                throw new UncheckedIOException( e );\n+                throw new UncheckedIOException(e);\n             }\n-        } );\n+        });\n     }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
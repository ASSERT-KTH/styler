{
    "project_name": "twilio-twilio-java",
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "196",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/85/QueryReader.java\nindex 16344b8bfed..139fb599476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/85/QueryReader.java\n@@ -193,7 +193,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/85/QueryReader.java\nindex 16344b8bfed..ffac25fa40b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/85/QueryReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.autopilot.v1.assistant;\n@@ -193,7 +193,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/85/QueryReader.java\nindex 16344b8bfed..06713d212c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/85/QueryReader.java\n@@ -24,6 +24,7 @@ import com.twilio.rest.Domains;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class QueryReader extends Reader<Query> {\n     private final String pathAssistantSid;\n     private String language;\n@@ -37,6 +38,8 @@ public class QueryReader extends Reader<Query> {\n      * @param pathAssistantSid The SID of the Assistant that is the parent of the\n      *                         resources to read\n      */\n+\n+\n     public QueryReader(final String pathAssistantSid) {\n         this.pathAssistantSid = pathAssistantSid;\n     }\n@@ -51,6 +54,8 @@ public class QueryReader extends Reader<Query> {\n      *                 used by the Query resources to read\n      * @return this\n      */\n+\n+\n     public QueryReader setLanguage(final String language) {\n         this.language = language;\n         return this;\n@@ -64,6 +69,8 @@ public class QueryReader extends Reader<Query> {\n      * @param modelBuild The SID or unique name of the Model Build to be queried\n      * @return this\n      */\n+\n+\n     public QueryReader setModelBuild(final String modelBuild) {\n         this.modelBuild = modelBuild;\n         return this;\n@@ -76,6 +83,8 @@ public class QueryReader extends Reader<Query> {\n      * @param status The status of the resources to read\n      * @return this\n      */\n+\n+\n     public QueryReader setStatus(final String status) {\n         this.status = status;\n         return this;\n@@ -89,6 +98,8 @@ public class QueryReader extends Reader<Query> {\n      *                    <a href=\"https://www.twilio.com/docs/autopilot/api/dialogue\">Dialogue</a>.\n      * @return this\n      */\n+\n+\n     public QueryReader setDialogueSid(final String dialogueSid) {\n         this.dialogueSid = dialogueSid;\n         return this;\n@@ -100,6 +111,7 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Query> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -111,13 +123,14 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Query> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.AUTOPILOT.toString(),\n-            \"/v1/Assistants/\" + this.pathAssistantSid + \"/Queries\"\n+                              HttpMethod.GET,\n+                              Domains.AUTOPILOT.toString(),\n+                              \"/v1/Assistants/\" + this.pathAssistantSid + \"/Queries\"\n         );\n \n         addQueryParams(request);\n@@ -131,14 +144,12 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Query> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Query> getPage(final String targetUrl,\n+                               final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -149,13 +160,11 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Query> nextPage(final Page<Query> page,\n                                 final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.AUTOPILOT.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.AUTOPILOT.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -166,13 +175,11 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Query> previousPage(final Page<Query> page,\n                                     final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.AUTOPILOT.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.AUTOPILOT.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -183,9 +190,11 @@ public class QueryReader extends Reader<Query> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Query> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Query> pageForRequest(final TwilioRestClient client,\n+                                       final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Query read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -193,15 +202,11 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"queries\",\n-            response.getContent(),\n-            Query.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"queries\", response.getContent(), Query.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -209,6 +214,8 @@ public class QueryReader extends Reader<Query> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (language != null) {\n             request.addQueryParam(\"Language\", language);\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/85/QueryReader.java\nindex 16344b8bfed..139fb599476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/85/QueryReader.java\n@@ -193,7 +193,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/85/QueryReader.java\nindex 16344b8bfed..363bfaf96d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/85/QueryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/85/QueryReader.java\n@@ -193,7 +193,8 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
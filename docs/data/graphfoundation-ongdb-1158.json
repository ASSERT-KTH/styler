{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1158",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1158/LifecycleException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1158/LifecycleException.java\nindex 70094cec4aa..1e240194b23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1158/LifecycleException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1158/LifecycleException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.lifecycle;\n \n /**\n@@ -27,73 +28,72 @@ public class LifecycleException\n     extends RuntimeException\n {\n \n-    public LifecycleException( Object instance, LifecycleStatus from, LifecycleStatus to, Throwable cause )\n-    {\n-        super( humanReadableMessage( instance, from, to, cause ), cause );\n-    }\n+  public LifecycleException(Object instance, LifecycleStatus from, LifecycleStatus to, Throwable cause)\n+  {\n+    super(humanReadableMessage(instance, from, to, cause), cause);\n+  }\n \n-    public LifecycleException( String message, Throwable cause )\n-    {\n-        super( message, cause );\n-    }\n+  public LifecycleException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n \n-    private static String humanReadableMessage( Object instance, LifecycleStatus from,\n-            LifecycleStatus to, Throwable cause )\n+  private static String humanReadableMessage(Object instance, LifecycleStatus from,\n+                                             LifecycleStatus to, Throwable cause)\n+  {\n+    String instanceStr = String.valueOf(instance);\n+    StringBuilder message = new StringBuilder();\n+    switch (to)\n     {\n-        String instanceStr = String.valueOf( instance );\n-        StringBuilder message = new StringBuilder();\n-        switch ( to )\n+      case STOPPED:\n+        if (from == LifecycleStatus.NONE)\n         {\n-            case STOPPED:\n-                if ( from == LifecycleStatus.NONE )\n-                {\n-                    message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to initialize\" );\n-                }\n-                else if ( from == LifecycleStatus.STARTED )\n-                {\n-                    message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to stop\" );\n-                }\n-                break;\n-            case STARTED:\n-                if ( from == LifecycleStatus.STOPPED )\n-                {\n-                    message.append( \"Component '\" ).append( instanceStr )\n-                           .append( \"' was successfully initialized, but failed to start\" );\n-                }\n-                break;\n-            case SHUTDOWN:\n-                message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to shut down\" );\n-                break;\n-            default:\n-                break;\n-        }\n-        if ( message.length() == 0 )\n+          message.append(\"Component '\").append(instanceStr).append(\"' failed to initialize\");\n+        } else if (from == LifecycleStatus.STARTED)\n         {\n-            message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to transition from \" )\n-                   .append( from.name().toLowerCase() ).append( \" to \" ).append( to.name().toLowerCase() );\n+          message.append(\"Component '\").append(instanceStr).append(\"' failed to stop\");\n         }\n-        message.append( '.' );\n-        if ( cause != null )\n+        break;\n+      case STARTED:\n+        if (from == LifecycleStatus.STOPPED)\n         {\n-            Throwable root = rootCause( cause );\n-            message.append( \" Please see the attached cause exception \\\"\" ).append( root.getMessage() ).append( '\"' );\n-            if ( root.getCause() != null )\n-            {\n-                message.append( \" (root cause cycle detected)\" );\n-            }\n-            message.append( '.' );\n+          message.append(\"Component '\").append(instanceStr)\n+              .append(\"' was successfully initialized, but failed to start\");\n         }\n-\n-        return message.toString();\n+        break;\n+      case SHUTDOWN:\n+        message.append(\"Component '\").append(instanceStr).append(\"' failed to shut down\");\n+        break;\n+      default:\n+        break;\n+    }\n+    if (message.length() == 0)\n+    {\n+      message.append(\"Component '\").append(instanceStr).append(\"' failed to transition from \")\n+          .append(from.name().toLowerCase()).append(\" to \").append(to.name().toLowerCase());\n+    }\n+    message.append('.');\n+    if (cause != null)\n+    {\n+      Throwable root = rootCause(cause);\n+      message.append(\" Please see the attached cause exception \\\"\").append(root.getMessage()).append('\"');\n+      if (root.getCause() != null)\n+      {\n+        message.append(\" (root cause cycle detected)\");\n+      }\n+      message.append('.');\n     }\n \n-    private static Throwable rootCause( Throwable cause )\n+    return message.toString();\n+  }\n+\n+  private static Throwable rootCause(Throwable cause)\n+  {\n+    int i = 0; // Guard against infinite self-cause exception-loops.\n+    while (cause.getCause() != null && i++ < 100)\n     {\n-        int i = 0; // Guard against infinite self-cause exception-loops.\n-        while ( cause.getCause() != null && i++ < 100 )\n-        {\n-            cause = cause.getCause();\n-        }\n-        return cause;\n+      cause = cause.getCause();\n     }\n+    return cause;\n+  }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1158/LifecycleException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1158/LifecycleException.java\nindex 70094cec4aa..25c092e6be8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1158/LifecycleException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1158/LifecycleException.java\n@@ -23,10 +23,8 @@ package org.neo4j.kernel.lifecycle;\n  * This exception is thrown by LifeSupport if a lifecycle transition fails. If many exceptions occur\n  * they will be chained through the cause exception mechanism.\n  */\n-public class LifecycleException\n-    extends RuntimeException\n+public class LifecycleException extends RuntimeException\n {\n-\n     public LifecycleException( Object instance, LifecycleStatus from, LifecycleStatus to, Throwable cause )\n     {\n         super( humanReadableMessage( instance, from, to, cause ), cause );\n@@ -44,7 +42,7 @@ public class LifecycleException\n         StringBuilder message = new StringBuilder();\n         switch ( to )\n         {\n-            case STOPPED:\n+case STOPPED:\n                 if ( from == LifecycleStatus.NONE )\n                 {\n                     message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to initialize\" );\n@@ -57,21 +55,19 @@ public class LifecycleException\n             case STARTED:\n                 if ( from == LifecycleStatus.STOPPED )\n                 {\n-                    message.append( \"Component '\" ).append( instanceStr )\n-                           .append( \"' was successfully initialized, but failed to start\" );\n-                }\n+                    message.append( \"Component '\" ).append( instanceStr ).append( \"' was successfully initialized, but failed to start\" );\n+    }\n                 break;\n             case SHUTDOWN:\n                 message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to shut down\" );\n                 break;\n             default:\n                 break;\n-        }\n+    }\n         if ( message.length() == 0 )\n         {\n-            message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to transition from \" )\n-                   .append( from.name().toLowerCase() ).append( \" to \" ).append( to.name().toLowerCase() );\n-        }\n+            message.append( \"Component '\" ).append( instanceStr ).append( \"' failed to transition from \" ).append( from.name().toLowerCase() ).append( \" to \" ).append( to.name().toLowerCase() );\n+    }\n         message.append( '.' );\n         if ( cause != null )\n         {\n@@ -94,6 +90,7 @@ public class LifecycleException\n         {\n             cause = cause.getCause();\n         }\n-        return cause;\n+\n+return cause;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
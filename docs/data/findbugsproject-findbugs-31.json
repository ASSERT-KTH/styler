{
    "project_name": "findbugsproject-findbugs",
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "58",
                "column": "8",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n    int tp3(Object x) {\n       \tObject y = null;\n        if (x != null)\n            y = new Object();\n        if (y != null)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/31/Test.java\nindex 0c58841f75d..89a184e86ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/31/Test.java\n@@ -55,7 +55,7 @@ public class Test {\n             return 0;\n     }\n     int tp3(Object x) {\n-       \tObject y = null;\n+        Object y = null;\n         if (x != null)\n             y = new Object();\n         if (y != null)\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/31/Test.java\nindex 0c58841f75d..bd8076800b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/31/Test.java\n@@ -1,7 +1,7 @@\n package v2;\n \n public class Test {\n-    \n+\n     /**\n      * Benchmark tests for null pointer defect detectors\n      * This benchmark tests local variable tracking tracking\n@@ -13,123 +13,160 @@ public class Test {\n \n     int fp1(int level) {\n         Object x = null;\n-        if (level > 0)\n+        if (level > 0) {\n             x = new Object();\n-        if (level > 4)\n+        }\n+        if (level > 4) {\n             return x.hashCode();\n+        }\n         return 0;\n     }\n \n     int tp1(int level) {\n         Object x = null;\n-        if (level > 0)\n+        if (level > 0) {\n             x = new Object();\n-        if (level < 4)\n+        }\n+        if (level < 4) {\n             return x.hashCode();\n+        }\n         return 0;\n     }\n+\n     int fp2(boolean b) {\n         Object x = null;\n-        if (b)\n+        if (b) {\n             x = new Object();\n-        if (b)\n+        }\n+        if (b) {\n             return x.hashCode();\n+        }\n         return 0;\n     }\n+\n     int tp2(boolean b) {\n         Object x = null;\n-        if (b)\n+        if (b) {\n             x = new Object();\n-        if (!b)\n+        }\n+        if (!b) {\n             return x.hashCode();\n+        }\n         return 0;\n     }\n \n     int fp3(Object x) {\n         Object y = null;\n-        if (x != null)\n+        if (x != null) {\n             y = new Object();\n-        if (y != null)\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return 0;\n+        }\n     }\n+\n     int tp3(Object x) {\n-       \tObject y = null;\n-        if (x != null)\n+        Object y = null;\n+        if (x != null) {\n             y = new Object();\n-        if (y != null)\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return x.hashCode();\n+        }\n     }\n+\n     int tp4(boolean b) {\n-    \tObject x = null;\n+        Object x = null;\n         Object y = null;\n-        if (b) x = \"x\";\n-        if (x != null) y = \"y\";\n-        if (y != null)\n+        if (b) {\n+            x = \"x\";\n+        }\n+        if (x != null) {\n+            y = \"y\";\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return x.hashCode();\n+        }\n     }\n+\n     int fp4(boolean b) {\n-       \tObject x = null;\n+        Object x = null;\n         Object y = null;\n-        if (b) x = \"x\";\n-        if (x != null) y = \"y\";\n-        if (y != null)\n+        if (b) {\n+            x = \"x\";\n+        }\n+        if (x != null) {\n+            y = \"y\";\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return 0;\n+        }\n     }\n+\n     int tp5(Object x) {\n-    \tif (x == null) {\n-    \t\treturn x.hashCode();\n-    \t}\n-    \treturn 0;\n+        if (x == null) {\n+            return x.hashCode();\n+        }\n+        return 0;\n     }\n-   \n+\n     int tp6(Object x) {\n-    \tif (x == null) {\n-    \t\tObject y = x;\n-    \t\treturn y.hashCode();\n-    \t}\n-    \treturn 0;\n+        if (x == null) {\n+            Object y = x;\n+            return y.hashCode();\n+        }\n+        return 0;\n     }\n-  \n+\n     int itp1(boolean b) {\n         Object x = null;\n-        if (b) x = new Object();\n+        if (b) {\n+            x = new Object();\n+        }\n         return helper1(x, b);\n     }\n \n     int ifp1(boolean b) {\n         Object x = null;\n-        if (!b) x = new Object();\n-        return helper1(x, b); \n+        if (!b) {\n+            x = new Object();\n+        }\n+        return helper1(x, b);\n     }\n+\n     int itp2() {\n         return helper2(null);\n     }\n \n     int itp3(boolean b) {\n-    \tObject x = null;\n-        if (b) x = \"x\";   \n+        Object x = null;\n+        if (b) {\n+            x = \"x\";\n+        }\n         return helper3(x);\n     }\n-    \n-    \n+\n \n     // Bug when x is null and b is false\n     private int helper1(Object x, boolean b) {\n-        if (b) return 0;\n+        if (b) {\n+            return 0;\n+        }\n         return x.hashCode();\n     }\n \n     private int helper2(Object x) {\n         return x.hashCode();\n     }\n+\n     private int helper3(Object x) {\n         return x.hashCode();\n     }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/31/Test.java\nindex 0c58841f75d..60d7f087306 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/31/Test.java\n@@ -1,5 +1,6 @@\n package v2;\n \n+\n public class Test {\n     \n     /**\n@@ -10,7 +11,6 @@ public class Test {\n      * ifp1, ifp2, ifp3 : interprocedural false positives\n      * itp1 : true versions of the ifp1\n      */\n-\n     int fp1(int level) {\n         Object x = null;\n         if (level > 0)\n@@ -28,6 +28,7 @@ public class Test {\n             return x.hashCode();\n         return 0;\n     }\n+\n     int fp2(boolean b) {\n         Object x = null;\n         if (b)\n@@ -36,6 +37,7 @@ public class Test {\n             return x.hashCode();\n         return 0;\n     }\n+\n     int tp2(boolean b) {\n         Object x = null;\n         if (b)\n@@ -54,8 +56,9 @@ public class Test {\n         else\n             return 0;\n     }\n+\n     int tp3(Object x) {\n-       \tObject y = null;\n+        Object y = null;\n         if (x != null)\n             y = new Object();\n         if (y != null)\n@@ -63,75 +66,92 @@ public class Test {\n         else\n             return x.hashCode();\n     }\n+\n     int tp4(boolean b) {\n-    \tObject x = null;\n+        Object x = null;\n         Object y = null;\n-        if (b) x = \"x\";\n-        if (x != null) y = \"y\";\n+        if (b)\n+            x = \"x\";\n+        if (x != null)\n+            y = \"y\";\n         if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n             return x.hashCode();\n     }\n+\n     int fp4(boolean b) {\n-       \tObject x = null;\n+        Object x = null;\n         Object y = null;\n-        if (b) x = \"x\";\n-        if (x != null) y = \"y\";\n+        if (b)\n+            x = \"x\";\n+        if (x != null)\n+            y = \"y\";\n         if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n             return 0;\n     }\n+\n     int tp5(Object x) {\n-    \tif (x == null) {\n-    \t\treturn x.hashCode();\n-    \t}\n-    \treturn 0;\n+        if (x == null) {\n+            return x.hashCode();\n+        }\n+        return 0;\n     }\n-   \n+\n     int tp6(Object x) {\n-    \tif (x == null) {\n-    \t\tObject y = x;\n-    \t\treturn y.hashCode();\n-    \t}\n-    \treturn 0;\n+        if (x == null) {\n+            Object y = x;\n+            return y.hashCode();\n+        }\n+        return 0;\n     }\n-  \n+\n     int itp1(boolean b) {\n         Object x = null;\n-        if (b) x = new Object();\n+        if (b)\n+            x = new Object();\n         return helper1(x, b);\n     }\n \n     int ifp1(boolean b) {\n         Object x = null;\n-        if (!b) x = new Object();\n-        return helper1(x, b); \n+        if (!b)\n+            x = new Object();\n+        return helper1(x, b);\n     }\n+\n     int itp2() {\n         return helper2(null);\n     }\n \n     int itp3(boolean b) {\n-    \tObject x = null;\n-        if (b) x = \"x\";   \n+        Object x = null;\n+        if (b)\n+            x = \"x\";\n         return helper3(x);\n     }\n     \n     \n \n     // Bug when x is null and b is false\n+\n+\n     private int helper1(Object x, boolean b) {\n-        if (b) return 0;\n+        if (b)\n+            return 0;\n         return x.hashCode();\n     }\n \n+\n     private int helper2(Object x) {\n         return x.hashCode();\n     }\n+\n+\n     private int helper3(Object x) {\n         return x.hashCode();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/31/Test.java\nindex 0c58841f75d..89a184e86ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/31/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/31/Test.java\n@@ -55,7 +55,7 @@ public class Test {\n             return 0;\n     }\n     int tp3(Object x) {\n-       \tObject y = null;\n+        Object y = null;\n         if (x != null)\n             y = new Object();\n         if (y != null)\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
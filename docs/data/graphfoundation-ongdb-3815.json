{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3815",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3815/CoreTopology.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3815/CoreTopology.java\nindex 1dee38eb30d..bbd23d5b469 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3815/CoreTopology.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3815/CoreTopology.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.util.HashMap;\n@@ -33,76 +34,76 @@ import static java.util.Collections.emptyMap;\n \n public class CoreTopology implements Topology<CoreServerInfo>\n {\n-    static CoreTopology EMPTY = new CoreTopology( null, false, emptyMap() );\n+  static CoreTopology EMPTY = new CoreTopology(null, false, emptyMap());\n \n-    private final ClusterId clusterId;\n-    private final boolean canBeBootstrapped;\n-    private final Map<MemberId,CoreServerInfo> coreMembers;\n+  private final ClusterId clusterId;\n+  private final boolean canBeBootstrapped;\n+  private final Map<MemberId, CoreServerInfo> coreMembers;\n \n-    public CoreTopology( ClusterId clusterId, boolean canBeBootstrapped, Map<MemberId,CoreServerInfo> coreMembers )\n-    {\n-        this.clusterId = clusterId;\n-        this.canBeBootstrapped = canBeBootstrapped;\n-        this.coreMembers = new HashMap<>( coreMembers );\n-    }\n+  public CoreTopology(ClusterId clusterId, boolean canBeBootstrapped, Map<MemberId, CoreServerInfo> coreMembers)\n+  {\n+    this.clusterId = clusterId;\n+    this.canBeBootstrapped = canBeBootstrapped;\n+    this.coreMembers = new HashMap<>(coreMembers);\n+  }\n \n-    @Override\n-    public Map<MemberId,CoreServerInfo> members()\n-    {\n-        return coreMembers;\n-    }\n+  @Override\n+  public Map<MemberId, CoreServerInfo> members()\n+  {\n+    return coreMembers;\n+  }\n \n-    public ClusterId clusterId()\n-    {\n-        return clusterId;\n-    }\n+  public ClusterId clusterId()\n+  {\n+    return clusterId;\n+  }\n \n-    public boolean canBeBootstrapped()\n-    {\n-        return canBeBootstrapped;\n-    }\n+  public boolean canBeBootstrapped()\n+  {\n+    return canBeBootstrapped;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"{clusterId=%s, bootstrappable=%s, coreMembers=%s}\", clusterId, canBeBootstrapped(), coreMembers );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"{clusterId=%s, bootstrappable=%s, coreMembers=%s}\", clusterId, canBeBootstrapped(), coreMembers);\n+  }\n \n-    public Optional<MemberId> randomCoreMemberId()\n+  public Optional<MemberId> randomCoreMemberId()\n+  {\n+    if (coreMembers.isEmpty())\n     {\n-        if ( coreMembers.isEmpty() )\n-        {\n-            return Optional.empty();\n-        }\n-        return coreMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( coreMembers.size() ) ).findFirst();\n+      return Optional.empty();\n     }\n+    return coreMembers.keySet().stream().skip(ThreadLocalRandom.current().nextInt(coreMembers.size())).findFirst();\n+  }\n \n-    @Override\n-    public CoreTopology filterTopologyByDb( String dbName )\n-    {\n-        Map<MemberId, CoreServerInfo> filteredMembers = filterHostsByDb( members(), dbName );\n+  @Override\n+  public CoreTopology filterTopologyByDb(String dbName)\n+  {\n+    Map<MemberId, CoreServerInfo> filteredMembers = filterHostsByDb(members(), dbName);\n \n-        return new CoreTopology( clusterId(), canBeBootstrapped(), filteredMembers );\n-    }\n+    return new CoreTopology(clusterId(), canBeBootstrapped(), filteredMembers);\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        CoreTopology that = (CoreTopology) o;\n-        return Objects.equals( coreMembers, that.coreMembers );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( coreMembers );\n+      return false;\n     }\n+    CoreTopology that = (CoreTopology) o;\n+    return Objects.equals(coreMembers, that.coreMembers);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(coreMembers);\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3815/CoreTopology.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3815/CoreTopology.java\nindex 1dee38eb30d..af8b0297ecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3815/CoreTopology.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3815/CoreTopology.java\n@@ -74,15 +74,15 @@ public class CoreTopology implements Topology<CoreServerInfo>\n         {\n             return Optional.empty();\n         }\n-        return coreMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( coreMembers.size() ) ).findFirst();\n+\n+return coreMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( coreMembers.size() ) ).findFirst();\n     }\n \n     @Override\n     public CoreTopology filterTopologyByDb( String dbName )\n     {\n-        Map<MemberId, CoreServerInfo> filteredMembers = filterHostsByDb( members(), dbName );\n-\n-        return new CoreTopology( clusterId(), canBeBootstrapped(), filteredMembers );\n+        Map<MemberId,CoreServerInfo> filteredMembers = filterHostsByDb( members(), dbName );\n+return new CoreTopology( clusterId(), canBeBootstrapped(), filteredMembers );\n     }\n \n     @Override\n@@ -92,11 +92,13 @@ public class CoreTopology implements Topology<CoreServerInfo>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        CoreTopology that = (CoreTopology) o;\n+\n+CoreTopology that = (CoreTopology) o;\n         return Objects.equals( coreMembers, that.coreMembers );\n     }\n \n@@ -105,4 +107,4 @@ public class CoreTopology implements Topology<CoreServerInfo>\n     {\n         return Objects.hash( coreMembers );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
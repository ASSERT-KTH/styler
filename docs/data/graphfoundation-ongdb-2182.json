{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2182",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2182/IntKeyUnsafeTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2182/IntKeyUnsafeTable.java\nindex a66e1c10fa4..a84405e5970 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2182/IntKeyUnsafeTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2182/IntKeyUnsafeTable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.memory.MemoryAllocationTracker;\n@@ -24,29 +25,29 @@ import org.neo4j.unsafe.impl.internal.dragons.UnsafeUtil;\n \n public class IntKeyUnsafeTable<VALUE> extends UnsafeTable<VALUE>\n {\n-    public IntKeyUnsafeTable( int capacity, VALUE valueMarker, MemoryAllocationTracker allocationTracker )\n-    {\n-        super( capacity, 4, valueMarker, allocationTracker );\n-    }\n+  public IntKeyUnsafeTable(int capacity, VALUE valueMarker, MemoryAllocationTracker allocationTracker)\n+  {\n+    super(capacity, 4, valueMarker, allocationTracker);\n+  }\n \n-    @Override\n-    protected long internalKey( long keyAddress )\n-    {\n-        return UnsafeUtil.getInt( keyAddress );\n-    }\n+  @Override\n+  protected long internalKey(long keyAddress)\n+  {\n+    return UnsafeUtil.getInt(keyAddress);\n+  }\n \n-    @Override\n-    protected void internalPut( long keyAddress, long key, VALUE value )\n-    {\n-        assert (int)key == key : \"Illegal key \" + key + \", it's bigger than int\";\n+  @Override\n+  protected void internalPut(long keyAddress, long key, VALUE value)\n+  {\n+    assert (int) key == key : \"Illegal key \" + key + \", it's bigger than int\";\n \n-        // We can \"safely\" cast to int here, assuming that this call trickles in via a PrimitiveIntCollection\n-        UnsafeUtil.putInt( keyAddress, (int) key );\n-    }\n+    // We can \"safely\" cast to int here, assuming that this call trickles in via a PrimitiveIntCollection\n+    UnsafeUtil.putInt(keyAddress, (int) key);\n+  }\n \n-    @Override\n-    protected Table<VALUE> newInstance( int newCapacity )\n-    {\n-        return new IntKeyUnsafeTable<>( newCapacity, valueMarker, allocationTracker );\n-    }\n+  @Override\n+  protected Table<VALUE> newInstance(int newCapacity)\n+  {\n+    return new IntKeyUnsafeTable<>(newCapacity, valueMarker, allocationTracker);\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2182/IntKeyUnsafeTable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2182/IntKeyUnsafeTable.java\nindex a66e1c10fa4..cb926647fdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2182/IntKeyUnsafeTable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2182/IntKeyUnsafeTable.java\n@@ -38,10 +38,10 @@ public class IntKeyUnsafeTable<VALUE> extends UnsafeTable<VALUE>\n     @Override\n     protected void internalPut( long keyAddress, long key, VALUE value )\n     {\n-        assert (int)key == key : \"Illegal key \" + key + \", it's bigger than int\";\n+        assert ( int)key == key : \"Illegal key \" + key + \", it's bigger than int\";\n \n         // We can \"safely\" cast to int here, assuming that this call trickles in via a PrimitiveIntCollection\n-        UnsafeUtil.putInt( keyAddress, (int) key );\n+        UnsafeUtil.putInt( keyAddress, ( int) key );\n     }\n \n     @Override\n@@ -49,4 +49,4 @@ public class IntKeyUnsafeTable<VALUE> extends UnsafeTable<VALUE>\n     {\n         return new IntKeyUnsafeTable<>( newCapacity, valueMarker, allocationTracker );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
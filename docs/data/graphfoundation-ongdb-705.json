{
    "project_name": "graphfoundation-ongdb",
    "error_id": "705",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/705/TemporalIndexCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/705/TemporalIndexCache.java\nindex 52de97bcecf..6aa6800f250 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/705/TemporalIndexCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/705/TemporalIndexCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -42,215 +43,211 @@ import static org.neo4j.kernel.impl.index.schema.TemporalIndexCache.Offset.zoned\n  *\n  * @param <T> Type of parts\n  */\n-class TemporalIndexCache<T> extends IndexPartsCache<TemporalIndexCache.Offset,T>\n+class TemporalIndexCache<T> extends IndexPartsCache<TemporalIndexCache.Offset, T>\n {\n-    private final Factory<T> factory;\n-\n-    enum Offset\n+  private final Factory<T> factory;\n+\n+  enum Offset\n+  {\n+    date,\n+    localDateTime,\n+    zonedDateTime,\n+    localTime,\n+    zonedTime,\n+    duration\n+  }\n+\n+  TemporalIndexCache(Factory<T> factory)\n+  {\n+    this.factory = factory;\n+  }\n+\n+  /**\n+   * Select the path corresponding to the given ValueGroup. Creates the path if needed,\n+   * and rethrows any create time exception as a RuntimeException.\n+   *\n+   * @param valueGroup target value group\n+   * @return selected part\n+   */\n+  T uncheckedSelect(ValueGroup valueGroup)\n+  {\n+    switch (valueGroup)\n     {\n-        date,\n-        localDateTime,\n-        zonedDateTime,\n-        localTime,\n-        zonedTime,\n-        duration\n-    }\n+      case DATE:\n+        return date();\n \n-    TemporalIndexCache( Factory<T> factory )\n-    {\n-        this.factory = factory;\n-    }\n+      case LOCAL_DATE_TIME:\n+        return localDateTime();\n \n-    /**\n-     * Select the path corresponding to the given ValueGroup. Creates the path if needed,\n-     * and rethrows any create time exception as a RuntimeException.\n-     *\n-     * @param valueGroup target value group\n-     * @return selected part\n-     */\n-    T uncheckedSelect( ValueGroup valueGroup )\n-    {\n-        switch ( valueGroup )\n-        {\n-        case DATE:\n-            return date();\n+      case ZONED_DATE_TIME:\n+        return zonedDateTime();\n \n-        case LOCAL_DATE_TIME:\n-            return localDateTime();\n+      case LOCAL_TIME:\n+        return localTime();\n \n-        case ZONED_DATE_TIME:\n-            return zonedDateTime();\n+      case ZONED_TIME:\n+        return zonedTime();\n \n-        case LOCAL_TIME:\n-            return localTime();\n+      case DURATION:\n+        return duration();\n \n-        case ZONED_TIME:\n-            return zonedTime();\n-\n-        case DURATION:\n-            return duration();\n-\n-        default:\n-            throw new IllegalStateException( \"Unsupported value group \" + valueGroup );\n-        }\n+      default:\n+        throw new IllegalStateException(\"Unsupported value group \" + valueGroup);\n     }\n-\n-    /**\n-     * Select the part corresponding to the given ValueGroup. Creates the part if needed,\n-     * in which case an exception of type E might be thrown.\n-     *\n-     * @param valueGroup target value group\n-     * @return selected part\n-     */\n-    T select( ValueGroup valueGroup ) throws IOException\n+  }\n+\n+  /**\n+   * Select the part corresponding to the given ValueGroup. Creates the part if needed,\n+   * in which case an exception of type E might be thrown.\n+   *\n+   * @param valueGroup target value group\n+   * @return selected part\n+   */\n+  T select(ValueGroup valueGroup) throws IOException\n+  {\n+    try\n     {\n-        try\n-        {\n-            return uncheckedSelect( valueGroup );\n-        }\n-        catch ( UncheckedIOException e )\n-        {\n-            throw e.getCause();\n-        }\n-    }\n-\n-    /**\n-     * Select the part corresponding to the given ValueGroup, apply function to it and return the result.\n-     * If the part isn't created yet return orElse.\n-     *\n-     * @param valueGroup target value group\n-     * @param function function to apply to part\n-     * @param orElse result to return if part isn't created yet\n-     * @param <RESULT> type of result\n-     * @return the result\n-     */\n-    <RESULT> RESULT selectOrElse( ValueGroup valueGroup, Function<T,RESULT> function, RESULT orElse )\n+      return uncheckedSelect(valueGroup);\n+    } catch (UncheckedIOException e)\n     {\n-        T cachedValue;\n-        switch ( valueGroup )\n-        {\n-        case DATE:\n-            cachedValue = cache.get( date );\n-            break;\n-        case LOCAL_DATE_TIME:\n-            cachedValue = cache.get( localDateTime );\n-            break;\n-        case ZONED_DATE_TIME:\n-            cachedValue = cache.get( zonedDateTime );\n-            break;\n-        case LOCAL_TIME:\n-            cachedValue = cache.get( localTime );\n-            break;\n-        case ZONED_TIME:\n-            cachedValue = cache.get( zonedTime );\n-            break;\n-        case DURATION:\n-            cachedValue = cache.get( duration );\n-            break;\n-        default:\n-            throw new IllegalStateException( \"Unsupported value group \" + valueGroup );\n-        }\n-\n-        return cachedValue != null ? function.apply( cachedValue ) : orElse;\n+      throw e.getCause();\n     }\n-\n-    private T getOrCreatePart( Offset key, ThrowingSupplier<T,IOException> factory ) throws UncheckedIOException\n+  }\n+\n+  /**\n+   * Select the part corresponding to the given ValueGroup, apply function to it and return the result.\n+   * If the part isn't created yet return orElse.\n+   *\n+   * @param valueGroup target value group\n+   * @param function   function to apply to part\n+   * @param orElse     result to return if part isn't created yet\n+   * @param <RESULT>   type of result\n+   * @return the result\n+   */\n+  <RESULT> RESULT selectOrElse(ValueGroup valueGroup, Function<T, RESULT> function, RESULT orElse)\n+  {\n+    T cachedValue;\n+    switch (valueGroup)\n     {\n-        T existing = cache.get( key );\n-        if ( existing != null )\n-        {\n-            return existing;\n-        }\n-\n-        // Instantiate from factory. Do this under lock so that we coordinate with any concurrent call to close.\n-        // Concurrent calls to instantiating parts won't contend with each other since there's only\n-        // a single writer at a time anyway.\n-        instantiateCloseLock.lock();\n-        try\n-        {\n-            assertOpen();\n-            return cache.computeIfAbsent( key, k ->\n-            {\n-                try\n-                {\n-                    return factory.get();\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new UncheckedIOException( e );\n-                }\n-            } );\n-        }\n-        finally\n-        {\n-            instantiateCloseLock.unlock();\n-        }\n+      case DATE:\n+        cachedValue = cache.get(date);\n+        break;\n+      case LOCAL_DATE_TIME:\n+        cachedValue = cache.get(localDateTime);\n+        break;\n+      case ZONED_DATE_TIME:\n+        cachedValue = cache.get(zonedDateTime);\n+        break;\n+      case LOCAL_TIME:\n+        cachedValue = cache.get(localTime);\n+        break;\n+      case ZONED_TIME:\n+        cachedValue = cache.get(zonedTime);\n+        break;\n+      case DURATION:\n+        cachedValue = cache.get(duration);\n+        break;\n+      default:\n+        throw new IllegalStateException(\"Unsupported value group \" + valueGroup);\n     }\n \n-    private T date() throws UncheckedIOException\n-    {\n-        return getOrCreatePart( date, factory::newDate );\n-    }\n+    return cachedValue != null ? function.apply(cachedValue) : orElse;\n+  }\n \n-    private T localDateTime() throws UncheckedIOException\n+  private T getOrCreatePart(Offset key, ThrowingSupplier<T, IOException> factory) throws UncheckedIOException\n+  {\n+    T existing = cache.get(key);\n+    if (existing != null)\n     {\n-        return getOrCreatePart( localDateTime, factory::newLocalDateTime );\n+      return existing;\n     }\n \n-    private T zonedDateTime() throws UncheckedIOException\n-    {\n-        return getOrCreatePart( zonedDateTime, factory::newZonedDateTime );\n-    }\n-\n-    private T localTime() throws UncheckedIOException\n-    {\n-        return getOrCreatePart( localTime, factory::newLocalTime );\n-    }\n-\n-    private T zonedTime() throws UncheckedIOException\n-    {\n-        return getOrCreatePart( zonedTime, factory::newZonedTime );\n-    }\n-\n-    private T duration() throws UncheckedIOException\n-    {\n-        return getOrCreatePart( duration, factory::newDuration );\n-    }\n-\n-    void loadAll()\n+    // Instantiate from factory. Do this under lock so that we coordinate with any concurrent call to close.\n+    // Concurrent calls to instantiating parts won't contend with each other since there's only\n+    // a single writer at a time anyway.\n+    instantiateCloseLock.lock();\n+    try\n     {\n+      assertOpen();\n+      return cache.computeIfAbsent(key, k ->\n+      {\n         try\n         {\n-            date();\n-            zonedDateTime();\n-            localDateTime();\n-            zonedTime();\n-            localTime();\n-            duration();\n-        }\n-        catch ( Exception e )\n+          return factory.get();\n+        } catch (IOException e)\n         {\n-            throw new RuntimeException( e );\n+          throw new UncheckedIOException(e);\n         }\n+      });\n+    } finally\n+    {\n+      instantiateCloseLock.unlock();\n     }\n-\n-    /**\n-     * Factory used by the TemporalIndexCache to create parts.\n-     *\n-     * @param <T> Type of parts\n-     */\n-    interface Factory<T>\n+  }\n+\n+  private T date() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(date, factory::newDate);\n+  }\n+\n+  private T localDateTime() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(localDateTime, factory::newLocalDateTime);\n+  }\n+\n+  private T zonedDateTime() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(zonedDateTime, factory::newZonedDateTime);\n+  }\n+\n+  private T localTime() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(localTime, factory::newLocalTime);\n+  }\n+\n+  private T zonedTime() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(zonedTime, factory::newZonedTime);\n+  }\n+\n+  private T duration() throws UncheckedIOException\n+  {\n+    return getOrCreatePart(duration, factory::newDuration);\n+  }\n+\n+  void loadAll()\n+  {\n+    try\n+    {\n+      date();\n+      zonedDateTime();\n+      localDateTime();\n+      zonedTime();\n+      localTime();\n+      duration();\n+    } catch (Exception e)\n     {\n-        T newDate() throws IOException;\n+      throw new RuntimeException(e);\n+    }\n+  }\n \n-        T newLocalDateTime() throws IOException;\n+  /**\n+   * Factory used by the TemporalIndexCache to create parts.\n+   *\n+   * @param <T> Type of parts\n+   */\n+  interface Factory<T>\n+  {\n+    T newDate() throws IOException;\n \n-        T newZonedDateTime() throws IOException;\n+    T newLocalDateTime() throws IOException;\n \n-        T newLocalTime() throws IOException;\n+    T newZonedDateTime() throws IOException;\n \n-        T newZonedTime() throws IOException;\n+    T newLocalTime() throws IOException;\n \n-        T newDuration() throws IOException;\n-    }\n+    T newZonedTime() throws IOException;\n+\n+    T newDuration() throws IOException;\n+  }\n }\n",
            "diff_size": 279
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/705/TemporalIndexCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/705/TemporalIndexCache.java\nindex 52de97bcecf..9c1b6a39b37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/705/TemporalIndexCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/705/TemporalIndexCache.java\n@@ -48,11 +48,7 @@ class TemporalIndexCache<T> extends IndexPartsCache<TemporalIndexCache.Offset,T>\n \n     enum Offset\n     {\n-        date,\n-        localDateTime,\n-        zonedDateTime,\n-        localTime,\n-        zonedTime,\n+        date, localDateTime, zonedDateTime, localTime, zonedTime,\n         duration\n     }\n \n@@ -74,23 +70,17 @@ class TemporalIndexCache<T> extends IndexPartsCache<TemporalIndexCache.Offset,T>\n         {\n         case DATE:\n             return date();\n-\n-        case LOCAL_DATE_TIME:\n+    case LOCAL_DATE_TIME:\n             return localDateTime();\n-\n-        case ZONED_DATE_TIME:\n+    case ZONED_DATE_TIME:\n             return zonedDateTime();\n-\n-        case LOCAL_TIME:\n+    case LOCAL_TIME:\n             return localTime();\n-\n-        case ZONED_TIME:\n+    case ZONED_TIME:\n             return zonedTime();\n-\n-        case DURATION:\n+    case DURATION:\n             return duration();\n-\n-        default:\n+    default:\n             throw new IllegalStateException( \"Unsupported value group \" + valueGroup );\n         }\n     }\n@@ -253,4 +243,4 @@ class TemporalIndexCache<T> extends IndexPartsCache<TemporalIndexCache.Offset,T>\n \n         T newDuration() throws IOException;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
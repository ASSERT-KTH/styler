{
    "project_name": "wso2-attic-commons",
    "error_id": "515",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 144).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public Object execute(AtomicEvent event) {\n        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() + ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/515/AddExpressionExecutorDouble.java\nindex f15e777d29f..4db6592f948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/515/AddExpressionExecutorDouble.java\n@@ -36,11 +36,12 @@ public class AddExpressionExecutorDouble implements ExpressionExecutor {\n \n     @Override\n     public Object execute(AtomicEvent event) {\n-        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() + ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n+        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() +\n+                ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n \n-    }\n+     }\n \n-    public Attribute.Type getReturnType() {\n+     public Attribute.Type getReturnType() {\n         return Attribute.Type.DOUBLE;\n     }\n \n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/515/AddExpressionExecutorDouble.java\nindex f15e777d29f..3abaa303f22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/515/AddExpressionExecutorDouble.java\n@@ -1,20 +1,21 @@\n /*\n-*  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.siddhi.core.executor.expression.add;\n \n import org.wso2.siddhi.core.event.AtomicEvent;\n@@ -24,24 +25,25 @@ import org.wso2.siddhi.query.api.definition.Attribute;\n import java.util.Set;\n \n public class AddExpressionExecutorDouble implements ExpressionExecutor {\n-    private ExpressionExecutor leftExpressionExecutor;\n-    private ExpressionExecutor rightExpressionExecutor;\n+  private ExpressionExecutor leftExpressionExecutor;\n+  private ExpressionExecutor rightExpressionExecutor;\n \n \n-    public AddExpressionExecutorDouble(ExpressionExecutor leftExpressionExecutor,\n-                                       ExpressionExecutor rightExpressionExecutor) {\n-        this.leftExpressionExecutor = leftExpressionExecutor;\n-        this.rightExpressionExecutor = rightExpressionExecutor;\n-    }\n+  public AddExpressionExecutorDouble(ExpressionExecutor leftExpressionExecutor,\n+                                     ExpressionExecutor rightExpressionExecutor) {\n+    this.leftExpressionExecutor = leftExpressionExecutor;\n+    this.rightExpressionExecutor = rightExpressionExecutor;\n+  }\n \n-    @Override\n-    public Object execute(AtomicEvent event) {\n-        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() + ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n+  @Override\n+  public Object execute(AtomicEvent event) {\n+    return ((Number) leftExpressionExecutor.execute(event)).doubleValue() +\n+      ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n \n-    }\n+  }\n \n-    public Attribute.Type getReturnType() {\n-        return Attribute.Type.DOUBLE;\n-    }\n+  public Attribute.Type getReturnType() {\n+    return Attribute.Type.DOUBLE;\n+  }\n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/515/AddExpressionExecutorDouble.java\nindex f15e777d29f..3c97e3c00b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/515/AddExpressionExecutorDouble.java\n@@ -30,7 +30,7 @@ public class AddExpressionExecutorDouble implements ExpressionExecutor {\n \n     public AddExpressionExecutorDouble(ExpressionExecutor leftExpressionExecutor,\n                                        ExpressionExecutor rightExpressionExecutor) {\n-        this.leftExpressionExecutor = leftExpressionExecutor;\n+    this.leftExpressionExecutor = leftExpressionExecutor;\n         this.rightExpressionExecutor = rightExpressionExecutor;\n     }\n \n@@ -44,4 +44,4 @@ public class AddExpressionExecutorDouble implements ExpressionExecutor {\n         return Attribute.Type.DOUBLE;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/515/AddExpressionExecutorDouble.java\nindex f15e777d29f..4db6592f948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/515/AddExpressionExecutorDouble.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/515/AddExpressionExecutorDouble.java\n@@ -36,11 +36,12 @@ public class AddExpressionExecutorDouble implements ExpressionExecutor {\n \n     @Override\n     public Object execute(AtomicEvent event) {\n-        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() + ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n+        return ((Number) leftExpressionExecutor.execute(event)).doubleValue() +\n+                ((Number) rightExpressionExecutor.execute(event)).doubleValue();\n \n-    }\n+     }\n \n-    public Attribute.Type getReturnType() {\n+     public Attribute.Type getReturnType() {\n         return Attribute.Type.DOUBLE;\n     }\n \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
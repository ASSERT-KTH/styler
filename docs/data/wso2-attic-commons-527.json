{
    "project_name": "wso2-attic-commons",
    "error_id": "527",
    "information": {
        "errors": [
            {
                "line": "70",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 191).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor, AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n        // ignore\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/527/TableWindowProcessor.java\nindex 0fd7beddda3..cb48505b4b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/527/TableWindowProcessor.java\n@@ -67,9 +67,10 @@ public class TableWindowProcessor extends WindowProcessor {\n     }\n \n     @Override\n-    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor, AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n-        // ignore\n-    }\n+    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor,\n+        AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n+         // ignore\n+     }\n \n     @Override\n     public void destroy(){\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/527/TableWindowProcessor.java\nindex 0fd7beddda3..d6bcafbaf80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/527/TableWindowProcessor.java\n@@ -1,20 +1,21 @@\n /*\n-*  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.siddhi.core.query.processor.window;\n \n import org.wso2.siddhi.core.config.SiddhiContext;\n@@ -30,50 +31,52 @@ import java.util.Iterator;\n \n public class TableWindowProcessor extends WindowProcessor {\n \n-    private EventTable eventTable;\n+  private EventTable eventTable;\n \n-    public TableWindowProcessor(EventTable eventTable) {\n-        this.eventTable = eventTable;\n-    }\n+  public TableWindowProcessor(EventTable eventTable) {\n+    this.eventTable = eventTable;\n+  }\n \n-    @Override\n-    protected void processEvent(InEvent event) {\n-        // ignore\n-    }\n+  @Override\n+  protected void processEvent(InEvent event) {\n+    // ignore\n+  }\n \n-    @Override\n-    protected void processEvent(InListEvent listEvent) {\n-        // ignore\n-    }\n+  @Override\n+  protected void processEvent(InListEvent listEvent) {\n+    // ignore\n+  }\n \n-    @Override\n-    public Iterator<StreamEvent> iterator() {\n-        return eventTable.iterator();\n-    }\n+  @Override\n+  public Iterator<StreamEvent> iterator() {\n+    return eventTable.iterator();\n+  }\n \n-    @Override\n-    public Iterator<StreamEvent> iterator(String SQLPredicate) {\n-      return  eventTable.iterator(SQLPredicate);\n-    }\n+  @Override\n+  public Iterator<StreamEvent> iterator(String SQLPredicate) {\n+    return eventTable.iterator(SQLPredicate);\n+  }\n \n-    @Override\n-    protected Object[] currentState() {\n-        return new Object[0];\n-    }\n+  @Override\n+  protected Object[] currentState() {\n+    return new Object[0];\n+  }\n \n-    @Override\n-    protected void restoreState(Object[] data) {\n-        // ignore\n-    }\n+  @Override\n+  protected void restoreState(Object[] data) {\n+    // ignore\n+  }\n \n-    @Override\n-    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor, AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n-        // ignore\n-    }\n+  @Override\n+  protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor,\n+                      AbstractDefinition streamDefinition, String elementId, boolean async,\n+                      SiddhiContext siddhiContext) {\n+    // ignore\n+  }\n \n-    @Override\n-    public void destroy(){\n+  @Override\n+  public void destroy() {\n \n-    }\n+  }\n \n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/527/TableWindowProcessor.java\nindex 0fd7beddda3..afe8d5fdba8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/527/TableWindowProcessor.java\n@@ -53,7 +53,7 @@ public class TableWindowProcessor extends WindowProcessor {\n \n     @Override\n     public Iterator<StreamEvent> iterator(String SQLPredicate) {\n-      return  eventTable.iterator(SQLPredicate);\n+    return eventTable.iterator(SQLPredicate);\n     }\n \n     @Override\n@@ -72,8 +72,8 @@ public class TableWindowProcessor extends WindowProcessor {\n     }\n \n     @Override\n-    public void destroy(){\n+    public void destroy() {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/527/TableWindowProcessor.java\nindex 0fd7beddda3..cb48505b4b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/527/TableWindowProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/527/TableWindowProcessor.java\n@@ -67,9 +67,10 @@ public class TableWindowProcessor extends WindowProcessor {\n     }\n \n     @Override\n-    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor, AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n-        // ignore\n-    }\n+    protected void init(Expression[] parameters, QueryPostProcessingElement nextProcessor,\n+        AbstractDefinition streamDefinition, String elementId, boolean async, SiddhiContext siddhiContext) {\n+         // ignore\n+     }\n \n     @Override\n     public void destroy(){\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
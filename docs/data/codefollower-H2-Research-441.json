{
    "project_name": "codefollower-H2-Research",
    "error_id": "441",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "52",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": " * RUNSCRIPT\n */\npublic class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n\n    /**\n     * The byte order mark.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/441/RunScriptCommand.java\nindex 674043655df..a4e7344cfab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/441/RunScriptCommand.java\n@@ -22,9 +22,10 @@ import org.h2.util.ScriptReader;\n  * This class represents the statement\n  * RUNSCRIPT\n  */\n-public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+public class RunScriptCommand extends ScriptBase {\n \n-    /**\n+//\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+/**\n      * The byte order mark.\n      * 0xfeff because this is the Unicode char\n      * represented by the UTF-8 byte order mark (EF BB BF).\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "column": "52",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/441/RunScriptCommand.java\nindex 674043655df..33225fe5cf0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/441/RunScriptCommand.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.command.dml;\n \n import java.io.BufferedReader;\n@@ -24,80 +25,80 @@ import org.h2.util.ScriptReader;\n  */\n public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n \n-    /**\n-     * The byte order mark.\n-     * 0xfeff because this is the Unicode char\n-     * represented by the UTF-8 byte order mark (EF BB BF).\n-     */\n-    private static final char UTF8_BOM = '\\uFEFF';\n+  /**\n+   * The byte order mark.\n+   * 0xfeff because this is the Unicode char\n+   * represented by the UTF-8 byte order mark (EF BB BF).\n+   */\n+  private static final char UTF8_BOM = '\\uFEFF';\n \n-    private Charset charset = StandardCharsets.UTF_8;\n+  private Charset charset = StandardCharsets.UTF_8;\n \n-    public RunScriptCommand(Session session) {\n-        super(session);\n-    }\n+  public RunScriptCommand(Session session) {\n+    super(session);\n+  }\n \n-    @Override\n-    public int update() {\n-        session.getUser().checkAdmin();\n-        int count = 0;\n-        try {\n-            openInput();\n-            BufferedReader reader = new BufferedReader(new InputStreamReader(in, charset));\n-            // if necessary, strip the BOM from the front of the file\n-            reader.mark(1);\n-            if (reader.read() != UTF8_BOM) {\n-                reader.reset();\n-            }\n-            ScriptReader r = new ScriptReader(reader);\n-            while (true) {\n-                String sql = r.readStatement();\n-                if (sql == null) {\n-                    break;\n-                }\n-                execute(sql);\n-                count++;\n-                if ((count & 127) == 0) {\n-                    checkCanceled();\n-                }\n-            }\n-            r.close();\n-        } catch (IOException e) {\n-            throw DbException.convertIOException(e, null);\n-        } finally {\n-            closeIO();\n+  @Override\n+  public int update() {\n+    session.getUser().checkAdmin();\n+    int count = 0;\n+    try {\n+      openInput();\n+      BufferedReader reader = new BufferedReader(new InputStreamReader(in, charset));\n+      // if necessary, strip the BOM from the front of the file\n+      reader.mark(1);\n+      if (reader.read() != UTF8_BOM) {\n+        reader.reset();\n+      }\n+      ScriptReader r = new ScriptReader(reader);\n+      while (true) {\n+        String sql = r.readStatement();\n+        if (sql == null) {\n+          break;\n         }\n-        return count;\n-    }\n-\n-    private void execute(String sql) {\n-        try {\n-            Prepared command = session.prepare(sql);\n-            if (command.isQuery()) {\n-                command.query(0);\n-            } else {\n-                command.update();\n-            }\n-            if (session.getAutoCommit()) {\n-                session.commit(false);\n-            }\n-        } catch (DbException e) {\n-            throw e.addSQL(sql);\n+        execute(sql);\n+        count++;\n+        if ((count & 127) == 0) {\n+          checkCanceled();\n         }\n+      }\n+      r.close();\n+    } catch (IOException e) {\n+      throw DbException.convertIOException(e, null);\n+    } finally {\n+      closeIO();\n     }\n+    return count;\n+  }\n \n-    public void setCharset(Charset charset) {\n-        this.charset = charset;\n+  private void execute(String sql) {\n+    try {\n+      Prepared command = session.prepare(sql);\n+      if (command.isQuery()) {\n+        command.query(0);\n+      } else {\n+        command.update();\n+      }\n+      if (session.getAutoCommit()) {\n+        session.commit(false);\n+      }\n+    } catch (DbException e) {\n+      throw e.addSQL(sql);\n     }\n+  }\n \n-    @Override\n-    public ResultInterface queryMeta() {\n-        return null;\n-    }\n+  public void setCharset(Charset charset) {\n+    this.charset = charset;\n+  }\n \n-    @Override\n-    public int getType() {\n-        return CommandInterface.RUNSCRIPT;\n-    }\n+  @Override\n+  public ResultInterface queryMeta() {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getType() {\n+    return CommandInterface.RUNSCRIPT;\n+  }\n \n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/441/RunScriptCommand.java\nindex 674043655df..b0d525ab823 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/441/RunScriptCommand.java\n@@ -22,7 +22,8 @@ import org.h2.util.ScriptReader;\n  * This class represents the statement\n  * RUNSCRIPT\n  */\n-public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+public class RunScriptCommand extends ScriptBase {\n+    //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n \n     /**\n      * The byte order mark.\n@@ -100,4 +101,4 @@ public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n         return CommandInterface.RUNSCRIPT;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "column": "52",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/441/RunScriptCommand.java\nindex 674043655df..607501203de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/441/RunScriptCommand.java\n@@ -10,7 +10,6 @@ import java.io.IOException;\n import java.io.InputStreamReader;\n import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n-\n import org.h2.command.CommandInterface;\n import org.h2.command.Prepared;\n import org.h2.engine.Session;\n@@ -22,6 +21,8 @@ import org.h2.util.ScriptReader;\n  * This class represents the statement\n  * RUNSCRIPT\n  */\n+\n+\n public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n \n     /**\n@@ -29,8 +30,8 @@ public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n      * 0xfeff because this is the Unicode char\n      * represented by the UTF-8 byte order mark (EF BB BF).\n      */\n-    private static final char UTF8_BOM = '\\uFEFF';\n \n+    private static final char UTF8_BOM = '\\uFEFF';\n     private Charset charset = StandardCharsets.UTF_8;\n \n     public RunScriptCommand(Session session) {\n@@ -86,6 +87,7 @@ public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n         }\n     }\n \n+\n     public void setCharset(Charset charset) {\n         this.charset = charset;\n     }\n@@ -100,4 +102,4 @@ public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n         return CommandInterface.RUNSCRIPT;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/441/RunScriptCommand.java\nindex 674043655df..0f2d404681a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/441/RunScriptCommand.java\n@@ -22,9 +22,11 @@ import org.h2.util.ScriptReader;\n  * This class represents the statement\n  * RUNSCRIPT\n  */\n-public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+public class RunScriptCommand extends ScriptBase {\n \n-    /**\n+    //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+\n+/**\n      * The byte order mark.\n      * 0xfeff because this is the Unicode char\n      * represented by the UTF-8 byte order mark (EF BB BF).\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/441/RunScriptCommand.java\nindex 674043655df..a4e7344cfab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/441/RunScriptCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/441/RunScriptCommand.java\n@@ -22,9 +22,10 @@ import org.h2.util.ScriptReader;\n  * This class represents the statement\n  * RUNSCRIPT\n  */\n-public class RunScriptCommand extends ScriptBase { //\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+public class RunScriptCommand extends ScriptBase {\n \n-    /**\n+//\u6267\u884cSQL\u811a\u672c\u6587\u4ef6\n+/**\n      * The byte order mark.\n      * 0xfeff because this is the Unicode char\n      * represented by the UTF-8 byte order mark (EF BB BF).\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "moquette-io-moquette",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "warning",
                "message": "missing copyright header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "package io.moquette.persistence;\n\nimport io.moquette.broker.IQueueRepository;\nimport io.moquette.broker.SessionRegistry;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/33/H2QueueRepository.java\nindex 84e940ca34d..f1e1d5159b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/33/H2QueueRepository.java\n@@ -9,17 +9,17 @@ import java.util.concurrent.ConcurrentLinkedQueue;\n \n public class H2QueueRepository implements IQueueRepository {\n \n-    private MVStore mvStore;\n+  private MVStore mvStore;\n \n-    public H2QueueRepository(MVStore mvStore) {\n-        this.mvStore = mvStore;\n-    }\n+  public H2QueueRepository(MVStore mvStore) {\n+    this.mvStore = mvStore;\n+  }\n \n-    @Override\n-    public Queue<SessionRegistry.EnqueuedMessage> createQueue(String cli, boolean clean) {\n-        if (!clean) {\n-            return new H2PersistentQueue<>(mvStore, cli);\n-        }\n-        return new ConcurrentLinkedQueue<>();\n+  @Override\n+  public Queue<SessionRegistry.EnqueuedMessage> createQueue(String cli, boolean clean) {\n+    if (!clean) {\n+      return new H2PersistentQueue<>(mvStore, cli);\n     }\n+    return new ConcurrentLinkedQueue<>();\n+  }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/33/H2QueueRepository.java\nindex 84e940ca34d..ff8d8a77161 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/33/H2QueueRepository.java\n@@ -22,4 +22,4 @@ public class H2QueueRepository implements IQueueRepository {\n         }\n         return new ConcurrentLinkedQueue<>();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/33/H2QueueRepository.java\nindex 84e940ca34d..5aa044c1b22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/33/H2QueueRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/33/H2QueueRepository.java\n@@ -3,10 +3,10 @@ package io.moquette.persistence;\n import io.moquette.broker.IQueueRepository;\n import io.moquette.broker.SessionRegistry;\n import org.h2.mvstore.MVStore;\n-\n import java.util.Queue;\n import java.util.concurrent.ConcurrentLinkedQueue;\n \n+\n public class H2QueueRepository implements IQueueRepository {\n \n     private MVStore mvStore;\n@@ -22,4 +22,4 @@ public class H2QueueRepository implements IQueueRepository {\n         }\n         return new ConcurrentLinkedQueue<>();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
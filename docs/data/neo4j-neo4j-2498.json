{
    "project_name": "neo4j-neo4j",
    "error_id": "2498",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2498/BoltResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2498/BoltResult.java\nindex 7b2a8811990..1f6903b5471 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2498/BoltResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2498/BoltResult.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime;\n \n import org.neo4j.bolt.messaging.BoltRecordConsumer;\n@@ -24,24 +25,26 @@ import org.neo4j.values.AnyValue;\n \n /**\n  * Represents a data stream of records, this is the output cypher produces.\n- *\n+ * <p>\n  * Streams contains nominally uniform records meaning each record has the same set of named fields.\n  * However, the contents of these fields may vary by both type and value and may be null.\n  */\n public interface BoltResult extends AutoCloseable\n {\n-    /** Positional names for all fields in every record of this stream. */\n+    /**\n+     * Positional names for all fields in every record of this stream.\n+     */\n     String[] fieldNames();\n \n     /**\n      * @return {@code true} if there could be more records, {@code false} otherwise.\n      */\n-    boolean handleRecords( RecordConsumer recordConsumer, long size ) throws Throwable;\n+    boolean handleRecords(RecordConsumer recordConsumer, long size) throws Throwable;\n \n     /**\n      * @return {@code true} if there could be more records, {@code false} otherwise.\n      */\n-    boolean discardRecords( DiscardingRecordConsumer recordConsumer, long size ) throws Throwable;\n+    boolean discardRecords(DiscardingRecordConsumer recordConsumer, long size) throws Throwable;\n \n     @Override\n     void close();\n@@ -52,19 +55,19 @@ public interface BoltResult extends AutoCloseable\n          * Associate arbitrary metadata with the result stream. This will get transferred at the end of the stream.\n          * Please stick to Neo4j type system types (Map, List, Integer, Float, Boolean, String etc)\n          */\n-        void addMetadata( String key, AnyValue value );\n+        void addMetadata(String key, AnyValue value);\n     }\n \n     abstract class DiscardingRecordConsumer implements RecordConsumer\n     {\n         @Override\n-        public void beginRecord( int numberOfFields )\n+        public void beginRecord(int numberOfFields)\n         {\n             //discard\n         }\n \n         @Override\n-        public void consumeField( AnyValue value )\n+        public void consumeField(AnyValue value)\n         {\n             //discard\n         }\n@@ -98,13 +101,13 @@ public interface BoltResult extends AutoCloseable\n         }\n \n         @Override\n-        public boolean handleRecords( RecordConsumer recordConsumer, long size )\n+        public boolean handleRecords(RecordConsumer recordConsumer, long size)\n         {\n             return false;\n         }\n \n         @Override\n-        public boolean discardRecords( DiscardingRecordConsumer recordConsumer, long size )\n+        public boolean discardRecords(DiscardingRecordConsumer recordConsumer, long size)\n         {\n             return false;\n         }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
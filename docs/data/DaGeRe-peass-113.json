{
    "project_name": "DaGeRe-peass",
    "error_id": "113",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "120",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n\n      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n            causeSearchConfig.getTestCase().getShortClazz());\n      treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n      if (treeDataFile.exists()) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/113/CausePersistenceManager.java\nindex fa699ff77ee..ab663786ade 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/113/CausePersistenceManager.java\n@@ -23,8 +23,7 @@ public class CausePersistenceManager {\n       data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n       dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n \n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n+      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator + causeSearchConfig.getTestCase().getShortClazz());\n       treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n       if (treeDataFile.exists()) {\n          throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/113/CausePersistenceManager.java\nindex fa699ff77ee..676e775b65c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/113/CausePersistenceManager.java\n@@ -14,33 +14,33 @@ import de.peass.utils.Constants;\n \n public class CausePersistenceManager {\n \n-   protected final CauseSearchData data;\n-   protected final CauseSearchData dataDetails;\n-   private final File treeDataFile;\n-   private final File treeDataFileDetails;\n-\n-   public CausePersistenceManager(final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig, final CauseSearchFolders folders) {\n-      data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n-      dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n-\n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n-      treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n-      if (treeDataFile.exists()) {\n-         throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n-      }\n-      treeDataFolder.mkdirs();\n-      treeDataFileDetails = new File(treeDataFolder, \"details\" + File.separator + causeSearchConfig.getTestCase().getMethod() + \".json\");\n-      treeDataFileDetails.getParentFile().mkdirs();\n-   }\n-   \n-   protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n-      Constants.OBJECTMAPPER.writeValue(treeDataFile, data);\n-      Constants.OBJECTMAPPER.writeValue(treeDataFileDetails, dataDetails);\n-   }\n-\n-   public void addMeasurement(final CallTreeNode predecessorNode) {\n-      data.addDiff(predecessorNode);\n-      dataDetails.addDetailDiff(predecessorNode);\n-   }\n+  protected final CauseSearchData data;\n+  protected final CauseSearchData dataDetails;\n+  private final File treeDataFile;\n+  private final File treeDataFileDetails;\n+\n+  public CausePersistenceManager(final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig, final CauseSearchFolders folders) {\n+    data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n+    dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n+\n+    final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n+        causeSearchConfig.getTestCase().getShortClazz());\n+    treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n+    if (treeDataFile.exists()) {\n+      throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n+    }\n+    treeDataFolder.mkdirs();\n+    treeDataFileDetails = new File(treeDataFolder, \"details\" + File.separator + causeSearchConfig.getTestCase().getMethod() + \".json\");\n+    treeDataFileDetails.getParentFile().mkdirs();\n+  }\n+\n+  protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n+    Constants.OBJECTMAPPER.writeValue(treeDataFile, data);\n+    Constants.OBJECTMAPPER.writeValue(treeDataFileDetails, dataDetails);\n+  }\n+\n+  public void addMeasurement(final CallTreeNode predecessorNode) {\n+    data.addDiff(predecessorNode);\n+    dataDetails.addDetailDiff(predecessorNode);\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/113/CausePersistenceManager.java\nindex fa699ff77ee..927d7cdb906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/113/CausePersistenceManager.java\n@@ -14,33 +14,32 @@ import de.peass.utils.Constants;\n \n public class CausePersistenceManager {\n \n-   protected final CauseSearchData data;\n+\tprotected final CauseSearchData data;\n    protected final CauseSearchData dataDetails;\n    private final File treeDataFile;\n    private final File treeDataFileDetails;\n \n    public CausePersistenceManager(final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig, final CauseSearchFolders folders) {\n-      data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n+\tdata = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n       dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n \n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n-      treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n+      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator + causeSearchConfig.getTestCase().getShortClazz());\n+treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n       if (treeDataFile.exists()) {\n-         throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n-      }\n+\tthrow new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n+\t}\n       treeDataFolder.mkdirs();\n       treeDataFileDetails = new File(treeDataFolder, \"details\" + File.separator + causeSearchConfig.getTestCase().getMethod() + \".json\");\n       treeDataFileDetails.getParentFile().mkdirs();\n-   }\n-   \n-   protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n-      Constants.OBJECTMAPPER.writeValue(treeDataFile, data);\n+\t}\n+\n+protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n+\tConstants.OBJECTMAPPER.writeValue(treeDataFile, data);\n       Constants.OBJECTMAPPER.writeValue(treeDataFileDetails, dataDetails);\n-   }\n+\t}\n \n    public void addMeasurement(final CallTreeNode predecessorNode) {\n-      data.addDiff(predecessorNode);\n+\tdata.addDiff(predecessorNode);\n       dataDetails.addDetailDiff(predecessorNode);\n-   }\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/113/CausePersistenceManager.java\nindex fa699ff77ee..cafe40a90f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/113/CausePersistenceManager.java\n@@ -2,45 +2,50 @@ package de.peass.measurement.searchcause;\n \n import java.io.File;\n import java.io.IOException;\n-\n import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.databind.JsonMappingException;\n-\n import de.peass.dependency.CauseSearchFolders;\n import de.peass.dependency.execution.MeasurementConfiguration;\n import de.peass.measurement.searchcause.data.CallTreeNode;\n import de.peass.measurement.searchcause.data.CauseSearchData;\n import de.peass.utils.Constants;\n \n+\n public class CausePersistenceManager {\n \n-   protected final CauseSearchData data;\n-   protected final CauseSearchData dataDetails;\n-   private final File treeDataFile;\n-   private final File treeDataFileDetails;\n-\n-   public CausePersistenceManager(final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig, final CauseSearchFolders folders) {\n-      data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n-      dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n-\n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n-      treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n-      if (treeDataFile.exists()) {\n-         throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n-      }\n-      treeDataFolder.mkdirs();\n-      treeDataFileDetails = new File(treeDataFolder, \"details\" + File.separator + causeSearchConfig.getTestCase().getMethod() + \".json\");\n-      treeDataFileDetails.getParentFile().mkdirs();\n-   }\n-   \n-   protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n-      Constants.OBJECTMAPPER.writeValue(treeDataFile, data);\n-      Constants.OBJECTMAPPER.writeValue(treeDataFileDetails, dataDetails);\n-   }\n-\n-   public void addMeasurement(final CallTreeNode predecessorNode) {\n-      data.addDiff(predecessorNode);\n-      dataDetails.addDetailDiff(predecessorNode);\n-   }\n-}\n+ protected final CauseSearchData data;\n+ protected final CauseSearchData dataDetails;\n+ private final File treeDataFile;\n+ private final File treeDataFileDetails;\n+\n+ public CausePersistenceManager(final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig, final CauseSearchFolders folders) {\n+  data = new CauseSearchData(causeSearchConfig.getTestCase(),\n+   measurementConfig.getVersion(),\n+    measurementConfig.getVersionOld(),\n+     measurementConfig);\n+  dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(),\n+   measurementConfig.getVersion(),\n+    measurementConfig.getVersionOld(),\n+     measurementConfig);\n+\n+  final File treeDataFolder = new File(folders.getRcaTreeFolder(),\n+   measurementConfig.getVersion() + File.separator + causeSearchConfig.getTestCase().getShortClazz());\n+  treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n+  if (treeDataFile.exists()) {\n+   throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n+  }\n+  treeDataFolder.mkdirs();\n+  treeDataFileDetails = new File(treeDataFolder, \"details\" + File.separator + causeSearchConfig.getTestCase().getMethod() + \".json\");\n+  treeDataFileDetails.getParentFile().mkdirs();\n+ }\n+\n+ protected void writeTreeState() throws IOException, JsonGenerationException, JsonMappingException {\n+  Constants.OBJECTMAPPER.writeValue(treeDataFile, data);\n+  Constants.OBJECTMAPPER.writeValue(treeDataFileDetails, dataDetails);\n+ }\n+\n+ public void addMeasurement(final CallTreeNode predecessorNode) {\n+  data.addDiff(predecessorNode);\n+  dataDetails.addDetailDiff(predecessorNode);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/113/CausePersistenceManager.java\nindex fa699ff77ee..ab663786ade 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/113/CausePersistenceManager.java\n@@ -23,8 +23,7 @@ public class CausePersistenceManager {\n       data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n       dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n \n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n+      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator + causeSearchConfig.getTestCase().getShortClazz());\n       treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n       if (treeDataFile.exists()) {\n          throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/113/CausePersistenceManager.java\nindex fa699ff77ee..ab663786ade 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/113/CausePersistenceManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/113/CausePersistenceManager.java\n@@ -23,8 +23,7 @@ public class CausePersistenceManager {\n       data = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n       dataDetails = new CauseSearchData(causeSearchConfig.getTestCase(), measurementConfig.getVersion(), measurementConfig.getVersionOld(), measurementConfig);\n \n-      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator +\n-            causeSearchConfig.getTestCase().getShortClazz());\n+      final File treeDataFolder = new File(folders.getRcaTreeFolder(), measurementConfig.getVersion() + File.separator + causeSearchConfig.getTestCase().getShortClazz());\n       treeDataFile = new File(treeDataFolder, causeSearchConfig.getTestCase().getMethod() + \".json\");\n       if (treeDataFile.exists()) {\n          throw new RuntimeException(\"Old tree data folder \" + treeDataFile.getAbsolutePath() + \" exists - please cleanup!\");\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij"
    ]
}
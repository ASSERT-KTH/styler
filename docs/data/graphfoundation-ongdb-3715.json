{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3715",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3715/PropertyOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3715/PropertyOwner.java\nindex 7e62ea62ba0..ab7a7e4eca8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3715/PropertyOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3715/PropertyOwner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import org.neo4j.consistency.report.PendingReferenceCheck;\n@@ -31,102 +32,102 @@ import static org.neo4j.consistency.store.RecordReference.SkippingReference.skip\n \n abstract class PropertyOwner<RECORD extends PrimitiveRecord> implements Owner\n {\n-    abstract RecordReference<RECORD> record( RecordAccess records );\n+  abstract RecordReference<RECORD> record(RecordAccess records);\n+\n+  @Override\n+  public void checkOrphanage()\n+  {\n+    // default: do nothing\n+  }\n+\n+  static class OwningNode extends PropertyOwner<NodeRecord>\n+  {\n+    private final long id;\n+\n+    OwningNode(NodeRecord record)\n+    {\n+      this.id = record.getId();\n+    }\n \n     @Override\n-    public void checkOrphanage()\n+    RecordReference<NodeRecord> record(RecordAccess records)\n+    {\n+      return records.node(id);\n+    }\n+  }\n+\n+  static class OwningRelationship extends PropertyOwner<RelationshipRecord>\n+  {\n+    private final long id;\n+\n+    OwningRelationship(RelationshipRecord record)\n+    {\n+      this.id = record.getId();\n+    }\n+\n+    @Override\n+    RecordReference<RelationshipRecord> record(RecordAccess records)\n     {\n-        // default: do nothing\n+      return records.relationship(id);\n     }\n+  }\n \n-    static class OwningNode extends PropertyOwner<NodeRecord>\n+  static final PropertyOwner<NeoStoreRecord> OWNING_GRAPH = new PropertyOwner<NeoStoreRecord>()\n+  {\n+    @Override\n+    RecordReference<NeoStoreRecord> record(RecordAccess records)\n     {\n-        private final long id;\n-\n-        OwningNode( NodeRecord record )\n-        {\n-            this.id = record.getId();\n-        }\n-\n-        @Override\n-        RecordReference<NodeRecord> record( RecordAccess records )\n-        {\n-            return records.node( id );\n-        }\n+      return records.graph();\n     }\n+  };\n+\n+  static class UnknownOwner extends PropertyOwner<PrimitiveRecord> implements RecordReference<PrimitiveRecord>\n+  {\n+    private PendingReferenceCheck<PrimitiveRecord> reporter;\n \n-    static class OwningRelationship extends PropertyOwner<RelationshipRecord>\n+    @Override\n+    RecordReference<PrimitiveRecord> record(RecordAccess records)\n     {\n-        private final long id;\n-\n-        OwningRelationship( RelationshipRecord record )\n-        {\n-            this.id = record.getId();\n-        }\n-\n-        @Override\n-        RecordReference<RelationshipRecord> record( RecordAccess records )\n-        {\n-            return records.relationship( id );\n-        }\n+      // Getting the record for this owner means that some other owner replaced it\n+      // that means that it isn't an orphan, so we skip this orphan check\n+      // and return a record for conflict check that always is ok (by skipping the check)\n+      this.markInCustody();\n+      return skipReference();\n     }\n \n-    static final PropertyOwner<NeoStoreRecord> OWNING_GRAPH = new PropertyOwner<NeoStoreRecord>()\n+    @Override\n+    public void checkOrphanage()\n     {\n-        @Override\n-        RecordReference<NeoStoreRecord> record( RecordAccess records )\n-        {\n-            return records.graph();\n-        }\n-    };\n-\n-    static class UnknownOwner extends PropertyOwner<PrimitiveRecord> implements RecordReference<PrimitiveRecord>\n+      PendingReferenceCheck<PrimitiveRecord> reporter;\n+      synchronized (this)\n+      {\n+        reporter = this.reporter;\n+        this.reporter = null;\n+      }\n+      if (reporter != null)\n+      {\n+        reporter.checkReference(null, null);\n+      }\n+    }\n+\n+    synchronized void markInCustody()\n     {\n-        private PendingReferenceCheck<PrimitiveRecord> reporter;\n-\n-        @Override\n-        RecordReference<PrimitiveRecord> record( RecordAccess records )\n-        {\n-            // Getting the record for this owner means that some other owner replaced it\n-            // that means that it isn't an orphan, so we skip this orphan check\n-            // and return a record for conflict check that always is ok (by skipping the check)\n-            this.markInCustody();\n-            return skipReference();\n-        }\n-\n-        @Override\n-        public void checkOrphanage()\n-        {\n-            PendingReferenceCheck<PrimitiveRecord> reporter;\n-            synchronized ( this )\n-            {\n-                reporter = this.reporter;\n-                this.reporter = null;\n-            }\n-            if ( reporter != null )\n-            {\n-                reporter.checkReference( null, null );\n-            }\n-        }\n-\n-        synchronized void markInCustody()\n-        {\n-            if ( reporter != null )\n-            {\n-                reporter.skip();\n-                reporter = null;\n-            }\n-        }\n-\n-        @Override\n-        public synchronized void dispatch( PendingReferenceCheck<PrimitiveRecord> reporter )\n-        {\n-            this.reporter = reporter;\n-        }\n+      if (reporter != null)\n+      {\n+        reporter.skip();\n+        reporter = null;\n+      }\n     }\n \n-    private PropertyOwner()\n+    @Override\n+    public synchronized void dispatch(PendingReferenceCheck<PrimitiveRecord> reporter)\n     {\n-        // only internal subclasses\n+      this.reporter = reporter;\n     }\n+  }\n+\n+  private PropertyOwner()\n+  {\n+    // only internal subclasses\n+  }\n }\n",
            "diff_size": 136
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3715/PropertyOwner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3715/PropertyOwner.java\nindex 7e62ea62ba0..6f139eca211 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3715/PropertyOwner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3715/PropertyOwner.java\n@@ -103,7 +103,8 @@ abstract class PropertyOwner<RECORD extends PrimitiveRecord> implements Owner\n                 reporter = this.reporter;\n                 this.reporter = null;\n             }\n-            if ( reporter != null )\n+\n+if ( reporter != null )\n             {\n                 reporter.checkReference( null, null );\n             }\n@@ -129,4 +130,4 @@ abstract class PropertyOwner<RECORD extends PrimitiveRecord> implements Owner\n     {\n         // only internal subclasses\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
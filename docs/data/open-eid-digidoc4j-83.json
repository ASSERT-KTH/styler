{
    "project_name": "open-eid-digidoc4j",
    "error_id": "83",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "118",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      }\n    } catch (IllegalStateException e) {\n      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n              \" certificate source?\",\n          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n              .getDSSIdAsString(), e);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "82",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/83/OCSPCertificateValidator.java\nindex 092d2311ad5..f47f4f06789 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/83/OCSPCertificateValidator.java\n@@ -80,7 +80,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       }\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "82",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/83/OCSPCertificateValidator.java\nindex 092d2311ad5..d44a02ca86d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/83/OCSPCertificateValidator.java\n@@ -85,7 +85,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n               .getDSSIdAsString(), e);\n     }\n     throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+        \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getFromCertificateSource(X500Principal principal) {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/83/OCSPCertificateValidator.java\nindex 092d2311ad5..d6745e8ab31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/83/OCSPCertificateValidator.java\n@@ -45,8 +45,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -79,13 +78,9 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n-    }\n-    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n+  }\n+    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED, \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getFromCertificateSource(X500Principal principal) {\n@@ -114,4 +109,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n     return certificateSource;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/83/OCSPCertificateValidator.java\nindex 092d2311ad5..97b8aebc81f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/83/OCSPCertificateValidator.java\n@@ -22,7 +22,6 @@ import org.digidoc4j.exceptions.CertificateValidationException.CertificateValida\n import org.digidoc4j.exceptions.NetworkException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.security.auth.x500.X500Principal;\n import java.security.cert.CertificateEncodingException;\n import java.security.cert.X509Certificate;\n@@ -33,6 +32,8 @@ import java.util.List;\n  * <p>\n  * Created by Janar Rahumeel (CGI Estonia)\n  */\n+\n+\n public class OCSPCertificateValidator implements CertificateValidator {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(OCSPCertificateValidator.class);\n@@ -45,8 +46,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -79,20 +80,16 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n     }\n-    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED, \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getFromCertificateSource(X500Principal principal) {\n     List<CertificateToken> tokens = this.getCertificateTokens(principal);\n     if (tokens.size() != 1) {\n       throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\",\n-          tokens.size()));\n+        tokens.size()));\n     }\n     return tokens.get(0);\n   }\n@@ -113,5 +110,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n   public CertificateSource getCertificateSource() {\n     return certificateSource;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "82",
                    "column": "117",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "column": "117",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/83/OCSPCertificateValidator.java\nindex 092d2311ad5..cd778de9b66 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/83/OCSPCertificateValidator.java\n@@ -79,8 +79,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\"+\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "82",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/83/OCSPCertificateValidator.java\nindex 092d2311ad5..f47f4f06789 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/83/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/83/OCSPCertificateValidator.java\n@@ -80,7 +80,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       }\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
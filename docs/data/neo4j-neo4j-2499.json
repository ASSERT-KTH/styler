{
    "project_name": "neo4j-neo4j",
    "error_id": "2499",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2499/CheckerContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2499/CheckerContext.java\nindex 5dbc3a44f17..e64121260f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2499/CheckerContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2499/CheckerContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import java.util.List;\n@@ -70,54 +71,54 @@ class CheckerContext\n     private final AtomicBoolean cancelled;\n \n     CheckerContext(\n-            NeoStores neoStores,\n-            IndexAccessors indexAccessors,\n-            LabelScanStore labelScanStore,\n-            RelationshipTypeScanStore relationshipTypeScanStore,\n-            ParallelExecution execution,\n-            ConsistencyReport.Reporter reporter,\n-            CacheAccess cacheAccess,\n-            TokenHolders tokenHolders,\n-            RecordLoading recordLoader,\n-            CountsState observedCounts,\n-            NodeBasedMemoryLimiter limiter,\n-            ProgressMonitorFactory.MultiPartBuilder progress,\n-            PageCache pageCache,\n-            PageCacheTracer pageCacheTracer,\n-            MemoryTracker memoryTracker,\n-            boolean debug,\n-            ConsistencyFlags consistencyFlags )\n+      NeoStores neoStores,\n+      IndexAccessors indexAccessors,\n+      LabelScanStore labelScanStore,\n+      RelationshipTypeScanStore relationshipTypeScanStore,\n+      ParallelExecution execution,\n+      ConsistencyReport.Reporter reporter,\n+      CacheAccess cacheAccess,\n+      TokenHolders tokenHolders,\n+      RecordLoading recordLoader,\n+      CountsState observedCounts,\n+      NodeBasedMemoryLimiter limiter,\n+      ProgressMonitorFactory.MultiPartBuilder progress,\n+      PageCache pageCache,\n+      PageCacheTracer pageCacheTracer,\n+      MemoryTracker memoryTracker,\n+      boolean debug,\n+      ConsistencyFlags consistencyFlags)\n     {\n-        this( neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution, reporter, cacheAccess, tokenHolders, recordLoader,\n-                observedCounts, limiter, progress, pageCache, pageCacheTracer, memoryTracker, debug, new AtomicBoolean(), consistencyFlags );\n+        this(neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution, reporter, cacheAccess, tokenHolders, recordLoader,\n+          observedCounts, limiter, progress, pageCache, pageCacheTracer, memoryTracker, debug, new AtomicBoolean(), consistencyFlags);\n     }\n \n     private CheckerContext(\n-            NeoStores neoStores,\n-            IndexAccessors indexAccessors,\n-            LabelScanStore labelScanStore,\n-            RelationshipTypeScanStore relationshipTypeScanStore,\n-            ParallelExecution execution,\n-            ConsistencyReport.Reporter reporter,\n-            CacheAccess cacheAccess,\n-            TokenHolders tokenHolders,\n-            RecordLoading recordLoader,\n-            CountsState observedCounts,\n-            NodeBasedMemoryLimiter limiter,\n-            ProgressMonitorFactory.MultiPartBuilder progress,\n-            PageCache pageCache,\n-            PageCacheTracer pageCacheTracer,\n-            MemoryTracker memoryTracker,\n-            boolean debug,\n-            AtomicBoolean cancelled,\n-            ConsistencyFlags consistencyFlags )\n+      NeoStores neoStores,\n+      IndexAccessors indexAccessors,\n+      LabelScanStore labelScanStore,\n+      RelationshipTypeScanStore relationshipTypeScanStore,\n+      ParallelExecution execution,\n+      ConsistencyReport.Reporter reporter,\n+      CacheAccess cacheAccess,\n+      TokenHolders tokenHolders,\n+      RecordLoading recordLoader,\n+      CountsState observedCounts,\n+      NodeBasedMemoryLimiter limiter,\n+      ProgressMonitorFactory.MultiPartBuilder progress,\n+      PageCache pageCache,\n+      PageCacheTracer pageCacheTracer,\n+      MemoryTracker memoryTracker,\n+      boolean debug,\n+      AtomicBoolean cancelled,\n+      ConsistencyFlags consistencyFlags)\n     {\n         this.neoStores = neoStores;\n         this.highNodeId = neoStores.getNodeStore().getHighId();\n         this.indexAccessors = indexAccessors;\n         this.debug = debug;\n         this.consistencyFlags = consistencyFlags;\n-        this.indexSizes = new IndexSizes( execution, indexAccessors, neoStores.getNodeStore().getHighId(), pageCacheTracer );\n+        this.indexSizes = new IndexSizes(execution, indexAccessors, neoStores.getNodeStore().getHighId(), pageCacheTracer);\n         this.labelScanStore = labelScanStore;\n         this.relationshipTypeScanStore = relationshipTypeScanStore;\n         this.execution = execution;\n@@ -137,19 +138,19 @@ class CheckerContext\n \n     CheckerContext withoutReporting()\n     {\n-        return new CheckerContext( neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution, ConsistencyReport.NO_REPORT, cacheAccess,\n-                tokenHolders, recordLoader, observedCounts, limiter, progress, pageCache, pageCacheTracer, memoryTracker, debug, cancelled, consistencyFlags );\n+        return new CheckerContext(neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution, ConsistencyReport.NO_REPORT, cacheAccess,\n+          tokenHolders, recordLoader, observedCounts, limiter, progress, pageCache, pageCacheTracer, memoryTracker, debug, cancelled, consistencyFlags);\n     }\n \n     void initialize() throws Exception\n     {\n-        debug( limiter.toString() );\n-        timeOperation( \"Initialize index sizes\", indexSizes::initialize, false );\n-        if ( debug )\n+        debug(limiter.toString());\n+        timeOperation(\"Initialize index sizes\", indexSizes::initialize, false);\n+        if (debug)\n         {\n-            debugPrintIndexes( indexSizes.largeIndexes( EntityType.NODE ), \"considered large node indexes\" );\n-            debugPrintIndexes( indexSizes.smallIndexes( EntityType.NODE ), \"considered small node indexes\" );\n-            debugPrintIndexes( indexAccessors.onlineRules( EntityType.RELATIONSHIP ), \"the relationship indexes\" );\n+            debugPrintIndexes(indexSizes.largeIndexes(EntityType.NODE), \"considered large node indexes\");\n+            debugPrintIndexes(indexSizes.smallIndexes(EntityType.NODE), \"considered small node indexes\");\n+            debugPrintIndexes(indexAccessors.onlineRules(EntityType.RELATIONSHIP), \"the relationship indexes\");\n         }\n     }\n \n@@ -158,27 +159,26 @@ class CheckerContext\n         observedCounts.clearDynamicNodeLabelsCache();\n     }\n \n-    private void debugPrintIndexes( List<IndexDescriptor> indexes, String description )\n+    private void debugPrintIndexes(List<IndexDescriptor> indexes, String description)\n     {\n-        if ( !indexes.isEmpty() )\n+        if (!indexes.isEmpty())\n         {\n-            debug( \"These are %s (%d):\", description, indexes.size() );\n-            indexes.forEach( index -> debug( \"  %s\", index ) );\n+            debug(\"These are %s (%d):\", description, indexes.size());\n+            indexes.forEach(index -> debug(\"  %s\", index));\n         }\n     }\n \n-    private void timeOperation( String description, ThrowingRunnable action, boolean linePadding ) throws Exception\n+    private void timeOperation(String description, ThrowingRunnable action, boolean linePadding) throws Exception\n     {\n         Stopwatch stopwatch = Stopwatch.start();\n         try\n         {\n-            debug( linePadding, \"STARTED %s\", description );\n+            debug(linePadding, \"STARTED %s\", description);\n             action.doRun();\n-            debug( linePadding, \"COMPLETED %s, took %s\", description, duration( stopwatch.elapsed( TimeUnit.MILLISECONDS ) ) );\n-        }\n-        catch ( Exception e )\n+            debug(linePadding, \"COMPLETED %s, took %s\", description, duration(stopwatch.elapsed(TimeUnit.MILLISECONDS)));\n+        } catch (Exception e)\n         {\n-            debug( linePadding, \"FAILED %s after %s\", description, duration( stopwatch.elapsed( TimeUnit.MILLISECONDS ) ) );\n+            debug(linePadding, \"FAILED %s after %s\", description, duration(stopwatch.elapsed(TimeUnit.MILLISECONDS)));\n             throw e;\n         }\n     }\n@@ -190,46 +190,46 @@ class CheckerContext\n \n     void cancel()\n     {\n-        cancelled.set( true );\n+        cancelled.set(true);\n     }\n \n-    void runIfAllowed( Checker checker, LongRange range ) throws Exception\n+    void runIfAllowed(Checker checker, LongRange range) throws Exception\n     {\n-        if ( !isCancelled() && checker.shouldBeChecked( consistencyFlags ) )\n+        if (!isCancelled() && checker.shouldBeChecked(consistencyFlags))\n         {\n-            timeOperation( checker.toString(), () -> checker.check( range, limiter.isFirst( range ), limiter.isLast( range ) ), true );\n+            timeOperation(checker.toString(), () -> checker.check(range, limiter.isFirst(range), limiter.isLast(range)), true);\n         }\n     }\n \n-    void paddedDebug( String format, Object... params )\n+    void paddedDebug(String format, Object... params)\n     {\n-        debug( true, format, params );\n+        debug(true, format, params);\n     }\n \n-    void debug( String format, Object... params )\n+    void debug(String format, Object... params)\n     {\n-        debug( false, format, params );\n+        debug(false, format, params);\n     }\n \n-    private void debug( boolean linePadded, String format, Object... params )\n+    private void debug(boolean linePadded, String format, Object... params)\n     {\n-        if ( debug )\n+        if (debug)\n         {\n-            System.out.println( String.format( (linePadded ? \"%n\" : \"\") + format, params ) );\n+            System.out.println(String.format((linePadded ? \"%n\" : \"\") + format, params));\n         }\n     }\n \n-    ProgressListener progressReporter( Checker checker, String name, long totalCount )\n+    ProgressListener progressReporter(Checker checker, String name, long totalCount)\n     {\n-        return roundInsensitiveProgressReporter( checker, name, totalCount * limiter.numberOfRanges() );\n+        return roundInsensitiveProgressReporter(checker, name, totalCount * limiter.numberOfRanges());\n     }\n \n-    ProgressListener roundInsensitiveProgressReporter( Checker checker, String name, long totalCount )\n+    ProgressListener roundInsensitiveProgressReporter(Checker checker, String name, long totalCount)\n     {\n-        if ( !checker.shouldBeChecked( consistencyFlags ) )\n+        if (!checker.shouldBeChecked(consistencyFlags))\n         {\n             return ProgressListener.NONE;\n         }\n-        return progress.progressForPart( name, totalCount );\n+        return progress.progressForPart(name, totalCount);\n     }\n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
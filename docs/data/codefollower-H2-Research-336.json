{
    "project_name": "codefollower-H2-Research",
    "error_id": "336",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "46",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        session.commit(true);\n        Database db = session.getDatabase();\n        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n            throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n        }\n        if (db.findRole(roleName) != null) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/336/CreateRole.java\nindex 4cd8fa4a9f0..34446c5db58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/336/CreateRole.java\n@@ -38,8 +38,9 @@ public class CreateRole extends DefineCommand {\n         session.getUser().checkAdmin();\n         session.commit(true);\n         Database db = session.getDatabase();\n-        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n-            throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n+        if (db.findUser(roleName) != null) {\n+            //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n+        throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n         }\n         if (db.findRole(roleName) != null) {\n             if (ifNotExists) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "42",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/336/CreateRole.java\nindex 4cd8fa4a9f0..4f35fc564ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/336/CreateRole.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.command.ddl;\n \n import org.h2.api.ErrorCode;\n@@ -18,44 +19,44 @@ import org.h2.message.DbException;\n  */\n public class CreateRole extends DefineCommand {\n \n-    private String roleName;\n-    private boolean ifNotExists;\n+  private String roleName;\n+  private boolean ifNotExists;\n \n-    public CreateRole(Session session) {\n-        super(session);\n-    }\n+  public CreateRole(Session session) {\n+    super(session);\n+  }\n \n-    public void setIfNotExists(boolean ifNotExists) {\n-        this.ifNotExists = ifNotExists;\n-    }\n+  public void setIfNotExists(boolean ifNotExists) {\n+    this.ifNotExists = ifNotExists;\n+  }\n \n-    public void setRoleName(String name) {\n-        this.roleName = name;\n-    }\n+  public void setRoleName(String name) {\n+    this.roleName = name;\n+  }\n \n-    @Override\n-    public int update() {\n-        session.getUser().checkAdmin();\n-        session.commit(true);\n-        Database db = session.getDatabase();\n-        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n-            throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n-        }\n-        if (db.findRole(roleName) != null) {\n-            if (ifNotExists) {\n-                return 0;\n-            }\n-            throw DbException.get(ErrorCode.ROLE_ALREADY_EXISTS_1, roleName);\n-        }\n-        int id = getObjectId();\n-        Role role = new Role(db, id, roleName, false);\n-        db.addDatabaseObject(session, role);\n-        return 0;\n+  @Override\n+  public int update() {\n+    session.getUser().checkAdmin();\n+    session.commit(true);\n+    Database db = session.getDatabase();\n+    if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n+      throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n     }\n-\n-    @Override\n-    public int getType() {\n-        return CommandInterface.CREATE_ROLE;\n+    if (db.findRole(roleName) != null) {\n+      if (ifNotExists) {\n+        return 0;\n+      }\n+      throw DbException.get(ErrorCode.ROLE_ALREADY_EXISTS_1, roleName);\n     }\n+    int id = getObjectId();\n+    Role role = new Role(db, id, roleName, false);\n+    db.addDatabaseObject(session, role);\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getType() {\n+    return CommandInterface.CREATE_ROLE;\n+  }\n \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/336/CreateRole.java\nindex 4cd8fa4a9f0..e6a34914ccc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/336/CreateRole.java\n@@ -38,7 +38,8 @@ public class CreateRole extends DefineCommand {\n         session.getUser().checkAdmin();\n         session.commit(true);\n         Database db = session.getDatabase();\n-        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n+        if (db.findUser(roleName) != null) {\n+    //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n             throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n         }\n         if (db.findRole(roleName) != null) {\n@@ -58,4 +59,4 @@ public class CreateRole extends DefineCommand {\n         return CommandInterface.CREATE_ROLE;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "column": "46",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/336/CreateRole.java\nindex 4cd8fa4a9f0..9c4a6e07494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/336/CreateRole.java\n@@ -16,6 +16,8 @@ import org.h2.message.DbException;\n  * This class represents the statement\n  * CREATE ROLE\n  */\n+\n+\n public class CreateRole extends DefineCommand {\n \n     private String roleName;\n@@ -25,10 +27,12 @@ public class CreateRole extends DefineCommand {\n         super(session);\n     }\n \n+\n     public void setIfNotExists(boolean ifNotExists) {\n         this.ifNotExists = ifNotExists;\n     }\n \n+\n     public void setRoleName(String name) {\n         this.roleName = name;\n     }\n@@ -58,4 +62,4 @@ public class CreateRole extends DefineCommand {\n         return CommandInterface.CREATE_ROLE;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/336/CreateRole.java\nindex 4cd8fa4a9f0..34446c5db58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/336/CreateRole.java\n@@ -38,8 +38,9 @@ public class CreateRole extends DefineCommand {\n         session.getUser().checkAdmin();\n         session.commit(true);\n         Database db = session.getDatabase();\n-        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n-            throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n+        if (db.findUser(roleName) != null) {\n+            //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n+        throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n         }\n         if (db.findRole(roleName) != null) {\n             if (ifNotExists) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/336/CreateRole.java\nindex 4cd8fa4a9f0..7372fad6a25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/336/CreateRole.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/336/CreateRole.java\n@@ -38,8 +38,9 @@ public class CreateRole extends DefineCommand {\n         session.getUser().checkAdmin();\n         session.commit(true);\n         Database db = session.getDatabase();\n-        if (db.findUser(roleName) != null) { //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n-            throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n+        if (db.findUser(roleName) != null) {\n+    //\u89d2\u8272\u540d\u548c\u7528\u6237\u540d\u4e0d\u80fd\u4e00\u6837\n+        throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, roleName);\n         }\n         if (db.findRole(roleName) != null) {\n             if (ifNotExists) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
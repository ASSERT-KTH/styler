{
    "project_name": "neo4j-neo4j",
    "error_id": "1494",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1494/TokenUpdateWork.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1494/TokenUpdateWork.java\nindex 12781611937..872e0edf993 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1494/TokenUpdateWork.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1494/TokenUpdateWork.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.List;\n@@ -28,28 +29,28 @@ import org.neo4j.util.concurrent.Work;\n \n import static org.neo4j.storageengine.api.EntityTokenUpdate.SORT_BY_ENTITY_ID;\n \n-public class TokenUpdateWork implements Work<EntityTokenUpdateListener,TokenUpdateWork>\n+public class TokenUpdateWork implements Work<EntityTokenUpdateListener, TokenUpdateWork>\n {\n     private final List<EntityTokenUpdate> tokenUpdates;\n     private final PageCursorTracer cursorTracer;\n \n-    TokenUpdateWork( List<EntityTokenUpdate> tokenUpdates, PageCursorTracer cursorTracer )\n+    TokenUpdateWork(List<EntityTokenUpdate> tokenUpdates, PageCursorTracer cursorTracer)\n     {\n         this.tokenUpdates = tokenUpdates;\n         this.cursorTracer = cursorTracer;\n     }\n \n     @Override\n-    public TokenUpdateWork combine( TokenUpdateWork work )\n+    public TokenUpdateWork combine(TokenUpdateWork work)\n     {\n-        tokenUpdates.addAll( work.tokenUpdates );\n+        tokenUpdates.addAll(work.tokenUpdates);\n         return this;\n     }\n \n     @Override\n-    public void apply( EntityTokenUpdateListener listener )\n+    public void apply(EntityTokenUpdateListener listener)\n     {\n-        tokenUpdates.sort( SORT_BY_ENTITY_ID );\n-        listener.applyUpdates( tokenUpdates, cursorTracer );\n+        tokenUpdates.sort(SORT_BY_ENTITY_ID);\n+        listener.applyUpdates(tokenUpdates, cursorTracer);\n     }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
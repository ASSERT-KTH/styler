{
    "project_name": "DarLiner-weixin-java-tools",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Created by ecoolper on 2017/5/5.\n */\npublic class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n  public JoddMaterialVoiceAndImageDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n    super(requestHttp, tmpDirFile);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/styler/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\nindex ca43a1455d2..0c8be44bfb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/styler/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n@@ -22,7 +22,8 @@ import java.nio.charset.StandardCharsets;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<\n+HttpConnectionProvider, ProxyInfo> {\n   public JoddMaterialVoiceAndImageDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/intellij/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\nindex ca43a1455d2..147bb6435fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/intellij/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n@@ -22,7 +22,8 @@ import java.nio.charset.StandardCharsets;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMaterialVoiceAndImageDownloadRequestExecutor\n+    extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public JoddMaterialVoiceAndImageDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/naturalize/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\nindex ca43a1455d2..78c5bcac362 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/naturalize/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n@@ -55,4 +55,4 @@ public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVo\n       return new ByteArrayInputStream(responseContent);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/codebuff/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\nindex ca43a1455d2..99606348761 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/codebuff/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n@@ -5,14 +5,12 @@ import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n import jodd.http.ProxyInfo;\n import jodd.util.StringPool;\n-\n import me.chanjar.weixin.common.bean.result.WxError;\n import me.chanjar.weixin.common.exception.WxErrorException;\n import me.chanjar.weixin.common.util.http.RequestHttp;\n import me.chanjar.weixin.common.util.json.WxGsonBuilder;\n import me.chanjar.weixin.mp.util.http.MaterialVoiceAndImageDownloadRequestExecutor;\n import org.apache.commons.io.IOUtils;\n-\n import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -22,7 +20,10 @@ import java.nio.charset.StandardCharsets;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+\n   public JoddMaterialVoiceAndImageDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n@@ -34,7 +35,6 @@ public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVo\n       requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n     }\n     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n     request.query(\"media_id\", materialId);\n     HttpResponse response = request.send();\n     response.charset(StringPool.UTF_8);\n@@ -52,7 +52,8 @@ public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVo\n           return new ByteArrayInputStream(responseContent);\n         }\n       }\n+\n       return new ByteArrayInputStream(responseContent);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/styler_random/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\nindex ca43a1455d2..0c8be44bfb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/styler_random/27/JoddMaterialVoiceAndImageDownloadRequestExecutor.java\n@@ -22,7 +22,8 @@ import java.nio.charset.StandardCharsets;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMaterialVoiceAndImageDownloadRequestExecutor extends MaterialVoiceAndImageDownloadRequestExecutor<\n+HttpConnectionProvider, ProxyInfo> {\n   public JoddMaterialVoiceAndImageDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
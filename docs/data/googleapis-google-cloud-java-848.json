{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "848",
    "information": {
        "errors": [
            {
                "line": "77",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 106).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public void listTopics(ListTopicsRequest request, StreamObserver<ListTopicsResponse> responseObserver) {\n    List<Topic> responseTopics = new ArrayList<>();\n    for (String topicName : topics.keySet()) {\n      String projectOfTopic = PublisherApi.extractProjectFromTopicPath(topicName);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/848/LocalPublisherImpl.java\nindex 6ec1c008f6d..418bb17ffd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/848/LocalPublisherImpl.java\n@@ -74,7 +74,8 @@ public class LocalPublisherImpl implements Publisher {\n   }\n \n   @Override\n-  public void listTopics(ListTopicsRequest request, StreamObserver<ListTopicsResponse> responseObserver) {\n+  public void listTopics(ListTopicsRequest request,\n+                         StreamObserver<ListTopicsResponse> responseObserver) {\n     List<Topic> responseTopics = new ArrayList<>();\n     for (String topicName : topics.keySet()) {\n       String projectOfTopic = PublisherApi.extractProjectFromTopicPath(topicName);\n@@ -85,7 +86,8 @@ public class LocalPublisherImpl implements Publisher {\n       }\n     }\n     Collections.sort(responseTopics, new Comparator<Topic>() {\n-      @Override public int compare(Topic o1, Topic o2) {\n+      @Override\n+      public int compare(Topic o1, Topic o2) {\n         return o1.getName().compareTo(o2.getName());\n       }\n     });\n@@ -98,7 +100,7 @@ public class LocalPublisherImpl implements Publisher {\n \n   @Override\n   public void listTopicSubscriptions(ListTopicSubscriptionsRequest request,\n-      StreamObserver<ListTopicSubscriptionsResponse> responseObserver) {\n+                                     StreamObserver<ListTopicSubscriptionsResponse> responseObserver) {\n     responseObserver.onNext(ListTopicSubscriptionsResponse.getDefaultInstance());\n     responseObserver.onCompleted();\n   }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/848/LocalPublisherImpl.java\nindex 6ec1c008f6d..46bf345a44e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/848/LocalPublisherImpl.java\n@@ -117,4 +117,4 @@ public class LocalPublisherImpl implements Publisher {\n   public void reset() {\n     topics = new HashMap<>();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/848/LocalPublisherImpl.java\nindex 6ec1c008f6d..5986f4de34c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/848/LocalPublisherImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/848/LocalPublisherImpl.java\n@@ -27,9 +27,7 @@ import com.google.pubsub.v1.PublishResponse;\n import com.google.pubsub.v1.PublisherGrpc.Publisher;\n import com.google.pubsub.v1.PubsubMessage;\n import com.google.pubsub.v1.Topic;\n-\n import io.grpc.stub.StreamObserver;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n@@ -37,6 +35,7 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n+\n public class LocalPublisherImpl implements Publisher {\n \n   private Map<String, List<PubsubMessage>> topics = new HashMap<>();\n@@ -44,7 +43,6 @@ public class LocalPublisherImpl implements Publisher {\n   @Override\n   public void createTopic(Topic request, StreamObserver<Topic> responseObserver) {\n     topics.put(request.getName(), new ArrayList<PubsubMessage>());\n-\n     Topic response = Topic.newBuilder().setName(request.getName()).build();\n     responseObserver.onNext(response);\n     responseObserver.onCompleted();\n@@ -84,11 +82,13 @@ public class LocalPublisherImpl implements Publisher {\n         responseTopics.add(topicObj);\n       }\n     }\n-    Collections.sort(responseTopics, new Comparator<Topic>() {\n-      @Override public int compare(Topic o1, Topic o2) {\n-        return o1.getName().compareTo(o2.getName());\n-      }\n-    });\n+    Collections.sort(responseTopics,\n+      new Comparator<Topic>() {\n+@Override\n+public int compare(Topic o1, Topic o2) {\n+  return o1.getName().compareTo(o2.getName());\n+}\n+});\n     ListTopicsResponse.Builder response = ListTopicsResponse.newBuilder();\n     response.setNextPageToken(\"\");\n     response.addAllTopics(responseTopics);\n@@ -97,8 +97,7 @@ public class LocalPublisherImpl implements Publisher {\n   }\n \n   @Override\n-  public void listTopicSubscriptions(ListTopicSubscriptionsRequest request,\n-      StreamObserver<ListTopicSubscriptionsResponse> responseObserver) {\n+  public void listTopicSubscriptions(ListTopicSubscriptionsRequest request, StreamObserver<ListTopicSubscriptionsResponse> responseObserver) {\n     responseObserver.onNext(ListTopicSubscriptionsResponse.getDefaultInstance());\n     responseObserver.onCompleted();\n   }\n@@ -117,4 +116,4 @@ public class LocalPublisherImpl implements Publisher {\n   public void reset() {\n     topics = new HashMap<>();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
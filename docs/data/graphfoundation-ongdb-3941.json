{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3941",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3941/SimpleFulltextReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3941/SimpleFulltextReader.java\nindex 251267cb968..bb49de27ed4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3941/SimpleFulltextReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3941/SimpleFulltextReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -46,96 +47,92 @@ import static org.neo4j.kernel.api.impl.fulltext.FulltextProvider.FIELD_ENTITY_I\n  */\n class SimpleFulltextReader implements ReadOnlyFulltext\n {\n-    private final PartitionSearcher partitionSearcher;\n-    private final Analyzer analyzer;\n-    private final String[] properties;\n+  private final PartitionSearcher partitionSearcher;\n+  private final Analyzer analyzer;\n+  private final String[] properties;\n \n-    SimpleFulltextReader( PartitionSearcher partitionSearcher, String[] properties, Analyzer analyzer )\n-    {\n-        this.partitionSearcher = partitionSearcher;\n-        this.properties = properties;\n-        this.analyzer = analyzer;\n-    }\n+  SimpleFulltextReader(PartitionSearcher partitionSearcher, String[] properties, Analyzer analyzer)\n+  {\n+    this.partitionSearcher = partitionSearcher;\n+    this.properties = properties;\n+    this.analyzer = analyzer;\n+  }\n \n-    @Override\n-    public ScoreEntityIterator query( Collection<String> terms, boolean matchAll )\n-    {\n-        String query = terms.stream().map( QueryParser::escape ).collect( joining( \" \" ) );\n-        return innerQuery( query, matchAll );\n-    }\n+  @Override\n+  public ScoreEntityIterator query(Collection<String> terms, boolean matchAll)\n+  {\n+    String query = terms.stream().map(QueryParser::escape).collect(joining(\" \"));\n+    return innerQuery(query, matchAll);\n+  }\n \n-    @Override\n-    public ScoreEntityIterator fuzzyQuery( Collection<String> terms, boolean matchAll )\n-    {\n-        String query = terms.stream().map( QueryParser::escape ).collect( joining( \"~ \", \"\", \"~\" ) );\n-        return innerQuery( query, matchAll );\n-    }\n+  @Override\n+  public ScoreEntityIterator fuzzyQuery(Collection<String> terms, boolean matchAll)\n+  {\n+    String query = terms.stream().map(QueryParser::escape).collect(joining(\"~ \", \"\", \"~\"));\n+    return innerQuery(query, matchAll);\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    try\n     {\n-        try\n-        {\n-            partitionSearcher.close();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new IndexReaderCloseException( e );\n-        }\n+      partitionSearcher.close();\n+    } catch (IOException e)\n+    {\n+      throw new IndexReaderCloseException(e);\n     }\n+  }\n \n-    @Override\n-    public FulltextIndexConfiguration getConfigurationDocument() throws IOException\n+  @Override\n+  public FulltextIndexConfiguration getConfigurationDocument() throws IOException\n+  {\n+    IndexSearcher indexSearcher = getIndexSearcher();\n+    TopDocs docs = indexSearcher.search(new TermQuery(FulltextIndexConfiguration.TERM), 1);\n+    if (docs.scoreDocs.length < 1)\n     {\n-        IndexSearcher indexSearcher = getIndexSearcher();\n-        TopDocs docs = indexSearcher.search( new TermQuery( FulltextIndexConfiguration.TERM ), 1 );\n-        if ( docs.scoreDocs.length < 1 )\n-        {\n-            return null;\n-        }\n-        return new FulltextIndexConfiguration( indexSearcher.doc( docs.scoreDocs[0].doc ) );\n+      return null;\n     }\n+    return new FulltextIndexConfiguration(indexSearcher.doc(docs.scoreDocs[0].doc));\n+  }\n \n-    private ScoreEntityIterator innerQuery( String queryString, boolean matchAll )\n+  private ScoreEntityIterator innerQuery(String queryString, boolean matchAll)\n+  {\n+    MultiFieldQueryParser multiFieldQueryParser = new MultiFieldQueryParser(properties, analyzer);\n+    if (matchAll)\n+    {\n+      multiFieldQueryParser.setDefaultOperator(QueryParser.Operator.AND);\n+    } else\n     {\n-        MultiFieldQueryParser multiFieldQueryParser = new MultiFieldQueryParser( properties, analyzer );\n-        if ( matchAll )\n-        {\n-            multiFieldQueryParser.setDefaultOperator( QueryParser.Operator.AND );\n-        }\n-        else\n-        {\n-            multiFieldQueryParser.setDefaultOperator( QueryParser.Operator.OR );\n-        }\n-        Query query;\n-        try\n-        {\n-            query = multiFieldQueryParser.parse( queryString );\n-        }\n-        catch ( ParseException e )\n-        {\n-            assert false;\n-            return ScoreEntityIterator.emptyIterator();\n-        }\n-        return indexQuery( query );\n+      multiFieldQueryParser.setDefaultOperator(QueryParser.Operator.OR);\n     }\n-\n-    private ScoreEntityIterator indexQuery( Query query )\n+    Query query;\n+    try\n     {\n-        try\n-        {\n-            DocValuesCollector docValuesCollector = new DocValuesCollector( true );\n-            getIndexSearcher().search( query, docValuesCollector );\n-            return new ScoreEntityIterator( docValuesCollector.getSortedValuesIterator( FIELD_ENTITY_ID, Sort.RELEVANCE ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      query = multiFieldQueryParser.parse(queryString);\n+    } catch (ParseException e)\n+    {\n+      assert false;\n+      return ScoreEntityIterator.emptyIterator();\n     }\n+    return indexQuery(query);\n+  }\n \n-    private IndexSearcher getIndexSearcher()\n+  private ScoreEntityIterator indexQuery(Query query)\n+  {\n+    try\n+    {\n+      DocValuesCollector docValuesCollector = new DocValuesCollector(true);\n+      getIndexSearcher().search(query, docValuesCollector);\n+      return new ScoreEntityIterator(docValuesCollector.getSortedValuesIterator(FIELD_ENTITY_ID, Sort.RELEVANCE));\n+    } catch (IOException e)\n     {\n-        return partitionSearcher.getIndexSearcher();\n+      throw new RuntimeException(e);\n     }\n+  }\n+\n+  private IndexSearcher getIndexSearcher()\n+  {\n+    return partitionSearcher.getIndexSearcher();\n+  }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3941/SimpleFulltextReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3941/SimpleFulltextReader.java\nindex 251267cb968..844d21f4632 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3941/SimpleFulltextReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3941/SimpleFulltextReader.java\n@@ -107,7 +107,8 @@ class SimpleFulltextReader implements ReadOnlyFulltext\n         {\n             multiFieldQueryParser.setDefaultOperator( QueryParser.Operator.OR );\n         }\n-        Query query;\n+\n+Query query;\n         try\n         {\n             query = multiFieldQueryParser.parse( queryString );\n@@ -117,7 +118,8 @@ class SimpleFulltextReader implements ReadOnlyFulltext\n             assert false;\n             return ScoreEntityIterator.emptyIterator();\n         }\n-        return indexQuery( query );\n+\n+return indexQuery( query );\n     }\n \n     private ScoreEntityIterator indexQuery( Query query )\n@@ -138,4 +140,4 @@ class SimpleFulltextReader implements ReadOnlyFulltext\n     {\n         return partitionSearcher.getIndexSearcher();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
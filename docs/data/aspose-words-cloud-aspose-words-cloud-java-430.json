{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "430",
    "information": {
        "errors": [
            {
                "line": "183",
                "column": "43",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    CommentBase commentBase = (CommentBase)o;\n    return\n        Objects.equals(this.author, commentBase.author) &&\n        Objects.equals(this.dateTime, commentBase.dateTime) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/430/CommentBase.java\nindex 727bb92de10..baf9b4cd643 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/430/CommentBase.java\n@@ -180,7 +180,7 @@ public class CommentBase {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CommentBase commentBase = (CommentBase)o;\n+    CommentBase commentBase = (CommentBase) o;\n     return\n         Objects.equals(this.author, commentBase.author) &&\n         Objects.equals(this.dateTime, commentBase.dateTime) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/430/CommentBase.java\nindex 727bb92de10..870836acd6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/430/CommentBase.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -64,6 +67,7 @@ public class CommentBase {\n \n     @SerializedName(\"Text\")\n     private String text = null;\n+\n     public CommentBase author(String author) {\n         this.author = author;\n         return this;\n@@ -71,8 +75,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets returns or sets the author name for a comment.\n-    * @return author\n-    **/\n+     *\n+     * @return author\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the author name for a comment.\")\n     public String getAuthor() {\n         return author;\n@@ -89,8 +94,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets the date and time that the comment was made.\n-    * @return dateTime\n-    **/\n+     *\n+     * @return dateTime\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the date and time that the comment was made.\")\n     public OffsetDateTime getDateTime() {\n         return dateTime;\n@@ -107,8 +113,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets returns or sets the initials of the user associated with a specific comment.\n-    * @return initial\n-    **/\n+     *\n+     * @return initial\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the initials of the user associated with a specific comment.\")\n     public String getInitial() {\n         return initial;\n@@ -125,8 +132,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets link to comment range end node.\n-    * @return rangeEnd\n-    **/\n+     *\n+     * @return rangeEnd\n+     **/\n     @ApiModelProperty(value = \"Gets or sets link to comment range end node.\")\n     public DocumentPosition getRangeEnd() {\n         return rangeEnd;\n@@ -143,8 +151,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets link to comment range start node.\n-    * @return rangeStart\n-    **/\n+     *\n+     * @return rangeStart\n+     **/\n     @ApiModelProperty(value = \"Gets or sets link to comment range start node.\")\n     public DocumentPosition getRangeStart() {\n         return rangeStart;\n@@ -161,8 +170,9 @@ public class CommentBase {\n \n     /**\n      * Gets or sets this is a convenience property that allows to easily get or set text of the comment.\n-    * @return text\n-    **/\n+     *\n+     * @return text\n+     **/\n     @ApiModelProperty(value = \"Gets or sets this is a convenience property that allows to easily get or set text of the comment.\")\n     public String getText() {\n         return text;\n@@ -180,43 +190,43 @@ public class CommentBase {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CommentBase commentBase = (CommentBase)o;\n-    return\n-        Objects.equals(this.author, commentBase.author) &&\n-        Objects.equals(this.dateTime, commentBase.dateTime) &&\n-        Objects.equals(this.initial, commentBase.initial) &&\n-        Objects.equals(this.rangeEnd, commentBase.rangeEnd) &&\n-        Objects.equals(this.rangeStart, commentBase.rangeStart) &&\n-        Objects.equals(this.text, commentBase.text);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(author, dateTime, initial, rangeEnd, rangeStart, text);\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class CommentBase {\\n\");\n-    sb.append(\"    author: \").append(toIndentedString(author)).append(\"\\n\");\n-    sb.append(\"    dateTime: \").append(toIndentedString(dateTime)).append(\"\\n\");\n-    sb.append(\"    initial: \").append(toIndentedString(initial)).append(\"\\n\");\n-    sb.append(\"    rangeEnd: \").append(toIndentedString(rangeEnd)).append(\"\\n\");\n-    sb.append(\"    rangeStart: \").append(toIndentedString(rangeStart)).append(\"\\n\");\n-    sb.append(\"    text: \").append(toIndentedString(text)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n-    }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n+        CommentBase commentBase = (CommentBase) o;\n+        return\n+            Objects.equals(this.author, commentBase.author) &&\n+                Objects.equals(this.dateTime, commentBase.dateTime) &&\n+                Objects.equals(this.initial, commentBase.initial) &&\n+                Objects.equals(this.rangeEnd, commentBase.rangeEnd) &&\n+                Objects.equals(this.rangeStart, commentBase.rangeStart) &&\n+                Objects.equals(this.text, commentBase.text);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(author, dateTime, initial, rangeEnd, rangeStart, text);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class CommentBase {\\n\");\n+        sb.append(\"    author: \").append(toIndentedString(author)).append(\"\\n\");\n+        sb.append(\"    dateTime: \").append(toIndentedString(dateTime)).append(\"\\n\");\n+        sb.append(\"    initial: \").append(toIndentedString(initial)).append(\"\\n\");\n+        sb.append(\"    rangeEnd: \").append(toIndentedString(rangeEnd)).append(\"\\n\");\n+        sb.append(\"    rangeStart: \").append(toIndentedString(rangeStart)).append(\"\\n\");\n+        sb.append(\"    text: \").append(toIndentedString(text)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n+    }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/430/CommentBase.java\nindex 727bb92de10..e52d2f655ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/430/CommentBase.java\n@@ -45,156 +45,175 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Comment.\n  */\n+\n+\n @ApiModel(description = \"Comment.\")\n+\n public class CommentBase {\n-    @SerializedName(\"Author\")\n-    private String author = null;\n+  @SerializedName(\"Author\")\n+  private String author = null;\n \n-    @SerializedName(\"DateTime\")\n-    private OffsetDateTime dateTime = null;\n+  @SerializedName(\"DateTime\")\n+  private OffsetDateTime dateTime = null;\n \n-    @SerializedName(\"Initial\")\n-    private String initial = null;\n+  @SerializedName(\"Initial\")\n+  private String initial = null;\n \n-    @SerializedName(\"RangeEnd\")\n-    private DocumentPosition rangeEnd = null;\n+  @SerializedName(\"RangeEnd\")\n+  private DocumentPosition rangeEnd = null;\n \n-    @SerializedName(\"RangeStart\")\n-    private DocumentPosition rangeStart = null;\n+  @SerializedName(\"RangeStart\")\n+  private DocumentPosition rangeStart = null;\n \n-    @SerializedName(\"Text\")\n-    private String text = null;\n-    public CommentBase author(String author) {\n-        this.author = author;\n-        return this;\n-    }\n+  @SerializedName(\"Text\")\n+  private String text = null;\n+\n+  public CommentBase author(String author) {\n+    this.author = author;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the author name for a comment.\n     * @return author\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the author name for a comment.\")\n-    public String getAuthor() {\n-        return author;\n-    }\n \n-    public void setAuthor(String author) {\n-        this.author = author;\n-    }\n \n-    public CommentBase dateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the author name for a comment.\")\n+  public String getAuthor() {\n+    return author;\n+  }\n+\n+  public void setAuthor(String author) {\n+    this.author = author;\n+  }\n+\n+  public CommentBase dateTime(OffsetDateTime dateTime) {\n+    this.dateTime = dateTime;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the date and time that the comment was made.\n     * @return dateTime\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the date and time that the comment was made.\")\n-    public OffsetDateTime getDateTime() {\n-        return dateTime;\n-    }\n \n-    public void setDateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n-    }\n \n-    public CommentBase initial(String initial) {\n-        this.initial = initial;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the date and time that the comment was made.\")\n+  public OffsetDateTime getDateTime() {\n+    return dateTime;\n+  }\n+\n+  public void setDateTime(OffsetDateTime dateTime) {\n+    this.dateTime = dateTime;\n+  }\n+\n+  public CommentBase initial(String initial) {\n+    this.initial = initial;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the initials of the user associated with a specific comment.\n     * @return initial\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the initials of the user associated with a specific comment.\")\n-    public String getInitial() {\n-        return initial;\n-    }\n \n-    public void setInitial(String initial) {\n-        this.initial = initial;\n-    }\n \n-    public CommentBase rangeEnd(DocumentPosition rangeEnd) {\n-        this.rangeEnd = rangeEnd;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the initials of the user associated with a specific comment.\")\n+  public String getInitial() {\n+    return initial;\n+  }\n+\n+  public void setInitial(String initial) {\n+    this.initial = initial;\n+  }\n+\n+  public CommentBase rangeEnd(DocumentPosition rangeEnd) {\n+    this.rangeEnd = rangeEnd;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets link to comment range end node.\n     * @return rangeEnd\n     **/\n-    @ApiModelProperty(value = \"Gets or sets link to comment range end node.\")\n-    public DocumentPosition getRangeEnd() {\n-        return rangeEnd;\n-    }\n \n-    public void setRangeEnd(DocumentPosition rangeEnd) {\n-        this.rangeEnd = rangeEnd;\n-    }\n \n-    public CommentBase rangeStart(DocumentPosition rangeStart) {\n-        this.rangeStart = rangeStart;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets link to comment range end node.\")\n+  public DocumentPosition getRangeEnd() {\n+    return rangeEnd;\n+  }\n+\n+  public void setRangeEnd(DocumentPosition rangeEnd) {\n+    this.rangeEnd = rangeEnd;\n+  }\n+\n+  public CommentBase rangeStart(DocumentPosition rangeStart) {\n+    this.rangeStart = rangeStart;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets link to comment range start node.\n     * @return rangeStart\n     **/\n-    @ApiModelProperty(value = \"Gets or sets link to comment range start node.\")\n-    public DocumentPosition getRangeStart() {\n-        return rangeStart;\n-    }\n \n-    public void setRangeStart(DocumentPosition rangeStart) {\n-        this.rangeStart = rangeStart;\n-    }\n \n-    public CommentBase text(String text) {\n-        this.text = text;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets link to comment range start node.\")\n+  public DocumentPosition getRangeStart() {\n+    return rangeStart;\n+  }\n+\n+  public void setRangeStart(DocumentPosition rangeStart) {\n+    this.rangeStart = rangeStart;\n+  }\n+\n+  public CommentBase text(String text) {\n+    this.text = text;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets this is a convenience property that allows to easily get or set text of the comment.\n     * @return text\n     **/\n-    @ApiModelProperty(value = \"Gets or sets this is a convenience property that allows to easily get or set text of the comment.\")\n-    public String getText() {\n-        return text;\n-    }\n \n-    public void setText(String text) {\n-        this.text = text;\n+\n+  @ApiModelProperty(value = \"Gets or sets this is a convenience property that allows to easily get or set text of the comment.\")\n+  public String getText() {\n+    return text;\n+  }\n+\n+  public void setText(String text) {\n+    this.text = text;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    CommentBase commentBase = (CommentBase)o;\n-    return\n-        Objects.equals(this.author, commentBase.author) &&\n-        Objects.equals(this.dateTime, commentBase.dateTime) &&\n-        Objects.equals(this.initial, commentBase.initial) &&\n-        Objects.equals(this.rangeEnd, commentBase.rangeEnd) &&\n-        Objects.equals(this.rangeStart, commentBase.rangeStart) &&\n-        Objects.equals(this.text, commentBase.text);\n+    CommentBase commentBase = (CommentBase) o;\n+    return Objects.equals(this.author, commentBase.author) &&\n+    Objects.equals(this.dateTime, commentBase.dateTime) &&\n+    Objects.equals(this.initial, commentBase.initial) &&\n+    Objects.equals(this.rangeEnd, commentBase.rangeEnd) &&\n+    Objects.equals(this.rangeStart, commentBase.rangeStart) &&\n+    Objects.equals(this.text, commentBase.text);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(author, dateTime, initial, rangeEnd, rangeStart, text);\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -213,10 +232,11 @@ public class CommentBase {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 162
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/430/CommentBase.java\nindex 727bb92de10..baf9b4cd643 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/430/CommentBase.java\n@@ -180,7 +180,7 @@ public class CommentBase {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CommentBase commentBase = (CommentBase)o;\n+    CommentBase commentBase = (CommentBase) o;\n     return\n         Objects.equals(this.author, commentBase.author) &&\n         Objects.equals(this.dateTime, commentBase.dateTime) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/430/CommentBase.java\nindex 727bb92de10..baf9b4cd643 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/430/CommentBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/430/CommentBase.java\n@@ -180,7 +180,7 @@ public class CommentBase {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CommentBase commentBase = (CommentBase)o;\n+    CommentBase commentBase = (CommentBase) o;\n     return\n         Objects.equals(this.author, commentBase.author) &&\n         Objects.equals(this.dateTime, commentBase.dateTime) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
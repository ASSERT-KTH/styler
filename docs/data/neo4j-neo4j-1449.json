{
    "project_name": "neo4j-neo4j",
    "error_id": "1449",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1449/LuceneSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1449/LuceneSettings.java\nindex e848aff9cdc..e1bb593e360 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1449/LuceneSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1449/LuceneSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import org.apache.lucene.index.IndexWriterConfig;\n@@ -35,26 +36,26 @@ public class LuceneSettings implements SettingsDeclaration\n {\n     @Internal\n     public static Setting<Integer> lucene_writer_max_buffered_docs =\n-            newBuilder( \"unsupported.dbms.index.lucene.writer_max_buffered_docs\", INT, 100000 ).build();\n+      newBuilder(\"unsupported.dbms.index.lucene.writer_max_buffered_docs\", INT, 100000).build();\n \n     @Internal\n     public static Setting<Integer> lucene_population_max_buffered_docs =\n-            newBuilder( \"unsupported.dbms.index.lucene.population_max_buffered_docs\", INT, IndexWriterConfig.DISABLE_AUTO_FLUSH ).build();\n+      newBuilder(\"unsupported.dbms.index.lucene.population_max_buffered_docs\", INT, IndexWriterConfig.DISABLE_AUTO_FLUSH).build();\n \n     @Internal\n-    public static Setting<Integer> lucene_merge_factor = newBuilder( \"unsupported.dbms.index.lucene.merge_factor\", INT, 2 ).build();\n+    public static Setting<Integer> lucene_merge_factor = newBuilder(\"unsupported.dbms.index.lucene.merge_factor\", INT, 2).build();\n \n     @Internal\n-    public static Setting<Double> lucene_nocfs_ratio = newBuilder( \"unsupported.dbms.index.lucene.nocfs.ratio\", DOUBLE, 1.0 ).build();\n+    public static Setting<Double> lucene_nocfs_ratio = newBuilder(\"unsupported.dbms.index.lucene.nocfs.ratio\", DOUBLE, 1.0).build();\n \n     @Internal\n-    public static Setting<Double> lucene_min_merge = newBuilder( \"unsupported.dbms.index.lucene.min_merge\", DOUBLE, 0.1 ).build();\n+    public static Setting<Double> lucene_min_merge = newBuilder(\"unsupported.dbms.index.lucene.min_merge\", DOUBLE, 0.1).build();\n \n     @Internal\n     public static Setting<Double> lucene_standard_ram_buffer_size =\n-            newBuilder( \"unsupported.dbms.index.lucene.standard_ram_buffer_size\", DOUBLE, IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB ).build();\n+      newBuilder(\"unsupported.dbms.index.lucene.standard_ram_buffer_size\", DOUBLE, IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB).build();\n \n     @Internal\n     public static Setting<Double> lucene_population_ram_buffer_size =\n-            newBuilder( \"unsupported.dbms.index.lucene.population_ram_buffer_size\", DOUBLE, 50D ).build();\n+      newBuilder(\"unsupported.dbms.index.lucene.population_ram_buffer_size\", DOUBLE, 50D).build();\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
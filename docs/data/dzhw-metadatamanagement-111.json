{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "111",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "68",
                "severity": "error",
                "message": "'}' at column 68 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(I18nStringNotEmpty constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "68",
                    "severity": "error",
                    "message": "'}' at column 68 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/111/I18nStringNotEmptyValidator.java\nindex 0273eb0053c..f9b10f163c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/111/I18nStringNotEmptyValidator.java\n@@ -10,33 +10,33 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n /**\n  * Validate the single strings of the i18n strings. If both are null or empty, return false. If one\n  * of the String is set, then return true.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n-public class I18nStringNotEmptyValidator implements \n+public class I18nStringNotEmptyValidator implements\n     ConstraintValidator<I18nStringNotEmpty, I18nString> {\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(I18nStringNotEmpty constraintAnnotation) {}\n+  public void initialize(I18nStringNotEmpty constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n+   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n-        \n+\n     //Empty check\n     if (value == null) {\n       return false;\n     }\n-    \n+\n     //Check De /En Empty String    \n     return !Strings.isNullOrEmpty(value.getDe()) || !Strings.isNullOrEmpty(value.getEn());\n   }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/111/I18nStringNotEmptyValidator.java\nindex 0273eb0053c..c58dce668a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/111/I18nStringNotEmptyValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.common.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import com.google.common.base.Strings;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n \n /**\n@@ -14,23 +12,30 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n  * @author Daniel Katzberg\n  *\n  */\n-public class I18nStringNotEmptyValidator implements \n-    ConstraintValidator<I18nStringNotEmpty, I18nString> {\n+\n+\n+public class I18nStringNotEmptyValidator implements ConstraintValidator<I18nStringNotEmpty, I18nString> {\n   \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(I18nStringNotEmpty constraintAnnotation) {}\n+  public void initialize(I18nStringNotEmpty constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n+  public boolean isValid(I18nString value,\n+    ConstraintValidatorContext context) {\n         \n     //Empty check\n     if (value == null) {\n@@ -38,7 +43,7 @@ public class I18nStringNotEmptyValidator implements\n     }\n     \n     //Check De /En Empty String    \n+\n     return !Strings.isNullOrEmpty(value.getDe()) || !Strings.isNullOrEmpty(value.getEn());\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "68",
                    "severity": "error",
                    "message": "'}' at column 68 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "68",
                    "severity": "error",
                    "message": "'}' at column 68 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/111/I18nStringNotEmptyValidator.java\nindex 0273eb0053c..e18afc248f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/111/I18nStringNotEmptyValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/111/I18nStringNotEmptyValidator.java\n@@ -23,7 +23,6 @@ public class I18nStringNotEmptyValidator implements\n    */\n   @Override\n   public void initialize(I18nStringNotEmpty constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
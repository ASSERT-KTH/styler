{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1404",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1404/RelExistenceConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1404/RelExistenceConstraintDescriptor.java\nindex 8a38bc464d2..933df15eb81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1404/RelExistenceConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1404/RelExistenceConstraintDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.schema.constaints;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -24,28 +25,28 @@ import org.neo4j.internal.kernel.api.schema.RelationTypeSchemaDescriptor;\n \n public class RelExistenceConstraintDescriptor extends ConstraintDescriptor\n {\n-    private final RelationTypeSchemaDescriptor schema;\n+  private final RelationTypeSchemaDescriptor schema;\n \n-    RelExistenceConstraintDescriptor( RelationTypeSchemaDescriptor schema )\n-    {\n-        super( Type.EXISTS );\n-        this.schema = schema;\n-    }\n+  RelExistenceConstraintDescriptor(RelationTypeSchemaDescriptor schema)\n+  {\n+    super(Type.EXISTS);\n+    this.schema = schema;\n+  }\n \n-    @Override\n-    public RelationTypeSchemaDescriptor schema()\n-    {\n-        return schema;\n-    }\n+  @Override\n+  public RelationTypeSchemaDescriptor schema()\n+  {\n+    return schema;\n+  }\n \n-    @Override\n-    public String prettyPrint( TokenNameLookup tokenNameLookup )\n-    {\n-        String typeName = escapeLabelOrRelTyp( tokenNameLookup.relationshipTypeGetName( schema.getRelTypeId() ) );\n-        String relName = typeName.toLowerCase();\n-        String propertyName = tokenNameLookup.propertyKeyGetName( schema.getPropertyId() );\n+  @Override\n+  public String prettyPrint(TokenNameLookup tokenNameLookup)\n+  {\n+    String typeName = escapeLabelOrRelTyp(tokenNameLookup.relationshipTypeGetName(schema.getRelTypeId()));\n+    String relName = typeName.toLowerCase();\n+    String propertyName = tokenNameLookup.propertyKeyGetName(schema.getPropertyId());\n \n-        return String.format( \"CONSTRAINT ON ()-[ %s:%s ]-() ASSERT exists(%s.%s)\",\n-                relName, typeName, relName, propertyName );\n-    }\n+    return String.format(\"CONSTRAINT ON ()-[ %s:%s ]-() ASSERT exists(%s.%s)\",\n+        relName, typeName, relName, propertyName);\n+  }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1404/RelExistenceConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1404/RelExistenceConstraintDescriptor.java\nindex 8a38bc464d2..2d0fdd37d5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1404/RelExistenceConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1404/RelExistenceConstraintDescriptor.java\n@@ -44,8 +44,7 @@ public class RelExistenceConstraintDescriptor extends ConstraintDescriptor\n         String typeName = escapeLabelOrRelTyp( tokenNameLookup.relationshipTypeGetName( schema.getRelTypeId() ) );\n         String relName = typeName.toLowerCase();\n         String propertyName = tokenNameLookup.propertyKeyGetName( schema.getPropertyId() );\n-\n-        return String.format( \"CONSTRAINT ON ()-[ %s:%s ]-() ASSERT exists(%s.%s)\",\n+return String.format( \"CONSTRAINT ON ()-[ %s:%s ]-() ASSERT exists(%s.%s)\",\n                 relName, typeName, relName, propertyName );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
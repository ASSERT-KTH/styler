{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1348",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "96",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1348/ClientMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1348/ClientMessageDecoder.java\nindex 0884781c058..e1a3428dde9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1348/ClientMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1348/ClientMessageDecoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import io.netty.buffer.ByteBuf;\n@@ -34,72 +35,71 @@ import org.neo4j.causalclustering.messaging.marshalling.StringMarshal;\n  */\n public class ClientMessageDecoder extends ByteToMessageDecoder\n {\n-    @Override\n-    protected void decode( ChannelHandlerContext ctx, ByteBuf in, List<Object> out ) throws ClientHandshakeException\n+  @Override\n+  protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws ClientHandshakeException\n+  {\n+    int messageCode = in.readInt();\n+\n+    switch (messageCode)\n     {\n-        int messageCode = in.readInt();\n+      case InitialMagicMessage.MESSAGE_CODE:\n+      {\n+        String magic = StringMarshal.unmarshal(in);\n+        out.add(new InitialMagicMessage(magic));\n+        return;\n+      }\n+      case 0:\n+      {\n+        ApplicationProtocolResponse applicationProtocolResponse = decodeProtocolResponse(ApplicationProtocolResponse::new, ByteBuf::readInt, in);\n \n-        switch ( messageCode )\n-        {\n-        case InitialMagicMessage.MESSAGE_CODE:\n-        {\n-            String magic = StringMarshal.unmarshal( in );\n-            out.add( new InitialMagicMessage( magic ) );\n-            return;\n-        }\n-        case 0:\n-        {\n-            ApplicationProtocolResponse applicationProtocolResponse = decodeProtocolResponse( ApplicationProtocolResponse::new, ByteBuf::readInt, in );\n+        out.add(applicationProtocolResponse);\n+        return;\n+      }\n+      case 1:\n+      {\n+        ModifierProtocolResponse modifierProtocolResponse = decodeProtocolResponse(ModifierProtocolResponse::new, StringMarshal::unmarshal, in);\n \n-            out.add( applicationProtocolResponse );\n-            return;\n-        }\n-        case 1:\n+        out.add(modifierProtocolResponse);\n+        return;\n+      }\n+      case 2:\n+      {\n+        int statusCodeValue = in.readInt();\n+        Optional<StatusCode> statusCode = StatusCode.fromCodeValue(statusCodeValue);\n+        if (statusCode.isPresent())\n         {\n-            ModifierProtocolResponse modifierProtocolResponse = decodeProtocolResponse( ModifierProtocolResponse::new, StringMarshal::unmarshal, in );\n-\n-            out.add( modifierProtocolResponse );\n-            return;\n-        }\n-        case 2:\n+          out.add(new SwitchOverResponse(statusCode.get()));\n+        } else\n         {\n-            int statusCodeValue = in.readInt();\n-            Optional<StatusCode> statusCode = StatusCode.fromCodeValue( statusCodeValue );\n-            if ( statusCode.isPresent() )\n-            {\n-                out.add( new SwitchOverResponse( statusCode.get() ) );\n-            }\n-            else\n-            {\n-                // TODO\n-            }\n-            return;\n-        }\n-        default:\n-            // TODO\n-            return;\n+          // TODO\n         }\n+        return;\n+      }\n+      default:\n+        // TODO\n+        return;\n     }\n+  }\n \n-    private <U extends Comparable<U>,T extends BaseProtocolResponse<U>> T decodeProtocolResponse( TriFunction<StatusCode,String,U,T> constructor,\n-            Function<ByteBuf,U> reader, ByteBuf in )\n-            throws ClientHandshakeException\n-    {\n-        int statusCodeValue = in.readInt();\n-        String identifier = StringMarshal.unmarshal( in );\n-        U version = reader.apply( in );\n+  private <U extends Comparable<U>, T extends BaseProtocolResponse<U>> T decodeProtocolResponse(TriFunction<StatusCode, String, U, T> constructor,\n+                                                                                                Function<ByteBuf, U> reader, ByteBuf in)\n+      throws ClientHandshakeException\n+  {\n+    int statusCodeValue = in.readInt();\n+    String identifier = StringMarshal.unmarshal(in);\n+    U version = reader.apply(in);\n \n-        Optional<StatusCode> statusCode = StatusCode.fromCodeValue( statusCodeValue );\n+    Optional<StatusCode> statusCode = StatusCode.fromCodeValue(statusCodeValue);\n \n-        return statusCode\n-                .map( status -> constructor.apply( status, identifier, version ) )\n-                .orElseThrow( () -> new ClientHandshakeException(\n-                        String.format( \"Unknown status code %s for protocol %s version %d\", statusCodeValue, identifier, version ) ) );\n-    }\n+    return statusCode\n+        .map(status -> constructor.apply(status, identifier, version))\n+        .orElseThrow(() -> new ClientHandshakeException(\n+            String.format(\"Unknown status code %s for protocol %s version %d\", statusCodeValue, identifier, version)));\n+  }\n \n-    @FunctionalInterface\n-    interface TriFunction<T,U,V,W>\n-    {\n-        W apply( T t, U u, V v );\n-    }\n+  @FunctionalInterface\n+  interface TriFunction<T, U, V, W>\n+  {\n+    W apply(T t, U u, V v);\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 219).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1348/ClientMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1348/ClientMessageDecoder.java\nindex 0884781c058..f26da602705 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1348/ClientMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1348/ClientMessageDecoder.java\n@@ -38,8 +38,7 @@ public class ClientMessageDecoder extends ByteToMessageDecoder\n     protected void decode( ChannelHandlerContext ctx, ByteBuf in, List<Object> out ) throws ClientHandshakeException\n     {\n         int messageCode = in.readInt();\n-\n-        switch ( messageCode )\n+switch ( messageCode )\n         {\n         case InitialMagicMessage.MESSAGE_CODE:\n         {\n@@ -50,15 +49,13 @@ public class ClientMessageDecoder extends ByteToMessageDecoder\n         case 0:\n         {\n             ApplicationProtocolResponse applicationProtocolResponse = decodeProtocolResponse( ApplicationProtocolResponse::new, ByteBuf::readInt, in );\n-\n-            out.add( applicationProtocolResponse );\n+out.add( applicationProtocolResponse );\n             return;\n         }\n         case 1:\n         {\n             ModifierProtocolResponse modifierProtocolResponse = decodeProtocolResponse( ModifierProtocolResponse::new, StringMarshal::unmarshal, in );\n-\n-            out.add( modifierProtocolResponse );\n+out.add( modifierProtocolResponse );\n             return;\n         }\n         case 2:\n@@ -75,26 +72,20 @@ public class ClientMessageDecoder extends ByteToMessageDecoder\n             }\n             return;\n         }\n-        default:\n+    default:\n             // TODO\n             return;\n         }\n     }\n \n-    private <U extends Comparable<U>,T extends BaseProtocolResponse<U>> T decodeProtocolResponse( TriFunction<StatusCode,String,U,T> constructor,\n-            Function<ByteBuf,U> reader, ByteBuf in )\n-            throws ClientHandshakeException\n-    {\n+    private <U extends Comparable<U>, T extends BaseProtocolResponse<U>> T decodeProtocolResponse( TriFunction<StatusCode,String,U,T> constructor, Function<ByteBuf,U> reader, ByteBuf in ) throws ClientHandshakeException\n+{\n         int statusCodeValue = in.readInt();\n         String identifier = StringMarshal.unmarshal( in );\n         U version = reader.apply( in );\n \n         Optional<StatusCode> statusCode = StatusCode.fromCodeValue( statusCodeValue );\n-\n-        return statusCode\n-                .map( status -> constructor.apply( status, identifier, version ) )\n-                .orElseThrow( () -> new ClientHandshakeException(\n-                        String.format( \"Unknown status code %s for protocol %s version %d\", statusCodeValue, identifier, version ) ) );\n+return statusCode.map( status -> constructor.apply( status, identifier, version ) ).orElseThrow( () -> new ClientHandshakeException( String.format( \"Unknown status code %s for protocol %s version %d\", statusCodeValue, identifier, version ) ) );\n     }\n \n     @FunctionalInterface\n@@ -102,4 +93,4 @@ public class ClientMessageDecoder extends ByteToMessageDecoder\n     {\n         W apply( T t, U u, V v );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
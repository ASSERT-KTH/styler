{
    "project_name": "ibinti-bugvm",
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * {@code SecureRandomSpi} is the <i>Service Provider Interface</i> (<b>SPI</b>) definition\n * for {@link SecureRandom}.\n *\n * @see SecureRandom",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/42/SecureRandomSpi.java\nindex 5b079c12e35..b9d65fed268 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/42/SecureRandomSpi.java\n@@ -27,34 +27,31 @@ import java.io.Serializable;\n  */\n public abstract class SecureRandomSpi implements Serializable {\n \n-    private static final long serialVersionUID = -2991854161009191830L;\n+  private static final long serialVersionUID = -2991854161009191830L;\n \n-    /**\n-     * Reseeds this {@code SecureRandomSpi} instance with the specified {@code\n-     * seed}. The seed of this {@code SecureRandomSpi} instance is supplemented,\n-     * not replaced.\n-     *\n-     * @param seed\n-     *            the new seed.\n-     */\n-    protected abstract void engineSetSeed(byte[] seed);\n+  /**\n+   * Reseeds this {@code SecureRandomSpi} instance with the specified {@code\n+   * seed}. The seed of this {@code SecureRandomSpi} instance is supplemented,\n+   * not replaced.\n+   *\n+   * @param seed the new seed.\n+   */\n+  protected abstract void engineSetSeed(byte[] seed);\n \n-    /**\n-     * Generates and stores random bytes in the given {@code byte[]} for each\n-     * array element.\n-     *\n-     * @param bytes\n-     *            the {@code byte[]} to be filled with random bytes.\n-     */\n-    protected abstract void engineNextBytes(byte[] bytes);\n+  /**\n+   * Generates and stores random bytes in the given {@code byte[]} for each\n+   * array element.\n+   *\n+   * @param bytes the {@code byte[]} to be filled with random bytes.\n+   */\n+  protected abstract void engineNextBytes(byte[] bytes);\n \n-    /**\n-     * Generates and returns the specified number of seed bytes, computed using\n-     * the seed generation algorithm used by this {@code SecureRandomSpi}.\n-     *\n-     * @param numBytes\n-     *            the number of seed bytes.\n-     * @return the seed bytes\n-     */\n-    protected abstract byte[] engineGenerateSeed(int numBytes);\n+  /**\n+   * Generates and returns the specified number of seed bytes, computed using\n+   * the seed generation algorithm used by this {@code SecureRandomSpi}.\n+   *\n+   * @param numBytes the number of seed bytes.\n+   * @return the seed bytes\n+   */\n+  protected abstract byte[] engineGenerateSeed(int numBytes);\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/42/SecureRandomSpi.java\nindex 5b079c12e35..cd35f00dae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/42/SecureRandomSpi.java\n@@ -57,4 +57,4 @@ public abstract class SecureRandomSpi implements Serializable {\n      * @return the seed bytes\n      */\n     protected abstract byte[] engineGenerateSeed(int numBytes);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/42/SecureRandomSpi.java\nindex 5b079c12e35..4f4f8012fa8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/42/SecureRandomSpi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/42/SecureRandomSpi.java\n@@ -25,6 +25,8 @@ import java.io.Serializable;\n  *\n  * @see SecureRandom\n  */\n+\n+\n public abstract class SecureRandomSpi implements Serializable {\n \n     private static final long serialVersionUID = -2991854161009191830L;\n@@ -37,6 +39,8 @@ public abstract class SecureRandomSpi implements Serializable {\n      * @param seed\n      *            the new seed.\n      */\n+\n+\n     protected abstract void engineSetSeed(byte[] seed);\n \n     /**\n@@ -46,6 +50,8 @@ public abstract class SecureRandomSpi implements Serializable {\n      * @param bytes\n      *            the {@code byte[]} to be filled with random bytes.\n      */\n+\n+\n     protected abstract void engineNextBytes(byte[] bytes);\n \n     /**\n@@ -56,5 +62,7 @@ public abstract class SecureRandomSpi implements Serializable {\n      *            the number of seed bytes.\n      * @return the seed bytes\n      */\n+\n+\n     protected abstract byte[] engineGenerateSeed(int numBytes);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
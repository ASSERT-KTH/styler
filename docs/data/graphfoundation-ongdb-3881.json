{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3881",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3881/BaseOneByteHeaderRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3881/BaseOneByteHeaderRecordFormat.java\nindex 7d265ea7555..86650e7d8d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3881/BaseOneByteHeaderRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3881/BaseOneByteHeaderRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format;\n \n import java.util.function.Function;\n@@ -34,64 +35,64 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n  */\n public abstract class BaseOneByteHeaderRecordFormat<RECORD extends AbstractBaseRecord> extends BaseRecordFormat<RECORD>\n {\n-    private final int inUseBitMaskForFirstByte;\n+  private final int inUseBitMaskForFirstByte;\n \n-    protected BaseOneByteHeaderRecordFormat( Function<StoreHeader,Integer> recordSize, int recordHeaderSize,\n-            int inUseBitMaskForFirstByte, int idBits )\n-    {\n-        super( recordSize, recordHeaderSize, idBits );\n-        this.inUseBitMaskForFirstByte = inUseBitMaskForFirstByte;\n-    }\n+  protected BaseOneByteHeaderRecordFormat(Function<StoreHeader, Integer> recordSize, int recordHeaderSize,\n+                                          int inUseBitMaskForFirstByte, int idBits)\n+  {\n+    super(recordSize, recordHeaderSize, idBits);\n+    this.inUseBitMaskForFirstByte = inUseBitMaskForFirstByte;\n+  }\n \n-    protected void markAsUnused( PageCursor cursor )\n-    {\n-        byte inUseByte = cursor.getByte( cursor.getOffset() );\n-        inUseByte &= ~inUseBitMaskForFirstByte;\n-        cursor.putByte( inUseByte );\n-    }\n+  protected void markAsUnused(PageCursor cursor)\n+  {\n+    byte inUseByte = cursor.getByte(cursor.getOffset());\n+    inUseByte &= ~inUseBitMaskForFirstByte;\n+    cursor.putByte(inUseByte);\n+  }\n \n-    @Override\n-    public boolean isInUse( PageCursor cursor )\n-    {\n-        return isInUse( cursor.getByte( cursor.getOffset() ) );\n-    }\n+  @Override\n+  public boolean isInUse(PageCursor cursor)\n+  {\n+    return isInUse(cursor.getByte(cursor.getOffset()));\n+  }\n \n-    /**\n-     * Given a record with a header byte this method checks the specific bit which this record format was\n-     * configured to interpret as inUse.\n-     *\n-     * @param headerByte header byte of a record (the first byte) which contains the inUse bit we're interested in.\n-     * @return whether or not this header byte has the specific bit saying that it's in use.\n-     */\n-    protected boolean isInUse( byte headerByte )\n-    {\n-        return has( headerByte, inUseBitMaskForFirstByte );\n-    }\n+  /**\n+   * Given a record with a header byte this method checks the specific bit which this record format was\n+   * configured to interpret as inUse.\n+   *\n+   * @param headerByte header byte of a record (the first byte) which contains the inUse bit we're interested in.\n+   * @return whether or not this header byte has the specific bit saying that it's in use.\n+   */\n+  protected boolean isInUse(byte headerByte)\n+  {\n+    return has(headerByte, inUseBitMaskForFirstByte);\n+  }\n \n-    /**\n-     * Checks whether or not a specific bit in a byte is set.\n-     *\n-     * @param headerByte the header byte to check, here represented as a {@code long} for convenience\n-     * due to many callers keeping this header as long as to remove common problems of forgetting to\n-     * cast to long before shifting.\n-     * @param bitMask mask for the bit to check, such as 0x1, 0x2 and 0x4.\n-     * @return whether or not that bit is set.\n-     */\n-    protected static boolean has( long headerByte, int bitMask )\n-    {\n-        return (headerByte & bitMask) != 0;\n-    }\n+  /**\n+   * Checks whether or not a specific bit in a byte is set.\n+   *\n+   * @param headerByte the header byte to check, here represented as a {@code long} for convenience\n+   *                   due to many callers keeping this header as long as to remove common problems of forgetting to\n+   *                   cast to long before shifting.\n+   * @param bitMask    mask for the bit to check, such as 0x1, 0x2 and 0x4.\n+   * @return whether or not that bit is set.\n+   */\n+  protected static boolean has(long headerByte, int bitMask)\n+  {\n+    return (headerByte & bitMask) != 0;\n+  }\n \n-    /**\n-     * Sets or clears bits specified by the {@code bitMask} in the header byte.\n-     *\n-     * @param headerByte byte to set bits in.\n-     * @param bitMask mask specifying which bits to change.\n-     * @param value {@code true} means setting the bits specified by the bit mask, {@code false} means clearing.\n-     * @return the {@code headerByte} with the changes incorporated.\n-     */\n-    protected static byte set( byte headerByte, int bitMask, boolean value )\n-    {\n-        return (byte) (value ? headerByte | bitMask : headerByte);\n-    }\n+  /**\n+   * Sets or clears bits specified by the {@code bitMask} in the header byte.\n+   *\n+   * @param headerByte byte to set bits in.\n+   * @param bitMask    mask specifying which bits to change.\n+   * @param value      {@code true} means setting the bits specified by the bit mask, {@code false} means clearing.\n+   * @return the {@code headerByte} with the changes incorporated.\n+   */\n+  protected static byte set(byte headerByte, int bitMask, boolean value)\n+  {\n+    return (byte) (value ? headerByte | bitMask : headerByte);\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3881/BaseOneByteHeaderRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3881/BaseOneByteHeaderRecordFormat.java\nindex 7d265ea7555..071ee98d498 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3881/BaseOneByteHeaderRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3881/BaseOneByteHeaderRecordFormat.java\n@@ -36,8 +36,7 @@ public abstract class BaseOneByteHeaderRecordFormat<RECORD extends AbstractBaseR\n {\n     private final int inUseBitMaskForFirstByte;\n \n-    protected BaseOneByteHeaderRecordFormat( Function<StoreHeader,Integer> recordSize, int recordHeaderSize,\n-            int inUseBitMaskForFirstByte, int idBits )\n+    protected BaseOneByteHeaderRecordFormat( Function<StoreHeader,Integer> recordSize, int recordHeaderSize, int inUseBitMaskForFirstByte, int idBits )\n     {\n         super( recordSize, recordHeaderSize, idBits );\n         this.inUseBitMaskForFirstByte = inUseBitMaskForFirstByte;\n@@ -79,7 +78,7 @@ public abstract class BaseOneByteHeaderRecordFormat<RECORD extends AbstractBaseR\n      */\n     protected static boolean has( long headerByte, int bitMask )\n     {\n-        return (headerByte & bitMask) != 0;\n+        return ( headerByte & bitMask) != 0;\n     }\n \n     /**\n@@ -92,6 +91,6 @@ public abstract class BaseOneByteHeaderRecordFormat<RECORD extends AbstractBaseR\n      */\n     protected static byte set( byte headerByte, int bitMask, boolean value )\n     {\n-        return (byte) (value ? headerByte | bitMask : headerByte);\n+        return (byte) ( value ? headerByte | bitMask : headerByte);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2796",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2796/ConfigurableStandalonePageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2796/ConfigurableStandalonePageCacheFactory.java\nindex 9ddc3657a8a..3320bcc9058 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2796/ConfigurableStandalonePageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2796/ConfigurableStandalonePageCacheFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import java.time.ZoneId;\n@@ -41,42 +42,43 @@ import org.neo4j.logging.FormattedLogProvider;\n  */\n public final class ConfigurableStandalonePageCacheFactory\n {\n-    private ConfigurableStandalonePageCacheFactory()\n-    {\n-    }\n+  private ConfigurableStandalonePageCacheFactory()\n+  {\n+  }\n \n-    public static PageCache createPageCache( FileSystemAbstraction fileSystem )\n-    {\n-        return createPageCache( fileSystem, PageCacheTracer.NULL, DefaultPageCursorTracerSupplier.INSTANCE,\n-                Config.defaults(), EmptyVersionContextSupplier.EMPTY );\n-    }\n+  public static PageCache createPageCache(FileSystemAbstraction fileSystem)\n+  {\n+    return createPageCache(fileSystem, PageCacheTracer.NULL, DefaultPageCursorTracerSupplier.INSTANCE,\n+        Config.defaults(), EmptyVersionContextSupplier.EMPTY);\n+  }\n \n-    public static PageCache createPageCache( FileSystemAbstraction fileSystem, Config config )\n-    {\n-        return createPageCache( fileSystem, PageCacheTracer.NULL, DefaultPageCursorTracerSupplier.INSTANCE, config,\n-                EmptyVersionContextSupplier.EMPTY );\n-    }\n+  public static PageCache createPageCache(FileSystemAbstraction fileSystem, Config config)\n+  {\n+    return createPageCache(fileSystem, PageCacheTracer.NULL, DefaultPageCursorTracerSupplier.INSTANCE, config,\n+        EmptyVersionContextSupplier.EMPTY);\n+  }\n \n-    /**\n-     * Create page cache\n-     * @param fileSystem file system that page cache will be based on\n-     * @param pageCacheTracer global page cache tracer\n-     * @param pageCursorTracerSupplier supplier of thread local (transaction local) page cursor tracer that will provide\n-     * thread local page cache statistics\n-     * @param config page cache configuration\n-     * @param versionContextSupplier version context supplier\n-     * @return created page cache instance\n-     */\n-    public static PageCache createPageCache( FileSystemAbstraction fileSystem, PageCacheTracer pageCacheTracer,\n-            PageCursorTracerSupplier pageCursorTracerSupplier, Config config,\n-            VersionContextSupplier versionContextSupplier )\n-    {\n-        config.augmentDefaults( GraphDatabaseSettings.pagecache_memory, \"8M\" );\n-        ZoneId logTimeZone = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n-        FormattedLogProvider logProvider = FormattedLogProvider.withZoneId( logTimeZone ).toOutputStream( System.err );\n-        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n-                fileSystem, config, pageCacheTracer, pageCursorTracerSupplier,\n-                logProvider.getLog( PageCache.class ), versionContextSupplier );\n-        return pageCacheFactory.getOrCreatePageCache();\n-    }\n+  /**\n+   * Create page cache\n+   *\n+   * @param fileSystem               file system that page cache will be based on\n+   * @param pageCacheTracer          global page cache tracer\n+   * @param pageCursorTracerSupplier supplier of thread local (transaction local) page cursor tracer that will provide\n+   *                                 thread local page cache statistics\n+   * @param config                   page cache configuration\n+   * @param versionContextSupplier   version context supplier\n+   * @return created page cache instance\n+   */\n+  public static PageCache createPageCache(FileSystemAbstraction fileSystem, PageCacheTracer pageCacheTracer,\n+                                          PageCursorTracerSupplier pageCursorTracerSupplier, Config config,\n+                                          VersionContextSupplier versionContextSupplier)\n+  {\n+    config.augmentDefaults(GraphDatabaseSettings.pagecache_memory, \"8M\");\n+    ZoneId logTimeZone = config.get(GraphDatabaseSettings.db_timezone).getZoneId();\n+    FormattedLogProvider logProvider = FormattedLogProvider.withZoneId(logTimeZone).toOutputStream(System.err);\n+    ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n+        fileSystem, config, pageCacheTracer, pageCursorTracerSupplier,\n+        logProvider.getLog(PageCache.class), versionContextSupplier);\n+    return pageCacheFactory.getOrCreatePageCache();\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2796/ConfigurableStandalonePageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2796/ConfigurableStandalonePageCacheFactory.java\nindex 9ddc3657a8a..f95474c46ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2796/ConfigurableStandalonePageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2796/ConfigurableStandalonePageCacheFactory.java\n@@ -74,9 +74,8 @@ public final class ConfigurableStandalonePageCacheFactory\n         config.augmentDefaults( GraphDatabaseSettings.pagecache_memory, \"8M\" );\n         ZoneId logTimeZone = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n         FormattedLogProvider logProvider = FormattedLogProvider.withZoneId( logTimeZone ).toOutputStream( System.err );\n-        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(\n-                fileSystem, config, pageCacheTracer, pageCursorTracerSupplier,\n+        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory( fileSystem, config, pageCacheTracer, pageCursorTracerSupplier,\n                 logProvider.getLog( PageCache.class ), versionContextSupplier );\n-        return pageCacheFactory.getOrCreatePageCache();\n+return pageCacheFactory.getOrCreatePageCache();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
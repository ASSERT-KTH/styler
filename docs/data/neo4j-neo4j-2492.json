{
    "project_name": "neo4j-neo4j",
    "error_id": "2492",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2492/MonoDirectionalTraversalDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2492/MonoDirectionalTraversalDescription.java\nindex 82126e292f7..3d59bccfacd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2492/MonoDirectionalTraversalDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2492/MonoDirectionalTraversalDescription.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.traversal;\n \n import java.util.Arrays;\n@@ -55,15 +56,15 @@ public final class MonoDirectionalTraversalDescription implements TraversalDescr\n \n     public MonoDirectionalTraversalDescription()\n     {\n-        this( PathExpanders.allTypesAndDirections(), Uniqueness.NODE_GLOBAL, null,\n-                Evaluators.all(), InitialBranchState.NO_STATE, BranchOrderingPolicies.PREORDER_DEPTH_FIRST, null, null );\n+        this(PathExpanders.allTypesAndDirections(), Uniqueness.NODE_GLOBAL, null,\n+          Evaluators.all(), InitialBranchState.NO_STATE, BranchOrderingPolicies.PREORDER_DEPTH_FIRST, null, null);\n     }\n \n-    private MonoDirectionalTraversalDescription( PathExpander expander,\n-                                                 UniquenessFactory uniqueness, Object uniquenessParameter,\n-                                                 PathEvaluator evaluator, InitialBranchState initialState,\n-                                                 BranchOrderingPolicy branchOrdering,\n-                                                 Comparator<? super Path> sorting, Collection<Node> endNodes )\n+    private MonoDirectionalTraversalDescription(PathExpander expander,\n+                                                UniquenessFactory uniqueness, Object uniquenessParameter,\n+                                                PathEvaluator evaluator, InitialBranchState initialState,\n+                                                BranchOrderingPolicy branchOrdering,\n+                                                Comparator<? super Path> sorting, Collection<Node> endNodes)\n     {\n         this.expander = expander;\n         this.uniqueness = uniqueness;\n@@ -76,97 +77,96 @@ public final class MonoDirectionalTraversalDescription implements TraversalDescr\n     }\n \n     @Override\n-    public Traverser traverse( Node startNode )\n+    public Traverser traverse(Node startNode)\n     {\n-        return traverse( Collections.singletonList( startNode ) );\n+        return traverse(Collections.singletonList(startNode));\n     }\n \n     @Override\n-    public Traverser traverse( Node... startNodes )\n+    public Traverser traverse(Node... startNodes)\n     {\n-        return traverse( Arrays.asList( startNodes ) );\n+        return traverse(Arrays.asList(startNodes));\n     }\n \n     @Override\n-    public Traverser traverse( final Iterable<Node> iterableStartNodes )\n+    public Traverser traverse(final Iterable<Node> iterableStartNodes)\n     {\n-        return new DefaultTraverser( () ->\n+        return new DefaultTraverser(() ->\n         {\n             MonoDirectionalTraverserIterator iterator = new MonoDirectionalTraverserIterator(\n-                    uniqueness.create( uniquenessParameter ),\n-                    expander, branchOrdering, evaluator,\n-                    iterableStartNodes, initialState, uniqueness );\n-            return sorting != null ? new SortingTraverserIterator( sorting, iterator ) : iterator;\n-        } );\n+              uniqueness.create(uniquenessParameter),\n+              expander, branchOrdering, evaluator,\n+              iterableStartNodes, initialState, uniqueness);\n+            return sorting != null ? new SortingTraverserIterator(sorting, iterator) : iterator;\n+        });\n     }\n \n     /* (non-Javadoc)\n      * @see org.neo4j.graphdb.traversal.TraversalDescription#uniqueness(org.neo4j.graphdb.traversal.Uniqueness)\n      */\n     @Override\n-    public TraversalDescription uniqueness( UniquenessFactory uniqueness )\n+    public TraversalDescription uniqueness(UniquenessFactory uniqueness)\n     {\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness, null,\n-                evaluator, initialState, branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness, null,\n+          evaluator, initialState, branchOrdering, sorting, endNodes);\n     }\n \n     /* (non-Javadoc)\n      * @see org.neo4j.graphdb.traversal.TraversalDescription#uniqueness(org.neo4j.graphdb.traversal.Uniqueness, java.lang.Object)\n      */\n     @Override\n-    public TraversalDescription uniqueness( UniquenessFactory uniqueness,\n-            Object parameter )\n+    public TraversalDescription uniqueness(UniquenessFactory uniqueness,\n+                                           Object parameter)\n     {\n-        if ( this.uniqueness == uniqueness &&\n-             (uniquenessParameter == null ? parameter == null : uniquenessParameter.equals( parameter )) )\n+        if (this.uniqueness == uniqueness &&\n+          (uniquenessParameter == null ? parameter == null : uniquenessParameter.equals(parameter)))\n         {\n             return this;\n         }\n \n-        return new MonoDirectionalTraversalDescription( expander, uniqueness, parameter,\n-                evaluator, initialState, branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness, parameter,\n+          evaluator, initialState, branchOrdering, sorting, endNodes);\n     }\n \n     @Override\n-    public TraversalDescription evaluator( Evaluator evaluator )\n+    public TraversalDescription evaluator(Evaluator evaluator)\n     {\n-        return evaluator( new Evaluator.AsPathEvaluator( evaluator ) );\n+        return evaluator(new Evaluator.AsPathEvaluator(evaluator));\n     }\n \n     @Override\n-    public TraversalDescription evaluator( PathEvaluator evaluator )\n+    public TraversalDescription evaluator(PathEvaluator evaluator)\n     {\n-        if ( this.evaluator == evaluator )\n+        if (this.evaluator == evaluator)\n         {\n             return this;\n         }\n-        nullCheck( evaluator, Evaluator.class, \"RETURN_ALL\" );\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness, uniquenessParameter,\n-                addEvaluator( this.evaluator, evaluator ), initialState, branchOrdering, sorting, endNodes );\n+        nullCheck(evaluator, Evaluator.class, \"RETURN_ALL\");\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness, uniquenessParameter,\n+          addEvaluator(this.evaluator, evaluator), initialState, branchOrdering, sorting, endNodes);\n     }\n \n-    protected static PathEvaluator addEvaluator( PathEvaluator existing, PathEvaluator toAdd )\n+    protected static PathEvaluator addEvaluator(PathEvaluator existing, PathEvaluator toAdd)\n     {\n-        if ( existing instanceof MultiEvaluator )\n+        if (existing instanceof MultiEvaluator)\n         {\n-            return ((MultiEvaluator) existing).add( toAdd );\n-        }\n-        else\n+            return ((MultiEvaluator) existing).add(toAdd);\n+        } else\n         {\n             return existing == Evaluators.all() ? toAdd :\n-                new MultiEvaluator( existing, toAdd );\n+              new MultiEvaluator(existing, toAdd);\n         }\n     }\n \n-    protected static <T> void nullCheck( T parameter, Class<T> parameterType, String defaultName )\n+    protected static <T> void nullCheck(T parameter, Class<T> parameterType, String defaultName)\n     {\n-        if ( parameter == null )\n+        if (parameter == null)\n         {\n             String typeName = parameterType.getSimpleName();\n-            throw new IllegalArgumentException( typeName\n-                                                + \" may not be null, use \"\n-                                                + typeName + \".\" + defaultName\n-                                                + \" instead.\" );\n+            throw new IllegalArgumentException(typeName\n+              + \" may not be null, use \"\n+              + typeName + \".\" + defaultName\n+              + \" instead.\");\n         }\n     }\n \n@@ -174,80 +174,80 @@ public final class MonoDirectionalTraversalDescription implements TraversalDescr\n      * @see org.neo4j.graphdb.traversal.TraversalDescription#order(org.neo4j.graphdb.traversal.Order)\n      */\n     @Override\n-    public TraversalDescription order( BranchOrderingPolicy order )\n+    public TraversalDescription order(BranchOrderingPolicy order)\n     {\n-        if ( this.branchOrdering == order )\n+        if (this.branchOrdering == order)\n         {\n             return this;\n         }\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness, uniquenessParameter,\n-                evaluator, initialState, order, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness, uniquenessParameter,\n+          evaluator, initialState, order, sorting, endNodes);\n     }\n \n     @Override\n     public TraversalDescription depthFirst()\n     {\n-        return order( BranchOrderingPolicies.PREORDER_DEPTH_FIRST);\n+        return order(BranchOrderingPolicies.PREORDER_DEPTH_FIRST);\n     }\n \n     @Override\n     public TraversalDescription breadthFirst()\n     {\n-        return order( BranchOrderingPolicies.PREORDER_BREADTH_FIRST );\n+        return order(BranchOrderingPolicies.PREORDER_BREADTH_FIRST);\n     }\n \n     /* (non-Javadoc)\n      * @see org.neo4j.graphdb.traversal.TraversalDescription#relationships(org.neo4j.graphdb.RelationshipType)\n      */\n     @Override\n-    public TraversalDescription relationships( RelationshipType type )\n+    public TraversalDescription relationships(RelationshipType type)\n     {\n-        return relationships( type, Direction.BOTH );\n+        return relationships(type, Direction.BOTH);\n     }\n \n     /* (non-Javadoc)\n      * @see org.neo4j.graphdb.traversal.TraversalDescription#relationships(org.neo4j.graphdb.RelationshipType, org.neo4j.graphdb.Direction)\n      */\n     @Override\n-    public TraversalDescription relationships( RelationshipType type,\n-            Direction direction )\n+    public TraversalDescription relationships(RelationshipType type,\n+                                              Direction direction)\n     {\n-        if ( expander instanceof StandardExpander )\n+        if (expander instanceof StandardExpander)\n         {\n-            return expand( ((StandardExpander) expander).add( type, direction ) );\n+            return expand(((StandardExpander) expander).add(type, direction));\n         }\n-        throw new IllegalStateException( \"The current expander cannot be added to\" );\n+        throw new IllegalStateException(\"The current expander cannot be added to\");\n     }\n \n     @Override\n-    public TraversalDescription expand( PathExpander<?> expander )\n+    public TraversalDescription expand(PathExpander<?> expander)\n     {\n-        if ( expander.equals( this.expander ) )\n+        if (expander.equals(this.expander))\n         {\n             return this;\n         }\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness,\n-                uniquenessParameter, evaluator, initialState, branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness,\n+          uniquenessParameter, evaluator, initialState, branchOrdering, sorting, endNodes);\n     }\n \n     @Override\n-    public <STATE> TraversalDescription expand( PathExpander<STATE> expander, InitialBranchState<STATE> initialState )\n+    public <STATE> TraversalDescription expand(PathExpander<STATE> expander, InitialBranchState<STATE> initialState)\n     {\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness,\n-                uniquenessParameter, evaluator, initialState, branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness,\n+          uniquenessParameter, evaluator, initialState, branchOrdering, sorting, endNodes);\n     }\n \n     @Override\n-    public TraversalDescription sort( Comparator<? super Path> sorting )\n+    public TraversalDescription sort(Comparator<? super Path> sorting)\n     {\n-        return new MonoDirectionalTraversalDescription( expander, uniqueness, uniquenessParameter, evaluator,\n-                initialState, branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander, uniqueness, uniquenessParameter, evaluator,\n+          initialState, branchOrdering, sorting, endNodes);\n     }\n \n     @Override\n     public TraversalDescription reverse()\n     {\n-        return new MonoDirectionalTraversalDescription( expander.reverse(), uniqueness, uniquenessParameter,\n-                evaluator, initialState.reverse(), branchOrdering, sorting, endNodes );\n+        return new MonoDirectionalTraversalDescription(expander.reverse(), uniqueness, uniquenessParameter,\n+          evaluator, initialState.reverse(), branchOrdering, sorting, endNodes);\n     }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2492/MonoDirectionalTraversalDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2492/MonoDirectionalTraversalDescription.java\nindex 82126e292f7..8de76125db8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2492/MonoDirectionalTraversalDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2492/MonoDirectionalTraversalDescription.java\n@@ -59,12 +59,11 @@ public final class MonoDirectionalTraversalDescription implements TraversalDescr\n                 Evaluators.all(), InitialBranchState.NO_STATE, BranchOrderingPolicies.PREORDER_DEPTH_FIRST, null, null );\n     }\n \n-    private MonoDirectionalTraversalDescription( PathExpander expander,\n-                                                 UniquenessFactory uniqueness, Object uniquenessParameter,\n+    private MonoDirectionalTraversalDescription( PathExpander expander, UniquenessFactory uniqueness, Object uniquenessParameter,\n                                                  PathEvaluator evaluator, InitialBranchState initialState,\n                                                  BranchOrderingPolicy branchOrdering,\n                                                  Comparator<? super Path> sorting, Collection<Node> endNodes )\n-    {\n+{\n         this.expander = expander;\n         this.uniqueness = uniqueness;\n         this.uniquenessParameter = uniquenessParameter;\n@@ -250,4 +249,4 @@ public final class MonoDirectionalTraversalDescription implements TraversalDescr\n         return new MonoDirectionalTraversalDescription( expander.reverse(), uniqueness, uniquenessParameter,\n                 evaluator, initialState.reverse(), branchOrdering, sorting, endNodes );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
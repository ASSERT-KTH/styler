{
    "project_name": "HealerJean-HealerJean.github.io",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "103",
                "column": "21",
                "severity": "error",
                "message": "'}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "                    if (nativeConnection instanceof JedisCluster) {\n                        return (Long) ((JedisCluster) nativeConnection).eval(UNLOCK_LUA, keys, args);\n                    }\n\n                    // \u5355\u673a\u6a21\u5f0f\n                    else if (nativeConnection instanceof Jedis) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "102",
                    "column": "103",
                    "severity": "error",
                    "message": "'}' at column 103 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "103",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HealerJean-HealerJean.github.io/errored/1/9/RedisDistributedLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HealerJean-HealerJean.github.io/styler_three_grams/9/RedisDistributedLock.java\nindex 715934fc4b6..65dc24c6df0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HealerJean-HealerJean.github.io/errored/1/9/RedisDistributedLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HealerJean-HealerJean.github.io/styler_three_grams/9/RedisDistributedLock.java\n@@ -99,10 +99,7 @@ public class RedisDistributedLock extends AbstractDistributedLock {\n                     // \u96c6\u7fa4\u6a21\u5f0f\u548c\u5355\u673a\u6a21\u5f0f\u867d\u7136\u6267\u884c\u811a\u672c\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u4f46\u662f\u6ca1\u6709\u5171\u540c\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u53ea\u80fd\u5206\u5f00\u6267\u884c\n                     // \u96c6\u7fa4\u6a21\u5f0f\n                     if (nativeConnection instanceof JedisCluster) {\n-                        return (Long) ((JedisCluster) nativeConnection).eval(UNLOCK_LUA, keys, args);\n-                    }\n-\n-                    // \u5355\u673a\u6a21\u5f0f\n+                        return (Long) ((JedisCluster) nativeConnection).eval(UNLOCK_LUA, keys, args); }// \u5355\u673a\u6a21\u5f0f\n                     else if (nativeConnection instanceof Jedis) {\n                         return (Long) ((Jedis) nativeConnection).eval(UNLOCK_LUA, keys, args);\n                     }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
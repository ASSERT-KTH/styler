{
    "project_name": "neo4j-neo4j",
    "error_id": "1760",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1760/MemoryLimitExceededException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1760/MemoryLimitExceededException.java\nindex eaa4c9106c2..a7fb944a9a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1760/MemoryLimitExceededException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1760/MemoryLimitExceededException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.memory;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -32,9 +33,9 @@ public class MemoryLimitExceededException extends RuntimeException implements St\n {\n     private final Status status;\n \n-    public MemoryLimitExceededException( long allocation, long limit, long current, Status status, String settingName )\n+    public MemoryLimitExceededException(long allocation, long limit, long current, Status status, String settingName)\n     {\n-        super( getMessage( allocation, limit, current, settingName ) );\n+        super(getMessage(allocation, limit, current, settingName));\n         this.status = status;\n     }\n \n@@ -44,33 +45,33 @@ public class MemoryLimitExceededException extends RuntimeException implements St\n         return status;\n     }\n \n-    private static String getMessage( long allocation, long limit, long current, String settingName )\n+    private static String getMessage(long allocation, long limit, long current, String settingName)\n     {\n-        if ( StringUtils.isEmpty( settingName ) )\n+        if (StringUtils.isEmpty(settingName))\n         {\n-            return format( \"The allocation of an extra %s would use more than the limit %s. Currently using %s.\",\n-                    humanReadableByteCountBin( allocation ), humanReadableByteCountBin( limit ), humanReadableByteCountBin( current ) );\n+            return format(\"The allocation of an extra %s would use more than the limit %s. Currently using %s.\",\n+              humanReadableByteCountBin(allocation), humanReadableByteCountBin(limit), humanReadableByteCountBin(current));\n         }\n \n-        return format( \"The allocation of an extra %s would use more than the limit %s. Currently using %s. %s threshold reached\",\n-                humanReadableByteCountBin( allocation ), humanReadableByteCountBin( limit ), humanReadableByteCountBin( current ), settingName );\n+        return format(\"The allocation of an extra %s would use more than the limit %s. Currently using %s. %s threshold reached\",\n+          humanReadableByteCountBin(allocation), humanReadableByteCountBin(limit), humanReadableByteCountBin(current), settingName);\n     }\n \n-    private static String humanReadableByteCountBin( long bytes )\n+    private static String humanReadableByteCountBin(long bytes)\n     {\n-        long absB = bytes == Long.MIN_VALUE ? Long.MAX_VALUE : Math.abs( bytes );\n-        if ( absB < 1024 )\n+        long absB = bytes == Long.MIN_VALUE ? Long.MAX_VALUE : Math.abs(bytes);\n+        if (absB < 1024)\n         {\n             return bytes + \" B\";\n         }\n         long value = absB;\n-        CharacterIterator ci = new StringCharacterIterator( \"KMGTPE\" );\n-        for ( int i = 40; i >= 0 && absB > 0xfffccccccccccccL >> i; i -= 10 )\n+        CharacterIterator ci = new StringCharacterIterator(\"KMGTPE\");\n+        for (int i = 40; i >= 0 && absB > 0xfffccccccccccccL >> i; i -= 10)\n         {\n             value >>= 10;\n             ci.next();\n         }\n-        value *= Long.signum( bytes );\n-        return String.format( \"%.1f %ciB\", value / 1024.0, ci.current() );\n+        value *= Long.signum(bytes);\n+        return String.format(\"%.1f %ciB\", value / 1024.0, ci.current());\n     }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
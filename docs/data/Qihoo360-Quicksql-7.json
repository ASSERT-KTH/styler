{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public void prepareQuery() {}\n\n    //remember to remove temporary files after computing in hdfs or local machine\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/7/SparkMySqlGenerator.java\nindex bc8b97aba50..aa834187d30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/7/SparkMySqlGenerator.java\n@@ -22,7 +22,8 @@ public class SparkMySqlGenerator extends QueryGenerator {\n     }\r\n \r\n     @Override\r\n-    public void prepareQuery() {}\r\n+    public void prepareQuery() {\r\n+    }\r\n \r\n     //remember to remove temporary files after computing in hdfs or local machine\r\n     @Override\r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/7/SparkMySqlGenerator.java\nindex bc8b97aba50..36bc4c6febc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/7/SparkMySqlGenerator.java\n@@ -22,7 +22,8 @@ public class SparkMySqlGenerator extends QueryGenerator {\n     }\r\n \r\n     @Override\r\n-    public void prepareQuery() {}\r\n+    public void prepareQuery() {\r\n+    }\r\n \r\n     //remember to remove temporary files after computing in hdfs or local machine\r\n     @Override\r\n@@ -31,7 +32,7 @@ public class SparkMySqlGenerator extends QueryGenerator {\n         Invoker config = Invoker.registerMethod(\"SparkMySqlGenerator.config\");\r\n         String invokeWrap = config.invoke(convertProperties(\"jdbcUser\", \"jdbcPassword\"));\r\n         String invoked = String.format(\"tmp = spark.read().jdbc(\\\"%s\\\", \\\"%s\\\", %s);\",\r\n-                properties.getOrDefault(\"jdbcUrl\", \"\"), tableName, invokeWrap);\r\n+            properties.getOrDefault(\"jdbcUrl\", \"\"), tableName, invokeWrap);\r\n         composer.handleComposition(ClassBodyComposer.CodeCategory.SENTENCE, invoked);\r\n     }\r\n \r\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/7/SparkMySqlGenerator.java\nindex bc8b97aba50..d933c03078d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/7/SparkMySqlGenerator.java\n@@ -22,7 +22,9 @@ public class SparkMySqlGenerator extends QueryGenerator {\n     }\r\n \r\n     @Override\r\n-    public void prepareQuery() {}\r\n+    public void prepareQuery() {\n+\n+}\r\n \r\n     //remember to remove temporary files after computing in hdfs or local machine\r\n     @Override\r\n@@ -50,4 +52,4 @@ public class SparkMySqlGenerator extends QueryGenerator {\n         properties.put(\"password\", password);\r\n         return properties;\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/7/SparkMySqlGenerator.java\nindex bc8b97aba50..7e6031ee5ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/7/SparkMySqlGenerator.java\n@@ -1,53 +1,61 @@\n-package com.qihoo.qsql.codegen.spark;\r\n-\r\n-import com.qihoo.qsql.codegen.ClassBodyComposer;\r\n-import com.qihoo.qsql.codegen.QueryGenerator;\r\n+package com.qihoo.qsql.codegen.spark;\n+\n+import com.qihoo.qsql.codegen.ClassBodyComposer;\n+import com.qihoo.qsql.codegen.QueryGenerator;\n import java.util.Properties;\r\n \r\n /**\r\n  * Code generator, used when {@link com.qihoo.qsql.exec.spark.SparkPipeline} is chosen and source\r\n  * data of query is in MySql at the same time.\r\n- */\r\n-public class SparkMySqlGenerator extends QueryGenerator {\r\n-\r\n-    @Override\r\n-    public void importDependency() {\r\n-        String[] imports = {\r\n-            \"import org.apache.spark.sql.Dataset\",\r\n-            \"import org.apache.spark.sql.Row\",\r\n-            \"import java.util.Properties\",\r\n-            \"import com.qihoo.qsql.codegen.spark.SparkMySqlGenerator\"\r\n-        };\r\n-        composer.handleComposition(ClassBodyComposer.CodeCategory.IMPORT, imports);\r\n+ */\n+\n+\n+public class SparkMySqlGenerator extends QueryGenerator {\n+\n+    @Override\n+    public void importDependency() {\n+        String[] imports = {\n+            \"import org.apache.spark.sql.Dataset\",\n+            \"import org.apache.spark.sql.Row\",\n+            \"import java.util.Properties\",\n+            \"import com.qihoo.qsql.codegen.spark.SparkMySqlGenerator\"\n+        };\n+        composer.handleComposition(ClassBodyComposer.CodeCategory.IMPORT, imports);\n+    }\n+\n+    @Override\n+    public void prepareQuery() {\n+\n     }\r\n \r\n-    @Override\r\n-    public void prepareQuery() {}\r\n-\r\n-    //remember to remove temporary files after computing in hdfs or local machine\r\n-    @Override\r\n+    //remember to remove temporary files after computing in hdfs or local machine\n+\n+    @Override\n     public void executeQuery() {\r\n-        //TODO change to generate invoking from reflection\r\n-        Invoker config = Invoker.registerMethod(\"SparkMySqlGenerator.config\");\r\n-        String invokeWrap = config.invoke(convertProperties(\"jdbcUser\", \"jdbcPassword\"));\r\n-        String invoked = String.format(\"tmp = spark.read().jdbc(\\\"%s\\\", \\\"%s\\\", %s);\",\r\n-                properties.getOrDefault(\"jdbcUrl\", \"\"), tableName, invokeWrap);\r\n-        composer.handleComposition(ClassBodyComposer.CodeCategory.SENTENCE, invoked);\r\n-    }\r\n-\r\n-    @Override\r\n-    public void saveToTempTable() {\r\n-        String created = \"tmp.createOrReplaceTempView(\\\"\" + tableName + \"\\\");\";\r\n-        composer.handleComposition(ClassBodyComposer.CodeCategory.SENTENCE, created);\r\n+        //TODO change to generate invoking from reflection\n+        Invoker config = Invoker.registerMethod(\"SparkMySqlGenerator.config\");\n+        String invokeWrap = config.invoke(convertProperties(\"jdbcUser\", \"jdbcPassword\"));\n+        String invoked = String.format(\"tmp = spark.read().jdbc(\\\"%s\\\", \\\"%s\\\", %s);\",\n+                                       properties.getOrDefault(\"jdbcUrl\", \"\"),\n+                                       tableName,\n+                                       invokeWrap);\n+        composer.handleComposition(ClassBodyComposer.CodeCategory.SENTENCE, invoked);\n+    }\n+\n+    @Override\n+    public void saveToTempTable() {\n+        String created = \"tmp.createOrReplaceTempView(\\\"\" + tableName + \"\\\");\";\n+        composer.handleComposition(ClassBodyComposer.CodeCategory.SENTENCE, created);\n     }\r\n \r\n     /**\r\n      * .\r\n-     */\r\n-    public static Properties config(String user, String password) {\r\n-        Properties properties = new Properties();\r\n-        properties.put(\"user\", user);\r\n-        properties.put(\"password\", password);\r\n-        return properties;\r\n-    }\r\n-}\r\n+     */\n+\n+    public static Properties config(String user, String password) {\n+        Properties properties = new Properties();\n+        properties.put(\"user\", user);\n+        properties.put(\"password\", password);\n+        return properties;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/7/SparkMySqlGenerator.java\nindex bc8b97aba50..aa834187d30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/7/SparkMySqlGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/7/SparkMySqlGenerator.java\n@@ -22,7 +22,8 @@ public class SparkMySqlGenerator extends QueryGenerator {\n     }\r\n \r\n     @Override\r\n-    public void prepareQuery() {}\r\n+    public void prepareQuery() {\r\n+    }\r\n \r\n     //remember to remove temporary files after computing in hdfs or local machine\r\n     @Override\r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_three_grams"
    ]
}
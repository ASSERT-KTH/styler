{
    "project_name": "graphfoundation-ongdb",
    "error_id": "457",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/457/CommitProcessSwitcher.java\nindex 8eebc68e2b0..88f31734179 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/457/CommitProcessSwitcher.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster.modeswitch;\n \n import org.neo4j.graphdb.DependencyResolver;\n@@ -35,38 +36,38 @@ import org.neo4j.storageengine.api.StorageEngine;\n \n public class CommitProcessSwitcher extends AbstractComponentSwitcher<TransactionCommitProcess>\n {\n-    private final TransactionPropagator txPropagator;\n-    private final Master master;\n-    private final RequestContextFactory requestContextFactory;\n-    private final DependencyResolver dependencyResolver;\n-    private final MasterTransactionCommitProcess.Monitor monitor;\n+  private final TransactionPropagator txPropagator;\n+  private final Master master;\n+  private final RequestContextFactory requestContextFactory;\n+  private final DependencyResolver dependencyResolver;\n+  private final MasterTransactionCommitProcess.Monitor monitor;\n \n-    public CommitProcessSwitcher( TransactionPropagator txPropagator, Master master,\n-            DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory,\n-            Monitors monitors, DependencyResolver dependencyResolver )\n-    {\n-        super( delegate );\n-        this.txPropagator = txPropagator;\n-        this.master = master;\n-        this.requestContextFactory = requestContextFactory;\n-        this.dependencyResolver = dependencyResolver;\n-        this.monitor = monitors.newMonitor( MasterTransactionCommitProcess.Monitor.class );\n-    }\n+  public CommitProcessSwitcher(TransactionPropagator txPropagator, Master master,\n+                               DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory,\n+                               Monitors monitors, DependencyResolver dependencyResolver)\n+  {\n+    super(delegate);\n+    this.txPropagator = txPropagator;\n+    this.master = master;\n+    this.requestContextFactory = requestContextFactory;\n+    this.dependencyResolver = dependencyResolver;\n+    this.monitor = monitors.newMonitor(MasterTransactionCommitProcess.Monitor.class);\n+  }\n \n-    @Override\n-    protected TransactionCommitProcess getSlaveImpl()\n-    {\n-        return new SlaveTransactionCommitProcess( master, requestContextFactory );\n-    }\n+  @Override\n+  protected TransactionCommitProcess getSlaveImpl()\n+  {\n+    return new SlaveTransactionCommitProcess(master, requestContextFactory);\n+  }\n \n-    @Override\n-    protected TransactionCommitProcess getMasterImpl()\n-    {\n-        TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess(\n-                dependencyResolver.resolveDependency( TransactionAppender.class ),\n-                dependencyResolver.resolveDependency( StorageEngine.class ) );\n+  @Override\n+  protected TransactionCommitProcess getMasterImpl()\n+  {\n+    TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess(\n+        dependencyResolver.resolveDependency(TransactionAppender.class),\n+        dependencyResolver.resolveDependency(StorageEngine.class));\n \n-        IntegrityValidator validator = dependencyResolver.resolveDependency( IntegrityValidator.class );\n-        return new MasterTransactionCommitProcess( commitProcess, txPropagator, validator, monitor );\n-    }\n+    IntegrityValidator validator = dependencyResolver.resolveDependency(IntegrityValidator.class);\n+    return new MasterTransactionCommitProcess(commitProcess, txPropagator, validator, monitor);\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/457/CommitProcessSwitcher.java\nindex 8eebc68e2b0..33faa815575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/457/CommitProcessSwitcher.java\n@@ -41,8 +41,7 @@ public class CommitProcessSwitcher extends AbstractComponentSwitcher<Transaction\n     private final DependencyResolver dependencyResolver;\n     private final MasterTransactionCommitProcess.Monitor monitor;\n \n-    public CommitProcessSwitcher( TransactionPropagator txPropagator, Master master,\n-            DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory,\n+    public CommitProcessSwitcher( TransactionPropagator txPropagator, Master master, DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory,\n             Monitors monitors, DependencyResolver dependencyResolver )\n     {\n         super( delegate );\n@@ -62,11 +61,8 @@ public class CommitProcessSwitcher extends AbstractComponentSwitcher<Transaction\n     @Override\n     protected TransactionCommitProcess getMasterImpl()\n     {\n-        TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess(\n-                dependencyResolver.resolveDependency( TransactionAppender.class ),\n-                dependencyResolver.resolveDependency( StorageEngine.class ) );\n-\n-        IntegrityValidator validator = dependencyResolver.resolveDependency( IntegrityValidator.class );\n+        TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess( dependencyResolver.resolveDependency( TransactionAppender.class ), dependencyResolver.resolveDependency( StorageEngine.class ) );\n+IntegrityValidator validator = dependencyResolver.resolveDependency( IntegrityValidator.class );\n         return new MasterTransactionCommitProcess( commitProcess, txPropagator, validator, monitor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/457/CommitProcessSwitcher.java\nindex 8eebc68e2b0..1071630fa69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/457/CommitProcessSwitcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/457/CommitProcessSwitcher.java\n@@ -41,9 +41,7 @@ public class CommitProcessSwitcher extends AbstractComponentSwitcher<Transaction\n     private final DependencyResolver dependencyResolver;\n     private final MasterTransactionCommitProcess.Monitor monitor;\n \n-    public CommitProcessSwitcher( TransactionPropagator txPropagator, Master master,\n-            DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory,\n-            Monitors monitors, DependencyResolver dependencyResolver )\n+    public CommitProcessSwitcher( TransactionPropagator txPropagator, Master master, DelegateInvocationHandler<TransactionCommitProcess> delegate, RequestContextFactory requestContextFactory, Monitors monitors, DependencyResolver dependencyResolver )\n     {\n         super( delegate );\n         this.txPropagator = txPropagator;\n@@ -62,11 +60,8 @@ public class CommitProcessSwitcher extends AbstractComponentSwitcher<Transaction\n     @Override\n     protected TransactionCommitProcess getMasterImpl()\n     {\n-        TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess(\n-                dependencyResolver.resolveDependency( TransactionAppender.class ),\n-                dependencyResolver.resolveDependency( StorageEngine.class ) );\n-\n+        TransactionCommitProcess commitProcess = new TransactionRepresentationCommitProcess( dependencyResolver.resolveDependency( TransactionAppender.class ), dependencyResolver.resolveDependency( StorageEngine.class ) );\n         IntegrityValidator validator = dependencyResolver.resolveDependency( IntegrityValidator.class );\n         return new MasterTransactionCommitProcess( commitProcess, txPropagator, validator, monitor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Roboy-roboy_dialog",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "73",
                "severity": "error",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "      throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n\n    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n    config.setOpenMode(OpenMode.CREATE);\n    config.setRAMBufferSizeMB(256.0);\n    indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler/23/FbEntityIndexer.java\nindex 3c76aa591a3..c8ae93b0eaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler/23/FbEntityIndexer.java\n@@ -25,7 +25,7 @@ public class FbEntityIndexer {\n     if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n       throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n \n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44, indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n     config.setOpenMode(OpenMode.CREATE);\n     config.setRAMBufferSizeMB(256.0);\n     indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/intellij/23/FbEntityIndexer.java\nindex 3c76aa591a3..da114f19546 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/intellij/23/FbEntityIndexer.java\n@@ -17,70 +17,73 @@ import java.io.IOException;\n \n public class FbEntityIndexer {\n \n-  private final IndexWriter indexer;\n-  private String nameFile;\n-\n-  public FbEntityIndexer(String namefile, String outputDir, String indexingStrategy) throws IOException {\n-\n-    if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n-      throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n-\n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n-    config.setOpenMode(OpenMode.CREATE);\n-    config.setRAMBufferSizeMB(256.0);\n-    indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n-\n-    this.nameFile = namefile;\n-  }\n-\n-  /**\n-   * Index the datadump file\n-   *\n-   * @throws IOException\n-   */\n-  public void index() throws IOException {\n-\n-    LogInfoToggle.begin_track(\"Indexing\");\n-    BufferedReader reader = IOUtils.getBufferedFileReader(nameFile);\n-    String line;\n-    int indexed = 0;\n-    while ((line = reader.readLine()) != null) {\n-\n-      String[] tokens = line.split(\"\\t\");\n-\n-      String mid = tokens[0];\n-      String id = tokens[1];\n-      if (id.startsWith(\"fb:user.\") || id.startsWith(\"fb:base.\"))\n-        continue;\n-      String popularity = tokens[2];\n-      String text = tokens[3].toLowerCase();\n-\n-      // add to index\n-      Document doc = new Document();\n-      doc.add(new StringField(FbIndexField.MID.fieldName(), mid, Field.Store.YES));\n-      doc.add(new StringField(FbIndexField.ID.fieldName(), id, Field.Store.YES));\n-      doc.add(new StoredField(FbIndexField.POPULARITY.fieldName(), popularity));\n-      doc.add(new TextField(FbIndexField.TEXT.fieldName(), text, Field.Store.YES));\n-      if (tokens.length > 4) {\n-        doc.add(new StoredField(FbIndexField.TYPES.fieldName(), tokens[4]));\n-      }\n-      indexer.addDocument(doc);\n-      indexed++;\n-\n-      if (indexed % 1000000 == 0) {\n-        LogInfoToggle.log(\"Number of lines: \" + indexed);\n-      }\n+    private final IndexWriter indexer;\n+    private String nameFile;\n+\n+    public FbEntityIndexer(String namefile, String outputDir, String indexingStrategy) throws IOException {\n+\n+        if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\")) {\n+            throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n+        }\n+\n+        IndexWriterConfig config = new IndexWriterConfig(Version.LUCENE_44,\n+            indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+        config.setOpenMode(OpenMode.CREATE);\n+        config.setRAMBufferSizeMB(256.0);\n+        indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n+\n+        this.nameFile = namefile;\n+    }\n+\n+    /**\n+     * Index the datadump file\n+     *\n+     * @throws IOException\n+     */\n+    public void index() throws IOException {\n+\n+        LogInfoToggle.begin_track(\"Indexing\");\n+        BufferedReader reader = IOUtils.getBufferedFileReader(nameFile);\n+        String line;\n+        int indexed = 0;\n+        while ((line = reader.readLine()) != null) {\n+\n+            String[] tokens = line.split(\"\\t\");\n+\n+            String mid = tokens[0];\n+            String id = tokens[1];\n+            if (id.startsWith(\"fb:user.\") || id.startsWith(\"fb:base.\")) {\n+                continue;\n+            }\n+            String popularity = tokens[2];\n+            String text = tokens[3].toLowerCase();\n+\n+            // add to index\n+            Document doc = new Document();\n+            doc.add(new StringField(FbIndexField.MID.fieldName(), mid, Field.Store.YES));\n+            doc.add(new StringField(FbIndexField.ID.fieldName(), id, Field.Store.YES));\n+            doc.add(new StoredField(FbIndexField.POPULARITY.fieldName(), popularity));\n+            doc.add(new TextField(FbIndexField.TEXT.fieldName(), text, Field.Store.YES));\n+            if (tokens.length > 4) {\n+                doc.add(new StoredField(FbIndexField.TYPES.fieldName(), tokens[4]));\n+            }\n+            indexer.addDocument(doc);\n+            indexed++;\n+\n+            if (indexed % 1000000 == 0) {\n+                LogInfoToggle.log(\"Number of lines: \" + indexed);\n+            }\n+        }\n+        reader.close();\n+        LogInfoToggle.log(\"Indexed lines: \" + indexed);\n+\n+        indexer.close();\n+        LogInfoToggle.log(\"Done\");\n+        LogInfoToggle.end_track(\"Indexing\");\n+    }\n+\n+    public static void main(String[] args) throws IOException {\n+        FbEntityIndexer fbni = new FbEntityIndexer(args[0], args[1], args[2]);\n+        fbni.index();\n     }\n-    reader.close();\n-    LogInfoToggle.log(\"Indexed lines: \" + indexed);\n-\n-    indexer.close();\n-    LogInfoToggle.log(\"Done\");\n-    LogInfoToggle.end_track(\"Indexing\");\n-  }\n-\n-  public static void main(String[] args) throws IOException {\n-    FbEntityIndexer fbni = new FbEntityIndexer(args[0], args[1], args[2]);\n-    fbni.index();\n-  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/naturalize/23/FbEntityIndexer.java\nindex 3c76aa591a3..0572d7809c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/naturalize/23/FbEntityIndexer.java\n@@ -25,7 +25,7 @@ public class FbEntityIndexer {\n     if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n       throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n \n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44, indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n     config.setOpenMode(OpenMode.CREATE);\n     config.setRAMBufferSizeMB(256.0);\n     indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n@@ -83,4 +83,4 @@ public class FbEntityIndexer {\n     FbEntityIndexer fbni = new FbEntityIndexer(args[0], args[1], args[2]);\n     fbni.index();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/codebuff/23/FbEntityIndexer.java\nindex 3c76aa591a3..d57d605d89f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/codebuff/23/FbEntityIndexer.java\n@@ -10,26 +10,26 @@ import org.apache.lucene.index.IndexWriterConfig;\n import org.apache.lucene.index.IndexWriterConfig.OpenMode;\n import org.apache.lucene.store.SimpleFSDirectory;\n import org.apache.lucene.util.Version;\n-\n import java.io.BufferedReader;\n import java.io.File;\n import java.io.IOException;\n \n-public class FbEntityIndexer {\n \n+public class FbEntityIndexer {\n   private final IndexWriter indexer;\n   private String nameFile;\n \n   public FbEntityIndexer(String namefile, String outputDir, String indexingStrategy) throws IOException {\n-\n     if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n       throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n \n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+    IndexWriterConfig config = new IndexWriterConfig(\n+      Version.LUCENE_44,\n+      indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() :\n+                                           new StandardAnalyzer(Version.LUCENE_44));\n     config.setOpenMode(OpenMode.CREATE);\n     config.setRAMBufferSizeMB(256.0);\n     indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n-\n     this.nameFile = namefile;\n   }\n \n@@ -38,20 +38,19 @@ public class FbEntityIndexer {\n    *\n    * @throws IOException\n    */\n-  public void index() throws IOException {\n \n+  public void index() throws IOException {\n     LogInfoToggle.begin_track(\"Indexing\");\n+\n     BufferedReader reader = IOUtils.getBufferedFileReader(nameFile);\n     String line;\n     int indexed = 0;\n     while ((line = reader.readLine()) != null) {\n-\n       String[] tokens = line.split(\"\\t\");\n-\n       String mid = tokens[0];\n       String id = tokens[1];\n-      if (id.startsWith(\"fb:user.\") || id.startsWith(\"fb:base.\"))\n-        continue;\n+      if (id.startsWith(\"fb:user.\") || id.startsWith(\"fb:base.\")) continue;\n+\n       String popularity = tokens[2];\n       String text = tokens[3].toLowerCase();\n \n@@ -66,14 +65,12 @@ public class FbEntityIndexer {\n       }\n       indexer.addDocument(doc);\n       indexed++;\n-\n       if (indexed % 1000000 == 0) {\n         LogInfoToggle.log(\"Number of lines: \" + indexed);\n       }\n     }\n     reader.close();\n     LogInfoToggle.log(\"Indexed lines: \" + indexed);\n-\n     indexer.close();\n     LogInfoToggle.log(\"Done\");\n     LogInfoToggle.end_track(\"Indexing\");\n@@ -83,4 +80,4 @@ public class FbEntityIndexer {\n     FbEntityIndexer fbni = new FbEntityIndexer(args[0], args[1], args[2]);\n     fbni.index();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler_random/23/FbEntityIndexer.java\nindex 3c76aa591a3..c8ae93b0eaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler_random/23/FbEntityIndexer.java\n@@ -25,7 +25,7 @@ public class FbEntityIndexer {\n     if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n       throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n \n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44, indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n     config.setOpenMode(OpenMode.CREATE);\n     config.setRAMBufferSizeMB(256.0);\n     indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler_three_grams/23/FbEntityIndexer.java\nindex 3c76aa591a3..c8ae93b0eaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/errored/1/23/FbEntityIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Roboy-roboy_dialog/styler_three_grams/23/FbEntityIndexer.java\n@@ -25,7 +25,7 @@ public class FbEntityIndexer {\n     if (!indexingStrategy.equals(\"exact\") && !indexingStrategy.equals(\"inexact\"))\n       throw new RuntimeException(\"Bad indexing strategy: \" + indexingStrategy);\n \n-    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44 , indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n+    IndexWriterConfig config =  new IndexWriterConfig(Version.LUCENE_44, indexingStrategy.equals(\"exact\") ? new KeywordAnalyzer() : new StandardAnalyzer(Version.LUCENE_44));\n     config.setOpenMode(OpenMode.CREATE);\n     config.setRAMBufferSizeMB(256.0);\n     indexer = new IndexWriter(new SimpleFSDirectory(new File(outputDir)), config);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
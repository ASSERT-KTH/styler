{
    "project_name": "neo4j-neo4j",
    "error_id": "3044",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "135",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "425",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "437",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "449",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "461",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "489",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "500",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "512",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "590",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "606",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "609",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "658",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3044/GenericKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3044/GenericKey.java\nindex 2a8253a7d05..0d809ab06da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3044/GenericKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3044/GenericKey.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.gis.spatial.index.curves.SpaceFillingCurve;\n@@ -42,7 +43,7 @@ import static org.neo4j.kernel.impl.index.schema.Types.LOWEST_BY_VALUE_GROUP;\n /**\n  * A key instance which can handle all types of single values, i.e. not composite keys, but all value types.\n  * See {@link CompositeGenericKey} for implementation which supports composite keys.\n- *\n+ * <p>\n  * Regarding why the \"internal\" versions of some methods which are overridden by the CompositeGenericKey sub-class. Example:\n  * - Consider a method a() which is used by some part of the implementation of the generic index provider.\n  * - Sometimes the instance the method is called on will be a CompositeGenericKey.\n@@ -61,31 +62,31 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     // TODO copy-pasted from individual keys\n     // TODO also put this in Type enum\n     public static final int SIZE_GEOMETRY_HEADER = 3;              /* 2b tableId and 22b code */\n-    public static final int SIZE_GEOMETRY =        Long.BYTES;     /* rawValueBits */\n-    static final int SIZE_GEOMETRY_COORDINATE =    Long.BYTES;     /* one coordinate */\n+    public static final int SIZE_GEOMETRY = Long.BYTES;     /* rawValueBits */\n+    static final int SIZE_GEOMETRY_COORDINATE = Long.BYTES;     /* one coordinate */\n     public static final int SIZE_ZONED_DATE_TIME = Long.BYTES +    /* epochSecond */\n-                                                   Integer.BYTES + /* nanoOfSecond */\n-                                                   Integer.BYTES;  /* timeZone */\n+      Integer.BYTES + /* nanoOfSecond */\n+      Integer.BYTES;  /* timeZone */\n     public static final int SIZE_LOCAL_DATE_TIME = Long.BYTES +    /* epochSecond */\n-                                                   Integer.BYTES;  /* nanoOfSecond */\n-    public static final int SIZE_DATE =            Long.BYTES;     /* epochDay */\n-    public static final int SIZE_ZONED_TIME =      Long.BYTES +    /* nanosOfDayUTC */\n-                                                   Integer.BYTES;  /* zoneOffsetSeconds */\n-    public static final int SIZE_LOCAL_TIME =      Long.BYTES;     /* nanoOfDay */\n-    public static final int SIZE_DURATION =        Long.BYTES +    /* totalAvgSeconds */\n-                                                   Integer.BYTES + /* nanosOfSecond */\n-                                                   Long.BYTES +    /* months */\n-                                                   Long.BYTES;     /* days */\n-    public static final int SIZE_STRING_LENGTH =   Short.BYTES;    /* length of string byte array */\n-    public static final int SIZE_BOOLEAN =         Byte.BYTES;     /* byte for this boolean value */\n-    public static final int SIZE_NUMBER_TYPE =     Byte.BYTES;     /* type of value */\n-    public static final int SIZE_NUMBER_BYTE =     Byte.BYTES;     /* raw value bits */\n-    public static final int SIZE_NUMBER_SHORT =    Short.BYTES;    /* raw value bits */\n-    public static final int SIZE_NUMBER_INT =      Integer.BYTES;  /* raw value bits */\n-    public static final int SIZE_NUMBER_LONG =     Long.BYTES;     /* raw value bits */\n-    public static final int SIZE_NUMBER_FLOAT =    Integer.BYTES;  /* raw value bits */\n-    public static final int SIZE_NUMBER_DOUBLE =   Long.BYTES;     /* raw value bits */\n-    public static final int SIZE_ARRAY_LENGTH =    Short.BYTES;\n+      Integer.BYTES;  /* nanoOfSecond */\n+    public static final int SIZE_DATE = Long.BYTES;     /* epochDay */\n+    public static final int SIZE_ZONED_TIME = Long.BYTES +    /* nanosOfDayUTC */\n+      Integer.BYTES;  /* zoneOffsetSeconds */\n+    public static final int SIZE_LOCAL_TIME = Long.BYTES;     /* nanoOfDay */\n+    public static final int SIZE_DURATION = Long.BYTES +    /* totalAvgSeconds */\n+      Integer.BYTES + /* nanosOfSecond */\n+      Long.BYTES +    /* months */\n+      Long.BYTES;     /* days */\n+    public static final int SIZE_STRING_LENGTH = Short.BYTES;    /* length of string byte array */\n+    public static final int SIZE_BOOLEAN = Byte.BYTES;     /* byte for this boolean value */\n+    public static final int SIZE_NUMBER_TYPE = Byte.BYTES;     /* type of value */\n+    public static final int SIZE_NUMBER_BYTE = Byte.BYTES;     /* raw value bits */\n+    public static final int SIZE_NUMBER_SHORT = Short.BYTES;    /* raw value bits */\n+    public static final int SIZE_NUMBER_INT = Integer.BYTES;  /* raw value bits */\n+    public static final int SIZE_NUMBER_LONG = Long.BYTES;     /* raw value bits */\n+    public static final int SIZE_NUMBER_FLOAT = Integer.BYTES;  /* raw value bits */\n+    public static final int SIZE_NUMBER_DOUBLE = Long.BYTES;     /* raw value bits */\n+    public static final int SIZE_ARRAY_LENGTH = Short.BYTES;\n     static final int BIGGEST_REASONABLE_ARRAY_LENGTH = PAGE_SIZE / SIZE_NUMBER_BYTE;\n \n     static final long TRUE = 1;\n@@ -131,7 +132,7 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n      */\n     SpaceFillingCurve spaceFillingCurve;\n \n-    GenericKey( IndexSpecificSpaceFillingCurveSettings settings )\n+    GenericKey(IndexSpecificSpaceFillingCurveSettings settings)\n     {\n         this.settings = settings;\n     }\n@@ -139,7 +140,7 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     /* <initializers> */\n     void clear()\n     {\n-        if ( type == Types.TEXT && booleanOf( long1 ) )\n+        if (type == Types.TEXT && booleanOf(long1))\n         {\n             // Clear byteArray if it has been dereferenced\n             byteArray = null;\n@@ -159,67 +160,67 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n \n     void initializeToDummyValue()\n     {\n-        setEntityId( Long.MIN_VALUE );\n+        setEntityId(Long.MIN_VALUE);\n         initializeToDummyValueInternal();\n     }\n \n     void initializeToDummyValueInternal()\n     {\n         clear();\n-        writeInteger( 0 );\n+        writeInteger(0);\n         inclusion = NEUTRAL;\n     }\n \n-    void initValueAsLowest( ValueGroup valueGroup )\n+    void initValueAsLowest(ValueGroup valueGroup)\n     {\n         clear();\n         type = valueGroup == ValueGroup.UNKNOWN ? LOWEST_BY_VALUE_GROUP : Types.BY_GROUP[valueGroup.ordinal()];\n-        type.initializeAsLowest( this );\n+        type.initializeAsLowest(this);\n     }\n \n-    void initValueAsHighest( ValueGroup valueGroup )\n+    void initValueAsHighest(ValueGroup valueGroup)\n     {\n         clear();\n         type = valueGroup == ValueGroup.UNKNOWN ? HIGHEST_BY_VALUE_GROUP : Types.BY_GROUP[valueGroup.ordinal()];\n-        type.initializeAsHighest( this );\n+        type.initializeAsHighest(this);\n     }\n \n-    void initAsPrefixLow( TextValue prefix )\n+    void initAsPrefixLow(TextValue prefix)\n     {\n-        prefix.writeTo( this );\n+        prefix.writeTo(this);\n         long2 = FALSE;\n         inclusion = LOW;\n         // Don't set ignoreLength = true here since the \"low\" a.k.a. left side of the range should care about length.\n         // This will make the prefix lower than those that matches the prefix (their length is >= that of the prefix)\n     }\n \n-    void initAsPrefixHigh( TextValue prefix )\n+    void initAsPrefixHigh(TextValue prefix)\n     {\n-        prefix.writeTo( this );\n+        prefix.writeTo(this);\n         long2 = TRUE; // ignoreLength\n         inclusion = HIGH;\n     }\n \n     /* </initializers> */\n-    void copyFrom( GenericKey key )\n+    void copyFrom(GenericKey key)\n     {\n-        setEntityId( key.getEntityId() );\n-        setCompareId( key.getCompareId() );\n-        copyFromInternal( key );\n+        setEntityId(key.getEntityId());\n+        setCompareId(key.getCompareId());\n+        copyFromInternal(key);\n     }\n \n-    void copyFromInternal( GenericKey key )\n+    void copyFromInternal(GenericKey key)\n     {\n-        copyMetaFrom( key );\n-        type.copyValue( this, key );\n+        copyMetaFrom(key);\n+        type.copyValue(this, key);\n     }\n \n-    void copyMetaFrom( GenericKey key )\n+    void copyMetaFrom(GenericKey key)\n     {\n         this.type = key.type;\n         this.inclusion = key.inclusion;\n         this.isArray = key.isArray;\n-        if ( key.isArray )\n+        if (key.isArray)\n         {\n             this.arrayLength = key.arrayLength;\n             this.currentArrayOffset = key.currentArrayOffset;\n@@ -227,21 +228,21 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n         }\n     }\n \n-    void writeValue( Value value, NativeIndexKey.Inclusion inclusion )\n+    void writeValue(Value value, NativeIndexKey.Inclusion inclusion)\n     {\n         isArray = false;\n-        value.writeTo( this );\n+        value.writeTo(this);\n         this.inclusion = inclusion;\n     }\n \n     @Override\n-    void writeValue( int stateSlot, Value value, Inclusion inclusion )\n+    void writeValue(int stateSlot, Value value, Inclusion inclusion)\n     {\n-        writeValue( value, inclusion );\n+        writeValue(value, inclusion);\n     }\n \n     @Override\n-    void assertValidValue( int stateSlot, Value value )\n+    void assertValidValue(int stateSlot, Value value)\n     {\n         // No need, we can handle all values\n     }\n@@ -253,18 +254,18 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     }\n \n     @Override\n-    void initValueAsLowest( int stateSlot, ValueGroup valueGroup )\n+    void initValueAsLowest(int stateSlot, ValueGroup valueGroup)\n     {\n-        initValueAsLowest( valueGroup );\n+        initValueAsLowest(valueGroup);\n     }\n \n     @Override\n-    void initValueAsHighest( int stateSlot, ValueGroup valueGroup )\n+    void initValueAsHighest(int stateSlot, ValueGroup valueGroup)\n     {\n-        initValueAsHighest( valueGroup );\n+        initValueAsHighest(valueGroup);\n     }\n \n-    GenericKey stateSlot( int slot )\n+    GenericKey stateSlot(int slot)\n     {\n         assert slot == 0;\n         return this;\n@@ -277,59 +278,58 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     }\n \n     @Override\n-    int compareValueTo( GenericKey other )\n+    int compareValueTo(GenericKey other)\n     {\n-        return compareValueToInternal( other );\n+        return compareValueToInternal(other);\n     }\n \n-    int compareValueToInternal( GenericKey other )\n+    int compareValueToInternal(GenericKey other)\n     {\n-        if ( type != other.type )\n+        if (type != other.type)\n         {\n             // These null checks guard for inconsistent reading where we're expecting a retry to occur\n             // Unfortunately it's the case that SeekCursor calls these methods inside a shouldRetry.\n             // Fortunately we only need to do these checks if the types aren't equal, and one of the two\n             // are guaranteed to be a \"real\" state, i.e. not inside a shouldRetry.\n-            if ( type == null )\n+            if (type == null)\n             {\n                 return -1;\n             }\n-            if ( other.type == null )\n+            if (other.type == null)\n             {\n                 return 1;\n             }\n-            return Type.COMPARATOR.compare( type, other.type );\n+            return Type.COMPARATOR.compare(type, other.type);\n         }\n \n-        int valueComparison = type.compareValue( this, other );\n-        if ( valueComparison != 0 )\n+        int valueComparison = type.compareValue(this, other);\n+        if (valueComparison != 0)\n         {\n             return valueComparison;\n         }\n \n-        return inclusion.compareTo( other.inclusion );\n+        return inclusion.compareTo(other.inclusion);\n     }\n \n-    void minimalSplitter( GenericKey left, GenericKey right, GenericKey into )\n+    void minimalSplitter(GenericKey left, GenericKey right, GenericKey into)\n     {\n-        into.setCompareId( right.getCompareId() );\n-        if ( left.compareValueTo( right ) != 0 )\n+        into.setCompareId(right.getCompareId());\n+        if (left.compareValueTo(right) != 0)\n         {\n-            into.setEntityId( NO_ENTITY_ID );\n-        }\n-        else\n+            into.setEntityId(NO_ENTITY_ID);\n+        } else\n         {\n             // There was no minimal splitter to be found so entity id will serve as divider\n-            into.setEntityId( right.getEntityId() );\n+            into.setEntityId(right.getEntityId());\n         }\n-        minimalSplitterInternal( left, right, into );\n+        minimalSplitterInternal(left, right, into);\n     }\n \n-    void minimalSplitterInternal( GenericKey left, GenericKey right, GenericKey into )\n+    void minimalSplitterInternal(GenericKey left, GenericKey right, GenericKey into)\n     {\n         into.clear();\n-        into.copyMetaFrom( right );\n-        right.type.minimalSplitter( left, right, into );\n+        into.copyMetaFrom(right);\n+        right.type.minimalSplitter(left, right, into);\n     }\n \n     int size()\n@@ -339,38 +339,38 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n \n     int sizeInternal()\n     {\n-        return type.valueSize( this ) + TYPE_ID_SIZE;\n+        return type.valueSize(this) + TYPE_ID_SIZE;\n     }\n \n     Value asValue()\n     {\n-        return type.asValue( this );\n+        return type.asValue(this);\n     }\n \n-    void put( PageCursor cursor )\n+    void put(PageCursor cursor)\n     {\n-        cursor.putLong( getEntityId() );\n-        putInternal( cursor );\n+        cursor.putLong(getEntityId());\n+        putInternal(cursor);\n     }\n \n-    void putInternal( PageCursor cursor )\n+    void putInternal(PageCursor cursor)\n     {\n-        cursor.putByte( type.typeId );\n-        type.putValue( cursor, this );\n+        cursor.putByte(type.typeId);\n+        type.putValue(cursor, this);\n     }\n \n-    boolean get( PageCursor cursor, int size )\n+    boolean get(PageCursor cursor, int size)\n     {\n-        if ( size < ENTITY_ID_SIZE )\n+        if (size < ENTITY_ID_SIZE)\n         {\n             initializeToDummyValue();\n-            cursor.setCursorException( format( \"Failed to read \" + getClass().getSimpleName() +\n-                    \" due to keySize < ENTITY_ID_SIZE, more precisely %d\", size ) );\n+            cursor.setCursorException(format(\"Failed to read \" + getClass().getSimpleName() +\n+              \" due to keySize < ENTITY_ID_SIZE, more precisely %d\", size));\n             return false;\n         }\n \n-        initialize( cursor.getLong() );\n-        if ( !getInternal( cursor, size ) )\n+        initialize(cursor.getLong());\n+        if (!getInternal(cursor, size))\n         {\n             initializeToDummyValue();\n             return false;\n@@ -378,30 +378,30 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n         return true;\n     }\n \n-    boolean getInternal( PageCursor cursor, int size )\n+    boolean getInternal(PageCursor cursor, int size)\n     {\n-        if ( size <= TYPE_ID_SIZE )\n+        if (size <= TYPE_ID_SIZE)\n         {\n-            setCursorException( cursor, \"slot size less than TYPE_ID_SIZE, \" + size );\n+            setCursorException(cursor, \"slot size less than TYPE_ID_SIZE, \" + size);\n             return false;\n         }\n \n         byte typeId = cursor.getByte();\n-        if ( typeId < 0 || typeId >= Types.BY_ID.length )\n+        if (typeId < 0 || typeId >= Types.BY_ID.length)\n         {\n-            setCursorException( cursor, \"non-valid typeId, \" + typeId );\n+            setCursorException(cursor, \"non-valid typeId, \" + typeId);\n             return false;\n         }\n \n         inclusion = NEUTRAL;\n-        return setType( Types.BY_ID[typeId] ).readValue( cursor, size - TYPE_ID_SIZE, this );\n+        return setType(Types.BY_ID[typeId]).readValue(cursor, size - TYPE_ID_SIZE, this);\n     }\n \n     /* <write> (write to field state from Value or cursor) */\n \n-    private <T extends Type> T setType( T type )\n+    private <T extends Type> T setType(T type)\n     {\n-        if ( this.type != null && type != this.type )\n+        if (this.type != null && type != this.type)\n         {\n             clear();\n         }\n@@ -410,254 +410,243 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     }\n \n     @Override\n-    protected void writeDate( long epochDay )\n+    protected void writeDate(long epochDay)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.DATE ).write( this, epochDay );\n-        }\n-        else\n+            setType(Types.DATE).write(this, epochDay);\n+        } else\n         {\n-            Types.DATE_ARRAY.write( this, currentArrayOffset++, epochDay );\n+            Types.DATE_ARRAY.write(this, currentArrayOffset++, epochDay);\n         }\n     }\n \n     @Override\n-    protected void writeLocalTime( long nanoOfDay )\n+    protected void writeLocalTime(long nanoOfDay)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.LOCAL_TIME ).write( this, nanoOfDay );\n-        }\n-        else\n+            setType(Types.LOCAL_TIME).write(this, nanoOfDay);\n+        } else\n         {\n-            Types.LOCAL_TIME_ARRAY.write( this, currentArrayOffset++, nanoOfDay );\n+            Types.LOCAL_TIME_ARRAY.write(this, currentArrayOffset++, nanoOfDay);\n         }\n     }\n \n     @Override\n-    protected void writeTime( long nanosOfDayUTC, int offsetSeconds )\n+    protected void writeTime(long nanosOfDayUTC, int offsetSeconds)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.ZONED_TIME ).write( this, nanosOfDayUTC, offsetSeconds );\n-        }\n-        else\n+            setType(Types.ZONED_TIME).write(this, nanosOfDayUTC, offsetSeconds);\n+        } else\n         {\n-            Types.ZONED_TIME_ARRAY.write( this, currentArrayOffset++, nanosOfDayUTC, offsetSeconds );\n+            Types.ZONED_TIME_ARRAY.write(this, currentArrayOffset++, nanosOfDayUTC, offsetSeconds);\n         }\n     }\n \n     @Override\n-    protected void writeLocalDateTime( long epochSecond, int nano )\n+    protected void writeLocalDateTime(long epochSecond, int nano)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.LOCAL_DATE_TIME ).write( this, epochSecond, nano );\n-        }\n-        else\n+            setType(Types.LOCAL_DATE_TIME).write(this, epochSecond, nano);\n+        } else\n         {\n-            Types.LOCAL_DATE_TIME_ARRAY.write( this, currentArrayOffset++, epochSecond, nano );\n+            Types.LOCAL_DATE_TIME_ARRAY.write(this, currentArrayOffset++, epochSecond, nano);\n         }\n     }\n \n     @Override\n-    protected void writeDateTime( long epochSecondUTC, int nano, int offsetSeconds )\n+    protected void writeDateTime(long epochSecondUTC, int nano, int offsetSeconds)\n     {\n-        writeDateTime( epochSecondUTC, nano, (short) -1, offsetSeconds );\n+        writeDateTime(epochSecondUTC, nano, (short) -1, offsetSeconds);\n     }\n \n     @Override\n-    protected void writeDateTime( long epochSecondUTC, int nano, String zoneId )\n+    protected void writeDateTime(long epochSecondUTC, int nano, String zoneId)\n     {\n-        writeDateTime( epochSecondUTC, nano, TimeZones.map( zoneId ) );\n+        writeDateTime(epochSecondUTC, nano, TimeZones.map(zoneId));\n     }\n \n-    protected void writeDateTime( long epochSecondUTC, int nano, short zoneId )\n+    protected void writeDateTime(long epochSecondUTC, int nano, short zoneId)\n     {\n-        writeDateTime( epochSecondUTC, nano, zoneId, 0 );\n+        writeDateTime(epochSecondUTC, nano, zoneId, 0);\n     }\n \n-    private void writeDateTime( long epochSecondUTC, int nano, short zoneId, int offsetSeconds )\n+    private void writeDateTime(long epochSecondUTC, int nano, short zoneId, int offsetSeconds)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.ZONED_DATE_TIME ).write( this, epochSecondUTC, nano, zoneId, offsetSeconds );\n-        }\n-        else\n+            setType(Types.ZONED_DATE_TIME).write(this, epochSecondUTC, nano, zoneId, offsetSeconds);\n+        } else\n         {\n-            Types.ZONED_DATE_TIME_ARRAY.write( this, currentArrayOffset++, epochSecondUTC, nano, zoneId, offsetSeconds );\n+            Types.ZONED_DATE_TIME_ARRAY.write(this, currentArrayOffset++, epochSecondUTC, nano, zoneId, offsetSeconds);\n         }\n     }\n \n     @Override\n-    public void writeBoolean( boolean value )\n+    public void writeBoolean(boolean value)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.BOOLEAN ).write( this, value );\n-        }\n-        else\n+            setType(Types.BOOLEAN).write(this, value);\n+        } else\n         {\n-            Types.BOOLEAN_ARRAY.write( this, currentArrayOffset++, value );\n+            Types.BOOLEAN_ARRAY.write(this, currentArrayOffset++, value);\n         }\n     }\n \n-    private void writeNumber( long value, byte numberType )\n+    private void writeNumber(long value, byte numberType)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.NUMBER ).write( this, value, numberType );\n-        }\n-        else\n+            setType(Types.NUMBER).write(this, value, numberType);\n+        } else\n         {\n-            Types.NUMBER_ARRAY.write( this, currentArrayOffset++, value );\n+            Types.NUMBER_ARRAY.write(this, currentArrayOffset++, value);\n         }\n     }\n \n     @Override\n-    public void writeInteger( byte value )\n+    public void writeInteger(byte value)\n     {\n-        writeNumber( value, RawBits.BYTE );\n+        writeNumber(value, RawBits.BYTE);\n     }\n \n     @Override\n-    public void writeInteger( short value )\n+    public void writeInteger(short value)\n     {\n-        writeNumber( value, RawBits.SHORT );\n+        writeNumber(value, RawBits.SHORT);\n     }\n \n     @Override\n-    public void writeInteger( int value )\n+    public void writeInteger(int value)\n     {\n-        writeNumber( value, RawBits.INT );\n+        writeNumber(value, RawBits.INT);\n     }\n \n-    static short toNonNegativeShortExact( long value )\n+    static short toNonNegativeShortExact(long value)\n     {\n-        if ( (value & ~0x7FFF) != 0 )\n+        if ((value & ~0x7FFF) != 0)\n         {\n-            throw new IllegalArgumentException( value + \" is bigger than maximum for a signed short (2B) \" + 0x7FFF );\n+            throw new IllegalArgumentException(value + \" is bigger than maximum for a signed short (2B) \" + 0x7FFF);\n         }\n         return (short) value;\n     }\n \n     @Override\n-    public void writeInteger( long value )\n+    public void writeInteger(long value)\n     {\n-        writeNumber( value, RawBits.LONG );\n+        writeNumber(value, RawBits.LONG);\n     }\n \n     @Override\n-    public void writeFloatingPoint( float value )\n+    public void writeFloatingPoint(float value)\n     {\n-        writeNumber( Float.floatToIntBits( value ), RawBits.FLOAT );\n+        writeNumber(Float.floatToIntBits(value), RawBits.FLOAT);\n     }\n \n     @Override\n-    public void writeFloatingPoint( double value )\n+    public void writeFloatingPoint(double value)\n     {\n-        writeNumber( Double.doubleToLongBits( value ), RawBits.DOUBLE );\n+        writeNumber(Double.doubleToLongBits(value), RawBits.DOUBLE);\n     }\n \n     @Override\n-    public void writeString( String value )\n+    public void writeString(String value)\n     {\n-        writeStringBytes( UTF8.encode( value ), false );\n+        writeStringBytes(UTF8.encode(value), false);\n     }\n \n     @Override\n-    public void writeString( char value )\n+    public void writeString(char value)\n     {\n-        writeStringBytes( UTF8.encode( String.valueOf( value ) ), true );\n+        writeStringBytes(UTF8.encode(String.valueOf(value)), true);\n     }\n \n     @Override\n-    public void writeUTF8( byte[] bytes, int offset, int length )\n+    public void writeUTF8(byte[] bytes, int offset, int length)\n     {\n         byte[] dest = new byte[length];\n-        System.arraycopy( bytes, offset, dest, 0, length );\n-        writeStringBytes( dest, false );\n+        System.arraycopy(bytes, offset, dest, 0, length);\n+        writeStringBytes(dest, false);\n     }\n \n-    private void writeStringBytes( byte[] bytes, boolean isCharType )\n+    private void writeStringBytes(byte[] bytes, boolean isCharType)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.TEXT ).write( this, bytes, isCharType );\n-        }\n-        else\n+            setType(Types.TEXT).write(this, bytes, isCharType);\n+        } else\n         {\n             // in the array case we've already noted the char/string type in beginArray\n-            Types.TEXT_ARRAY.write( this, currentArrayOffset++, bytes );\n+            Types.TEXT_ARRAY.write(this, currentArrayOffset++, bytes);\n         }\n         long1 = FALSE; // long1 is dereferenced true/false\n     }\n \n     @Override\n-    public void writeDuration( long months, long days, long seconds, int nanos )\n+    public void writeDuration(long months, long days, long seconds, int nanos)\n     {\n         long totalAvgSeconds = months * AVG_MONTH_SECONDS + days * AVG_DAY_SECONDS + seconds;\n-        writeDurationWithTotalAvgSeconds( months, days, totalAvgSeconds, nanos );\n+        writeDurationWithTotalAvgSeconds(months, days, totalAvgSeconds, nanos);\n     }\n \n     @Override\n-    public void writePoint( CoordinateReferenceSystem crs, double[] coordinate )\n+    public void writePoint(CoordinateReferenceSystem crs, double[] coordinate)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.GEOMETRY );\n-            updateCurve( crs.getTable().getTableId(), crs.getCode() );\n-            Types.GEOMETRY.write( this, spaceFillingCurve.derivedValueFor( coordinate ), coordinate );\n-        }\n-        else\n+            setType(Types.GEOMETRY);\n+            updateCurve(crs.getTable().getTableId(), crs.getCode());\n+            Types.GEOMETRY.write(this, spaceFillingCurve.derivedValueFor(coordinate), coordinate);\n+        } else\n         {\n-            if ( currentArrayOffset == 0 )\n+            if (currentArrayOffset == 0)\n             {\n-                updateCurve( crs.getTable().getTableId(), crs.getCode() );\n-            }\n-            else if ( this.long1 != crs.getTable().getTableId() || this.long2 != crs.getCode() )\n+                updateCurve(crs.getTable().getTableId(), crs.getCode());\n+            } else if (this.long1 != crs.getTable().getTableId() || this.long2 != crs.getCode())\n             {\n-                throw new IllegalStateException( format(\n-                        \"Tried to assign a geometry array containing different coordinate reference systems, first:%s, violating:%s at array position:%d\",\n-                        CoordinateReferenceSystem.get( (int) long1, (int) long2 ), crs, currentArrayOffset ) );\n+                throw new IllegalStateException(format(\n+                  \"Tried to assign a geometry array containing different coordinate reference systems, first:%s, violating:%s at array position:%d\",\n+                  CoordinateReferenceSystem.get((int) long1, (int) long2), crs, currentArrayOffset));\n             }\n-            Types.GEOMETRY_ARRAY.write( this, currentArrayOffset++, spaceFillingCurve.derivedValueFor( coordinate ), coordinate );\n+            Types.GEOMETRY_ARRAY.write(this, currentArrayOffset++, spaceFillingCurve.derivedValueFor(coordinate), coordinate);\n         }\n     }\n \n-    void writePointDerived( CoordinateReferenceSystem crs, long derivedValue, NativeIndexKey.Inclusion inclusion )\n+    void writePointDerived(CoordinateReferenceSystem crs, long derivedValue, NativeIndexKey.Inclusion inclusion)\n     {\n-        if ( isArray )\n+        if (isArray)\n         {\n-            throw new IllegalStateException( \"This method is intended to be called when querying, where one or more sub-ranges are derived \" +\n-                    \"from a queried range and each sub-range written to separate keys. \" +\n-                    \"As such it's unexpected that this key state thinks that it's holds state for an array\" );\n+            throw new IllegalStateException(\"This method is intended to be called when querying, where one or more sub-ranges are derived \" +\n+              \"from a queried range and each sub-range written to separate keys. \" +\n+              \"As such it's unexpected that this key state thinks that it's holds state for an array\");\n         }\n-        updateCurve( crs.getTable().getTableId(), crs.getCode() );\n-        setType( Types.GEOMETRY ).write( this, derivedValue, NO_COORDINATES );\n+        updateCurve(crs.getTable().getTableId(), crs.getCode());\n+        setType(Types.GEOMETRY).write(this, derivedValue, NO_COORDINATES);\n         this.inclusion = inclusion;\n     }\n \n-    private void updateCurve( int tableId, int code )\n+    private void updateCurve(int tableId, int code)\n     {\n-        if ( this.long1 != tableId || this.long2 != code )\n+        if (this.long1 != tableId || this.long2 != code)\n         {\n             long1 = tableId;\n             long2 = code;\n-            spaceFillingCurve = settings.forCrs( tableId, code );\n+            spaceFillingCurve = settings.forCrs(tableId, code);\n         }\n     }\n \n-    void writeDurationWithTotalAvgSeconds( long months, long days, long totalAvgSeconds, int nanos )\n+    void writeDurationWithTotalAvgSeconds(long months, long days, long totalAvgSeconds, int nanos)\n     {\n-        if ( !isArray )\n+        if (!isArray)\n         {\n-            setType( Types.DURATION ).write( this, months, days, totalAvgSeconds, nanos );\n-        }\n-        else\n+            setType(Types.DURATION).write(this, months, days, totalAvgSeconds, nanos);\n+        } else\n         {\n-            Types.DURATION_ARRAY.write( this, currentArrayOffset++, months, days, totalAvgSeconds, nanos );\n+            Types.DURATION_ARRAY.write(this, currentArrayOffset++, months, days, totalAvgSeconds, nanos);\n         }\n     }\n     // Write byte array is a special case,\n@@ -666,21 +655,21 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n     // writeByteArray is called so that the bytes can be written in batches.\n     // We don't care about that though so just delegate.\n     @Override\n-    public void writeByteArray( byte[] value )\n+    public void writeByteArray(byte[] value)\n     {\n-        PrimitiveArrayWriting.writeTo( this, value );\n+        PrimitiveArrayWriting.writeTo(this, value);\n     }\n \n     @Override\n-    public void beginArray( int size, ArrayType arrayType )\n+    public void beginArray(int size, ArrayType arrayType)\n     {\n         AbstractArrayType<?> arrayValueType = Types.BY_ARRAY_TYPE[arrayType.ordinal()];\n-        setType( arrayValueType );\n-        initializeArrayMeta( size );\n-        arrayValueType.initializeArray( this, size, arrayType );\n+        setType(arrayValueType);\n+        initializeArrayMeta(size);\n+        arrayValueType.initializeArray(this, size, arrayType);\n     }\n \n-    void initializeArrayMeta( int size )\n+    void initializeArrayMeta(int size)\n     {\n         isArray = true;\n         arrayLength = size;\n@@ -703,7 +692,7 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n \n     String toStringInternal()\n     {\n-        return type.toString( this );\n+        return type.toString(this);\n     }\n \n     String toDetailedString()\n@@ -713,11 +702,11 @@ public class GenericKey extends NativeIndexKey<GenericKey>\n \n     String toDetailedStringInternal()\n     {\n-        return type.toDetailedString( this );\n+        return type.toDetailedString(this);\n     }\n \n-    static void setCursorException( PageCursor cursor, String reason )\n+    static void setCursorException(PageCursor cursor, String reason)\n     {\n-        cursor.setCursorException( format( \"Unable to read generic key slot due to %s\", reason ) );\n+        cursor.setCursorException(format(\"Unable to read generic key slot due to %s\", reason));\n     }\n }\n",
            "diff_size": 219
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
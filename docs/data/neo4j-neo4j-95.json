{
    "project_name": "neo4j-neo4j",
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/95/CompositeTokenScanValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/95/CompositeTokenScanValueIterator.java\nindex 42b7785906f..8cf27c81501 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/95/CompositeTokenScanValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/95/CompositeTokenScanValueIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -45,18 +46,18 @@ class CompositeTokenScanValueIterator extends AbstractPrimitiveLongBaseIterator\n     /**\n      * Constructs a {@link CompositeTokenScanValueIterator}.\n      *\n-     * @param iterators {@link LongIterator iterators} to merge.\n+     * @param iterators  {@link LongIterator iterators} to merge.\n      * @param trueForAll if {@code true} using {@code AND} merging, otherwise {@code OR} merging.\n      */\n-    CompositeTokenScanValueIterator( List<PrimitiveLongResourceIterator> iterators, boolean trueForAll )\n+    CompositeTokenScanValueIterator(List<PrimitiveLongResourceIterator> iterators, boolean trueForAll)\n     {\n         this.toClose = iterators;\n         this.atLeastNumberOfTokens = trueForAll ? iterators.size() : 1;\n-        for ( LongIterator iterator : iterators )\n+        for (LongIterator iterator : iterators)\n         {\n-            if ( iterator.hasNext() )\n+            if (iterator.hasNext())\n             {\n-                sortedIterators.add( new IdAndSource( iterator.next(), iterator ) );\n+                sortedIterators.add(new IdAndSource(iterator.next(), iterator));\n             }\n         }\n     }\n@@ -66,39 +67,38 @@ class CompositeTokenScanValueIterator extends AbstractPrimitiveLongBaseIterator\n     {\n         int numberOfTokens = 0;\n         long next = last;\n-        while ( next == last || numberOfTokens < atLeastNumberOfTokens )\n+        while (next == last || numberOfTokens < atLeastNumberOfTokens)\n         {\n             IdAndSource idAndSource = sortedIterators.poll();\n-            if ( idAndSource == null )\n+            if (idAndSource == null)\n             {\n                 return false;\n             }\n \n-            if ( idAndSource.latestReturned == next )\n+            if (idAndSource.latestReturned == next)\n             {\n                 numberOfTokens++;\n-            }\n-            else\n+            } else\n             {\n                 next = idAndSource.latestReturned;\n                 numberOfTokens = 1;\n             }\n \n-            if ( idAndSource.source.hasNext() )\n+            if (idAndSource.source.hasNext())\n             {\n                 idAndSource.latestReturned = idAndSource.source.next();\n-                sortedIterators.offer( idAndSource );\n+                sortedIterators.offer(idAndSource);\n             }\n         }\n         last = next;\n-        next( last );\n+        next(last);\n         return true;\n     }\n \n     @Override\n     public void close()\n     {\n-        ResourceUtils.closeAll( toClose );\n+        ResourceUtils.closeAll(toClose);\n         sortedIterators.clear();\n         toClose.clear();\n     }\n@@ -108,42 +108,42 @@ class CompositeTokenScanValueIterator extends AbstractPrimitiveLongBaseIterator\n         private long latestReturned;\n         private final LongIterator source;\n \n-        private IdAndSource( long latestReturned, LongIterator source )\n+        private IdAndSource(long latestReturned, LongIterator source)\n         {\n             this.latestReturned = latestReturned;\n             this.source = source;\n         }\n \n         @Override\n-        public int compareTo( IdAndSource o )\n+        public int compareTo(IdAndSource o)\n         {\n-            int keyComparison = Long.compare( latestReturned, o.latestReturned );\n-            if ( keyComparison == 0 )\n+            int keyComparison = Long.compare(latestReturned, o.latestReturned);\n+            if (keyComparison == 0)\n             {\n-                return Integer.compare( source.hashCode(), o.source.hashCode() );\n+                return Integer.compare(source.hashCode(), o.source.hashCode());\n             }\n             return keyComparison;\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             IdAndSource that = (IdAndSource) o;\n-            return compareTo( that ) == 0;\n+            return compareTo(that) == 0;\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( latestReturned, source );\n+            return Objects.hash(latestReturned, source);\n         }\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/95/CompositeTokenScanValueIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/95/CompositeTokenScanValueIterator.java\nindex 42b7785906f..1b33967255c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/95/CompositeTokenScanValueIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/95/CompositeTokenScanValueIterator.java\n@@ -146,4 +146,4 @@ class CompositeTokenScanValueIterator extends AbstractPrimitiveLongBaseIterator\n             return Objects.hash( latestReturned, source );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
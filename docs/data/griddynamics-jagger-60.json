{
    "project_name": "griddynamics-jagger",
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "66",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    protected InvocationListener<Q, R, E> getInvocationListener(){\n        return invocationListener;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/60/Scenario.java\nindex 279078899fc..f36cbad8567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/60/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/60/Scenario.java\nindex 279078899fc..f36cbad8567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/60/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/60/Scenario.java\nindex 279078899fc..1aaf4907927 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/60/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n@@ -60,4 +60,4 @@ public abstract class Scenario<Q, R, E> {\n \n     public abstract void doTransaction();\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/60/Scenario.java\nindex 279078899fc..f36cbad8567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/60/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/60/Scenario.java\nindex 279078899fc..f36cbad8567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/60/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/60/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "184",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n\n  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n\n  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/184/LoginRequest.java\nindex 191153ea8d7..2bcbc41b320 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/184/LoginRequest.java\n@@ -26,8 +26,9 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer<LoginRequest> rootDeserializer =\n+    protoMapperFactory.createFromName(\"LoginRequest.proto\")\n+       .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/184/LoginRequest.java\nindex 191153ea8d7..fd8594307e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/184/LoginRequest.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.transport.highway.message;\n \n import org.apache.servicecomb.foundation.protobuf.ProtoMapperFactory;\n@@ -26,8 +27,9 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer<LoginRequest> rootDeserializer =\n+      protoMapperFactory.createFromName(\"LoginRequest.proto\")\n+          .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/184/LoginRequest.java\nindex 191153ea8d7..38ac8905bbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/184/LoginRequest.java\n@@ -61,4 +61,4 @@ public class LoginRequest {\n     this.zipName = zipName;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/184/LoginRequest.java\nindex 191153ea8d7..2bcbc41b320 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/184/LoginRequest.java\n@@ -26,8 +26,9 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer<LoginRequest> rootDeserializer =\n+    protoMapperFactory.createFromName(\"LoginRequest.proto\")\n+       .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "36",
                    "severity": "warning",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "50",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "66",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "31",
                    "column": "19",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/184/LoginRequest.java\nindex 191153ea8d7..e5fedd0f23b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/184/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/184/LoginRequest.java\n@@ -26,8 +26,10 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer < LoginRequest>rootDeserializer=\n+  protoMapperFactory\n+  .createFromName( \"LoginRequest.proto\").\n+  createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
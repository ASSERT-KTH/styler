{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1370",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1370/VirtualValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1370/VirtualValue.java\nindex 83757a331e4..c8b5ec66854 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1370/VirtualValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1370/VirtualValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values;\n \n import java.util.Comparator;\n@@ -31,42 +32,42 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n  */\n public abstract class VirtualValue extends AnyValue\n {\n-    @Override\n-    public final boolean eq( Object other )\n+  @Override\n+  public final boolean eq(Object other)\n+  {\n+    if (other == null)\n     {\n-        if ( other == null )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        if ( other instanceof SequenceValue && this.isSequenceValue() )\n-        {\n-            return ((SequenceValue) this).equals( (SequenceValue) other );\n-        }\n-        return other instanceof VirtualValue && equals( (VirtualValue) other );\n+    if (other instanceof SequenceValue && this.isSequenceValue())\n+    {\n+      return ((SequenceValue) this).equals((SequenceValue) other);\n     }\n+    return other instanceof VirtualValue && equals((VirtualValue) other);\n+  }\n \n-    public abstract boolean equals( VirtualValue other );\n+  public abstract boolean equals(VirtualValue other);\n \n-    @Override\n-    public Boolean ternaryEquals( AnyValue other )\n+  @Override\n+  public Boolean ternaryEquals(AnyValue other)\n+  {\n+    if (other == null || other == NO_VALUE)\n+    {\n+      return null;\n+    }\n+    if (other instanceof SequenceValue && this.isSequenceValue())\n+    {\n+      return ((SequenceValue) this).ternaryEquality((SequenceValue) other);\n+    }\n+    if (other instanceof VirtualValue && ((VirtualValue) other).valueGroup() == valueGroup())\n     {\n-        if ( other == null || other == NO_VALUE )\n-        {\n-            return null;\n-        }\n-        if ( other instanceof SequenceValue && this.isSequenceValue() )\n-        {\n-            return ((SequenceValue) this).ternaryEquality( (SequenceValue) other );\n-        }\n-        if ( other instanceof VirtualValue && ((VirtualValue) other).valueGroup() == valueGroup() )\n-        {\n-            return equals( (VirtualValue) other );\n-        }\n-        return Boolean.FALSE;\n+      return equals((VirtualValue) other);\n     }\n+    return Boolean.FALSE;\n+  }\n \n-    public abstract VirtualValueGroup valueGroup();\n+  public abstract VirtualValueGroup valueGroup();\n \n-    public abstract int compareTo( VirtualValue other, Comparator<AnyValue> comparator );\n+  public abstract int compareTo(VirtualValue other, Comparator<AnyValue> comparator);\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1370/VirtualValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1370/VirtualValue.java\nindex 83757a331e4..44b0887353a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1370/VirtualValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1370/VirtualValue.java\n@@ -43,7 +43,8 @@ public abstract class VirtualValue extends AnyValue\n         {\n             return ((SequenceValue) this).equals( (SequenceValue) other );\n         }\n-        return other instanceof VirtualValue && equals( (VirtualValue) other );\n+\n+return other instanceof VirtualValue && equals( (VirtualValue) other );\n     }\n \n     public abstract boolean equals( VirtualValue other );\n@@ -55,18 +56,21 @@ public abstract class VirtualValue extends AnyValue\n         {\n             return null;\n         }\n-        if ( other instanceof SequenceValue && this.isSequenceValue() )\n+\n+if ( other instanceof SequenceValue && this.isSequenceValue() )\n         {\n             return ((SequenceValue) this).ternaryEquality( (SequenceValue) other );\n         }\n-        if ( other instanceof VirtualValue && ((VirtualValue) other).valueGroup() == valueGroup() )\n+\n+if ( other instanceof VirtualValue && ((VirtualValue) other).valueGroup() == valueGroup() )\n         {\n             return equals( (VirtualValue) other );\n         }\n-        return Boolean.FALSE;\n+\n+return Boolean.FALSE;\n     }\n \n     public abstract VirtualValueGroup valueGroup();\n \n     public abstract int compareTo( VirtualValue other, Comparator<AnyValue> comparator );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
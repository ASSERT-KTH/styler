{
    "project_name": "DaGeRe-peass",
    "error_id": "43",
    "information": {
        "errors": [
            {
                "line": "47",
                "column": "71",
                "severity": "error",
                "message": "'{' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "         FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n         FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n      } else {\n         FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n      }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/43/MethodChangeReader.java\nindex 8fdb311aa35..d01dd20245e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/43/MethodChangeReader.java\n@@ -44,7 +44,7 @@ public class MethodChangeReader {\n \n          FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n          FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n+         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] {old, main }), \"\");\n       } else {\n          FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n       }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/43/MethodChangeReader.java\nindex 8fdb311aa35..6f81428e39e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/43/MethodChangeReader.java\n@@ -16,42 +16,42 @@ import difflib.Patch;\n \n public class MethodChangeReader {\n \n-   private final File outFolder;\n-   private final ChangedEntity clazz;\n-\n-   private final String version;\n-\n-   private final String method, methodOld;\n-\n-   public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version)\n-         throws FileNotFoundException {\n-      this.outFolder = outFolder;\n-      this.clazz = clazz;\n-      this.version = version;\n-\n-      method = FileComparisonUtil.getMethod(sourceFolder, clazz, clazz.getMethod());\n-      methodOld = FileComparisonUtil.getMethod(oldSourceFolder, clazz, clazz.getMethod());\n-   }\n-\n-   public void readMethodChangeData() throws IOException {\n-      final File folder = new File(outFolder, version);\n-      folder.mkdirs();\n-      final File goalFile = new File(folder, clazz.getSimpleFullName() + \"_diff.txt\");\n-      if (!method.equals(methodOld)) {\n-\n-         final File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n-         final File old = new File(folder, clazz.getSimpleFullName() + \"_old.txt\");\n-\n-         FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n-         FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n-      } else {\n-         FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n-      }\n-   }\n-\n-   public Patch<String> getKeywordChanges(final ChangedEntity clazz) throws FileNotFoundException {\n-      final Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n-      return patch;\n-   }\n+  private final File outFolder;\n+  private final ChangedEntity clazz;\n+\n+  private final String version;\n+\n+  private final String method, methodOld;\n+\n+  public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version)\n+      throws FileNotFoundException {\n+    this.outFolder = outFolder;\n+    this.clazz = clazz;\n+    this.version = version;\n+\n+    method = FileComparisonUtil.getMethod(sourceFolder, clazz, clazz.getMethod());\n+    methodOld = FileComparisonUtil.getMethod(oldSourceFolder, clazz, clazz.getMethod());\n+  }\n+\n+  public void readMethodChangeData() throws IOException {\n+    final File folder = new File(outFolder, version);\n+    folder.mkdirs();\n+    final File goalFile = new File(folder, clazz.getSimpleFullName() + \"_diff.txt\");\n+    if (!method.equals(methodOld)) {\n+\n+      final File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n+      final File old = new File(folder, clazz.getSimpleFullName() + \"_old.txt\");\n+\n+      FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n+      FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n+      DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] {old, main}), \"\");\n+    } else {\n+      FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n+    }\n+  }\n+\n+  public Patch<String> getKeywordChanges(final ChangedEntity clazz) throws FileNotFoundException {\n+    final Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n+    return patch;\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/43/MethodChangeReader.java\nindex 8fdb311aa35..c56c45c2333 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/43/MethodChangeReader.java\n@@ -15,43 +15,41 @@ import difflib.DiffUtils;\n import difflib.Patch;\n \n public class MethodChangeReader {\n-\n-   private final File outFolder;\n+\tprivate final File outFolder;\n    private final ChangedEntity clazz;\n \n    private final String version;\n \n    private final String method, methodOld;\n \n-   public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version)\n-         throws FileNotFoundException {\n-      this.outFolder = outFolder;\n+   public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version) throws FileNotFoundException {\n+\tthis.outFolder = outFolder;\n       this.clazz = clazz;\n       this.version = version;\n \n       method = FileComparisonUtil.getMethod(sourceFolder, clazz, clazz.getMethod());\n       methodOld = FileComparisonUtil.getMethod(oldSourceFolder, clazz, clazz.getMethod());\n-   }\n+\t}\n \n    public void readMethodChangeData() throws IOException {\n-      final File folder = new File(outFolder, version);\n+\tfinal File folder = new File(outFolder, version);\n       folder.mkdirs();\n       final File goalFile = new File(folder, clazz.getSimpleFullName() + \"_diff.txt\");\n       if (!method.equals(methodOld)) {\n-\n-         final File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n+\tfinal File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n          final File old = new File(folder, clazz.getSimpleFullName() + \"_old.txt\");\n \n          FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n          FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n-      } else {\n-         FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n-      }\n-   }\n+         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] {\n+\told, main }), \"\");\n+\t} else {\n+\tFileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n+\t}\n+\t}\n \n    public Patch<String> getKeywordChanges(final ChangedEntity clazz) throws FileNotFoundException {\n-      final Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n+\tfinal Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n       return patch;\n-   }\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/43/MethodChangeReader.java\nindex 8fdb311aa35..41e851cf205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/43/MethodChangeReader.java\n@@ -5,53 +5,47 @@ import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.nio.charset.Charset;\n import java.util.Arrays;\n-\n import org.apache.commons.io.FileUtils;\n-\n import de.peass.dependency.analysis.data.ChangedEntity;\n import de.peass.dependency.changesreading.FileComparisonUtil;\n import de.peass.dependency.traces.DiffUtil;\n import difflib.DiffUtils;\n import difflib.Patch;\n \n-public class MethodChangeReader {\n \n-   private final File outFolder;\n-   private final ChangedEntity clazz;\n-\n-   private final String version;\n-\n-   private final String method, methodOld;\n-\n-   public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version)\n-         throws FileNotFoundException {\n-      this.outFolder = outFolder;\n-      this.clazz = clazz;\n-      this.version = version;\n-\n-      method = FileComparisonUtil.getMethod(sourceFolder, clazz, clazz.getMethod());\n-      methodOld = FileComparisonUtil.getMethod(oldSourceFolder, clazz, clazz.getMethod());\n-   }\n-\n-   public void readMethodChangeData() throws IOException {\n-      final File folder = new File(outFolder, version);\n-      folder.mkdirs();\n-      final File goalFile = new File(folder, clazz.getSimpleFullName() + \"_diff.txt\");\n-      if (!method.equals(methodOld)) {\n-\n-         final File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n-         final File old = new File(folder, clazz.getSimpleFullName() + \"_old.txt\");\n-\n-         FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n-         FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n-      } else {\n-         FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n-      }\n-   }\n-\n-   public Patch<String> getKeywordChanges(final ChangedEntity clazz) throws FileNotFoundException {\n-      final Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n-      return patch;\n-   }\n-}\n+public class MethodChangeReader {\n+ private final File outFolder;\n+ private final ChangedEntity clazz;\n+ private final String version;\n+ private final String method, methodOld;\n+\n+ public MethodChangeReader(final File outFolder, final File sourceFolder, final File oldSourceFolder, final ChangedEntity clazz, final String version) throws FileNotFoundException {\n+  this.outFolder = outFolder;\n+  this.clazz = clazz;\n+  this.version = version;\n+  method = FileComparisonUtil.getMethod(sourceFolder, clazz, clazz.getMethod());\n+  methodOld = FileComparisonUtil.getMethod(oldSourceFolder, clazz, clazz.getMethod());\n+ }\n+\n+\n+ public void readMethodChangeData() throws IOException {\n+  final File folder = new File(outFolder, version);\n+  folder.mkdirs();\n+\n+  final File goalFile = new File(folder, clazz.getSimpleFullName() + \"_diff.txt\");\n+  if (!method.equals(methodOld)) {\n+   final File main = new File(folder, clazz.getSimpleFullName() + \"_main.txt\");\n+   final File old = new File(folder, clazz.getSimpleFullName() + \"_old.txt\");\n+   FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n+   FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n+   DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[]{old, main}), \"\");\n+  } else {\n+   FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n+  }\n+ }\n+\n+ public Patch<String> getKeywordChanges(final ChangedEntity clazz) throws FileNotFoundException {\n+  final Patch<String> patch = DiffUtils.diff(Arrays.asList(method.split(\"\\n\")), Arrays.asList(methodOld.split(\"\\n\")));\n+  return patch;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/43/MethodChangeReader.java\nindex 8fdb311aa35..09283af0cb4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/43/MethodChangeReader.java\n@@ -44,7 +44,8 @@ public class MethodChangeReader {\n \n          FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n          FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n+         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] {\n+\t\t\t\t\t\t\t\t\t\told, main }), \"\");\n       } else {\n          FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/43/MethodChangeReader.java\nindex 8fdb311aa35..d01dd20245e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/43/MethodChangeReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/43/MethodChangeReader.java\n@@ -44,7 +44,7 @@ public class MethodChangeReader {\n \n          FileUtils.writeStringToFile(main, method, Charset.defaultCharset());\n          FileUtils.writeStringToFile(old, methodOld, Charset.defaultCharset());\n-         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] { old, main }), \"\");\n+         DiffUtil.generateDiffFile(goalFile, Arrays.asList(new File[] {old, main }), \"\");\n       } else {\n          FileUtils.writeStringToFile(goalFile, method, Charset.defaultCharset());\n       }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "837",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      .setParent(PARENT)\n      .build();\n  private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.newBuilder(PROJECT_ID).build();\n  private static final ProjectInfo UNNAMED_PROJECT_FROM_LIST =\n      PARTIAL_PROJECT_INFO.toBuilder().setName(\"Unnamed\").build();\n  private static final ProjectInfo DEPRECATED_PROJECT_INFO = ProjectInfo.builder(PROJECT_ID)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/837/ProjectInfoTest.java\nindex 2d3db2b1336..b2ca95207ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/837/ProjectInfoTest.java\n@@ -44,7 +44,8 @@ public class ProjectInfoTest {\n       .setState(STATE)\n       .setParent(PARENT)\n       .build();\n-  private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.newBuilder(PROJECT_ID).build();\n+  private static final ProjectInfo PARTIAL_PROJECT_INFO =\n+      ProjectInfo.newBuilder(PROJECT_ID).build();\n   private static final ProjectInfo UNNAMED_PROJECT_FROM_LIST =\n       PARTIAL_PROJECT_INFO.toBuilder().setName(\"Unnamed\").build();\n   private static final ProjectInfo DEPRECATED_PROJECT_INFO = ProjectInfo.builder(PROJECT_ID)\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/837/ProjectInfoTest.java\nindex 2d3db2b1336..9534787363a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/837/ProjectInfoTest.java\n@@ -56,7 +56,7 @@ public class ProjectInfoTest {\n       .setParent(PARENT)\n       .build();\n \n-  @Test\n+@Test\n   public void testBuilder() {\n     assertEquals(PROJECT_ID, FULL_PROJECT_INFO.getProjectId());\n     assertEquals(NAME, FULL_PROJECT_INFO.getName());\n@@ -106,8 +106,7 @@ public class ProjectInfoTest {\n \n   @Test\n   public void testEquals() {\n-    compareProjects(\n-        FULL_PROJECT_INFO,\n+    compareProjects(FULL_PROJECT_INFO,\n         ProjectInfo.newBuilder(PROJECT_ID)\n             .setName(NAME)\n             .setLabels(LABELS)\n@@ -116,7 +115,7 @@ public class ProjectInfoTest {\n             .setState(STATE)\n             .setParent(PARENT)\n             .build());\n-    compareProjects(PARTIAL_PROJECT_INFO, ProjectInfo.newBuilder(PROJECT_ID).build());\n+compareProjects(PARTIAL_PROJECT_INFO, ProjectInfo.newBuilder(PROJECT_ID).build());\n     assertNotEquals(FULL_PROJECT_INFO, PARTIAL_PROJECT_INFO);\n   }\n \n@@ -130,4 +129,4 @@ public class ProjectInfoTest {\n     assertEquals(expected.getState(), value.getState());\n     assertEquals(expected.getParent(), value.getParent());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/837/ProjectInfoTest.java\nindex 2d3db2b1336..cc348c919d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/837/ProjectInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/837/ProjectInfoTest.java\n@@ -21,11 +21,10 @@ import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertTrue;\n \n import com.google.common.collect.ImmutableMap;\n-\n import org.junit.Test;\n-\n import java.util.Map;\n \n+\n public class ProjectInfoTest {\n \n   private static final String PROJECT_ID = \"project-id\";\n@@ -34,27 +33,11 @@ public class ProjectInfoTest {\n   private static final Long PROJECT_NUMBER = 123L;\n   private static final Long CREATE_TIME_MILLIS = 123456789L;\n   private static final ProjectInfo.State STATE = ProjectInfo.State.DELETE_REQUESTED;\n-  private static final ProjectInfo.ResourceId PARENT =\n-      new ProjectInfo.ResourceId(\"id\", \"organization\");\n-  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.newBuilder(PROJECT_ID)\n-      .setName(NAME)\n-      .setLabels(LABELS)\n-      .setProjectNumber(PROJECT_NUMBER)\n-      .setCreateTimeMillis(CREATE_TIME_MILLIS)\n-      .setState(STATE)\n-      .setParent(PARENT)\n-      .build();\n+  private static final ProjectInfo.ResourceId PARENT = new ProjectInfo.ResourceId(\"id\", \"organization\");\n+  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.newBuilder(PROJECT_ID).setName(NAME).setLabels(LABELS).setProjectNumber(PROJECT_NUMBER).setCreateTimeMillis(CREATE_TIME_MILLIS).setState(STATE).setParent(PARENT).build();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.newBuilder(PROJECT_ID).build();\n-  private static final ProjectInfo UNNAMED_PROJECT_FROM_LIST =\n-      PARTIAL_PROJECT_INFO.toBuilder().setName(\"Unnamed\").build();\n-  private static final ProjectInfo DEPRECATED_PROJECT_INFO = ProjectInfo.builder(PROJECT_ID)\n-      .name(NAME)\n-      .labels(LABELS)\n-      .setProjectNumber(PROJECT_NUMBER)\n-      .setCreateTimeMillis(CREATE_TIME_MILLIS)\n-      .setState(STATE)\n-      .setParent(PARENT)\n-      .build();\n+  private static final ProjectInfo UNNAMED_PROJECT_FROM_LIST = PARTIAL_PROJECT_INFO.toBuilder().setName(\"Unnamed\").build();\n+  private static final ProjectInfo DEPRECATED_PROJECT_INFO = ProjectInfo.builder(PROJECT_ID).name(NAME).labels(LABELS).setProjectNumber(PROJECT_NUMBER).setCreateTimeMillis(CREATE_TIME_MILLIS).setState(STATE).setParent(PARENT).build();\n \n   @Test\n   public void testBuilder() {\n@@ -64,7 +47,6 @@ public class ProjectInfoTest {\n     assertEquals(PROJECT_NUMBER, FULL_PROJECT_INFO.getProjectNumber());\n     assertEquals(CREATE_TIME_MILLIS, FULL_PROJECT_INFO.getCreateTimeMillis());\n     assertEquals(STATE, FULL_PROJECT_INFO.getState());\n-\n     assertEquals(PROJECT_ID, PARTIAL_PROJECT_INFO.getProjectId());\n     assertEquals(null, PARTIAL_PROJECT_INFO.getName());\n     assertTrue(PARTIAL_PROJECT_INFO.getLabels().isEmpty());\n@@ -81,7 +63,6 @@ public class ProjectInfoTest {\n     assertEquals(PROJECT_NUMBER, DEPRECATED_PROJECT_INFO.projectNumber());\n     assertEquals(CREATE_TIME_MILLIS, DEPRECATED_PROJECT_INFO.createTimeMillis());\n     assertEquals(STATE, DEPRECATED_PROJECT_INFO.state());\n-\n     assertEquals(PROJECT_ID, PARTIAL_PROJECT_INFO.projectId());\n     assertEquals(null, PARTIAL_PROJECT_INFO.name());\n     assertTrue(PARTIAL_PROJECT_INFO.labels().isEmpty());\n@@ -106,16 +87,7 @@ public class ProjectInfoTest {\n \n   @Test\n   public void testEquals() {\n-    compareProjects(\n-        FULL_PROJECT_INFO,\n-        ProjectInfo.newBuilder(PROJECT_ID)\n-            .setName(NAME)\n-            .setLabels(LABELS)\n-            .setProjectNumber(PROJECT_NUMBER)\n-            .setCreateTimeMillis(CREATE_TIME_MILLIS)\n-            .setState(STATE)\n-            .setParent(PARENT)\n-            .build());\n+    compareProjects(FULL_PROJECT_INFO, ProjectInfo.newBuilder(PROJECT_ID).setName(NAME).setLabels(LABELS).setProjectNumber(PROJECT_NUMBER).setCreateTimeMillis(CREATE_TIME_MILLIS).setState(STATE).setParent(PARENT).build());\n     compareProjects(PARTIAL_PROJECT_INFO, ProjectInfo.newBuilder(PROJECT_ID).build());\n     assertNotEquals(FULL_PROJECT_INFO, PARTIAL_PROJECT_INFO);\n   }\n@@ -130,4 +102,4 @@ public class ProjectInfoTest {\n     assertEquals(expected.getState(), value.getState());\n     assertEquals(expected.getParent(), value.getParent());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
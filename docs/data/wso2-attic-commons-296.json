{
    "project_name": "wso2-attic-commons",
    "error_id": "296",
    "information": {
        "errors": [
            {
                "line": "2",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 143).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "/*\n * $HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/contrib/src/main/java/org/apache/http/contrib/benchmark/Stats.java $\n * $Revision: 534594 $\n * $Date: 2007-05-02 12:14:03 -0700 (Wed, 02 May 2007) $\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "2",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "2",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/296/Stats.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/296/Stats.java\nindex 9c1de15a299..799cefdb43d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/296/Stats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/296/Stats.java\n@@ -28,106 +28,107 @@\n  * <http://www.apache.org/>.\n  *\n  */\n+\n package org.apache.http.contrib.benchmark;\n \n /**\n  * Helper to gather statistics for an {@link HttpBenchmark HttpBenchmark}.\n- * @author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>\n- *\n  *\n+ * @author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>\n+ * <p>\n+ * <p>\n  * <!-- empty lines above to avoid 'svn diff' context problems -->\n  * @version $Revision: 534594 $\n- * \n  * @since 4.0\n  */\n public class Stats {\n \n-    private long startTime = -1;    // nano seconds - does not represent an actual time\n-    private long finishTime = -1;   // nano seconds - does not represent an actual time\n-    private int successCount = 0;\n-    private int failureCount = 0;\n-    private int writeErrors = 0;\n-    private String serverName = null;\n-    private long totalBytesRecv = 0;\n-    private long contentLength = -1;\n-\n-    public Stats() {\n-        super();\n-    }\n-\n-    public void start() {\n-        this.startTime = System.nanoTime();\n-    }\n-\n-    public void finish() {\n-        this.finishTime = System.nanoTime();\n-    }\n-\n-    public long getFinishTime() {\n-        return this.finishTime;\n-    }\n-\n-    public long getStartTime() {\n-        return this.startTime;\n-    }\n-\n-    /**\n-     * Total execution time measured in nano seconds\n-     *\n-     * @return\n-     */\n-    public long getDuration() {\n-        // we are using System.nanoTime() and the return values could be negative\n-        // but its only the difference that we are concerned about\n-        return this.finishTime - this.startTime;\n-    }\n-\n-    public void incSuccessCount() {\n-        this.successCount++;\n-    }\n-\n-    public void incFailureCount() {\n-        this.failureCount++;\n-    }\n-\n-    public int getFailureCount() {\n-        return this.failureCount;\n-    }\n-\n-    public void incWriteErrors() {\n-        this.writeErrors++;\n-    }\n-\n-    public int getWriteErrors() {\n-        return this.writeErrors;\n-    }\n-\n-    public int getSuccessCount() {\n-        return this.successCount;\n-    }\n-\n-    public long getTotalBytesRecv() {\n-        return this.totalBytesRecv;\n-    }\n-\n-    public void incTotalBytesRecv(int n) {\n-        this.totalBytesRecv += n;\n-    }\n-\n-    public long getContentLength() {\n-        return this.contentLength;\n-    }\n-\n-    public void setContentLength(long contentLength) {\n-        this.contentLength = contentLength;\n-    }\n-\n-    public String getServerName() {\n-        return this.serverName;\n-    }\n-\n-    public void setServerName(final String serverName) {\n-        this.serverName = serverName;\n-    }\n+  private long startTime = -1;    // nano seconds - does not represent an actual time\n+  private long finishTime = -1;   // nano seconds - does not represent an actual time\n+  private int successCount = 0;\n+  private int failureCount = 0;\n+  private int writeErrors = 0;\n+  private String serverName = null;\n+  private long totalBytesRecv = 0;\n+  private long contentLength = -1;\n+\n+  public Stats() {\n+    super();\n+  }\n+\n+  public void start() {\n+    this.startTime = System.nanoTime();\n+  }\n+\n+  public void finish() {\n+    this.finishTime = System.nanoTime();\n+  }\n+\n+  public long getFinishTime() {\n+    return this.finishTime;\n+  }\n+\n+  public long getStartTime() {\n+    return this.startTime;\n+  }\n+\n+  /**\n+   * Total execution time measured in nano seconds\n+   *\n+   * @return\n+   */\n+  public long getDuration() {\n+    // we are using System.nanoTime() and the return values could be negative\n+    // but its only the difference that we are concerned about\n+    return this.finishTime - this.startTime;\n+  }\n+\n+  public void incSuccessCount() {\n+    this.successCount++;\n+  }\n+\n+  public void incFailureCount() {\n+    this.failureCount++;\n+  }\n+\n+  public int getFailureCount() {\n+    return this.failureCount;\n+  }\n+\n+  public void incWriteErrors() {\n+    this.writeErrors++;\n+  }\n+\n+  public int getWriteErrors() {\n+    return this.writeErrors;\n+  }\n+\n+  public int getSuccessCount() {\n+    return this.successCount;\n+  }\n+\n+  public long getTotalBytesRecv() {\n+    return this.totalBytesRecv;\n+  }\n+\n+  public void incTotalBytesRecv(int n) {\n+    this.totalBytesRecv += n;\n+  }\n+\n+  public long getContentLength() {\n+    return this.contentLength;\n+  }\n+\n+  public void setContentLength(long contentLength) {\n+    this.contentLength = contentLength;\n+  }\n+\n+  public String getServerName() {\n+    return this.serverName;\n+  }\n+\n+  public void setServerName(final String serverName) {\n+    this.serverName = serverName;\n+  }\n \n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "2",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/296/Stats.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/296/Stats.java\nindex 9c1de15a299..4c2bcfcec93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/296/Stats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/296/Stats.java\n@@ -43,7 +43,9 @@ package org.apache.http.contrib.benchmark;\n public class Stats {\n \n     private long startTime = -1;    // nano seconds - does not represent an actual time\n-    private long finishTime = -1;   // nano seconds - does not represent an actual time\n+    private long finishTime = -1;\n+\n+// nano seconds - does not represent an actual time\n     private int successCount = 0;\n     private int failureCount = 0;\n     private int writeErrors = 0;\n@@ -130,4 +132,4 @@ public class Stats {\n         this.serverName = serverName;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "2",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "2",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "codefollower-H2-Research",
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "32",
                "severity": "warning",
                "message": "'=' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        expressions = new Expression[columnCount];\n        ArrayList<Expression> columnList = select.getExpressions();\n        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n        for (int i = 0; i < columnCount; i++) {\n            Expression expr = columnList.get(i);\n            String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/38/SelectListColumnResolver.java\nindex 464a6d689f0..793c144b2e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/38/SelectListColumnResolver.java\n@@ -36,7 +36,7 @@ public class SelectListColumnResolver implements ColumnResolver {\n         columns = new Column[columnCount];\n         expressions = new Expression[columnCount];\n         ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n+        ColumnNamer columnNamer = new ColumnNamer(select.getSession());                \n         for (int i = 0; i < columnCount; i++) {\n             Expression expr = columnList.get(i);\n             String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/38/SelectListColumnResolver.java\nindex 464a6d689f0..c3d9b570a0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/38/SelectListColumnResolver.java\n@@ -3,9 +3,11 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.command.dml;\n \n import java.util.ArrayList;\n+\n import org.h2.expression.Expression;\n import org.h2.expression.ExpressionColumn;\n import org.h2.table.Column;\n@@ -26,70 +28,70 @@ import org.h2.value.Value;\n  */\n public class SelectListColumnResolver implements ColumnResolver {\n \n-    private final Select select;\n-    private final Expression[] expressions;\n-    private final Column[] columns;\n-\n-    SelectListColumnResolver(Select select) {\n-        this.select = select;\n-        int columnCount = select.getColumnCount();\n-        columns = new Column[columnCount];\n-        expressions = new Expression[columnCount];\n-        ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n-        for (int i = 0; i < columnCount; i++) {\n-            Expression expr = columnList.get(i);\n-            String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n-            Column column = new Column(columnName, Value.NULL);\n-            column.setTable(null, i);\n-            columns[i] = column;\n-            expressions[i] = expr.getNonAliasExpression();\n-        }\n-    }\n+  private final Select select;\n+  private final Expression[] expressions;\n+  private final Column[] columns;\n \n-    @Override\n-    public Column[] getColumns() {\n-        return columns;\n+  SelectListColumnResolver(Select select) {\n+    this.select = select;\n+    int columnCount = select.getColumnCount();\n+    columns = new Column[columnCount];\n+    expressions = new Expression[columnCount];\n+    ArrayList<Expression> columnList = select.getExpressions();\n+    ColumnNamer columnNamer = new ColumnNamer(select.getSession());\n+    for (int i = 0; i < columnCount; i++) {\n+      Expression expr = columnList.get(i);\n+      String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n+      Column column = new Column(columnName, Value.NULL);\n+      column.setTable(null, i);\n+      columns[i] = column;\n+      expressions[i] = expr.getNonAliasExpression();\n     }\n+  }\n \n-    @Override\n-    public String getSchemaName() {\n-        return null;\n-    }\n+  @Override\n+  public Column[] getColumns() {\n+    return columns;\n+  }\n \n-    @Override\n-    public Select getSelect() {\n-        return select;\n-    }\n+  @Override\n+  public String getSchemaName() {\n+    return null;\n+  }\n \n-    @Override\n-    public Column[] getSystemColumns() {\n-        return null;\n-    }\n+  @Override\n+  public Select getSelect() {\n+    return select;\n+  }\n \n-    @Override\n-    public Column getRowIdColumn() {\n-        return null;\n-    }\n+  @Override\n+  public Column[] getSystemColumns() {\n+    return null;\n+  }\n \n-    @Override\n-    public String getTableAlias() {\n-        return null;\n-    }\n+  @Override\n+  public Column getRowIdColumn() {\n+    return null;\n+  }\n \n-    @Override\n-    public TableFilter getTableFilter() {\n-        return null;\n-    }\n+  @Override\n+  public String getTableAlias() {\n+    return null;\n+  }\n \n-    @Override\n-    public Value getValue(Column column) {\n-        return null;\n-    }\n+  @Override\n+  public TableFilter getTableFilter() {\n+    return null;\n+  }\n \n-    @Override\n-    public Expression optimize(ExpressionColumn expressionColumn, Column column) {\n-        return expressions[column.getColumnId()];\n-    }\n+  @Override\n+  public Value getValue(Column column) {\n+    return null;\n+  }\n+\n+  @Override\n+  public Expression optimize(ExpressionColumn expressionColumn, Column column) {\n+    return expressions[column.getColumnId()];\n+  }\n \n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/38/SelectListColumnResolver.java\nindex 464a6d689f0..02380ec51e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/38/SelectListColumnResolver.java\n@@ -36,9 +36,9 @@ public class SelectListColumnResolver implements ColumnResolver {\n         columns = new Column[columnCount];\n         expressions = new Expression[columnCount];\n         ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n-        for (int i = 0; i < columnCount; i++) {\n-            Expression expr = columnList.get(i);\n+        ColumnNamer columnNamer = new ColumnNamer(select.getSession());\n+for (int i = 0; i < columnCount; i++) {\n+    Expression expr = columnList.get(i);\n             String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n             Column column = new Column(columnName, Value.NULL);\n             column.setTable(null, i);\n@@ -92,4 +92,4 @@ public class SelectListColumnResolver implements ColumnResolver {\n         return expressions[column.getColumnId()];\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/38/SelectListColumnResolver.java\nindex 464a6d689f0..a2431c8beb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/38/SelectListColumnResolver.java\n@@ -24,6 +24,8 @@ import org.h2.value.Value;\n  *\n  * @author Thomas Mueller\n  */\n+\n+\n public class SelectListColumnResolver implements ColumnResolver {\n \n     private final Select select;\n@@ -36,7 +38,7 @@ public class SelectListColumnResolver implements ColumnResolver {\n         columns = new Column[columnCount];\n         expressions = new Expression[columnCount];\n         ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n+        ColumnNamer columnNamer = new ColumnNamer(select.getSession());\n         for (int i = 0; i < columnCount; i++) {\n             Expression expr = columnList.get(i);\n             String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n@@ -92,4 +94,4 @@ public class SelectListColumnResolver implements ColumnResolver {\n         return expressions[column.getColumnId()];\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/38/SelectListColumnResolver.java\nindex 464a6d689f0..793c144b2e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/38/SelectListColumnResolver.java\n@@ -36,7 +36,7 @@ public class SelectListColumnResolver implements ColumnResolver {\n         columns = new Column[columnCount];\n         expressions = new Expression[columnCount];\n         ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n+        ColumnNamer columnNamer = new ColumnNamer(select.getSession());                \n         for (int i = 0; i < columnCount; i++) {\n             Expression expr = columnList.get(i);\n             String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/38/SelectListColumnResolver.java\nindex 464a6d689f0..793c144b2e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/38/SelectListColumnResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/38/SelectListColumnResolver.java\n@@ -36,7 +36,7 @@ public class SelectListColumnResolver implements ColumnResolver {\n         columns = new Column[columnCount];\n         expressions = new Expression[columnCount];\n         ArrayList<Expression> columnList = select.getExpressions();\n-        ColumnNamer columnNamer= new ColumnNamer(select.getSession());                \n+        ColumnNamer columnNamer = new ColumnNamer(select.getSession());                \n         for (int i = 0; i < columnCount; i++) {\n             Expression expr = columnList.get(i);\n             String columnName = columnNamer.getColumnName(expr, i, expr.getAlias());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
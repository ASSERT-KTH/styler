{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1717",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1717/IntegralValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1717/IntegralValue.java\nindex b04e5c4bb62..86d86658777 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1717/IntegralValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1717/IntegralValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import org.neo4j.hashing.HashFunction;\n@@ -25,138 +26,136 @@ import org.neo4j.values.utils.ValueMath;\n \n public abstract class IntegralValue extends NumberValue\n {\n-    public static long safeCastIntegral( String name, AnyValue value, long defaultValue )\n-    {\n-        if ( value == null || value == Values.NO_VALUE )\n-        {\n-            return defaultValue;\n-        }\n-        if ( value instanceof IntegralValue )\n-        {\n-            return ((IntegralValue) value).longValue();\n-        }\n-        throw new IllegalArgumentException(\n-                name + \" must be an integer value, but was a \" + value.getClass().getSimpleName() );\n-    }\n-\n-    @Override\n-    public boolean equals( long x )\n-    {\n-        return longValue() == x;\n-    }\n-\n-    @Override\n-    public boolean equals( double x )\n-    {\n-        return NumberValues.numbersEqual( x, longValue() );\n-    }\n-\n-    @Override\n-    public final int computeHash()\n-    {\n-        return NumberValues.hash( longValue() );\n-    }\n-\n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n-    {\n-        return hashFunction.update( hash, longValue() );\n-    }\n-\n-    @Override\n-    public boolean eq( Object other )\n-    {\n-        return other instanceof Value && equals( (Value) other );\n-    }\n-\n-    @Override\n-    public final boolean equals( Value other )\n-    {\n-        if ( other instanceof IntegralValue )\n-        {\n-            IntegralValue that = (IntegralValue) other;\n-            return this.longValue() == that.longValue();\n-        }\n-        else if ( other instanceof FloatingPointValue )\n-        {\n-            FloatingPointValue that = (FloatingPointValue) other;\n-            return NumberValues.numbersEqual( that.doubleValue(), this.longValue() );\n-        }\n-        else\n-        {\n-            return false;\n-        }\n-    }\n-\n-    @Override\n-    public int compareTo( IntegralValue other )\n-    {\n-        return Long.compare( longValue(), other.longValue() );\n-    }\n-\n-    @Override\n-    public int compareTo( FloatingPointValue other )\n-    {\n-        return NumberValues.compareLongAgainstDouble( longValue(), other.doubleValue() );\n-    }\n-\n-    @Override\n-    public NumberType numberType()\n-    {\n-        return NumberType.INTEGRAL;\n-    }\n-\n-    @Override\n-    public double doubleValue()\n-    {\n-        return longValue();\n-    }\n-\n-    @Override\n-    public LongValue minus( long b )\n-    {\n-        return ValueMath.subtract( longValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue minus( double b )\n-    {\n-        return ValueMath.subtract( longValue(), b );\n-    }\n-\n-    @Override\n-    public LongValue plus( long b )\n-    {\n-        return ValueMath.add( longValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue plus( double b )\n-    {\n-        return ValueMath.add( longValue(), b );\n-    }\n-\n-    @Override\n-    public LongValue times( long b )\n-    {\n-        return ValueMath.multiply( longValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue times( double b )\n-    {\n-        return ValueMath.multiply( longValue(), b );\n-    }\n-\n-    @Override\n-    public LongValue dividedBy( long b )\n-    {\n-        return Values.longValue( longValue() / b );\n-    }\n-\n-    @Override\n-    public DoubleValue dividedBy( double b )\n-    {\n-        return Values.doubleValue( doubleValue() / b );\n-    }\n+  public static long safeCastIntegral(String name, AnyValue value, long defaultValue)\n+  {\n+    if (value == null || value == Values.NO_VALUE)\n+    {\n+      return defaultValue;\n+    }\n+    if (value instanceof IntegralValue)\n+    {\n+      return ((IntegralValue) value).longValue();\n+    }\n+    throw new IllegalArgumentException(\n+        name + \" must be an integer value, but was a \" + value.getClass().getSimpleName());\n+  }\n+\n+  @Override\n+  public boolean equals(long x)\n+  {\n+    return longValue() == x;\n+  }\n+\n+  @Override\n+  public boolean equals(double x)\n+  {\n+    return NumberValues.numbersEqual(x, longValue());\n+  }\n+\n+  @Override\n+  public final int computeHash()\n+  {\n+    return NumberValues.hash(longValue());\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    return hashFunction.update(hash, longValue());\n+  }\n+\n+  @Override\n+  public boolean eq(Object other)\n+  {\n+    return other instanceof Value && equals((Value) other);\n+  }\n+\n+  @Override\n+  public final boolean equals(Value other)\n+  {\n+    if (other instanceof IntegralValue)\n+    {\n+      IntegralValue that = (IntegralValue) other;\n+      return this.longValue() == that.longValue();\n+    } else if (other instanceof FloatingPointValue)\n+    {\n+      FloatingPointValue that = (FloatingPointValue) other;\n+      return NumberValues.numbersEqual(that.doubleValue(), this.longValue());\n+    } else\n+    {\n+      return false;\n+    }\n+  }\n+\n+  @Override\n+  public int compareTo(IntegralValue other)\n+  {\n+    return Long.compare(longValue(), other.longValue());\n+  }\n+\n+  @Override\n+  public int compareTo(FloatingPointValue other)\n+  {\n+    return NumberValues.compareLongAgainstDouble(longValue(), other.doubleValue());\n+  }\n+\n+  @Override\n+  public NumberType numberType()\n+  {\n+    return NumberType.INTEGRAL;\n+  }\n+\n+  @Override\n+  public double doubleValue()\n+  {\n+    return longValue();\n+  }\n+\n+  @Override\n+  public LongValue minus(long b)\n+  {\n+    return ValueMath.subtract(longValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue minus(double b)\n+  {\n+    return ValueMath.subtract(longValue(), b);\n+  }\n+\n+  @Override\n+  public LongValue plus(long b)\n+  {\n+    return ValueMath.add(longValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue plus(double b)\n+  {\n+    return ValueMath.add(longValue(), b);\n+  }\n+\n+  @Override\n+  public LongValue times(long b)\n+  {\n+    return ValueMath.multiply(longValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue times(double b)\n+  {\n+    return ValueMath.multiply(longValue(), b);\n+  }\n+\n+  @Override\n+  public LongValue dividedBy(long b)\n+  {\n+    return Values.longValue(longValue() / b);\n+  }\n+\n+  @Override\n+  public DoubleValue dividedBy(double b)\n+  {\n+    return Values.doubleValue(doubleValue() / b);\n+  }\n }\n",
            "diff_size": 135
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1717/IntegralValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1717/IntegralValue.java\nindex b04e5c4bb62..0a352c93a5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1717/IntegralValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1717/IntegralValue.java\n@@ -31,12 +31,12 @@ public abstract class IntegralValue extends NumberValue\n         {\n             return defaultValue;\n         }\n-        if ( value instanceof IntegralValue )\n+\n+if ( value instanceof IntegralValue )\n         {\n             return ((IntegralValue) value).longValue();\n         }\n-        throw new IllegalArgumentException(\n-                name + \" must be an integer value, but was a \" + value.getClass().getSimpleName() );\n+        throw new IllegalArgumentException( name + \" must be an integer value, but was a \" + value.getClass().getSimpleName() );\n     }\n \n     @Override\n@@ -159,4 +159,4 @@ public abstract class IntegralValue extends NumberValue\n     {\n         return Values.doubleValue( doubleValue() / b );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
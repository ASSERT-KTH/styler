{
    "project_name": "GluuFederation-oxCore",
    "error_id": "134",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    private Properties properties;\n\n\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n\tprivate boolean isReload = false;\n\n    public FileConfiguration(String fileName) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/134/FileConfiguration.java\nindex 036d4bce293..42e2b2d1f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/134/FileConfiguration.java\n@@ -33,7 +33,7 @@ public class FileConfiguration {\n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n \n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n+    private final ReentrantLock reloadLock = new ReentrantLock();\n \tprivate boolean isReload = false;\n \n     public FileConfiguration(String fileName) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/134/FileConfiguration.java\nindex 036d4bce293..023e3ef0c21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/134/FileConfiguration.java\n@@ -33,8 +33,8 @@ public class FileConfiguration {\n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n \n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n-\tprivate boolean isReload = false;\n+    private final ReentrantLock reloadLock = new ReentrantLock();\n+    private boolean isReload = false;\n \n     public FileConfiguration(String fileName) {\n         this(fileName, false);\n@@ -55,35 +55,35 @@ public class FileConfiguration {\n     public FileConfiguration(String fileName, PropertiesConfiguration propertiesConfiguration) {\n         this.fileName = fileName;\n         this.isResource = false;\n-\t\tthis.propertiesConfiguration = propertiesConfiguration;\n+        this.propertiesConfiguration = propertiesConfiguration;\n \n-\t\tthis.loaded = true;\n+        this.loaded = true;\n     }\n \n-\tprotected void loadProperties() {\n-\t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n-\t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n-\n-\tprotected void loadResourceProperties() {\n-\t\tLOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n-\t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n-\t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n+    protected void loadProperties() {\n+        try {\n+            this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+            this.loaded = true;\n+        } catch (ConfigurationException ex) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+        } catch (Exception e) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+            LOG.error(e.getMessage(), e);\n+        }\n+    }\n+\n+    protected void loadResourceProperties() {\n+        LOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n+        try {\n+            this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+            this.loaded = true;\n+        } catch (ConfigurationException ex) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n+        } catch (Exception e) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+            LOG.error(e.getMessage(), e);\n+        }\n+    }\n \n     public void reload() {\n         this.isReload = true;\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/134/FileConfiguration.java\nindex 036d4bce293..4aa3cb05666 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/134/FileConfiguration.java\n@@ -32,11 +32,10 @@ public class FileConfiguration {\n \n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n-\n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n+private final ReentrantLock reloadLock = new ReentrantLock();\n \tprivate boolean isReload = false;\n \n-    public FileConfiguration(String fileName) {\n+public FileConfiguration(String fileName) {\n         this(fileName, false);\n     }\n \n@@ -55,37 +54,37 @@ public class FileConfiguration {\n     public FileConfiguration(String fileName, PropertiesConfiguration propertiesConfiguration) {\n         this.fileName = fileName;\n         this.isResource = false;\n-\t\tthis.propertiesConfiguration = propertiesConfiguration;\n+this.propertiesConfiguration = propertiesConfiguration;\n \n \t\tthis.loaded = true;\n     }\n \n-\tprotected void loadProperties() {\n-\t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+protected void loadProperties() {\n+    try {\n+    this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n \t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+    } catch (ConfigurationException ex) {\n+    LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+    } catch (Exception e) {\n+    LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n \t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n+    }\n+    }\n \n \tprotected void loadResourceProperties() {\n-\t\tLOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n+    LOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n \t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+    this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n \t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+    } catch (ConfigurationException ex) {\n+    LOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n+    } catch (Exception e) {\n+    LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n \t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n+    }\n+    }\n \n-    public void reload() {\n+public void reload() {\n         this.isReload = true;\n \n         reloadLock.lock(); // block until condition holds\n@@ -269,4 +268,4 @@ public class FileConfiguration {\n         return propertiesConfiguration;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/134/FileConfiguration.java\nindex 036d4bce293..3c5c46dc32c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/134/FileConfiguration.java\n@@ -12,7 +12,6 @@ import java.util.List;\n import java.util.NoSuchElementException;\n import java.util.Properties;\n import java.util.concurrent.locks.ReentrantLock;\n-\n import org.apache.commons.configuration.ConfigurationException;\n import org.apache.commons.configuration.PropertiesConfiguration;\n import org.gluu.util.ArrayHelper;\n@@ -22,19 +21,18 @@ import org.slf4j.LoggerFactory;\n /**\n  * @author Yuriy Movchan Date: 03.29.2011\n  */\n+\n+\n public class FileConfiguration {\n \n     private static final Logger LOG = LoggerFactory.getLogger(FileConfiguration.class);\n-\n     private String fileName;\n     private boolean isResource;\n     private boolean loaded;\n-\n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n-\n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n-\tprivate boolean isReload = false;\n+    private final ReentrantLock reloadLock = new ReentrantLock();\n+    private boolean isReload = false;\n \n     public FileConfiguration(String fileName) {\n         this(fileName, false);\n@@ -44,7 +42,6 @@ public class FileConfiguration {\n         this.fileName = fileName;\n         this.isResource = isResource;\n         this.loaded = false;\n-\n         if (isResource) {\n             loadResourceProperties();\n         } else {\n@@ -55,48 +52,44 @@ public class FileConfiguration {\n     public FileConfiguration(String fileName, PropertiesConfiguration propertiesConfiguration) {\n         this.fileName = fileName;\n         this.isResource = false;\n-\t\tthis.propertiesConfiguration = propertiesConfiguration;\n+        this.propertiesConfiguration = propertiesConfiguration;\n+        this.loaded = true;\n+    }\n \n-\t\tthis.loaded = true;\n+    protected void loadProperties() {\n+        try {\n+            this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+            this.loaded = true;\n+        } catch (ConfigurationException ex) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+        } catch (Exception e) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+            LOG.error(e.getMessage(), e);\n+        }\n     }\n \n-\tprotected void loadProperties() {\n-\t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n-\t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n-\n-\tprotected void loadResourceProperties() {\n-\t\tLOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n-\t\ttry {\n-\t\t\tthis.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n-\t\t\tthis.loaded = true;\n-\t\t} catch (ConfigurationException ex) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n-\t\t} catch (Exception e) {\n-\t\t\tLOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n-\t\t\tLOG.error(e.getMessage(), e);\n-\t\t}\n-\t}\n+    protected void loadResourceProperties() {\n+        LOG.debug(String.format(\"Loading '%s' configuration file from resources\", this.fileName));\n+        try {\n+            this.propertiesConfiguration = new PropertiesConfiguration(this.fileName);\n+            this.loaded = true;\n+        } catch (ConfigurationException ex) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from resources\", this.fileName));\n+        } catch (Exception e) {\n+            LOG.error(String.format(\"Failed to load '%s' configuration file from config folder\", this.fileName));\n+            LOG.error(e.getMessage(), e);\n+        }\n+    }\n \n     public void reload() {\n         this.isReload = true;\n-\n         reloadLock.lock(); // block until condition holds\n         try {\n             if (!this.isReload) {\n                 return;\n             }\n-\n             this.properties = null;\n             this.loaded = false;\n-\n             if (this.isResource) {\n                 loadResourceProperties();\n             } else {\n@@ -140,11 +133,9 @@ public class FileConfiguration {\n \n     public Properties getPropertiesByPrefix(String propertiesPrefix) {\n         Properties properties = new Properties();\n-\n         Iterator<?> keys = this.propertiesConfiguration.getKeys();\n         while (keys.hasNext()) {\n             String key = (String) keys.next();\n-\n             if (key.startsWith(propertiesPrefix)) {\n                 properties.put(key.substring(propertiesPrefix.length()), getString(key));\n             }\n@@ -160,8 +151,8 @@ public class FileConfiguration {\n             for (int i = 0; i < values.length - 1; i++) {\n                 sb.append(values[i]).append(',');\n             }\n-            sb.append(values[values.length - 1]);\n \n+            sb.append(values[values.length - 1]);\n             return sb.toString();\n         }\n \n@@ -269,4 +260,4 @@ public class FileConfiguration {\n         return propertiesConfiguration;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/134/FileConfiguration.java\nindex 036d4bce293..42e2b2d1f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/134/FileConfiguration.java\n@@ -33,7 +33,7 @@ public class FileConfiguration {\n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n \n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n+    private final ReentrantLock reloadLock = new ReentrantLock();\n \tprivate boolean isReload = false;\n \n     public FileConfiguration(String fileName) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "37",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/134/FileConfiguration.java\nindex 036d4bce293..42e2b2d1f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/134/FileConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/134/FileConfiguration.java\n@@ -33,7 +33,7 @@ public class FileConfiguration {\n     private PropertiesConfiguration propertiesConfiguration;\n     private Properties properties;\n \n-\tprivate final ReentrantLock reloadLock = new ReentrantLock();\n+    private final ReentrantLock reloadLock = new ReentrantLock();\n \tprivate boolean isReload = false;\n \n     public FileConfiguration(String fileName) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
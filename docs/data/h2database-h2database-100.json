{
    "project_name": "h2database-h2database",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "60",
                "column": "22",
                "severity": "warning",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n        return mainIndex.getMVMap();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/100/MVDelegateIndex.java\nindex 03b319f64fc..57035484a07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/100/MVDelegateIndex.java\n@@ -57,7 +57,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/100/MVDelegateIndex.java\nindex 03b319f64fc..8bfd806c670 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/100/MVDelegateIndex.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.mvstore.db;\n \n import java.util.List;\n@@ -30,10 +31,11 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     private final MVPrimaryIndex mainIndex;\n \n     public MVDelegateIndex(MVTable table, int id, String name,\n-            MVPrimaryIndex mainIndex,\n-            IndexType indexType) {\n+                           MVPrimaryIndex mainIndex,\n+                           IndexType indexType) {\n         super(table, id, name,\n-                IndexColumn.wrap(new Column[] { table.getColumn(mainIndex.getMainIndexColumn()) }),\n+                IndexColumn.wrap(new Column[] {\n+                        table.getColumn(mainIndex.getMainIndexColumn())}),\n                 indexType);\n         this.mainIndex = mainIndex;\n         if (id < 0) {\n@@ -57,7 +59,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n@@ -111,9 +113,11 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n \n     @Override\n     public double getCost(SessionLocal session, int[] masks,\n-            TableFilter[] filters, int filter, SortOrder sortOrder,\n-            AllColumnsForPlan allColumnsSet) {\n-        return 10 * getCostRangeIndex(masks, mainIndex.getRowCountApproximation(session),\n+                          TableFilter[] filters, int filter,\n+                          SortOrder sortOrder,\n+                          AllColumnsForPlan allColumnsSet) {\n+        return 10 * getCostRangeIndex(masks,\n+                mainIndex.getRowCountApproximation(session),\n                 filters, filter, sortOrder, true, allColumnsSet);\n     }\n \n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/100/MVDelegateIndex.java\nindex 03b319f64fc..82fe7b62e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/100/MVDelegateIndex.java\n@@ -57,7 +57,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n@@ -152,4 +152,4 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n         return mainIndex.getRowCountApproximation(session);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/100/MVDelegateIndex.java\nindex 03b319f64fc..d537308592f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/100/MVDelegateIndex.java\n@@ -6,7 +6,6 @@\n package org.h2.mvstore.db;\n \n import java.util.List;\n-\n import org.h2.command.query.AllColumnsForPlan;\n import org.h2.engine.SessionLocal;\n import org.h2.index.Cursor;\n@@ -25,16 +24,14 @@ import org.h2.value.VersionedValue;\n /**\n  * An index that delegates indexing to another index.\n  */\n+\n+\n public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n \n     private final MVPrimaryIndex mainIndex;\n \n-    public MVDelegateIndex(MVTable table, int id, String name,\n-            MVPrimaryIndex mainIndex,\n-            IndexType indexType) {\n-        super(table, id, name,\n-                IndexColumn.wrap(new Column[] { table.getColumn(mainIndex.getMainIndexColumn()) }),\n-                indexType);\n+    public MVDelegateIndex(MVTable table, int id, String name, MVPrimaryIndex mainIndex, IndexType indexType) {\n+        super(table, id, name, IndexColumn.wrap(new Column[] { table.getColumn(mainIndex.getMainIndexColumn())}), indexType);\n         this.mainIndex = mainIndex;\n         if (id < 0) {\n             throw DbException.getInternalError(name);\n@@ -57,13 +54,14 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n     @Override\n     public void add(SessionLocal session, Row row) {\n         // nothing to do\n+\n     }\n \n     @Override\n@@ -84,6 +82,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     @Override\n     public void close(SessionLocal session) {\n         // nothing to do\n+\n     }\n \n     @Override\n@@ -110,11 +109,8 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public double getCost(SessionLocal session, int[] masks,\n-            TableFilter[] filters, int filter, SortOrder sortOrder,\n-            AllColumnsForPlan allColumnsSet) {\n-        return 10 * getCostRangeIndex(masks, mainIndex.getRowCountApproximation(session),\n-                filters, filter, sortOrder, true, allColumnsSet);\n+    public double getCost(SessionLocal session, int[] masks, TableFilter[] filters, int filter, SortOrder sortOrder, AllColumnsForPlan allColumnsSet) {\n+        return 10 * getCostRangeIndex(masks, mainIndex.getRowCountApproximation(session), filters, filter, sortOrder, true, allColumnsSet);\n     }\n \n     @Override\n@@ -125,11 +121,13 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     @Override\n     public void remove(SessionLocal session, Row row) {\n         // nothing to do\n+\n     }\n \n     @Override\n     public void update(SessionLocal session, Row oldRow, Row newRow) {\n         // nothing to do\n+\n     }\n \n     @Override\n@@ -140,6 +138,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     @Override\n     public void truncate(SessionLocal session) {\n         // nothing to do\n+\n     }\n \n     @Override\n@@ -152,4 +151,4 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n         return mainIndex.getRowCountApproximation(session);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/100/MVDelegateIndex.java\nindex 03b319f64fc..57035484a07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/100/MVDelegateIndex.java\n@@ -57,7 +57,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/100/MVDelegateIndex.java\nindex 03b319f64fc..57035484a07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/100/MVDelegateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/100/MVDelegateIndex.java\n@@ -57,7 +57,7 @@ public class MVDelegateIndex extends MVIndex<Long, SearchRow> {\n     }\n \n     @Override\n-    public MVMap<Long,VersionedValue<SearchRow>> getMVMap() {\n+    public MVMap<Long, VersionedValue<SearchRow>> getMVMap() {\n         return mainIndex.getMVMap();\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
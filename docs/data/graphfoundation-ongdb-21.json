{
    "project_name": "graphfoundation-ongdb",
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "279",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/21/MapUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/21/MapUtil.java\nindex 51b3734326d..0df75286ab2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/21/MapUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/21/MapUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.io.BufferedOutputStream;\n@@ -45,432 +46,433 @@ import java.util.stream.Stream;\n  */\n public abstract class MapUtil\n {\n-    /**\n-     * A short-hand method for creating a {@link Map} of key/value pairs.\n-     *\n-     * @param objects alternating key and value.\n-     * @param <K> type of keys\n-     * @param <V> type of values\n-     * @return a Map with the entries supplied by {@code objects}.\n-     */\n-    public static <K, V> Map<K, V> genericMap( Object... objects )\n+  /**\n+   * A short-hand method for creating a {@link Map} of key/value pairs.\n+   *\n+   * @param objects alternating key and value.\n+   * @param <K>     type of keys\n+   * @param <V>     type of values\n+   * @return a Map with the entries supplied by {@code objects}.\n+   */\n+  public static <K, V> Map<K, V> genericMap(Object... objects)\n+  {\n+    return genericMap(new HashMap<K, V>(), objects);\n+  }\n+\n+  /**\n+   * A short-hand method for adding key/value pairs into a {@link Map}.\n+   *\n+   * @param targetMap the {@link Map} to put the objects into.\n+   * @param objects   alternating key and value.\n+   * @param <K>       type of keys\n+   * @param <V>       type of values\n+   * @return a Map with the entries supplied by {@code objects}.\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <K, V> Map<K, V> genericMap(Map<K, V> targetMap, Object... objects)\n+  {\n+    int i = 0;\n+    while (i < objects.length)\n     {\n-        return genericMap( new HashMap<K, V>(), objects );\n+      targetMap.put((K) objects[i++], (V) objects[i++]);\n     }\n-\n-    /**\n-     * A short-hand method for adding key/value pairs into a {@link Map}.\n-     *\n-     * @param targetMap the {@link Map} to put the objects into.\n-     * @param objects alternating key and value.\n-     * @param <K> type of keys\n-     * @param <V> type of values\n-     * @return a Map with the entries supplied by {@code objects}.\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    public static <K, V> Map<K,V> genericMap( Map<K,V> targetMap, Object... objects )\n+    return targetMap;\n+  }\n+\n+  /**\n+   * A short-hand method for creating a {@link Map} of key/value pairs where\n+   * both keys and values are {@link String}s.\n+   *\n+   * @param strings alternating key and value.\n+   * @return a Map with the entries supplied by {@code strings}.\n+   */\n+  public static Map<String, String> stringMap(String... strings)\n+  {\n+    return genericMap((Object[]) strings);\n+  }\n+\n+  /**\n+   * A short-hand method for creating a {@link Map} of key/value pairs where\n+   * both keys and values are {@link String}s.\n+   *\n+   * @param targetMap the {@link Map} to put the objects into.\n+   * @param strings   alternating key and value.\n+   * @return a Map with the entries supplied by {@code strings}.\n+   */\n+  public static Map<String, String> stringMap(Map<String, String> targetMap,\n+                                              String... strings)\n+  {\n+    return genericMap(targetMap, (Object[]) strings);\n+  }\n+\n+  /**\n+   * A short-hand method for creating a {@link Map} of key/value pairs where\n+   * keys are {@link String}s and values are {@link Object}s.\n+   *\n+   * @param objects alternating key and value.\n+   * @return a Map with the entries supplied by {@code objects}.\n+   */\n+  public static Map<String, Object> map(Object... objects)\n+  {\n+    return genericMap(objects);\n+  }\n+\n+  /**\n+   * A short-hand method for creating a {@link Map} of key/value pairs where\n+   * keys are {@link String}s and values are {@link Object}s.\n+   *\n+   * @param targetMap the {@link Map} to put the objects into.\n+   * @param objects   alternating key and value.\n+   * @return a Map with the entries supplied by {@code objects}.\n+   */\n+  public static Map<String, Object> map(Map<String, Object> targetMap,\n+                                        Object... objects)\n+  {\n+    return genericMap(targetMap, objects);\n+  }\n+\n+  /**\n+   * Loads a {@link Map} from a {@link Reader} assuming strings as keys\n+   * and values.\n+   *\n+   * @param reader the {@link Reader} containing a {@link Properties}-like\n+   *               layout of keys and values.\n+   * @return the read data as a {@link Map}.\n+   * @throws IOException if the {@code reader} throws {@link IOException}.\n+   */\n+  public static Map<String, String> load(Reader reader) throws IOException\n+  {\n+    Properties props = new Properties();\n+    props.load(reader);\n+    //noinspection unchecked\n+    return new HashMap<>((Map) props);\n+  }\n+\n+  /**\n+   * Loads a {@link Map} from a {@link Reader} assuming strings as keys\n+   * and values. Any {@link IOException} is wrapped and thrown as a\n+   * {@link RuntimeException} instead.\n+   *\n+   * @param reader the {@link Reader} containing a {@link Properties}-like\n+   *               layout of keys and values.\n+   * @return the read data as a {@link Map}.\n+   */\n+  public static Map<String, String> loadStrictly(Reader reader)\n+  {\n+    try\n     {\n-        int i = 0;\n-        while ( i < objects.length )\n-        {\n-            targetMap.put( (K) objects[i++], (V) objects[i++] );\n-        }\n-        return targetMap;\n-    }\n-\n-    /**\n-     * A short-hand method for creating a {@link Map} of key/value pairs where\n-     * both keys and values are {@link String}s.\n-     *\n-     * @param strings alternating key and value.\n-     * @return a Map with the entries supplied by {@code strings}.\n-     */\n-    public static Map<String, String> stringMap( String... strings )\n+      return load(reader);\n+    } catch (IOException e)\n     {\n-        return genericMap( (Object[]) strings );\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * A short-hand method for creating a {@link Map} of key/value pairs where\n-     * both keys and values are {@link String}s.\n-     *\n-     * @param targetMap the {@link Map} to put the objects into.\n-     * @param strings alternating key and value.\n-     * @return a Map with the entries supplied by {@code strings}.\n-     */\n-    public static Map<String, String> stringMap( Map<String, String> targetMap,\n-            String... strings )\n+  }\n+\n+  /**\n+   * Loads a {@link Map} from an {@link InputStream} assuming strings as keys\n+   * and values.\n+   *\n+   * @param stream the {@link InputStream} containing a\n+   *               {@link Properties}-like layout of keys and values.\n+   * @return the read data as a {@link Map}.\n+   * @throws IOException if the {@code stream} throws {@link IOException}.\n+   */\n+  public static Map<String, String> load(InputStream stream) throws IOException\n+  {\n+    Properties props = new Properties();\n+    props.load(stream);\n+\n+    HashMap<String, String> result = new HashMap<>();\n+    for (Map.Entry<Object, Object> entry : props.entrySet())\n     {\n-        return genericMap( targetMap, (Object[]) strings );\n+      // Properties does not trim whitespace from the right side of values\n+      result.put((String) entry.getKey(), ((String) entry.getValue()).trim());\n     }\n \n-    /**\n-     * A short-hand method for creating a {@link Map} of key/value pairs where\n-     * keys are {@link String}s and values are {@link Object}s.\n-     *\n-     * @param objects alternating key and value.\n-     * @return a Map with the entries supplied by {@code objects}.\n-     */\n-    public static Map<String, Object> map( Object... objects )\n+    return result;\n+  }\n+\n+  /**\n+   * Loads a {@link Map} from an {@link InputStream} assuming strings as keys\n+   * and values. Any {@link IOException} is wrapped and thrown as a\n+   * {@link RuntimeException} instead.\n+   *\n+   * @param stream the {@link InputStream} containing a\n+   *               {@link Properties}-like layout of keys and values.\n+   * @return the read data as a {@link Map}.\n+   */\n+  public static Map<String, String> loadStrictly(InputStream stream)\n+  {\n+    try\n     {\n-        return genericMap( objects );\n-    }\n-\n-    /**\n-     * A short-hand method for creating a {@link Map} of key/value pairs where\n-     * keys are {@link String}s and values are {@link Object}s.\n-     *\n-     * @param targetMap the {@link Map} to put the objects into.\n-     * @param objects alternating key and value.\n-     * @return a Map with the entries supplied by {@code objects}.\n-     */\n-    public static Map<String, Object> map( Map<String, Object> targetMap,\n-            Object... objects )\n+      return load(stream);\n+    } catch (IOException e)\n     {\n-        return genericMap( targetMap, objects );\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Loads a {@link Map} from a {@link Reader} assuming strings as keys\n-     * and values.\n-     *\n-     * @param reader the {@link Reader} containing a {@link Properties}-like\n-     * layout of keys and values.\n-     * @return the read data as a {@link Map}.\n-     * @throws IOException if the {@code reader} throws {@link IOException}.\n-     */\n-    public static Map<String, String> load( Reader reader ) throws IOException\n+  }\n+\n+  /**\n+   * Loads a {@link Map} from a {@link File} assuming strings as keys\n+   * and values.\n+   *\n+   * @param file the {@link File} containing a {@link Properties}-like\n+   *             layout of keys and values.\n+   * @return the read data as a {@link Map}.\n+   * @throws IOException if the file reader throws {@link IOException}.\n+   */\n+  public static Map<String, String> load(File file) throws IOException\n+  {\n+    FileInputStream stream = null;\n+    try\n     {\n-        Properties props = new Properties();\n-        props.load( reader );\n-        //noinspection unchecked\n-        return new HashMap<>( (Map) props );\n-    }\n-\n-    /**\n-     * Loads a {@link Map} from a {@link Reader} assuming strings as keys\n-     * and values. Any {@link IOException} is wrapped and thrown as a\n-     * {@link RuntimeException} instead.\n-     *\n-     * @param reader the {@link Reader} containing a {@link Properties}-like\n-     * layout of keys and values.\n-     * @return the read data as a {@link Map}.\n-     */\n-    public static Map<String, String> loadStrictly( Reader reader )\n+      stream = new FileInputStream(file);\n+      return load(stream);\n+    } finally\n     {\n-        try\n-        {\n-            return load( reader );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      closeIfNotNull(stream);\n     }\n+  }\n \n-    /**\n-     * Loads a {@link Map} from an {@link InputStream} assuming strings as keys\n-     * and values.\n-     *\n-     * @param stream the {@link InputStream} containing a\n-     * {@link Properties}-like layout of keys and values.\n-     * @return the read data as a {@link Map}.\n-     * @throws IOException if the {@code stream} throws {@link IOException}.\n-     */\n-    public static Map<String,String> load( InputStream stream ) throws IOException\n+  private static void closeIfNotNull(Closeable closeable) throws IOException\n+  {\n+    if (closeable != null)\n     {\n-        Properties props = new Properties();\n-        props.load( stream );\n-\n-        HashMap<String,String> result = new HashMap<>();\n-        for ( Map.Entry<Object,Object> entry : props.entrySet() )\n-        {\n-            // Properties does not trim whitespace from the right side of values\n-            result.put( (String) entry.getKey(), ( (String) entry.getValue() ).trim() );\n-        }\n-\n-        return result;\n+      closeable.close();\n     }\n-\n-    /**\n-     * Loads a {@link Map} from an {@link InputStream} assuming strings as keys\n-     * and values. Any {@link IOException} is wrapped and thrown as a\n-     * {@link RuntimeException} instead.\n-     *\n-     * @param stream the {@link InputStream} containing a\n-     * {@link Properties}-like layout of keys and values.\n-     * @return the read data as a {@link Map}.\n-     */\n-    public static Map<String, String> loadStrictly( InputStream stream )\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code file} in a standard java\n+   * {@link Properties} format.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param file   the file to store the properties in.\n+   * @throws IOException IO error.\n+   */\n+  public static void store(Map<String, String> config, File file) throws IOException\n+  {\n+    OutputStream stream = null;\n+    try\n     {\n-        try\n-        {\n-            return load( stream );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n-\n-    /**\n-     * Loads a {@link Map} from a {@link File} assuming strings as keys\n-     * and values.\n-     *\n-     * @param file the {@link File} containing a {@link Properties}-like\n-     * layout of keys and values.\n-     * @return the read data as a {@link Map}.\n-     * @throws IOException if the file reader throws {@link IOException}.\n-     */\n-    public static Map<String, String> load( File file ) throws IOException\n+      stream = new BufferedOutputStream(new FileOutputStream(file));\n+      store(config, stream);\n+    } finally\n     {\n-        FileInputStream stream = null;\n-        try\n-        {\n-            stream = new FileInputStream( file );\n-            return load( stream );\n-        }\n-        finally\n-        {\n-            closeIfNotNull( stream );\n-        }\n+      closeIfNotNull(stream);\n     }\n-\n-    private static void closeIfNotNull( Closeable closeable ) throws IOException\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code file} in a standard java\n+   * {@link Properties} format. Any {@link IOException} is wrapped and thrown as a\n+   * {@link RuntimeException} instead.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param file   the file to store the properties in.\n+   */\n+  public static void storeStrictly(Map<String, String> config, File file)\n+  {\n+    try\n     {\n-        if ( closeable != null )\n-        {\n-            closeable.close();\n-        }\n-    }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code file} in a standard java\n-     * {@link Properties} format.\n-     * @param config the data to store in the properties file.\n-     * @param file the file to store the properties in.\n-     * @throws IOException IO error.\n-     */\n-    public static void store( Map<String, String> config, File file ) throws IOException\n+      store(config, file);\n+    } catch (IOException e)\n     {\n-        OutputStream stream = null;\n-        try\n-        {\n-            stream = new BufferedOutputStream( new FileOutputStream( file ) );\n-            store( config, stream );\n-        }\n-        finally\n-        {\n-            closeIfNotNull( stream );\n-        }\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code file} in a standard java\n-     * {@link Properties} format. Any {@link IOException} is wrapped and thrown as a\n-     * {@link RuntimeException} instead.\n-     * @param config the data to store in the properties file.\n-     * @param file the file to store the properties in.\n-     */\n-    public static void storeStrictly( Map<String, String> config, File file )\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code stream} in a standard java\n+   * {@link Properties} format.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param stream the {@link OutputStream} to store the properties in.\n+   * @throws IOException IO error.\n+   */\n+  public static void store(Map<String, String> config, OutputStream stream) throws IOException\n+  {\n+    Properties properties = new Properties();\n+    for (Map.Entry<String, String> property : config.entrySet())\n     {\n-        try\n-        {\n-            store( config, file );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      properties.setProperty(property.getKey(), property.getValue());\n     }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code stream} in a standard java\n-     * {@link Properties} format.\n-     * @param config the data to store in the properties file.\n-     * @param stream the {@link OutputStream} to store the properties in.\n-     * @throws IOException IO error.\n-     */\n-    public static void store( Map<String, String> config, OutputStream stream ) throws IOException\n+    properties.store(stream, null);\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code stream} in a standard java\n+   * {@link Properties} format. Any {@link IOException} is wrapped and thrown as a\n+   * {@link RuntimeException} instead.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param stream the {@link OutputStream} to store the properties in.\n+   */\n+  public static void storeStrictly(Map<String, String> config, OutputStream stream)\n+  {\n+    try\n     {\n-        Properties properties = new Properties();\n-        for ( Map.Entry<String, String> property : config.entrySet() )\n-        {\n-            properties.setProperty( property.getKey(), property.getValue() );\n-        }\n-        properties.store( stream, null );\n-    }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code stream} in a standard java\n-     * {@link Properties} format. Any {@link IOException} is wrapped and thrown as a\n-     * {@link RuntimeException} instead.\n-     * @param config the data to store in the properties file.\n-     * @param stream the {@link OutputStream} to store the properties in.\n-     */\n-    public static void storeStrictly( Map<String, String> config, OutputStream stream )\n+      store(config, stream);\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            store( config, stream );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code writer} in a standard java\n-     * {@link Properties} format.\n-     *\n-     * @param config the data to store in the properties file.\n-     * @param writer the {@link Writer} to store the properties in.\n-     * @throws IOException IO error.\n-     */\n-    public static void store( Map<String, String> config, Writer writer ) throws IOException\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code writer} in a standard java\n+   * {@link Properties} format.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param writer the {@link Writer} to store the properties in.\n+   * @throws IOException IO error.\n+   */\n+  public static void store(Map<String, String> config, Writer writer) throws IOException\n+  {\n+    Properties properties = new Properties();\n+    properties.putAll(config);\n+    properties.store(writer, null);\n+  }\n+\n+  /**\n+   * Stores the data in {@code config} into {@code writer} in a standard java\n+   * {@link Properties} format. Any {@link IOException} is wrapped and thrown\n+   * as a {@link RuntimeException} instead.\n+   *\n+   * @param config the data to store in the properties file.\n+   * @param writer the {@link Writer} to store the properties in.\n+   */\n+  public static void storeStrictly(Map<String, String> config, Writer writer)\n+  {\n+    try\n     {\n-        Properties properties = new Properties();\n-        properties.putAll( config );\n-        properties.store( writer, null );\n-    }\n-\n-    /**\n-     * Stores the data in {@code config} into {@code writer} in a standard java\n-     * {@link Properties} format. Any {@link IOException} is wrapped and thrown\n-     * as a {@link RuntimeException} instead.\n-     *\n-     * @param config the data to store in the properties file.\n-     * @param writer the {@link Writer} to store the properties in.\n-     */\n-    public static void storeStrictly( Map<String, String> config, Writer writer )\n+      store(config, writer);\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            store( config, writer );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw new RuntimeException(e);\n     }\n-\n-    /**\n-     * Reversed a map, making the key value and the value key.\n-     * @param <K> the type of key in the map to reverse. These will be the\n-     * values in the returned map.\n-     * @param <V> the type of values in the map to revert. These will be the\n-     * keys in the returned map.\n-     * @param map the {@link Map} to reverse.\n-     * @return the reverse of {@code map}. A new {@link Map} will be returned\n-     * where the keys from {@code map} will be the values and the values will\n-     * be the keys.\n-     */\n-    public static <K, V> Map<V, K> reverse( Map<K, V> map )\n+  }\n+\n+  /**\n+   * Reversed a map, making the key value and the value key.\n+   *\n+   * @param <K> the type of key in the map to reverse. These will be the\n+   *            values in the returned map.\n+   * @param <V> the type of values in the map to revert. These will be the\n+   *            keys in the returned map.\n+   * @param map the {@link Map} to reverse.\n+   * @return the reverse of {@code map}. A new {@link Map} will be returned\n+   * where the keys from {@code map} will be the values and the values will\n+   * be the keys.\n+   */\n+  public static <K, V> Map<V, K> reverse(Map<K, V> map)\n+  {\n+    Map<V, K> reversedMap = new HashMap<>();\n+    for (Map.Entry<K, V> entry : map.entrySet())\n     {\n-        Map<V, K> reversedMap = new HashMap<>();\n-        for ( Map.Entry<K, V> entry : map.entrySet() )\n-        {\n-            reversedMap.put( entry.getValue(), entry.getKey() );\n-        }\n-        return reversedMap;\n+      reversedMap.put(entry.getValue(), entry.getKey());\n     }\n-\n-    public static <K, V> Map<K,V> copyAndPut( Map<K,V> map, K key, V value )\n+    return reversedMap;\n+  }\n+\n+  public static <K, V> Map<K, V> copyAndPut(Map<K, V> map, K key, V value)\n+  {\n+    Map<K, V> copy = new HashMap<>(map);\n+    copy.put(key, value);\n+    return copy;\n+  }\n+\n+  public static <K, V> Map<K, V> copyAndRemove(Map<K, V> map, K key)\n+  {\n+    Map<K, V> copy = new HashMap<>(map);\n+    copy.remove(key);\n+    return copy;\n+  }\n+\n+  public static <K, V> Map<K, V> toMap(Iterable<Pair<K, V>> pairs)\n+  {\n+    return toMap(pairs.iterator());\n+  }\n+\n+  public static <K, V> Map<K, V> toMap(Iterator<Pair<K, V>> pairs)\n+  {\n+    Map<K, V> result = new HashMap<>();\n+    while (pairs.hasNext())\n     {\n-        Map<K,V> copy = new HashMap<>( map );\n-        copy.put( key, value );\n-        return copy;\n+      Pair<K, V> pair = pairs.next();\n+      result.put(pair.first(), pair.other());\n     }\n+    return result;\n+  }\n \n-    public static <K, V> Map<K,V> copyAndRemove( Map<K,V> map, K key )\n-    {\n-        Map<K,V> copy = new HashMap<>( map );\n-        copy.remove( key );\n-        return copy;\n-    }\n+  public static <K, V> MapBuilder<K, V> entry(K key, V value)\n+  {\n+    return new MapBuilder<K, V>().entry(key, value);\n+  }\n \n-    public static <K,V> Map<K, V> toMap( Iterable<Pair<K, V>> pairs )\n-    {\n-        return toMap( pairs.iterator() );\n-    }\n-\n-    public static <K,V> Map<K, V> toMap( Iterator<Pair<K, V>> pairs )\n-    {\n-        Map<K,V> result = new HashMap<>();\n-        while ( pairs.hasNext() )\n-        {\n-            Pair<K,V> pair = pairs.next();\n-            result.put( pair.first(), pair.other() );\n-        }\n-        return result;\n-    }\n-\n-    public static <K, V> MapBuilder<K, V> entry( K key, V value )\n-    {\n-        return new MapBuilder<K, V>().entry( key, value );\n-    }\n-\n-    public static class MapBuilder<K, V>\n-    {\n-        private final Map<K, V> map = new HashMap<>();\n-\n-        public MapBuilder<K, V> entry( K key, V value )\n-        {\n-            map.put( key, value );\n-            return this;\n-        }\n-\n-        public Map<K, V> create()\n-        {\n-            return map;\n-        }\n-    }\n-\n-    /**\n-     * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n-     * the keyExtractor.\n-     * @param map the map to mutate.\n-     * @param newBackingData the backing data to retain.\n-     * @param keyExtractor the function to extract keys from the backing data.\n-     * @param <K> type of the key in the input map.\n-     * @param <V> type of the values in the input map.\n-     * @param <T> type of the keys in the new baking data.\n-     */\n-    public static <K, V, T> void trimToList( Map<K,V> map, List<T> newBackingData, Function<T,K> keyExtractor )\n-    {\n-        Set<K> retainedKeys = newBackingData.stream().map( keyExtractor ).collect( Collectors.toSet() );\n-        trimToList( map, retainedKeys );\n-    }\n+  public static class MapBuilder<K, V>\n+  {\n+    private final Map<K, V> map = new HashMap<>();\n \n-    /**\n-     * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n-     * the keyExtractor.\n-     * @param map the map to mutate.\n-     * @param newBackingData the backing data to retain.\n-     * @param keyExtractor the function to extract keys from the backing data.\n-     * @param <K> type of the key in the input map.\n-     * @param <V> type of the values in the input map.\n-     * @param <T> type of the keys in the new backing data.\n-     */\n-    public static <K, V, T> void trimToFlattenedList( Map<K,V> map, List<T> newBackingData,\n-            Function<T,Stream<K>> keyExtractor )\n+    public MapBuilder<K, V> entry(K key, V value)\n     {\n-        Set<K> retainedKeys = newBackingData.stream().flatMap( keyExtractor ).collect( Collectors.toSet() );\n-        trimToList( map, retainedKeys );\n+      map.put(key, value);\n+      return this;\n     }\n \n-    /**\n-     * Mutates the input map by removing entries which are not in the retained set of keys.\n-     * @param map the map to mutate.\n-     * @param retainedKeys the keys to retain.\n-     * @param <K> type of the key.\n-     * @param <V> type of the values.\n-     */\n-    public static <K, V> void trimToList( Map<K,V> map, Set<K> retainedKeys )\n+    public Map<K, V> create()\n     {\n-        Set<K> keysToRemove = new HashSet<>( map.keySet() );\n-        keysToRemove.removeAll( retainedKeys );\n-        keysToRemove.forEach( map::remove );\n+      return map;\n     }\n+  }\n+\n+  /**\n+   * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n+   * the keyExtractor.\n+   *\n+   * @param map            the map to mutate.\n+   * @param newBackingData the backing data to retain.\n+   * @param keyExtractor   the function to extract keys from the backing data.\n+   * @param <K>            type of the key in the input map.\n+   * @param <V>            type of the values in the input map.\n+   * @param <T>            type of the keys in the new baking data.\n+   */\n+  public static <K, V, T> void trimToList(Map<K, V> map, List<T> newBackingData, Function<T, K> keyExtractor)\n+  {\n+    Set<K> retainedKeys = newBackingData.stream().map(keyExtractor).collect(Collectors.toSet());\n+    trimToList(map, retainedKeys);\n+  }\n+\n+  /**\n+   * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n+   * the keyExtractor.\n+   *\n+   * @param map            the map to mutate.\n+   * @param newBackingData the backing data to retain.\n+   * @param keyExtractor   the function to extract keys from the backing data.\n+   * @param <K>            type of the key in the input map.\n+   * @param <V>            type of the values in the input map.\n+   * @param <T>            type of the keys in the new backing data.\n+   */\n+  public static <K, V, T> void trimToFlattenedList(Map<K, V> map, List<T> newBackingData,\n+                                                   Function<T, Stream<K>> keyExtractor)\n+  {\n+    Set<K> retainedKeys = newBackingData.stream().flatMap(keyExtractor).collect(Collectors.toSet());\n+    trimToList(map, retainedKeys);\n+  }\n+\n+  /**\n+   * Mutates the input map by removing entries which are not in the retained set of keys.\n+   *\n+   * @param map          the map to mutate.\n+   * @param retainedKeys the keys to retain.\n+   * @param <K>          type of the key.\n+   * @param <V>          type of the values.\n+   */\n+  public static <K, V> void trimToList(Map<K, V> map, Set<K> retainedKeys)\n+  {\n+    Set<K> keysToRemove = new HashSet<>(map.keySet());\n+    keysToRemove.removeAll(retainedKeys);\n+    keysToRemove.forEach(map::remove);\n+  }\n }\n",
            "diff_size": 620
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/21/MapUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/21/MapUtil.java\nindex 51b3734326d..ed876c5fac2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/21/MapUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/21/MapUtil.java\n@@ -53,7 +53,7 @@ public abstract class MapUtil\n      * @param <V> type of values\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static <K, V> Map<K, V> genericMap( Object... objects )\n+    public static <K,V> Map<K,V> genericMap( Object... objects )\n     {\n         return genericMap( new HashMap<K, V>(), objects );\n     }\n@@ -68,14 +68,15 @@ public abstract class MapUtil\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n     @SuppressWarnings( \"unchecked\" )\n-    public static <K, V> Map<K,V> genericMap( Map<K,V> targetMap, Object... objects )\n+    public static <K,V> Map<K,V> genericMap( Map<K,V> targetMap, Object... objects )\n     {\n         int i = 0;\n         while ( i < objects.length )\n         {\n             targetMap.put( (K) objects[i++], (V) objects[i++] );\n         }\n-        return targetMap;\n+\n+return targetMap;\n     }\n \n     /**\n@@ -85,7 +86,7 @@ public abstract class MapUtil\n      * @param strings alternating key and value.\n      * @return a Map with the entries supplied by {@code strings}.\n      */\n-    public static Map<String, String> stringMap( String... strings )\n+    public static Map<String,String> stringMap( String... strings )\n     {\n         return genericMap( (Object[]) strings );\n     }\n@@ -98,7 +99,7 @@ public abstract class MapUtil\n      * @param strings alternating key and value.\n      * @return a Map with the entries supplied by {@code strings}.\n      */\n-    public static Map<String, String> stringMap( Map<String, String> targetMap,\n+    public static Map<String,String> stringMap( Map<String,String> targetMap,\n             String... strings )\n     {\n         return genericMap( targetMap, (Object[]) strings );\n@@ -111,7 +112,7 @@ public abstract class MapUtil\n      * @param objects alternating key and value.\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static Map<String, Object> map( Object... objects )\n+    public static Map<String,Object> map( Object... objects )\n     {\n         return genericMap( objects );\n     }\n@@ -124,7 +125,7 @@ public abstract class MapUtil\n      * @param objects alternating key and value.\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static Map<String, Object> map( Map<String, Object> targetMap,\n+    public static Map<String,Object> map( Map<String,Object> targetMap,\n             Object... objects )\n     {\n         return genericMap( targetMap, objects );\n@@ -139,7 +140,7 @@ public abstract class MapUtil\n      * @return the read data as a {@link Map}.\n      * @throws IOException if the {@code reader} throws {@link IOException}.\n      */\n-    public static Map<String, String> load( Reader reader ) throws IOException\n+    public static Map<String,String> load( Reader reader ) throws IOException\n     {\n         Properties props = new Properties();\n         props.load( reader );\n@@ -156,7 +157,7 @@ public abstract class MapUtil\n      * layout of keys and values.\n      * @return the read data as a {@link Map}.\n      */\n-    public static Map<String, String> loadStrictly( Reader reader )\n+    public static Map<String,String> loadStrictly( Reader reader )\n     {\n         try\n         {\n@@ -201,7 +202,7 @@ public abstract class MapUtil\n      * {@link Properties}-like layout of keys and values.\n      * @return the read data as a {@link Map}.\n      */\n-    public static Map<String, String> loadStrictly( InputStream stream )\n+    public static Map<String,String> loadStrictly( InputStream stream )\n     {\n         try\n         {\n@@ -222,7 +223,7 @@ public abstract class MapUtil\n      * @return the read data as a {@link Map}.\n      * @throws IOException if the file reader throws {@link IOException}.\n      */\n-    public static Map<String, String> load( File file ) throws IOException\n+    public static Map<String,String> load( File file ) throws IOException\n     {\n         FileInputStream stream = null;\n         try\n@@ -251,7 +252,7 @@ public abstract class MapUtil\n      * @param file the file to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, File file ) throws IOException\n+    public static void store( Map<String,String> config, File file ) throws IOException\n     {\n         OutputStream stream = null;\n         try\n@@ -272,7 +273,7 @@ public abstract class MapUtil\n      * @param config the data to store in the properties file.\n      * @param file the file to store the properties in.\n      */\n-    public static void storeStrictly( Map<String, String> config, File file )\n+    public static void storeStrictly( Map<String,String> config, File file )\n     {\n         try\n         {\n@@ -291,10 +292,10 @@ public abstract class MapUtil\n      * @param stream the {@link OutputStream} to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, OutputStream stream ) throws IOException\n+    public static void store( Map<String,String> config, OutputStream stream ) throws IOException\n     {\n         Properties properties = new Properties();\n-        for ( Map.Entry<String, String> property : config.entrySet() )\n+        for ( Map.Entry<String,String> property : config.entrySet() )\n         {\n             properties.setProperty( property.getKey(), property.getValue() );\n         }\n@@ -308,7 +309,7 @@ public abstract class MapUtil\n      * @param config the data to store in the properties file.\n      * @param stream the {@link OutputStream} to store the properties in.\n      */\n-    public static void storeStrictly( Map<String, String> config, OutputStream stream )\n+    public static void storeStrictly( Map<String,String> config, OutputStream stream )\n     {\n         try\n         {\n@@ -328,7 +329,7 @@ public abstract class MapUtil\n      * @param writer the {@link Writer} to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, Writer writer ) throws IOException\n+    public static void store( Map<String,String> config, Writer writer ) throws IOException\n     {\n         Properties properties = new Properties();\n         properties.putAll( config );\n@@ -343,7 +344,7 @@ public abstract class MapUtil\n      * @param config the data to store in the properties file.\n      * @param writer the {@link Writer} to store the properties in.\n      */\n-    public static void storeStrictly( Map<String, String> config, Writer writer )\n+    public static void storeStrictly( Map<String,String> config, Writer writer )\n     {\n         try\n         {\n@@ -366,36 +367,37 @@ public abstract class MapUtil\n      * where the keys from {@code map} will be the values and the values will\n      * be the keys.\n      */\n-    public static <K, V> Map<V, K> reverse( Map<K, V> map )\n+    public static <K,V> Map<V,K> reverse( Map<K,V> map )\n     {\n-        Map<V, K> reversedMap = new HashMap<>();\n-        for ( Map.Entry<K, V> entry : map.entrySet() )\n+        Map<V,K> reversedMap = new HashMap<>();\n+        for ( Map.Entry<K,V> entry : map.entrySet() )\n         {\n             reversedMap.put( entry.getValue(), entry.getKey() );\n         }\n-        return reversedMap;\n+\n+return reversedMap;\n     }\n \n-    public static <K, V> Map<K,V> copyAndPut( Map<K,V> map, K key, V value )\n+    public static <K,V> Map<K,V> copyAndPut( Map<K,V> map, K key, V value )\n     {\n         Map<K,V> copy = new HashMap<>( map );\n         copy.put( key, value );\n         return copy;\n     }\n \n-    public static <K, V> Map<K,V> copyAndRemove( Map<K,V> map, K key )\n+    public static <K,V> Map<K,V> copyAndRemove( Map<K,V> map, K key )\n     {\n         Map<K,V> copy = new HashMap<>( map );\n         copy.remove( key );\n         return copy;\n     }\n \n-    public static <K,V> Map<K, V> toMap( Iterable<Pair<K, V>> pairs )\n+    public static <K,V> Map<K,V> toMap( Iterable<Pair<K, V>> pairs )\n     {\n         return toMap( pairs.iterator() );\n     }\n \n-    public static <K,V> Map<K, V> toMap( Iterator<Pair<K, V>> pairs )\n+    public static <K,V> Map<K,V> toMap( Iterator<Pair<K, V>> pairs )\n     {\n         Map<K,V> result = new HashMap<>();\n         while ( pairs.hasNext() )\n@@ -403,25 +405,26 @@ public abstract class MapUtil\n             Pair<K,V> pair = pairs.next();\n             result.put( pair.first(), pair.other() );\n         }\n-        return result;\n+\n+return result;\n     }\n \n-    public static <K, V> MapBuilder<K, V> entry( K key, V value )\n+    public static <K,V> MapBuilder<K,V> entry( K key, V value )\n     {\n         return new MapBuilder<K, V>().entry( key, value );\n     }\n \n     public static class MapBuilder<K, V>\n     {\n-        private final Map<K, V> map = new HashMap<>();\n+        private final Map<K,V> map = new HashMap<>();\n \n-        public MapBuilder<K, V> entry( K key, V value )\n+        public MapBuilder<K,V> entry( K key, V value )\n         {\n             map.put( key, value );\n             return this;\n         }\n \n-        public Map<K, V> create()\n+        public Map<K,V> create()\n         {\n             return map;\n         }\n@@ -453,8 +456,7 @@ public abstract class MapUtil\n      * @param <V> type of the values in the input map.\n      * @param <T> type of the keys in the new backing data.\n      */\n-    public static <K, V, T> void trimToFlattenedList( Map<K,V> map, List<T> newBackingData,\n-            Function<T,Stream<K>> keyExtractor )\n+    public static <K, V, T> void trimToFlattenedList( Map<K,V> map, List<T> newBackingData, Function<T,Stream<K>> keyExtractor )\n     {\n         Set<K> retainedKeys = newBackingData.stream().flatMap( keyExtractor ).collect( Collectors.toSet() );\n         trimToList( map, retainedKeys );\n@@ -467,10 +469,10 @@ public abstract class MapUtil\n      * @param <K> type of the key.\n      * @param <V> type of the values.\n      */\n-    public static <K, V> void trimToList( Map<K,V> map, Set<K> retainedKeys )\n+    public static <K,V> void trimToList( Map<K,V> map, Set<K> retainedKeys )\n     {\n         Set<K> keysToRemove = new HashSet<>( map.keySet() );\n         keysToRemove.removeAll( retainedKeys );\n         keysToRemove.forEach( map::remove );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
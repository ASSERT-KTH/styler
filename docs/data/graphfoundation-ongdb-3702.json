{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3702",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "80",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3702/Outcome.java\nindex 9d117b00776..c06a07f2c1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3702/Outcome.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.outcome;\n \n import java.util.ArrayList;\n@@ -39,350 +40,350 @@ import static java.util.Collections.emptySet;\n  * Holds the outcome of a RAFT role's handling of a message. The role handling logic is stateless\n  * and responds to RAFT messages in the context of a supplied state. The outcome is later consumed\n  * to update the state and do operations embedded as commands within the outcome.\n- *\n+ * <p>\n  * A state update could be to change role, change term, etc.\n  * A command could be to append to the RAFT log, tell the log shipper that there was a mismatch, etc.\n  */\n public class Outcome implements Message, ConsensusOutcome\n {\n-    /* Common */\n-    private Role nextRole;\n-\n-    private long term;\n-    private MemberId leader;\n-\n-    private long leaderCommit;\n-\n-    private Collection<RaftLogCommand> logCommands = new ArrayList<>();\n-    private Collection<RaftMessages.Directed> outgoingMessages = new ArrayList<>();\n-\n-    private long commitIndex;\n-\n-    /* Follower */\n-    private MemberId votedFor;\n-    private boolean renewElectionTimeout;\n-    private boolean needsFreshSnapshot;\n-    private boolean isPreElection;\n-    private Set<MemberId> preVotesForMe;\n-\n-    /* Candidate */\n-    private Set<MemberId> votesForMe;\n-    private long lastLogIndexBeforeWeBecameLeader;\n-\n-    /* Leader */\n-    private FollowerStates<MemberId> followerStates;\n-    private Collection<ShipCommand> shipCommands = new ArrayList<>();\n-    private boolean electedLeader;\n-    private OptionalLong steppingDownInTerm;\n-    private Set<MemberId> heartbeatResponses;\n-\n-    public Outcome( Role currentRole, ReadableRaftState ctx )\n-    {\n-        defaults( currentRole, ctx );\n-    }\n-\n-    public Outcome( Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor,\n-                    Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader,\n-                    FollowerStates<MemberId> followerStates, boolean renewElectionTimeout,\n-                    Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages,\n-                    Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection )\n-    {\n-        this.nextRole = nextRole;\n-        this.term = term;\n-        this.leader = leader;\n-        this.leaderCommit = leaderCommit;\n-        this.votedFor = votedFor;\n-        this.votesForMe = new HashSet<>( votesForMe );\n-        this.preVotesForMe = new HashSet<>( preVotesForMe );\n-        this.lastLogIndexBeforeWeBecameLeader = lastLogIndexBeforeWeBecameLeader;\n-        this.followerStates = followerStates;\n-        this.renewElectionTimeout = renewElectionTimeout;\n-        this.heartbeatResponses = new HashSet<>( heartbeatResponses );\n-\n-        this.logCommands.addAll( logCommands );\n-        this.outgoingMessages.addAll( outgoingMessages );\n-        this.shipCommands.addAll( shipCommands );\n-        this.commitIndex = commitIndex;\n-        this.isPreElection = isPreElection;\n-        this.steppingDownInTerm = OptionalLong.empty();\n-    }\n-\n-    private void defaults( Role currentRole, ReadableRaftState ctx )\n-    {\n-        nextRole = currentRole;\n-\n-        term = ctx.term();\n-        leader = ctx.leader();\n-\n-        leaderCommit = ctx.leaderCommit();\n-\n-        votedFor = ctx.votedFor();\n-        renewElectionTimeout = false;\n-        needsFreshSnapshot = false;\n-\n-        isPreElection = (currentRole == Role.FOLLOWER) && ctx.isPreElection();\n-        steppingDownInTerm = OptionalLong.empty();\n-        preVotesForMe = isPreElection ? new HashSet<>( ctx.preVotesForMe() ) : emptySet();\n-        votesForMe = (currentRole == Role.CANDIDATE) ? new HashSet<>( ctx.votesForMe() ) : emptySet();\n-        heartbeatResponses = (currentRole == Role.LEADER) ? new HashSet<>( ctx.heartbeatResponses() ) : emptySet();\n-\n-        lastLogIndexBeforeWeBecameLeader = (currentRole == Role.LEADER) ? ctx.lastLogIndexBeforeWeBecameLeader() : -1;\n-        followerStates = (currentRole == Role.LEADER) ? ctx.followerStates() : new FollowerStates<>();\n-\n-        commitIndex = ctx.commitIndex();\n-    }\n-\n-    public void setNextRole( Role nextRole )\n-    {\n-        this.nextRole = nextRole;\n-    }\n-\n-    public void setNextTerm( long nextTerm )\n-    {\n-        this.term = nextTerm;\n-    }\n-\n-    public void setLeader( MemberId leader )\n-    {\n-        this.leader = leader;\n-    }\n-\n-    public void setLeaderCommit( long leaderCommit )\n-    {\n-        this.leaderCommit = leaderCommit;\n-    }\n-\n-    public void addLogCommand( RaftLogCommand logCommand )\n-    {\n-        this.logCommands.add( logCommand );\n-    }\n-\n-    public void addOutgoingMessage( RaftMessages.Directed message )\n-    {\n-        this.outgoingMessages.add( message );\n-    }\n-\n-    public void setVotedFor( MemberId votedFor )\n-    {\n-        this.votedFor = votedFor;\n-    }\n-\n-    public void renewElectionTimeout()\n-    {\n-        this.renewElectionTimeout = true;\n-    }\n-\n-    public void markNeedForFreshSnapshot()\n-    {\n-        this.needsFreshSnapshot = true;\n-    }\n-\n-    public void addVoteForMe( MemberId voteFrom )\n-    {\n-        this.votesForMe.add( voteFrom );\n-    }\n-\n-    public void setLastLogIndexBeforeWeBecameLeader( long lastLogIndexBeforeWeBecameLeader )\n-    {\n-        this.lastLogIndexBeforeWeBecameLeader = lastLogIndexBeforeWeBecameLeader;\n-    }\n-\n-    public void replaceFollowerStates( FollowerStates<MemberId> followerStates )\n-    {\n-        this.followerStates = followerStates;\n-    }\n-\n-    public void addShipCommand( ShipCommand shipCommand )\n-    {\n-        shipCommands.add( shipCommand );\n-    }\n-\n-    public void electedLeader()\n-    {\n-        assert !isSteppingDown();\n-        this.electedLeader = true;\n-    }\n-\n-    public void steppingDown( long stepDownTerm )\n-    {\n-        assert !electedLeader;\n-        steppingDownInTerm = OptionalLong.of( stepDownTerm );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"Outcome{\" +\n-               \"nextRole=\" + nextRole +\n-               \", term=\" + term +\n-               \", leader=\" + leader +\n-               \", leaderCommit=\" + leaderCommit +\n-               \", logCommands=\" + logCommands +\n-               \", outgoingMessages=\" + outgoingMessages +\n-               \", commitIndex=\" + commitIndex +\n-               \", votedFor=\" + votedFor +\n-               \", renewElectionTimeout=\" + renewElectionTimeout +\n-               \", needsFreshSnapshot=\" + needsFreshSnapshot +\n-               \", votesForMe=\" + votesForMe +\n-               \", preVotesForMe=\" + preVotesForMe +\n-               \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader +\n-               \", followerStates=\" + followerStates +\n-               \", shipCommands=\" + shipCommands +\n-               \", electedLeader=\" + electedLeader +\n-               \", steppingDownInTerm=\" + steppingDownInTerm +\n-               '}';\n-    }\n-\n-    public Role getRole()\n-    {\n-        return nextRole;\n-    }\n-\n-    public long getTerm()\n-    {\n-        return term;\n-    }\n-\n-    public MemberId getLeader()\n-    {\n-        return leader;\n-    }\n-\n-    public long getLeaderCommit()\n-    {\n-        return leaderCommit;\n-    }\n-\n-    public Collection<RaftLogCommand> getLogCommands()\n-    {\n-        return logCommands;\n-    }\n-\n-    public Collection<RaftMessages.Directed> getOutgoingMessages()\n-    {\n-        return outgoingMessages;\n-    }\n-\n-    public MemberId getVotedFor()\n-    {\n-        return votedFor;\n-    }\n-\n-    public boolean electionTimeoutRenewed()\n-    {\n-        return renewElectionTimeout;\n-    }\n-\n-    @Override\n-    public boolean needsFreshSnapshot()\n-    {\n-        return needsFreshSnapshot;\n-    }\n-\n-    public Set<MemberId> getVotesForMe()\n-    {\n-        return votesForMe;\n-    }\n-\n-    public long getLastLogIndexBeforeWeBecameLeader()\n-    {\n-        return lastLogIndexBeforeWeBecameLeader;\n-    }\n-\n-    public FollowerStates<MemberId> getFollowerStates()\n-    {\n-        return followerStates;\n-    }\n-\n-    public Collection<ShipCommand> getShipCommands()\n-    {\n-        return shipCommands;\n-    }\n-\n-    public boolean isElectedLeader()\n-    {\n-        return electedLeader;\n-    }\n-\n-    public boolean isSteppingDown()\n-    {\n-        return steppingDownInTerm.isPresent();\n-    }\n-\n-    public OptionalLong stepDownTerm()\n-    {\n-        return steppingDownInTerm;\n-    }\n-\n-    @Override\n-    public long getCommitIndex()\n-    {\n-        return commitIndex;\n-    }\n-\n-    public void setCommitIndex( long commitIndex )\n-    {\n-        this.commitIndex = commitIndex;\n-    }\n-\n-    public void addHeartbeatResponse( MemberId from )\n-    {\n-        this.heartbeatResponses.add( from );\n-    }\n-\n-    public Set<MemberId> getHeartbeatResponses()\n-    {\n-        return heartbeatResponses;\n-    }\n-\n-    public void setPreElection( boolean isPreElection )\n-    {\n-        this.isPreElection = isPreElection;\n-    }\n-\n-    public boolean isPreElection()\n-    {\n-        return isPreElection;\n-    }\n-\n-    public void addPreVoteForMe( MemberId from )\n-    {\n-        this.preVotesForMe.add( from );\n-    }\n-\n-    public Set<MemberId> getPreVotesForMe()\n-    {\n-        return preVotesForMe;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        Outcome outcome = (Outcome) o;\n-        return term == outcome.term && leaderCommit == outcome.leaderCommit && commitIndex == outcome.commitIndex &&\n-                renewElectionTimeout == outcome.renewElectionTimeout && needsFreshSnapshot == outcome.needsFreshSnapshot &&\n-                isPreElection == outcome.isPreElection && lastLogIndexBeforeWeBecameLeader == outcome.lastLogIndexBeforeWeBecameLeader &&\n-                electedLeader == outcome.electedLeader && nextRole == outcome.nextRole &&\n-                Objects.equals( steppingDownInTerm, outcome.steppingDownInTerm ) && Objects.equals( leader, outcome.leader ) &&\n-                Objects.equals( logCommands, outcome.logCommands ) && Objects.equals( outgoingMessages, outcome.outgoingMessages ) &&\n-                Objects.equals( votedFor, outcome.votedFor ) && Objects.equals( preVotesForMe, outcome.preVotesForMe ) &&\n-                Objects.equals( votesForMe, outcome.votesForMe ) && Objects.equals( followerStates, outcome.followerStates ) &&\n-                Objects.equals( shipCommands, outcome.shipCommands ) && Objects.equals( heartbeatResponses, outcome.heartbeatResponses );\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return Objects.hash( nextRole, term, leader, leaderCommit, logCommands, outgoingMessages, commitIndex, votedFor, renewElectionTimeout,\n-                needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader,\n-                steppingDownInTerm, heartbeatResponses );\n-    }\n+  /* Common */\n+  private Role nextRole;\n+\n+  private long term;\n+  private MemberId leader;\n+\n+  private long leaderCommit;\n+\n+  private Collection<RaftLogCommand> logCommands = new ArrayList<>();\n+  private Collection<RaftMessages.Directed> outgoingMessages = new ArrayList<>();\n+\n+  private long commitIndex;\n+\n+  /* Follower */\n+  private MemberId votedFor;\n+  private boolean renewElectionTimeout;\n+  private boolean needsFreshSnapshot;\n+  private boolean isPreElection;\n+  private Set<MemberId> preVotesForMe;\n+\n+  /* Candidate */\n+  private Set<MemberId> votesForMe;\n+  private long lastLogIndexBeforeWeBecameLeader;\n+\n+  /* Leader */\n+  private FollowerStates<MemberId> followerStates;\n+  private Collection<ShipCommand> shipCommands = new ArrayList<>();\n+  private boolean electedLeader;\n+  private OptionalLong steppingDownInTerm;\n+  private Set<MemberId> heartbeatResponses;\n+\n+  public Outcome(Role currentRole, ReadableRaftState ctx)\n+  {\n+    defaults(currentRole, ctx);\n+  }\n+\n+  public Outcome(Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor,\n+                 Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader,\n+                 FollowerStates<MemberId> followerStates, boolean renewElectionTimeout,\n+                 Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages,\n+                 Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection)\n+  {\n+    this.nextRole = nextRole;\n+    this.term = term;\n+    this.leader = leader;\n+    this.leaderCommit = leaderCommit;\n+    this.votedFor = votedFor;\n+    this.votesForMe = new HashSet<>(votesForMe);\n+    this.preVotesForMe = new HashSet<>(preVotesForMe);\n+    this.lastLogIndexBeforeWeBecameLeader = lastLogIndexBeforeWeBecameLeader;\n+    this.followerStates = followerStates;\n+    this.renewElectionTimeout = renewElectionTimeout;\n+    this.heartbeatResponses = new HashSet<>(heartbeatResponses);\n+\n+    this.logCommands.addAll(logCommands);\n+    this.outgoingMessages.addAll(outgoingMessages);\n+    this.shipCommands.addAll(shipCommands);\n+    this.commitIndex = commitIndex;\n+    this.isPreElection = isPreElection;\n+    this.steppingDownInTerm = OptionalLong.empty();\n+  }\n+\n+  private void defaults(Role currentRole, ReadableRaftState ctx)\n+  {\n+    nextRole = currentRole;\n+\n+    term = ctx.term();\n+    leader = ctx.leader();\n+\n+    leaderCommit = ctx.leaderCommit();\n+\n+    votedFor = ctx.votedFor();\n+    renewElectionTimeout = false;\n+    needsFreshSnapshot = false;\n+\n+    isPreElection = (currentRole == Role.FOLLOWER) && ctx.isPreElection();\n+    steppingDownInTerm = OptionalLong.empty();\n+    preVotesForMe = isPreElection ? new HashSet<>(ctx.preVotesForMe()) : emptySet();\n+    votesForMe = (currentRole == Role.CANDIDATE) ? new HashSet<>(ctx.votesForMe()) : emptySet();\n+    heartbeatResponses = (currentRole == Role.LEADER) ? new HashSet<>(ctx.heartbeatResponses()) : emptySet();\n+\n+    lastLogIndexBeforeWeBecameLeader = (currentRole == Role.LEADER) ? ctx.lastLogIndexBeforeWeBecameLeader() : -1;\n+    followerStates = (currentRole == Role.LEADER) ? ctx.followerStates() : new FollowerStates<>();\n+\n+    commitIndex = ctx.commitIndex();\n+  }\n+\n+  public void setNextRole(Role nextRole)\n+  {\n+    this.nextRole = nextRole;\n+  }\n+\n+  public void setNextTerm(long nextTerm)\n+  {\n+    this.term = nextTerm;\n+  }\n+\n+  public void setLeader(MemberId leader)\n+  {\n+    this.leader = leader;\n+  }\n+\n+  public void setLeaderCommit(long leaderCommit)\n+  {\n+    this.leaderCommit = leaderCommit;\n+  }\n+\n+  public void addLogCommand(RaftLogCommand logCommand)\n+  {\n+    this.logCommands.add(logCommand);\n+  }\n+\n+  public void addOutgoingMessage(RaftMessages.Directed message)\n+  {\n+    this.outgoingMessages.add(message);\n+  }\n+\n+  public void setVotedFor(MemberId votedFor)\n+  {\n+    this.votedFor = votedFor;\n+  }\n+\n+  public void renewElectionTimeout()\n+  {\n+    this.renewElectionTimeout = true;\n+  }\n+\n+  public void markNeedForFreshSnapshot()\n+  {\n+    this.needsFreshSnapshot = true;\n+  }\n+\n+  public void addVoteForMe(MemberId voteFrom)\n+  {\n+    this.votesForMe.add(voteFrom);\n+  }\n+\n+  public void setLastLogIndexBeforeWeBecameLeader(long lastLogIndexBeforeWeBecameLeader)\n+  {\n+    this.lastLogIndexBeforeWeBecameLeader = lastLogIndexBeforeWeBecameLeader;\n+  }\n+\n+  public void replaceFollowerStates(FollowerStates<MemberId> followerStates)\n+  {\n+    this.followerStates = followerStates;\n+  }\n+\n+  public void addShipCommand(ShipCommand shipCommand)\n+  {\n+    shipCommands.add(shipCommand);\n+  }\n+\n+  public void electedLeader()\n+  {\n+    assert !isSteppingDown();\n+    this.electedLeader = true;\n+  }\n+\n+  public void steppingDown(long stepDownTerm)\n+  {\n+    assert !electedLeader;\n+    steppingDownInTerm = OptionalLong.of(stepDownTerm);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Outcome{\" +\n+        \"nextRole=\" + nextRole +\n+        \", term=\" + term +\n+        \", leader=\" + leader +\n+        \", leaderCommit=\" + leaderCommit +\n+        \", logCommands=\" + logCommands +\n+        \", outgoingMessages=\" + outgoingMessages +\n+        \", commitIndex=\" + commitIndex +\n+        \", votedFor=\" + votedFor +\n+        \", renewElectionTimeout=\" + renewElectionTimeout +\n+        \", needsFreshSnapshot=\" + needsFreshSnapshot +\n+        \", votesForMe=\" + votesForMe +\n+        \", preVotesForMe=\" + preVotesForMe +\n+        \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader +\n+        \", followerStates=\" + followerStates +\n+        \", shipCommands=\" + shipCommands +\n+        \", electedLeader=\" + electedLeader +\n+        \", steppingDownInTerm=\" + steppingDownInTerm +\n+        '}';\n+  }\n+\n+  public Role getRole()\n+  {\n+    return nextRole;\n+  }\n+\n+  public long getTerm()\n+  {\n+    return term;\n+  }\n+\n+  public MemberId getLeader()\n+  {\n+    return leader;\n+  }\n+\n+  public long getLeaderCommit()\n+  {\n+    return leaderCommit;\n+  }\n+\n+  public Collection<RaftLogCommand> getLogCommands()\n+  {\n+    return logCommands;\n+  }\n+\n+  public Collection<RaftMessages.Directed> getOutgoingMessages()\n+  {\n+    return outgoingMessages;\n+  }\n+\n+  public MemberId getVotedFor()\n+  {\n+    return votedFor;\n+  }\n+\n+  public boolean electionTimeoutRenewed()\n+  {\n+    return renewElectionTimeout;\n+  }\n+\n+  @Override\n+  public boolean needsFreshSnapshot()\n+  {\n+    return needsFreshSnapshot;\n+  }\n+\n+  public Set<MemberId> getVotesForMe()\n+  {\n+    return votesForMe;\n+  }\n+\n+  public long getLastLogIndexBeforeWeBecameLeader()\n+  {\n+    return lastLogIndexBeforeWeBecameLeader;\n+  }\n+\n+  public FollowerStates<MemberId> getFollowerStates()\n+  {\n+    return followerStates;\n+  }\n+\n+  public Collection<ShipCommand> getShipCommands()\n+  {\n+    return shipCommands;\n+  }\n+\n+  public boolean isElectedLeader()\n+  {\n+    return electedLeader;\n+  }\n+\n+  public boolean isSteppingDown()\n+  {\n+    return steppingDownInTerm.isPresent();\n+  }\n+\n+  public OptionalLong stepDownTerm()\n+  {\n+    return steppingDownInTerm;\n+  }\n+\n+  @Override\n+  public long getCommitIndex()\n+  {\n+    return commitIndex;\n+  }\n+\n+  public void setCommitIndex(long commitIndex)\n+  {\n+    this.commitIndex = commitIndex;\n+  }\n+\n+  public void addHeartbeatResponse(MemberId from)\n+  {\n+    this.heartbeatResponses.add(from);\n+  }\n+\n+  public Set<MemberId> getHeartbeatResponses()\n+  {\n+    return heartbeatResponses;\n+  }\n+\n+  public void setPreElection(boolean isPreElection)\n+  {\n+    this.isPreElection = isPreElection;\n+  }\n+\n+  public boolean isPreElection()\n+  {\n+    return isPreElection;\n+  }\n+\n+  public void addPreVoteForMe(MemberId from)\n+  {\n+    this.preVotesForMe.add(from);\n+  }\n+\n+  public Set<MemberId> getPreVotesForMe()\n+  {\n+    return preVotesForMe;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+    Outcome outcome = (Outcome) o;\n+    return term == outcome.term && leaderCommit == outcome.leaderCommit && commitIndex == outcome.commitIndex &&\n+        renewElectionTimeout == outcome.renewElectionTimeout && needsFreshSnapshot == outcome.needsFreshSnapshot &&\n+        isPreElection == outcome.isPreElection && lastLogIndexBeforeWeBecameLeader == outcome.lastLogIndexBeforeWeBecameLeader &&\n+        electedLeader == outcome.electedLeader && nextRole == outcome.nextRole &&\n+        Objects.equals(steppingDownInTerm, outcome.steppingDownInTerm) && Objects.equals(leader, outcome.leader) &&\n+        Objects.equals(logCommands, outcome.logCommands) && Objects.equals(outgoingMessages, outcome.outgoingMessages) &&\n+        Objects.equals(votedFor, outcome.votedFor) && Objects.equals(preVotesForMe, outcome.preVotesForMe) &&\n+        Objects.equals(votesForMe, outcome.votesForMe) && Objects.equals(followerStates, outcome.followerStates) &&\n+        Objects.equals(shipCommands, outcome.shipCommands) && Objects.equals(heartbeatResponses, outcome.heartbeatResponses);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(nextRole, term, leader, leaderCommit, logCommands, outgoingMessages, commitIndex, votedFor, renewElectionTimeout,\n+        needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader,\n+        steppingDownInTerm, heartbeatResponses);\n+  }\n }\n",
            "diff_size": 342
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 471).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 669).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3702/Outcome.java\nindex 9d117b00776..48492abcc1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3702/Outcome.java\n@@ -81,12 +81,8 @@ public class Outcome implements Message, ConsensusOutcome\n         defaults( currentRole, ctx );\n     }\n \n-    public Outcome( Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor,\n-                    Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader,\n-                    FollowerStates<MemberId> followerStates, boolean renewElectionTimeout,\n-                    Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages,\n-                    Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection )\n-    {\n+    public Outcome( Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor, Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader, FollowerStates<MemberId> followerStates, boolean renewElectionTimeout, Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages, Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection )\n+{\n         this.nextRole = nextRole;\n         this.term = term;\n         this.leader = leader;\n@@ -98,8 +94,7 @@ public class Outcome implements Message, ConsensusOutcome\n         this.followerStates = followerStates;\n         this.renewElectionTimeout = renewElectionTimeout;\n         this.heartbeatResponses = new HashSet<>( heartbeatResponses );\n-\n-        this.logCommands.addAll( logCommands );\n+this.logCommands.addAll( logCommands );\n         this.outgoingMessages.addAll( outgoingMessages );\n         this.shipCommands.addAll( shipCommands );\n         this.commitIndex = commitIndex;\n@@ -212,25 +207,7 @@ public class Outcome implements Message, ConsensusOutcome\n     @Override\n     public String toString()\n     {\n-        return \"Outcome{\" +\n-               \"nextRole=\" + nextRole +\n-               \", term=\" + term +\n-               \", leader=\" + leader +\n-               \", leaderCommit=\" + leaderCommit +\n-               \", logCommands=\" + logCommands +\n-               \", outgoingMessages=\" + outgoingMessages +\n-               \", commitIndex=\" + commitIndex +\n-               \", votedFor=\" + votedFor +\n-               \", renewElectionTimeout=\" + renewElectionTimeout +\n-               \", needsFreshSnapshot=\" + needsFreshSnapshot +\n-               \", votesForMe=\" + votesForMe +\n-               \", preVotesForMe=\" + preVotesForMe +\n-               \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader +\n-               \", followerStates=\" + followerStates +\n-               \", shipCommands=\" + shipCommands +\n-               \", electedLeader=\" + electedLeader +\n-               \", steppingDownInTerm=\" + steppingDownInTerm +\n-               '}';\n+        return \"Outcome{\" + \"nextRole=\" + nextRole + \", term=\" + term + \", leader=\" + leader + \", leaderCommit=\" + leaderCommit + \", logCommands=\" + logCommands + \", outgoingMessages=\" + outgoingMessages + \", commitIndex=\" + commitIndex + \", votedFor=\" + votedFor + \", renewElectionTimeout=\" + renewElectionTimeout + \", needsFreshSnapshot=\" + needsFreshSnapshot + \", votesForMe=\" + votesForMe + \", preVotesForMe=\" + preVotesForMe + \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader + \", followerStates=\" + followerStates + \", shipCommands=\" + shipCommands + \", electedLeader=\" + electedLeader + \", steppingDownInTerm=\" + steppingDownInTerm + '}';\n     }\n \n     public Role getRole()\n@@ -362,11 +339,13 @@ public class Outcome implements Message, ConsensusOutcome\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        Outcome outcome = (Outcome) o;\n+\n+Outcome outcome = (Outcome) o;\n         return term == outcome.term && leaderCommit == outcome.leaderCommit && commitIndex == outcome.commitIndex &&\n                 renewElectionTimeout == outcome.renewElectionTimeout && needsFreshSnapshot == outcome.needsFreshSnapshot &&\n                 isPreElection == outcome.isPreElection && lastLogIndexBeforeWeBecameLeader == outcome.lastLogIndexBeforeWeBecameLeader &&\n@@ -382,7 +361,6 @@ public class Outcome implements Message, ConsensusOutcome\n     public int hashCode()\n     {\n         return Objects.hash( nextRole, term, leader, leaderCommit, logCommands, outgoingMessages, commitIndex, votedFor, renewElectionTimeout,\n-                needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader,\n-                steppingDownInTerm, heartbeatResponses );\n+                needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader, steppingDownInTerm, heartbeatResponses );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 471).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 653).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "199",
                    "column": "51",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "69",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "91",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "125",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "157",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "199",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "231",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "257",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "307",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "353",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "383",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "419",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "493",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "531",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "565",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "601",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "332",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 972).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "338",
                    "column": "36",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "75",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "112",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "167",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "218",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "259",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "338",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "379",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "410",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "477",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "520",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "573",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "636",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "683",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "740",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "791",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "850",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "905",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "344",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 325).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3702/Outcome.java\nindex 9d117b00776..29971a9cf42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3702/Outcome.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3702/Outcome.java\n@@ -25,14 +25,12 @@ import java.util.HashSet;\n import java.util.Objects;\n import java.util.OptionalLong;\n import java.util.Set;\n-\n import org.neo4j.causalclustering.messaging.Message;\n import org.neo4j.causalclustering.core.consensus.RaftMessages;\n import org.neo4j.causalclustering.core.consensus.roles.Role;\n import org.neo4j.causalclustering.core.consensus.state.ReadableRaftState;\n import org.neo4j.causalclustering.core.consensus.roles.follower.FollowerStates;\n import org.neo4j.causalclustering.identity.MemberId;\n-\n import static java.util.Collections.emptySet;\n \n /**\n@@ -43,19 +41,16 @@ import static java.util.Collections.emptySet;\n  * A state update could be to change role, change term, etc.\n  * A command could be to append to the RAFT log, tell the log shipper that there was a mismatch, etc.\n  */\n+\n public class Outcome implements Message, ConsensusOutcome\n {\n     /* Common */\n     private Role nextRole;\n-\n     private long term;\n     private MemberId leader;\n-\n     private long leaderCommit;\n-\n     private Collection<RaftLogCommand> logCommands = new ArrayList<>();\n     private Collection<RaftMessages.Directed> outgoingMessages = new ArrayList<>();\n-\n     private long commitIndex;\n \n     /* Follower */\n@@ -81,11 +76,7 @@ public class Outcome implements Message, ConsensusOutcome\n         defaults( currentRole, ctx );\n     }\n \n-    public Outcome( Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor,\n-                    Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader,\n-                    FollowerStates<MemberId> followerStates, boolean renewElectionTimeout,\n-                    Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages,\n-                    Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection )\n+    public Outcome( Role nextRole, long term, MemberId leader, long leaderCommit, MemberId votedFor, Set<MemberId> votesForMe, Set<MemberId> preVotesForMe, long lastLogIndexBeforeWeBecameLeader, FollowerStates<MemberId> followerStates, boolean renewElectionTimeout, Collection<RaftLogCommand> logCommands, Collection<RaftMessages.Directed> outgoingMessages, Collection<ShipCommand> shipCommands, long commitIndex, Set<MemberId> heartbeatResponses, boolean isPreElection )\n     {\n         this.nextRole = nextRole;\n         this.term = term;\n@@ -98,7 +89,6 @@ public class Outcome implements Message, ConsensusOutcome\n         this.followerStates = followerStates;\n         this.renewElectionTimeout = renewElectionTimeout;\n         this.heartbeatResponses = new HashSet<>( heartbeatResponses );\n-\n         this.logCommands.addAll( logCommands );\n         this.outgoingMessages.addAll( outgoingMessages );\n         this.shipCommands.addAll( shipCommands );\n@@ -110,25 +100,19 @@ public class Outcome implements Message, ConsensusOutcome\n     private void defaults( Role currentRole, ReadableRaftState ctx )\n     {\n         nextRole = currentRole;\n-\n         term = ctx.term();\n         leader = ctx.leader();\n-\n         leaderCommit = ctx.leaderCommit();\n-\n         votedFor = ctx.votedFor();\n         renewElectionTimeout = false;\n         needsFreshSnapshot = false;\n-\n-        isPreElection = (currentRole == Role.FOLLOWER) && ctx.isPreElection();\n+        isPreElection = ( currentRole == Role.FOLLOWER)&& ctx.isPreElection();\n         steppingDownInTerm = OptionalLong.empty();\n         preVotesForMe = isPreElection ? new HashSet<>( ctx.preVotesForMe() ) : emptySet();\n-        votesForMe = (currentRole == Role.CANDIDATE) ? new HashSet<>( ctx.votesForMe() ) : emptySet();\n-        heartbeatResponses = (currentRole == Role.LEADER) ? new HashSet<>( ctx.heartbeatResponses() ) : emptySet();\n-\n-        lastLogIndexBeforeWeBecameLeader = (currentRole == Role.LEADER) ? ctx.lastLogIndexBeforeWeBecameLeader() : -1;\n-        followerStates = (currentRole == Role.LEADER) ? ctx.followerStates() : new FollowerStates<>();\n-\n+        votesForMe = ( currentRole == Role.CANDIDATE) ? new HashSet<>( ctx.votesForMe() ) : emptySet();\n+        heartbeatResponses = ( currentRole == Role.LEADER) ? new HashSet<>( ctx.heartbeatResponses() ) : emptySet();\n+        lastLogIndexBeforeWeBecameLeader = ( currentRole == Role.LEADER) ? ctx.lastLogIndexBeforeWeBecameLeader() : - 1;\n+        followerStates = ( currentRole == Role.LEADER) ? ctx.followerStates() : new FollowerStates<>();\n         commitIndex = ctx.commitIndex();\n     }\n \n@@ -199,38 +183,20 @@ public class Outcome implements Message, ConsensusOutcome\n \n     public void electedLeader()\n     {\n-        assert !isSteppingDown();\n+        assert ! isSteppingDown();\n         this.electedLeader = true;\n     }\n \n     public void steppingDown( long stepDownTerm )\n     {\n-        assert !electedLeader;\n+        assert ! electedLeader;\n         steppingDownInTerm = OptionalLong.of( stepDownTerm );\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"Outcome{\" +\n-               \"nextRole=\" + nextRole +\n-               \", term=\" + term +\n-               \", leader=\" + leader +\n-               \", leaderCommit=\" + leaderCommit +\n-               \", logCommands=\" + logCommands +\n-               \", outgoingMessages=\" + outgoingMessages +\n-               \", commitIndex=\" + commitIndex +\n-               \", votedFor=\" + votedFor +\n-               \", renewElectionTimeout=\" + renewElectionTimeout +\n-               \", needsFreshSnapshot=\" + needsFreshSnapshot +\n-               \", votesForMe=\" + votesForMe +\n-               \", preVotesForMe=\" + preVotesForMe +\n-               \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader +\n-               \", followerStates=\" + followerStates +\n-               \", shipCommands=\" + shipCommands +\n-               \", electedLeader=\" + electedLeader +\n-               \", steppingDownInTerm=\" + steppingDownInTerm +\n-               '}';\n+        return \"Outcome{\" + \"nextRole=\" + nextRole+ \", term=\" + term+ \", leader=\" + leader+ \", leaderCommit=\" + leaderCommit+ \", logCommands=\" + logCommands+ \", outgoingMessages=\" + outgoingMessages+ \", commitIndex=\" + commitIndex+ \", votedFor=\" + votedFor+ \", renewElectionTimeout=\" + renewElectionTimeout+ \", needsFreshSnapshot=\" + needsFreshSnapshot+ \", votesForMe=\" + votesForMe+ \", preVotesForMe=\" + preVotesForMe+ \", lastLogIndexBeforeWeBecameLeader=\" + lastLogIndexBeforeWeBecameLeader+ \", followerStates=\" + followerStates+ \", shipCommands=\" + shipCommands+ \", electedLeader=\" + electedLeader+ \", steppingDownInTerm=\" + steppingDownInTerm + '}';\n     }\n \n     public Role getRole()\n@@ -362,27 +328,19 @@ public class Outcome implements Message, ConsensusOutcome\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n+\n         Outcome outcome = (Outcome) o;\n-        return term == outcome.term && leaderCommit == outcome.leaderCommit && commitIndex == outcome.commitIndex &&\n-                renewElectionTimeout == outcome.renewElectionTimeout && needsFreshSnapshot == outcome.needsFreshSnapshot &&\n-                isPreElection == outcome.isPreElection && lastLogIndexBeforeWeBecameLeader == outcome.lastLogIndexBeforeWeBecameLeader &&\n-                electedLeader == outcome.electedLeader && nextRole == outcome.nextRole &&\n-                Objects.equals( steppingDownInTerm, outcome.steppingDownInTerm ) && Objects.equals( leader, outcome.leader ) &&\n-                Objects.equals( logCommands, outcome.logCommands ) && Objects.equals( outgoingMessages, outcome.outgoingMessages ) &&\n-                Objects.equals( votedFor, outcome.votedFor ) && Objects.equals( preVotesForMe, outcome.preVotesForMe ) &&\n-                Objects.equals( votesForMe, outcome.votesForMe ) && Objects.equals( followerStates, outcome.followerStates ) &&\n-                Objects.equals( shipCommands, outcome.shipCommands ) && Objects.equals( heartbeatResponses, outcome.heartbeatResponses );\n+        return term == outcome.term&& leaderCommit == outcome.leaderCommit&& commitIndex == outcome.commitIndex&& renewElectionTimeout == outcome.renewElectionTimeout&& needsFreshSnapshot == outcome.needsFreshSnapshot&& isPreElection == outcome.isPreElection&& lastLogIndexBeforeWeBecameLeader == outcome.lastLogIndexBeforeWeBecameLeader&& electedLeader == outcome.electedLeader&& nextRole == outcome.nextRole&& Objects.equals( steppingDownInTerm, outcome.steppingDownInTerm )&& Objects.equals( leader, outcome.leader )&& Objects.equals( logCommands, outcome.logCommands )&& Objects.equals( outgoingMessages, outcome.outgoingMessages )&& Objects.equals( votedFor, outcome.votedFor )&& Objects.equals( preVotesForMe, outcome.preVotesForMe )&& Objects.equals( votesForMe, outcome.votesForMe )&& Objects.equals( followerStates, outcome.followerStates )&& Objects.equals( shipCommands, outcome.shipCommands )&& Objects.equals( heartbeatResponses, outcome.heartbeatResponses );\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( nextRole, term, leader, leaderCommit, logCommands, outgoingMessages, commitIndex, votedFor, renewElectionTimeout,\n-                needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader,\n-                steppingDownInTerm, heartbeatResponses );\n+        return Objects.hash( nextRole, term, leader, leaderCommit, logCommands, outgoingMessages, commitIndex, votedFor, renewElectionTimeout, needsFreshSnapshot, isPreElection, preVotesForMe, votesForMe, lastLogIndexBeforeWeBecameLeader, followerStates, shipCommands, electedLeader, steppingDownInTerm, heartbeatResponses );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
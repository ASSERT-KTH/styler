{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2437",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2437/IndexTextValueLengthValidator.java\nindex d94658c16ef..a1e595964be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2437/IndexTextValueLengthValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.values.storable.TextValue;\n@@ -27,23 +28,23 @@ import org.neo4j.values.storable.Value;\n  */\n public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidator\n {\n-    IndexTextValueLengthValidator( int maxByteLength )\n-    {\n-        super( maxByteLength );\n-    }\n+  IndexTextValueLengthValidator(int maxByteLength)\n+  {\n+    super(maxByteLength);\n+  }\n \n-    @Override\n-    protected int indexKeyLength( Value value )\n-    {\n-        return ((TextValue)value).stringValue().getBytes().length;\n-    }\n+  @Override\n+  protected int indexKeyLength(Value value)\n+  {\n+    return ((TextValue) value).stringValue().getBytes().length;\n+  }\n \n-    public void validate( byte[] encodedValue )\n+  public void validate(byte[] encodedValue)\n+  {\n+    if (encodedValue == null)\n     {\n-        if ( encodedValue == null )\n-        {\n-            throw new IllegalArgumentException( \"Null value\" );\n-        }\n-        validateLength( encodedValue.length );\n+      throw new IllegalArgumentException(\"Null value\");\n     }\n+    validateLength(encodedValue.length);\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2437/IndexTextValueLengthValidator.java\nindex d94658c16ef..77b2ef7a6c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2437/IndexTextValueLengthValidator.java\n@@ -35,7 +35,7 @@ public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidat\n     @Override\n     protected int indexKeyLength( Value value )\n     {\n-        return ((TextValue)value).stringValue().getBytes().length;\n+        return ((TextValue) value).stringValue().getBytes().length;\n     }\n \n     public void validate( byte[] encodedValue )\n@@ -44,6 +44,7 @@ public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidat\n         {\n             throw new IllegalArgumentException( \"Null value\" );\n         }\n-        validateLength( encodedValue.length );\n+\n+validateLength( encodedValue.length );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2437/IndexTextValueLengthValidator.java\nindex d94658c16ef..f111719889c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2437/IndexTextValueLengthValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2437/IndexTextValueLengthValidator.java\n@@ -25,6 +25,7 @@ import org.neo4j.values.storable.Value;\n /**\n  * Validates {@link TextValue text values} so that they are within a certain length, byte-wise.\n  */\n+\n public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidator\n {\n     IndexTextValueLengthValidator( int maxByteLength )\n@@ -35,7 +36,7 @@ public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidat\n     @Override\n     protected int indexKeyLength( Value value )\n     {\n-        return ((TextValue)value).stringValue().getBytes().length;\n+        return ((TextValue) value).stringValue().getBytes().length;\n     }\n \n     public void validate( byte[] encodedValue )\n@@ -44,6 +45,7 @@ public class IndexTextValueLengthValidator extends AbstractIndexKeyLengthValidat\n         {\n             throw new IllegalArgumentException( \"Null value\" );\n         }\n+\n         validateLength( encodedValue.length );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
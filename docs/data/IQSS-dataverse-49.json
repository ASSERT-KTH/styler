{
    "project_name": "IQSS-dataverse",
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "86",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n    \n\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n\t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n\t\t\t.setParameter(\"ownerId\", d.getId())\n\t\t\t\t.executeUpdate();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "87",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/49/FeaturedDataverseServiceBean.java\nindex e7362587c36..2c42f3f0bde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/49/FeaturedDataverseServiceBean.java\n@@ -82,8 +82,8 @@ public class FeaturedDataverseServiceBean {\n     public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n         em.remove(em.merge(dataverseFeaturedDataverse));\n     }\n-    \n-\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n+\n+    public void deleteFeaturedDataversesFor( Dataverse d ) {\n \t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n \t\t\t.setParameter(\"ownerId\", d.getId())\n \t\t\t\t.executeUpdate();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/49/FeaturedDataverseServiceBean.java\nindex e7362587c36..1349893b2d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/49/FeaturedDataverseServiceBean.java\n@@ -16,92 +16,98 @@ import javax.persistence.EntityManager;\n import javax.persistence.PersistenceContext;\n \n /**\n- *\n  * @author skraffmiller\n  */\n @Stateless\n @Named\n public class FeaturedDataverseServiceBean {\n-    @PersistenceContext(unitName = \"VDCNet-ejbPU\")\n-    private EntityManager em;\n-    \n-    @EJB\n-    DataverseServiceBean dataverseService;\n-    \n-    private static final Logger logger = Logger.getLogger(FeaturedDataverseServiceBean.class.getCanonicalName());\n-    \n-    public List<DataverseFeaturedDataverse> findByDataverseId(Long dataverseId) {\n-        String qr = \"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = :dataverseId order by o.displayOrder\";\n-        return em.createQuery(qr, DataverseFeaturedDataverse.class).setParameter(\"dataverseId\", dataverseId).getResultList();\n-    }\n-    \n-    public List<Dataverse> findByDataverseIdQuick(Long dataverseId) {\n-         List<Object[]> searchResults;\n-         \n-         try {\n-             //searchResults = em.createNativeQuery(\"SELECT id, alias, name FROM dataverse WHERE id IN (select featureddataverse_id from DataverseFeaturedDataverse where dataverse_id = \"+dataverseId+\" order by displayOrder)\").getResultList();\n-             searchResults = em.createNativeQuery(\"SELECT d.id, d.alias, d.name FROM dataverse d, DataverseFeaturedDataverse f WHERE f.featureddataverse_id = d.id AND f.dataverse_id = \"+dataverseId+\" order by f.displayOrder\").getResultList();\n-         } catch (Exception ex) {\n-             return null;\n-         }\n-\n-         List<Dataverse> ret = new ArrayList<>();\n-         \n-         for (Object[] result : searchResults) {\n-            Long id = (Long)result[0];\n-            \n-            if (id == null) {\n-                continue;\n-            }\n-            \n-            Dataverse dataverse = new Dataverse(); \n-            dataverse.setId(id);\n-                        \n-            if (result[1] != null) {\n-                dataverse.setAlias((String)result[1]);\n-            }\n-            \n-            if (result[2] != null) {\n-                dataverse.setName((String)result[2]);\n-            }\n-            \n-            dataverse.setDataverseTheme(dataverseService.findDataverseThemeByIdQuick(id));\n-            if (dataverse.getDataverseTheme()!=null){\n-                logger.fine(\"THEME: \"+dataverse.getDataverseTheme().getLogo()+\", \"+dataverse.getDataverseTheme().getLogoFormat());\n-            }\n-            ret.add(dataverse);\n-         }\n-         \n-         return ret;\n-    }\n-    \n-    public List<DataverseFeaturedDataverse> findByRootDataverse() {\n-        return em.createQuery(\"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = 1 order by o.displayOrder\", DataverseFeaturedDataverse.class).getResultList();\n+  @PersistenceContext(unitName = \"VDCNet-ejbPU\")\n+  private EntityManager em;\n+\n+  @EJB\n+  DataverseServiceBean dataverseService;\n+\n+  private static final Logger logger = Logger.getLogger(FeaturedDataverseServiceBean.class.getCanonicalName());\n+\n+  public List<DataverseFeaturedDataverse> findByDataverseId(Long dataverseId) {\n+    String qr =\n+      \"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = :dataverseId order by o.displayOrder\";\n+    return em.createQuery(qr, DataverseFeaturedDataverse.class).setParameter(\"dataverseId\", dataverseId)\n+      .getResultList();\n+  }\n+\n+  public List<Dataverse> findByDataverseIdQuick(Long dataverseId) {\n+    List<Object[]> searchResults;\n+\n+    try {\n+      //searchResults = em.createNativeQuery(\"SELECT id, alias, name FROM dataverse WHERE id IN (select featureddataverse_id from DataverseFeaturedDataverse where dataverse_id = \"+dataverseId+\" order by displayOrder)\").getResultList();\n+      searchResults = em.createNativeQuery(\n+        \"SELECT d.id, d.alias, d.name FROM dataverse d, DataverseFeaturedDataverse f WHERE f.featureddataverse_id = d.id AND f.dataverse_id = \" +\n+          dataverseId + \" order by f.displayOrder\").getResultList();\n+    } catch (Exception ex) {\n+      return null;\n     }\n \n-    public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n-        em.remove(em.merge(dataverseFeaturedDataverse));\n+    List<Dataverse> ret = new ArrayList<>();\n+\n+    for (Object[] result : searchResults) {\n+      Long id = (Long) result[0];\n+\n+      if (id == null) {\n+        continue;\n+      }\n+\n+      Dataverse dataverse = new Dataverse();\n+      dataverse.setId(id);\n+\n+      if (result[1] != null) {\n+        dataverse.setAlias((String) result[1]);\n+      }\n+\n+      if (result[2] != null) {\n+        dataverse.setName((String) result[2]);\n+      }\n+\n+      dataverse.setDataverseTheme(dataverseService.findDataverseThemeByIdQuick(id));\n+      if (dataverse.getDataverseTheme() != null) {\n+        logger.fine(\n+          \"THEME: \" + dataverse.getDataverseTheme().getLogo() + \", \" + dataverse.getDataverseTheme().getLogoFormat());\n+      }\n+      ret.add(dataverse);\n     }\n-    \n-\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n-\t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n-\t\t\t.setParameter(\"ownerId\", d.getId())\n-\t\t\t\t.executeUpdate();\n-\t}\n-        \n-    public void create(int diplayOrder, Long featuredDataverseId, Long dataverseId) {\n-        DataverseFeaturedDataverse dataverseFeaturedDataverse = new DataverseFeaturedDataverse();\n-        \n-        dataverseFeaturedDataverse.setDisplayOrder(diplayOrder);\n-        \n-        Dataverse dataverse = em.find(Dataverse.class, dataverseId);\n-        dataverseFeaturedDataverse.setDataverse(dataverse);\n-        \n-        Dataverse featuredDataverse = em.find(Dataverse.class, featuredDataverseId);\n-        dataverseFeaturedDataverse.setFeaturedDataverse(featuredDataverse);\n-\n-        em.persist(dataverseFeaturedDataverse);\n-    }\t\n-    \n-    \n+\n+    return ret;\n+  }\n+\n+  public List<DataverseFeaturedDataverse> findByRootDataverse() {\n+    return em.createQuery(\n+      \"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = 1 order by o.displayOrder\",\n+      DataverseFeaturedDataverse.class).getResultList();\n+  }\n+\n+  public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n+    em.remove(em.merge(dataverseFeaturedDataverse));\n+  }\n+\n+  public void deleteFeaturedDataversesFor(Dataverse d) {\n+    em.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n+      .setParameter(\"ownerId\", d.getId())\n+      .executeUpdate();\n+  }\n+\n+  public void create(int diplayOrder, Long featuredDataverseId, Long dataverseId) {\n+    DataverseFeaturedDataverse dataverseFeaturedDataverse = new DataverseFeaturedDataverse();\n+\n+    dataverseFeaturedDataverse.setDisplayOrder(diplayOrder);\n+\n+    Dataverse dataverse = em.find(Dataverse.class, dataverseId);\n+    dataverseFeaturedDataverse.setDataverse(dataverse);\n+\n+    Dataverse featuredDataverse = em.find(Dataverse.class, featuredDataverseId);\n+    dataverseFeaturedDataverse.setFeaturedDataverse(featuredDataverse);\n+\n+    em.persist(dataverseFeaturedDataverse);\n+  }\n+\n+\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/49/FeaturedDataverseServiceBean.java\nindex e7362587c36..d5e6271be01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/49/FeaturedDataverseServiceBean.java\n@@ -19,62 +19,58 @@ import javax.persistence.PersistenceContext;\n  *\n  * @author skraffmiller\n  */\n+\n+\n @Stateless\n @Named\n public class FeaturedDataverseServiceBean {\n+\n     @PersistenceContext(unitName = \"VDCNet-ejbPU\")\n     private EntityManager em;\n-    \n+\n     @EJB\n     DataverseServiceBean dataverseService;\n-    \n     private static final Logger logger = Logger.getLogger(FeaturedDataverseServiceBean.class.getCanonicalName());\n-    \n+\n     public List<DataverseFeaturedDataverse> findByDataverseId(Long dataverseId) {\n         String qr = \"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = :dataverseId order by o.displayOrder\";\n         return em.createQuery(qr, DataverseFeaturedDataverse.class).setParameter(\"dataverseId\", dataverseId).getResultList();\n     }\n-    \n+\n     public List<Dataverse> findByDataverseIdQuick(Long dataverseId) {\n-         List<Object[]> searchResults;\n-         \n-         try {\n+        List<Object[]> searchResults;\n+        try {\n              //searchResults = em.createNativeQuery(\"SELECT id, alias, name FROM dataverse WHERE id IN (select featureddataverse_id from DataverseFeaturedDataverse where dataverse_id = \"+dataverseId+\" order by displayOrder)\").getResultList();\n-             searchResults = em.createNativeQuery(\"SELECT d.id, d.alias, d.name FROM dataverse d, DataverseFeaturedDataverse f WHERE f.featureddataverse_id = d.id AND f.dataverse_id = \"+dataverseId+\" order by f.displayOrder\").getResultList();\n-         } catch (Exception ex) {\n-             return null;\n-         }\n-\n-         List<Dataverse> ret = new ArrayList<>();\n-         \n-         for (Object[] result : searchResults) {\n-            Long id = (Long)result[0];\n-            \n+            searchResults = em.createNativeQuery(\"SELECT d.id, d.alias, d.name FROM dataverse d, DataverseFeaturedDataverse f WHERE f.featureddataverse_id = d.id AND f.dataverse_id = \" + dataverseId + \" order by f.displayOrder\").getResultList();\n+        } catch (Exception ex) {\n+            return null;\n+        }\n+\n+        List<Dataverse> ret = new ArrayList<>();\n+        for (Object[] result : searchResults) {\n+            Long id = (Long) result[0];\n             if (id == null) {\n                 continue;\n             }\n-            \n-            Dataverse dataverse = new Dataverse(); \n+\n+            Dataverse dataverse = new Dataverse();\n             dataverse.setId(id);\n-                        \n             if (result[1] != null) {\n-                dataverse.setAlias((String)result[1]);\n+                dataverse.setAlias((String) result[1]);\n             }\n-            \n+\n             if (result[2] != null) {\n-                dataverse.setName((String)result[2]);\n+                dataverse.setName((String) result[2]);\n             }\n-            \n             dataverse.setDataverseTheme(dataverseService.findDataverseThemeByIdQuick(id));\n-            if (dataverse.getDataverseTheme()!=null){\n-                logger.fine(\"THEME: \"+dataverse.getDataverseTheme().getLogo()+\", \"+dataverse.getDataverseTheme().getLogoFormat());\n+            if (dataverse.getDataverseTheme() != null) {\n+                logger.fine(\"THEME: \" + dataverse.getDataverseTheme().getLogo() + \", \" + dataverse.getDataverseTheme().getLogoFormat());\n             }\n             ret.add(dataverse);\n-         }\n-         \n-         return ret;\n+        }\n+        return ret;\n     }\n-    \n+\n     public List<DataverseFeaturedDataverse> findByRootDataverse() {\n         return em.createQuery(\"select object(o) from DataverseFeaturedDataverse as o where o.dataverse.id = 1 order by o.displayOrder\", DataverseFeaturedDataverse.class).getResultList();\n     }\n@@ -82,26 +78,19 @@ public class FeaturedDataverseServiceBean {\n     public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n         em.remove(em.merge(dataverseFeaturedDataverse));\n     }\n-    \n-\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n-\t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n-\t\t\t.setParameter(\"ownerId\", d.getId())\n-\t\t\t\t.executeUpdate();\n-\t}\n-        \n+\n+    public void deleteFeaturedDataversesFor(Dataverse d) {\n+        em.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\").setParameter(\"ownerId\", d.getId()).executeUpdate();\n+    }\n+\n     public void create(int diplayOrder, Long featuredDataverseId, Long dataverseId) {\n         DataverseFeaturedDataverse dataverseFeaturedDataverse = new DataverseFeaturedDataverse();\n-        \n         dataverseFeaturedDataverse.setDisplayOrder(diplayOrder);\n-        \n         Dataverse dataverse = em.find(Dataverse.class, dataverseId);\n         dataverseFeaturedDataverse.setDataverse(dataverse);\n-        \n         Dataverse featuredDataverse = em.find(Dataverse.class, featuredDataverseId);\n         dataverseFeaturedDataverse.setFeaturedDataverse(featuredDataverse);\n-\n         em.persist(dataverseFeaturedDataverse);\n-    }\t\n-    \n-    \n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "87",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/49/FeaturedDataverseServiceBean.java\nindex e7362587c36..2c42f3f0bde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/49/FeaturedDataverseServiceBean.java\n@@ -82,8 +82,8 @@ public class FeaturedDataverseServiceBean {\n     public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n         em.remove(em.merge(dataverseFeaturedDataverse));\n     }\n-    \n-\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n+\n+    public void deleteFeaturedDataversesFor( Dataverse d ) {\n \t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n \t\t\t.setParameter(\"ownerId\", d.getId())\n \t\t\t\t.executeUpdate();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "87",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/49/FeaturedDataverseServiceBean.java\nindex e7362587c36..2c42f3f0bde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/49/FeaturedDataverseServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/49/FeaturedDataverseServiceBean.java\n@@ -82,8 +82,8 @@ public class FeaturedDataverseServiceBean {\n     public void delete(DataverseFeaturedDataverse dataverseFeaturedDataverse) {\n         em.remove(em.merge(dataverseFeaturedDataverse));\n     }\n-    \n-\tpublic void deleteFeaturedDataversesFor( Dataverse d ) {\n+\n+    public void deleteFeaturedDataversesFor( Dataverse d ) {\n \t\tem.createNamedQuery(\"DataverseFeaturedDataverse.removeByOwnerId\")\n \t\t\t.setParameter(\"ownerId\", d.getId())\n \t\t\t\t.executeUpdate();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
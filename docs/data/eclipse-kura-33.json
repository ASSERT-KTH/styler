{
    "project_name": "eclipse-kura",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 412).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public static final String NAT_PROP_NAME = \"firewall.nat\";\n\n    public static final String DFLT_OPEN_PORTS_VALUE = \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n    public static final String DFLT_PORT_FORWARDING_VALUE = \"\";\n    public static final String DFLT_NAT_VALUE = \"\";\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 412).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 365).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/33/FirewallConfiguration.java\nindex 393571e7da4..ec404046151 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/33/FirewallConfiguration.java\n@@ -6,6 +6,7 @@\n  *   which accompanies this distribution, and is available at\n  *   http://www.eclipse.org/legal/epl-v10.html\n  ******************************************************************************/\n+\n package org.eclipse.kura.core.net;\n \n import java.util.ArrayList;\n@@ -35,7 +36,8 @@ public class FirewallConfiguration {\n     public static final String PORT_FORWARDING_PROP_NAME = \"firewall.port.forwarding\";\n     public static final String NAT_PROP_NAME = \"firewall.nat\";\n \n-    public static final String DFLT_OPEN_PORTS_VALUE = \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n+    public static final String DFLT_OPEN_PORTS_VALUE =\n+        \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n     public static final String DFLT_PORT_FORWARDING_VALUE = \"\";\n     public static final String DFLT_NAT_VALUE = \"\";\n \n@@ -92,17 +94,17 @@ public class FirewallConfiguration {\n                             if (sa[0].indexOf(':') > 0) {\n                                 portRange = sa[0];\n                                 openPortEntry = new FirewallOpenPortConfigIP4(portRange, protocol,\n-                                        new NetworkPair<IP4Address>(\n-                                                (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                                permittedNetworkMask),\n-                                        permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n+                                    new NetworkPair<IP4Address>(\n+                                        (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n+                                        permittedNetworkMask),\n+                                    permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n                             } else {\n                                 port = Integer.parseInt(sa[0]);\n                                 openPortEntry = new FirewallOpenPortConfigIP4(port, protocol,\n-                                        new NetworkPair<IP4Address>(\n-                                                (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                                permittedNetworkMask),\n-                                        permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n+                                    new NetworkPair<IP4Address>(\n+                                        (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n+                                        permittedNetworkMask),\n+                                    permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n                             }\n                             this.openPortConfigs.add(openPortEntry);\n                         }\n@@ -148,11 +150,11 @@ public class FirewallConfiguration {\n                                 sourcePortRange = sa[9];\n                             }\n                             FirewallPortForwardConfigIP<? extends IPAddress> portForwardEntry = new FirewallPortForwardConfigIP4(\n-                                    inboundIface, outboundIface, address, protocol, inPort, outPort, masquerade,\n-                                    new NetworkPair<IP4Address>(\n-                                            (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                            permittedNetworkMask),\n-                                    permittedMAC, sourcePortRange);\n+                                inboundIface, outboundIface, address, protocol, inPort, outPort, masquerade,\n+                                new NetworkPair<IP4Address>(\n+                                    (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n+                                    permittedNetworkMask),\n+                                permittedMAC, sourcePortRange);\n                             this.portForwardConfigs.add(portForwardEntry);\n                         }\n                     } catch (Exception e) {\n@@ -190,7 +192,7 @@ public class FirewallConfiguration {\n                         }\n                         boolean masquerade = Boolean.parseBoolean(sa[5]);\n                         FirewallNatConfig natEntry = new FirewallNatConfig(srcIface, dstIface, protocol, src, dst,\n-                                masquerade);\n+                            masquerade);\n                         this.natConfigs.add(natEntry);\n                     }\n                 }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 412).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/33/FirewallConfiguration.java\nindex 393571e7da4..5406ff96b7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/33/FirewallConfiguration.java\n@@ -366,4 +366,4 @@ public class FirewallConfiguration {\n         }\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 412).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 274).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 347).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/33/FirewallConfiguration.java\nindex 393571e7da4..ef66ba324c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/33/FirewallConfiguration.java\n@@ -12,7 +12,6 @@ import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import org.eclipse.kura.net.IP4Address;\n import org.eclipse.kura.net.IPAddress;\n import org.eclipse.kura.net.NetConfig;\n@@ -30,15 +29,12 @@ import org.slf4j.LoggerFactory;\n public class FirewallConfiguration {\n \n     private static final Logger logger = LoggerFactory.getLogger(FirewallConfiguration.class);\n-\n     public static final String OPEN_PORTS_PROP_NAME = \"firewall.open.ports\";\n     public static final String PORT_FORWARDING_PROP_NAME = \"firewall.port.forwarding\";\n     public static final String NAT_PROP_NAME = \"firewall.nat\";\n-\n     public static final String DFLT_OPEN_PORTS_VALUE = \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n     public static final String DFLT_PORT_FORWARDING_VALUE = \"\";\n     public static final String DFLT_NAT_VALUE = \"\";\n-\n     private final List<FirewallOpenPortConfigIP<? extends IPAddress>> openPortConfigs;\n     private final List<FirewallPortForwardConfigIP<? extends IPAddress>> portForwardConfigs;\n     private final List<FirewallNatConfig> natConfigs;\n@@ -57,6 +53,7 @@ public class FirewallConfiguration {\n         String[] astr = null;\n         if (properties.containsKey(OPEN_PORTS_PROP_NAME)) {\n             str = (String) properties.get(OPEN_PORTS_PROP_NAME);\n+\n             if (!str.isEmpty()) {\n                 astr = str.split(\";\");\n                 for (String sop : astr) {\n@@ -70,40 +67,39 @@ public class FirewallConfiguration {\n                                 permittedNetwork = sa[2].split(\"/\")[0];\n                                 permittedNetworkMask = Short.parseShort(sa[2].split(\"/\")[1]);\n                             }\n+\n                             String permittedIface = null;\n                             if (!sa[3].isEmpty()) {\n                                 permittedIface = sa[3];\n                             }\n+\n                             String unpermittedIface = null;\n                             if (!sa[4].isEmpty()) {\n                                 unpermittedIface = sa[4];\n                             }\n+\n                             String permittedMAC = null;\n                             if (!sa[5].isEmpty()) {\n                                 permittedMAC = sa[5];\n                             }\n+\n                             String sourcePortRange = null;\n                             if (!sa[6].isEmpty()) {\n                                 sourcePortRange = sa[6];\n                             }\n+\n+\n                             int port = 0;\n                             String portRange = null;\n                             FirewallOpenPortConfigIP<? extends IPAddress> openPortEntry = null;\n                             if (sa[0].indexOf(':') > 0) {\n                                 portRange = sa[0];\n-                                openPortEntry = new FirewallOpenPortConfigIP4(portRange, protocol,\n-                                        new NetworkPair<IP4Address>(\n-                                                (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                                permittedNetworkMask),\n-                                        permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n+                                openPortEntry = new FirewallOpenPortConfigIP4(portRange, protocol, new NetworkPair<IP4Address>((IP4Address) IPAddress.parseHostAddress(permittedNetwork), permittedNetworkMask), permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n                             } else {\n                                 port = Integer.parseInt(sa[0]);\n-                                openPortEntry = new FirewallOpenPortConfigIP4(port, protocol,\n-                                        new NetworkPair<IP4Address>(\n-                                                (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                                permittedNetworkMask),\n-                                        permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n+                                openPortEntry = new FirewallOpenPortConfigIP4(port, protocol, new NetworkPair<IP4Address>((IP4Address) IPAddress.parseHostAddress(permittedNetwork), permittedNetworkMask), permittedIface, unpermittedIface, permittedMAC, sourcePortRange);\n                             }\n+\n                             this.openPortConfigs.add(openPortEntry);\n                         }\n                     } catch (Exception e) {\n@@ -114,6 +110,7 @@ public class FirewallConfiguration {\n         }\n         if (properties.containsKey(PORT_FORWARDING_PROP_NAME)) {\n             str = (String) properties.get(PORT_FORWARDING_PROP_NAME);\n+\n             if (!str.isEmpty()) {\n                 astr = str.split(\";\");\n                 for (String sop : astr) {\n@@ -124,10 +121,12 @@ public class FirewallConfiguration {\n                             if (!sa[0].isEmpty()) {\n                                 inboundIface = sa[0];\n                             }\n+\n                             String outboundIface = null;\n                             if (!sa[1].isEmpty()) {\n                                 outboundIface = sa[1];\n                             }\n+\n                             IP4Address address = (IP4Address) IPAddress.parseHostAddress(sa[2]);\n                             NetProtocol protocol = NetProtocol.valueOf(sa[3]);\n                             int inPort = Integer.parseInt(sa[4]);\n@@ -139,20 +138,18 @@ public class FirewallConfiguration {\n                                 permittedNetwork = sa[7].split(\"/\")[0];\n                                 permittedNetworkMask = Short.parseShort(sa[7].split(\"/\")[1]);\n                             }\n+\n                             String permittedMAC = null;\n                             if (!sa[8].isEmpty()) {\n                                 permittedMAC = sa[8];\n                             }\n+\n                             String sourcePortRange = null;\n                             if (!sa[9].isEmpty()) {\n                                 sourcePortRange = sa[9];\n                             }\n-                            FirewallPortForwardConfigIP<? extends IPAddress> portForwardEntry = new FirewallPortForwardConfigIP4(\n-                                    inboundIface, outboundIface, address, protocol, inPort, outPort, masquerade,\n-                                    new NetworkPair<IP4Address>(\n-                                            (IP4Address) IPAddress.parseHostAddress(permittedNetwork),\n-                                            permittedNetworkMask),\n-                                    permittedMAC, sourcePortRange);\n+\n+                            FirewallPortForwardConfigIP<? extends IPAddress> portForwardEntry = new FirewallPortForwardConfigIP4(inboundIface, outboundIface, address, protocol, inPort, outPort, masquerade, new NetworkPair<IP4Address>((IP4Address) IPAddress.parseHostAddress(permittedNetwork), permittedNetworkMask), permittedMAC, sourcePortRange);\n                             this.portForwardConfigs.add(portForwardEntry);\n                         }\n                     } catch (Exception e) {\n@@ -163,6 +160,7 @@ public class FirewallConfiguration {\n         }\n         if (properties.containsKey(NAT_PROP_NAME)) {\n             str = (String) properties.get(NAT_PROP_NAME);\n+\n             if (!str.isEmpty()) {\n                 astr = str.split(\";\");\n                 for (String sop : astr) {\n@@ -172,25 +170,29 @@ public class FirewallConfiguration {\n                         if (!sa[0].isEmpty()) {\n                             srcIface = sa[0];\n                         }\n+\n                         String dstIface = null;\n                         if (!sa[1].isEmpty()) {\n                             dstIface = sa[1];\n                         }\n+\n                         String protocol = null;\n                         if (!sa[2].isEmpty()) {\n                             protocol = sa[2];\n                         }\n+\n                         String src = null;\n                         if (!sa[3].isEmpty()) {\n                             src = sa[3];\n                         }\n+\n                         String dst = null;\n                         if (!sa[4].isEmpty()) {\n                             dst = sa[4];\n                         }\n+\n                         boolean masquerade = Boolean.parseBoolean(sa[5]);\n-                        FirewallNatConfig natEntry = new FirewallNatConfig(srcIface, dstIface, protocol, src, dst,\n-                                masquerade);\n+                        FirewallNatConfig natEntry = new FirewallNatConfig(srcIface, dstIface, protocol, src, dst, masquerade);\n                         this.natConfigs.add(natEntry);\n                     }\n                 }\n@@ -204,15 +206,14 @@ public class FirewallConfiguration {\n         } else if (netConfig instanceof FirewallPortForwardConfigIP4) {\n             this.portForwardConfigs.add((FirewallPortForwardConfigIP4) netConfig);\n         } else if (netConfig instanceof FirewallNatConfig) {\n-            this.natConfigs.add((FirewallNatConfig) netConfig);\n+                   this.natConfigs.add((FirewallNatConfig) netConfig);\n         } else if (netConfig instanceof FirewallAutoNatConfig) {\n-            this.autoNatConfigs.add((FirewallAutoNatConfig) netConfig);\n-        }\n+                   this.autoNatConfigs.add((FirewallAutoNatConfig) netConfig);\n+               }\n     }\n \n     public List<NetConfig> getConfigs() {\n         List<NetConfig> netConfigs = new ArrayList<>();\n-\n         for (FirewallOpenPortConfigIP<? extends IPAddress> openPortConfig : this.openPortConfigs) {\n             netConfigs.add(openPortConfig);\n         }\n@@ -225,7 +226,6 @@ public class FirewallConfiguration {\n         for (FirewallAutoNatConfig autoNatConfig : this.autoNatConfigs) {\n             netConfigs.add(autoNatConfig);\n         }\n-\n         return netConfigs;\n     }\n \n@@ -261,31 +261,39 @@ public class FirewallConfiguration {\n                 port = Integer.toString(openPortConfig.getPort());\n             }\n             sb.append(port).append(',');\n+\n             if (openPortConfig.getProtocol() != null) {\n                 sb.append(openPortConfig.getProtocol());\n             }\n             sb.append(',');\n+\n             if (openPortConfig.getPermittedNetwork() != null) {\n                 sb.append(openPortConfig.getPermittedNetwork());\n             }\n             sb.append(',');\n+\n             if (openPortConfig.getPermittedInterfaceName() != null) {\n                 sb.append(openPortConfig.getPermittedInterfaceName());\n             }\n             sb.append(',');\n+\n             if (openPortConfig.getUnpermittedInterfaceName() != null) {\n                 sb.append(openPortConfig.getUnpermittedInterfaceName());\n             }\n             sb.append(',');\n+\n             if (openPortConfig.getPermittedMac() != null) {\n                 sb.append(openPortConfig.getPermittedMac());\n             }\n             sb.append(',');\n+\n             if (openPortConfig.getSourcePortRange() != null) {\n                 sb.append(openPortConfig.getSourcePortRange());\n             }\n             sb.append(\",#;\");\n         }\n+\n+\n         int ind = sb.lastIndexOf(\";\");\n         if (ind > 0) {\n             sb.deleteCharAt(ind);\n@@ -300,14 +308,17 @@ public class FirewallConfiguration {\n                 sb.append(portForwardConfig.getInboundInterface());\n             }\n             sb.append(',');\n+\n             if (portForwardConfig.getOutboundInterface() != null) {\n                 sb.append(portForwardConfig.getOutboundInterface());\n             }\n             sb.append(',');\n+\n             if (portForwardConfig.getAddress() != null) {\n                 sb.append(portForwardConfig.getAddress());\n             }\n             sb.append(',');\n+\n             if (portForwardConfig.getProtocol() != null) {\n                 sb.append(portForwardConfig.getProtocol());\n             }\n@@ -315,19 +326,24 @@ public class FirewallConfiguration {\n             sb.append(portForwardConfig.getInPort()).append(',');\n             sb.append(portForwardConfig.getOutPort()).append(',');\n             sb.append(portForwardConfig.isMasquerade()).append(',');\n+\n             if (portForwardConfig.getPermittedNetwork() != null) {\n                 sb.append(portForwardConfig.getPermittedNetwork());\n             }\n             sb.append(',');\n+\n             if (portForwardConfig.getPermittedMac() != null) {\n                 sb.append(portForwardConfig.getPermittedMac());\n             }\n             sb.append(',');\n+\n             if (portForwardConfig.getSourcePortRange() != null) {\n                 sb.append(portForwardConfig.getSourcePortRange());\n             }\n             sb.append(\",#;\");\n         }\n+\n+\n         int ind = sb.lastIndexOf(\";\");\n         if (ind > 0) {\n             sb.deleteCharAt(ind);\n@@ -342,28 +358,34 @@ public class FirewallConfiguration {\n                 sb.append(natConfig.getSourceInterface());\n             }\n             sb.append(',');\n+\n             if (natConfig.getDestinationInterface() != null) {\n                 sb.append(natConfig.getDestinationInterface());\n             }\n             sb.append(',');\n+\n             if (natConfig.getProtocol() != null) {\n                 sb.append(natConfig.getProtocol());\n             }\n             sb.append(',');\n+\n             if (natConfig.getSource() != null) {\n                 sb.append(natConfig.getSource());\n             }\n             sb.append(',');\n+\n             if (natConfig.getDestination() != null) {\n                 sb.append(natConfig.getDestination());\n             }\n             sb.append(',');\n             sb.append(natConfig.isMasquerade()).append(\",#;\");\n         }\n+\n+\n         int ind = sb.lastIndexOf(\";\");\n         if (ind > 0) {\n             sb.deleteCharAt(ind);\n         }\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 69
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 412).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 471).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/33/FirewallConfiguration.java\nindex 393571e7da4..e9be1f692da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/33/FirewallConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/33/FirewallConfiguration.java\n@@ -33,9 +33,7 @@ public class FirewallConfiguration {\n \n     public static final String OPEN_PORTS_PROP_NAME = \"firewall.open.ports\";\n     public static final String PORT_FORWARDING_PROP_NAME = \"firewall.port.forwarding\";\n-    public static final String NAT_PROP_NAME = \"firewall.nat\";\n-\n-    public static final String DFLT_OPEN_PORTS_VALUE = \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n+    public static final String NAT_PROP_NAME = \"firewall.nat\"; public static final String DFLT_OPEN_PORTS_VALUE = \"22,tcp,,,,,,#;80,tcp,,eth0,,,,#;80,tcp,,eth1,,,,#;80,tcp,,wlan0,,,,#;80,tcp,10.234.0.0/16,,,,,#;1450,tcp,,eth0,,,,#;1450,tcp,,eth1,,,,#;1450,tcp,,wlan0,,,,#;502,tcp,127.0.0.1/32,,,,,#;53,udp,,eth0,,,,#;53,udp,,eth1,,,,#;53,udp,,wlan0,,,,#;67,udp,,eth0,,,,#;67,udp,,eth1,,,,#;67,udp,,wlan0,,,,#;8000,tcp,,eth0,,,,#;8000,tcp,,eth1,,,,#;8000,tcp,,wlan0,,,,#\";\n     public static final String DFLT_PORT_FORWARDING_VALUE = \"\";\n     public static final String DFLT_NAT_VALUE = \"\";\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
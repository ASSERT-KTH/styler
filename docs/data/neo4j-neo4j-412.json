{
    "project_name": "neo4j-neo4j",
    "error_id": "412",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/412/KernelImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/412/KernelImpl.java\nindex e92881eeeb4..217515ae3f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/412/KernelImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/412/KernelImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.configuration.Config;\n@@ -45,13 +46,12 @@ import static org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo.\n  * Core API (the API under org.neo4j.graphdb).\n  *\n  * <h1>Structure</h1>\n- *\n+ * <p>\n  * The Kernel lets you start transactions. The transactions allow you to create \"statements\", which, in turn, operate\n  * against the database. Statements and transactions are separate concepts due to isolation requirements. A single\n  * cypher query will normally use one statement, and there can be multiple statements executed in one transaction.\n- *\n+ * <p>\n  * Please refer to the {@link KernelTransaction} javadoc for details.\n- *\n  */\n public class KernelImpl extends LifecycleAdapter implements Kernel\n {\n@@ -63,61 +63,61 @@ public class KernelImpl extends LifecycleAdapter implements Kernel\n     private final DefaultThreadSafeCursors cursors;\n     private volatile boolean isRunning;\n \n-    public KernelImpl( KernelTransactions transactionFactory, Health health,\n-                       TransactionMonitor transactionMonitor,\n-                       GlobalProcedures globalProcedures, Config config, StorageEngine storageEngine )\n+    public KernelImpl(KernelTransactions transactionFactory, Health health,\n+                      TransactionMonitor transactionMonitor,\n+                      GlobalProcedures globalProcedures, Config config, StorageEngine storageEngine)\n     {\n         this.transactions = transactionFactory;\n         this.health = health;\n         this.transactionMonitor = transactionMonitor;\n         this.globalProcedures = globalProcedures;\n         this.config = config;\n-        this.cursors = new DefaultThreadSafeCursors( storageEngine.newReader(), config );\n+        this.cursors = new DefaultThreadSafeCursors(storageEngine.newReader(), config);\n     }\n \n     @Override\n-    public KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext ) throws TransactionFailureException\n+    public KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext) throws TransactionFailureException\n     {\n-        return beginTransaction( type, loginContext, EMBEDDED_CONNECTION );\n+        return beginTransaction(type, loginContext, EMBEDDED_CONNECTION);\n     }\n \n     @Override\n-    public KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo )\n-            throws TransactionFailureException\n+    public KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo)\n+      throws TransactionFailureException\n     {\n-        if ( !isRunning )\n+        if (!isRunning)\n         {\n-            throw new IllegalStateException( \"Kernel is not running, so it is not possible to use it\" );\n+            throw new IllegalStateException(\"Kernel is not running, so it is not possible to use it\");\n         }\n-        return beginTransaction( type, loginContext, connectionInfo, config.get( transaction_timeout ).toMillis() );\n+        return beginTransaction(type, loginContext, connectionInfo, config.get(transaction_timeout).toMillis());\n     }\n \n     @Override\n-    public KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo, long timeout )\n-            throws TransactionFailureException\n+    public KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo, long timeout)\n+      throws TransactionFailureException\n     {\n-        health.assertHealthy( TransactionFailureException.class );\n-        KernelTransaction transaction = transactions.newInstance( type, loginContext, connectionInfo, timeout );\n+        health.assertHealthy(TransactionFailureException.class);\n+        KernelTransaction transaction = transactions.newInstance(type, loginContext, connectionInfo, timeout);\n         transactionMonitor.transactionStarted();\n         return transaction;\n     }\n \n     @Override\n-    public void registerProcedure( CallableProcedure procedure ) throws ProcedureException\n+    public void registerProcedure(CallableProcedure procedure) throws ProcedureException\n     {\n-        globalProcedures.register( procedure );\n+        globalProcedures.register(procedure);\n     }\n \n     @Override\n-    public void registerUserFunction( CallableUserFunction function ) throws ProcedureException\n+    public void registerUserFunction(CallableUserFunction function) throws ProcedureException\n     {\n-        globalProcedures.register( function );\n+        globalProcedures.register(function);\n     }\n \n     @Override\n-    public void registerUserAggregationFunction( CallableUserAggregationFunction function ) throws ProcedureException\n+    public void registerUserAggregationFunction(CallableUserAggregationFunction function) throws ProcedureException\n     {\n-        globalProcedures.register( function );\n+        globalProcedures.register(function);\n     }\n \n     @Override\n@@ -129,9 +129,9 @@ public class KernelImpl extends LifecycleAdapter implements Kernel\n     @Override\n     public void stop()\n     {\n-        if ( !isRunning )\n+        if (!isRunning)\n         {\n-            throw new IllegalStateException( \"Kernel is not running, so it is not possible to stop it\" );\n+            throw new IllegalStateException(\"Kernel is not running, so it is not possible to stop it\");\n         }\n \n         isRunning = false;\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
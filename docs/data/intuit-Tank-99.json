{
    "project_name": "intuit-Tank",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        ThreadContext.put(\"location\", AmazonUtil.getZone());\n        ThreadContext.put(\"httpHost\", AmazonUtil.getControllerBaseUrl());\n        ThreadContext.put(\"loggingProfile\", APITestHarness.getInstance().getAgentRunData().getActiveProfile().getDisplayName());\n\n        return logEvent;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/99/ThreadLocalLogEvent.java\nindex 3312e492707..15f50e4dbb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/99/ThreadLocalLogEvent.java\n@@ -20,32 +20,31 @@ import com.intuit.tank.logging.SourceType;\n import org.apache.logging.log4j.ThreadContext;\n \n /**\n- * \n  * @author dangleton\n- * \n  */\n public class ThreadLocalLogEvent extends ThreadLocal<LogEvent> {\n-    public LogEvent initialValue() {\n-        LogEvent logEvent = new LogEvent();\n-        logEvent.setActiveProfile(APITestHarness.getInstance().getAgentRunData().getActiveProfile());\n-        logEvent.setProjectName(APITestHarness.getInstance().getAgentRunData().getProjectName());\n-        logEvent.setJobId(APITestHarness.getInstance().getAgentRunData().getJobId());\n-        logEvent.setInstanceId(APITestHarness.getInstance().getAgentRunData().getInstanceId());\n-        logEvent.setSourceType(SourceType.agent);\n-        HostInfo hostInfo = new HostInfo();\n-        logEvent.setPublicIp(hostInfo.getPublicIp());\n-        logEvent.setHostname(hostInfo.getPublicHostname());\n-        logEvent.setThreadId(Thread.currentThread().getName() + \" \" + Thread.currentThread().getId());\n+  public LogEvent initialValue() {\n+    LogEvent logEvent = new LogEvent();\n+    logEvent.setActiveProfile(APITestHarness.getInstance().getAgentRunData().getActiveProfile());\n+    logEvent.setProjectName(APITestHarness.getInstance().getAgentRunData().getProjectName());\n+    logEvent.setJobId(APITestHarness.getInstance().getAgentRunData().getJobId());\n+    logEvent.setInstanceId(APITestHarness.getInstance().getAgentRunData().getInstanceId());\n+    logEvent.setSourceType(SourceType.agent);\n+    HostInfo hostInfo = new HostInfo();\n+    logEvent.setPublicIp(hostInfo.getPublicIp());\n+    logEvent.setHostname(hostInfo.getPublicHostname());\n+    logEvent.setThreadId(Thread.currentThread().getName() + \" \" + Thread.currentThread().getId());\n \n-        ThreadContext.put(\"jobId\", APITestHarness.getInstance().getAgentRunData().getJobId());\n-        ThreadContext.put(\"projectName\", APITestHarness.getInstance().getAgentRunData().getProjectName());\n-        ThreadContext.put(\"instanceId\", APITestHarness.getInstance().getAgentRunData().getInstanceId());\n-        ThreadContext.put(\"publicIp\", hostInfo.getPublicIp());\n-        ThreadContext.put(\"location\", AmazonUtil.getZone());\n-        ThreadContext.put(\"httpHost\", AmazonUtil.getControllerBaseUrl());\n-        ThreadContext.put(\"loggingProfile\", APITestHarness.getInstance().getAgentRunData().getActiveProfile().getDisplayName());\n+    ThreadContext.put(\"jobId\", APITestHarness.getInstance().getAgentRunData().getJobId());\n+    ThreadContext.put(\"projectName\", APITestHarness.getInstance().getAgentRunData().getProjectName());\n+    ThreadContext.put(\"instanceId\", APITestHarness.getInstance().getAgentRunData().getInstanceId());\n+    ThreadContext.put(\"publicIp\", hostInfo.getPublicIp());\n+    ThreadContext.put(\"location\", AmazonUtil.getZone());\n+    ThreadContext.put(\"httpHost\", AmazonUtil.getControllerBaseUrl());\n+    ThreadContext\n+      .put(\"loggingProfile\", APITestHarness.getInstance().getAgentRunData().getActiveProfile().getDisplayName());\n \n-        return logEvent;\n+    return logEvent;\n \n-    }\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/99/ThreadLocalLogEvent.java\nindex 3312e492707..fcdb0b012f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/99/ThreadLocalLogEvent.java\n@@ -48,4 +48,4 @@ public class ThreadLocalLogEvent extends ThreadLocal<LogEvent> {\n         return logEvent;\n \n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/99/ThreadLocalLogEvent.java\nindex 3312e492707..71146fee670 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/99/ThreadLocalLogEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/99/ThreadLocalLogEvent.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.harness.logging;\n  * #L%\n  */\n \n+\n+\n import com.intuit.tank.harness.APITestHarness;\n import com.intuit.tank.harness.AmazonUtil;\n import com.intuit.tank.harness.HostInfo;\n@@ -24,6 +26,8 @@ import org.apache.logging.log4j.ThreadContext;\n  * @author dangleton\n  * \n  */\n+\n+\n public class ThreadLocalLogEvent extends ThreadLocal<LogEvent> {\n     public LogEvent initialValue() {\n         LogEvent logEvent = new LogEvent();\n@@ -36,7 +40,6 @@ public class ThreadLocalLogEvent extends ThreadLocal<LogEvent> {\n         logEvent.setPublicIp(hostInfo.getPublicIp());\n         logEvent.setHostname(hostInfo.getPublicHostname());\n         logEvent.setThreadId(Thread.currentThread().getName() + \" \" + Thread.currentThread().getId());\n-\n         ThreadContext.put(\"jobId\", APITestHarness.getInstance().getAgentRunData().getJobId());\n         ThreadContext.put(\"projectName\", APITestHarness.getInstance().getAgentRunData().getProjectName());\n         ThreadContext.put(\"instanceId\", APITestHarness.getInstance().getAgentRunData().getInstanceId());\n@@ -44,8 +47,7 @@ public class ThreadLocalLogEvent extends ThreadLocal<LogEvent> {\n         ThreadContext.put(\"location\", AmazonUtil.getZone());\n         ThreadContext.put(\"httpHost\", AmazonUtil.getControllerBaseUrl());\n         ThreadContext.put(\"loggingProfile\", APITestHarness.getInstance().getAgentRunData().getActiveProfile().getDisplayName());\n-\n         return logEvent;\n-\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
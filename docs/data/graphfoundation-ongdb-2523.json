{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2523",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2523/EventReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2523/EventReporter.java\nindex 9f96bdae430..2955b7a9736 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2523/EventReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2523/EventReporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.output;\n \n import com.codahale.metrics.Counter;\n@@ -29,19 +30,19 @@ import java.util.SortedMap;\n \n public interface EventReporter\n {\n-    /**\n-     * To be called whenever an event occurs. Note that this call might be blocking, hence don't call it from\n-     * time sensitive code or hot path code.\n-     *\n-     * @param gauges all of the gauges in the registry\n-     * @param counters all of the counters in the registry\n-     * @param histograms all of the histograms in the registry\n-     * @param meters all of the meters in the registry\n-     * @param timers all of the timers in the registry\n-     */\n-    void report( SortedMap<String,Gauge> gauges,\n-            SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms,\n-            SortedMap<String,Meter> meters,\n-            SortedMap<String,Timer> timers );\n+  /**\n+   * To be called whenever an event occurs. Note that this call might be blocking, hence don't call it from\n+   * time sensitive code or hot path code.\n+   *\n+   * @param gauges     all of the gauges in the registry\n+   * @param counters   all of the counters in the registry\n+   * @param histograms all of the histograms in the registry\n+   * @param meters     all of the meters in the registry\n+   * @param timers     all of the timers in the registry\n+   */\n+  void report(SortedMap<String, Gauge> gauges,\n+              SortedMap<String, Counter> counters,\n+              SortedMap<String, Histogram> histograms,\n+              SortedMap<String, Meter> meters,\n+              SortedMap<String, Timer> timers);\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2523/EventReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2523/EventReporter.java\nindex 9f96bdae430..c40840dec1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2523/EventReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2523/EventReporter.java\n@@ -39,9 +39,5 @@ public interface EventReporter\n      * @param meters all of the meters in the registry\n      * @param timers all of the timers in the registry\n      */\n-    void report( SortedMap<String,Gauge> gauges,\n-            SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms,\n-            SortedMap<String,Meter> meters,\n-            SortedMap<String,Timer> timers );\n-}\n+    void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters, SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers );\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
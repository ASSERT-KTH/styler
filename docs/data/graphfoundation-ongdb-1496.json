{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1496",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1496/LuceneExplicitIndexTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1496/LuceneExplicitIndexTransaction.java\nindex db15af465b6..ae229891c25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1496/LuceneExplicitIndexTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1496/LuceneExplicitIndexTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.util.HashMap;\n@@ -29,50 +30,50 @@ import org.neo4j.kernel.spi.explicitindex.IndexCommandFactory;\n \n public class LuceneExplicitIndexTransaction implements ExplicitIndexProviderTransaction\n {\n-    private final LuceneDataSource dataSource;\n-    private final Map<String,LuceneExplicitIndex> nodeIndexes = new HashMap<>();\n-    private final Map<String,LuceneExplicitIndex> relationshipIndexes = new HashMap<>();\n-    private final LuceneTransactionState luceneTransaction;\n-    private final IndexCommandFactory commandFactory;\n+  private final LuceneDataSource dataSource;\n+  private final Map<String, LuceneExplicitIndex> nodeIndexes = new HashMap<>();\n+  private final Map<String, LuceneExplicitIndex> relationshipIndexes = new HashMap<>();\n+  private final LuceneTransactionState luceneTransaction;\n+  private final IndexCommandFactory commandFactory;\n \n-    public LuceneExplicitIndexTransaction( LuceneDataSource dataSource, IndexCommandFactory commandFactory )\n-    {\n-        this.dataSource = dataSource;\n-        this.commandFactory = commandFactory;\n-        this.luceneTransaction = new LuceneTransactionState();\n-    }\n+  public LuceneExplicitIndexTransaction(LuceneDataSource dataSource, IndexCommandFactory commandFactory)\n+  {\n+    this.dataSource = dataSource;\n+    this.commandFactory = commandFactory;\n+    this.luceneTransaction = new LuceneTransactionState();\n+  }\n \n-    @Override\n-    public ExplicitIndex nodeIndex( String indexName, Map<String, String> configuration )\n+  @Override\n+  public ExplicitIndex nodeIndex(String indexName, Map<String, String> configuration)\n+  {\n+    LuceneExplicitIndex index = nodeIndexes.get(indexName);\n+    if (index == null)\n     {\n-        LuceneExplicitIndex index = nodeIndexes.get( indexName );\n-        if ( index == null )\n-        {\n-            IndexIdentifier identifier = new IndexIdentifier( IndexEntityType.Node, indexName );\n-            index = new LuceneExplicitIndex.NodeExplicitIndex( dataSource, identifier, luceneTransaction,\n-                    IndexType.getIndexType( configuration ), commandFactory );\n-            nodeIndexes.put( indexName, index );\n-        }\n-        return index;\n+      IndexIdentifier identifier = new IndexIdentifier(IndexEntityType.Node, indexName);\n+      index = new LuceneExplicitIndex.NodeExplicitIndex(dataSource, identifier, luceneTransaction,\n+          IndexType.getIndexType(configuration), commandFactory);\n+      nodeIndexes.put(indexName, index);\n     }\n+    return index;\n+  }\n \n-    @Override\n-    public ExplicitIndex relationshipIndex( String indexName, Map<String, String> configuration )\n+  @Override\n+  public ExplicitIndex relationshipIndex(String indexName, Map<String, String> configuration)\n+  {\n+    LuceneExplicitIndex index = relationshipIndexes.get(indexName);\n+    if (index == null)\n     {\n-        LuceneExplicitIndex index = relationshipIndexes.get( indexName );\n-        if ( index == null )\n-        {\n-            IndexIdentifier identifier = new IndexIdentifier( IndexEntityType.Relationship, indexName );\n-            index = new LuceneExplicitIndex.RelationshipExplicitIndex( dataSource, identifier, luceneTransaction,\n-                    IndexType.getIndexType( configuration ), commandFactory );\n-            relationshipIndexes.put( indexName, index );\n-        }\n-        return index;\n+      IndexIdentifier identifier = new IndexIdentifier(IndexEntityType.Relationship, indexName);\n+      index = new LuceneExplicitIndex.RelationshipExplicitIndex(dataSource, identifier, luceneTransaction,\n+          IndexType.getIndexType(configuration), commandFactory);\n+      relationshipIndexes.put(indexName, index);\n     }\n+    return index;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        luceneTransaction.close();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    luceneTransaction.close();\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1496/LuceneExplicitIndexTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1496/LuceneExplicitIndexTransaction.java\nindex db15af465b6..7703944476d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1496/LuceneExplicitIndexTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1496/LuceneExplicitIndexTransaction.java\n@@ -43,7 +43,7 @@ public class LuceneExplicitIndexTransaction implements ExplicitIndexProviderTran\n     }\n \n     @Override\n-    public ExplicitIndex nodeIndex( String indexName, Map<String, String> configuration )\n+    public ExplicitIndex nodeIndex( String indexName, Map<String,String> configuration )\n     {\n         LuceneExplicitIndex index = nodeIndexes.get( indexName );\n         if ( index == null )\n@@ -51,13 +51,14 @@ public class LuceneExplicitIndexTransaction implements ExplicitIndexProviderTran\n             IndexIdentifier identifier = new IndexIdentifier( IndexEntityType.Node, indexName );\n             index = new LuceneExplicitIndex.NodeExplicitIndex( dataSource, identifier, luceneTransaction,\n                     IndexType.getIndexType( configuration ), commandFactory );\n-            nodeIndexes.put( indexName, index );\n+nodeIndexes.put( indexName, index );\n         }\n-        return index;\n+\n+return index;\n     }\n \n     @Override\n-    public ExplicitIndex relationshipIndex( String indexName, Map<String, String> configuration )\n+    public ExplicitIndex relationshipIndex( String indexName, Map<String,String> configuration )\n     {\n         LuceneExplicitIndex index = relationshipIndexes.get( indexName );\n         if ( index == null )\n@@ -65,9 +66,10 @@ public class LuceneExplicitIndexTransaction implements ExplicitIndexProviderTran\n             IndexIdentifier identifier = new IndexIdentifier( IndexEntityType.Relationship, indexName );\n             index = new LuceneExplicitIndex.RelationshipExplicitIndex( dataSource, identifier, luceneTransaction,\n                     IndexType.getIndexType( configuration ), commandFactory );\n-            relationshipIndexes.put( indexName, index );\n+relationshipIndexes.put( indexName, index );\n         }\n-        return index;\n+\n+return index;\n     }\n \n     @Override\n@@ -75,4 +77,4 @@ public class LuceneExplicitIndexTransaction implements ExplicitIndexProviderTran\n     {\n         luceneTransaction.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
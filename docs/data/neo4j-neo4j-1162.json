{
    "project_name": "neo4j-neo4j",
    "error_id": "1162",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1162/AbstractDelegatingIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1162/AbstractDelegatingIndexProxy.java\nindex 759cca3b1ba..5ff18740788 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1162/AbstractDelegatingIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1162/AbstractDelegatingIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.IOException;\n@@ -51,9 +52,9 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode, PageCursorTracer cursorTracer )\n+    public IndexUpdater newUpdater(IndexUpdateMode mode, PageCursorTracer cursorTracer)\n     {\n-        return getDelegate().newUpdater( mode, cursorTracer );\n+        return getDelegate().newUpdater(mode, cursorTracer);\n     }\n \n     @Override\n@@ -75,9 +76,9 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public void force( IOLimiter ioLimiter, PageCursorTracer cursorTracer ) throws IOException\n+    public void force(IOLimiter ioLimiter, PageCursorTracer cursorTracer) throws IOException\n     {\n-        getDelegate().force( ioLimiter, cursorTracer );\n+        getDelegate().force(ioLimiter, cursorTracer);\n     }\n \n     @Override\n@@ -87,9 +88,9 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public void close( PageCursorTracer cursorTracer ) throws IOException\n+    public void close(PageCursorTracer cursorTracer) throws IOException\n     {\n-        getDelegate().close( cursorTracer );\n+        getDelegate().close(cursorTracer);\n     }\n \n     @Override\n@@ -99,9 +100,9 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public boolean awaitStoreScanCompleted( long time, TimeUnit unit ) throws IndexPopulationFailedKernelException, InterruptedException\n+    public boolean awaitStoreScanCompleted(long time, TimeUnit unit) throws IndexPopulationFailedKernelException, InterruptedException\n     {\n-        return getDelegate().awaitStoreScanCompleted( time, unit );\n+        return getDelegate().awaitStoreScanCompleted(time, unit);\n     }\n \n     @Override\n@@ -117,9 +118,9 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public void validateBeforeCommit( Value[] tuple, long entityId )\n+    public void validateBeforeCommit(Value[] tuple, long entityId)\n     {\n-        getDelegate().validateBeforeCommit( tuple, entityId );\n+        getDelegate().validateBeforeCommit(tuple, entityId);\n     }\n \n     @Override\n@@ -137,7 +138,7 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s -> %s\", getClass().getSimpleName(), getDelegate() );\n+        return String.format(\"%s -> %s\", getClass().getSimpleName(), getDelegate());\n     }\n \n     @Override\n@@ -147,14 +148,14 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     }\n \n     @Override\n-    public Map<String,Value> indexConfig()\n+    public Map<String, Value> indexConfig()\n     {\n         return getDelegate().indexConfig();\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( NodePropertyAccessor accessor ) throws IndexEntryConflictException, IOException\n+    public void verifyDeferredConstraints(NodePropertyAccessor accessor) throws IndexEntryConflictException, IOException\n     {\n-        getDelegate().verifyDeferredConstraints( accessor );\n+        getDelegate().verifyDeferredConstraints(accessor);\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
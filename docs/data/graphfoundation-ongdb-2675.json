{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2675",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "106",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "116",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "118",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "361",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "433",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2675/EnterpriseReadReplicaEditionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2675/EnterpriseReadReplicaEditionModule.java\nindex b2afd1a2bc1..94343742f28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2675/EnterpriseReadReplicaEditionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2675/EnterpriseReadReplicaEditionModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.readreplica;\n \n import io.netty.channel.ChannelInitializer;\n@@ -148,291 +149,290 @@ import static org.neo4j.causalclustering.discovery.ResolutionResolverFactory.cho\n  */\n public class EnterpriseReadReplicaEditionModule extends EditionModule\n {\n-    public EnterpriseReadReplicaEditionModule( final PlatformModule platformModule, final DiscoveryServiceFactory discoveryServiceFactory, MemberId myself )\n-    {\n-        LogService logging = platformModule.logging;\n-\n-        ioLimiter = new ConfigurableIOLimiter( platformModule.config );\n-        platformModule.jobScheduler.setTopLevelGroupName( \"ReadReplica \" + myself );\n-\n-        org.neo4j.kernel.impl.util.Dependencies dependencies = platformModule.dependencies;\n-        Config config = platformModule.config;\n-        FileSystemAbstraction fileSystem = platformModule.fileSystem;\n-        PageCache pageCache = platformModule.pageCache;\n-        File storeDir = platformModule.storeDir;\n-        LifeSupport life = platformModule.life;\n+  public EnterpriseReadReplicaEditionModule(final PlatformModule platformModule, final DiscoveryServiceFactory discoveryServiceFactory, MemberId myself)\n+  {\n+    LogService logging = platformModule.logging;\n \n-        eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n+    ioLimiter = new ConfigurableIOLimiter(platformModule.config);\n+    platformModule.jobScheduler.setTopLevelGroupName(\"ReadReplica \" + myself);\n \n-        this.accessCapability = new ReadOnly();\n+    org.neo4j.kernel.impl.util.Dependencies dependencies = platformModule.dependencies;\n+    Config config = platformModule.config;\n+    FileSystemAbstraction fileSystem = platformModule.fileSystem;\n+    PageCache pageCache = platformModule.pageCache;\n+    File storeDir = platformModule.storeDir;\n+    LifeSupport life = platformModule.life;\n \n-        watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging, platformModule.jobScheduler, config, fileWatcherFileNameFilter() );\n-        dependencies.satisfyDependencies( watcherService );\n+    eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n \n-        GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n+    this.accessCapability = new ReadOnly();\n \n-        lockManager = dependencies.satisfyDependency( new ReadReplicaLockManager() );\n+    watcherService = createFileSystemWatcherService(fileSystem, storeDir, logging, platformModule.jobScheduler, config, fileWatcherFileNameFilter());\n+    dependencies.satisfyDependencies(watcherService);\n \n-        statementLocksFactory = new StatementLocksFactorySelector( lockManager, config, logging ).select();\n+    GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n \n-        idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider( config );\n-        idGeneratorFactory = dependencies.satisfyDependency( new DefaultIdGeneratorFactory( fileSystem, idTypeConfigurationProvider ) );\n-        idController = createDefaultIdController();\n-        dependencies.satisfyDependency( idGeneratorFactory );\n-        dependencies.satisfyDependency( idController );\n-        dependencies.satisfyDependency( new IdBasedStoreEntityCounters( this.idGeneratorFactory ) );\n+    lockManager = dependencies.satisfyDependency(new ReadReplicaLockManager());\n \n-        propertyKeyTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingPropertyKeyTokenHolder( new ReadOnlyTokenCreator() ) ) );\n-        labelTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingLabelTokenHolder( new ReadOnlyTokenCreator() ) ) );\n-        relationshipTypeTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingRelationshipTypeTokenHolder( new ReadOnlyTokenCreator() ) ) );\n+    statementLocksFactory = new StatementLocksFactorySelector(lockManager, config, logging).select();\n \n-        life.add( dependencies.satisfyDependency( new DefaultKernelData( fileSystem, pageCache, storeDir, config, graphDatabaseFacade ) ) );\n+    idTypeConfigurationProvider = new EnterpriseIdTypeConfigurationProvider(config);\n+    idGeneratorFactory = dependencies.satisfyDependency(new DefaultIdGeneratorFactory(fileSystem, idTypeConfigurationProvider));\n+    idController = createDefaultIdController();\n+    dependencies.satisfyDependency(idGeneratorFactory);\n+    dependencies.satisfyDependency(idController);\n+    dependencies.satisfyDependency(new IdBasedStoreEntityCounters(this.idGeneratorFactory));\n \n-        headerInformationFactory = TransactionHeaderInformationFactory.DEFAULT;\n+    propertyKeyTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingPropertyKeyTokenHolder(new ReadOnlyTokenCreator())));\n+    labelTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingLabelTokenHolder(new ReadOnlyTokenCreator())));\n+    relationshipTypeTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingRelationshipTypeTokenHolder(new ReadOnlyTokenCreator())));\n \n-        schemaWriteGuard = () ->\n-        {\n-        };\n+    life.add(dependencies.satisfyDependency(new DefaultKernelData(fileSystem, pageCache, storeDir, config, graphDatabaseFacade)));\n \n-        transactionStartTimeout = config.get( GraphDatabaseSettings.transaction_start_timeout ).toMillis();\n+    headerInformationFactory = TransactionHeaderInformationFactory.DEFAULT;\n \n-        constraintSemantics = new EnterpriseConstraintSemantics();\n-\n-        coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n-\n-        registerRecovery( platformModule.databaseInfo, life, dependencies );\n+    schemaWriteGuard = () ->\n+    {\n+    };\n \n-        publishEditionInfo( dependencies.resolveDependency( UsageData.class ), platformModule.databaseInfo, config );\n-        commitProcessFactory = readOnly();\n+    transactionStartTimeout = config.get(GraphDatabaseSettings.transaction_start_timeout).toMillis();\n \n-        LogProvider logProvider = platformModule.logging.getInternalLogProvider();\n-        LogProvider userLogProvider = platformModule.logging.getUserLogProvider();\n+    constraintSemantics = new EnterpriseConstraintSemantics();\n \n-        logProvider.getLog( getClass() ).info( String.format( \"Generated new id: %s\", myself ) );\n+    coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard(platformModule.availabilityGuard, transactionStartTimeout);\n \n-        HostnameResolver hostnameResolver = chooseResolver( config, logProvider, userLogProvider );\n+    registerRecovery(platformModule.databaseInfo, life, dependencies);\n \n-        configureDiscoveryService( discoveryServiceFactory, dependencies, config, logProvider );\n+    publishEditionInfo(dependencies.resolveDependency(UsageData.class), platformModule.databaseInfo, config);\n+    commitProcessFactory = readOnly();\n \n-        TopologyService topologyService = discoveryServiceFactory.topologyService( config, logProvider, platformModule.jobScheduler, myself, hostnameResolver,\n-                resolveStrategy( config, logProvider ) );\n+    LogProvider logProvider = platformModule.logging.getInternalLogProvider();\n+    LogProvider userLogProvider = platformModule.logging.getUserLogProvider();\n \n-        life.add( dependencies.satisfyDependency( topologyService ) );\n+    logProvider.getLog(getClass()).info(String.format(\"Generated new id: %s\", myself));\n \n-        // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n-        dependencies.satisfyDependency( SslPolicyLoader.create( config, logProvider ) );\n+    HostnameResolver hostnameResolver = chooseResolver(config, logProvider, userLogProvider);\n \n-        DuplexPipelineWrapperFactory pipelineWrapperFactory = pipelineWrapperFactory();\n-        PipelineWrapper serverPipelineWrapper = pipelineWrapperFactory.forServer( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n-        PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory.forClient( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n-        PipelineWrapper backupServerPipelineWrapper = pipelineWrapperFactory.forServer( config, dependencies, logProvider, OnlineBackupSettings.ssl_policy );\n+    configureDiscoveryService(discoveryServiceFactory, dependencies, config, logProvider);\n \n-        NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory( clientPipelineWrapper );\n-        NettyPipelineBuilderFactory serverPipelineBuilderFactory = new NettyPipelineBuilderFactory( serverPipelineWrapper );\n-        NettyPipelineBuilderFactory backupServerPipelineBuilderFactory = new NettyPipelineBuilderFactory( backupServerPipelineWrapper );\n+    TopologyService topologyService = discoveryServiceFactory.topologyService(config, logProvider, platformModule.jobScheduler, myself, hostnameResolver,\n+        resolveStrategy(config, logProvider));\n \n-        SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator( config, logProvider );\n-        ApplicationSupportedProtocols supportedCatchupProtocols = supportedProtocolCreator.createSupportedCatchupProtocol();\n-        Collection<ModifierSupportedProtocols> supportedModifierProtocols = supportedProtocolCreator.createSupportedModifierProtocols();\n+    life.add(dependencies.satisfyDependency(topologyService));\n \n-        ApplicationProtocolRepository applicationProtocolRepository =\n-                new ApplicationProtocolRepository( ApplicationProtocols.values(), supportedCatchupProtocols );\n-        ModifierProtocolRepository modifierProtocolRepository =\n-                new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n+    // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n+    dependencies.satisfyDependency(SslPolicyLoader.create(config, logProvider));\n \n-        Function<CatchUpResponseHandler,ChannelInitializer<SocketChannel>> channelInitializer = handler -> {\n-            ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository = new ProtocolInstallerRepository<>(\n-                    singletonList( new CatchupProtocolClientInstaller.Factory( clientPipelineBuilderFactory, logProvider, handler ) ),\n-                    ModifierProtocolInstaller.allClientInstallers );\n-            Duration handshakeTimeout = config.get( CausalClusteringSettings.handshake_timeout );\n-            return new HandshakeClientInitializer( applicationProtocolRepository, modifierProtocolRepository, protocolInstallerRepository,\n-                    clientPipelineBuilderFactory, handshakeTimeout, logProvider );\n-        };\n+    DuplexPipelineWrapperFactory pipelineWrapperFactory = pipelineWrapperFactory();\n+    PipelineWrapper serverPipelineWrapper = pipelineWrapperFactory.forServer(config, dependencies, logProvider, CausalClusteringSettings.ssl_policy);\n+    PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory.forClient(config, dependencies, logProvider, CausalClusteringSettings.ssl_policy);\n+    PipelineWrapper backupServerPipelineWrapper = pipelineWrapperFactory.forServer(config, dependencies, logProvider, OnlineBackupSettings.ssl_policy);\n \n-        long inactivityTimeoutMillis = config.get( CausalClusteringSettings.catch_up_client_inactivity_timeout ).toMillis();\n-        CatchUpClient catchUpClient = life.add( new CatchUpClient( logProvider, Clocks.systemClock(), inactivityTimeoutMillis, channelInitializer ) );\n+    NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory(clientPipelineWrapper);\n+    NettyPipelineBuilderFactory serverPipelineBuilderFactory = new NettyPipelineBuilderFactory(serverPipelineWrapper);\n+    NettyPipelineBuilderFactory backupServerPipelineBuilderFactory = new NettyPipelineBuilderFactory(backupServerPipelineWrapper);\n \n-        final Supplier<DatabaseHealth> databaseHealthSupplier = dependencies.provideDependency( DatabaseHealth.class );\n+    SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator(config, logProvider);\n+    ApplicationSupportedProtocols supportedCatchupProtocols = supportedProtocolCreator.createSupportedCatchupProtocol();\n+    Collection<ModifierSupportedProtocols> supportedModifierProtocols = supportedProtocolCreator.createSupportedModifierProtocols();\n \n-        Supplier<TransactionCommitProcess> writableCommitProcess =\n-                () -> new TransactionRepresentationCommitProcess( dependencies.resolveDependency( TransactionAppender.class ),\n-                        dependencies.resolveDependency( StorageEngine.class ) );\n+    ApplicationProtocolRepository applicationProtocolRepository =\n+        new ApplicationProtocolRepository(ApplicationProtocols.values(), supportedCatchupProtocols);\n+    ModifierProtocolRepository modifierProtocolRepository =\n+        new ModifierProtocolRepository(Protocol.ModifierProtocols.values(), supportedModifierProtocols);\n \n-        LifeSupport txPulling = new LifeSupport();\n-        int maxBatchSize = config.get( CausalClusteringSettings.read_replica_transaction_applier_batch_size );\n-        BatchingTxApplier batchingTxApplier = new BatchingTxApplier(\n-                maxBatchSize, dependencies.provideDependency( TransactionIdStore.class ), writableCommitProcess,\n-                platformModule.monitors, platformModule.tracers.pageCursorTracerSupplier,\n-                platformModule.versionContextSupplier, logProvider );\n+    Function<CatchUpResponseHandler, ChannelInitializer<SocketChannel>> channelInitializer = handler -> {\n+      ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository = new ProtocolInstallerRepository<>(\n+          singletonList(new CatchupProtocolClientInstaller.Factory(clientPipelineBuilderFactory, logProvider, handler)),\n+          ModifierProtocolInstaller.allClientInstallers);\n+      Duration handshakeTimeout = config.get(CausalClusteringSettings.handshake_timeout);\n+      return new HandshakeClientInitializer(applicationProtocolRepository, modifierProtocolRepository, protocolInstallerRepository,\n+          clientPipelineBuilderFactory, handshakeTimeout, logProvider);\n+    };\n \n-        TimerService timerService = new TimerService( platformModule.jobScheduler, logProvider );\n+    long inactivityTimeoutMillis = config.get(CausalClusteringSettings.catch_up_client_inactivity_timeout).toMillis();\n+    CatchUpClient catchUpClient = life.add(new CatchUpClient(logProvider, Clocks.systemClock(), inactivityTimeoutMillis, channelInitializer));\n \n-        StoreFiles storeFiles = new StoreFiles( fileSystem, pageCache );\n-        LogFiles logFiles = buildLocalDatabaseLogFiles( platformModule, fileSystem, storeDir, config );\n+    final Supplier<DatabaseHealth> databaseHealthSupplier = dependencies.provideDependency(DatabaseHealth.class);\n \n-        LocalDatabase localDatabase =\n-                new LocalDatabase( platformModule.storeDir, storeFiles, logFiles, platformModule.dataSourceManager,\n-                        databaseHealthSupplier,\n-                        watcherService, platformModule.availabilityGuard, logProvider );\n+    Supplier<TransactionCommitProcess> writableCommitProcess =\n+        () -> new TransactionRepresentationCommitProcess(dependencies.resolveDependency(TransactionAppender.class),\n+            dependencies.resolveDependency(StorageEngine.class));\n \n-        ExponentialBackoffStrategy storeCopyBackoffStrategy =\n-                new ExponentialBackoffStrategy( 1, config.get( CausalClusteringSettings.store_copy_backoff_max_wait ).toMillis(), TimeUnit.MILLISECONDS );\n+    LifeSupport txPulling = new LifeSupport();\n+    int maxBatchSize = config.get(CausalClusteringSettings.read_replica_transaction_applier_batch_size);\n+    BatchingTxApplier batchingTxApplier = new BatchingTxApplier(\n+        maxBatchSize, dependencies.provideDependency(TransactionIdStore.class), writableCommitProcess,\n+        platformModule.monitors, platformModule.tracers.pageCursorTracerSupplier,\n+        platformModule.versionContextSupplier, logProvider);\n \n-        RemoteStore remoteStore = new RemoteStore( platformModule.logging.getInternalLogProvider(), fileSystem, platformModule.pageCache,\n-                new StoreCopyClient( catchUpClient, platformModule.monitors, logProvider, storeCopyBackoffStrategy ),\n-                new TxPullClient( catchUpClient, platformModule.monitors ),\n-                new TransactionLogCatchUpFactory(), config, platformModule.monitors );\n+    TimerService timerService = new TimerService(platformModule.jobScheduler, logProvider);\n \n-        CopiedStoreRecovery copiedStoreRecovery = new CopiedStoreRecovery( config, platformModule.kernelExtensions.listFactories(), platformModule.pageCache );\n+    StoreFiles storeFiles = new StoreFiles(fileSystem, pageCache);\n+    LogFiles logFiles = buildLocalDatabaseLogFiles(platformModule, fileSystem, storeDir, config);\n \n-        txPulling.add( copiedStoreRecovery );\n+    LocalDatabase localDatabase =\n+        new LocalDatabase(platformModule.storeDir, storeFiles, logFiles, platformModule.dataSourceManager,\n+            databaseHealthSupplier,\n+            watcherService, platformModule.availabilityGuard, logProvider);\n \n-        CompositeSuspendable servicesToStopOnStoreCopy = new CompositeSuspendable();\n+    ExponentialBackoffStrategy storeCopyBackoffStrategy =\n+        new ExponentialBackoffStrategy(1, config.get(CausalClusteringSettings.store_copy_backoff_max_wait).toMillis(), TimeUnit.MILLISECONDS);\n \n-        StoreCopyProcess storeCopyProcess = new StoreCopyProcess( fileSystem, pageCache, localDatabase,\n-                copiedStoreRecovery, remoteStore, logProvider );\n+    RemoteStore remoteStore = new RemoteStore(platformModule.logging.getInternalLogProvider(), fileSystem, platformModule.pageCache,\n+        new StoreCopyClient(catchUpClient, platformModule.monitors, logProvider, storeCopyBackoffStrategy),\n+        new TxPullClient(catchUpClient, platformModule.monitors),\n+        new TransactionLogCatchUpFactory(), config, platformModule.monitors);\n \n-        ConnectToRandomCoreServerStrategy defaultStrategy = new ConnectToRandomCoreServerStrategy();\n-        defaultStrategy.inject( topologyService, config, logProvider, myself );\n+    CopiedStoreRecovery copiedStoreRecovery = new CopiedStoreRecovery(config, platformModule.kernelExtensions.listFactories(), platformModule.pageCache);\n \n-        UpstreamDatabaseStrategySelector upstreamDatabaseStrategySelector =\n-                createUpstreamDatabaseStrategySelector( myself, config, logProvider, topologyService, defaultStrategy );\n+    txPulling.add(copiedStoreRecovery);\n \n-        CatchupPollingProcess catchupProcess =\n-                new CatchupPollingProcess( logProvider, localDatabase, servicesToStopOnStoreCopy, catchUpClient, upstreamDatabaseStrategySelector,\n-                        timerService, config.get( CausalClusteringSettings.pull_interval ).toMillis(), batchingTxApplier, platformModule.monitors,\n-                        storeCopyProcess, databaseHealthSupplier, topologyService );\n-        dependencies.satisfyDependencies( catchupProcess );\n+    CompositeSuspendable servicesToStopOnStoreCopy = new CompositeSuspendable();\n \n-        txPulling.add( batchingTxApplier );\n-        txPulling.add( catchupProcess );\n-        txPulling.add( new WaitForUpToDateStore( catchupProcess, logProvider ) );\n+    StoreCopyProcess storeCopyProcess = new StoreCopyProcess(fileSystem, pageCache, localDatabase,\n+        copiedStoreRecovery, remoteStore, logProvider);\n \n-        ExponentialBackoffStrategy retryStrategy = new ExponentialBackoffStrategy( 1, 30, TimeUnit.SECONDS );\n-        life.add( new ReadReplicaStartupProcess( remoteStore, localDatabase, txPulling, upstreamDatabaseStrategySelector, retryStrategy, logProvider,\n-                platformModule.logging.getUserLogProvider(), storeCopyProcess, topologyService ) );\n+    ConnectToRandomCoreServerStrategy defaultStrategy = new ConnectToRandomCoreServerStrategy();\n+    defaultStrategy.inject(topologyService, config, logProvider, myself);\n \n-        RegularCatchupServerHandler catchupServerHandler = new RegularCatchupServerHandler( platformModule.monitors,\n-                logProvider, localDatabase::storeId, platformModule.dependencies.provideDependency( TransactionIdStore.class ),\n-                platformModule.dependencies.provideDependency( LogicalTransactionStore.class ), localDatabase::dataSource, localDatabase::isAvailable,\n-                fileSystem, platformModule.pageCache, platformModule.storeCopyCheckPointMutex, null, new CheckpointerSupplier( platformModule.dependencies ) );\n+    UpstreamDatabaseStrategySelector upstreamDatabaseStrategySelector =\n+        createUpstreamDatabaseStrategySelector(myself, config, logProvider, topologyService, defaultStrategy);\n \n-        InstalledProtocolHandler installedProtocolHandler = new InstalledProtocolHandler(); // TODO: hook into a procedure\n-        Server catchupServer = new CatchupServerBuilder( catchupServerHandler )\n-                .serverHandler( installedProtocolHandler )\n-                .catchupProtocols( supportedCatchupProtocols )\n-                .modifierProtocols( supportedModifierProtocols )\n-                .pipelineBuilder( serverPipelineBuilderFactory )\n-                .userLogProvider( userLogProvider )\n-                .debugLogProvider( logProvider )\n-                .listenAddress( config.get( transaction_listen_address ) )\n-                .serverName( \"catchup-server\" )\n-                .build();\n-\n-        TransactionBackupServiceProvider transactionBackupServiceProvider =\n-                new TransactionBackupServiceProvider( logProvider, userLogProvider, supportedCatchupProtocols, supportedModifierProtocols,\n-                        backupServerPipelineBuilderFactory, catchupServerHandler, installedProtocolHandler );\n-        Optional<Server> backupCatchupServer = transactionBackupServiceProvider.resolveIfBackupEnabled( config );\n-\n-        servicesToStopOnStoreCopy.add( catchupServer );\n-        backupCatchupServer.ifPresent( servicesToStopOnStoreCopy::add );\n-\n-        dependencies.satisfyDependency( createSessionTracker() );\n+    CatchupPollingProcess catchupProcess =\n+        new CatchupPollingProcess(logProvider, localDatabase, servicesToStopOnStoreCopy, catchUpClient, upstreamDatabaseStrategySelector,\n+            timerService, config.get(CausalClusteringSettings.pull_interval).toMillis(), batchingTxApplier, platformModule.monitors,\n+            storeCopyProcess, databaseHealthSupplier, topologyService);\n+    dependencies.satisfyDependencies(catchupProcess);\n \n-        life.add( catchupServer ); // must start last and stop first, since it handles external requests\n-        backupCatchupServer.ifPresent( life::add );\n-    }\n+    txPulling.add(batchingTxApplier);\n+    txPulling.add(catchupProcess);\n+    txPulling.add(new WaitForUpToDateStore(catchupProcess, logProvider));\n \n-    private UpstreamDatabaseStrategySelector createUpstreamDatabaseStrategySelector( MemberId myself, Config config, LogProvider logProvider,\n-            TopologyService topologyService, ConnectToRandomCoreServerStrategy defaultStrategy )\n-    {\n-        UpstreamDatabaseStrategiesLoader loader;\n-        if ( config.get( CausalClusteringSettings.multi_dc_license ) )\n-        {\n-            loader = new UpstreamDatabaseStrategiesLoader( topologyService, config, myself, logProvider );\n-            logProvider.getLog( getClass() ).info( \"Multi-Data Center option enabled.\" );\n-        }\n-        else\n-        {\n-            loader = new NoOpUpstreamDatabaseStrategiesLoader();\n-        }\n-\n-        return new UpstreamDatabaseStrategySelector( defaultStrategy, loader, logProvider );\n-    }\n+    ExponentialBackoffStrategy retryStrategy = new ExponentialBackoffStrategy(1, 30, TimeUnit.SECONDS);\n+    life.add(new ReadReplicaStartupProcess(remoteStore, localDatabase, txPulling, upstreamDatabaseStrategySelector, retryStrategy, logProvider,\n+        platformModule.logging.getUserLogProvider(), storeCopyProcess, topologyService));\n \n-    protected void configureDiscoveryService( DiscoveryServiceFactory discoveryServiceFactory, Dependencies dependencies,\n-                                              Config config, LogProvider logProvider )\n+    RegularCatchupServerHandler catchupServerHandler = new RegularCatchupServerHandler(platformModule.monitors,\n+        logProvider, localDatabase::storeId, platformModule.dependencies.provideDependency(TransactionIdStore.class),\n+        platformModule.dependencies.provideDependency(LogicalTransactionStore.class), localDatabase::dataSource, localDatabase::isAvailable,\n+        fileSystem, platformModule.pageCache, platformModule.storeCopyCheckPointMutex, null, new CheckpointerSupplier(platformModule.dependencies));\n+\n+    InstalledProtocolHandler installedProtocolHandler = new InstalledProtocolHandler(); // TODO: hook into a procedure\n+    Server catchupServer = new CatchupServerBuilder(catchupServerHandler)\n+        .serverHandler(installedProtocolHandler)\n+        .catchupProtocols(supportedCatchupProtocols)\n+        .modifierProtocols(supportedModifierProtocols)\n+        .pipelineBuilder(serverPipelineBuilderFactory)\n+        .userLogProvider(userLogProvider)\n+        .debugLogProvider(logProvider)\n+        .listenAddress(config.get(transaction_listen_address))\n+        .serverName(\"catchup-server\")\n+        .build();\n+\n+    TransactionBackupServiceProvider transactionBackupServiceProvider =\n+        new TransactionBackupServiceProvider(logProvider, userLogProvider, supportedCatchupProtocols, supportedModifierProtocols,\n+            backupServerPipelineBuilderFactory, catchupServerHandler, installedProtocolHandler);\n+    Optional<Server> backupCatchupServer = transactionBackupServiceProvider.resolveIfBackupEnabled(config);\n+\n+    servicesToStopOnStoreCopy.add(catchupServer);\n+    backupCatchupServer.ifPresent(servicesToStopOnStoreCopy::add);\n+\n+    dependencies.satisfyDependency(createSessionTracker());\n+\n+    life.add(catchupServer); // must start last and stop first, since it handles external requests\n+    backupCatchupServer.ifPresent(life::add);\n+  }\n+\n+  private UpstreamDatabaseStrategySelector createUpstreamDatabaseStrategySelector(MemberId myself, Config config, LogProvider logProvider,\n+                                                                                  TopologyService topologyService,\n+                                                                                  ConnectToRandomCoreServerStrategy defaultStrategy)\n+  {\n+    UpstreamDatabaseStrategiesLoader loader;\n+    if (config.get(CausalClusteringSettings.multi_dc_license))\n     {\n-    }\n-\n-    protected DuplexPipelineWrapperFactory pipelineWrapperFactory()\n+      loader = new UpstreamDatabaseStrategiesLoader(topologyService, config, myself, logProvider);\n+      logProvider.getLog(getClass()).info(\"Multi-Data Center option enabled.\");\n+    } else\n     {\n-        return new VoidPipelineWrapperFactory();\n+      loader = new NoOpUpstreamDatabaseStrategiesLoader();\n     }\n \n-    static Predicate<String> fileWatcherFileNameFilter()\n+    return new UpstreamDatabaseStrategySelector(defaultStrategy, loader, logProvider);\n+  }\n+\n+  protected void configureDiscoveryService(DiscoveryServiceFactory discoveryServiceFactory, Dependencies dependencies,\n+                                           Config config, LogProvider logProvider)\n+  {\n+  }\n+\n+  protected DuplexPipelineWrapperFactory pipelineWrapperFactory()\n+  {\n+    return new VoidPipelineWrapperFactory();\n+  }\n+\n+  static Predicate<String> fileWatcherFileNameFilter()\n+  {\n+    return Predicates.any(fileName -> fileName.startsWith(TransactionLogFiles.DEFAULT_NAME),\n+        fileName -> fileName.startsWith(IndexConfigStore.INDEX_DB_FILE_NAME),\n+        filename -> filename.startsWith(StoreUtil.BRANCH_SUBDIRECTORY),\n+        filename -> filename.startsWith(StoreUtil.TEMP_COPY_DIRECTORY_NAME),\n+        filename -> filename.endsWith(PageCacheWarmer.SUFFIX_CACHEPROF));\n+  }\n+\n+  @Override\n+  public void registerEditionSpecificProcedures(Procedures procedures) throws KernelException\n+  {\n+    procedures.registerProcedure(EnterpriseBuiltInDbmsProcedures.class, true);\n+    procedures.register(new ReadReplicaRoleProcedure());\n+  }\n+\n+  private void registerRecovery(final DatabaseInfo databaseInfo, LifeSupport life, final DependencyResolver dependencyResolver)\n+  {\n+    life.addLifecycleListener((instance, from, to) ->\n     {\n-        return Predicates.any( fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ),\n-                fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME ),\n-                filename -> filename.startsWith( StoreUtil.BRANCH_SUBDIRECTORY ),\n-                filename -> filename.startsWith( StoreUtil.TEMP_COPY_DIRECTORY_NAME ),\n-                filename -> filename.endsWith( PageCacheWarmer.SUFFIX_CACHEPROF ) );\n-    }\n-\n-    @Override\n-    public void registerEditionSpecificProcedures( Procedures procedures ) throws KernelException\n+      if (instance instanceof DatabaseAvailability && to.equals(LifecycleStatus.STARTED))\n+      {\n+        doAfterRecoveryAndStartup(databaseInfo, dependencyResolver);\n+      }\n+    });\n+  }\n+\n+  private CommitProcessFactory readOnly()\n+  {\n+    return (appender, storageEngine, config) -> new ReadOnlyTransactionCommitProcess();\n+  }\n+\n+  @Override\n+  protected BoltConnectionTracker createSessionTracker()\n+  {\n+    return new StandardBoltConnectionTracker();\n+  }\n+\n+  @Override\n+  public void setupSecurityModule(PlatformModule platformModule, Procedures procedures)\n+  {\n+    EnterpriseEditionModule.setupEnterpriseSecurityModule(platformModule, procedures);\n+  }\n+\n+  private static TopologyServiceRetryStrategy resolveStrategy(Config config, LogProvider logProvider)\n+  {\n+    long refreshPeriodMillis = config.get(CausalClusteringSettings.cluster_topology_refresh).toMillis();\n+    int pollingFrequencyWithinRefreshWindow = 2;\n+    int numberOfRetries =\n+        pollingFrequencyWithinRefreshWindow + 1; // we want to have more retries at the given frequency than there is time in a refresh period\n+    return new TopologyServiceMultiRetryStrategy(refreshPeriodMillis / pollingFrequencyWithinRefreshWindow, numberOfRetries, logProvider);\n+  }\n+\n+  private LogFiles buildLocalDatabaseLogFiles(PlatformModule platformModule, FileSystemAbstraction fileSystem,\n+                                              File storeDir, Config config)\n+  {\n+    try\n     {\n-        procedures.registerProcedure( EnterpriseBuiltInDbmsProcedures.class, true );\n-        procedures.register( new ReadReplicaRoleProcedure() );\n-    }\n-\n-    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life, final DependencyResolver dependencyResolver )\n-    {\n-        life.addLifecycleListener( ( instance, from, to ) ->\n-        {\n-            if ( instance instanceof DatabaseAvailability && to.equals( LifecycleStatus.STARTED ) )\n-            {\n-                doAfterRecoveryAndStartup( databaseInfo, dependencyResolver );\n-            }\n-        } );\n-    }\n-\n-    private CommitProcessFactory readOnly()\n-    {\n-        return ( appender, storageEngine, config ) -> new ReadOnlyTransactionCommitProcess();\n-    }\n-\n-    @Override\n-    protected BoltConnectionTracker createSessionTracker()\n-    {\n-        return new StandardBoltConnectionTracker();\n-    }\n-\n-    @Override\n-    public void setupSecurityModule( PlatformModule platformModule, Procedures procedures )\n-    {\n-        EnterpriseEditionModule.setupEnterpriseSecurityModule( platformModule, procedures );\n-    }\n-\n-    private static TopologyServiceRetryStrategy resolveStrategy( Config config, LogProvider logProvider )\n-    {\n-        long refreshPeriodMillis = config.get( CausalClusteringSettings.cluster_topology_refresh ).toMillis();\n-        int pollingFrequencyWithinRefreshWindow = 2;\n-        int numberOfRetries =\n-                pollingFrequencyWithinRefreshWindow + 1; // we want to have more retries at the given frequency than there is time in a refresh period\n-        return new TopologyServiceMultiRetryStrategy( refreshPeriodMillis / pollingFrequencyWithinRefreshWindow, numberOfRetries, logProvider );\n-    }\n-\n-    private LogFiles buildLocalDatabaseLogFiles( PlatformModule platformModule, FileSystemAbstraction fileSystem,\n-            File storeDir, Config config )\n+      return LogFilesBuilder.activeFilesBuilder(storeDir, fileSystem, platformModule.pageCache).withConfig(config).build();\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            return LogFilesBuilder.activeFilesBuilder( storeDir, fileSystem, platformModule.pageCache ).withConfig( config ).build();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw new RuntimeException(e);\n     }\n+  }\n }\n",
            "diff_size": 359
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
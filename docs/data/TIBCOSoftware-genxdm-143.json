{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "143",
    "information": {
        "errors": [
            {
                "line": "108",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    @SuppressWarnings(\"rawtypes\")\n    @Override\n\tpublic Iterator getAllAttributes()\n    {\n        return null;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "115",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/143/FauxElement.java\nindex 7fd595c4e17..525a2d69e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/143/FauxElement.java\n@@ -105,7 +105,7 @@ public class FauxElement\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllAttributes()\n+public Iterator getAllAttributes()\n     {\n         return null;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/143/FauxElement.java\nindex 7fd595c4e17..088a5e686b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/143/FauxElement.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.axiom;\n \n import java.io.OutputStream;\n@@ -46,512 +47,433 @@ import org.genxdm.exceptions.PreCondition;\n // by faux namespace.\n public class FauxElement\n     extends Object\n-    implements OMElement\n-{\n-    \n-    public FauxElement(OMContainer root)\n-    {\n+    implements OMElement {\n+\n+    public FauxElement(OMContainer root) {\n         PreCondition.assertNotNull(root, \"root\");\n         this.root = root;\n     }\n \n     @Override\n-    public OMAttribute addAttribute(OMAttribute attr)\n-    {\n+    public OMAttribute addAttribute(OMAttribute attr) {\n         return null;\n     }\n \n     @Override\n-    public OMAttribute addAttribute(String attributeName, String value, OMNamespace ns)\n-    {\n+    public OMAttribute addAttribute(String attributeName, String value, OMNamespace ns) {\n         return null;\n     }\n \n     @Override\n-    public OMElement cloneOMElement()\n-    {\n+    public OMElement cloneOMElement() {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace declareDefaultNamespace(String uri)\n-    {\n+    public OMNamespace declareDefaultNamespace(String uri) {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace declareNamespace(OMNamespace namespace)\n-    {\n+    public OMNamespace declareNamespace(OMNamespace namespace) {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace declareNamespace(String uri, String prefix)\n-    {\n+    public OMNamespace declareNamespace(String uri, String prefix) {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace findNamespace(String uri, String prefix)\n-    {\n+    public OMNamespace findNamespace(String uri, String prefix) {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace findNamespaceURI(String prefix)\n-    {\n+    public OMNamespace findNamespaceURI(String prefix) {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllAttributes()\n-    {\n+    public Iterator getAllAttributes() {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllDeclaredNamespaces()\n-        throws OMException\n-    {\n+    public Iterator getAllDeclaredNamespaces()\n+        throws OMException {\n         return null;\n     }\n \n     @Override\n-    public OMAttribute getAttribute(QName qname)\n-    {\n+    public OMAttribute getAttribute(QName qname) {\n         return null;\n     }\n \n     @Override\n-    public String getAttributeValue(QName qname)\n-    {\n+    public String getAttributeValue(QName qname) {\n         return null;\n     }\n \n     @Override\n-    public OMXMLParserWrapper getBuilder()\n-    {\n+    public OMXMLParserWrapper getBuilder() {\n         return null;\n     }\n \n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getChildElements()\n-    {\n+    public Iterator getChildElements() {\n         return null;\n     }\n \n     @Override\n-    public OMNamespace getDefaultNamespace()\n-    {\n+    public OMNamespace getDefaultNamespace() {\n         return null;\n     }\n \n     @Override\n-    public OMElement getFirstElement()\n-    {\n+    public OMElement getFirstElement() {\n         return null;\n     }\n \n     @Override\n-    public int getLineNumber()\n-    {\n+    public int getLineNumber() {\n         return 0;\n     }\n \n     @Override\n-    public String getLocalName()\n-    {\n+    public String getLocalName() {\n         return null;\n     }\n \n     @Override\n     public OMNamespace getNamespace()\n-        throws OMException\n-    {\n+        throws OMException {\n         return null;\n     }\n-    \n+\n     @Override\n     public String getNamespaceURI()\n-        throws OMException\n-    {\n+        throws OMException {\n         return null;\n     }\n \n     @Override\n-    public QName getQName()\n-    {\n+    public QName getQName() {\n         return null;\n     }\n \n     @Override\n-    public String getText()\n-    {\n+    public String getText() {\n         return null;\n     }\n \n     @Override\n-    public QName getTextAsQName()\n-    {\n+    public QName getTextAsQName() {\n         return null;\n     }\n \n     @Override\n-    public XMLStreamReader getXMLStreamReader()\n-    {\n+    public XMLStreamReader getXMLStreamReader() {\n         return null;\n     }\n \n     @Override\n-    public XMLStreamReader getXMLStreamReaderWithoutCaching()\n-    {\n+    public XMLStreamReader getXMLStreamReaderWithoutCaching() {\n         return null;\n     }\n \n     @Override\n-    public void removeAttribute(OMAttribute attr)\n-    {\n+    public void removeAttribute(OMAttribute attr) {\n \n     }\n \n     @Override\n-    public QName resolveQName(String qname)\n-    {\n+    public QName resolveQName(String qname) {\n         return null;\n     }\n \n     @Override\n-    public void setBuilder(OMXMLParserWrapper wrapper)\n-    {\n+    public void setBuilder(OMXMLParserWrapper wrapper) {\n \n     }\n \n     @Override\n-    public void setLineNumber(int lineNumber)\n-    {\n+    public void setLineNumber(int lineNumber) {\n \n     }\n \n     @Override\n-    public void setLocalName(String localName)\n-    {\n+    public void setLocalName(String localName) {\n \n     }\n \n     @Override\n-    public void setNamespace(OMNamespace namespace)\n-    {\n+    public void setNamespace(OMNamespace namespace) {\n \n     }\n \n     @Override\n-    public void setNamespaceWithNoFindInCurrentScope(OMNamespace namespace)\n-    {\n+    public void setNamespaceWithNoFindInCurrentScope(OMNamespace namespace) {\n \n     }\n \n     @Override\n-    public void setText(String text)\n-    {\n+    public void setText(String text) {\n \n     }\n \n     @Override\n-    public void setText(QName text)\n-    {\n+    public void setText(QName text) {\n \n     }\n \n     @Override\n     public String toStringWithConsume()\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n         return null;\n     }\n \n     @Override\n-    public void build()\n-    {\n+    public void build() {\n \n     }\n \n     @Override\n-    public void buildWithAttachments()\n-    {\n+    public void buildWithAttachments() {\n \n     }\n \n     @Override\n-    public void close(boolean build)\n-    {\n+    public void close(boolean build) {\n \n     }\n \n     @Override\n     public OMNode detach()\n-        throws OMException\n-    {\n+        throws OMException {\n         return null;\n     }\n \n     @Override\n     public void discard()\n-        throws OMException\n-    {\n+        throws OMException {\n \n     }\n \n     @Override\n     public OMNode getNextOMSibling()\n-        throws OMException\n-    {\n+        throws OMException {\n         return null;\n     }\n \n     @Override\n-    public OMFactory getOMFactory()\n-    {\n+    public OMFactory getOMFactory() {\n         return null;\n     }\n \n     @Override\n-    public OMContainer getParent()\n-    {\n+    public OMContainer getParent() {\n         return root;\n     }\n \n     @Override\n-    public OMNode getPreviousOMSibling()\n-    {\n+    public OMNode getPreviousOMSibling() {\n         return null;\n     }\n \n     @Override\n-    public int getType()\n-    {\n+    public int getType() {\n         return 0;\n     }\n \n     @Override\n     public void insertSiblingAfter(OMNode sibling)\n-        throws OMException\n-    {\n+        throws OMException {\n \n     }\n \n     @Override\n     public void insertSiblingBefore(OMNode sibling)\n-        throws OMException\n-    {\n+        throws OMException {\n \n     }\n \n     @Override\n-    public boolean isComplete()\n-    {\n+    public boolean isComplete() {\n         return false;\n     }\n \n     @Override\n     public void serialize(XMLStreamWriter xmlWriter)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serialize(OutputStream output)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serialize(Writer writer)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serialize(OutputStream output, OMOutputFormat format)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serialize(Writer writer, OMOutputFormat format)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serializeAndConsume(XMLStreamWriter xmlWriter)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serializeAndConsume(OutputStream output)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serializeAndConsume(Writer writer)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serializeAndConsume(OutputStream output, OMOutputFormat format)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n     public void serializeAndConsume(Writer writer, OMOutputFormat format)\n-        throws XMLStreamException\n-    {\n+        throws XMLStreamException {\n \n     }\n \n     @Override\n-    public void addChild(OMNode omNode)\n-    {\n+    public void addChild(OMNode omNode) {\n \n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildren()\n-    {\n+    public Iterator getChildren() {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithLocalName(String localName)\n-    {\n+    public Iterator getChildrenWithLocalName(String localName) {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithName(QName elementQName)\n-    {\n+    public Iterator getChildrenWithName(QName elementQName) {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithNamespaceURI(String uri)\n-    {\n+    public Iterator getChildrenWithNamespaceURI(String uri) {\n         return null;\n     }\n \n     @Override\n     public OMElement getFirstChildWithName(QName elementQName)\n-        throws OMException\n-    {\n+        throws OMException {\n         return null;\n     }\n \n     @Override\n-    public OMNode getFirstOMChild()\n-    {\n+    public OMNode getFirstOMChild() {\n         return null;\n     }\n \n     @Override\n-\tpublic XMLStreamReader getXMLStreamReader(boolean arg0) \n-\t{\n-\t\treturn null;\n-\t}\n+    public XMLStreamReader getXMLStreamReader(boolean arg0) {\n+        return null;\n+    }\n \n     @Override\n-\tpublic void serialize(XMLStreamWriter writer, boolean cache)\n-\t\t\tthrows XMLStreamException \n-\t{\n-\t\t// do nothing; this is not a real element\n-\t}\n-\t\n+    public void serialize(XMLStreamWriter writer, boolean cache)\n+        throws XMLStreamException {\n+        // do nothing; this is not a real element\n+    }\n+\n     @Override\n-\tpublic void writeTextTo(Writer writer, boolean cache)\n-\t{\n-\t    // do nothing, this is not a real element\n-\t}\n-\t\n+    public void writeTextTo(Writer writer, boolean cache) {\n+        // do nothing, this is not a real element\n+    }\n+\n     @Override\n-\tpublic Reader getTextAsStream(boolean cache)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public Reader getTextAsStream(boolean cache) {\n+        return null;\n+    }\n+\n     @Override\n-\tpublic NamespaceContext getNamespaceContext(boolean flag)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public NamespaceContext getNamespaceContext(boolean flag) {\n+        return null;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getNamespacesInScope()\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic void undeclarePrefix(String prefix)\n-\t{\n-\t}\n-\t\n-    @Override\n-\tpublic SAXSource getSAXSource(boolean cache)\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic XMLStreamReader getXMLStreamReader(boolean cache, OMXMLStreamReaderConfiguration config)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public Iterator getNamespacesInScope() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void undeclarePrefix(String prefix) {\n+    }\n+\n+    @Override\n+    public SAXSource getSAXSource(boolean cache) {\n+        return null;\n+    }\n+\n+    @Override\n+    public XMLStreamReader getXMLStreamReader(boolean cache,\n+                                              OMXMLStreamReaderConfiguration config) {\n+        return null;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getDescendants(boolean includeSelf)\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic String getPrefix()\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-    public OMInformationItem clone(OMCloneOptions arg0)\n-    {\n+    public Iterator getDescendants(boolean includeSelf) {\n+        return null;\n+    }\n+\n+    @Override\n+    public String getPrefix() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OMInformationItem clone(OMCloneOptions arg0) {\n         // will not be implemented.\n         return null;\n     }\n \n     @Override\n-    public void removeChildren()\n-    {\n+    public void removeChildren() {\n         // will not implement.\n     }\n-    \n+\n     private final OMContainer root;\n }\n",
            "diff_size": 202
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/143/FauxElement.java\nindex 7fd595c4e17..1a1dffa9572 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/143/FauxElement.java\n@@ -19,14 +19,12 @@ import java.io.OutputStream;\n import java.io.Reader;\n import java.io.Writer;\n import java.util.Iterator;\n-\n import javax.xml.namespace.NamespaceContext;\n import javax.xml.namespace.QName;\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n import javax.xml.stream.XMLStreamWriter;\n import javax.xml.transform.sax.SAXSource;\n-\n import org.apache.axiom.om.OMAttribute;\n import org.apache.axiom.om.OMCloneOptions;\n import org.apache.axiom.om.OMContainer;\n@@ -44,11 +42,9 @@ import org.genxdm.exceptions.PreCondition;\n // this exists so that we can attach namespaces to documents.\n // in axiom, they aren't.  this faux element is only ever used\n // by faux namespace.\n-public class FauxElement\n-    extends Object\n-    implements OMElement\n+\n+public class FauxElement extends Object implements OMElement\n {\n-    \n     public FauxElement(OMContainer root)\n     {\n         PreCondition.assertNotNull(root, \"root\");\n@@ -105,14 +101,14 @@ public class FauxElement\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllAttributes()\n+    public Iterator getAllAttributes()\n     {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllDeclaredNamespaces()\n+    public Iterator getAllDeclaredNamespaces()\n         throws OMException\n     {\n         return null;\n@@ -138,7 +134,7 @@ public class FauxElement\n \n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getChildElements()\n+    public Iterator getChildElements()\n     {\n         return null;\n     }\n@@ -173,7 +169,7 @@ public class FauxElement\n     {\n         return null;\n     }\n-    \n+\n     @Override\n     public String getNamespaceURI()\n         throws OMException\n@@ -215,6 +211,7 @@ public class FauxElement\n     public void removeAttribute(OMAttribute attr)\n     {\n \n+\n     }\n \n     @Override\n@@ -227,42 +224,49 @@ public class FauxElement\n     public void setBuilder(OMXMLParserWrapper wrapper)\n     {\n \n+\n     }\n \n     @Override\n     public void setLineNumber(int lineNumber)\n     {\n \n+\n     }\n \n     @Override\n     public void setLocalName(String localName)\n     {\n \n+\n     }\n \n     @Override\n     public void setNamespace(OMNamespace namespace)\n     {\n \n+\n     }\n \n     @Override\n     public void setNamespaceWithNoFindInCurrentScope(OMNamespace namespace)\n     {\n \n+\n     }\n \n     @Override\n     public void setText(String text)\n     {\n \n+\n     }\n \n     @Override\n     public void setText(QName text)\n     {\n \n+\n     }\n \n     @Override\n@@ -276,18 +280,21 @@ public class FauxElement\n     public void build()\n     {\n \n+\n     }\n \n     @Override\n     public void buildWithAttachments()\n     {\n \n+\n     }\n \n     @Override\n     public void close(boolean build)\n     {\n \n+\n     }\n \n     @Override\n@@ -302,6 +309,7 @@ public class FauxElement\n         throws OMException\n     {\n \n+\n     }\n \n     @Override\n@@ -340,6 +348,7 @@ public class FauxElement\n         throws OMException\n     {\n \n+\n     }\n \n     @Override\n@@ -347,6 +356,7 @@ public class FauxElement\n         throws OMException\n     {\n \n+\n     }\n \n     @Override\n@@ -360,6 +370,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -367,6 +378,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -374,6 +386,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -381,6 +394,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -388,6 +402,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -395,6 +410,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -402,6 +418,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -409,6 +426,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -416,6 +434,7 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n@@ -423,38 +442,40 @@ public class FauxElement\n         throws XMLStreamException\n     {\n \n+\n     }\n \n     @Override\n     public void addChild(OMNode omNode)\n     {\n \n+\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildren()\n+    public Iterator getChildren()\n     {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithLocalName(String localName)\n+    public Iterator getChildrenWithLocalName(String localName)\n     {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithName(QName elementQName)\n+    public Iterator getChildrenWithName(QName elementQName)\n     {\n         return null;\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getChildrenWithNamespaceURI(String uri)\n+    public Iterator getChildrenWithNamespaceURI(String uri)\n     {\n         return null;\n     }\n@@ -473,73 +494,79 @@ public class FauxElement\n     }\n \n     @Override\n-\tpublic XMLStreamReader getXMLStreamReader(boolean arg0) \n-\t{\n-\t\treturn null;\n-\t}\n+    public XMLStreamReader getXMLStreamReader(boolean arg0)\n+    {\n+        return null;\n+    }\n \n     @Override\n-\tpublic void serialize(XMLStreamWriter writer, boolean cache)\n-\t\t\tthrows XMLStreamException \n-\t{\n-\t\t// do nothing; this is not a real element\n-\t}\n-\t\n+    public void serialize(XMLStreamWriter writer, boolean cache)\n+        throws XMLStreamException\n+    {\n+        // do nothing; this is not a real element\n+\n+\n+    }\n+\n     @Override\n-\tpublic void writeTextTo(Writer writer, boolean cache)\n-\t{\n-\t    // do nothing, this is not a real element\n-\t}\n-\t\n+    public void writeTextTo(Writer writer, boolean cache)\n+    {\n+        // do nothing, this is not a real element\n+\n+\n+    }\n+\n     @Override\n-\tpublic Reader getTextAsStream(boolean cache)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public Reader getTextAsStream(boolean cache)\n+    {\n+        return null;\n+    }\n+\n     @Override\n-\tpublic NamespaceContext getNamespaceContext(boolean flag)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public NamespaceContext getNamespaceContext(boolean flag)\n+    {\n+        return null;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getNamespacesInScope()\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic void undeclarePrefix(String prefix)\n-\t{\n-\t}\n-\t\n-    @Override\n-\tpublic SAXSource getSAXSource(boolean cache)\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic XMLStreamReader getXMLStreamReader(boolean cache, OMXMLStreamReaderConfiguration config)\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public Iterator getNamespacesInScope()\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public void undeclarePrefix(String prefix)\n+    {\n+\n+\n+    }\n+\n+    @Override\n+    public SAXSource getSAXSource(boolean cache)\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public XMLStreamReader getXMLStreamReader(boolean cache, OMXMLStreamReaderConfiguration config)\n+    {\n+        return null;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"rawtypes\")\n-\tpublic Iterator getDescendants(boolean includeSelf)\n-\t{\n-\t    return null;\n-\t}\n-\t\n-    @Override\n-\tpublic String getPrefix()\n-\t{\n-\t    return null;\n-\t}\n-\t\n+    public Iterator getDescendants(boolean includeSelf)\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public String getPrefix()\n+    {\n+        return null;\n+    }\n+\n     @Override\n     public OMInformationItem clone(OMCloneOptions arg0)\n     {\n@@ -551,7 +578,9 @@ public class FauxElement\n     public void removeChildren()\n     {\n         // will not implement.\n+\n+\n     }\n-    \n+\n     private final OMContainer root;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 107
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "115",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/143/FauxElement.java\nindex 7fd595c4e17..525a2d69e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/143/FauxElement.java\n@@ -105,7 +105,7 @@ public class FauxElement\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllAttributes()\n+public Iterator getAllAttributes()\n     {\n         return null;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "115",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/143/FauxElement.java\nindex 7fd595c4e17..fa28848285b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/143/FauxElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/143/FauxElement.java\n@@ -105,7 +105,7 @@ public class FauxElement\n \n     @SuppressWarnings(\"rawtypes\")\n     @Override\n-\tpublic Iterator getAllAttributes()\n+    public Iterator getAllAttributes()\n     {\n         return null;\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
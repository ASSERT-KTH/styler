{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3474",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3474/AuthToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3474/AuthToken.java\nindex f95c7d8696f..5bda0e0bce5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3474/AuthToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3474/AuthToken.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth.plugin.api;\n \n import java.util.Map;\n@@ -34,34 +35,34 @@ import org.neo4j.server.security.enterprise.auth.plugin.spi.AuthenticationPlugin\n  */\n public interface AuthToken\n {\n-    /**\n-     * Returns the identity to authenticate.\n-     *\n-     * <p>Most commonly this is a username.\n-     *\n-     * @return the identity to authenticate.\n-     */\n-    String principal();\n+  /**\n+   * Returns the identity to authenticate.\n+   *\n+   * <p>Most commonly this is a username.\n+   *\n+   * @return the identity to authenticate.\n+   */\n+  String principal();\n \n-    /**\n-     * Returns the credentials that verifies the identity.\n-     *\n-     * <p>Most commonly this is a password.\n-     *\n-     * <p>The reason this is a character array and not a {@link String}, is so that sensitive information\n-     * can be cleared from memory after useage without having to wait for the garbage collector to act.\n-     *\n-     * @return the credentials that verifies the identity.\n-     */\n-    char[] credentials();\n+  /**\n+   * Returns the credentials that verifies the identity.\n+   *\n+   * <p>Most commonly this is a password.\n+   *\n+   * <p>The reason this is a character array and not a {@link String}, is so that sensitive information\n+   * can be cleared from memory after useage without having to wait for the garbage collector to act.\n+   *\n+   * @return the credentials that verifies the identity.\n+   */\n+  char[] credentials();\n \n-    /**\n-     * Returns an optional custom parameter map if provided by the client.\n-     *\n-     * <p>This can be used as a vehicle to send arbitrary auth data from a client application\n-     * to a server-side auth plugin. Neo4j will act as a pure transport and will not touch the contents of this map.\n-     *\n-     * @return a custom parameter map (or an empty map if no parameters where provided by the client)\n-     */\n-    Map<String,Object> parameters();\n+  /**\n+   * Returns an optional custom parameter map if provided by the client.\n+   *\n+   * <p>This can be used as a vehicle to send arbitrary auth data from a client application\n+   * to a server-side auth plugin. Neo4j will act as a pure transport and will not touch the contents of this map.\n+   *\n+   * @return a custom parameter map (or an empty map if no parameters where provided by the client)\n+   */\n+  Map<String, Object> parameters();\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3474/AuthToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3474/AuthToken.java\nindex f95c7d8696f..11291e7ec26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3474/AuthToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3474/AuthToken.java\n@@ -64,4 +64,4 @@ public interface AuthToken\n      * @return a custom parameter map (or an empty map if no parameters where provided by the client)\n      */\n     Map<String,Object> parameters();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
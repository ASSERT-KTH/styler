{
    "project_name": "neo4j-neo4j",
    "error_id": "2572",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2572/AbstractTokenHolderBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2572/AbstractTokenHolderBase.java\nindex d727a9e49ee..93825bcfa9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2572/AbstractTokenHolderBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2572/AbstractTokenHolderBase.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.token;\n \n import java.util.List;\n@@ -34,57 +35,57 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n {\n     final TokenRegistry tokenRegistry;\n \n-    public AbstractTokenHolderBase( TokenRegistry tokenRegistry )\n+    public AbstractTokenHolderBase(TokenRegistry tokenRegistry)\n     {\n         this.tokenRegistry = tokenRegistry;\n     }\n \n     @Override\n-    public void setInitialTokens( List<NamedToken> tokens )\n+    public void setInitialTokens(List<NamedToken> tokens)\n     {\n-        tokenRegistry.setInitialTokens( tokens );\n+        tokenRegistry.setInitialTokens(tokens);\n     }\n \n     @Override\n-    public void addToken( NamedToken token )\n+    public void addToken(NamedToken token)\n     {\n-        tokenRegistry.put( token );\n+        tokenRegistry.put(token);\n     }\n \n     @Override\n-    public int getOrCreateId( String name ) throws KernelException\n+    public int getOrCreateId(String name) throws KernelException\n     {\n-        return innerGetOrCreateId( name, false );\n+        return innerGetOrCreateId(name, false);\n     }\n \n-    protected int innerGetOrCreateId( String name, boolean internal ) throws KernelException\n+    protected int innerGetOrCreateId(String name, boolean internal) throws KernelException\n     {\n-        Integer id = innerGetId( name, internal );\n-        if ( id != null )\n+        Integer id = innerGetId(name, internal);\n+        if (id != null)\n         {\n             return id;\n         }\n \n         // Let's create it\n-        return createToken( name, internal );\n+        return createToken(name, internal);\n     }\n \n     @Override\n-    public NamedToken getTokenById( int id ) throws TokenNotFoundException\n+    public NamedToken getTokenById(int id) throws TokenNotFoundException\n     {\n-        NamedToken result = tokenRegistry.getToken( id );\n-        if ( result == null )\n+        NamedToken result = tokenRegistry.getToken(id);\n+        if (result == null)\n         {\n-            throw new TokenNotFoundException( \"Token for id \" + id );\n+            throw new TokenNotFoundException(\"Token for id \" + id);\n         }\n         return result;\n     }\n \n     @Override\n-    public int getIdByName( String name )\n+    public int getIdByName(String name)\n     {\n-        Integer id = tokenRegistry.getId( name );\n-        if ( id == null )\n+        Integer id = tokenRegistry.getId(name);\n+        if (id == null)\n         {\n             return TokenConstants.NO_TOKEN;\n         }\n@@ -92,9 +93,9 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n     }\n \n     @Override\n-    public boolean getIdsByNames( String[] names, int[] ids )\n+    public boolean getIdsByNames(String[] names, int[] ids)\n     {\n-        return resolveIds( names, ids, false, ALWAYS_FALSE_INT );\n+        return resolveIds(names, ids, false, ALWAYS_FALSE_INT);\n     }\n \n     @Override\n@@ -110,9 +111,9 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n     }\n \n     @Override\n-    public boolean hasToken( int id )\n+    public boolean hasToken(int id)\n     {\n-        return tokenRegistry.hasToken( id );\n+        return tokenRegistry.hasToken(id);\n     }\n \n     @Override\n@@ -122,34 +123,33 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n     }\n \n     @Override\n-    public NamedToken getInternalTokenById( int id ) throws TokenNotFoundException\n+    public NamedToken getInternalTokenById(int id) throws TokenNotFoundException\n     {\n-        NamedToken result = tokenRegistry.getTokenInternal( id );\n-        if ( result == null )\n+        NamedToken result = tokenRegistry.getTokenInternal(id);\n+        if (result == null)\n         {\n-            NamedToken alternative = tokenRegistry.getToken( id );\n-            throw new TokenNotFoundException( \"Internal token for id \" + id + \" not found\" +\n-                    ( alternative != null ? \", but a public token exists on that id: \" + alternative + \".\" : \".\" ) );\n+            NamedToken alternative = tokenRegistry.getToken(id);\n+            throw new TokenNotFoundException(\"Internal token for id \" + id + \" not found\" +\n+              (alternative != null ? \", but a public token exists on that id: \" + alternative + \".\" : \".\"));\n         }\n         return result;\n     }\n \n-    protected abstract int createToken( String tokenName, boolean internal ) throws KernelException;\n+    protected abstract int createToken(String tokenName, boolean internal) throws KernelException;\n \n-    boolean resolveIds( String[] names, int[] ids, boolean internal, IntPredicate unresolvedIndexCheck )\n+    boolean resolveIds(String[] names, int[] ids, boolean internal, IntPredicate unresolvedIndexCheck)\n     {\n         boolean foundUnresolvable = false;\n-        for ( int i = 0; i < ids.length; i++ )\n+        for (int i = 0; i < ids.length; i++)\n         {\n-            Integer id = innerGetId( names[i], internal );\n-            if ( id != null )\n+            Integer id = innerGetId(names[i], internal);\n+            if (id != null)\n             {\n                 ids[i] = id;\n-            }\n-            else\n+            } else\n             {\n                 foundUnresolvable = true;\n-                if ( unresolvedIndexCheck.test( i ) )\n+                if (unresolvedIndexCheck.test(i))\n                 {\n                     // If the check returns `true`, it's a signal that we should stop early.\n                     break;\n@@ -159,8 +159,8 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n         return foundUnresolvable;\n     }\n \n-    private Integer innerGetId( String name, boolean internal )\n+    private Integer innerGetId(String name, boolean internal)\n     {\n-        return internal ? tokenRegistry.getIdInternal( name ) : tokenRegistry.getId( name );\n+        return internal ? tokenRegistry.getIdInternal(name) : tokenRegistry.getId(name);\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2572/AbstractTokenHolderBase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2572/AbstractTokenHolderBase.java\nindex d727a9e49ee..56382842e9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2572/AbstractTokenHolderBase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2572/AbstractTokenHolderBase.java\n@@ -163,4 +163,4 @@ public abstract class AbstractTokenHolderBase implements TokenHolder\n     {\n         return internal ? tokenRegistry.getIdInternal( name ) : tokenRegistry.getId( name );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3014",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3014/BeginMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3014/BeginMessageDecoder.java\nindex d895bf5b283..a9f92c83aaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3014/BeginMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3014/BeginMessageDecoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.messaging.decoder;\n \n import java.io.IOException;\n@@ -42,12 +43,12 @@ public class BeginMessageDecoder implements RequestMessageDecoder\n     private final BoltResponseHandler responseHandler;\n     private final BookmarksParser bookmarksParser;\n \n-    public BeginMessageDecoder( BoltResponseHandler responseHandler )\n+    public BeginMessageDecoder(BoltResponseHandler responseHandler)\n     {\n-        this( responseHandler, BookmarksParserV3.INSTANCE );\n+        this(responseHandler, BookmarksParserV3.INSTANCE);\n     }\n \n-    protected BeginMessageDecoder( BoltResponseHandler responseHandler, BookmarksParser bookmarksParser )\n+    protected BeginMessageDecoder(BoltResponseHandler responseHandler, BookmarksParser bookmarksParser)\n     {\n         this.responseHandler = responseHandler;\n         this.bookmarksParser = bookmarksParser;\n@@ -66,21 +67,21 @@ public class BeginMessageDecoder implements RequestMessageDecoder\n     }\n \n     @Override\n-    public RequestMessage decode( Neo4jPack.Unpacker unpacker ) throws IOException\n+    public RequestMessage decode(Neo4jPack.Unpacker unpacker) throws IOException\n     {\n         var metadata = unpacker.unpackMap();\n-        var bookmarks = bookmarksParser.parseBookmarks( metadata );\n-        var txTimeout = MessageMetadataParser.parseTransactionTimeout( metadata );\n-        var accessMode = MessageMetadataParser.parseAccessMode( metadata );\n-        var txMetadata = MessageMetadataParser.parseTransactionMetadata( metadata );\n+        var bookmarks = bookmarksParser.parseBookmarks(metadata);\n+        var txTimeout = MessageMetadataParser.parseTransactionTimeout(metadata);\n+        var accessMode = MessageMetadataParser.parseAccessMode(metadata);\n+        var txMetadata = MessageMetadataParser.parseTransactionMetadata(metadata);\n \n-        return newBeginMessage( metadata, bookmarks, txTimeout, accessMode, txMetadata );\n+        return newBeginMessage(metadata, bookmarks, txTimeout, accessMode, txMetadata);\n     }\n \n-    protected RequestMessage newBeginMessage( MapValue metadata, List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode,\n-            Map<String,Object> txMetadata ) throws BoltIOException\n+    protected RequestMessage newBeginMessage(MapValue metadata, List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode,\n+                                             Map<String, Object> txMetadata) throws BoltIOException\n     {\n-        return new BeginMessage( metadata, bookmarks, txTimeout, accessMode, txMetadata );\n+        return new BeginMessage(metadata, bookmarks, txTimeout, accessMode, txMetadata);\n     }\n }\n \n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3014/BeginMessageDecoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3014/BeginMessageDecoder.java\nindex d895bf5b283..1a6bf07e8a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3014/BeginMessageDecoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3014/BeginMessageDecoder.java\n@@ -82,5 +82,4 @@ public class BeginMessageDecoder implements RequestMessageDecoder\n     {\n         return new BeginMessage( metadata, bookmarks, txTimeout, accessMode, txMetadata );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
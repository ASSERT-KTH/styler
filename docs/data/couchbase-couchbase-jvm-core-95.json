{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 165).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public abstract class AbstractOnDemandService extends AbstractDynamicService {\n\n    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/95/AbstractOnDemandService.java\nindex 03c6177475e..922bdc43872 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/95/AbstractOnDemandService.java\n@@ -35,8 +35,9 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int\n+        port, CoreContext ctx, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n     }\n \n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/95/AbstractOnDemandService.java\nindex 03c6177475e..044373b4d8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/95/AbstractOnDemandService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.service;\n \n import com.couchbase.client.core.CoreContext;\n@@ -35,7 +36,8 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port,\n+                                      CoreContext ctx, EndpointFactory endpointFactory) {\n         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/95/AbstractOnDemandService.java\nindex 03c6177475e..9da7e742ca6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/95/AbstractOnDemandService.java\n@@ -43,9 +43,7 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     protected void dispatch(final CouchbaseRequest request) {\n         final Endpoint endpoint = createEndpoint();\n         endpointStates().register(endpoint, endpoint);\n-\n-        endpoint\n-            .connect()\n+endpoint.connect()\n             .subscribe(new Subscriber<LifecycleState>() {\n                 @Override\n                 public void onCompleted() {\n@@ -81,4 +79,4 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/95/AbstractOnDemandService.java\nindex 03c6177475e..d2065aad139 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/95/AbstractOnDemandService.java\n@@ -33,6 +33,7 @@ import rx.functions.Action1;\n  * @author Michael Nitschinger\n  * @since 1.1.0\n  */\n+\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n     protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n@@ -43,27 +44,26 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     protected void dispatch(final CouchbaseRequest request) {\n         final Endpoint endpoint = createEndpoint();\n         endpointStates().register(endpoint, endpoint);\n+        endpoint.connect().subscribe(new Subscriber<LifecycleState>() {\n+            @Override\n+            public void onCompleted() {\n \n-        endpoint\n-            .connect()\n-            .subscribe(new Subscriber<LifecycleState>() {\n-                @Override\n-                public void onCompleted() {\n-                }\n+            }\n \n-                @Override\n-                public void onError(Throwable e) {\n-                    request.observable().onError(e);\n-                }\n \n-                @Override\n-                public void onNext(LifecycleState lifecycleState) {\n-                    if (lifecycleState == LifecycleState.DISCONNECTED) {\n-                        request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n-                    }\n+            @Override\n+            public void onError(Throwable e) {\n+                request.observable().onError(e);\n+            }\n+\n+\n+            @Override\n+            public void onNext(LifecycleState lifecycleState) {\n+                if (lifecycleState == LifecycleState.DISCONNECTED) {\n+                    request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n                 }\n+            }\n             });\n-\n         whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n             @Override\n             public void call(LifecycleState lifecycleState) {\n@@ -71,7 +71,6 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n                 endpoint.send(SignalFlush.INSTANCE);\n             }\n         });\n-\n         whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n             @Override\n             public void call(LifecycleState lifecycleState) {\n@@ -79,6 +78,4 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n             }\n         });\n     }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/95/AbstractOnDemandService.java\nindex 03c6177475e..922bdc43872 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/95/AbstractOnDemandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/95/AbstractOnDemandService.java\n@@ -35,8 +35,9 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int\n+        port, CoreContext ctx, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n     }\n \n     @Override\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
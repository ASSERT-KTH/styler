{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4533",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4533/SizeBasedLogPruningStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4533/SizeBasedLogPruningStrategy.java\nindex de3cfa1881d..b4959852813 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4533/SizeBasedLogPruningStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4533/SizeBasedLogPruningStrategy.java\n@@ -17,42 +17,43 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import org.neo4j.helpers.collection.Visitor;\n \n-class SizeBasedLogPruningStrategy implements CoreLogPruningStrategy, Visitor<SegmentFile,RuntimeException>\n+class SizeBasedLogPruningStrategy implements CoreLogPruningStrategy, Visitor<SegmentFile, RuntimeException>\n {\n-    private final long bytesToKeep;\n-    private long accumulatedSize;\n-    private SegmentFile file;\n-\n-    SizeBasedLogPruningStrategy( long bytesToKeep )\n+  private final long bytesToKeep;\n+  private long accumulatedSize;\n+  private SegmentFile file;\n+\n+  SizeBasedLogPruningStrategy(long bytesToKeep)\n+  {\n+    this.bytesToKeep = bytesToKeep;\n+  }\n+\n+  @Override\n+  public synchronized long getIndexToKeep(Segments segments)\n+  {\n+    accumulatedSize = 0;\n+    file = null;\n+\n+    segments.visitBackwards(this);\n+\n+    return file != null ? (file.header().prevIndex() + 1) : -1;\n+  }\n+\n+  @Override\n+  public boolean visit(SegmentFile segment) throws RuntimeException\n+  {\n+    if (accumulatedSize < bytesToKeep)\n     {\n-        this.bytesToKeep = bytesToKeep;\n+      file = segment;\n+      accumulatedSize += file.size();\n+      return false;\n     }\n \n-    @Override\n-    public synchronized long getIndexToKeep( Segments segments )\n-    {\n-        accumulatedSize = 0;\n-        file = null;\n-\n-        segments.visitBackwards( this );\n-\n-        return file != null ? (file.header().prevIndex() + 1) : -1;\n-    }\n-\n-    @Override\n-    public boolean visit( SegmentFile segment ) throws RuntimeException\n-    {\n-        if ( accumulatedSize < bytesToKeep )\n-        {\n-            file = segment;\n-            accumulatedSize += file.size();\n-            return false;\n-        }\n-\n-        return true;\n-    }\n+    return true;\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4533/SizeBasedLogPruningStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4533/SizeBasedLogPruningStrategy.java\nindex de3cfa1881d..d70579dea20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4533/SizeBasedLogPruningStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4533/SizeBasedLogPruningStrategy.java\n@@ -39,8 +39,7 @@ class SizeBasedLogPruningStrategy implements CoreLogPruningStrategy, Visitor<Seg\n         file = null;\n \n         segments.visitBackwards( this );\n-\n-        return file != null ? (file.header().prevIndex() + 1) : -1;\n+return file != null ? (file.header().prevIndex() + 1 ) : -1;\n     }\n \n     @Override\n@@ -55,4 +54,4 @@ class SizeBasedLogPruningStrategy implements CoreLogPruningStrategy, Visitor<Seg\n \n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
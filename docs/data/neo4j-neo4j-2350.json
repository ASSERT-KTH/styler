{
    "project_name": "neo4j-neo4j",
    "error_id": "2350",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2350/LockManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2350/LockManagerImpl.java\nindex 5b4ceac1157..3a88de952ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2350/LockManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2350/LockManagerImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking.community;\n \n import java.util.HashMap;\n@@ -33,53 +34,54 @@ import org.neo4j.util.VisibleForTesting;\n \n public class LockManagerImpl\n {\n-    private final Map<Object,RWLock> resourceLockMap = new HashMap<>();\n+    private final Map<Object, RWLock> resourceLockMap = new HashMap<>();\n     private final RagManager ragManager;\n     private final SystemNanoClock clock;\n \n     /**\n      * Time within which any particular lock should be acquired.\n+     *\n      * @see GraphDatabaseSettings#lock_acquisition_timeout\n      */\n     private final long lockAcquisitionTimeoutNano;\n \n-    LockManagerImpl( RagManager ragManager, Config config, SystemNanoClock clock )\n+    LockManagerImpl(RagManager ragManager, Config config, SystemNanoClock clock)\n     {\n         this.ragManager = ragManager;\n         this.clock = clock;\n-        this.lockAcquisitionTimeoutNano = config.get( GraphDatabaseSettings.lock_acquisition_timeout ).toNanos();\n+        this.lockAcquisitionTimeoutNano = config.get(GraphDatabaseSettings.lock_acquisition_timeout).toNanos();\n     }\n \n-    boolean getReadLock( LockTracer tracer, LockResource resource, LockTransaction tx )\n-            throws DeadlockDetectedException\n+    boolean getReadLock(LockTracer tracer, LockResource resource, LockTransaction tx)\n+      throws DeadlockDetectedException\n     {\n-        return unusedResourceGuard( resource, tx, getRWLockForAcquiring( resource, tx ).acquireReadLock( tracer, tx ) );\n+        return unusedResourceGuard(resource, tx, getRWLockForAcquiring(resource, tx).acquireReadLock(tracer, tx));\n     }\n \n-    boolean tryReadLock( LockResource resource, LockTransaction tx )\n+    boolean tryReadLock(LockResource resource, LockTransaction tx)\n     {\n-        return unusedResourceGuard( resource, tx, getRWLockForAcquiring( resource, tx ).tryAcquireReadLock( tx ) );\n+        return unusedResourceGuard(resource, tx, getRWLockForAcquiring(resource, tx).tryAcquireReadLock(tx));\n     }\n \n-    boolean getWriteLock( LockTracer tracer, LockResource resource, LockTransaction tx )\n-            throws DeadlockDetectedException\n+    boolean getWriteLock(LockTracer tracer, LockResource resource, LockTransaction tx)\n+      throws DeadlockDetectedException\n     {\n-        return unusedResourceGuard( resource, tx, getRWLockForAcquiring( resource, tx ).acquireWriteLock( tracer, tx ) );\n+        return unusedResourceGuard(resource, tx, getRWLockForAcquiring(resource, tx).acquireWriteLock(tracer, tx));\n     }\n \n-    boolean tryWriteLock( LockResource resource, LockTransaction tx )\n+    boolean tryWriteLock(LockResource resource, LockTransaction tx)\n     {\n-        return unusedResourceGuard( resource, tx, getRWLockForAcquiring( resource, tx ).tryAcquireWriteLock( tx ) );\n+        return unusedResourceGuard(resource, tx, getRWLockForAcquiring(resource, tx).tryAcquireWriteLock(tx));\n     }\n \n-    void releaseReadLock( Object resource, LockTransaction tx )\n+    void releaseReadLock(Object resource, LockTransaction tx)\n     {\n-        getRWLockForReleasing( resource, tx, 1, 0, true ).releaseReadLock( tx );\n+        getRWLockForReleasing(resource, tx, 1, 0, true).releaseReadLock(tx);\n     }\n \n-    void releaseWriteLock( Object resource, LockTransaction tx )\n+    void releaseWriteLock(Object resource, LockTransaction tx)\n     {\n-        getRWLockForReleasing( resource, tx, 0, 1, true ).releaseWriteLock( tx );\n+        getRWLockForReleasing(resource, tx, 0, 1, true).releaseWriteLock(tx);\n     }\n \n     /**\n@@ -88,14 +90,14 @@ public class LockManagerImpl\n      *\n      * @return {@code lockObtained }\n      **/\n-    private boolean unusedResourceGuard( Object resource, LockTransaction tx, boolean lockObtained )\n+    private boolean unusedResourceGuard(Object resource, LockTransaction tx, boolean lockObtained)\n     {\n-        if ( !lockObtained )\n+        if (!lockObtained)\n         {\n             // if lock was not acquired cleaning up optimistically allocated value\n             // for case when it was only used by current call, if it was used by somebody else\n             // lock will be released during release call\n-            getRWLockForReleasing( resource, tx, 0, 0, false );\n+            getRWLockForReleasing(resource, tx, 0, 0, false);\n         }\n         return lockObtained;\n     }\n@@ -107,13 +109,13 @@ public class LockManagerImpl\n      *\n      * @param visitor visitor for visiting each lock.\n      */\n-    public void accept( Visitor<RWLock,RuntimeException> visitor )\n+    public void accept(Visitor<RWLock, RuntimeException> visitor)\n     {\n-        synchronized ( resourceLockMap )\n+        synchronized (resourceLockMap)\n         {\n-            for ( RWLock lock : resourceLockMap.values() )\n+            for (RWLock lock : resourceLockMap.values())\n             {\n-                if ( visitor.visit( lock ) )\n+                if (visitor.visit(lock))\n                 {\n                     break;\n                 }\n@@ -121,58 +123,58 @@ public class LockManagerImpl\n         }\n     }\n \n-    private static void assertValidArguments( Object resource, Object tx )\n+    private static void assertValidArguments(Object resource, Object tx)\n     {\n-        if ( resource == null || tx == null )\n+        if (resource == null || tx == null)\n         {\n-            throw new IllegalResourceException( \"Null parameter: resource = \" + resource + \", tx = \" + tx );\n+            throw new IllegalResourceException(\"Null parameter: resource = \" + resource + \", tx = \" + tx);\n         }\n     }\n \n-    private RWLock getRWLockForAcquiring( LockResource resource, Object tx )\n+    private RWLock getRWLockForAcquiring(LockResource resource, Object tx)\n     {\n-        assertValidArguments( resource, tx );\n-        synchronized ( resourceLockMap )\n+        assertValidArguments(resource, tx);\n+        synchronized (resourceLockMap)\n         {\n-            RWLock lock = resourceLockMap.computeIfAbsent( resource, k -> createLock( resource ) );\n+            RWLock lock = resourceLockMap.computeIfAbsent(resource, k -> createLock(resource));\n             lock.mark();\n             return lock;\n         }\n     }\n \n     @VisibleForTesting\n-    protected RWLock createLock( LockResource resource )\n+    protected RWLock createLock(LockResource resource)\n     {\n-        return new RWLock( resource, ragManager, clock, lockAcquisitionTimeoutNano );\n+        return new RWLock(resource, ragManager, clock, lockAcquisitionTimeoutNano);\n     }\n \n-    private RWLock getRWLockForReleasing( Object resource, Object tx, int readCountPrerequisite,\n-                                          int writeCountPrerequisite, boolean strict )\n+    private RWLock getRWLockForReleasing(Object resource, Object tx, int readCountPrerequisite,\n+                                         int writeCountPrerequisite, boolean strict)\n     {\n-        assertValidArguments( resource, tx );\n-        synchronized ( resourceLockMap )\n+        assertValidArguments(resource, tx);\n+        synchronized (resourceLockMap)\n         {\n-            RWLock lock = resourceLockMap.get( resource );\n-            if ( lock == null )\n+            RWLock lock = resourceLockMap.get(resource);\n+            if (lock == null)\n             {\n-                if ( !strict )\n+                if (!strict)\n                 {\n                     return null;\n                 }\n-                throw new LockNotFoundException( \"Lock not found for: \"\n-                                                 + resource + \" tx:\" + tx );\n+                throw new LockNotFoundException(\"Lock not found for: \"\n+                  + resource + \" tx:\" + tx);\n             }\n             // we need to get info from a couple of synchronized methods\n             // to make it info consistent we need to synchronized lock to make sure it will not change between\n             // various calls\n             //noinspection SynchronizationOnLocalVariableOrMethodParameter\n-            synchronized ( lock )\n+            synchronized (lock)\n             {\n-                if ( !lock.isMarked() && lock.getReadCount() == readCountPrerequisite &&\n-                     lock.getWriteCount() == writeCountPrerequisite &&\n-                     lock.getWaitingThreadsCount() == 0 )\n+                if (!lock.isMarked() && lock.getReadCount() == readCountPrerequisite &&\n+                  lock.getWriteCount() == writeCountPrerequisite &&\n+                  lock.getWaitingThreadsCount() == 0)\n                 {\n-                    resourceLockMap.remove( resource );\n+                    resourceLockMap.remove(resource);\n                 }\n             }\n             return lock;\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
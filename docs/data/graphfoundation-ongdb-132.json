{
    "project_name": "graphfoundation-ongdb",
    "error_id": "132",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/132/TransportWriteThrottle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/132/TransportWriteThrottle.java\nindex 815be1256d9..bc1c44f2f74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/132/TransportWriteThrottle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/132/TransportWriteThrottle.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import io.netty.channel.Channel;\n@@ -39,121 +40,119 @@ import java.util.function.Supplier;\n  */\n public class TransportWriteThrottle implements TransportThrottle\n {\n-    static final AttributeKey<ThrottleLock> LOCK_KEY = AttributeKey.valueOf( \"BOLT.WRITE_THROTTLE.LOCK\" );\n-    static final AttributeKey<Boolean> MAX_DURATION_EXCEEDED_KEY = AttributeKey.valueOf( \"BOLT.WRITE_THROTTLE.MAX_DURATION_EXCEEDED\" );\n-    private final int lowWaterMark;\n-    private final int highWaterMark;\n-    private final Clock clock;\n-    private final long maxLockDuration;\n-    private final Supplier<ThrottleLock> lockSupplier;\n-    private final ChannelInboundHandler listener;\n-\n-    public TransportWriteThrottle( int lowWaterMark, int highWaterMark, Clock clock, Duration maxLockDuration )\n-    {\n-        this( lowWaterMark, highWaterMark, clock, maxLockDuration, DefaultThrottleLock::new );\n-    }\n-\n-    public TransportWriteThrottle( int lowWaterMark, int highWaterMark, Clock clock, Duration maxLockDuration, Supplier<ThrottleLock> lockSupplier )\n-    {\n-        this.lowWaterMark = lowWaterMark;\n-        this.highWaterMark = highWaterMark;\n-        this.clock = clock;\n-        this.maxLockDuration = maxLockDuration.toMillis();\n-        this.lockSupplier = lockSupplier;\n-        this.listener = new ChannelStatusListener();\n-    }\n-\n-    @Override\n-    public void install( Channel channel )\n+  static final AttributeKey<ThrottleLock> LOCK_KEY = AttributeKey.valueOf(\"BOLT.WRITE_THROTTLE.LOCK\");\n+  static final AttributeKey<Boolean> MAX_DURATION_EXCEEDED_KEY = AttributeKey.valueOf(\"BOLT.WRITE_THROTTLE.MAX_DURATION_EXCEEDED\");\n+  private final int lowWaterMark;\n+  private final int highWaterMark;\n+  private final Clock clock;\n+  private final long maxLockDuration;\n+  private final Supplier<ThrottleLock> lockSupplier;\n+  private final ChannelInboundHandler listener;\n+\n+  public TransportWriteThrottle(int lowWaterMark, int highWaterMark, Clock clock, Duration maxLockDuration)\n+  {\n+    this(lowWaterMark, highWaterMark, clock, maxLockDuration, DefaultThrottleLock::new);\n+  }\n+\n+  public TransportWriteThrottle(int lowWaterMark, int highWaterMark, Clock clock, Duration maxLockDuration, Supplier<ThrottleLock> lockSupplier)\n+  {\n+    this.lowWaterMark = lowWaterMark;\n+    this.highWaterMark = highWaterMark;\n+    this.clock = clock;\n+    this.maxLockDuration = maxLockDuration.toMillis();\n+    this.lockSupplier = lockSupplier;\n+    this.listener = new ChannelStatusListener();\n+  }\n+\n+  @Override\n+  public void install(Channel channel)\n+  {\n+    ThrottleLock lock = lockSupplier.get();\n+\n+    channel.attr(LOCK_KEY).set(lock);\n+    channel.config().setWriteBufferWaterMark(new WriteBufferWaterMark(lowWaterMark, highWaterMark));\n+    channel.pipeline().addLast(listener);\n+  }\n+\n+  @Override\n+  public void acquire(Channel channel) throws TransportThrottleException\n+  {\n+    // if this channel's max lock duration is already exceeded, we'll allow the protocol to\n+    // (at least) try to communicate the error to the client before aborting the connection\n+    if (!isDurationAlreadyExceeded(channel))\n     {\n-        ThrottleLock lock = lockSupplier.get();\n+      ThrottleLock lock = channel.attr(LOCK_KEY).get();\n \n-        channel.attr( LOCK_KEY ).set( lock );\n-        channel.config().setWriteBufferWaterMark( new WriteBufferWaterMark( lowWaterMark, highWaterMark ) );\n-        channel.pipeline().addLast( listener );\n-    }\n-\n-    @Override\n-    public void acquire( Channel channel ) throws TransportThrottleException\n-    {\n-        // if this channel's max lock duration is already exceeded, we'll allow the protocol to\n-        // (at least) try to communicate the error to the client before aborting the connection\n-        if ( !isDurationAlreadyExceeded( channel ) )\n+      long startTimeMillis = 0;\n+      while (channel.isOpen() && !channel.isWritable())\n+      {\n+        if (maxLockDuration > 0)\n         {\n-            ThrottleLock lock = channel.attr( LOCK_KEY ).get();\n-\n-            long startTimeMillis = 0;\n-            while ( channel.isOpen() && !channel.isWritable() )\n+          long currentTimeMillis = clock.millis();\n+          if (startTimeMillis == 0)\n+          {\n+            startTimeMillis = currentTimeMillis;\n+          } else\n+          {\n+            if (currentTimeMillis - startTimeMillis > maxLockDuration)\n             {\n-                if ( maxLockDuration > 0 )\n-                {\n-                    long currentTimeMillis = clock.millis();\n-                    if ( startTimeMillis == 0 )\n-                    {\n-                        startTimeMillis = currentTimeMillis;\n-                    }\n-                    else\n-                    {\n-                        if ( currentTimeMillis - startTimeMillis > maxLockDuration )\n-                        {\n-                            setDurationExceeded( channel );\n-\n-                            throw new TransportThrottleException( String.format(\n-                                    \"Bolt connection [%s] will be closed because the client did not consume outgoing buffers for %s which is not expected.\",\n-                                    channel.remoteAddress(), DurationFormatUtils.formatDurationHMS( maxLockDuration ) ) );\n-                        }\n-                    }\n-                }\n-\n-                try\n-                {\n-                    lock.lock( channel, 1000 );\n-                }\n-                catch ( InterruptedException ex )\n-                {\n-                    Thread.currentThread().interrupt();\n-                    throw new RuntimeException( ex );\n-                }\n+              setDurationExceeded(channel);\n+\n+              throw new TransportThrottleException(String.format(\n+                  \"Bolt connection [%s] will be closed because the client did not consume outgoing buffers for %s which is not expected.\",\n+                  channel.remoteAddress(), DurationFormatUtils.formatDurationHMS(maxLockDuration)));\n             }\n+          }\n         }\n-    }\n \n-    @Override\n-    public void release( Channel channel )\n-    {\n-        if ( channel.isWritable() )\n+        try\n         {\n-            ThrottleLock lock = channel.attr( LOCK_KEY ).get();\n-\n-            lock.unlock( channel );\n+          lock.lock(channel, 1000);\n+        } catch (InterruptedException ex)\n+        {\n+          Thread.currentThread().interrupt();\n+          throw new RuntimeException(ex);\n         }\n+      }\n     }\n+  }\n \n-    @Override\n-    public void uninstall( Channel channel )\n+  @Override\n+  public void release(Channel channel)\n+  {\n+    if (channel.isWritable())\n     {\n-        channel.attr( LOCK_KEY ).set( null );\n-    }\n+      ThrottleLock lock = channel.attr(LOCK_KEY).get();\n \n-    private static boolean isDurationAlreadyExceeded( Channel channel )\n-    {\n-        Boolean marker = channel.attr( MAX_DURATION_EXCEEDED_KEY ).get();\n-        return marker != null && marker;\n+      lock.unlock(channel);\n     }\n+  }\n \n-    private static void setDurationExceeded( Channel channel )\n-    {\n-        channel.attr( MAX_DURATION_EXCEEDED_KEY ).set( Boolean.TRUE );\n-    }\n+  @Override\n+  public void uninstall(Channel channel)\n+  {\n+    channel.attr(LOCK_KEY).set(null);\n+  }\n \n-    @ChannelHandler.Sharable\n-    private class ChannelStatusListener extends ChannelInboundHandlerAdapter\n-    {\n+  private static boolean isDurationAlreadyExceeded(Channel channel)\n+  {\n+    Boolean marker = channel.attr(MAX_DURATION_EXCEEDED_KEY).get();\n+    return marker != null && marker;\n+  }\n \n-        @Override\n-        public void channelWritabilityChanged( ChannelHandlerContext ctx )\n-        {\n-            release( ctx.channel() );\n-        }\n+  private static void setDurationExceeded(Channel channel)\n+  {\n+    channel.attr(MAX_DURATION_EXCEEDED_KEY).set(Boolean.TRUE);\n+  }\n+\n+  @ChannelHandler.Sharable\n+  private class ChannelStatusListener extends ChannelInboundHandlerAdapter\n+  {\n+\n+    @Override\n+    public void channelWritabilityChanged(ChannelHandlerContext ctx)\n+    {\n+      release(ctx.channel());\n     }\n+  }\n }\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "column": "65",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/132/TransportWriteThrottle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/132/TransportWriteThrottle.java\nindex 815be1256d9..24e0acf2bb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/132/TransportWriteThrottle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/132/TransportWriteThrottle.java\n@@ -67,8 +67,7 @@ public class TransportWriteThrottle implements TransportThrottle\n     public void install( Channel channel )\n     {\n         ThrottleLock lock = lockSupplier.get();\n-\n-        channel.attr( LOCK_KEY ).set( lock );\n+channel.attr( LOCK_KEY ).set( lock );\n         channel.config().setWriteBufferWaterMark( new WriteBufferWaterMark( lowWaterMark, highWaterMark ) );\n         channel.pipeline().addLast( listener );\n     }\n@@ -94,14 +93,13 @@ public class TransportWriteThrottle implements TransportThrottle\n                     }\n                     else\n                     {\n-                        if ( currentTimeMillis - startTimeMillis > maxLockDuration )\n+                        if ( currentTimeMillis - startTimeMillis> maxLockDuration )\n                         {\n                             setDurationExceeded( channel );\n \n-                            throw new TransportThrottleException( String.format(\n-                                    \"Bolt connection [%s] will be closed because the client did not consume outgoing buffers for %s which is not expected.\",\n+                            throw new TransportThrottleException( String.format( \"Bolt connection [%s] will be closed because the client did not consume outgoing buffers for %s which is not expected.\",\n                                     channel.remoteAddress(), DurationFormatUtils.formatDurationHMS( maxLockDuration ) ) );\n-                        }\n+    }\n                     }\n                 }\n \n@@ -124,8 +122,7 @@ public class TransportWriteThrottle implements TransportThrottle\n         if ( channel.isWritable() )\n         {\n             ThrottleLock lock = channel.attr( LOCK_KEY ).get();\n-\n-            lock.unlock( channel );\n+lock.unlock( channel );\n         }\n     }\n \n@@ -149,11 +146,10 @@ public class TransportWriteThrottle implements TransportThrottle\n     @ChannelHandler.Sharable\n     private class ChannelStatusListener extends ChannelInboundHandlerAdapter\n     {\n-\n-        @Override\n+    @Override\n         public void channelWritabilityChanged( ChannelHandlerContext ctx )\n         {\n             release( ctx.channel() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
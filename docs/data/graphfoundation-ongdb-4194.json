{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4194",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4194/RaftMembership.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4194/RaftMembership.java\nindex 5827b72a4cb..af1e67325d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4194/RaftMembership.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4194/RaftMembership.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.util.Set;\n@@ -30,33 +31,33 @@ import org.neo4j.causalclustering.identity.MemberId;\n  */\n public interface RaftMembership\n {\n-    /**\n-     * @return members whose votes count towards consensus. The returned set should be considered immutable.\n-     */\n-    Set<MemberId> votingMembers();\n+  /**\n+   * @return members whose votes count towards consensus. The returned set should be considered immutable.\n+   */\n+  Set<MemberId> votingMembers();\n \n-    /**\n-     * @return members to which replication should be attempted. The returned set should be considered immutable.\n-     */\n-    Set<MemberId> replicationMembers();\n+  /**\n+   * @return members to which replication should be attempted. The returned set should be considered immutable.\n+   */\n+  Set<MemberId> replicationMembers();\n \n-    /**\n-     * Register a membership listener.\n-     *\n-     * @param listener The listener.\n-     */\n-    void registerListener( RaftMembership.Listener listener );\n+  /**\n+   * Register a membership listener.\n+   *\n+   * @param listener The listener.\n+   */\n+  void registerListener(RaftMembership.Listener listener);\n \n+  /**\n+   * This interface must be implemented from whoever wants to be notified of membership changes. Membership changes\n+   * are additions to and removals from the voting and replication members set.\n+   */\n+  interface Listener\n+  {\n     /**\n-     * This interface must be implemented from whoever wants to be notified of membership changes. Membership changes\n-     * are additions to and removals from the voting and replication members set.\n+     * This method is called on additions to and removals from either the voting or replication members sets.\n+     * The implementation has the responsibility of figuring out what the actual change is.\n      */\n-    interface Listener\n-    {\n-        /**\n-         * This method is called on additions to and removals from either the voting or replication members sets.\n-         * The implementation has the responsibility of figuring out what the actual change is.\n-         */\n-        void onMembershipChanged();\n-    }\n+    void onMembershipChanged();\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4194/RaftMembership.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4194/RaftMembership.java\nindex 5827b72a4cb..047973a3c4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4194/RaftMembership.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4194/RaftMembership.java\n@@ -59,4 +59,4 @@ public interface RaftMembership\n          */\n         void onMembershipChanged();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
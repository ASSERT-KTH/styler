{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2692",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2692/DurableStateStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2692/DurableStateStorage.java\nindex f05e52b4893..487d1c49565 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2692/DurableStateStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2692/DurableStateStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.storage;\n \n import java.io.File;\n@@ -33,129 +34,128 @@ import org.neo4j.logging.LogProvider;\n \n public class DurableStateStorage<STATE> extends LifecycleAdapter implements StateStorage<STATE>\n {\n-    private final StateRecoveryManager<STATE> recoveryManager;\n-    private final Log log;\n-    private STATE initialState;\n-    private final File fileA;\n-    private final File fileB;\n-    private final FileSystemAbstraction fsa;\n-    private final String name;\n-    private final StateMarshal<STATE> marshal;\n-    private final int numberOfEntriesBeforeRotation;\n-\n-    private int numberOfEntriesWrittenInActiveFile;\n-    private File currentStoreFile;\n-\n-    private PhysicalFlushableChannel currentStoreChannel;\n-\n-    public DurableStateStorage( FileSystemAbstraction fsa, File baseDir, String name, StateMarshal<STATE> marshal,\n-            int numberOfEntriesBeforeRotation, LogProvider logProvider )\n-    {\n-        this.fsa = fsa;\n-        this.name = name;\n-        this.marshal = marshal;\n-        this.numberOfEntriesBeforeRotation = numberOfEntriesBeforeRotation;\n-        this.log = logProvider.getLog( getClass() );\n-        this.recoveryManager = new StateRecoveryManager<>( fsa, marshal );\n-        File parent = stateDir( baseDir, name );\n-        this.fileA = new File( parent, name + \".a\" );\n-        this.fileB = new File( parent, name + \".b\" );\n-    }\n-\n-    public boolean exists()\n+  private final StateRecoveryManager<STATE> recoveryManager;\n+  private final Log log;\n+  private STATE initialState;\n+  private final File fileA;\n+  private final File fileB;\n+  private final FileSystemAbstraction fsa;\n+  private final String name;\n+  private final StateMarshal<STATE> marshal;\n+  private final int numberOfEntriesBeforeRotation;\n+\n+  private int numberOfEntriesWrittenInActiveFile;\n+  private File currentStoreFile;\n+\n+  private PhysicalFlushableChannel currentStoreChannel;\n+\n+  public DurableStateStorage(FileSystemAbstraction fsa, File baseDir, String name, StateMarshal<STATE> marshal,\n+                             int numberOfEntriesBeforeRotation, LogProvider logProvider)\n+  {\n+    this.fsa = fsa;\n+    this.name = name;\n+    this.marshal = marshal;\n+    this.numberOfEntriesBeforeRotation = numberOfEntriesBeforeRotation;\n+    this.log = logProvider.getLog(getClass());\n+    this.recoveryManager = new StateRecoveryManager<>(fsa, marshal);\n+    File parent = stateDir(baseDir, name);\n+    this.fileA = new File(parent, name + \".a\");\n+    this.fileB = new File(parent, name + \".b\");\n+  }\n+\n+  public boolean exists()\n+  {\n+    return fsa.fileExists(fileA) && fsa.fileExists(fileB);\n+  }\n+\n+  private void create() throws IOException\n+  {\n+    ensureExists(fileA);\n+    ensureExists(fileB);\n+  }\n+\n+  private void ensureExists(File file) throws IOException\n+  {\n+    if (!fsa.fileExists(file))\n     {\n-        return fsa.fileExists( fileA ) && fsa.fileExists( fileB );\n+      fsa.mkdirs(file.getParentFile());\n+      try (FlushableChannel channel = new PhysicalFlushableChannel(fsa.create(file)))\n+      {\n+        marshal.marshal(marshal.startState(), channel);\n+      }\n     }\n-\n-    private void create() throws IOException\n+  }\n+\n+  private void recover() throws IOException\n+  {\n+    final StateRecoveryManager.RecoveryStatus<STATE> recoveryStatus = recoveryManager.recover(fileA, fileB);\n+\n+    this.currentStoreFile = recoveryStatus.activeFile();\n+    this.currentStoreChannel = resetStoreFile(currentStoreFile);\n+    this.initialState = recoveryStatus.recoveredState();\n+\n+    log.info(\"%s state restored, up to ordinal %d\", name, marshal.ordinal(initialState));\n+  }\n+\n+  @Override\n+  public STATE getInitialState()\n+  {\n+    assert initialState != null;\n+    return initialState;\n+  }\n+\n+  @Override\n+  public void init() throws IOException\n+  {\n+    create();\n+    recover();\n+  }\n+\n+  @Override\n+  public synchronized void shutdown() throws IOException\n+  {\n+    currentStoreChannel.close();\n+    currentStoreChannel = null;\n+  }\n+\n+  @Override\n+  public synchronized void persistStoreData(STATE state) throws IOException\n+  {\n+    if (numberOfEntriesWrittenInActiveFile >= numberOfEntriesBeforeRotation)\n     {\n-        ensureExists( fileA );\n-        ensureExists( fileB );\n+      switchStoreFile();\n+      numberOfEntriesWrittenInActiveFile = 0;\n     }\n \n-    private void ensureExists( File file ) throws IOException\n-    {\n-        if ( !fsa.fileExists( file ) )\n-        {\n-            fsa.mkdirs( file.getParentFile() );\n-            try ( FlushableChannel channel = new PhysicalFlushableChannel( fsa.create( file ) ) )\n-            {\n-                marshal.marshal( marshal.startState(), channel );\n-            }\n-        }\n-    }\n+    marshal.marshal(state, currentStoreChannel);\n+    currentStoreChannel.prepareForFlush().flush();\n \n-    private void recover() throws IOException\n-    {\n-        final StateRecoveryManager.RecoveryStatus<STATE> recoveryStatus = recoveryManager.recover( fileA, fileB );\n+    numberOfEntriesWrittenInActiveFile++;\n+  }\n \n-        this.currentStoreFile = recoveryStatus.activeFile();\n-        this.currentStoreChannel = resetStoreFile( currentStoreFile );\n-        this.initialState = recoveryStatus.recoveredState();\n+  void switchStoreFile() throws IOException\n+  {\n+    currentStoreChannel.close();\n \n-        log.info( \"%s state restored, up to ordinal %d\", name, marshal.ordinal( initialState ) );\n-    }\n-\n-    @Override\n-    public STATE getInitialState()\n+    if (currentStoreFile.equals(fileA))\n     {\n-        assert initialState != null;\n-        return initialState;\n-    }\n-\n-    @Override\n-    public void init() throws IOException\n-    {\n-        create();\n-        recover();\n-    }\n-\n-    @Override\n-    public synchronized void shutdown() throws IOException\n-    {\n-        currentStoreChannel.close();\n-        currentStoreChannel = null;\n-    }\n-\n-    @Override\n-    public synchronized void persistStoreData( STATE state ) throws IOException\n-    {\n-        if ( numberOfEntriesWrittenInActiveFile >= numberOfEntriesBeforeRotation )\n-        {\n-            switchStoreFile();\n-            numberOfEntriesWrittenInActiveFile = 0;\n-        }\n-\n-        marshal.marshal( state, currentStoreChannel );\n-        currentStoreChannel.prepareForFlush().flush();\n-\n-        numberOfEntriesWrittenInActiveFile++;\n-    }\n-\n-    void switchStoreFile() throws IOException\n-    {\n-        currentStoreChannel.close();\n-\n-        if ( currentStoreFile.equals( fileA ) )\n-        {\n-            currentStoreChannel = resetStoreFile( fileB );\n-            currentStoreFile = fileB;\n-        }\n-        else\n-        {\n-            currentStoreChannel = resetStoreFile( fileA );\n-            currentStoreFile = fileA;\n-        }\n-    }\n-\n-    private PhysicalFlushableChannel resetStoreFile( File nextStore ) throws IOException\n-    {\n-        fsa.truncate( nextStore, 0 );\n-        return new PhysicalFlushableChannel( fsa.open( nextStore, OpenMode.READ_WRITE ) );\n-    }\n-\n-    static File stateDir( File baseDir, String name )\n+      currentStoreChannel = resetStoreFile(fileB);\n+      currentStoreFile = fileB;\n+    } else\n     {\n-        return new File( baseDir, name + \"-state\" );\n+      currentStoreChannel = resetStoreFile(fileA);\n+      currentStoreFile = fileA;\n     }\n+  }\n+\n+  private PhysicalFlushableChannel resetStoreFile(File nextStore) throws IOException\n+  {\n+    fsa.truncate(nextStore, 0);\n+    return new PhysicalFlushableChannel(fsa.open(nextStore, OpenMode.READ_WRITE));\n+  }\n+\n+  static File stateDir(File baseDir, String name)\n+  {\n+    return new File(baseDir, name + \"-state\");\n+  }\n }\n",
            "diff_size": 181
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2692/DurableStateStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2692/DurableStateStorage.java\nindex f05e52b4893..fc13e03cde8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2692/DurableStateStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2692/DurableStateStorage.java\n@@ -48,8 +48,7 @@ public class DurableStateStorage<STATE> extends LifecycleAdapter implements Stat\n \n     private PhysicalFlushableChannel currentStoreChannel;\n \n-    public DurableStateStorage( FileSystemAbstraction fsa, File baseDir, String name, StateMarshal<STATE> marshal,\n-            int numberOfEntriesBeforeRotation, LogProvider logProvider )\n+    public DurableStateStorage( FileSystemAbstraction fsa, File baseDir, String name, StateMarshal<STATE> marshal, int numberOfEntriesBeforeRotation, LogProvider logProvider )\n     {\n         this.fsa = fsa;\n         this.name = name;\n@@ -88,12 +87,10 @@ public class DurableStateStorage<STATE> extends LifecycleAdapter implements Stat\n     private void recover() throws IOException\n     {\n         final StateRecoveryManager.RecoveryStatus<STATE> recoveryStatus = recoveryManager.recover( fileA, fileB );\n-\n-        this.currentStoreFile = recoveryStatus.activeFile();\n+this.currentStoreFile = recoveryStatus.activeFile();\n         this.currentStoreChannel = resetStoreFile( currentStoreFile );\n         this.initialState = recoveryStatus.recoveredState();\n-\n-        log.info( \"%s state restored, up to ordinal %d\", name, marshal.ordinal( initialState ) );\n+log.info( \"%s state restored, up to ordinal %d\", name, marshal.ordinal( initialState ) );\n     }\n \n     @Override\n@@ -135,8 +132,7 @@ public class DurableStateStorage<STATE> extends LifecycleAdapter implements Stat\n     void switchStoreFile() throws IOException\n     {\n         currentStoreChannel.close();\n-\n-        if ( currentStoreFile.equals( fileA ) )\n+if ( currentStoreFile.equals( fileA ) )\n         {\n             currentStoreChannel = resetStoreFile( fileB );\n             currentStoreFile = fileB;\n@@ -158,4 +154,4 @@ public class DurableStateStorage<STATE> extends LifecycleAdapter implements Stat\n     {\n         return new File( baseDir, name + \"-state\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
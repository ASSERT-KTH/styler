{
    "project_name": "neo4j-neo4j",
    "error_id": "2830",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2830/PartitionedIndexStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2830/PartitionedIndexStorage.java\nindex 2fedfc18d60..9af8232bfdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2830/PartitionedIndexStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2830/PartitionedIndexStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.storage;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -48,19 +49,19 @@ import static java.util.stream.Collectors.toList;\n public class PartitionedIndexStorage\n {\n     private static final Comparator<Path> FILE_COMPARATOR =\n-            ( o1, o2 ) -> NumberAwareStringComparator.INSTANCE.compare( o1.getFileName().toString(), o2.getFileName().toString() );\n+      (o1, o2) -> NumberAwareStringComparator.INSTANCE.compare(o1.getFileName().toString(), o2.getFileName().toString());\n \n     private final DirectoryFactory directoryFactory;\n     private final FileSystemAbstraction fileSystem;\n     private final FolderLayout folderLayout;\n     private final FailureStorage failureStorage;\n \n-    public PartitionedIndexStorage( DirectoryFactory directoryFactory, FileSystemAbstraction fileSystem, Path rootFolder )\n+    public PartitionedIndexStorage(DirectoryFactory directoryFactory, FileSystemAbstraction fileSystem, Path rootFolder)\n     {\n         this.fileSystem = fileSystem;\n-        this.folderLayout = new IndexFolderLayout( rootFolder );\n+        this.folderLayout = new IndexFolderLayout(rootFolder);\n         this.directoryFactory = directoryFactory;\n-        this.failureStorage = new FailureStorage( fileSystem, folderLayout );\n+        this.failureStorage = new FailureStorage(fileSystem, folderLayout);\n     }\n \n     /**\n@@ -70,9 +71,9 @@ public class PartitionedIndexStorage\n      * @return the lucene directory denoted by the given folder.\n      * @throws IOException if directory can't be opened.\n      */\n-    public Directory openDirectory( Path folder ) throws IOException\n+    public Directory openDirectory(Path folder) throws IOException\n     {\n-        return directoryFactory.open( folder );\n+        return directoryFactory.open(folder);\n     }\n \n     /**\n@@ -81,9 +82,9 @@ public class PartitionedIndexStorage\n      * @param partition the partition index.\n      * @return the folder where partition's lucene directory should be located.\n      */\n-    public Path getPartitionFolder( int partition )\n+    public Path getPartitionFolder(int partition)\n     {\n-        return folderLayout.getPartitionFolder( partition );\n+        return folderLayout.getPartitionFolder(partition);\n     }\n \n     /**\n@@ -114,9 +115,9 @@ public class PartitionedIndexStorage\n      * @throws IOException if writing to the failure storage file failed.\n      * @see FailureStorage#storeIndexFailure(String)\n      */\n-    public void storeIndexFailure( String failure ) throws IOException\n+    public void storeIndexFailure(String failure) throws IOException\n     {\n-        failureStorage.storeIndexFailure( failure );\n+        failureStorage.storeIndexFailure(failure);\n     }\n \n     /**\n@@ -137,10 +138,10 @@ public class PartitionedIndexStorage\n      * @param folder the folder to clean up.\n      * @throws IOException if some removal operation fails.\n      */\n-    public void prepareFolder( Path folder ) throws IOException\n+    public void prepareFolder(Path folder) throws IOException\n     {\n-        cleanupFolder( folder );\n-        fileSystem.mkdirs( folder );\n+        cleanupFolder(folder);\n+        fileSystem.mkdirs(folder);\n     }\n \n     /**\n@@ -150,17 +151,17 @@ public class PartitionedIndexStorage\n      * @param folder the folder to remove.\n      * @throws IOException if some removal operation fails.\n      */\n-    public void cleanupFolder( Path folder ) throws IOException\n+    public void cleanupFolder(Path folder) throws IOException\n     {\n-        List<Path> partitionFolders = listFolders( folder );\n-        if ( !partitionFolders.isEmpty() )\n+        List<Path> partitionFolders = listFolders(folder);\n+        if (!partitionFolders.isEmpty())\n         {\n-            for ( Path partitionFolder : partitionFolders )\n+            for (Path partitionFolder : partitionFolders)\n             {\n-                cleanupLuceneDirectory( partitionFolder );\n+                cleanupLuceneDirectory(partitionFolder);\n             }\n         }\n-        fileSystem.deleteRecursively( folder );\n+        fileSystem.deleteRecursively(folder);\n     }\n \n     /**\n@@ -169,25 +170,23 @@ public class PartitionedIndexStorage\n      * @return the map from file system  {@link Path directory} to the corresponding {@link Directory lucene directory}.\n      * @throws IOException if opening of some lucene directory (via {@link DirectoryFactory#open(Path)}) fails.\n      */\n-    public Map<Path,Directory> openIndexDirectories() throws IOException\n+    public Map<Path, Directory> openIndexDirectories() throws IOException\n     {\n-        Map<Path,Directory> directories = new LinkedHashMap<>();\n+        Map<Path, Directory> directories = new LinkedHashMap<>();\n         try\n         {\n-            for ( Path dir : listFolders() )\n+            for (Path dir : listFolders())\n             {\n-                directories.put( dir, directoryFactory.open( dir ) );\n+                directories.put(dir, directoryFactory.open(dir));\n             }\n-        }\n-        catch ( IOException oe )\n+        } catch (IOException oe)\n         {\n             try\n             {\n-                IOUtils.closeAll( directories.values() );\n-            }\n-            catch ( Exception ce )\n+                IOUtils.closeAll(directories.values());\n+            } catch (Exception ce)\n             {\n-                oe.addSuppressed( ce );\n+                oe.addSuppressed(ce);\n             }\n             throw oe;\n         }\n@@ -202,17 +201,17 @@ public class PartitionedIndexStorage\n      */\n     public List<Path> listFolders()\n     {\n-        return listFolders( getIndexFolder() );\n+        return listFolders(getIndexFolder());\n     }\n \n-    private List<Path> listFolders( Path rootFolder )\n+    private List<Path> listFolders(Path rootFolder)\n     {\n-        Path[] files = fileSystem.listFiles( rootFolder );\n+        Path[] files = fileSystem.listFiles(rootFolder);\n         return files == null ? Collections.emptyList()\n-                             : Stream.of( files )\n-                               .filter( f -> fileSystem.isDirectory( f ) && StringUtils.isNumeric( f.getFileName().toString() ) )\n-                               .sorted( FILE_COMPARATOR )\n-                               .collect( toList() );\n+          : Stream.of(files)\n+          .filter(f -> fileSystem.isDirectory(f) && StringUtils.isNumeric(f.getFileName().toString()))\n+          .sorted(FILE_COMPARATOR)\n+          .collect(toList());\n     }\n \n     /**\n@@ -225,14 +224,14 @@ public class PartitionedIndexStorage\n      * @param folder the path to the directory to cleanup.\n      * @throws IOException if removal operation fails.\n      */\n-    private void cleanupLuceneDirectory( Path folder ) throws IOException\n+    private void cleanupLuceneDirectory(Path folder) throws IOException\n     {\n-        try ( Directory dir = directoryFactory.open( folder ) )\n+        try (Directory dir = directoryFactory.open(folder))\n         {\n             String[] indexFiles = dir.listAll();\n-            for ( String indexFile : indexFiles )\n+            for (String indexFile : indexFiles)\n             {\n-                FileUtils.windowsSafeIOOperation( () -> dir.deleteFile( indexFile ) );\n+                FileUtils.windowsSafeIOOperation(() -> dir.deleteFile(indexFile));\n             }\n         }\n     }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2830/PartitionedIndexStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2830/PartitionedIndexStorage.java\nindex 2fedfc18d60..146ad99a632 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2830/PartitionedIndexStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2830/PartitionedIndexStorage.java\n@@ -209,8 +209,7 @@ public class PartitionedIndexStorage\n     {\n         Path[] files = fileSystem.listFiles( rootFolder );\n         return files == null ? Collections.emptyList()\n-                             : Stream.of( files )\n-                               .filter( f -> fileSystem.isDirectory( f ) && StringUtils.isNumeric( f.getFileName().toString() ) )\n+                             : Stream.of( files ).filter( f -> fileSystem.isDirectory( f ) && StringUtils.isNumeric( f.getFileName().toString() ) )\n                                .sorted( FILE_COMPARATOR )\n                                .collect( toList() );\n     }\n@@ -236,4 +235,4 @@ public class PartitionedIndexStorage\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
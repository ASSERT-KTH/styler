{
    "project_name": "IQSS-dataverse",
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "5",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public boolean alreadyExists(DvObject dvo) throws Exception {\n    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n    \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n    \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n    \t */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/88/FakePidProviderServiceBean.java\nindex eb313631077..cfa2d039e09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/88/FakePidProviderServiceBean.java\n@@ -15,11 +15,11 @@ public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n \n     @Override\n     public boolean alreadyExists(DvObject dvo) throws Exception {\n-    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n+    /* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n     \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n     \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n     \t */\n-        return false;\n+    return false;\n     }\n     \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/88/FakePidProviderServiceBean.java\nindex eb313631077..6708a2c431c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/88/FakePidProviderServiceBean.java\n@@ -13,65 +13,65 @@ import javax.ejb.Stateless;\n @Stateless\n public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n \n-    @Override\n-    public boolean alreadyExists(DvObject dvo) throws Exception {\n-    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n-    \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n-    \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n-    \t */\n-        return false;\n-    }\n-    \n-    @Override\n-    public boolean alreadyExists(GlobalId globalId) throws Exception {\n-        return true;\n-    }\n+  @Override\n+  public boolean alreadyExists(DvObject dvo) throws Exception {\n+    /* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n+     * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n+     * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently)\n+     */\n+    return false;\n+  }\n \n-    @Override\n-    public boolean registerWhenPublished() {\n-        return false;\n-    }\n+  @Override\n+  public boolean alreadyExists(GlobalId globalId) throws Exception {\n+    return true;\n+  }\n \n-    @Override\n-    public List<String> getProviderInformation() {\n-        ArrayList<String> providerInfo = new ArrayList<>();\n-        String providerName = \"FAKE\";\n-        String providerLink = \"http://dataverse.org\";\n-        providerInfo.add(providerName);\n-        providerInfo.add(providerLink);\n-        return providerInfo;\n-    }\n+  @Override\n+  public boolean registerWhenPublished() {\n+    return false;\n+  }\n \n-    @Override\n-    public String createIdentifier(DvObject dvo) throws Throwable {\n-        return \"fakeIdentifier\";\n-    }\n+  @Override\n+  public List<String> getProviderInformation() {\n+    ArrayList<String> providerInfo = new ArrayList<>();\n+    String providerName = \"FAKE\";\n+    String providerLink = \"http://dataverse.org\";\n+    providerInfo.add(providerName);\n+    providerInfo.add(providerLink);\n+    return providerInfo;\n+  }\n \n-    @Override\n-    public Map<String, String> getIdentifierMetadata(DvObject dvo) {\n-        Map<String, String> map = new HashMap<>();\n-        return map;\n-    }\n+  @Override\n+  public String createIdentifier(DvObject dvo) throws Throwable {\n+    return \"fakeIdentifier\";\n+  }\n \n-    @Override\n-    public String modifyIdentifierTargetURL(DvObject dvo) throws Exception {\n-        return \"fakeModifyIdentifierTargetURL\";\n-    }\n+  @Override\n+  public Map<String, String> getIdentifierMetadata(DvObject dvo) {\n+    Map<String, String> map = new HashMap<>();\n+    return map;\n+  }\n \n-    @Override\n-    public void deleteIdentifier(DvObject dvo) throws Exception {\n-        // no-op\n-    }\n+  @Override\n+  public String modifyIdentifierTargetURL(DvObject dvo) throws Exception {\n+    return \"fakeModifyIdentifierTargetURL\";\n+  }\n \n-    @Override\n-    public Map<String, String> lookupMetadataFromIdentifier(String protocol, String authority, String identifier) {\n-        Map<String, String> map = new HashMap<>();\n-        return map;\n-    }\n+  @Override\n+  public void deleteIdentifier(DvObject dvo) throws Exception {\n+    // no-op\n+  }\n \n-    @Override\n-    public boolean publicizeIdentifier(DvObject studyIn) {\n-        return true;\n-    }\n+  @Override\n+  public Map<String, String> lookupMetadataFromIdentifier(String protocol, String authority, String identifier) {\n+    Map<String, String> map = new HashMap<>();\n+    return map;\n+  }\n+\n+  @Override\n+  public boolean publicizeIdentifier(DvObject studyIn) {\n+    return true;\n+  }\n \n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/88/FakePidProviderServiceBean.java\nindex eb313631077..68dca16b4fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/88/FakePidProviderServiceBean.java\n@@ -15,11 +15,11 @@ public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n \n     @Override\n     public boolean alreadyExists(DvObject dvo) throws Exception {\n-    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n+    /* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n     \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n     \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n     \t */\n-        return false;\n+    return false;\n     }\n     \n     @Override\n@@ -74,4 +74,4 @@ public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n         return true;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/88/FakePidProviderServiceBean.java\nindex eb313631077..cfa2d039e09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/88/FakePidProviderServiceBean.java\n@@ -15,11 +15,11 @@ public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n \n     @Override\n     public boolean alreadyExists(DvObject dvo) throws Exception {\n-    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n+    /* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n     \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n     \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n     \t */\n-        return false;\n+    return false;\n     }\n     \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/88/FakePidProviderServiceBean.java\nindex eb313631077..33739fc9e75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/88/FakePidProviderServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/88/FakePidProviderServiceBean.java\n@@ -15,11 +15,11 @@ public class FakePidProviderServiceBean extends AbstractGlobalIdServiceBean {\n \n     @Override\n     public boolean alreadyExists(DvObject dvo) throws Exception {\n-    \t/* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n+        /* Direct upload creates an identifier prior to calling the CreateNewDatasetCommand - if this is true, that call fails.\n     \t * In that case, the local test (DatasetServiceBean.isIdentifierLocallyUnique()) correctly returns false since it tests the database.\n     \t * This provider could do the same check or use some other method to test alreadyExists(DvObject) =true failures. (no tests found currently) \n     \t */\n-        return false;\n+    return false;\n     }\n     \n     @Override\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2033",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2033/MultiEvaluator.java\nindex 7a329efbf67..cca17954cdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2033/MultiEvaluator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.traversal;\n \n import org.neo4j.graphdb.Path;\n@@ -31,71 +32,71 @@ import org.neo4j.graphdb.traversal.PathEvaluator;\n  */\n public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n {\n-    private final PathEvaluator[] evaluators;\n+  private final PathEvaluator[] evaluators;\n \n-    MultiEvaluator( PathEvaluator... evaluators )\n-    {\n-        this.evaluators = evaluators;\n-    }\n+  MultiEvaluator(PathEvaluator... evaluators)\n+  {\n+    this.evaluators = evaluators;\n+  }\n \n-    /**\n-     * Returns whether or not the {@code position} is to be included and also\n-     * if it's going to be continued.\n-     *\n-     * The include/exclude part of the returned {@link Evaluation} will be\n-     * {@code include} if all of the internal evaluators think it's going to be\n-     * included, otherwise it will be excluded.\n-     *\n-     * The continue/prune part of the returned {@link Evaluation} will be\n-     * {@code continue} if all of the internal evaluators think it's going to be\n-     * continued, otherwise it will be pruned.\n-     *\n-     * @param position the {@link Path} to evaluate.\n-     * @see Evaluator\n-     */\n-    @Override\n-    public Evaluation evaluate( Path position, BranchState<STATE> state )\n+  /**\n+   * Returns whether or not the {@code position} is to be included and also\n+   * if it's going to be continued.\n+   * <p>\n+   * The include/exclude part of the returned {@link Evaluation} will be\n+   * {@code include} if all of the internal evaluators think it's going to be\n+   * included, otherwise it will be excluded.\n+   * <p>\n+   * The continue/prune part of the returned {@link Evaluation} will be\n+   * {@code continue} if all of the internal evaluators think it's going to be\n+   * continued, otherwise it will be pruned.\n+   *\n+   * @param position the {@link Path} to evaluate.\n+   * @see Evaluator\n+   */\n+  @Override\n+  public Evaluation evaluate(Path position, BranchState<STATE> state)\n+  {\n+    boolean includes = true;\n+    boolean continues = true;\n+    for (PathEvaluator<STATE> evaluator : this.evaluators)\n     {\n-        boolean includes = true;\n-        boolean continues = true;\n-        for ( PathEvaluator<STATE> evaluator : this.evaluators )\n+      Evaluation bla = evaluator.evaluate(position, state);\n+      if (!bla.includes())\n+      {\n+        includes = false;\n+        if (!continues)\n         {\n-            Evaluation bla = evaluator.evaluate( position, state );\n-            if ( !bla.includes() )\n-            {\n-                includes = false;\n-                if ( !continues )\n-                {\n-                    return Evaluation.EXCLUDE_AND_PRUNE;\n-                }\n-            }\n-            if ( !bla.continues() )\n-            {\n-                continues = false;\n-                if ( !includes )\n-                {\n-                    return Evaluation.EXCLUDE_AND_PRUNE;\n-                }\n-            }\n+          return Evaluation.EXCLUDE_AND_PRUNE;\n         }\n-        return Evaluation.of( includes, continues );\n+      }\n+      if (!bla.continues())\n+      {\n+        continues = false;\n+        if (!includes)\n+        {\n+          return Evaluation.EXCLUDE_AND_PRUNE;\n+        }\n+      }\n     }\n+    return Evaluation.of(includes, continues);\n+  }\n \n-    /**\n-     * Adds {@code evaluator} to the list of evaluators wrapped by the returned\n-     * evaluator. A new {@link MultiEvaluator} instance additionally containing\n-     * the supplied {@code evaluator} is returned and this instance will be\n-     * left intact.\n-     *\n-     * @param evaluator the {@link Evaluator} to add to this multi evaluator.\n-     * @return a new instance containing the current list of evaluator plus\n-     * the supplied one.\n-     */\n-    public MultiEvaluator<STATE> add( PathEvaluator<STATE> evaluator )\n-    {\n-        PathEvaluator[] newArray = new PathEvaluator[this.evaluators.length + 1];\n-        System.arraycopy( this.evaluators, 0, newArray, 0, this.evaluators.length );\n-        newArray[newArray.length - 1] = evaluator;\n-        return new MultiEvaluator<>( newArray );\n-    }\n+  /**\n+   * Adds {@code evaluator} to the list of evaluators wrapped by the returned\n+   * evaluator. A new {@link MultiEvaluator} instance additionally containing\n+   * the supplied {@code evaluator} is returned and this instance will be\n+   * left intact.\n+   *\n+   * @param evaluator the {@link Evaluator} to add to this multi evaluator.\n+   * @return a new instance containing the current list of evaluator plus\n+   * the supplied one.\n+   */\n+  public MultiEvaluator<STATE> add(PathEvaluator<STATE> evaluator)\n+  {\n+    PathEvaluator[] newArray = new PathEvaluator[this.evaluators.length + 1];\n+    System.arraycopy(this.evaluators, 0, newArray, 0, this.evaluators.length);\n+    newArray[newArray.length - 1] = evaluator;\n+    return new MultiEvaluator<>(newArray);\n+  }\n }\n",
            "diff_size": 77
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2033/MultiEvaluator.java\nindex 7a329efbf67..7c1bebc1bbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2033/MultiEvaluator.java\n@@ -98,4 +98,4 @@ public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n         newArray[newArray.length - 1] = evaluator;\n         return new MultiEvaluator<>( newArray );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "29",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2033/MultiEvaluator.java\nindex 7a329efbf67..3b8670eaa42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2033/MultiEvaluator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2033/MultiEvaluator.java\n@@ -29,7 +29,8 @@ import org.neo4j.graphdb.traversal.PathEvaluator;\n  * Evaluator which can hold multiple {@link Evaluator}s and delegate to them\n  * all for evaluation requests.\n  */\n-public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n+\n+public class MultiEvaluator <STATE> extends PathEvaluator.Adapter<STATE>\n {\n     private final PathEvaluator[] evaluators;\n \n@@ -53,31 +54,34 @@ public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n      * @param position the {@link Path} to evaluate.\n      * @see Evaluator\n      */\n+\n     @Override\n     public Evaluation evaluate( Path position, BranchState<STATE> state )\n     {\n         boolean includes = true;\n         boolean continues = true;\n-        for ( PathEvaluator<STATE> evaluator : this.evaluators )\n+        for( PathEvaluator<STATE> evaluator : this.evaluators)\n         {\n             Evaluation bla = evaluator.evaluate( position, state );\n-            if ( !bla.includes() )\n+            if ( ! bla.includes() )\n             {\n                 includes = false;\n-                if ( !continues )\n+                if ( ! continues )\n                 {\n                     return Evaluation.EXCLUDE_AND_PRUNE;\n                 }\n             }\n-            if ( !bla.continues() )\n+\n+            if ( ! bla.continues() )\n             {\n                 continues = false;\n-                if ( !includes )\n+                if ( ! includes )\n                 {\n                     return Evaluation.EXCLUDE_AND_PRUNE;\n                 }\n             }\n         }\n+\n         return Evaluation.of( includes, continues );\n     }\n \n@@ -91,6 +95,7 @@ public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n      * @return a new instance containing the current list of evaluator plus\n      * the supplied one.\n      */\n+\n     public MultiEvaluator<STATE> add( PathEvaluator<STATE> evaluator )\n     {\n         PathEvaluator[] newArray = new PathEvaluator[this.evaluators.length + 1];\n@@ -98,4 +103,4 @@ public class MultiEvaluator<STATE> extends PathEvaluator.Adapter<STATE>\n         newArray[newArray.length - 1] = evaluator;\n         return new MultiEvaluator<>( newArray );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
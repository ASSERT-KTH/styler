{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2561",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2561/Utils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2561/Utils.java\nindex 8833b025c9b..68a5b4fc719 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2561/Utils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2561/Utils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n /**\n@@ -24,110 +25,106 @@ package org.neo4j.unsafe.impl.batchimport;\n  */\n public class Utils\n {\n-    public enum CompareType\n-    {\n-        EQ, GT, GE, LT, LE, NE\n-    }\n+  public enum CompareType\n+  {\n+    EQ, GT, GE, LT, LE, NE\n+  }\n \n-    public static boolean unsignedCompare( long dataA, long dataB, CompareType compareType )\n-    {   // works for signed and unsigned values\n-        switch ( compareType )\n+  public static boolean unsignedCompare(long dataA, long dataB, CompareType compareType)\n+  {   // works for signed and unsigned values\n+    switch (compareType)\n+    {\n+      case EQ:\n+        return dataA == dataB;\n+      case GE:\n+        if (dataA == dataB)\n         {\n-        case EQ:\n-            return dataA == dataB;\n-        case GE:\n-            if ( dataA == dataB )\n-            {\n-                return true;\n-            }\n-            // fall through to GT\n-        case GT:\n-            return dataA < dataB == ((dataA < 0) != (dataB < 0));\n-        case LE:\n-            if ( dataA == dataB )\n-            {\n-                return true;\n-            }\n-            // fall through to LT\n-        case LT:\n-            return (dataA < dataB) ^ ((dataA < 0) != (dataB < 0));\n-        case NE:\n-            return false;\n-\n-        default:\n-            throw new IllegalArgumentException( \"Unknown compare type: \" + compareType );\n+          return true;\n         }\n-    }\n-\n-    /**\n-     * Like {@link #unsignedCompare(long, long, CompareType)} but reversed in that you get {@link CompareType}\n-     * from comparing data A and B, i.e. the difference between them.\n-     */\n-    public static CompareType unsignedDifference( long dataA, long dataB )\n-    {\n-        if ( dataA == dataB )\n+        // fall through to GT\n+      case GT:\n+        return dataA < dataB == ((dataA < 0) != (dataB < 0));\n+      case LE:\n+        if (dataA == dataB)\n         {\n-            return CompareType.EQ;\n+          return true;\n         }\n-        return ((dataA < dataB) ^ ((dataA < 0) != (dataB < 0))) ? CompareType.LT : CompareType.GT;\n+        // fall through to LT\n+      case LT:\n+        return (dataA < dataB) ^ ((dataA < 0) != (dataB < 0));\n+      case NE:\n+        return false;\n+\n+      default:\n+        throw new IllegalArgumentException(\"Unknown compare type: \" + compareType);\n     }\n+  }\n \n-    // Values in the arrays are assumed to be sorted\n-    public static boolean anyIdCollides( long[] first, int firstLength, long[] other, int otherLength )\n+  /**\n+   * Like {@link #unsignedCompare(long, long, CompareType)} but reversed in that you get {@link CompareType}\n+   * from comparing data A and B, i.e. the difference between them.\n+   */\n+  public static CompareType unsignedDifference(long dataA, long dataB)\n+  {\n+    if (dataA == dataB)\n     {\n-        int f = 0;\n-        int o = 0;\n-        while ( f < firstLength && o < otherLength )\n-        {\n-            if ( first[f] == other[o] )\n-            {\n-                return true;\n-            }\n-\n-            if ( first[f] < other[o] )\n-            {\n-                while ( ++f < firstLength && first[f] < other[o] )\n-                {\n-                }\n-            }\n-            else\n-            {\n-                while ( ++o < otherLength && first[f] > other[o] )\n-                {\n-                }\n-            }\n-        }\n-\n-        return false;\n+      return CompareType.EQ;\n     }\n+    return ((dataA < dataB) ^ ((dataA < 0) != (dataB < 0))) ? CompareType.LT : CompareType.GT;\n+  }\n \n-    public static void mergeSortedInto( long[] values, long[] into, int intoLengthBefore )\n+  // Values in the arrays are assumed to be sorted\n+  public static boolean anyIdCollides(long[] first, int firstLength, long[] other, int otherLength)\n+  {\n+    int f = 0;\n+    int o = 0;\n+    while (f < firstLength && o < otherLength)\n     {\n-        int v = values.length - 1;\n-        int i = intoLengthBefore - 1;\n-        int t = i + values.length;\n-        while ( v >= 0 || i >= 0 )\n+      if (first[f] == other[o])\n+      {\n+        return true;\n+      }\n+\n+      if (first[f] < other[o])\n+      {\n+        while (++f < firstLength && first[f] < other[o])\n         {\n-            if ( i == -1 )\n-            {\n-                into[t--] = values[v--];\n-            }\n-            else if ( v == -1 )\n-            {\n-                into[t--] = into[i--];\n-            }\n-            else if ( values[v] >= into[i] )\n-            {\n-                into[t--] = values[v--];\n-            }\n-            else\n-            {\n-                into[t--] = into[i--];\n-            }\n         }\n+      } else\n+      {\n+        while (++o < otherLength && first[f] > other[o])\n+        {\n+        }\n+      }\n     }\n \n-    private Utils()\n-    {   // No instances allowed\n+    return false;\n+  }\n+\n+  public static void mergeSortedInto(long[] values, long[] into, int intoLengthBefore)\n+  {\n+    int v = values.length - 1;\n+    int i = intoLengthBefore - 1;\n+    int t = i + values.length;\n+    while (v >= 0 || i >= 0)\n+    {\n+      if (i == -1)\n+      {\n+        into[t--] = values[v--];\n+      } else if (v == -1)\n+      {\n+        into[t--] = into[i--];\n+      } else if (values[v] >= into[i])\n+      {\n+        into[t--] = values[v--];\n+      } else\n+      {\n+        into[t--] = into[i--];\n+      }\n     }\n+  }\n+\n+  private Utils()\n+  {   // No instances allowed\n+  }\n }\n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
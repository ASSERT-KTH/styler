{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1359",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1359/LuceneIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1359/LuceneIndexAccessor.java\nindex 03c6b668a8c..d07d25efe33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1359/LuceneIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1359/LuceneIndexAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema;\n \n import java.io.File;\n@@ -40,176 +41,174 @@ import org.neo4j.values.storable.Value;\n \n public class LuceneIndexAccessor implements IndexAccessor\n {\n-    private final LuceneIndexWriter writer;\n-    private final SchemaIndex luceneIndex;\n-    private final SchemaIndexDescriptor descriptor;\n-\n-    public LuceneIndexAccessor( SchemaIndex luceneIndex, SchemaIndexDescriptor descriptor )\n+  private final LuceneIndexWriter writer;\n+  private final SchemaIndex luceneIndex;\n+  private final SchemaIndexDescriptor descriptor;\n+\n+  public LuceneIndexAccessor(SchemaIndex luceneIndex, SchemaIndexDescriptor descriptor)\n+  {\n+    this.luceneIndex = luceneIndex;\n+    this.descriptor = descriptor;\n+    this.writer = luceneIndex.isReadOnly() ? null : luceneIndex.getIndexWriter();\n+  }\n+\n+  @Override\n+  public IndexUpdater newUpdater(IndexUpdateMode mode)\n+  {\n+    if (luceneIndex.isReadOnly())\n     {\n-        this.luceneIndex = luceneIndex;\n-        this.descriptor = descriptor;\n-        this.writer = luceneIndex.isReadOnly() ? null : luceneIndex.getIndexWriter();\n+      throw new UnsupportedOperationException(\"Can't create updater for read only index.\");\n     }\n-\n-    @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode )\n+    return new LuceneIndexUpdater(mode.requiresIdempotency(), mode.requiresRefresh());\n+  }\n+\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    luceneIndex.drop();\n+  }\n+\n+  @Override\n+  public void force(IOLimiter ioLimiter) throws IOException\n+  {\n+    // We never change status of read-only indexes.\n+    if (!luceneIndex.isReadOnly())\n     {\n-        if ( luceneIndex.isReadOnly() )\n-        {\n-            throw new UnsupportedOperationException( \"Can't create updater for read only index.\" );\n-        }\n-        return new LuceneIndexUpdater( mode.requiresIdempotency(), mode.requiresRefresh() );\n+      luceneIndex.markAsOnline();\n     }\n-\n-    @Override\n-    public void drop() throws IOException\n+    luceneIndex.maybeRefreshBlocking();\n+  }\n+\n+  @Override\n+  public void refresh() throws IOException\n+  {\n+    luceneIndex.maybeRefreshBlocking();\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    luceneIndex.close();\n+  }\n+\n+  @Override\n+  public IndexReader newReader()\n+  {\n+    try\n     {\n-        luceneIndex.drop();\n-    }\n-\n-    @Override\n-    public void force( IOLimiter ioLimiter ) throws IOException\n+      return luceneIndex.getIndexReader();\n+    } catch (IOException e)\n     {\n-        // We never change status of read-only indexes.\n-        if ( !luceneIndex.isReadOnly() )\n-        {\n-            luceneIndex.markAsOnline();\n-        }\n-        luceneIndex.maybeRefreshBlocking();\n+      throw new LuceneIndexReaderAcquisitionException(\"Can't acquire index reader\", e);\n     }\n-\n-    @Override\n-    public void refresh() throws IOException\n+  }\n+\n+  @Override\n+  public BoundedIterable<Long> newAllEntriesReader()\n+  {\n+    return new LuceneAllEntriesIndexAccessorReader(luceneIndex.allDocumentsReader());\n+  }\n+\n+  @Override\n+  public ResourceIterator<File> snapshotFiles() throws IOException\n+  {\n+    return luceneIndex.snapshot();\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor)\n+      throws IndexEntryConflictException, IOException\n+  {\n+    luceneIndex.verifyUniqueness(propertyAccessor, descriptor.schema().getPropertyIds());\n+  }\n+\n+  @Override\n+  public boolean isDirty()\n+  {\n+    return !luceneIndex.isValid();\n+  }\n+\n+  @Override\n+  public void validateBeforeCommit(Value[] tuple)\n+  {\n+    // In Lucene all values in a tuple (composite index) will be placed in a separate field, so validate their fields individually.\n+    for (Value value : tuple)\n     {\n-        luceneIndex.maybeRefreshBlocking();\n+      LuceneIndexValueValidator.INSTANCE.validate(value);\n     }\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        luceneIndex.close();\n-    }\n+  private class LuceneIndexUpdater implements IndexUpdater\n+  {\n+    private final boolean idempotent;\n+    private final boolean refresh;\n \n-    @Override\n-    public IndexReader newReader()\n+    private boolean hasChanges;\n+\n+    private LuceneIndexUpdater(boolean idempotent, boolean refresh)\n     {\n-        try\n-        {\n-            return luceneIndex.getIndexReader();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new LuceneIndexReaderAcquisitionException( \"Can't acquire index reader\", e );\n-        }\n+      this.idempotent = idempotent;\n+      this.refresh = refresh;\n     }\n \n     @Override\n-    public BoundedIterable<Long> newAllEntriesReader()\n+    public void process(IndexEntryUpdate<?> update) throws IOException\n     {\n-        return new LuceneAllEntriesIndexAccessorReader( luceneIndex.allDocumentsReader() );\n+      // we do not support adding partial entries\n+      assert update.indexKey().schema().equals(descriptor.schema());\n+\n+      switch (update.updateMode())\n+      {\n+        case ADDED:\n+          if (idempotent)\n+          {\n+            addIdempotent(update.getEntityId(), update.values());\n+          } else\n+          {\n+            add(update.getEntityId(), update.values());\n+          }\n+          break;\n+        case CHANGED:\n+          change(update.getEntityId(), update.values());\n+          break;\n+        case REMOVED:\n+          remove(update.getEntityId());\n+          break;\n+        default:\n+          throw new UnsupportedOperationException();\n+      }\n+      hasChanges = true;\n     }\n \n     @Override\n-    public ResourceIterator<File> snapshotFiles() throws IOException\n+    public void close() throws IOException\n     {\n-        return luceneIndex.snapshot();\n+      if (hasChanges && refresh)\n+      {\n+        luceneIndex.maybeRefreshBlocking();\n+      }\n     }\n \n-    @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor )\n-            throws IndexEntryConflictException, IOException\n+    private void addIdempotent(long nodeId, Value[] values) throws IOException\n     {\n-        luceneIndex.verifyUniqueness( propertyAccessor, descriptor.schema().getPropertyIds() );\n+      writer.updateDocument(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId),\n+          LuceneDocumentStructure.documentRepresentingProperties(nodeId, values));\n     }\n \n-    @Override\n-    public boolean isDirty()\n+    private void add(long nodeId, Value[] values) throws IOException\n     {\n-        return !luceneIndex.isValid();\n+      writer.addDocument(LuceneDocumentStructure.documentRepresentingProperties(nodeId, values));\n     }\n \n-    @Override\n-    public void validateBeforeCommit( Value[] tuple )\n+    private void change(long nodeId, Value[] values) throws IOException\n     {\n-        // In Lucene all values in a tuple (composite index) will be placed in a separate field, so validate their fields individually.\n-        for ( Value value : tuple )\n-        {\n-            LuceneIndexValueValidator.INSTANCE.validate( value );\n-        }\n+      writer.updateDocument(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId),\n+          LuceneDocumentStructure.documentRepresentingProperties(nodeId, values));\n     }\n \n-    private class LuceneIndexUpdater implements IndexUpdater\n+    protected void remove(long nodeId) throws IOException\n     {\n-        private final boolean idempotent;\n-        private final boolean refresh;\n-\n-        private boolean hasChanges;\n-\n-        private LuceneIndexUpdater( boolean idempotent, boolean refresh )\n-        {\n-            this.idempotent = idempotent;\n-            this.refresh = refresh;\n-        }\n-\n-        @Override\n-        public void process( IndexEntryUpdate<?> update ) throws IOException\n-        {\n-            // we do not support adding partial entries\n-            assert update.indexKey().schema().equals( descriptor.schema() );\n-\n-            switch ( update.updateMode() )\n-            {\n-            case ADDED:\n-                if ( idempotent )\n-                {\n-                    addIdempotent( update.getEntityId(), update.values() );\n-                }\n-                else\n-                {\n-                    add( update.getEntityId(), update.values() );\n-                }\n-                break;\n-            case CHANGED:\n-                change( update.getEntityId(), update.values() );\n-                break;\n-            case REMOVED:\n-                remove( update.getEntityId() );\n-                break;\n-            default:\n-                throw new UnsupportedOperationException();\n-            }\n-            hasChanges = true;\n-        }\n-\n-        @Override\n-        public void close() throws IOException\n-        {\n-            if ( hasChanges && refresh )\n-            {\n-                luceneIndex.maybeRefreshBlocking();\n-            }\n-        }\n-\n-        private void addIdempotent( long nodeId, Value[] values ) throws IOException\n-        {\n-            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                    LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n-        }\n-\n-        private void add( long nodeId, Value[] values ) throws IOException\n-        {\n-            writer.addDocument( LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n-        }\n-\n-        private void change( long nodeId, Value[] values ) throws IOException\n-        {\n-            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                    LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n-        }\n-\n-        protected void remove( long nodeId ) throws IOException\n-        {\n-            writer.deleteDocuments( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ) );\n-        }\n+      writer.deleteDocuments(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId));\n     }\n+  }\n }\n",
            "diff_size": 236
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1359/LuceneIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1359/LuceneIndexAccessor.java\nindex 03c6b668a8c..ab7776acb7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1359/LuceneIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1359/LuceneIndexAccessor.java\n@@ -116,9 +116,8 @@ public class LuceneIndexAccessor implements IndexAccessor\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor )\n-            throws IndexEntryConflictException, IOException\n-    {\n+    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException, IOException\n+{\n         luceneIndex.verifyUniqueness( propertyAccessor, descriptor.schema().getPropertyIds() );\n     }\n \n@@ -156,8 +155,7 @@ public class LuceneIndexAccessor implements IndexAccessor\n         {\n             // we do not support adding partial entries\n             assert update.indexKey().schema().equals( descriptor.schema() );\n-\n-            switch ( update.updateMode() )\n+switch ( update.updateMode() )\n             {\n             case ADDED:\n                 if ( idempotent )\n@@ -178,7 +176,8 @@ public class LuceneIndexAccessor implements IndexAccessor\n             default:\n                 throw new UnsupportedOperationException();\n             }\n-            hasChanges = true;\n+\n+hasChanges = true;\n         }\n \n         @Override\n@@ -192,8 +191,7 @@ public class LuceneIndexAccessor implements IndexAccessor\n \n         private void addIdempotent( long nodeId, Value[] values ) throws IOException\n         {\n-            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                    LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n+            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ), LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n         }\n \n         private void add( long nodeId, Value[] values ) throws IOException\n@@ -203,8 +201,7 @@ public class LuceneIndexAccessor implements IndexAccessor\n \n         private void change( long nodeId, Value[] values ) throws IOException\n         {\n-            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                    LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n+            writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ), LuceneDocumentStructure.documentRepresentingProperties( nodeId, values ) );\n         }\n \n         protected void remove( long nodeId ) throws IOException\n@@ -212,4 +209,4 @@ public class LuceneIndexAccessor implements IndexAccessor\n             writer.deleteDocuments( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
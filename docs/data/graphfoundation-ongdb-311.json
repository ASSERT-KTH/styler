{
    "project_name": "graphfoundation-ongdb",
    "error_id": "311",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/311/CompiledCursorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/311/CompiledCursorUtils.java\nindex 70e4f2dc952..3bef3d0f0b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/311/CompiledCursorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/311/CompiledCursorUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import org.neo4j.graphdb.Direction;\n@@ -38,142 +39,142 @@ import org.neo4j.values.storable.Values;\n  */\n public final class CompiledCursorUtils\n {\n-    /**\n-     * Do not instantiate this class\n-     */\n-    private CompiledCursorUtils()\n+  /**\n+   * Do not instantiate this class\n+   */\n+  private CompiledCursorUtils()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * Fetches a given property from a node\n+   *\n+   * @param read           The current Read instance\n+   * @param nodeCursor     The node cursor to use\n+   * @param node           The id of the node\n+   * @param propertyCursor The property cursor to use\n+   * @param prop           The id of the property to find\n+   * @return The value of the given property\n+   * @throws EntityNotFoundException If the node cannot be find.\n+   */\n+  public static Value nodeGetProperty(Read read, NodeCursor nodeCursor, long node, PropertyCursor propertyCursor,\n+                                      int prop) throws EntityNotFoundException\n+  {\n+    if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n     {\n-        throw new UnsupportedOperationException();\n+      return Values.NO_VALUE;\n     }\n-\n-    /**\n-     * Fetches a given property from a node\n-     *\n-     * @param read The current Read instance\n-     * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n-     * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n-     * @return The value of the given property\n-     * @throws EntityNotFoundException If the node cannot be find.\n-     */\n-    public static Value nodeGetProperty( Read read, NodeCursor nodeCursor, long node, PropertyCursor propertyCursor,\n-            int prop ) throws EntityNotFoundException\n+    singleNode(read, nodeCursor, node);\n+    nodeCursor.properties(propertyCursor);\n+    while (propertyCursor.next())\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-        singleNode( read, nodeCursor, node );\n-        nodeCursor.properties( propertyCursor );\n-        while ( propertyCursor.next() )\n-        {\n-            if ( propertyCursor.propertyKey() == prop )\n-            {\n-                return propertyCursor.propertyValue();\n-            }\n-        }\n-\n-        return Values.NO_VALUE;\n+      if (propertyCursor.propertyKey() == prop)\n+      {\n+        return propertyCursor.propertyValue();\n+      }\n     }\n \n-    /**\n-     * Checks if given node has a given label.\n-     *\n-     * @param read The current Read instance\n-     * @param nodeCursor The node cursor to use\n-     * @param node The id of the node\n-     * @param label The id of the label\n-     * @return {@code true} if the node has the label, otherwise {@code false}\n-     * @throws EntityNotFoundException if the node is not there.\n-     */\n-    public static boolean nodeHasLabel( Read read, NodeCursor nodeCursor, long node, int label )\n-            throws EntityNotFoundException\n-    {\n-        if ( label == StatementConstants.NO_SUCH_LABEL )\n-        {\n-            return false;\n-        }\n-        singleNode( read, nodeCursor, node );\n+    return Values.NO_VALUE;\n+  }\n \n-        return nodeCursor.labels().contains( label );\n+  /**\n+   * Checks if given node has a given label.\n+   *\n+   * @param read       The current Read instance\n+   * @param nodeCursor The node cursor to use\n+   * @param node       The id of the node\n+   * @param label      The id of the label\n+   * @return {@code true} if the node has the label, otherwise {@code false}\n+   * @throws EntityNotFoundException if the node is not there.\n+   */\n+  public static boolean nodeHasLabel(Read read, NodeCursor nodeCursor, long node, int label)\n+      throws EntityNotFoundException\n+  {\n+    if (label == StatementConstants.NO_SUCH_LABEL)\n+    {\n+      return false;\n     }\n+    singleNode(read, nodeCursor, node);\n+\n+    return nodeCursor.labels().contains(label);\n+  }\n \n-    public static RelationshipSelectionCursor nodeGetRelationships( Read read, CursorFactory cursors, NodeCursor node,\n-            long nodeId, Direction direction, int[] types )\n+  public static RelationshipSelectionCursor nodeGetRelationships(Read read, CursorFactory cursors, NodeCursor node,\n+                                                                 long nodeId, Direction direction, int[] types)\n+  {\n+    read.singleNode(nodeId, node);\n+    if (!node.next())\n     {\n-        read.singleNode( nodeId, node );\n-        if ( !node.next() )\n-        {\n-            return RelationshipSelectionCursor.EMPTY;\n-        }\n-        switch ( direction )\n-        {\n-        case OUTGOING:\n-            return RelationshipSelections.outgoingCursor( cursors, node, types );\n-        case INCOMING:\n-            return RelationshipSelections.incomingCursor( cursors, node, types );\n-        case BOTH:\n-            return RelationshipSelections.allCursor( cursors, node, types );\n-        default:\n-            throw new IllegalStateException( \"Unknown direction \" + direction );\n-        }\n+      return RelationshipSelectionCursor.EMPTY;\n     }\n-\n-    /**\n-     * Fetches a given property from a relationship\n-     *\n-     * @param read The current Read instance\n-     * @param relationship The node cursor to use\n-     * @param node The id of the node\n-     * @param propertyCursor The property cursor to use\n-     * @param prop The id of the property to find\n-     * @return The value of the given property\n-     * @throws EntityNotFoundException If the node cannot be find.\n-     */\n-    public static Value relationshipGetProperty( Read read, RelationshipScanCursor relationship, long node, PropertyCursor propertyCursor,\n-            int prop ) throws EntityNotFoundException\n+    switch (direction)\n     {\n-        if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n-        {\n-            return Values.NO_VALUE;\n-        }\n-        singleRelationship( read, relationship, node );\n-        relationship.properties( propertyCursor );\n-        while ( propertyCursor.next() )\n-        {\n-            if ( propertyCursor.propertyKey() == prop )\n-            {\n-                return propertyCursor.propertyValue();\n-            }\n-        }\n-\n-        return Values.NO_VALUE;\n+      case OUTGOING:\n+        return RelationshipSelections.outgoingCursor(cursors, node, types);\n+      case INCOMING:\n+        return RelationshipSelections.incomingCursor(cursors, node, types);\n+      case BOTH:\n+        return RelationshipSelections.allCursor(cursors, node, types);\n+      default:\n+        throw new IllegalStateException(\"Unknown direction \" + direction);\n     }\n+  }\n \n-    public static RelationshipSelectionCursor nodeGetRelationships( Read read, CursorFactory cursors, NodeCursor node,\n-            long nodeId,\n-            Direction direction )\n+  /**\n+   * Fetches a given property from a relationship\n+   *\n+   * @param read           The current Read instance\n+   * @param relationship   The node cursor to use\n+   * @param node           The id of the node\n+   * @param propertyCursor The property cursor to use\n+   * @param prop           The id of the property to find\n+   * @return The value of the given property\n+   * @throws EntityNotFoundException If the node cannot be find.\n+   */\n+  public static Value relationshipGetProperty(Read read, RelationshipScanCursor relationship, long node, PropertyCursor propertyCursor,\n+                                              int prop) throws EntityNotFoundException\n+  {\n+    if (prop == StatementConstants.NO_SUCH_PROPERTY_KEY)\n+    {\n+      return Values.NO_VALUE;\n+    }\n+    singleRelationship(read, relationship, node);\n+    relationship.properties(propertyCursor);\n+    while (propertyCursor.next())\n     {\n-        return nodeGetRelationships( read, cursors, node, nodeId, direction, null );\n+      if (propertyCursor.propertyKey() == prop)\n+      {\n+        return propertyCursor.propertyValue();\n+      }\n     }\n \n-    private static void singleNode( Read read, NodeCursor nodeCursor, long node ) throws EntityNotFoundException\n+    return Values.NO_VALUE;\n+  }\n+\n+  public static RelationshipSelectionCursor nodeGetRelationships(Read read, CursorFactory cursors, NodeCursor node,\n+                                                                 long nodeId,\n+                                                                 Direction direction)\n+  {\n+    return nodeGetRelationships(read, cursors, node, nodeId, direction, null);\n+  }\n+\n+  private static void singleNode(Read read, NodeCursor nodeCursor, long node) throws EntityNotFoundException\n+  {\n+    read.singleNode(node, nodeCursor);\n+    if (!nodeCursor.next())\n     {\n-        read.singleNode( node, nodeCursor );\n-        if ( !nodeCursor.next() )\n-        {\n-            throw new EntityNotFoundException( EntityType.NODE, node );\n-        }\n+      throw new EntityNotFoundException(EntityType.NODE, node);\n     }\n+  }\n \n-    private static void singleRelationship( Read read, RelationshipScanCursor relationships, long relationship ) throws EntityNotFoundException\n+  private static void singleRelationship(Read read, RelationshipScanCursor relationships, long relationship) throws EntityNotFoundException\n+  {\n+    read.singleRelationship(relationship, relationships);\n+    if (!relationships.next())\n     {\n-        read.singleRelationship( relationship, relationships );\n-        if ( !relationships.next() )\n-        {\n-            throw new EntityNotFoundException( EntityType.NODE, relationship );\n-        }\n+      throw new EntityNotFoundException(EntityType.NODE, relationship);\n     }\n+  }\n }\n \n",
            "diff_size": 198
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/311/CompiledCursorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/311/CompiledCursorUtils.java\nindex 70e4f2dc952..b8b82395578 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/311/CompiledCursorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/311/CompiledCursorUtils.java\n@@ -57,14 +57,14 @@ public final class CompiledCursorUtils\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node cannot be find.\n      */\n-    public static Value nodeGetProperty( Read read, NodeCursor nodeCursor, long node, PropertyCursor propertyCursor,\n-            int prop ) throws EntityNotFoundException\n-    {\n+    public static Value nodeGetProperty( Read read, NodeCursor nodeCursor, long node, PropertyCursor propertyCursor, int prop ) throws EntityNotFoundException\n+{\n         if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n         {\n             return Values.NO_VALUE;\n         }\n-        singleNode( read, nodeCursor, node );\n+\n+singleNode( read, nodeCursor, node );\n         nodeCursor.properties( propertyCursor );\n         while ( propertyCursor.next() )\n         {\n@@ -87,16 +87,15 @@ public final class CompiledCursorUtils\n      * @return {@code true} if the node has the label, otherwise {@code false}\n      * @throws EntityNotFoundException if the node is not there.\n      */\n-    public static boolean nodeHasLabel( Read read, NodeCursor nodeCursor, long node, int label )\n-            throws EntityNotFoundException\n-    {\n+    public static boolean nodeHasLabel( Read read, NodeCursor nodeCursor, long node, int label ) throws EntityNotFoundException\n+{\n         if ( label == StatementConstants.NO_SUCH_LABEL )\n         {\n             return false;\n         }\n-        singleNode( read, nodeCursor, node );\n \n-        return nodeCursor.labels().contains( label );\n+singleNode( read, nodeCursor, node );\n+return nodeCursor.labels().contains( label );\n     }\n \n     public static RelationshipSelectionCursor nodeGetRelationships( Read read, CursorFactory cursors, NodeCursor node,\n@@ -131,14 +130,14 @@ public final class CompiledCursorUtils\n      * @return The value of the given property\n      * @throws EntityNotFoundException If the node cannot be find.\n      */\n-    public static Value relationshipGetProperty( Read read, RelationshipScanCursor relationship, long node, PropertyCursor propertyCursor,\n-            int prop ) throws EntityNotFoundException\n-    {\n+    public static Value relationshipGetProperty( Read read, RelationshipScanCursor relationship, long node, PropertyCursor propertyCursor, int prop ) throws EntityNotFoundException\n+{\n         if ( prop == StatementConstants.NO_SUCH_PROPERTY_KEY )\n         {\n             return Values.NO_VALUE;\n         }\n-        singleRelationship( read, relationship, node );\n+\n+singleRelationship( read, relationship, node );\n         relationship.properties( propertyCursor );\n         while ( propertyCursor.next() )\n         {\n@@ -175,5 +174,4 @@ public final class CompiledCursorUtils\n             throw new EntityNotFoundException( EntityType.NODE, relationship );\n         }\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
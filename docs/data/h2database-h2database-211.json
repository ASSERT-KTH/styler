{
    "project_name": "h2database-h2database",
    "error_id": "211",
    "information": {
        "errors": [
            {
                "line": "140",
                "column": "10",
                "severity": "warning",
                "message": "'else' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            databaseToUpper = settings.databaseToUpper;\n            databaseToLower = settings.databaseToLower;\n        }else if (isMySQL || isPostgreSQL) {\n            databaseToUpper = false;\n            databaseToLower = true;\n        } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/211/DbContents.java\nindex da8e89ba885..f787a024e97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/211/DbContents.java\n@@ -137,7 +137,7 @@ public class DbContents {\n             SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n         } else {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/211/DbContents.java\nindex da8e89ba885..c74b35265c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/211/DbContents.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.bnf.context;\n \n import java.sql.Connection;\n@@ -117,7 +118,7 @@ public class DbContents {\n     /**\n      * Read the contents of this database from the database meta data.\n      *\n-     * @param url the database URL\n+     * @param url  the database URL\n      * @param conn the connection\n      */\n     public synchronized void readContents(String url, Connection conn)\n@@ -127,17 +128,19 @@ public class DbContents {\n         isSQLite = url.startsWith(\"jdbc:sqlite:\");\n         isOracle = url.startsWith(\"jdbc:oracle:\");\n         // the Vertica engine is based on PostgreSQL\n-        isPostgreSQL = url.startsWith(\"jdbc:postgresql:\") || url.startsWith(\"jdbc:vertica:\");\n+        isPostgreSQL = url.startsWith(\"jdbc:postgresql:\") ||\n+                url.startsWith(\"jdbc:vertica:\");\n         // isHSQLDB = url.startsWith(\"jdbc:hsqldb:\");\n         isMySQL = url.startsWith(\"jdbc:mysql:\");\n         isDerby = url.startsWith(\"jdbc:derby:\");\n         isFirebird = url.startsWith(\"jdbc:firebirdsql:\");\n         isMSSQLServer = url.startsWith(\"jdbc:sqlserver:\");\n         if (isH2) {\n-            SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n+            SessionInterface.StaticSettings settings =\n+                    ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n         } else {\n@@ -157,8 +160,8 @@ public class DbContents {\n                 defaultSchema = schema;\n             }\n             schemas[i] = schema;\n-            String[] tableTypes = { \"TABLE\", \"SYSTEM TABLE\", \"VIEW\",\n-                    \"SYSTEM VIEW\", \"TABLE LINK\", \"SYNONYM\", \"EXTERNAL\" };\n+            String[] tableTypes = {\"TABLE\", \"SYSTEM TABLE\", \"VIEW\",\n+                    \"SYSTEM VIEW\", \"TABLE LINK\", \"SYNONYM\", \"EXTERNAL\"};\n             schema.readTables(meta, tableTypes);\n             if (!isPostgreSQL && !isDB2) {\n                 schema.readProcedures(meta);\n@@ -184,9 +187,9 @@ public class DbContents {\n \n     private String[] getSchemaNames(DatabaseMetaData meta) throws SQLException {\n         if (isMySQL || isSQLite) {\n-            return new String[] { \"\" };\n+            return new String[] {\"\"};\n         } else if (isFirebird) {\n-            return new String[] { null };\n+            return new String[] {null};\n         }\n         ResultSet rs = meta.getSchemas();\n         ArrayList<String> schemaList = Utils.newSmallArrayList();\n@@ -194,21 +197,21 @@ public class DbContents {\n             String schema = rs.getString(\"TABLE_SCHEM\");\n             String[] ignoreNames = null;\n             if (isOracle) {\n-                ignoreNames = new String[] { \"CTXSYS\", \"DIP\", \"DBSNMP\",\n+                ignoreNames = new String[] {\"CTXSYS\", \"DIP\", \"DBSNMP\",\n                         \"DMSYS\", \"EXFSYS\", \"FLOWS_020100\", \"FLOWS_FILES\",\n                         \"MDDATA\", \"MDSYS\", \"MGMT_VIEW\", \"OLAPSYS\", \"ORDSYS\",\n                         \"ORDPLUGINS\", \"OUTLN\", \"SI_INFORMTN_SCHEMA\", \"SYS\",\n-                        \"SYSMAN\", \"SYSTEM\", \"TSMSYS\", \"WMSYS\", \"XDB\" };\n+                        \"SYSMAN\", \"SYSTEM\", \"TSMSYS\", \"WMSYS\", \"XDB\"};\n             } else if (isMSSQLServer) {\n-                ignoreNames = new String[] { \"sys\", \"db_accessadmin\",\n+                ignoreNames = new String[] {\"sys\", \"db_accessadmin\",\n                         \"db_backupoperator\", \"db_datareader\", \"db_datawriter\",\n                         \"db_ddladmin\", \"db_denydatareader\",\n-                        \"db_denydatawriter\", \"db_owner\", \"db_securityadmin\" };\n+                        \"db_denydatawriter\", \"db_owner\", \"db_securityadmin\"};\n             } else if (isDB2) {\n-                ignoreNames = new String[] { \"NULLID\", \"SYSFUN\",\n+                ignoreNames = new String[] {\"NULLID\", \"SYSFUN\",\n                         \"SYSIBMINTERNAL\", \"SYSIBMTS\", \"SYSPROC\", \"SYSPUBLIC\",\n                         // not empty, but not sure what they contain\n-                        \"SYSCAT\",  \"SYSIBM\", \"SYSIBMADM\",\n+                        \"SYSCAT\", \"SYSIBM\", \"SYSIBMADM\",\n                         \"SYSSTAT\", \"SYSTOOLS\",\n                 };\n \n@@ -262,7 +265,8 @@ public class DbContents {\n         if (identifier == null) {\n             return null;\n         }\n-        if (ParserUtil.isSimpleIdentifier(identifier, databaseToUpper, databaseToLower)) {\n+        if (ParserUtil.isSimpleIdentifier(identifier, databaseToUpper,\n+                databaseToLower)) {\n             return identifier;\n         }\n         return StringUtils.quoteIdentifier(identifier);\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/211/DbContents.java\nindex da8e89ba885..1ca83a8cf2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/211/DbContents.java\n@@ -137,7 +137,7 @@ public class DbContents {\n             SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n         } else {\n@@ -268,4 +268,4 @@ public class DbContents {\n         return StringUtils.quoteIdentifier(identifier);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "244",
                    "column": "27",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/211/DbContents.java\nindex da8e89ba885..4aa7ee9624e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/211/DbContents.java\n@@ -10,7 +10,6 @@ import java.sql.DatabaseMetaData;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.util.ArrayList;\n-\n import org.h2.engine.SessionInterface;\n import org.h2.jdbc.JdbcConnection;\n import org.h2.util.ParserUtil;\n@@ -21,6 +20,8 @@ import org.h2.util.Utils;\n  * Keeps meta data information about a database.\n  * This class is used by the H2 Console.\n  */\n+\n+\n public class DbContents {\n \n     private DbSchema[] schemas;\n@@ -34,12 +35,13 @@ public class DbContents {\n     private boolean isFirebird;\n     private boolean isMSSQLServer;\n     private boolean isDB2;\n-\n     private boolean databaseToUpper, databaseToLower;\n \n     /**\n      * @return The default schema.\n      */\n+\n+\n     public DbSchema getDefaultSchema() {\n         return defaultSchema;\n     }\n@@ -47,6 +49,8 @@ public class DbContents {\n     /**\n      * @return True if this is an Apache Derby database.\n      */\n+\n+\n     public boolean isDerby() {\n         return isDerby;\n     }\n@@ -54,6 +58,8 @@ public class DbContents {\n     /**\n      * @return True if this is a Firebird database.\n      */\n+\n+\n     public boolean isFirebird() {\n         return isFirebird;\n     }\n@@ -61,6 +67,8 @@ public class DbContents {\n     /**\n      * @return True if this is a H2 database.\n      */\n+\n+\n     public boolean isH2() {\n         return isH2;\n     }\n@@ -68,6 +76,8 @@ public class DbContents {\n     /**\n      * @return True if this is a MS SQL Server database.\n      */\n+\n+\n     public boolean isMSSQLServer() {\n         return isMSSQLServer;\n     }\n@@ -75,6 +85,8 @@ public class DbContents {\n     /**\n      * @return True if this is a MySQL database.\n      */\n+\n+\n     public boolean isMySQL() {\n         return isMySQL;\n     }\n@@ -82,6 +94,8 @@ public class DbContents {\n     /**\n      * @return True if this is an Oracle database.\n      */\n+\n+\n     public boolean isOracle() {\n         return isOracle;\n     }\n@@ -89,6 +103,8 @@ public class DbContents {\n     /**\n      * @return True if this is a PostgreSQL database.\n      */\n+\n+\n     public boolean isPostgreSQL() {\n         return isPostgreSQL;\n     }\n@@ -96,6 +112,8 @@ public class DbContents {\n     /**\n      * @return True if this is an SQLite database.\n      */\n+\n+\n     public boolean isSQLite() {\n         return isSQLite;\n     }\n@@ -103,6 +121,8 @@ public class DbContents {\n     /**\n      * @return True if this is an IBM DB2 database.\n      */\n+\n+\n     public boolean isDB2() {\n         return isDB2;\n     }\n@@ -110,6 +130,8 @@ public class DbContents {\n     /**\n      * @return The list of schemas.\n      */\n+\n+\n     public DbSchema[] getSchemas() {\n         return schemas;\n     }\n@@ -120,8 +142,9 @@ public class DbContents {\n      * @param url the database URL\n      * @param conn the connection\n      */\n-    public synchronized void readContents(String url, Connection conn)\n-            throws SQLException {\n+\n+\n+    public synchronized void readContents(String url, Connection conn) throws SQLException {\n         isH2 = url.startsWith(\"jdbc:h2:\");\n         isDB2 = url.startsWith(\"jdbc:db2:\");\n         isSQLite = url.startsWith(\"jdbc:sqlite:\");\n@@ -137,10 +160,10 @@ public class DbContents {\n             SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n-        } else {\n+                                                                                           } else {\n             databaseToUpper = true;\n             databaseToLower = false;\n         }\n@@ -150,15 +173,13 @@ public class DbContents {\n         schemas = new DbSchema[schemaNames.length];\n         for (int i = 0; i < schemaNames.length; i++) {\n             String schemaName = schemaNames[i];\n-            boolean isDefault = defaultSchemaName == null ||\n-                    defaultSchemaName.equals(schemaName);\n+            boolean isDefault = defaultSchemaName == null || defaultSchemaName.equals(schemaName);\n             DbSchema schema = new DbSchema(this, schemaName, isDefault);\n             if (isDefault) {\n                 defaultSchema = schema;\n             }\n             schemas[i] = schema;\n-            String[] tableTypes = { \"TABLE\", \"SYSTEM TABLE\", \"VIEW\",\n-                    \"SYSTEM VIEW\", \"TABLE LINK\", \"SYNONYM\", \"EXTERNAL\" };\n+            String[] tableTypes = {\"TABLE\", \"SYSTEM TABLE\", \"VIEW\", \"SYSTEM VIEW\", \"TABLE LINK\", \"SYNONYM\", \"EXTERNAL\" };\n             schema.readTables(meta, tableTypes);\n             if (!isPostgreSQL && !isDB2) {\n                 schema.readProcedures(meta);\n@@ -172,9 +193,7 @@ public class DbContents {\n                     defaultSchema = schema;\n                     break;\n                 }\n-                if (defaultSchema == null ||\n-                        best == null ||\n-                        schema.name.length() < best.length()) {\n+                if (defaultSchema == null || best == null || schema.name.length() < best.length()) {\n                     best = schema.name;\n                     defaultSchema = schema;\n                 }\n@@ -184,7 +203,7 @@ public class DbContents {\n \n     private String[] getSchemaNames(DatabaseMetaData meta) throws SQLException {\n         if (isMySQL || isSQLite) {\n-            return new String[] { \"\" };\n+            return new String[] {\"\"};\n         } else if (isFirebird) {\n             return new String[] { null };\n         }\n@@ -194,25 +213,37 @@ public class DbContents {\n             String schema = rs.getString(\"TABLE_SCHEM\");\n             String[] ignoreNames = null;\n             if (isOracle) {\n-                ignoreNames = new String[] { \"CTXSYS\", \"DIP\", \"DBSNMP\",\n-                        \"DMSYS\", \"EXFSYS\", \"FLOWS_020100\", \"FLOWS_FILES\",\n-                        \"MDDATA\", \"MDSYS\", \"MGMT_VIEW\", \"OLAPSYS\", \"ORDSYS\",\n-                        \"ORDPLUGINS\", \"OUTLN\", \"SI_INFORMTN_SCHEMA\", \"SYS\",\n-                        \"SYSMAN\", \"SYSTEM\", \"TSMSYS\", \"WMSYS\", \"XDB\" };\n+                ignoreNames = new String[] {\"CTXSYS\", \"DIP\", \"DBSNMP\", \"DMSYS\", \"EXFSYS\", \"FLOWS_020100\", \"FLOWS_FILES\", \"MDDATA\", \"MDSYS\", \"MGMT_VIEW\", \"OLAPSYS\", \"ORDSYS\", \"ORDPLUGINS\", \"OUTLN\", \"SI_INFORMTN_SCHEMA\", \"SYS\", \"SYSMAN\", \"SYSTEM\", \"TSMSYS\", \"WMSYS\", \"XDB\"};\n             } else if (isMSSQLServer) {\n-                ignoreNames = new String[] { \"sys\", \"db_accessadmin\",\n-                        \"db_backupoperator\", \"db_datareader\", \"db_datawriter\",\n-                        \"db_ddladmin\", \"db_denydatareader\",\n-                        \"db_denydatawriter\", \"db_owner\", \"db_securityadmin\" };\n-            } else if (isDB2) {\n-                ignoreNames = new String[] { \"NULLID\", \"SYSFUN\",\n-                        \"SYSIBMINTERNAL\", \"SYSIBMTS\", \"SYSPROC\", \"SYSPUBLIC\",\n+                ignoreNames = new String[] {\n+                    \"sys\",\n+                    \"db_accessadmin\",\n+                    \"db_backupoperator\",\n+                    \"db_datareader\",\n+                    \"db_datawriter\",\n+                    \"db_ddladmin\",\n+                    \"db_denydatareader\",\n+                    \"db_denydatawriter\",\n+                    \"db_owner\",\n+                    \"db_securityadmin\"\n+        };\n+                          } else if (isDB2) {\n+                       ignoreNames = new String[] {\n+                           \"NULLID\",\n+                           \"SYSFUN\",\n+                           \"SYSIBMINTERNAL\",\n+                           \"SYSIBMTS\",\n+                           \"SYSPROC\",\n+                           \"SYSPUBLIC\",\n                         // not empty, but not sure what they contain\n-                        \"SYSCAT\",  \"SYSIBM\", \"SYSIBMADM\",\n-                        \"SYSSTAT\", \"SYSTOOLS\",\n-                };\n-\n-            }\n+                           \"SYSCAT\",\n+                           \"SYSIBM\",\n+                           \"SYSIBMADM\",\n+                           \"SYSSTAT\",\n+                           \"SYSTOOLS\"\n+                          ,\n+                       };\n+                   }\n             if (ignoreNames != null) {\n                 for (String ignore : ignoreNames) {\n                     if (ignore.equals(schema)) {\n@@ -240,14 +271,15 @@ public class DbContents {\n             } else if (isPostgreSQL) {\n                 return \"public\";\n             } else if (isMySQL) {\n-                return \"\";\n+                       return \"\";\n             } else if (isDerby) {\n-                return StringUtils.toUpperEnglish(meta.getUserName());\n-            } else if (isFirebird) {\n-                return null;\n-            }\n+                       return StringUtils.toUpperEnglish(meta.getUserName());\n+                   } else if (isFirebird) {\n+                       return null;\n+                   }\n         } catch (SQLException e) {\n             // Ignore\n+\n         }\n         return defaultSchemaName;\n     }\n@@ -258,6 +290,8 @@ public class DbContents {\n      * @param identifier the identifier\n      * @return the quoted identifier\n      */\n+\n+\n     public String quoteIdentifier(String identifier) {\n         if (identifier == null) {\n             return null;\n@@ -268,4 +302,4 @@ public class DbContents {\n         return StringUtils.quoteIdentifier(identifier);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 81
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/211/DbContents.java\nindex da8e89ba885..f787a024e97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/211/DbContents.java\n@@ -137,7 +137,7 @@ public class DbContents {\n             SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n         } else {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/211/DbContents.java\nindex da8e89ba885..f787a024e97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/211/DbContents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/211/DbContents.java\n@@ -137,7 +137,7 @@ public class DbContents {\n             SessionInterface.StaticSettings settings = ((JdbcConnection) conn).getStaticSettings();\n             databaseToUpper = settings.databaseToUpper;\n             databaseToLower = settings.databaseToLower;\n-        }else if (isMySQL || isPostgreSQL) {\n+        } else if (isMySQL || isPostgreSQL) {\n             databaseToUpper = false;\n             databaseToLower = true;\n         } else {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
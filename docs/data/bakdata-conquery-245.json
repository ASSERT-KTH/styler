{
    "project_name": "bakdata-conquery",
    "error_id": "245",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": " * parse a {@link UserId} from a request, it submits this id in an\n * {@link AuthenticationToken}.\n * \n */\n@Slf4j\npublic class DefaultInitialUserRealm extends ConqueryAuthenticationRealm {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/245/DefaultInitialUserRealm.java\nindex bf98c86f549..fc8a40200f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/245/DefaultInitialUserRealm.java\n@@ -15,7 +15,6 @@ import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationToken;\n-\n /**\n  * This realm authenticates requests as if they are effected by the first\n  * initial user, that is found in the {@link AuthorizationConfig}, when no\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/245/DefaultInitialUserRealm.java\nindex bf98c86f549..5a9fc81efa8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/245/DefaultInitialUserRealm.java\n@@ -22,77 +22,75 @@ import org.apache.shiro.authc.AuthenticationToken;\n  * identifying information was found in the request. If the realm was able to\n  * parse a {@link UserId} from a request, it submits this id in an\n  * {@link AuthenticationToken}.\n- * \n  */\n @Slf4j\n public class DefaultInitialUserRealm extends ConqueryAuthenticationRealm {\n \n-\tprivate static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n+    private static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n \n-\t// Not allowed to be empty to take the first user as default\n-\tprivate final User defaultUser = Objects.requireNonNull(ConqueryConfig.getInstance()\n-\t\t.getAuthorization().getInitialUsers().get(0).getUser(), \"There must be at least one initial user configured.\");\n+    // Not allowed to be empty to take the first user as default\n+    private final User defaultUser = Objects.requireNonNull(ConqueryConfig.getInstance()\n+        .getAuthorization().getInitialUsers().get(0).getUser(), \"There must be at least one initial user configured.\");\n \n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\"\n-\t\t+ \"           \u00a7\u00a7\\n\"\n-\t\t+ \"          \u00a7  \u00a7\\n\"\n-\t\t+ \"         \u00a7    \u00a7\\n\"\n-\t\t+ \"        \u00a7      \u00a7\\n\"\n-\t\t+ \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n-\t\t+ \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n-\t\t+ \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n-\t\t+ \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n-\t\t+ \"   $                \u00a7\\n\"\n-\t\t+ \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n-\t\t+ \" \u00a7                    \u00a7\\n\"\n-\t\t+ \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+    /**\n+     * The warning that is displayed, when the realm is instantiated.\n+     */\n+    private static final String WARNING = \"\\n\"\n+        + \"           \u00a7\u00a7\\n\"\n+        + \"          \u00a7  \u00a7\\n\"\n+        + \"         \u00a7    \u00a7\\n\"\n+        + \"        \u00a7      \u00a7\\n\"\n+        + \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n+        + \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n+        + \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n+        + \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n+        + \"   $                \u00a7\\n\"\n+        + \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n+        + \" \u00a7                    \u00a7\\n\"\n+        + \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic DefaultInitialUserRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(DevelopmentToken.class);\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t}\n+    /**\n+     * Standard constructor.\n+     */\n+    public DefaultInitialUserRealm() {\n+        log.warn(WARNING);\n+        this.setAuthenticationTokenClass(DevelopmentToken.class);\n+        this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+    }\n \n-\t@Override\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif (!(token instanceof DevelopmentToken)) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tDevelopmentToken devToken = (DevelopmentToken) token;\n-\t\treturn new ConqueryAuthenticationInfo(devToken.getPrincipal(), devToken.getCredentials(), this);\n-\t}\n+    @Override\n+    protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        if (!(token instanceof DevelopmentToken)) {\n+            return null;\n+        }\n+        DevelopmentToken devToken = (DevelopmentToken) token;\n+        return new ConqueryAuthenticationInfo(devToken.getPrincipal(), devToken.getCredentials(), this);\n+    }\n \n-\t/**\n-\t * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n-\t */\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext requestContext) {\n-\t\t// Check if the developer passed a UserId under whose the Request should be\n-\t\t// executed\n+    /**\n+     * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n+     */\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext requestContext) {\n+        // Check if the developer passed a UserId under whose the Request should be\n+        // executed\n \n-\t\t// Check the Authorization header for a String which can be parsed as a UserId\n-\t\tString uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n+        // Check the Authorization header for a String which can be parsed as a UserId\n+        String uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n \n-\t\tif (uid == null) {\n-\t\t\t// Check also the query parameter \"access_token\" for a UserId\n-\t\t\tuid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n-\t\t}\n+        if (uid == null) {\n+            // Check also the query parameter \"access_token\" for a UserId\n+            uid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n+        }\n \n-\t\tUserId userId = null;\n+        UserId userId = null;\n \n-\t\tif (uid != null) {\n-\t\t\tuserId = UserId.Parser.INSTANCE.parse(uid);\n-\t\t}\n-\t\telse {\n-\t\t\t// If nothing was found execute the request as the default user\n-\t\t\tuserId = defaultUser.getId();\n-\t\t}\n-\t\treturn new DevelopmentToken(userId, uid);\n-\t}\n+        if (uid != null) {\n+            userId = UserId.Parser.INSTANCE.parse(uid);\n+        } else {\n+            // If nothing was found execute the request as the default user\n+            userId = defaultUser.getId();\n+        }\n+        return new DevelopmentToken(userId, uid);\n+    }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/245/DefaultInitialUserRealm.java\nindex bf98c86f549..52b4c17968c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/245/DefaultInitialUserRealm.java\n@@ -1,10 +1,8 @@\n package com.bakdata.conquery.models.auth.develop;\n \n import java.util.Objects;\n-\n import javax.ws.rs.container.ContainerRequestContext;\n import javax.ws.rs.core.HttpHeaders;\n-\n import com.bakdata.conquery.models.auth.AuthorizationConfig;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationInfo;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationRealm;\n@@ -24,75 +22,64 @@ import org.apache.shiro.authc.AuthenticationToken;\n  * {@link AuthenticationToken}.\n  * \n  */\n+\n @Slf4j\n public class DefaultInitialUserRealm extends ConqueryAuthenticationRealm {\n \n-\tprivate static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n+ private static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n+\n+ // Not allowed to be empty to take the first user as default\n+ private final User defaultUser = Objects.requireNonNull(ConqueryConfig.getInstance().getAuthorization().getInitialUsers().get(0).getUser(), \"There must be at least one initial user configured.\");\n \n-\t// Not allowed to be empty to take the first user as default\n-\tprivate final User defaultUser = Objects.requireNonNull(ConqueryConfig.getInstance()\n-\t\t.getAuthorization().getInitialUsers().get(0).getUser(), \"There must be at least one initial user configured.\");\n+ /**\n+  * The warning that is displayed, when the realm is instantiated.\n+  */\n+ private static final String WARNING = \"\\n\"+\"           \u00a7\u00a7\\n\"+\"          \u00a7  \u00a7\\n\"+\"         \u00a7    \u00a7\\n\"+\"        \u00a7      \u00a7\\n\"+\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"+\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"+\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"+\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"+\"   $                \u00a7\\n\"+\"  \u00a7        \u00a7\u00a7        \u00a7\\n\"+\" \u00a7                    \u00a7\\n\"+\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\"\n-\t\t+ \"           \u00a7\u00a7\\n\"\n-\t\t+ \"          \u00a7  \u00a7\\n\"\n-\t\t+ \"         \u00a7    \u00a7\\n\"\n-\t\t+ \"        \u00a7      \u00a7\\n\"\n-\t\t+ \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n-\t\t+ \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n-\t\t+ \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n-\t\t+ \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n-\t\t+ \"   $                \u00a7\\n\"\n-\t\t+ \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n-\t\t+ \" \u00a7                    \u00a7\\n\"\n-\t\t+ \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+ /**\n+  * Standard constructor.\n+  */\n \n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic DefaultInitialUserRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(DevelopmentToken.class);\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t}\n+ public DefaultInitialUserRealm() {\n+  log.warn(WARNING);\n+  this.setAuthenticationTokenClass(DevelopmentToken.class);\n+  this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+ }\n \n-\t@Override\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif (!(token instanceof DevelopmentToken)) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tDevelopmentToken devToken = (DevelopmentToken) token;\n-\t\treturn new ConqueryAuthenticationInfo(devToken.getPrincipal(), devToken.getCredentials(), this);\n-\t}\n+ @Override\n+ protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+  if (!(token instanceof DevelopmentToken)) {\n+   return null;\n+  }\n \n-\t/**\n-\t * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n-\t */\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext requestContext) {\n-\t\t// Check if the developer passed a UserId under whose the Request should be\n-\t\t// executed\n+  DevelopmentToken devToken = (DevelopmentToken)token;\n+  return new ConqueryAuthenticationInfo(devToken.getPrincipal(), devToken.getCredentials(), this);\n+ }\n \n-\t\t// Check the Authorization header for a String which can be parsed as a UserId\n-\t\tString uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n+ /**\n+  * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n+  */\n \n-\t\tif (uid == null) {\n-\t\t\t// Check also the query parameter \"access_token\" for a UserId\n-\t\t\tuid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n-\t\t}\n+ @Override\n+ public AuthenticationToken extractToken(ContainerRequestContext requestContext) {\n+  // Check if the developer passed a UserId under whose the Request should be\n+  // executed\n \n-\t\tUserId userId = null;\n+  // Check the Authorization header for a String which can be parsed as a UserId\n+  String uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n+  if (uid == null) {\n+   // Check also the query parameter \"access_token\" for a UserId\n+   uid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n+  }\n \n-\t\tif (uid != null) {\n-\t\t\tuserId = UserId.Parser.INSTANCE.parse(uid);\n-\t\t}\n-\t\telse {\n-\t\t\t// If nothing was found execute the request as the default user\n-\t\t\tuserId = defaultUser.getId();\n-\t\t}\n-\t\treturn new DevelopmentToken(userId, uid);\n-\t}\n-}\n+  UserId userId = null;\n+  if(uid != null) {\n+   userId = UserId.Parser.INSTANCE.parse(uid);\n+  }\n+  else {\n+   // If nothing was found execute the request as the default user\n+   userId = defaultUser.getId();\n+  }\n+  return new DevelopmentToken(userId, uid);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 74
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/245/DefaultInitialUserRealm.java\nindex bf98c86f549..fc8a40200f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/245/DefaultInitialUserRealm.java\n@@ -15,7 +15,6 @@ import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationToken;\n-\n /**\n  * This realm authenticates requests as if they are effected by the first\n  * initial user, that is found in the {@link AuthorizationConfig}, when no\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/245/DefaultInitialUserRealm.java\nindex bf98c86f549..d43ea8fc06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/245/DefaultInitialUserRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/245/DefaultInitialUserRealm.java\n@@ -15,7 +15,6 @@ import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationToken;\n-\n /**\n  * This realm authenticates requests as if they are effected by the first\n  * initial user, that is found in the {@link AuthorizationConfig}, when no\n@@ -24,6 +23,8 @@ import org.apache.shiro.authc.AuthenticationToken;\n  * {@link AuthenticationToken}.\n  * \n  */\n+\n+\n @Slf4j\n public class DefaultInitialUserRealm extends ConqueryAuthenticationRealm {\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
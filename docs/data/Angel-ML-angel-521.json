{
    "project_name": "Angel-ML-angel",
    "error_id": "521",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/521/InitWalkPath.java\nindex 1b264fd4527..e048e2da48a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/521/InitWalkPath.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.initwalkpath;\n \n import com.tencent.angel.PartitionKey;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/521/InitWalkPath.java\nindex 1b264fd4527..b86c4eb7fb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/521/InitWalkPath.java\n@@ -49,8 +49,7 @@ public class InitWalkPath extends UpdateFunc {\n     PartitionKey partKey = pparam.getPartKey();\n     ServerLongAnyRow walkPath = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n         .getRow(partKey, 0);\n-    ServerLongAnyRow rowNeighbor = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(\n-        pparam.getNeighborMatrixId(), 0, partKey.getPartitionId());\n+    ServerLongAnyRow rowNeighbor = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(pparam.getNeighborMatrixId(), 0, partKey.getPartitionId());\n     Random rand = new Random();\n \n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = rowNeighbor.iterator();\n@@ -69,8 +68,7 @@ public class InitWalkPath extends UpdateFunc {\n         Long2ObjectMap.Entry<IElement> entry = iter.next();\n         long key = entry.getLongKey() + partKey.getStartCol();\n         LongArrayElement value = (LongArrayElement) entry.getValue();\n-\n-        long[] neighbor = value.getData();\n+long[] neighbor = value.getData();\n         long neigh = neighbor[rand.nextInt(neighbor.length)];\n \n         WalkPath wPath = new WalkPath(pparam.getWalkLength(), key, neigh);\n@@ -92,4 +90,4 @@ public class InitWalkPath extends UpdateFunc {\n       walkPath.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/521/InitWalkPath.java\nindex 1b264fd4527..c6b88d690d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/521/InitWalkPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/521/InitWalkPath.java\n@@ -35,6 +35,7 @@ public class InitWalkPath extends UpdateFunc {\n   /**\n    * Create a new UpdateParam\n    */\n+\n   public InitWalkPath(UpdateParam param) {\n     super(param);\n   }\n@@ -47,12 +48,9 @@ public class InitWalkPath extends UpdateFunc {\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     InitWalkPathPartitionParam pparam = (InitWalkPathPartitionParam) partParam;\n     PartitionKey partKey = pparam.getPartKey();\n-    ServerLongAnyRow walkPath = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(partKey, 0);\n-    ServerLongAnyRow rowNeighbor = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(\n-        pparam.getNeighborMatrixId(), 0, partKey.getPartitionId());\n+    ServerLongAnyRow walkPath = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partKey, 0);\n+    ServerLongAnyRow rowNeighbor = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(pparam.getNeighborMatrixId(), 0, partKey.getPartitionId());\n     Random rand = new Random();\n-\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = rowNeighbor.iterator();\n     walkPath.startWrite();\n     walkPath.clear();\n@@ -69,13 +67,10 @@ public class InitWalkPath extends UpdateFunc {\n         Long2ObjectMap.Entry<IElement> entry = iter.next();\n         long key = entry.getLongKey() + partKey.getStartCol();\n         LongArrayElement value = (LongArrayElement) entry.getValue();\n-\n         long[] neighbor = value.getData();\n         long neigh = neighbor[rand.nextInt(neighbor.length)];\n-\n         WalkPath wPath = new WalkPath(pparam.getWalkLength(), key, neigh);\n         walkPath.set(key, wPath);\n-\n         batchPath.add(wPath);\n         count++;\n         if (count % batchSize == 0) {\n@@ -92,4 +87,5 @@ public class InitWalkPath extends UpdateFunc {\n       walkPath.endWrite();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
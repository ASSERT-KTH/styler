{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4509",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4509/PropertyEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4509/PropertyEntry.java\nindex dedd6ff363f..3c8eda223c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4509/PropertyEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4509/PropertyEntry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.event;\n \n import org.neo4j.graphdb.Node;\n@@ -25,7 +26,7 @@ import org.neo4j.graphdb.Relationship;\n \n /**\n  * Represents a changed property.\n- *\n+ * <p>\n  * Instances of this interface represent the property as it is after the\n  * transaction when returned from\n  * {@link TransactionData#assignedNodeProperties()} or\n@@ -38,57 +39,57 @@ import org.neo4j.graphdb.Relationship;\n  */\n public interface PropertyEntry<T extends PropertyContainer>\n {\n-    /**\n-     * Get the entity that this property was modified on. The entity is either a\n-     * {@link Node} or a {@link Relationship}, depending on the generic type of\n-     * this instance.\n-     *\n-     * @return the {@link Node} or {@link Relationship} that the property was\n-     *         modified on.\n-     */\n-    T entity();\n+  /**\n+   * Get the entity that this property was modified on. The entity is either a\n+   * {@link Node} or a {@link Relationship}, depending on the generic type of\n+   * this instance.\n+   *\n+   * @return the {@link Node} or {@link Relationship} that the property was\n+   * modified on.\n+   */\n+  T entity();\n \n-    /**\n-     * Get the key of the modified property.\n-     *\n-     * @return the key of the modified property.\n-     */\n-    String key();\n+  /**\n+   * Get the key of the modified property.\n+   *\n+   * @return the key of the modified property.\n+   */\n+  String key();\n \n-    /**\n-     * Get the value of the modified property as it was before the transaction\n-     * (which modified it) started. If this {@link PropertyEntry} was returned\n-     * from {@link TransactionData#assignedNodeProperties()} or\n-     * {@link TransactionData#assignedRelationshipProperties()}, the value\n-     * returned from this method is the value that was set for {@code key} on\n-     * {@code entity} before the transaction started, or {@code null} if such a\n-     * property wasn't set.\n-     *\n-     * If this {@link PropertyEntry} was returned from\n-     * {@link TransactionData#removedNodeProperties()} or\n-     * {@link TransactionData#removedRelationshipProperties()} the value\n-     * returned from this method is the value that was stored at this property\n-     * before the transaction started.\n-     *\n-     * @return The value of the property as it was before the transaction\n-     * started.\n-     */\n-    Object previouslyCommitedValue();\n+  /**\n+   * Get the value of the modified property as it was before the transaction\n+   * (which modified it) started. If this {@link PropertyEntry} was returned\n+   * from {@link TransactionData#assignedNodeProperties()} or\n+   * {@link TransactionData#assignedRelationshipProperties()}, the value\n+   * returned from this method is the value that was set for {@code key} on\n+   * {@code entity} before the transaction started, or {@code null} if such a\n+   * property wasn't set.\n+   * <p>\n+   * If this {@link PropertyEntry} was returned from\n+   * {@link TransactionData#removedNodeProperties()} or\n+   * {@link TransactionData#removedRelationshipProperties()} the value\n+   * returned from this method is the value that was stored at this property\n+   * before the transaction started.\n+   *\n+   * @return The value of the property as it was before the transaction\n+   * started.\n+   */\n+  Object previouslyCommitedValue();\n \n-    /**\n-     * Get the value of the modified property. If this {@link PropertyEntry}\n-     * was returned from {@link TransactionData#assignedNodeProperties()} or\n-     * {@link TransactionData#assignedRelationshipProperties()}, the value\n-     * returned from this method is the value that will be assigned to the\n-     * property after the transaction is committed. If this\n-     * {@link PropertyEntry} was returned from\n-     * {@link TransactionData#removedNodeProperties()} or\n-     * {@link TransactionData#removedRelationshipProperties()} an\n-     * {@link IllegalStateException} will be thrown.\n-     *\n-     * @return The value of the modified property.\n-     * @throws IllegalStateException if this method is called where this\n-     * instance represents a removed property.\n-     */\n-    Object value();\n+  /**\n+   * Get the value of the modified property. If this {@link PropertyEntry}\n+   * was returned from {@link TransactionData#assignedNodeProperties()} or\n+   * {@link TransactionData#assignedRelationshipProperties()}, the value\n+   * returned from this method is the value that will be assigned to the\n+   * property after the transaction is committed. If this\n+   * {@link PropertyEntry} was returned from\n+   * {@link TransactionData#removedNodeProperties()} or\n+   * {@link TransactionData#removedRelationshipProperties()} an\n+   * {@link IllegalStateException} will be thrown.\n+   *\n+   * @return The value of the modified property.\n+   * @throws IllegalStateException if this method is called where this\n+   *                               instance represents a removed property.\n+   */\n+  Object value();\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4509/PropertyEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4509/PropertyEntry.java\nindex dedd6ff363f..1eeac8eeb13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4509/PropertyEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4509/PropertyEntry.java\n@@ -91,4 +91,4 @@ public interface PropertyEntry<T extends PropertyContainer>\n      * instance represents a removed property.\n      */\n     Object value();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3725",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3725/DumpSegmentedRaftLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3725/DumpSegmentedRaftLog.java\nindex f7eee1b9920..e8a497f8b09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3725/DumpSegmentedRaftLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3725/DumpSegmentedRaftLog.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.File;\n@@ -38,133 +39,131 @@ import org.neo4j.time.Clocks;\n \n class DumpSegmentedRaftLog\n {\n-    private final FileSystemAbstraction fileSystem;\n-    private static final String TO_FILE = \"tofile\";\n-    private ChannelMarshal<ReplicatedContent> marshal = new CoreReplicatedContentMarshal();\n-\n-    private DumpSegmentedRaftLog( FileSystemAbstraction fileSystem, ChannelMarshal<ReplicatedContent> marshal )\n+  private final FileSystemAbstraction fileSystem;\n+  private static final String TO_FILE = \"tofile\";\n+  private ChannelMarshal<ReplicatedContent> marshal = new CoreReplicatedContentMarshal();\n+\n+  private DumpSegmentedRaftLog(FileSystemAbstraction fileSystem, ChannelMarshal<ReplicatedContent> marshal)\n+  {\n+    this.fileSystem = fileSystem;\n+    this.marshal = marshal;\n+  }\n+\n+  private int dump(String filenameOrDirectory, PrintStream out)\n+      throws IOException, DamagedLogStorageException, DisposedException\n+  {\n+    LogProvider logProvider = NullLogProvider.getInstance();\n+    final int[] logsFound = {0};\n+    FileNames fileNames = new FileNames(new File(filenameOrDirectory));\n+    ReaderPool readerPool = new ReaderPool(0, logProvider, fileNames, fileSystem, Clocks.systemClock());\n+    RecoveryProtocol recoveryProtocol =\n+        new RecoveryProtocol(fileSystem, fileNames, readerPool, marshal, logProvider);\n+    Segments segments = recoveryProtocol.run().segments;\n+\n+    segments.visit(segment -> {\n+      logsFound[0]++;\n+      out.println(\"=== \" + segment.getFilename() + \" ===\");\n+\n+      SegmentHeader header = segment.header();\n+\n+      out.println(header.toString());\n+\n+      try (IOCursor<EntryRecord> cursor = segment.getCursor(header.prevIndex() + 1))\n+      {\n+        while (cursor.next())\n+        {\n+          out.println(cursor.get().toString());\n+        }\n+      } catch (DisposedException | IOException e)\n+      {\n+        e.printStackTrace();\n+        System.exit(-1);\n+        return true;\n+      }\n+\n+      return false;\n+    });\n+\n+    return logsFound[0];\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    Args arguments = Args.withFlags(TO_FILE).parse(args);\n+    try (Printer printer = getPrinter(arguments))\n     {\n-        this.fileSystem = fileSystem;\n-        this.marshal = marshal;\n-    }\n+      for (String fileAsString : arguments.orphans())\n+      {\n+        System.out.println(\"Reading file \" + fileAsString);\n \n-    private int dump( String filenameOrDirectory, PrintStream out )\n-            throws IOException, DamagedLogStorageException, DisposedException\n-    {\n-        LogProvider logProvider = NullLogProvider.getInstance();\n-        final int[] logsFound = {0};\n-        FileNames fileNames = new FileNames( new File( filenameOrDirectory ) );\n-        ReaderPool readerPool = new ReaderPool( 0, logProvider, fileNames, fileSystem, Clocks.systemClock() );\n-        RecoveryProtocol recoveryProtocol =\n-                new RecoveryProtocol( fileSystem, fileNames, readerPool, marshal, logProvider );\n-        Segments segments = recoveryProtocol.run().segments;\n-\n-        segments.visit( segment -> {\n-                logsFound[0]++;\n-                out.println( \"=== \" + segment.getFilename() + \" ===\" );\n-\n-                SegmentHeader header = segment.header();\n-\n-                out.println( header.toString() );\n-\n-                try ( IOCursor<EntryRecord> cursor = segment.getCursor( header.prevIndex() + 1 ) )\n-                {\n-                    while ( cursor.next() )\n-                    {\n-                        out.println( cursor.get().toString() );\n-                    }\n-                }\n-                catch ( DisposedException | IOException e )\n-                {\n-                    e.printStackTrace();\n-                    System.exit( -1 );\n-                    return true;\n-                }\n-\n-            return false;\n-        } );\n-\n-        return logsFound[0];\n-    }\n-\n-    public static void main( String[] args )\n-    {\n-        Args arguments = Args.withFlags( TO_FILE ).parse( args );\n-        try ( Printer printer = getPrinter( arguments ) )\n+        try (DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction())\n+        {\n+          new DumpSegmentedRaftLog(fileSystem, new CoreReplicatedContentMarshal())\n+              .dump(fileAsString, printer.getFor(fileAsString));\n+        } catch (IOException | DisposedException | DamagedLogStorageException e)\n         {\n-            for ( String fileAsString : arguments.orphans() )\n-            {\n-                System.out.println( \"Reading file \" + fileAsString );\n-\n-                try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n-                {\n-                    new DumpSegmentedRaftLog( fileSystem, new CoreReplicatedContentMarshal() )\n-                            .dump( fileAsString, printer.getFor( fileAsString ) );\n-                }\n-                catch ( IOException | DisposedException | DamagedLogStorageException e )\n-                {\n-                    e.printStackTrace();\n-                }\n-            }\n+          e.printStackTrace();\n         }\n+      }\n     }\n-\n-    private static Printer getPrinter( Args args )\n+  }\n+\n+  private static Printer getPrinter(Args args)\n+  {\n+    boolean toFile = args.getBoolean(TO_FILE, false, true);\n+    return toFile ? new DumpSegmentedRaftLog.FilePrinter() : SYSTEM_OUT_PRINTER;\n+  }\n+\n+  interface Printer extends AutoCloseable\n+  {\n+    PrintStream getFor(String file) throws FileNotFoundException;\n+\n+    @Override\n+    void close();\n+  }\n+\n+  private static final Printer SYSTEM_OUT_PRINTER = new Printer()\n+  {\n+    @Override\n+    public PrintStream getFor(String file)\n     {\n-        boolean toFile = args.getBoolean( TO_FILE, false, true );\n-        return toFile ? new DumpSegmentedRaftLog.FilePrinter() : SYSTEM_OUT_PRINTER;\n+      return System.out;\n     }\n \n-    interface Printer extends AutoCloseable\n-    {\n-        PrintStream getFor( String file ) throws FileNotFoundException;\n-\n-        @Override\n-        void close();\n+    @Override\n+    public void close()\n+    {   // Don't close System.out\n     }\n+  };\n \n-    private static final Printer SYSTEM_OUT_PRINTER = new Printer()\n-    {\n-        @Override\n-        public PrintStream getFor( String file )\n-        {\n-            return System.out;\n-        }\n+  private static class FilePrinter implements Printer\n+  {\n+    private File directory;\n+    private PrintStream out;\n \n-        @Override\n-        public void close()\n-        {   // Don't close System.out\n-        }\n-    };\n-\n-    private static class FilePrinter implements Printer\n+    @Override\n+    public PrintStream getFor(String file) throws FileNotFoundException\n     {\n-        private File directory;\n-        private PrintStream out;\n-\n-        @Override\n-        public PrintStream getFor( String file ) throws FileNotFoundException\n-        {\n-            File absoluteFile = new File( file ).getAbsoluteFile();\n-            File dir = absoluteFile.isDirectory() ? absoluteFile : absoluteFile.getParentFile();\n-            if ( !dir.equals( directory ) )\n-            {\n-                close();\n-                File dumpFile = new File( dir, \"dump-logical-log.txt\" );\n-                System.out.println( \"Redirecting the output to \" + dumpFile.getPath() );\n-                out = new PrintStream( dumpFile );\n-                directory = dir;\n-            }\n-            return out;\n-        }\n+      File absoluteFile = new File(file).getAbsoluteFile();\n+      File dir = absoluteFile.isDirectory() ? absoluteFile : absoluteFile.getParentFile();\n+      if (!dir.equals(directory))\n+      {\n+        close();\n+        File dumpFile = new File(dir, \"dump-logical-log.txt\");\n+        System.out.println(\"Redirecting the output to \" + dumpFile.getPath());\n+        out = new PrintStream(dumpFile);\n+        directory = dir;\n+      }\n+      return out;\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-            if ( out != null )\n-            {\n-                out.close();\n-            }\n-        }\n+    @Override\n+    public void close()\n+    {\n+      if (out != null)\n+      {\n+        out.close();\n+      }\n     }\n+  }\n }\n",
            "diff_size": 184
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3725/DumpSegmentedRaftLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3725/DumpSegmentedRaftLog.java\nindex f7eee1b9920..2b022957789 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3725/DumpSegmentedRaftLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3725/DumpSegmentedRaftLog.java\n@@ -48,24 +48,20 @@ class DumpSegmentedRaftLog\n         this.marshal = marshal;\n     }\n \n-    private int dump( String filenameOrDirectory, PrintStream out )\n-            throws IOException, DamagedLogStorageException, DisposedException\n-    {\n+    private int dump( String filenameOrDirectory, PrintStream out ) throws IOException, DamagedLogStorageException, DisposedException\n+{\n         LogProvider logProvider = NullLogProvider.getInstance();\n         final int[] logsFound = {0};\n         FileNames fileNames = new FileNames( new File( filenameOrDirectory ) );\n         ReaderPool readerPool = new ReaderPool( 0, logProvider, fileNames, fileSystem, Clocks.systemClock() );\n-        RecoveryProtocol recoveryProtocol =\n-                new RecoveryProtocol( fileSystem, fileNames, readerPool, marshal, logProvider );\n-        Segments segments = recoveryProtocol.run().segments;\n+        RecoveryProtocol recoveryProtocol = new RecoveryProtocol( fileSystem, fileNames, readerPool, marshal, logProvider );\n+Segments segments = recoveryProtocol.run().segments;\n \n         segments.visit( segment -> {\n-                logsFound[0]++;\n+    logsFound[0]++;\n                 out.println( \"=== \" + segment.getFilename() + \" ===\" );\n-\n-                SegmentHeader header = segment.header();\n-\n-                out.println( header.toString() );\n+SegmentHeader header = segment.header();\n+out.println( header.toString() );\n \n                 try ( IOCursor<EntryRecord> cursor = segment.getCursor( header.prevIndex() + 1 ) )\n                 {\n@@ -81,10 +77,9 @@ class DumpSegmentedRaftLog\n                     return true;\n                 }\n \n-            return false;\n+return false;\n         } );\n-\n-        return logsFound[0];\n+return logsFound[0];\n     }\n \n     public static void main( String[] args )\n@@ -98,9 +93,8 @@ class DumpSegmentedRaftLog\n \n                 try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n                 {\n-                    new DumpSegmentedRaftLog( fileSystem, new CoreReplicatedContentMarshal() )\n-                            .dump( fileAsString, printer.getFor( fileAsString ) );\n-                }\n+                    new DumpSegmentedRaftLog( fileSystem, new CoreReplicatedContentMarshal() ).dump( fileAsString, printer.getFor( fileAsString ) );\n+    }\n                 catch ( IOException | DisposedException | DamagedLogStorageException e )\n                 {\n                     e.printStackTrace();\n@@ -133,7 +127,8 @@ class DumpSegmentedRaftLog\n \n         @Override\n         public void close()\n-        {   // Don't close System.out\n+        {\n+    // Don't close System.out\n         }\n     };\n \n@@ -155,7 +150,8 @@ class DumpSegmentedRaftLog\n                 out = new PrintStream( dumpFile );\n                 directory = dir;\n             }\n-            return out;\n+\n+return out;\n         }\n \n         @Override\n@@ -167,4 +163,4 @@ class DumpSegmentedRaftLog\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
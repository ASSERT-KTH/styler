{
    "project_name": "graphfoundation-ongdb",
    "error_id": "716",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/716/RaftReplicator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/716/RaftReplicator.java\nindex 7abeff6b6df..89314fc400a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/716/RaftReplicator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/716/RaftReplicator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication;\n \n import java.util.concurrent.Future;\n@@ -43,108 +44,104 @@ import org.neo4j.logging.LogProvider;\n  */\n public class RaftReplicator extends LifecycleAdapter implements Replicator, LeaderListener\n {\n-    private final MemberId me;\n-    private final Outbound<MemberId,RaftMessages.RaftMessage> outbound;\n-    private final ProgressTracker progressTracker;\n-    private final LocalSessionPool sessionPool;\n-    private final TimeoutStrategy progressTimeoutStrategy;\n-    private final AvailabilityGuard availabilityGuard;\n-    private final LeaderLocator leaderLocator;\n-    private final TimeoutStrategy leaderTimeoutStrategy;\n-    private final Log log;\n-    private final Throttler throttler;\n-\n-    public RaftReplicator( LeaderLocator leaderLocator, MemberId me, Outbound<MemberId,RaftMessages.RaftMessage> outbound, LocalSessionPool sessionPool,\n-            ProgressTracker progressTracker, TimeoutStrategy progressTimeoutStrategy, TimeoutStrategy leaderTimeoutStrategy,\n-            AvailabilityGuard availabilityGuard, LogProvider logProvider, long replicationLimit )\n-    {\n-        this.me = me;\n-        this.outbound = outbound;\n-        this.progressTracker = progressTracker;\n-        this.sessionPool = sessionPool;\n-        this.progressTimeoutStrategy = progressTimeoutStrategy;\n-        this.leaderTimeoutStrategy = leaderTimeoutStrategy;\n-        this.availabilityGuard = availabilityGuard;\n-        this.throttler = new Throttler( replicationLimit );\n-        this.leaderLocator = leaderLocator;\n-        leaderLocator.registerListener( this );\n-        log = logProvider.getLog( getClass() );\n-    }\n+  private final MemberId me;\n+  private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n+  private final ProgressTracker progressTracker;\n+  private final LocalSessionPool sessionPool;\n+  private final TimeoutStrategy progressTimeoutStrategy;\n+  private final AvailabilityGuard availabilityGuard;\n+  private final LeaderLocator leaderLocator;\n+  private final TimeoutStrategy leaderTimeoutStrategy;\n+  private final Log log;\n+  private final Throttler throttler;\n+\n+  public RaftReplicator(LeaderLocator leaderLocator, MemberId me, Outbound<MemberId, RaftMessages.RaftMessage> outbound, LocalSessionPool sessionPool,\n+                        ProgressTracker progressTracker, TimeoutStrategy progressTimeoutStrategy, TimeoutStrategy leaderTimeoutStrategy,\n+                        AvailabilityGuard availabilityGuard, LogProvider logProvider, long replicationLimit)\n+  {\n+    this.me = me;\n+    this.outbound = outbound;\n+    this.progressTracker = progressTracker;\n+    this.sessionPool = sessionPool;\n+    this.progressTimeoutStrategy = progressTimeoutStrategy;\n+    this.leaderTimeoutStrategy = leaderTimeoutStrategy;\n+    this.availabilityGuard = availabilityGuard;\n+    this.throttler = new Throttler(replicationLimit);\n+    this.leaderLocator = leaderLocator;\n+    leaderLocator.registerListener(this);\n+    log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public Future<Object> replicate( ReplicatedContent command, boolean trackResult ) throws InterruptedException\n+  @Override\n+  public Future<Object> replicate(ReplicatedContent command, boolean trackResult) throws InterruptedException\n+  {\n+    if (command.hasSize())\n     {\n-        if ( command.hasSize() )\n-        {\n-            return throttler.invoke( () -> replicate0( command, trackResult ), command.size() );\n-        }\n-        else\n-        {\n-            return replicate0( command, trackResult );\n-        }\n+      return throttler.invoke(() -> replicate0(command, trackResult), command.size());\n+    } else\n+    {\n+      return replicate0(command, trackResult);\n     }\n+  }\n+\n+  private Future<Object> replicate0(ReplicatedContent command, boolean trackResult) throws InterruptedException\n+  {\n+    OperationContext session = sessionPool.acquireSession();\n+\n+    DistributedOperation operation = new DistributedOperation(command, session.globalSession(), session.localOperationId());\n+    Progress progress = progressTracker.start(operation);\n \n-    private Future<Object> replicate0( ReplicatedContent command, boolean trackResult ) throws InterruptedException\n+    TimeoutStrategy.Timeout progressTimeout = progressTimeoutStrategy.newTimeout();\n+    TimeoutStrategy.Timeout leaderTimeout = leaderTimeoutStrategy.newTimeout();\n+    do\n     {\n-        OperationContext session = sessionPool.acquireSession();\n-\n-        DistributedOperation operation = new DistributedOperation( command, session.globalSession(), session.localOperationId() );\n-        Progress progress = progressTracker.start( operation );\n-\n-        TimeoutStrategy.Timeout progressTimeout = progressTimeoutStrategy.newTimeout();\n-        TimeoutStrategy.Timeout leaderTimeout = leaderTimeoutStrategy.newTimeout();\n-        do\n-        {\n-            assertDatabaseNotShutdown();\n-            try\n-            {\n-                // blocking at least until the send has succeeded or failed before retrying\n-                outbound.send( leaderLocator.getLeader(), new RaftMessages.NewEntry.Request( me, operation ), true );\n-\n-                leaderTimeout = leaderTimeoutStrategy.newTimeout();\n-\n-                progress.awaitReplication( progressTimeout.getMillis() );\n-                progressTimeout.increment();\n-            }\n-            catch ( InterruptedException e )\n-            {\n-                progressTracker.abort( operation );\n-                throw e;\n-            }\n-            catch ( NoLeaderFoundException e )\n-            {\n-                log.debug( \"Could not replicate operation \" + operation + \" because no leader was found. Retrying.\", e );\n-                Thread.sleep( leaderTimeout.getMillis() );\n-                leaderTimeout.increment();\n-            }\n-        }\n-        while ( !progress.isReplicated() );\n-\n-        BiConsumer<Object,Throwable> cleanup = ( ignored1, ignored2 ) -> sessionPool.releaseSession( session );\n-\n-        if ( trackResult )\n-        {\n-            progress.futureResult().whenComplete( cleanup );\n-        }\n-        else\n-        {\n-            cleanup.accept( null, null );\n-        }\n-\n-        return progress.futureResult();\n+      assertDatabaseNotShutdown();\n+      try\n+      {\n+        // blocking at least until the send has succeeded or failed before retrying\n+        outbound.send(leaderLocator.getLeader(), new RaftMessages.NewEntry.Request(me, operation), true);\n+\n+        leaderTimeout = leaderTimeoutStrategy.newTimeout();\n+\n+        progress.awaitReplication(progressTimeout.getMillis());\n+        progressTimeout.increment();\n+      } catch (InterruptedException e)\n+      {\n+        progressTracker.abort(operation);\n+        throw e;\n+      } catch (NoLeaderFoundException e)\n+      {\n+        log.debug(\"Could not replicate operation \" + operation + \" because no leader was found. Retrying.\", e);\n+        Thread.sleep(leaderTimeout.getMillis());\n+        leaderTimeout.increment();\n+      }\n     }\n+    while (!progress.isReplicated());\n+\n+    BiConsumer<Object, Throwable> cleanup = (ignored1, ignored2) -> sessionPool.releaseSession(session);\n \n-    @Override\n-    public void onLeaderSwitch( LeaderInfo leaderInfo )\n+    if (trackResult)\n     {\n-        progressTracker.triggerReplicationEvent();\n+      progress.futureResult().whenComplete(cleanup);\n+    } else\n+    {\n+      cleanup.accept(null, null);\n     }\n \n-    private void assertDatabaseNotShutdown()\n+    return progress.futureResult();\n+  }\n+\n+  @Override\n+  public void onLeaderSwitch(LeaderInfo leaderInfo)\n+  {\n+    progressTracker.triggerReplicationEvent();\n+  }\n+\n+  private void assertDatabaseNotShutdown()\n+  {\n+    if (availabilityGuard.isShutdown())\n     {\n-        if ( availabilityGuard.isShutdown() )\n-        {\n-            throw new DatabaseShutdownException( \"Database has been shutdown, transaction cannot be replicated.\" );\n-        }\n+      throw new DatabaseShutdownException(\"Database has been shutdown, transaction cannot be replicated.\");\n     }\n+  }\n }\n",
            "diff_size": 123
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/716/RaftReplicator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/716/RaftReplicator.java\nindex 7abeff6b6df..5d6d7689b4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/716/RaftReplicator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/716/RaftReplicator.java\n@@ -87,11 +87,9 @@ public class RaftReplicator extends LifecycleAdapter implements Replicator, Lead\n     private Future<Object> replicate0( ReplicatedContent command, boolean trackResult ) throws InterruptedException\n     {\n         OperationContext session = sessionPool.acquireSession();\n-\n-        DistributedOperation operation = new DistributedOperation( command, session.globalSession(), session.localOperationId() );\n+DistributedOperation operation = new DistributedOperation( command, session.globalSession(), session.localOperationId() );\n         Progress progress = progressTracker.start( operation );\n-\n-        TimeoutStrategy.Timeout progressTimeout = progressTimeoutStrategy.newTimeout();\n+TimeoutStrategy.Timeout progressTimeout = progressTimeoutStrategy.newTimeout();\n         TimeoutStrategy.Timeout leaderTimeout = leaderTimeoutStrategy.newTimeout();\n         do\n         {\n@@ -100,10 +98,8 @@ public class RaftReplicator extends LifecycleAdapter implements Replicator, Lead\n             {\n                 // blocking at least until the send has succeeded or failed before retrying\n                 outbound.send( leaderLocator.getLeader(), new RaftMessages.NewEntry.Request( me, operation ), true );\n-\n-                leaderTimeout = leaderTimeoutStrategy.newTimeout();\n-\n-                progress.awaitReplication( progressTimeout.getMillis() );\n+leaderTimeout = leaderTimeoutStrategy.newTimeout();\n+progress.awaitReplication( progressTimeout.getMillis() );\n                 progressTimeout.increment();\n             }\n             catch ( InterruptedException e )\n@@ -121,8 +117,7 @@ public class RaftReplicator extends LifecycleAdapter implements Replicator, Lead\n         while ( !progress.isReplicated() );\n \n         BiConsumer<Object,Throwable> cleanup = ( ignored1, ignored2 ) -> sessionPool.releaseSession( session );\n-\n-        if ( trackResult )\n+if ( trackResult )\n         {\n             progress.futureResult().whenComplete( cleanup );\n         }\n@@ -147,4 +142,4 @@ public class RaftReplicator extends LifecycleAdapter implements Replicator, Lead\n             throw new DatabaseShutdownException( \"Database has been shutdown, transaction cannot be replicated.\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
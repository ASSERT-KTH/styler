{
    "project_name": "Angel-ML-angel",
    "error_id": "1048",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1048/Loss.java\nindex 532910ef211..3e3d6190ba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1048/Loss.java\n@@ -13,13 +13,13 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.objective;\n \n import com.tencent.angel.ml.algorithm.utils.MathUtils;\n \n /**\n  * Description: implementation of popular loss function\n- *\n  */\n \n public class Loss {\n@@ -29,7 +29,8 @@ public class Loss {\n    */\n   public static class LinearSquareLoss implements LossHelper {\n \n-    public LinearSquareLoss() {}\n+    public LinearSquareLoss() {\n+    }\n \n     @Override\n     public float predTransform(float x) {\n@@ -73,7 +74,8 @@ public class Loss {\n    */\n   public static class LogisticRegression implements LossHelper {\n \n-    public LogisticRegression() {}\n+    public LogisticRegression() {\n+    }\n \n     @Override\n     public float predTransform(float x) {\n@@ -116,7 +118,8 @@ public class Loss {\n   // logistic loss for binary classification task.\n   public static class LogisticClassification extends LogisticRegression {\n \n-    public LogisticClassification() {}\n+    public LogisticClassification() {\n+    }\n \n     @Override\n     public String defaultEvalMetric() {\n@@ -127,7 +130,8 @@ public class Loss {\n   // logistic loss, but predict un-transformed margin\n   public static class LogisticRaw extends LogisticRegression {\n \n-    public LogisticRaw() {}\n+    public LogisticRaw() {\n+    }\n \n     @Override\n     public float predTransform(float x) {\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1048/Loss.java\nindex 532910ef211..7bbc907aa86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1048/Loss.java\n@@ -153,4 +153,4 @@ public class Loss {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1048/Loss.java\nindex 532910ef211..dacab145703 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1048/Loss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1048/Loss.java\n@@ -27,6 +27,7 @@ public class Loss {\n   /**\n    * Linear square loss loss. (y, y') = 1/2(y'-y)^2, grad = y'-y\n    */\n+\n   public static class LinearSquareLoss implements LossHelper {\n \n     public LinearSquareLoss() {}\n@@ -71,6 +72,7 @@ public class Loss {\n    * logistic loss for probability regression task. loss(y,y')=y*log(1+e^-y')+(1-y)*log(1+e^y'),\n    * grad = y'-y, 2nd-grad = y'*(1-y')\n    */\n+\n   public static class LogisticRegression implements LossHelper {\n \n     public LogisticRegression() {}\n@@ -114,6 +116,7 @@ public class Loss {\n   }\n \n   // logistic loss for binary classification task.\n+\n   public static class LogisticClassification extends LogisticRegression {\n \n     public LogisticClassification() {}\n@@ -125,6 +128,7 @@ public class Loss {\n   }\n \n   // logistic loss, but predict un-transformed margin\n+\n   public static class LogisticRaw extends LogisticRegression {\n \n     public LogisticRaw() {}\n@@ -151,6 +155,7 @@ public class Loss {\n     public String defaultEvalMetric() {\n       return \"auc\";\n     }\n+\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
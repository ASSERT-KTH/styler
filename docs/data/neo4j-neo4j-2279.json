{
    "project_name": "neo4j-neo4j",
    "error_id": "2279",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2279/JmxDump.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2279/JmxDump.java\nindex 79d41a168ab..0fd1589e02c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2279/JmxDump.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2279/JmxDump.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.diagnostics.jmx;\n \n import com.sun.management.HotSpotDiagnosticMXBean;\n@@ -58,20 +59,20 @@ public class JmxDump\n     private final MBeanServerConnection mBeanServer;\n     private Properties systemProperties;\n \n-    private JmxDump( MBeanServerConnection mBeanServer )\n+    private JmxDump(MBeanServerConnection mBeanServer)\n     {\n         this.mBeanServer = mBeanServer;\n     }\n \n-    public static JmxDump connectTo( String jmxAddress ) throws IOException\n+    public static JmxDump connectTo(String jmxAddress) throws IOException\n     {\n-        JMXServiceURL url = new JMXServiceURL( jmxAddress );\n-        JMXConnector connect = JMXConnectorFactory.connect( url );\n+        JMXServiceURL url = new JMXServiceURL(jmxAddress);\n+        JMXConnector connect = JMXConnectorFactory.connect(url);\n \n-        return new JmxDump( connect.getMBeanServerConnection() );\n+        return new JmxDump(connect.getMBeanServerConnection());\n     }\n \n-    public void attachSystemProperties( Properties systemProperties )\n+    public void attachSystemProperties(Properties systemProperties)\n     {\n         this.systemProperties = systemProperties;\n     }\n@@ -83,24 +84,23 @@ public class JmxDump\n      */\n     public DiagnosticsReportSource threadDump()\n     {\n-        return DiagnosticsReportSources.newDiagnosticsString( \"threaddump.txt\", () ->\n+        return DiagnosticsReportSources.newDiagnosticsString(\"threaddump.txt\", () ->\n         {\n             String result;\n             try\n             {\n                 // Try to invoke real thread dump\n                 result = (String) mBeanServer\n-                        .invoke( new ObjectName( \"com.sun.management:type=DiagnosticCommand\" ), \"threadPrint\",\n-                                new Object[]{null}, new String[]{String[].class.getName()} );\n-            }\n-            catch ( InstanceNotFoundException | ReflectionException | MBeanException | MalformedObjectNameException | IOException exception )\n+                  .invoke(new ObjectName(\"com.sun.management:type=DiagnosticCommand\"), \"threadPrint\",\n+                    new Object[] {null}, new String[] {String[].class.getName()});\n+            } catch (InstanceNotFoundException | ReflectionException | MBeanException | MalformedObjectNameException | IOException exception)\n             {\n                 // Failed, do a poor mans attempt\n                 result = getMXThreadDump();\n             }\n \n             return result;\n-        } );\n+        });\n     }\n \n     /**\n@@ -114,14 +114,13 @@ public class JmxDump\n         ThreadMXBean threadMxBean;\n         try\n         {\n-            threadMxBean = ManagementFactory.getPlatformMXBean( mBeanServer, ThreadMXBean.class );\n-        }\n-        catch ( IOException e )\n+            threadMxBean = ManagementFactory.getPlatformMXBean(mBeanServer, ThreadMXBean.class);\n+        } catch (IOException e)\n         {\n             return \"ERROR: Unable to produce any thread dump\";\n         }\n \n-        return DumpUtils.threadDump( threadMxBean, systemProperties );\n+        return DumpUtils.threadDump(threadMxBean, systemProperties);\n     }\n \n     public DiagnosticsReportSource heapDump()\n@@ -137,15 +136,15 @@ public class JmxDump\n             @Override\n             public InputStream newInputStream() throws IOException\n             {\n-                final Path heapdumpFile = createTempFile( \"neo4j-heapdump\", \".hprof\" ).toAbsolutePath();\n-                heapDump( heapdumpFile.toString() );\n-                return new FileInputStream( heapdumpFile.toFile() )\n+                final Path heapdumpFile = createTempFile(\"neo4j-heapdump\", \".hprof\").toAbsolutePath();\n+                heapDump(heapdumpFile.toString());\n+                return new FileInputStream(heapdumpFile.toFile())\n                 {\n                     @Override\n                     public void close() throws IOException\n                     {\n                         super.close();\n-                        deleteIfExists( heapdumpFile );\n+                        deleteIfExists(heapdumpFile);\n                     }\n                 };\n             }\n@@ -155,15 +154,14 @@ public class JmxDump\n             {\n                 try\n                 {\n-                    final MemoryMXBean bean = ManagementFactory.getPlatformMXBean( mBeanServer, MemoryMXBean.class );\n+                    final MemoryMXBean bean = ManagementFactory.getPlatformMXBean(mBeanServer, MemoryMXBean.class);\n                     final long totalMemory = bean.getHeapMemoryUsage().getCommitted() + bean.getNonHeapMemoryUsage().getCommitted();\n \n                     // We first write raw to disk then write to archive, 5x compression is a reasonable worst case estimation\n                     return (long) (totalMemory * 1.2);\n-                }\n-                catch ( IOException e )\n+                } catch (IOException e)\n                 {\n-                    throw new UncheckedIOException( e );\n+                    throw new UncheckedIOException(e);\n                 }\n             }\n         };\n@@ -172,11 +170,11 @@ public class JmxDump\n     /**\n      * @param destination file path to send heap dump to, has to end with \".hprof\"\n      */\n-    private void heapDump( String destination ) throws IOException\n+    private void heapDump(String destination) throws IOException\n     {\n         HotSpotDiagnosticMXBean hotSpotDiagnosticMXBean =\n-                ManagementFactory.getPlatformMXBean( mBeanServer, HotSpotDiagnosticMXBean.class );\n-        hotSpotDiagnosticMXBean.dumpHeap( destination, false );\n+          ManagementFactory.getPlatformMXBean(mBeanServer, HotSpotDiagnosticMXBean.class);\n+        hotSpotDiagnosticMXBean.dumpHeap(destination, false);\n     }\n \n     public DiagnosticsReportSource systemProperties()\n@@ -193,8 +191,8 @@ public class JmxDump\n             public InputStream newInputStream()\n             {\n                 final ByteArrayOutputStream out = new ByteArrayOutputStream();\n-                systemProperties.list( new PrintStream( out, true ) );\n-                return new ByteArrayInputStream( out.toByteArray() );\n+                systemProperties.list(new PrintStream(out, true));\n+                return new ByteArrayInputStream(out.toByteArray());\n             }\n \n             @Override\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
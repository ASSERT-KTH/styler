{
    "project_name": "graphfoundation-ongdb",
    "error_id": "652",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/652/RaftOutbound.java\nindex 7d85b5969db..d6aa5bba2d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/652/RaftOutbound.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.messaging;\n \n import java.util.Optional;\n@@ -36,40 +37,39 @@ import org.neo4j.time.Clocks;\n \n public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n {\n-    private final CoreTopologyService coreTopologyService;\n-    private final Outbound<AdvertisedSocketAddress,Message> outbound;\n-    private final Supplier<Optional<ClusterId>> clusterIdentity;\n-    private final UnknownAddressMonitor unknownAddressMonitor;\n-    private final Log log;\n+  private final CoreTopologyService coreTopologyService;\n+  private final Outbound<AdvertisedSocketAddress, Message> outbound;\n+  private final Supplier<Optional<ClusterId>> clusterIdentity;\n+  private final UnknownAddressMonitor unknownAddressMonitor;\n+  private final Log log;\n+\n+  public RaftOutbound(CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress, Message> outbound,\n+                      Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis)\n+  {\n+    this.coreTopologyService = coreTopologyService;\n+    this.outbound = outbound;\n+    this.clusterIdentity = clusterIdentity;\n+    this.log = logProvider.getLog(getClass());\n+    this.unknownAddressMonitor = new UnknownAddressMonitor(log, Clocks.systemClock(), logThresholdMillis);\n+  }\n \n-    public RaftOutbound( CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress,Message> outbound,\n-                         Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis )\n+  @Override\n+  public void send(MemberId to, RaftMessage message, boolean block)\n+  {\n+    Optional<ClusterId> clusterId = clusterIdentity.get();\n+    if (!clusterId.isPresent())\n     {\n-        this.coreTopologyService = coreTopologyService;\n-        this.outbound = outbound;\n-        this.clusterIdentity = clusterIdentity;\n-        this.log = logProvider.getLog( getClass() );\n-        this.unknownAddressMonitor = new UnknownAddressMonitor( log, Clocks.systemClock(), logThresholdMillis );\n+      log.warn(\"Attempting to send a message before bound to a cluster\");\n+      return;\n     }\n \n-    @Override\n-    public void send( MemberId to, RaftMessage message, boolean block )\n+    Optional<CoreServerInfo> coreServerInfo = coreTopologyService.localCoreServers().find(to);\n+    if (coreServerInfo.isPresent())\n     {\n-        Optional<ClusterId> clusterId = clusterIdentity.get();\n-        if ( !clusterId.isPresent() )\n-        {\n-            log.warn( \"Attempting to send a message before bound to a cluster\" );\n-            return;\n-        }\n-\n-        Optional<CoreServerInfo> coreServerInfo = coreTopologyService.localCoreServers().find( to );\n-        if ( coreServerInfo.isPresent() )\n-        {\n-            outbound.send( coreServerInfo.get().getRaftServer(), RaftMessages.ClusterIdAwareMessage.of( clusterId.get(), message ), block );\n-        }\n-        else\n-        {\n-            unknownAddressMonitor.logAttemptToSendToMemberWithNoKnownAddress( to );\n-        }\n+      outbound.send(coreServerInfo.get().getRaftServer(), RaftMessages.ClusterIdAwareMessage.of(clusterId.get(), message), block);\n+    } else\n+    {\n+      unknownAddressMonitor.logAttemptToSendToMemberWithNoKnownAddress(to);\n     }\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/652/RaftOutbound.java\nindex 7d85b5969db..2ecc5023346 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/652/RaftOutbound.java\n@@ -42,9 +42,8 @@ public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n     private final UnknownAddressMonitor unknownAddressMonitor;\n     private final Log log;\n \n-    public RaftOutbound( CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress,Message> outbound,\n-                         Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis )\n-    {\n+    public RaftOutbound( CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress,Message> outbound, Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis )\n+{\n         this.coreTopologyService = coreTopologyService;\n         this.outbound = outbound;\n         this.clusterIdentity = clusterIdentity;\n@@ -72,4 +71,4 @@ public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n             unknownAddressMonitor.logAttemptToSendToMemberWithNoKnownAddress( to );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/652/RaftOutbound.java\nindex 7d85b5969db..19f706f49b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/652/RaftOutbound.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/652/RaftOutbound.java\n@@ -21,7 +21,6 @@ package org.neo4j.causalclustering.messaging;\n \n import java.util.Optional;\n import java.util.function.Supplier;\n-\n import org.neo4j.causalclustering.core.consensus.RaftMessages;\n import org.neo4j.causalclustering.core.consensus.RaftMessages.RaftMessage;\n import org.neo4j.causalclustering.discovery.CoreServerInfo;\n@@ -34,7 +33,7 @@ import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n import org.neo4j.time.Clocks;\n \n-public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n+public class RaftOutbound implements Outbound<MemberId,RaftMessage>\n {\n     private final CoreTopologyService coreTopologyService;\n     private final Outbound<AdvertisedSocketAddress,Message> outbound;\n@@ -42,8 +41,7 @@ public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n     private final UnknownAddressMonitor unknownAddressMonitor;\n     private final Log log;\n \n-    public RaftOutbound( CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress,Message> outbound,\n-                         Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis )\n+    public RaftOutbound( CoreTopologyService coreTopologyService, Outbound<AdvertisedSocketAddress,Message> outbound, Supplier<Optional<ClusterId>> clusterIdentity, LogProvider logProvider, long logThresholdMillis )\n     {\n         this.coreTopologyService = coreTopologyService;\n         this.outbound = outbound;\n@@ -56,7 +54,7 @@ public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n     public void send( MemberId to, RaftMessage message, boolean block )\n     {\n         Optional<ClusterId> clusterId = clusterIdentity.get();\n-        if ( !clusterId.isPresent() )\n+        if ( ! clusterId.isPresent() )\n         {\n             log.warn( \"Attempting to send a message before bound to a cluster\" );\n             return;\n@@ -72,4 +70,4 @@ public class RaftOutbound implements Outbound<MemberId, RaftMessage>\n             unknownAddressMonitor.logAttemptToSendToMemberWithNoKnownAddress( to );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-iotdb",
    "error_id": "64",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.cli;\n\nimport org.apache.iotdb.exception.ArgsErrorException;\nimport org.apache.iotdb.jdbc.Config;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/64/WinCli.java\nindex 1ef3cd97334..715ada74ab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/64/WinCli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/64/WinCli.java\nindex 1ef3cd97334..7dec26bc254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/64/WinCli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n@@ -39,7 +40,9 @@ import java.util.Scanner;\n import static org.apache.iotdb.cli.utils.IoTPrinter.print;\n import static org.apache.iotdb.cli.utils.IoTPrinter.println;\n \n-/** args[]: -h 127.0.0.1 -p 6667 -u root -pw root */\n+/**\n+ * args[]: -h 127.0.0.1 -p 6667 -u root -pw root\n+ */\n public class WinCli extends AbstractCli {\n \n   private static CommandLine commandLine;\n@@ -129,9 +132,9 @@ public class WinCli extends AbstractCli {\n       }\n       if (hasExecuteSQL) {\n         try (IoTDBConnection connection =\n-            (IoTDBConnection)\n-                DriverManager.getConnection(\n-                    Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+                 (IoTDBConnection)\n+                     DriverManager.getConnection(\n+                         Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n           properties = connection.getServerProperties();\n           AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n           processCommand(execute, connection);\n@@ -151,9 +154,9 @@ public class WinCli extends AbstractCli {\n \n   private static void receiveCommands(Scanner scanner) throws TException {\n     try (IoTDBConnection connection =\n-        (IoTDBConnection)\n-            DriverManager.getConnection(\n-                Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+             (IoTDBConnection)\n+                 DriverManager.getConnection(\n+                     Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n       properties = connection.getServerProperties();\n       AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n       timestampPrecision = properties.getTimestampPrecision();\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'Options' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/64/WinCli.java\nindex 1ef3cd97334..a200a1c41ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/64/WinCli.java\n@@ -22,7 +22,6 @@ import org.apache.iotdb.exception.ArgsErrorException;\n import org.apache.iotdb.jdbc.Config;\n import org.apache.iotdb.jdbc.IoTDBConnection;\n import org.apache.iotdb.rpc.RpcUtils;\n-\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n import org.apache.commons.cli.DefaultParser;\n@@ -30,7 +29,6 @@ import org.apache.commons.cli.HelpFormatter;\n import org.apache.commons.cli.Options;\n import org.apache.commons.cli.ParseException;\n import org.apache.thrift.TException;\n-\n import java.io.Console;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n@@ -40,6 +38,7 @@ import static org.apache.iotdb.cli.utils.IoTPrinter.print;\n import static org.apache.iotdb.cli.utils.IoTPrinter.println;\n \n /** args[]: -h 127.0.0.1 -p 6667 -u root -pw root */\n+\n public class WinCli extends AbstractCli {\n \n   private static CommandLine commandLine;\n@@ -55,13 +54,11 @@ public class WinCli extends AbstractCli {\n     HelpFormatter hf = new HelpFormatter();\n     hf.setWidth(MAX_HELP_CONSOLE_WIDTH);\n     commandLine = null;\n-\n     if (args == null || args.length == 0) {\n       println(\"Require more params input, please check the following hint.\");\n       hf.printHelp(IOTDB_CLI_PREFIX, options, true);\n       return;\n     }\n-\n     init();\n     String[] newArgs = removePasswordArgs(args);\n     String[] newArgs2 = processExecuteArgs(newArgs);\n@@ -69,7 +66,6 @@ public class WinCli extends AbstractCli {\n     if (!continues) {\n       return;\n     }\n-\n     serve();\n   }\n \n@@ -84,7 +80,8 @@ public class WinCli extends AbstractCli {\n     }\n   }\n \n-  private static boolean parseCommandLine(Options options, String[] newArgs, HelpFormatter hf) {\n+  private static boolean parseCommandLine(\n+    Options options, String[] newArgs, HelpFormatter hf) {\n     try {\n       CommandLineParser parser = new DefaultParser();\n       commandLine = parser.parse(options, newArgs);\n@@ -101,9 +98,7 @@ public class WinCli extends AbstractCli {\n       if (commandLine.hasOption(MAX_PRINT_ROW_COUNT_ARGS)) {\n         maxPrintRowCount = Integer.parseInt(commandLine.getOptionValue(MAX_PRINT_ROW_COUNT_ARGS));\n         if (maxPrintRowCount <= 0) {\n-          println(\n-              IOTDB_CLI_PREFIX\n-                  + \"> error format of max print row count, it should be a number greater than 0\");\n+          println(IOTDB_CLI_PREFIX + \"> error format of max print row count, it should be a number greater than 0\");\n           return false;\n         }\n       }\n@@ -128,10 +123,9 @@ public class WinCli extends AbstractCli {\n         password = readPassword();\n       }\n       if (hasExecuteSQL) {\n-        try (IoTDBConnection connection =\n-            (IoTDBConnection)\n-                DriverManager.getConnection(\n-                    Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+        try (IoTDBConnection connection = (IoTDBConnection) DriverManager.getConnection(Config.IOTDB_URL_PREFIX + host\n+        + \":\"\n+        + port + \"/\", username, password)) {\n           properties = connection.getServerProperties();\n           AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n           processCommand(execute, connection);\n@@ -140,7 +134,6 @@ public class WinCli extends AbstractCli {\n           println(IOTDB_CLI_PREFIX + \"> can't execute sql because\" + e.getMessage());\n         }\n       }\n-\n       receiveCommands(scanner);\n     } catch (ArgsErrorException e) {\n       println(IOTDB_CLI_PREFIX + \"> input params error because\" + e.getMessage());\n@@ -150,14 +143,12 @@ public class WinCli extends AbstractCli {\n   }\n \n   private static void receiveCommands(Scanner scanner) throws TException {\n-    try (IoTDBConnection connection =\n-        (IoTDBConnection)\n-            DriverManager.getConnection(\n-                Config.IOTDB_URL_PREFIX + host + \":\" + port + \"/\", username, password)) {\n+    try (IoTDBConnection connection = (IoTDBConnection) DriverManager.getConnection(Config.IOTDB_URL_PREFIX + host\n+    + \":\"\n+    + port + \"/\", username, password)) {\n       properties = connection.getServerProperties();\n       AGGREGRATE_TIME_LIST.addAll(properties.getSupportedTimeAggregationOperations());\n       timestampPrecision = properties.getTimestampPrecision();\n-\n       echoStarting();\n       displayLogo(properties.getVersion());\n       println(IOTDB_CLI_PREFIX + \"> login successfully\");\n@@ -170,9 +161,7 @@ public class WinCli extends AbstractCli {\n         }\n       }\n     } catch (SQLException e) {\n-      println(\n-          String.format(\n-              \"%s> %s Host is %s, port is %s.\", IOTDB_CLI_PREFIX, e.getMessage(), host, port));\n+      println(String.format(\"%s> %s Host is %s, port is %s.\", IOTDB_CLI_PREFIX, e.getMessage(), host, port));\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/64/WinCli.java\nindex 1ef3cd97334..715ada74ab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/64/WinCli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/64/WinCli.java\nindex 1ef3cd97334..715ada74ab1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/64/WinCli.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/64/WinCli.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cli;\n \n import org.apache.iotdb.exception.ArgsErrorException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
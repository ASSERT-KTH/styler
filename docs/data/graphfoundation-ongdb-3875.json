{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3875",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "307",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3875/NettyPipelineBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3875/NettyPipelineBuilder.java\nindex 1bfda426703..8cef6dd74fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3875/NettyPipelineBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3875/NettyPipelineBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol;\n \n import io.netty.buffer.ByteBuf;\n@@ -50,265 +51,263 @@ import static java.util.Arrays.asList;\n  */\n public abstract class NettyPipelineBuilder<O extends ProtocolInstaller.Orientation, BUILDER extends NettyPipelineBuilder<O, BUILDER>>\n {\n-    static final String MESSAGE_GATE_NAME = \"message_gate\";\n-    static final String ERROR_HANDLER_TAIL = \"error_handler_tail\";\n-    static final String ERROR_HANDLER_HEAD = \"error_handler_head\";\n-\n-    private final ChannelPipeline pipeline;\n-    private final Log log;\n-    private final List<HandlerInfo> handlerInfos = new ArrayList<>();\n-\n-    private Predicate<Object> gatePredicate;\n-    private Runnable closeHandler;\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    private BUILDER self = (BUILDER) this;\n-\n-    NettyPipelineBuilder( ChannelPipeline pipeline, Log log )\n+  static final String MESSAGE_GATE_NAME = \"message_gate\";\n+  static final String ERROR_HANDLER_TAIL = \"error_handler_tail\";\n+  static final String ERROR_HANDLER_HEAD = \"error_handler_head\";\n+\n+  private final ChannelPipeline pipeline;\n+  private final Log log;\n+  private final List<HandlerInfo> handlerInfos = new ArrayList<>();\n+\n+  private Predicate<Object> gatePredicate;\n+  private Runnable closeHandler;\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private BUILDER self = (BUILDER) this;\n+\n+  NettyPipelineBuilder(ChannelPipeline pipeline, Log log)\n+  {\n+    this.pipeline = pipeline;\n+    this.log = log;\n+  }\n+\n+  /**\n+   * Entry point for the client builder.\n+   *\n+   * @param pipeline The pipeline to build for.\n+   * @param log      The log used for last-resort errors occurring in the pipeline.\n+   * @return The client builder.\n+   */\n+  public static ClientNettyPipelineBuilder client(ChannelPipeline pipeline, Log log)\n+  {\n+    return new ClientNettyPipelineBuilder(pipeline, log);\n+  }\n+\n+  /**\n+   * Entry point for the server builder.\n+   *\n+   * @param pipeline The pipeline to build for.\n+   * @param log      The log used for last-resort errors occurring in the pipeline.\n+   * @return The server builder.\n+   */\n+  public static ServerNettyPipelineBuilder server(ChannelPipeline pipeline, Log log)\n+  {\n+    return new ServerNettyPipelineBuilder(pipeline, log);\n+  }\n+\n+  /**\n+   * Adds buffer framing to the pipeline. Useful for pipelines marshalling\n+   * complete POJOs as an example using {@link MessageToByteEncoder} and\n+   * {@link ByteToMessageDecoder}.\n+   */\n+  public abstract BUILDER addFraming();\n+\n+  public BUILDER modify(ModifierProtocolInstaller<O> modifier)\n+  {\n+    modifier.apply(this);\n+    return self;\n+  }\n+\n+  public BUILDER modify(List<ModifierProtocolInstaller<O>> modifiers)\n+  {\n+    modifiers.forEach(this::modify);\n+    return self;\n+  }\n+\n+  /**\n+   * Adds handlers to the pipeline.\n+   * <p>\n+   * The pipeline builder controls the internal names of the handlers in the\n+   * pipeline and external actors are forbidden from manipulating them.\n+   *\n+   * @param name        The name of the handler, which must be unique.\n+   * @param newHandlers The new handlers.\n+   * @return The builder.\n+   */\n+  public BUILDER add(String name, List<ChannelHandler> newHandlers)\n+  {\n+    newHandlers.stream().map(handler -> new HandlerInfo(name, handler)).forEachOrdered(handlerInfos::add);\n+    return self;\n+  }\n+\n+  /**\n+   * @see #add(String, List)\n+   */\n+  public BUILDER add(String name, ChannelHandler... newHandlers)\n+  {\n+    return add(name, asList(newHandlers));\n+  }\n+\n+  public BUILDER addGate(Predicate<Object> gatePredicate)\n+  {\n+    if (this.gatePredicate != null)\n     {\n-        this.pipeline = pipeline;\n-        this.log = log;\n+      throw new IllegalStateException(\"Cannot have more than one gate.\");\n     }\n+    this.gatePredicate = gatePredicate;\n+    return self;\n+  }\n \n-    /**\n-     * Entry point for the client builder.\n-     *\n-     * @param pipeline The pipeline to build for.\n-     * @param log The log used for last-resort errors occurring in the pipeline.\n-     * @return The client builder.\n-     */\n-    public static ClientNettyPipelineBuilder client( ChannelPipeline pipeline, Log log )\n+  public BUILDER onClose(Runnable closeHandler)\n+  {\n+    if (this.closeHandler != null)\n     {\n-        return new ClientNettyPipelineBuilder( pipeline, log );\n+      throw new IllegalStateException(\"Cannot have more than one close handler.\");\n     }\n-\n-    /**\n-     * Entry point for the server builder.\n-     *\n-     * @param pipeline The pipeline to build for.\n-     * @param log The log used for last-resort errors occurring in the pipeline.\n-     * @return The server builder.\n-     */\n-    public static ServerNettyPipelineBuilder server( ChannelPipeline pipeline, Log log )\n+    this.closeHandler = closeHandler;\n+    return self;\n+  }\n+\n+  /**\n+   * Installs the built pipeline and removes any old pipeline.\n+   */\n+  public void install()\n+  {\n+    ensureErrorHandling();\n+    installGate();\n+    clearUserHandlers();\n+\n+    String userHead = ERROR_HANDLER_HEAD;\n+    for (HandlerInfo info : handlerInfos)\n     {\n-        return new ServerNettyPipelineBuilder( pipeline, log );\n+      pipeline.addAfter(userHead, info.name, info.handler);\n+      userHead = info.name;\n     }\n+  }\n \n-    /**\n-     * Adds buffer framing to the pipeline. Useful for pipelines marshalling\n-     * complete POJOs as an example using {@link MessageToByteEncoder} and\n-     * {@link ByteToMessageDecoder}.\n-     */\n-    public abstract BUILDER addFraming();\n-\n-    public BUILDER modify( ModifierProtocolInstaller<O> modifier )\n+  private void installGate()\n+  {\n+    if (pipeline.get(MESSAGE_GATE_NAME) != null && gatePredicate != null)\n     {\n-        modifier.apply( this );\n-        return self;\n-    }\n-\n-    public BUILDER modify( List<ModifierProtocolInstaller<O>> modifiers )\n+      throw new IllegalStateException(\"Cannot have more than one gate.\");\n+    } else if (gatePredicate != null)\n     {\n-        modifiers.forEach( this::modify );\n-        return self;\n+      pipeline.addBefore(ERROR_HANDLER_TAIL, MESSAGE_GATE_NAME, new MessageGate(gatePredicate));\n     }\n-\n-    /**\n-     * Adds handlers to the pipeline.\n-     * <p>\n-     * The pipeline builder controls the internal names of the handlers in the\n-     * pipeline and external actors are forbidden from manipulating them.\n-     *\n-     * @param name The name of the handler, which must be unique.\n-     * @param newHandlers The new handlers.\n-     * @return The builder.\n-     */\n-    public BUILDER add( String name, List<ChannelHandler> newHandlers )\n-    {\n-        newHandlers.stream().map( handler -> new HandlerInfo( name, handler ) ).forEachOrdered( handlerInfos::add );\n-        return self;\n-    }\n-\n-    /**\n-     * @see #add(String, List)\n-     */\n-    public BUILDER add( String name, ChannelHandler... newHandlers )\n+  }\n+\n+  private void clearUserHandlers()\n+  {\n+    pipeline.names().stream()\n+        .filter(this::isNotDefault)\n+        .filter(this::isNotErrorHandler)\n+        .filter(this::isNotGate)\n+        .forEach(pipeline::remove);\n+  }\n+\n+  private boolean isNotDefault(String name)\n+  {\n+    // these are netty internal handlers for head and tail\n+    return pipeline.get(name) != null;\n+  }\n+\n+  private boolean isNotErrorHandler(String name)\n+  {\n+    return !name.equals(ERROR_HANDLER_HEAD) && !name.equals(ERROR_HANDLER_TAIL);\n+  }\n+\n+  private boolean isNotGate(String name)\n+  {\n+    return !name.equals(MESSAGE_GATE_NAME);\n+  }\n+\n+  private void ensureErrorHandling()\n+  {\n+    int size = pipeline.names().size();\n+\n+    if (pipeline.names().get(0).equals(ERROR_HANDLER_HEAD))\n     {\n-        return add( name, asList( newHandlers ) );\n-    }\n-\n-    public BUILDER addGate( Predicate<Object> gatePredicate )\n-    {\n-        if ( this.gatePredicate != null )\n-        {\n-            throw new IllegalStateException( \"Cannot have more than one gate.\" );\n-        }\n-        this.gatePredicate = gatePredicate;\n-        return self;\n+      if (!pipeline.names().get(size - 2).equals(ERROR_HANDLER_TAIL)) // last position before netty's tail sentinel\n+      {\n+        throw new IllegalStateException(\"Both error handlers must exist.\");\n+      }\n+      return;\n     }\n \n-    public BUILDER onClose( Runnable closeHandler )\n+    // inbound goes in the direction from first->last\n+    pipeline.addLast(ERROR_HANDLER_TAIL, new ChannelDuplexHandler()\n     {\n-        if ( this.closeHandler != null )\n+      @Override\n+      public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n+      {\n+        log.error(format(\"Exception in inbound for channel: %s\", ctx.channel()), cause);\n+        ctx.channel().close();\n+      }\n+\n+      @Override\n+      public void channelRead(ChannelHandlerContext ctx, Object msg)\n+      {\n+        log.error(\"Unhandled inbound message: %s for channel: %s\", msg, ctx.channel());\n+        ctx.channel().close();\n+      }\n+\n+      // this is the first handler for an outbound message, and attaches a listener to its promise if possible\n+      @Override\n+      public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise)\n+      {\n+        // if the promise is a void-promise, then exceptions will instead propagate to the\n+        // exceptionCaught handler on the outbound handler further below\n+\n+        if (!promise.isVoid())\n         {\n-            throw new IllegalStateException( \"Cannot have more than one close handler.\" );\n+          promise.addListener((ChannelFutureListener) future -> {\n+            if (!future.isSuccess())\n+            {\n+              log.error(format(\"Exception in outbound for channel: %s\", future.channel()), future.cause());\n+              ctx.channel().close();\n+            }\n+          });\n         }\n-        this.closeHandler = closeHandler;\n-        return self;\n-    }\n+        ctx.write(msg, promise);\n+      }\n \n-    /**\n-     * Installs the built pipeline and removes any old pipeline.\n-     */\n-    public void install()\n-    {\n-        ensureErrorHandling();\n-        installGate();\n-        clearUserHandlers();\n-\n-        String userHead = ERROR_HANDLER_HEAD;\n-        for ( HandlerInfo info : handlerInfos )\n+      @Override\n+      public void channelInactive(ChannelHandlerContext ctx)\n+      {\n+        if (closeHandler != null)\n         {\n-            pipeline.addAfter( userHead, info.name, info.handler );\n-            userHead = info.name;\n+          closeHandler.run();\n         }\n-    }\n+        ctx.fireChannelInactive();\n+      }\n+    });\n \n-    private void installGate()\n+    pipeline.addFirst(ERROR_HANDLER_HEAD, new ChannelOutboundHandlerAdapter()\n     {\n-        if ( pipeline.get( MESSAGE_GATE_NAME ) != null && gatePredicate != null )\n-        {\n-            throw new IllegalStateException( \"Cannot have more than one gate.\" );\n-        }\n-        else if ( gatePredicate != null )\n+      // exceptions which did not get fulfilled on the promise of a write, etc.\n+      @Override\n+      public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n+      {\n+        log.error(format(\"Exception in outbound for channel: %s\", ctx.channel()), cause);\n+        ctx.channel().close();\n+      }\n+\n+      // netty can only handle bytes in the form of ByteBuf, so if you reach this then you are\n+      // perhaps trying to send a POJO without having a suitable encoder\n+      @Override\n+      public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise)\n+      {\n+        if (!(msg instanceof ByteBuf))\n         {\n-            pipeline.addBefore( ERROR_HANDLER_TAIL, MESSAGE_GATE_NAME, new MessageGate( gatePredicate ) );\n-        }\n-    }\n-\n-    private void clearUserHandlers()\n-    {\n-        pipeline.names().stream()\n-                .filter( this::isNotDefault )\n-                .filter( this::isNotErrorHandler )\n-                .filter( this::isNotGate )\n-                .forEach( pipeline::remove );\n-    }\n-\n-    private boolean isNotDefault( String name )\n-    {\n-        // these are netty internal handlers for head and tail\n-        return pipeline.get( name ) != null;\n-    }\n-\n-    private boolean isNotErrorHandler( String name )\n-    {\n-        return !name.equals( ERROR_HANDLER_HEAD ) && !name.equals( ERROR_HANDLER_TAIL );\n-    }\n-\n-    private boolean isNotGate( String name )\n-    {\n-        return !name.equals( MESSAGE_GATE_NAME );\n-    }\n-\n-    private void ensureErrorHandling()\n-    {\n-        int size = pipeline.names().size();\n-\n-        if ( pipeline.names().get( 0 ).equals( ERROR_HANDLER_HEAD ) )\n+          log.error(\"Unhandled outbound message: %s for channel: %s\", msg, ctx.channel());\n+          ctx.channel().close();\n+        } else\n         {\n-            if ( !pipeline.names().get( size - 2 ).equals( ERROR_HANDLER_TAIL ) ) // last position before netty's tail sentinel\n-            {\n-                throw new IllegalStateException( \"Both error handlers must exist.\" );\n-            }\n-            return;\n+          ctx.write(msg, promise);\n         }\n+      }\n+    });\n+  }\n \n-        // inbound goes in the direction from first->last\n-        pipeline.addLast( ERROR_HANDLER_TAIL, new ChannelDuplexHandler()\n-        {\n-            @Override\n-            public void exceptionCaught( ChannelHandlerContext ctx, Throwable cause )\n-            {\n-                log.error( format( \"Exception in inbound for channel: %s\", ctx.channel() ), cause );\n-                ctx.channel().close();\n-            }\n-\n-            @Override\n-            public void channelRead( ChannelHandlerContext ctx, Object msg )\n-            {\n-                log.error( \"Unhandled inbound message: %s for channel: %s\", msg, ctx.channel() );\n-                ctx.channel().close();\n-            }\n-\n-            // this is the first handler for an outbound message, and attaches a listener to its promise if possible\n-            @Override\n-            public void write( ChannelHandlerContext ctx, Object msg, ChannelPromise promise )\n-            {\n-                // if the promise is a void-promise, then exceptions will instead propagate to the\n-                // exceptionCaught handler on the outbound handler further below\n-\n-                if ( !promise.isVoid() )\n-                {\n-                    promise.addListener( (ChannelFutureListener) future -> {\n-                        if ( !future.isSuccess() )\n-                        {\n-                            log.error( format( \"Exception in outbound for channel: %s\", future.channel() ), future.cause() );\n-                            ctx.channel().close();\n-                        }\n-                    } );\n-                }\n-                ctx.write( msg, promise );\n-            }\n+  private static class HandlerInfo\n+  {\n+    private final String name;\n+    private final ChannelHandler handler;\n \n-            @Override\n-            public void channelInactive( ChannelHandlerContext ctx )\n-            {\n-                if ( closeHandler != null )\n-                {\n-                    closeHandler.run();\n-                }\n-                ctx.fireChannelInactive();\n-            }\n-        } );\n-\n-        pipeline.addFirst( ERROR_HANDLER_HEAD, new ChannelOutboundHandlerAdapter()\n-        {\n-            // exceptions which did not get fulfilled on the promise of a write, etc.\n-            @Override\n-            public void exceptionCaught( ChannelHandlerContext ctx, Throwable cause )\n-            {\n-                log.error( format( \"Exception in outbound for channel: %s\", ctx.channel() ), cause );\n-                ctx.channel().close();\n-            }\n-\n-            // netty can only handle bytes in the form of ByteBuf, so if you reach this then you are\n-            // perhaps trying to send a POJO without having a suitable encoder\n-            @Override\n-            public void write( ChannelHandlerContext ctx, Object msg, ChannelPromise promise )\n-            {\n-                if ( !(msg instanceof ByteBuf) )\n-                {\n-                    log.error( \"Unhandled outbound message: %s for channel: %s\", msg, ctx.channel() );\n-                    ctx.channel().close();\n-                }\n-                else\n-                {\n-                    ctx.write( msg, promise );\n-                }\n-            }\n-        } );\n-    }\n-\n-    private static class HandlerInfo\n+    HandlerInfo(String name, ChannelHandler handler)\n     {\n-        private final String name;\n-        private final ChannelHandler handler;\n-\n-        HandlerInfo( String name, ChannelHandler handler )\n-        {\n-            this.name = name;\n-            this.handler = handler;\n-        }\n+      this.name = name;\n+      this.handler = handler;\n     }\n+  }\n }\n",
            "diff_size": 373
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
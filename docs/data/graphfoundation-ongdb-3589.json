{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3589",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3589/ParameterVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3589/ParameterVisitor.java\nindex b127a6c0f9d..3cc3091772d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3589/ParameterVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3589/ParameterVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.util.List;\n@@ -32,47 +33,47 @@ import org.neo4j.tooling.procedure.messages.CompilationMessage;\n import org.neo4j.tooling.procedure.messages.ParameterMissingAnnotationError;\n import org.neo4j.tooling.procedure.messages.ParameterTypeError;\n \n-class ParameterVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+class ParameterVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n \n-    private final TypeVisitor<Boolean,Void> parameterTypeVisitor;\n+  private final TypeVisitor<Boolean, Void> parameterTypeVisitor;\n \n-    ParameterVisitor( TypeVisitor<Boolean,Void> parameterTypeVisitor )\n-    {\n-        this.parameterTypeVisitor = parameterTypeVisitor;\n-    }\n+  ParameterVisitor(TypeVisitor<Boolean, Void> parameterTypeVisitor)\n+  {\n+    this.parameterTypeVisitor = parameterTypeVisitor;\n+  }\n \n-    @Override\n-    public Stream<CompilationMessage> visitVariable( VariableElement parameter, Void ignored )\n+  @Override\n+  public Stream<CompilationMessage> visitVariable(VariableElement parameter, Void ignored)\n+  {\n+    Name annotation = parameter.getAnnotation(Name.class);\n+    if (annotation == null)\n     {\n-        Name annotation = parameter.getAnnotation( Name.class );\n-        if ( annotation == null )\n-        {\n-            return Stream.of( new ParameterMissingAnnotationError( parameter,\n-                    annotationMirror( parameter.getAnnotationMirrors() ), \"@%s usage error: missing on parameter <%s>\",\n-                    Name.class.getName(), nameOf( parameter ) ) );\n-        }\n-\n-        if ( !parameterTypeVisitor.visit( parameter.asType() ) )\n-        {\n-            Element method = parameter.getEnclosingElement();\n-            return Stream.of( new ParameterTypeError( parameter,\n-                    \"Unsupported parameter type <%s> of \" + \"procedure|function\" + \" %s#%s\",\n-                    parameter.asType().toString(), method.getEnclosingElement().getSimpleName(),\n-                    method.getSimpleName() ) );\n-        }\n-        return Stream.empty();\n+      return Stream.of(new ParameterMissingAnnotationError(parameter,\n+          annotationMirror(parameter.getAnnotationMirrors()), \"@%s usage error: missing on parameter <%s>\",\n+          Name.class.getName(), nameOf(parameter)));\n     }\n \n-    private AnnotationMirror annotationMirror( List<? extends AnnotationMirror> mirrors )\n+    if (!parameterTypeVisitor.visit(parameter.asType()))\n     {\n-        AnnotationTypeVisitor nameVisitor = new AnnotationTypeVisitor( Name.class );\n-        return mirrors.stream().filter( mirror -> nameVisitor.visit( mirror.getAnnotationType().asElement() ) )\n-                .findFirst().orElse( null );\n+      Element method = parameter.getEnclosingElement();\n+      return Stream.of(new ParameterTypeError(parameter,\n+          \"Unsupported parameter type <%s> of \" + \"procedure|function\" + \" %s#%s\",\n+          parameter.asType().toString(), method.getEnclosingElement().getSimpleName(),\n+          method.getSimpleName()));\n     }\n+    return Stream.empty();\n+  }\n \n-    private String nameOf( VariableElement parameter )\n-    {\n-        return parameter.getSimpleName().toString();\n-    }\n+  private AnnotationMirror annotationMirror(List<? extends AnnotationMirror> mirrors)\n+  {\n+    AnnotationTypeVisitor nameVisitor = new AnnotationTypeVisitor(Name.class);\n+    return mirrors.stream().filter(mirror -> nameVisitor.visit(mirror.getAnnotationType().asElement()))\n+        .findFirst().orElse(null);\n+  }\n+\n+  private String nameOf(VariableElement parameter)\n+  {\n+    return parameter.getSimpleName().toString();\n+  }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3589/ParameterVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3589/ParameterVisitor.java\nindex b127a6c0f9d..ae10939a535 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3589/ParameterVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3589/ParameterVisitor.java\n@@ -34,7 +34,6 @@ import org.neo4j.tooling.procedure.messages.ParameterTypeError;\n \n class ParameterVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n {\n-\n     private final TypeVisitor<Boolean,Void> parameterTypeVisitor;\n \n     ParameterVisitor( TypeVisitor<Boolean,Void> parameterTypeVisitor )\n@@ -56,23 +55,21 @@ class ParameterVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,\n         if ( !parameterTypeVisitor.visit( parameter.asType() ) )\n         {\n             Element method = parameter.getEnclosingElement();\n-            return Stream.of( new ParameterTypeError( parameter,\n-                    \"Unsupported parameter type <%s> of \" + \"procedure|function\" + \" %s#%s\",\n-                    parameter.asType().toString(), method.getEnclosingElement().getSimpleName(),\n-                    method.getSimpleName() ) );\n+            return Stream.of( new ParameterTypeError( parameter, \"Unsupported parameter type <%s> of \" + \"procedure|function\" + \" %s#%s\",\n+                    parameter.asType().toString(), method.getEnclosingElement().getSimpleName(), method.getSimpleName() ) );\n         }\n-        return Stream.empty();\n+\n+return Stream.empty();\n     }\n \n     private AnnotationMirror annotationMirror( List<? extends AnnotationMirror> mirrors )\n     {\n         AnnotationTypeVisitor nameVisitor = new AnnotationTypeVisitor( Name.class );\n-        return mirrors.stream().filter( mirror -> nameVisitor.visit( mirror.getAnnotationType().asElement() ) )\n-                .findFirst().orElse( null );\n+        return mirrors.stream().filter( mirror -> nameVisitor.visit( mirror.getAnnotationType().asElement() ) ).findFirst().orElse( null );\n     }\n \n     private String nameOf( VariableElement parameter )\n     {\n         return parameter.getSimpleName().toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
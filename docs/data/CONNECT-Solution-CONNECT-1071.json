{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1071",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.converter;\n\nimport java.util.Locale;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1071/XMLGregorianConverter.java\nindex 858a0ed5cc3..d3723e14851 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1071/XMLGregorianConverter.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.converter;\n \n import java.util.Locale;\n@@ -36,58 +37,57 @@ import javax.faces.convert.FacesConverter;\n import javax.xml.datatype.XMLGregorianCalendar;\n \n /**\n- *\n  * @author tjafri\n  */\n @FacesConverter(\"xmlGregorianConverter\")\n public class XMLGregorianConverter extends DateTimeConverter {\n \n-    private static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone(\"UTC\");\n-    private String dateStyle = \"default\";\n-    private Locale locale = null;\n-    private String pattern = null;\n-    private String timeStyle = \"default\";\n-    private TimeZone timeZone = DEFAULT_TIME_ZONE;\n-    private String type = \"date\";\n+  private static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone(\"UTC\");\n+  private String dateStyle = \"default\";\n+  private Locale locale = null;\n+  private String pattern = null;\n+  private String timeStyle = \"default\";\n+  private TimeZone timeZone = DEFAULT_TIME_ZONE;\n+  private String type = \"date\";\n \n-    @Override\n-    public Object getAsObject(FacesContext context, UIComponent component, String newValue) {\n-        return null;\n-    }\n+  @Override\n+  public Object getAsObject(FacesContext context, UIComponent component, String newValue) {\n+    return null;\n+  }\n \n-    @Override\n-    public String getAsString(FacesContext context, UIComponent component, Object value) {\n-        if (null != component && null != component.getAttributes()) {\n-            Map<String, Object> attributes = component.getAttributes();\n-            if (attributes.containsKey(\"pattern\")) {\n-                pattern = (String) attributes.get(\"pattern\");\n-            }\n-            setPattern(pattern);\n-            if (attributes.containsKey(\"locale\")) {\n-                locale = (Locale) attributes.get(\"locale\");\n-            }\n-            setLocale(locale);\n-            if (attributes.containsKey(\"timeZone\")) {\n-                timeZone = (TimeZone) attributes.get(\"timeZone\");\n-            }\n-            setTimeZone(timeZone);\n-            if (attributes.containsKey(\"dateStyle\")) {\n-                dateStyle = (String) attributes.get(\"dateStyle\");\n-            }\n-            setDateStyle(dateStyle);\n-            if (attributes.containsKey(\"timeStyle\")) {\n-                timeStyle = (String) attributes.get(\"timeStyle\");\n-            }\n-            setTimeStyle(timeStyle);\n-            if (attributes.containsKey(\"type\")) {\n-                type = (String) attributes.get(\"type\");\n-            }\n-            setType(type);\n-        }\n-        if (null != value) {\n-            return super.getAsString(context, component, ((XMLGregorianCalendar) value).toGregorianCalendar().\n-                getTime());\n-        }\n-        return \"\";\n+  @Override\n+  public String getAsString(FacesContext context, UIComponent component, Object value) {\n+    if (null != component && null != component.getAttributes()) {\n+      Map<String, Object> attributes = component.getAttributes();\n+      if (attributes.containsKey(\"pattern\")) {\n+        pattern = (String) attributes.get(\"pattern\");\n+      }\n+      setPattern(pattern);\n+      if (attributes.containsKey(\"locale\")) {\n+        locale = (Locale) attributes.get(\"locale\");\n+      }\n+      setLocale(locale);\n+      if (attributes.containsKey(\"timeZone\")) {\n+        timeZone = (TimeZone) attributes.get(\"timeZone\");\n+      }\n+      setTimeZone(timeZone);\n+      if (attributes.containsKey(\"dateStyle\")) {\n+        dateStyle = (String) attributes.get(\"dateStyle\");\n+      }\n+      setDateStyle(dateStyle);\n+      if (attributes.containsKey(\"timeStyle\")) {\n+        timeStyle = (String) attributes.get(\"timeStyle\");\n+      }\n+      setTimeStyle(timeStyle);\n+      if (attributes.containsKey(\"type\")) {\n+        type = (String) attributes.get(\"type\");\n+      }\n+      setType(type);\n+    }\n+    if (null != value) {\n+      return super.getAsString(context, component, ((XMLGregorianCalendar) value).toGregorianCalendar().\n+          getTime());\n     }\n+    return \"\";\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1071/XMLGregorianConverter.java\nindex 858a0ed5cc3..3f072459172 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1071/XMLGregorianConverter.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.converter;\n \n import java.util.Locale;\n@@ -85,9 +86,9 @@ public class XMLGregorianConverter extends DateTimeConverter {\n             setType(type);\n         }\n         if (null != value) {\n-            return super.getAsString(context, component, ((XMLGregorianCalendar) value).toGregorianCalendar().\n-                getTime());\n-        }\n+            return super.getAsString(context, component, ((XMLGregorianCalendar) value).toGregorianCalendar().getTime());\n+\n+    }\n         return \"\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "102",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1071/XMLGregorianConverter.java\nindex 858a0ed5cc3..6f26478b7c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1071/XMLGregorianConverter.java\n@@ -39,8 +39,11 @@ import javax.xml.datatype.XMLGregorianCalendar;\n  *\n  * @author tjafri\n  */\n+\n+\n @FacesConverter(\"xmlGregorianConverter\")\n-public class XMLGregorianConverter extends DateTimeConverter {\n+public class XMLGregorianConverter extends\n+    DateTimeConverter {\n \n     private static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone(\"UTC\");\n     private String dateStyle = \"default\";\n@@ -50,44 +53,55 @@ public class XMLGregorianConverter extends DateTimeConverter {\n     private TimeZone timeZone = DEFAULT_TIME_ZONE;\n     private String type = \"date\";\n \n+\n     @Override\n-    public Object getAsObject(FacesContext context, UIComponent component, String newValue) {\n+    public Object getAsObject(FacesContext context,\n+        UIComponent component, String newValue) {\n         return null;\n     }\n \n+\n     @Override\n-    public String getAsString(FacesContext context, UIComponent component, Object value) {\n+    public String getAsString(FacesContext context,\n+        UIComponent component, Object value) {\n         if (null != component && null != component.getAttributes()) {\n             Map<String, Object> attributes = component.getAttributes();\n             if (attributes.containsKey(\"pattern\")) {\n-                pattern = (String) attributes.get(\"pattern\");\n+                pattern = (String)\n+                              attributes.get(\"pattern\");\n             }\n             setPattern(pattern);\n             if (attributes.containsKey(\"locale\")) {\n-                locale = (Locale) attributes.get(\"locale\");\n+                locale = (Locale)\n+                             attributes.get(\"locale\");\n             }\n             setLocale(locale);\n             if (attributes.containsKey(\"timeZone\")) {\n-                timeZone = (TimeZone) attributes.get(\"timeZone\");\n+                timeZone = (TimeZone)\n+                               attributes.get(\"timeZone\");\n             }\n             setTimeZone(timeZone);\n             if (attributes.containsKey(\"dateStyle\")) {\n-                dateStyle = (String) attributes.get(\"dateStyle\");\n+                dateStyle = (String)\n+                                attributes.get(\"dateStyle\");\n             }\n             setDateStyle(dateStyle);\n             if (attributes.containsKey(\"timeStyle\")) {\n-                timeStyle = (String) attributes.get(\"timeStyle\");\n+                timeStyle = (String)\n+                                attributes.get(\"timeStyle\");\n             }\n             setTimeStyle(timeStyle);\n             if (attributes.containsKey(\"type\")) {\n-                type = (String) attributes.get(\"type\");\n+                type = (String)\n+                           attributes.get(\"type\");\n             }\n             setType(type);\n         }\n         if (null != value) {\n-            return super.getAsString(context, component, ((XMLGregorianCalendar) value).toGregorianCalendar().\n-                getTime());\n+            return super.getAsString(context, component, ((XMLGregorianCalendar)\n+                                                              value ).toGregorianCalendar().getTime());\n         }\n         return \"\";\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "10",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1071/XMLGregorianConverter.java\nindex 858a0ed5cc3..7dce49f7fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1071/XMLGregorianConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1071/XMLGregorianConverter.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.admingui.converter;\n+\n+package gov.hhs.fha.nhinc.admingui.\n+\n+converter ;\n \n import java.util.Locale;\n import java.util.Map;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
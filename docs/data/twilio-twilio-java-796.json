{
    "project_name": "twilio-twilio-java",
    "error_id": "796",
    "information": {
        "errors": [
            {
                "line": "185",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/796/FaxReader.java\nindex 2ff02e39b0f..8a6414e9b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/796/FaxReader.java\n@@ -182,7 +182,7 @@ public class FaxReader extends Reader<Fax> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/796/FaxReader.java\nindex 2ff02e39b0f..7de3906c650 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/796/FaxReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.fax.v1;\n@@ -182,7 +182,7 @@ public class FaxReader extends Reader<Fax> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/796/FaxReader.java\nindex 2ff02e39b0f..78d7d0e8ec1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/796/FaxReader.java\n@@ -19,13 +19,13 @@ import com.twilio.http.Request;\n import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n-\n import java.time.ZonedDateTime;\n \n /**\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class FaxReader extends Reader<Fax> {\n     private String from;\n     private String to;\n@@ -39,6 +39,7 @@ public class FaxReader extends Reader<Fax> {\n      * @param from Retrieve only those faxes sent from this phone number\n      * @return this\n      */\n+\n     public FaxReader setFrom(final String from) {\n         this.from = from;\n         return this;\n@@ -51,6 +52,8 @@ public class FaxReader extends Reader<Fax> {\n      * @param to Retrieve only those faxes sent to this phone number\n      * @return this\n      */\n+\n+\n     public FaxReader setTo(final String to) {\n         this.to = to;\n         return this;\n@@ -65,6 +68,8 @@ public class FaxReader extends Reader<Fax> {\n      *                              date\n      * @return this\n      */\n+\n+\n     public FaxReader setDateCreatedOnOrBefore(final ZonedDateTime dateCreatedOnOrBefore) {\n         this.dateCreatedOnOrBefore = dateCreatedOnOrBefore;\n         return this;\n@@ -78,6 +83,8 @@ public class FaxReader extends Reader<Fax> {\n      * @param dateCreatedAfter Retrieve only faxes created after this date\n      * @return this\n      */\n+\n+\n     public FaxReader setDateCreatedAfter(final ZonedDateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -89,6 +96,7 @@ public class FaxReader extends Reader<Fax> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Fax ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Fax> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -100,14 +108,11 @@ public class FaxReader extends Reader<Fax> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Fax ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Fax> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.FAX.toString(),\n-            \"/v1/Faxes\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.FAX.toString(), \"/v1/Faxes\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -120,14 +125,12 @@ public class FaxReader extends Reader<Fax> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Fax ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Fax> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Fax> getPage(final String targetUrl,\n+                             final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -138,13 +141,11 @@ public class FaxReader extends Reader<Fax> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Fax> nextPage(final Page<Fax> page,\n                               final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.FAX.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.FAX.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -155,13 +156,11 @@ public class FaxReader extends Reader<Fax> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Fax> previousPage(final Page<Fax> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.FAX.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.FAX.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -172,9 +171,11 @@ public class FaxReader extends Reader<Fax> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Fax> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Fax> pageForRequest(final TwilioRestClient client,\n+                                     final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Fax read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -182,15 +183,11 @@ public class FaxReader extends Reader<Fax> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"faxes\",\n-            response.getContent(),\n-            Fax.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"faxes\", response.getContent(), Fax.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -198,6 +195,8 @@ public class FaxReader extends Reader<Fax> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (from != null) {\n             request.addQueryParam(\"From\", from);\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/796/FaxReader.java\nindex 2ff02e39b0f..8a6414e9b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/796/FaxReader.java\n@@ -182,7 +182,7 @@ public class FaxReader extends Reader<Fax> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/796/FaxReader.java\nindex 2ff02e39b0f..19db55fbee4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/796/FaxReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/796/FaxReader.java\n@@ -182,7 +182,8 @@ public class FaxReader extends Reader<Fax> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
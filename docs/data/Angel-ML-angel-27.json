{
    "project_name": "Angel-ML-angel",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/27/CSRIntMat.java\nindex 76592f25877..2b452f332b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/27/CSRIntMat.java\n@@ -53,27 +53,33 @@ public class CSRIntMat extends TMatrix {\n     this.vals = vals;\n   }\n \n-  @Override public double sparsity() {\n+  @Override\n+  public double sparsity() {\n     return 0;\n   }\n \n-  @Override public long size() {\n+  @Override\n+  public long size() {\n     return 0;\n   }\n \n-  @Override public void clear() {\n+  @Override\n+  public void clear() {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public void clear(int rowIndex) {\n+  @Override\n+  public void clear(int rowIndex) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public long nonZeroNum() {\n+  @Override\n+  public long nonZeroNum() {\n     return 0;\n   }\n \n-  @Override public TMatrix plusBy(TMatrix other) {\n+  @Override\n+  public TMatrix plusBy(TMatrix other) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n@@ -96,7 +102,7 @@ public class CSRIntMat extends TMatrix {\n       }\n     }\n \n-    return new COOIntMatrix(row, (int)col, rr, cc, vv);\n+    return new COOIntMatrix(row, (int) col, rr, cc, vv);\n   }\n \n   /**\n@@ -104,7 +110,8 @@ public class CSRIntMat extends TMatrix {\n    *\n    * @return String\n    */\n-  @Override public String toString() {\n+  @Override\n+  public String toString() {\n     StringBuilder builder = new StringBuilder();\n     for (int r = 0; r < rs.length - 1; r++) {\n       for (int j = rs[r]; j < rs[r + 1]; j++) {\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/27/CSRIntMat.java\nindex 76592f25877..1fc23a186d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/27/CSRIntMat.java\n@@ -53,27 +53,33 @@ public class CSRIntMat extends TMatrix {\n     this.vals = vals;\n   }\n \n-  @Override public double sparsity() {\n+  @Override\n+public double sparsity() {\n     return 0;\n   }\n \n-  @Override public long size() {\n+  @Override\n+public long size() {\n     return 0;\n   }\n \n-  @Override public void clear() {\n+  @Override\n+public void clear() {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public void clear(int rowIndex) {\n+  @Override\n+public void clear(int rowIndex) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public long nonZeroNum() {\n+  @Override\n+public long nonZeroNum() {\n     return 0;\n   }\n \n-  @Override public TMatrix plusBy(TMatrix other) {\n+  @Override\n+public TMatrix plusBy(TMatrix other) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n@@ -96,7 +102,7 @@ public class CSRIntMat extends TMatrix {\n       }\n     }\n \n-    return new COOIntMatrix(row, (int)col, rr, cc, vv);\n+    return new COOIntMatrix(row, (int) col, rr, cc, vv);\n   }\n \n   /**\n@@ -104,7 +110,8 @@ public class CSRIntMat extends TMatrix {\n    *\n    * @return String\n    */\n-  @Override public String toString() {\n+  @Override\n+public String toString() {\n     StringBuilder builder = new StringBuilder();\n     for (int r = 0; r < rs.length - 1; r++) {\n       for (int j = rs[r]; j < rs[r + 1]; j++) {\n@@ -127,4 +134,4 @@ public class CSRIntMat extends TMatrix {\n     }\n     return builder.toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/27/CSRIntMat.java\nindex 76592f25877..4f77768bdec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/27/CSRIntMat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/27/CSRIntMat.java\n@@ -21,10 +21,13 @@ import com.tencent.angel.ml.math.TMatrix;\n /**\n  * The compressed sparse row of matrix.\n  */\n+\n public class CSRIntMat extends TMatrix {\n \n   public int[] rs;\n+\n   public int[] cols;\n+\n   public int[] vals;\n \n   /**\n@@ -33,6 +36,7 @@ public class CSRIntMat extends TMatrix {\n    * @param row the row\n    * @param col the col\n    */\n+\n   public CSRIntMat(int row, int col) {\n     super(row, col);\n   }\n@@ -46,6 +50,7 @@ public class CSRIntMat extends TMatrix {\n    * @param cols the cols\n    * @param vals the vals\n    */\n+\n   public CSRIntMat(int row, int col, int[] rs, int[] cols, int[] vals) {\n     this(row, col);\n     this.rs = rs;\n@@ -53,27 +58,33 @@ public class CSRIntMat extends TMatrix {\n     this.vals = vals;\n   }\n \n-  @Override public double sparsity() {\n+  @Override\n+  public double sparsity() {\n     return 0;\n   }\n \n-  @Override public long size() {\n+  @Override\n+  public long size() {\n     return 0;\n   }\n \n-  @Override public void clear() {\n+  @Override\n+  public void clear() {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public void clear(int rowIndex) {\n+  @Override\n+  public void clear(int rowIndex) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n-  @Override public long nonZeroNum() {\n+  @Override\n+  public long nonZeroNum() {\n     return 0;\n   }\n \n-  @Override public TMatrix plusBy(TMatrix other) {\n+  @Override\n+  public TMatrix plusBy(TMatrix other) {\n     throw new UnsupportedOperationException(\"Unsupport operation\");\n   }\n \n@@ -82,12 +93,12 @@ public class CSRIntMat extends TMatrix {\n    *\n    * @return\n    */\n+\n   public COOIntMatrix toCoo() {\n     int len = cols.length;\n     int[] rr = new int[len];\n     int[] cc = new int[len];\n     int[] vv = new int[len];\n-\n     for (int r = 0; r < rs.length - 1; r++) {\n       for (int j = rs[r]; j < rs[r + 1]; j++) {\n         rr[j] = r;\n@@ -95,8 +106,7 @@ public class CSRIntMat extends TMatrix {\n         vv[j] = vals[j];\n       }\n     }\n-\n-    return new COOIntMatrix(row, (int)col, rr, cc, vv);\n+    return new COOIntMatrix(row, (int) col, rr, cc, vv);\n   }\n \n   /**\n@@ -104,7 +114,9 @@ public class CSRIntMat extends TMatrix {\n    *\n    * @return String\n    */\n-  @Override public String toString() {\n+\n+  @Override\n+  public String toString() {\n     StringBuilder builder = new StringBuilder();\n     for (int r = 0; r < rs.length - 1; r++) {\n       for (int j = rs[r]; j < rs[r + 1]; j++) {\n@@ -120,6 +132,7 @@ public class CSRIntMat extends TMatrix {\n    * @param r\n    * @return\n    */\n+\n   public String str(int r) {\n     StringBuilder builder = new StringBuilder();\n     for (int j = rs[r]; j < rs[r + 1]; j++) {\n@@ -127,4 +140,5 @@ public class CSRIntMat extends TMatrix {\n     }\n     return builder.toString();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "75",
                "severity": "error",
                "message": "'}' at column 75 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/23/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060c..17bda2f463d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/23/ValidUniqueQuestionNumberValidator.java\n@@ -16,20 +16,21 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/23/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060c..03b513ee06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/23/ValidUniqueQuestionNumberValidator.java\n@@ -16,10 +16,10 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n-  /*\n+/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -44,7 +44,7 @@ public class ValidUniqueQuestionNumberValidator\n         List<IdAndVersionProjection> existingQuestions =\n             questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(),\n                 question.getNumber());\n-        if (existingQuestions.isEmpty()) {\n+if (existingQuestions.isEmpty()) {\n           return true;\n         } else {\n           //we are updating this question\n@@ -53,6 +53,5 @@ public class ValidUniqueQuestionNumberValidator\n       }\n       return true;\n     }\n-\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/23/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060c..55459840f46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/23/ValidUniqueQuestionNumberValidator.java\n@@ -1,10 +1,8 @@\n package eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.validation;\n \n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.Question;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.repository.QuestionRepository;\n@@ -13,10 +11,10 @@ import lombok.RequiredArgsConstructor;\n /**\n  * Validates the uniqueness of question.\n  */\n+\n+\n @RequiredArgsConstructor\n-public class ValidUniqueQuestionNumberValidator\n-    implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+public class ValidUniqueQuestionNumberValidator implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n   private final QuestionRepository questionRepository;\n \n   /*\n@@ -24,8 +22,11 @@ public class ValidUniqueQuestionNumberValidator\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -33,26 +34,26 @@ public class ValidUniqueQuestionNumberValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(Question question, ConstraintValidatorContext context) {\n+  public boolean isValid(Question question,\n+    ConstraintValidatorContext context) {\n     if (question.isShadow()) {\n       return true;\n     } else {\n-      if (question.getInstrumentId() != null\n-          && question.getNumber() != null) {\n-\n-        List<IdAndVersionProjection> existingQuestions =\n-            questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(),\n-                question.getNumber());\n+      if (question.getInstrumentId() != null && question.getNumber() != null) {\n+        List<IdAndVersionProjection> existingQuestions = questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(), question.getNumber());\n         if (existingQuestions.isEmpty()) {\n           return true;\n         } else {\n           //we are updating this question\n-          return existingQuestions.get(0).getId().equals(question.getId());\n+          return existingQuestions.get(0).getId()\n+                                         .equals(question.getId());\n         }\n       }\n+\n       return true;\n     }\n-\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/23/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060c..ffab3b321d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/23/ValidUniqueQuestionNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/23/ValidUniqueQuestionNumberValidator.java\n@@ -26,7 +26,6 @@ public class ValidUniqueQuestionNumberValidator\n    */\n   @Override\n   public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "438",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/438/RequestDecoderDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/438/RequestDecoderDispatcher.java\nindex 2efe069e910..8922cccee4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/438/RequestDecoderDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/438/RequestDecoderDispatcher.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup;\n \n import io.netty.channel.ChannelHandlerContext;\n@@ -32,37 +33,37 @@ import org.neo4j.logging.LogProvider;\n \n public class RequestDecoderDispatcher<E extends Enum<E>> extends ChannelInboundHandlerAdapter\n {\n-    private final Map<E, ChannelInboundHandler> decoders = new HashMap<>();\n-    private final Protocol<E> protocol;\n-    private final Log log;\n+  private final Map<E, ChannelInboundHandler> decoders = new HashMap<>();\n+  private final Protocol<E> protocol;\n+  private final Log log;\n \n-    public RequestDecoderDispatcher( Protocol<E> protocol, LogProvider logProvider )\n-    {\n-        this.protocol = protocol;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public RequestDecoderDispatcher(Protocol<E> protocol, LogProvider logProvider)\n+  {\n+    this.protocol = protocol;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public void channelRead( ChannelHandlerContext ctx, Object msg ) throws Exception\n+  @Override\n+  public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n+  {\n+    ChannelInboundHandler delegate = protocol.select(decoders);\n+    if (delegate == null)\n     {\n-        ChannelInboundHandler delegate = protocol.select( decoders );\n-        if ( delegate == null )\n-        {\n-            log.warn( \"Unregistered handler for protocol %s\", protocol );\n+      log.warn(\"Unregistered handler for protocol %s\", protocol);\n \n-            /*\n-             * Since we cannot process this message further we need to release the message as per netty doc\n-             * see http://netty.io/wiki/reference-counted-objects.html#inbound-messages\n-             */\n-            ReferenceCountUtil.release( msg );\n-            return;\n-        }\n-        delegate.channelRead( ctx, msg );\n+      /*\n+       * Since we cannot process this message further we need to release the message as per netty doc\n+       * see http://netty.io/wiki/reference-counted-objects.html#inbound-messages\n+       */\n+      ReferenceCountUtil.release(msg);\n+      return;\n     }\n+    delegate.channelRead(ctx, msg);\n+  }\n \n-    public void register( E type, ChannelInboundHandler decoder )\n-    {\n-        assert !decoders.containsKey( type ) : \"registering twice a decoder for the same type (\" + type + \")?\";\n-        decoders.put( type, decoder );\n-    }\n+  public void register(E type, ChannelInboundHandler decoder)\n+  {\n+    assert !decoders.containsKey(type) : \"registering twice a decoder for the same type (\" + type + \")?\";\n+    decoders.put(type, decoder);\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/438/RequestDecoderDispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/438/RequestDecoderDispatcher.java\nindex 2efe069e910..ba420f7c689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/438/RequestDecoderDispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/438/RequestDecoderDispatcher.java\n@@ -32,7 +32,7 @@ import org.neo4j.logging.LogProvider;\n \n public class RequestDecoderDispatcher<E extends Enum<E>> extends ChannelInboundHandlerAdapter\n {\n-    private final Map<E, ChannelInboundHandler> decoders = new HashMap<>();\n+    private final Map<E,ChannelInboundHandler> decoders = new HashMap<>();\n     private final Protocol<E> protocol;\n     private final Log log;\n \n@@ -65,4 +65,4 @@ public class RequestDecoderDispatcher<E extends Enum<E>> extends ChannelInboundH\n         assert !decoders.containsKey( type ) : \"registering twice a decoder for the same type (\" + type + \")?\";\n         decoders.put( type, decoder );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
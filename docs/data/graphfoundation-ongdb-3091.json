{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3091",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3091/LabelScanLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3091/LabelScanLayout.java\nindex 587bb3c8131..f8695686f2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3091/LabelScanLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3091/LabelScanLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -36,120 +37,120 @@ import org.neo4j.io.pagecache.PageCursor;\n  * </li>\n  * </ul>\n  */\n-class LabelScanLayout extends Layout.Adapter<LabelScanKey,LabelScanValue>\n+class LabelScanLayout extends Layout.Adapter<LabelScanKey, LabelScanValue>\n {\n-    /**\n-     * Name part of the {@link #identifier()} value.\n-     */\n-    private static final String IDENTIFIER_NAME = \"LSL\";\n-\n-    /**\n-     * Size of each {@link LabelScanKey}.\n-     */\n-    private static final int KEY_SIZE = Integer.BYTES/*labelId*/ + 6/*idRange*/;\n-\n-    /**\n-     * Compares {@link LabelScanKey}, giving ascending order of {@code labelId} then {@code nodeIdRange}.\n-     */\n-    @Override\n-    public int compare( LabelScanKey o1, LabelScanKey o2 )\n-    {\n-        int labelComparison = Integer.compare( o1.labelId, o2.labelId );\n-        return labelComparison != 0 ? labelComparison : Long.compare( o1.idRange, o2.idRange );\n-    }\n-\n-    @Override\n-    public LabelScanKey newKey()\n-    {\n-        return new LabelScanKey();\n-    }\n-\n-    @Override\n-    public LabelScanKey copyKey( LabelScanKey key, LabelScanKey into )\n-    {\n-        into.labelId = key.labelId;\n-        into.idRange = key.idRange;\n-        return into;\n-    }\n-\n-    @Override\n-    public LabelScanValue newValue()\n-    {\n-        return new LabelScanValue();\n-    }\n-\n-    @Override\n-    public int keySize( LabelScanKey key )\n-    {\n-        return KEY_SIZE;\n-    }\n-\n-    @Override\n-    public int valueSize( LabelScanValue value )\n-    {\n-        return LabelScanValue.RANGE_SIZE_BYTES;\n-    }\n-\n-    @Override\n-    public void writeKey( PageCursor cursor, LabelScanKey key )\n-    {\n-        cursor.putInt( key.labelId );\n-        put6ByteLong( cursor, key.idRange );\n-    }\n-\n-    private static void put6ByteLong( PageCursor cursor, long value )\n-    {\n-        cursor.putInt( (int) value );\n-        cursor.putShort( (short) (value >>> Integer.SIZE) );\n-    }\n-\n-    @Override\n-    public void writeValue( PageCursor cursor, LabelScanValue value )\n-    {\n-        cursor.putLong( value.bits );\n-    }\n-\n-    @Override\n-    public void readKey( PageCursor cursor, LabelScanKey into, int keySize )\n-    {\n-        into.labelId = cursor.getInt();\n-        into.idRange = get6ByteLong( cursor );\n-    }\n-\n-    private static long get6ByteLong( PageCursor cursor )\n-    {\n-        long low4b = cursor.getInt() & 0xFFFFFFFFL;\n-        long high2b = cursor.getShort();\n-        return low4b | (high2b << Integer.SIZE);\n-    }\n-\n-    @Override\n-    public void readValue( PageCursor cursor, LabelScanValue into, int valueSize )\n-    {\n-        into.bits = cursor.getLong();\n-    }\n-\n-    @Override\n-    public boolean fixedSize()\n-    {\n-        return true;\n-    }\n-\n-    @Override\n-    public long identifier()\n-    {\n-        return Layout.namedIdentifier( IDENTIFIER_NAME, LabelScanValue.RANGE_SIZE );\n-    }\n-\n-    @Override\n-    public int majorVersion()\n-    {\n-        return 0;\n-    }\n-\n-    @Override\n-    public int minorVersion()\n-    {\n-        return 1;\n-    }\n+  /**\n+   * Name part of the {@link #identifier()} value.\n+   */\n+  private static final String IDENTIFIER_NAME = \"LSL\";\n+\n+  /**\n+   * Size of each {@link LabelScanKey}.\n+   */\n+  private static final int KEY_SIZE = Integer.BYTES/*labelId*/ + 6/*idRange*/;\n+\n+  /**\n+   * Compares {@link LabelScanKey}, giving ascending order of {@code labelId} then {@code nodeIdRange}.\n+   */\n+  @Override\n+  public int compare(LabelScanKey o1, LabelScanKey o2)\n+  {\n+    int labelComparison = Integer.compare(o1.labelId, o2.labelId);\n+    return labelComparison != 0 ? labelComparison : Long.compare(o1.idRange, o2.idRange);\n+  }\n+\n+  @Override\n+  public LabelScanKey newKey()\n+  {\n+    return new LabelScanKey();\n+  }\n+\n+  @Override\n+  public LabelScanKey copyKey(LabelScanKey key, LabelScanKey into)\n+  {\n+    into.labelId = key.labelId;\n+    into.idRange = key.idRange;\n+    return into;\n+  }\n+\n+  @Override\n+  public LabelScanValue newValue()\n+  {\n+    return new LabelScanValue();\n+  }\n+\n+  @Override\n+  public int keySize(LabelScanKey key)\n+  {\n+    return KEY_SIZE;\n+  }\n+\n+  @Override\n+  public int valueSize(LabelScanValue value)\n+  {\n+    return LabelScanValue.RANGE_SIZE_BYTES;\n+  }\n+\n+  @Override\n+  public void writeKey(PageCursor cursor, LabelScanKey key)\n+  {\n+    cursor.putInt(key.labelId);\n+    put6ByteLong(cursor, key.idRange);\n+  }\n+\n+  private static void put6ByteLong(PageCursor cursor, long value)\n+  {\n+    cursor.putInt((int) value);\n+    cursor.putShort((short) (value >>> Integer.SIZE));\n+  }\n+\n+  @Override\n+  public void writeValue(PageCursor cursor, LabelScanValue value)\n+  {\n+    cursor.putLong(value.bits);\n+  }\n+\n+  @Override\n+  public void readKey(PageCursor cursor, LabelScanKey into, int keySize)\n+  {\n+    into.labelId = cursor.getInt();\n+    into.idRange = get6ByteLong(cursor);\n+  }\n+\n+  private static long get6ByteLong(PageCursor cursor)\n+  {\n+    long low4b = cursor.getInt() & 0xFFFFFFFFL;\n+    long high2b = cursor.getShort();\n+    return low4b | (high2b << Integer.SIZE);\n+  }\n+\n+  @Override\n+  public void readValue(PageCursor cursor, LabelScanValue into, int valueSize)\n+  {\n+    into.bits = cursor.getLong();\n+  }\n+\n+  @Override\n+  public boolean fixedSize()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+  public long identifier()\n+  {\n+    return Layout.namedIdentifier(IDENTIFIER_NAME, LabelScanValue.RANGE_SIZE);\n+  }\n+\n+  @Override\n+  public int majorVersion()\n+  {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int minorVersion()\n+  {\n+    return 1;\n+  }\n }\n",
            "diff_size": 116
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3091/LabelScanLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3091/LabelScanLayout.java\nindex 587bb3c8131..9a174bcf42e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3091/LabelScanLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3091/LabelScanLayout.java\n@@ -99,8 +99,8 @@ class LabelScanLayout extends Layout.Adapter<LabelScanKey,LabelScanValue>\n \n     private static void put6ByteLong( PageCursor cursor, long value )\n     {\n-        cursor.putInt( (int) value );\n-        cursor.putShort( (short) (value >>> Integer.SIZE) );\n+        cursor.putInt( ( int) value );\n+        cursor.putShort( (short) ( value >>> Integer.SIZE) );\n     }\n \n     @Override\n@@ -120,7 +120,7 @@ class LabelScanLayout extends Layout.Adapter<LabelScanKey,LabelScanValue>\n     {\n         long low4b = cursor.getInt() & 0xFFFFFFFFL;\n         long high2b = cursor.getShort();\n-        return low4b | (high2b << Integer.SIZE);\n+        return low4b | ( high2b << Integer.SIZE);\n     }\n \n     @Override\n@@ -152,4 +152,4 @@ class LabelScanLayout extends Layout.Adapter<LabelScanKey,LabelScanValue>\n     {\n         return 1;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
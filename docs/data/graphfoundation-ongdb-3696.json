{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3696",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3696/MethodSignatureCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3696/MethodSignatureCompiler.java\nindex 4b68474689a..e46e4213eca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3696/MethodSignatureCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3696/MethodSignatureCompiler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.lang.reflect.Method;\n@@ -43,94 +44,92 @@ import static org.neo4j.internal.kernel.api.procs.FieldSignature.inputField;\n  */\n public class MethodSignatureCompiler\n {\n-    private final TypeMappers typeMappers;\n+  private final TypeMappers typeMappers;\n+\n+  public MethodSignatureCompiler(TypeMappers typeMappers)\n+  {\n+    this.typeMappers = typeMappers;\n+  }\n \n-    public MethodSignatureCompiler( TypeMappers typeMappers )\n+  public List<Neo4jTypes.AnyType> inputTypesFor(Method method) throws ProcedureException\n+  {\n+    Type[] types = method.getGenericParameterTypes();\n+    List<Neo4jTypes.AnyType> neoTypes = new ArrayList<>(types.length);\n+    for (Type type : types)\n     {\n-        this.typeMappers = typeMappers;\n+      neoTypes.add(typeMappers.toNeo4jType(type));\n     }\n \n-    public List<Neo4jTypes.AnyType> inputTypesFor( Method method ) throws ProcedureException\n+    return neoTypes;\n+  }\n+\n+  public List<FieldSignature> signatureFor(Method method) throws ProcedureException\n+  {\n+    Parameter[] params = method.getParameters();\n+    Type[] types = method.getGenericParameterTypes();\n+    List<FieldSignature> signature = new ArrayList<>(params.length);\n+    boolean seenDefault = false;\n+    for (int i = 0; i < params.length; i++)\n     {\n-        Type[] types = method.getGenericParameterTypes();\n-        List<Neo4jTypes.AnyType> neoTypes = new ArrayList<>( types.length );\n-        for ( Type type : types )\n+      Parameter param = params[i];\n+      Type type = types[i];\n+\n+      if (!param.isAnnotationPresent(Name.class))\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" +\n+                \"Please add the annotation, recompile the class and try again.\",\n+            i, method.getName(), Name.class.getSimpleName());\n+      }\n+      Name parameter = param.getAnnotation(Name.class);\n+      String name = parameter.value();\n+\n+      if (name.trim().length() == 0)\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+            \"Argument at position %d in method `%s` is annotated with a name,%n\" +\n+                \"but the name is empty, please provide a non-empty name for the argument.\",\n+            i, method.getName());\n+      }\n+\n+      try\n+      {\n+        DefaultValueConverter valueConverter = typeMappers.converterFor(type);\n+        Optional<DefaultParameterValue> defaultValue = valueConverter.defaultValue(parameter);\n+        //it is not allowed to have holes in default values\n+        if (seenDefault && !defaultValue.isPresent())\n         {\n-            neoTypes.add( typeMappers.toNeo4jType( type ) );\n+          throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+              \"Non-default argument at position %d with name %s in method %s follows default argument. \" +\n+                  \"Add a default value or rearrange arguments so that the non-default values comes first.\",\n+              i, parameter.value(), method.getName());\n         }\n \n-        return neoTypes;\n-    }\n+        seenDefault = defaultValue.isPresent();\n \n-    public List<FieldSignature> signatureFor( Method method ) throws ProcedureException\n-    {\n-        Parameter[] params = method.getParameters();\n-        Type[] types = method.getGenericParameterTypes();\n-        List<FieldSignature> signature = new ArrayList<>( params.length );\n-        boolean seenDefault = false;\n-        for ( int i = 0; i < params.length; i++ )\n+        // Currently only byte[] is not supported as a Cypher type, so we have specific conversion here.\n+        // Should we add more unsupported types we should generalize this.\n+        if (type == byte[].class)\n         {\n-            Parameter param = params[i];\n-            Type type = types[i];\n-\n-            if ( !param.isAnnotationPresent( Name.class ) )\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" +\n-                        \"Please add the annotation, recompile the class and try again.\",\n-                        i, method.getName(), Name.class.getSimpleName() );\n-            }\n-            Name parameter = param.getAnnotation( Name.class );\n-            String name = parameter.value();\n-\n-            if ( name.trim().length() == 0 )\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is annotated with a name,%n\" +\n-                        \"but the name is empty, please provide a non-empty name for the argument.\",\n-                        i, method.getName() );\n-            }\n-\n-            try\n-            {\n-                DefaultValueConverter valueConverter = typeMappers.converterFor( type );\n-                Optional<DefaultParameterValue> defaultValue = valueConverter.defaultValue( parameter );\n-                //it is not allowed to have holes in default values\n-                if ( seenDefault && !defaultValue.isPresent() )\n-                {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Non-default argument at position %d with name %s in method %s follows default argument. \" +\n-                            \"Add a default value or rearrange arguments so that the non-default values comes first.\",\n-                            i, parameter.value(), method.getName() );\n-                }\n-\n-                seenDefault = defaultValue.isPresent();\n-\n-                // Currently only byte[] is not supported as a Cypher type, so we have specific conversion here.\n-                // Should we add more unsupported types we should generalize this.\n-                if ( type == byte[].class )\n-                {\n-                    FieldSignature.InputMapper mapper = new ByteArrayConverter();\n-                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue, mapper ) ).orElseGet(\n-                            () -> inputField( name, valueConverter.type(), mapper ) ) );\n-                }\n-                else\n-                {\n-                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue ) ).orElseGet(\n-                            () -> inputField( name, valueConverter.type() ) ) );\n-                }\n-            }\n-            catch ( ProcedureException e )\n-            {\n-                throw new ProcedureException( e.status(),\n-                        \"Argument `%s` at position %d in `%s` with%n\" +\n-                        \"type `%s` cannot be converted to a Neo4j type: %s\",\n-                        name, i, method.getName(), param.getType().getSimpleName(),\n-                        e.getMessage() );\n-            }\n-\n+          FieldSignature.InputMapper mapper = new ByteArrayConverter();\n+          signature.add(defaultValue.map(neo4jValue -> inputField(name, valueConverter.type(), neo4jValue, mapper)).orElseGet(\n+              () -> inputField(name, valueConverter.type(), mapper)));\n+        } else\n+        {\n+          signature.add(defaultValue.map(neo4jValue -> inputField(name, valueConverter.type(), neo4jValue)).orElseGet(\n+              () -> inputField(name, valueConverter.type())));\n         }\n+      } catch (ProcedureException e)\n+      {\n+        throw new ProcedureException(e.status(),\n+            \"Argument `%s` at position %d in `%s` with%n\" +\n+                \"type `%s` cannot be converted to a Neo4j type: %s\",\n+            name, i, method.getName(), param.getType().getSimpleName(),\n+            e.getMessage());\n+      }\n \n-        return signature;\n     }\n+\n+    return signature;\n+  }\n }\n",
            "diff_size": 134
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 284).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 261).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 320).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3696/MethodSignatureCompiler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3696/MethodSignatureCompiler.java\nindex 4b68474689a..dae85f6578c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3696/MethodSignatureCompiler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3696/MethodSignatureCompiler.java\n@@ -72,23 +72,16 @@ public class MethodSignatureCompiler\n         {\n             Parameter param = params[i];\n             Type type = types[i];\n-\n-            if ( !param.isAnnotationPresent( Name.class ) )\n+if ( !param.isAnnotationPresent( Name.class ) )\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" +\n-                        \"Please add the annotation, recompile the class and try again.\",\n-                        i, method.getName(), Name.class.getSimpleName() );\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Argument at position %d in method `%s` is missing an `@%s` annotation.%n\" + \"Please add the annotation, recompile the class and try again.\", i, method.getName(), Name.class.getSimpleName() );\n             }\n-            Name parameter = param.getAnnotation( Name.class );\n-            String name = parameter.value();\n \n-            if ( name.trim().length() == 0 )\n+Name parameter = param.getAnnotation( Name.class );\n+            String name = parameter.value();\n+if ( name.trim().length() == 0 )\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                        \"Argument at position %d in method `%s` is annotated with a name,%n\" +\n-                        \"but the name is empty, please provide a non-empty name for the argument.\",\n-                        i, method.getName() );\n+                throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Argument at position %d in method `%s` is annotated with a name,%n\" + \"but the name is empty, please provide a non-empty name for the argument.\", i, method.getName() );\n             }\n \n             try\n@@ -98,10 +91,7 @@ public class MethodSignatureCompiler\n                 //it is not allowed to have holes in default values\n                 if ( seenDefault && !defaultValue.isPresent() )\n                 {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Non-default argument at position %d with name %s in method %s follows default argument. \" +\n-                            \"Add a default value or rearrange arguments so that the non-default values comes first.\",\n-                            i, parameter.value(), method.getName() );\n+                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed, \"Non-default argument at position %d with name %s in method %s follows default argument. \" + \"Add a default value or rearrange arguments so that the non-default values comes first.\", i, parameter.value(), method.getName() );\n                 }\n \n                 seenDefault = defaultValue.isPresent();\n@@ -111,26 +101,19 @@ public class MethodSignatureCompiler\n                 if ( type == byte[].class )\n                 {\n                     FieldSignature.InputMapper mapper = new ByteArrayConverter();\n-                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue, mapper ) ).orElseGet(\n-                            () -> inputField( name, valueConverter.type(), mapper ) ) );\n+                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue, mapper ) ).orElseGet(() -> inputField( name, valueConverter.type(), mapper ) ) );\n                 }\n                 else\n                 {\n-                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue ) ).orElseGet(\n-                            () -> inputField( name, valueConverter.type() ) ) );\n-                }\n+                    signature.add( defaultValue.map( neo4jValue -> inputField( name, valueConverter.type(), neo4jValue ) ).orElseGet(() -> inputField( name, valueConverter.type() ) ) );\n+    }\n             }\n             catch ( ProcedureException e )\n             {\n-                throw new ProcedureException( e.status(),\n-                        \"Argument `%s` at position %d in `%s` with%n\" +\n-                        \"type `%s` cannot be converted to a Neo4j type: %s\",\n-                        name, i, method.getName(), param.getType().getSimpleName(),\n-                        e.getMessage() );\n+                throw new ProcedureException( e.status(), \"Argument `%s` at position %d in `%s` with%n\" + \"type `%s` cannot be converted to a Neo4j type: %s\", name, i, method.getName(), param.getType().getSimpleName(), e.getMessage() );\n             }\n-\n-        }\n+    }\n \n         return signature;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "decorators-squad-eo-yaml",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "117",
                "severity": "error",
                "message": "@param tag description should start with capital letter",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "     *\n     * @param nodeClass Requested {@link YamlNode} class.\n     * @param nodeType  Requested {@link YamlNode} type {@link Node}.\n     * @param <T>       Requested {@link YamlNode} class type.\n     * @return Requested {@link YamlNode}.\n     * @throws YamlReadingException If the node type is not",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "117",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "118",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/40/YamlNode.java\nindex 352f1e71e77..901bea2077e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/40/YamlNode.java\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.eoyaml;\n \n import com.amihaiemil.eoyaml.exceptions.YamlReadingException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "117",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/40/YamlNode.java\nindex 352f1e71e77..802ae0a95a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/40/YamlNode.java\n@@ -127,8 +127,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n         if (this.type() != nodeType) {\n             throw new YamlReadingException(\n                 \"The YamlNode is not a \" + nodeClass.getSimpleName() + '!');\n-        }\n+    }\n         return nodeClass.cast(this);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/40/YamlNode.java\nindex 352f1e71e77..c73fc741b95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/40/YamlNode.java\n@@ -37,6 +37,8 @@ import com.amihaiemil.eoyaml.exceptions.YamlReadingException;\n  * @see <a href=\"http://yaml.org/spec/1.2/spec.html#node/\">Spec1.2/node</a>\n  * @since 1.0.0\n  */\n+\n+\n public interface YamlNode extends Comparable<YamlNode> {\n \n     /**\n@@ -45,6 +47,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @return Comment. If there is no comment, it will return\n      * an \"empty\" comment (an instance of Comment with empty-string value()).\n      */\n+\n+\n     Comment comment();\n \n     /**\n@@ -52,6 +56,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n      *\n      * @return Node type.\n      */\n+\n+\n     Node type();\n \n     /**\n@@ -63,8 +69,9 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n-    default Scalar asScalar()\n-        throws YamlReadingException, ClassCastException {\n+\n+\n+    default Scalar asScalar() throws YamlReadingException, ClassCastException {\n         return this.asClass(Scalar.class, Node.SCALAR);\n     }\n \n@@ -77,8 +84,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n-    default YamlMapping asMapping()\n-        throws YamlReadingException, ClassCastException {\n+\n+    default YamlMapping asMapping() throws YamlReadingException, ClassCastException {\n         return this.asClass(YamlMapping.class, Node.MAPPING);\n     }\n \n@@ -91,8 +98,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n-    default YamlSequence asSequence()\n-        throws YamlReadingException, ClassCastException {\n+\n+    default YamlSequence asSequence() throws YamlReadingException, ClassCastException {\n         return this.asClass(YamlSequence.class, Node.SEQUENCE);\n     }\n \n@@ -105,8 +112,8 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n-    default YamlStream asStream()\n-        throws YamlReadingException, ClassCastException {\n+\n+    default YamlStream asStream() throws YamlReadingException, ClassCastException {\n         return this.asClass(YamlStream.class, Node.STREAM);\n     }\n \n@@ -122,13 +129,17 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n-    default <T extends YamlNode> T asClass(Class<T> nodeClass, Node nodeType)\n-        throws YamlReadingException, ClassCastException {\n+\n+    default <T extends YamlNode> T asClass(Class<T> nodeClass,\n+                                           Node nodeType) throws YamlReadingException, ClassCastException {\n         if (this.type() != nodeType) {\n             throw new YamlReadingException(\n-                \"The YamlNode is not a \" + nodeClass.getSimpleName() + '!');\n+                \"The YamlNode is not a \" + nodeClass.getSimpleName() + '!'\n+            );\n         }\n-        return nodeClass.cast(this);\n+        return nodeClass.cast(\n+            this);\n     }\n \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "117",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "116",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/40/YamlNode.java\nindex 352f1e71e77..ff4e9609adf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/40/YamlNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/40/YamlNode.java\n@@ -109,7 +109,6 @@ public interface YamlNode extends Comparable<YamlNode> {\n         throws YamlReadingException, ClassCastException {\n         return this.asClass(YamlStream.class, Node.STREAM);\n     }\n-\n     /**\n      * Gives the T instance from node class and node type.\n      *\n@@ -122,6 +121,7 @@ public interface YamlNode extends Comparable<YamlNode> {\n      * @throws ClassCastException   If the node type couldn't\n      *                              defined correctly.\n      */\n+\n     default <T extends YamlNode> T asClass(Class<T> nodeClass, Node nodeType)\n         throws YamlReadingException, ClassCastException {\n         if (this.type() != nodeType) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
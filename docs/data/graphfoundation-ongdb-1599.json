{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1599",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1599/GraphDatabaseCypherService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1599/GraphDatabaseCypherService.java\nindex 59bc0dcdb34..f54c3920ff1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1599/GraphDatabaseCypherService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1599/GraphDatabaseCypherService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import java.net.URL;\n@@ -34,50 +35,50 @@ import org.neo4j.kernel.impl.factory.GraphDatabaseFacade;\n \n public class GraphDatabaseCypherService implements GraphDatabaseQueryService\n {\n-    private final GraphDatabaseFacade graph;\n-    private final DbmsOperations dbmsOperations;\n+  private final GraphDatabaseFacade graph;\n+  private final DbmsOperations dbmsOperations;\n \n-    public GraphDatabaseCypherService( GraphDatabaseService graph )\n-    {\n-        this.graph = (GraphDatabaseFacade) graph;\n-        this.dbmsOperations = getDependencyResolver().resolveDependency( DbmsOperations.class );\n-    }\n+  public GraphDatabaseCypherService(GraphDatabaseService graph)\n+  {\n+    this.graph = (GraphDatabaseFacade) graph;\n+    this.dbmsOperations = getDependencyResolver().resolveDependency(DbmsOperations.class);\n+  }\n \n-    @Override\n-    public DependencyResolver getDependencyResolver()\n-    {\n-        return graph.getDependencyResolver();\n-    }\n+  @Override\n+  public DependencyResolver getDependencyResolver()\n+  {\n+    return graph.getDependencyResolver();\n+  }\n \n-    @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext )\n-    {\n-        return graph.beginTransaction( type, loginContext );\n-    }\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext)\n+  {\n+    return graph.beginTransaction(type, loginContext);\n+  }\n \n-    @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext,\n-            long timeout, TimeUnit unit )\n-    {\n-        return graph.beginTransaction( type, loginContext, timeout, unit );\n-    }\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext,\n+                                              long timeout, TimeUnit unit)\n+  {\n+    return graph.beginTransaction(type, loginContext, timeout, unit);\n+  }\n \n-    @Override\n-    public URL validateURLAccess( URL url ) throws URLAccessValidationError\n-    {\n-        return graph.validateURLAccess( url );\n-    }\n+  @Override\n+  public URL validateURLAccess(URL url) throws URLAccessValidationError\n+  {\n+    return graph.validateURLAccess(url);\n+  }\n \n-    @Override\n-    public DbmsOperations getDbmsOperations()\n-    {\n-        return dbmsOperations;\n-    }\n+  @Override\n+  public DbmsOperations getDbmsOperations()\n+  {\n+    return dbmsOperations;\n+  }\n \n-    // This provides backwards compatibility to the older API for places that cannot (yet) stop using it.\n-    // TODO: Remove this when possible (remove RULE, remove older compilers)\n-    public GraphDatabaseFacade getGraphDatabaseService()\n-    {\n-        return graph;\n-    }\n+  // This provides backwards compatibility to the older API for places that cannot (yet) stop using it.\n+  // TODO: Remove this when possible (remove RULE, remove older compilers)\n+  public GraphDatabaseFacade getGraphDatabaseService()\n+  {\n+    return graph;\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1599/GraphDatabaseCypherService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1599/GraphDatabaseCypherService.java\nindex 59bc0dcdb34..659de6fb78d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1599/GraphDatabaseCypherService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1599/GraphDatabaseCypherService.java\n@@ -80,4 +80,4 @@ public class GraphDatabaseCypherService implements GraphDatabaseQueryService\n     {\n         return graph;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
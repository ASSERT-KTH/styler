{
    "project_name": "neo4j-neo4j",
    "error_id": "2548",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2548/TokenAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2548/TokenAccess.java\nindex d0782918e20..bc1497fcb7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2548/TokenAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2548/TokenAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.Iterator;\n@@ -38,83 +39,83 @@ public abstract class TokenAccess<R>\n     public static final TokenAccess<RelationshipType> RELATIONSHIP_TYPES = new TokenAccess<>()\n     {\n         @Override\n-        Iterator<NamedToken> tokens( TokenRead read )\n+        Iterator<NamedToken> tokens(TokenRead read)\n         {\n             return read.relationshipTypesGetAllTokens();\n         }\n \n         @Override\n-        RelationshipType token( NamedToken token )\n+        RelationshipType token(NamedToken token)\n         {\n-            return RelationshipType.withName( token.name() );\n+            return RelationshipType.withName(token.name());\n         }\n \n         @Override\n-        boolean inUse( KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId )\n+        boolean inUse(KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId)\n         {\n-            return hasAny( schemaReadCore.indexesGetForRelationshipType( tokenId ) ) ||                // used by indexes\n-                    hasAny( schemaReadCore.constraintsGetForRelationshipType( tokenId ) ) ||           // used by constraint\n-                    transaction.dataRead().countsForRelationship( ANY_LABEL, tokenId, ANY_LABEL ) > 0; // used by data\n+            return hasAny(schemaReadCore.indexesGetForRelationshipType(tokenId)) ||                // used by indexes\n+              hasAny(schemaReadCore.constraintsGetForRelationshipType(tokenId)) ||           // used by constraint\n+              transaction.dataRead().countsForRelationship(ANY_LABEL, tokenId, ANY_LABEL) > 0; // used by data\n         }\n     };\n     public static final TokenAccess<Label> LABELS = new TokenAccess<>()\n     {\n         @Override\n-        Iterator<NamedToken> tokens( TokenRead read )\n+        Iterator<NamedToken> tokens(TokenRead read)\n         {\n             return read.labelsGetAllTokens();\n         }\n \n         @Override\n-        Label token( NamedToken token )\n+        Label token(NamedToken token)\n         {\n-            return label( token.name() );\n+            return label(token.name());\n         }\n \n         @Override\n-        boolean inUse( KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId )\n+        boolean inUse(KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId)\n         {\n-            return hasAny( schemaReadCore.indexesGetForLabel( tokenId ) ) ||     // used by index\n-                   hasAny( schemaReadCore.constraintsGetForLabel( tokenId ) ) || // used by constraint\n-                   transaction.dataRead().countsForNode( tokenId ) > 0;          // used by data\n+            return hasAny(schemaReadCore.indexesGetForLabel(tokenId)) ||     // used by index\n+              hasAny(schemaReadCore.constraintsGetForLabel(tokenId)) || // used by constraint\n+              transaction.dataRead().countsForNode(tokenId) > 0;          // used by data\n         }\n     };\n \n     public static final TokenAccess<String> PROPERTY_KEYS = new TokenAccess<>()\n     {\n         @Override\n-        Iterator<NamedToken> tokens( TokenRead read )\n+        Iterator<NamedToken> tokens(TokenRead read)\n         {\n             return read.propertyKeyGetAllTokens();\n         }\n \n         @Override\n-        String token( NamedToken token )\n+        String token(NamedToken token)\n         {\n             return token.name();\n         }\n \n         @Override\n-        boolean inUse( KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId )\n+        boolean inUse(KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId)\n         {\n             return true; // TODO: add support for telling if a property key is in use or not\n         }\n     };\n \n-    private static <T> Iterator<T> inUse( KernelTransaction transaction, TokenAccess<T> access )\n+    private static <T> Iterator<T> inUse(KernelTransaction transaction, TokenAccess<T> access)\n     {\n         SchemaReadCore schemaReadCore = transaction.schemaRead().snapshot();\n-        return new TokenIterator<>( transaction, access )\n+        return new TokenIterator<>(transaction, access)\n         {\n             @Override\n             protected T fetchNextOrNull()\n             {\n-                while ( tokens.hasNext() )\n+                while (tokens.hasNext())\n                 {\n                     NamedToken token = tokens.next();\n-                    if ( this.access.inUse( transaction, schemaReadCore, token.id() ) )\n+                    if (this.access.inUse(transaction, schemaReadCore, token.id()))\n                     {\n-                        return this.access.token( token );\n+                        return this.access.token(token);\n                     }\n                 }\n                 return null;\n@@ -122,18 +123,17 @@ public abstract class TokenAccess<R>\n         };\n     }\n \n-    private static <T> Iterator<T> all( KernelTransaction transaction, TokenAccess<T> access )\n+    private static <T> Iterator<T> all(KernelTransaction transaction, TokenAccess<T> access)\n     {\n-        return new TokenIterator<>( transaction, access )\n+        return new TokenIterator<>(transaction, access)\n         {\n             @Override\n             protected T fetchNextOrNull()\n             {\n-                if ( tokens.hasNext() )\n+                if (tokens.hasNext())\n                 {\n-                    return access.token( tokens.next() );\n-                }\n-                else\n+                    return access.token(tokens.next());\n+                } else\n                 {\n                     return null;\n                 }\n@@ -141,23 +141,23 @@ public abstract class TokenAccess<R>\n         };\n     }\n \n-    public final Iterator<R> inUse( KernelTransaction transaction )\n+    public final Iterator<R> inUse(KernelTransaction transaction)\n     {\n-        return inUse( transaction, this );\n+        return inUse(transaction, this);\n     }\n \n-    public final Iterator<R> all( KernelTransaction transaction )\n+    public final Iterator<R> all(KernelTransaction transaction)\n     {\n-        return all( transaction, this );\n+        return all(transaction, this);\n     }\n \n-    private static boolean hasAny( Iterator<?> iter )\n+    private static boolean hasAny(Iterator<?> iter)\n     {\n-        if ( iter.hasNext() )\n+        if (iter.hasNext())\n         {\n             return true;\n         }\n-        if ( iter instanceof Resource )\n+        if (iter instanceof Resource)\n         {\n             ((Resource) iter).close();\n         }\n@@ -169,16 +169,16 @@ public abstract class TokenAccess<R>\n         protected final TokenAccess<T> access;\n         protected final Iterator<NamedToken> tokens;\n \n-        private TokenIterator( KernelTransaction transaction, TokenAccess<T> access )\n+        private TokenIterator(KernelTransaction transaction, TokenAccess<T> access)\n         {\n             this.access = access;\n-            this.tokens = access.tokens( transaction.tokenRead() );\n+            this.tokens = access.tokens(transaction.tokenRead());\n         }\n     }\n \n-    abstract Iterator<NamedToken> tokens( TokenRead tokenRead );\n+    abstract Iterator<NamedToken> tokens(TokenRead tokenRead);\n \n-    abstract R token( NamedToken token );\n+    abstract R token(NamedToken token);\n \n-    abstract boolean inUse( KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId );\n+    abstract boolean inUse(KernelTransaction transaction, SchemaReadCore schemaReadCore, int tokenId);\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
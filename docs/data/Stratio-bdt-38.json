{
    "project_name": "Stratio-bdt",
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @param spec object\n     */\n    public GosecSpec(CommonG spec) {\n        this.commonspec = spec;\n        restSpec = new RestSpec(spec);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/38/GosecSpec.java\nindex 89dfa884b64..8d4fbedc126 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/38/GosecSpec.java\n@@ -48,6 +48,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/38/GosecSpec.java\nindex 89dfa884b64..e8bb9d64849 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/38/GosecSpec.java\n@@ -43,6 +43,7 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n+\n     /**\n      * Generic constructor.\n      *\n@@ -54,14 +55,20 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResource(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type, modifications);\n+    public void createResource(String resource, String resourceId, String endPoint,\n+                               String loginInfo, String baseData, String type,\n+                               DataTable modifications) throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type,\n+            modifications);\n \n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type, modifications);\n+    public void createResourceIfNotExist(String resource, String resourceId, String endPoint,\n+                                         String loginInfo, String baseData, String type,\n+                                         DataTable modifications) throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type,\n+            modifications);\n     }\n \n     /**\n@@ -77,7 +84,9 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications\n      * @throws Exception\n      */\n-    private void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, boolean doesNotExist, String baseData, String type, DataTable modifications) throws Exception {\n+    private void createResourceIfNotExist(String resource, String resourceId, String endPoint,\n+                                          String loginInfo, boolean doesNotExist, String baseData,\n+                                          String type, DataTable modifications) throws Exception {\n         Integer expectedStatusCreate = 201;\n         Integer expectedStatusDelete = 200;\n         String endPointResource = \"\";\n@@ -118,7 +127,8 @@ public class GosecSpec extends BaseGSpec {\n         if (gosecVersion != null) {\n             String[] gosecVersionArray = gosecVersion.split(\"\\\\.\");\n             // Add inputSourceType if Gosec >= 1.4.x\n-            if (Integer.parseInt(gosecVersionArray[0]) >= 1 && Integer.parseInt(gosecVersionArray[1]) >= 4) {\n+            if (Integer.parseInt(gosecVersionArray[0]) >= 1 &&\n+                Integer.parseInt(gosecVersionArray[1]) >= 4) {\n                 addSourceType = true;\n             }\n         }\n@@ -129,13 +139,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -151,28 +166,35 @@ public class GosecSpec extends BaseGSpec {\n \n             if (commonspec.getResponse().getStatusCode() != 200) {\n                 if (resource.equals(\"user\") && (addSourceType)) {\n-                    commonspec.getLogger().warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n-                    List<String> newField = Arrays.asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n+                    commonspec.getLogger()\n+                        .warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n+                    List<String> newField =\n+                        Arrays.asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n                     newModifications.add(newField);\n                 }\n                 // Create datatable with modified data\n                 DataTable gosecModifications = DataTable.create(newModifications);\n                 // Send POST request\n-                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type, gosecModifications);\n+                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type,\n+                    gosecModifications);\n                 try {\n                     if (commonspec.getResponse().getStatusCode() == 409) {\n                         commonspec.getLogger().warn(\"The resource {} already exists\", resourceId);\n                     } else {\n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusCreate);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusCreate);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error creating Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger()\n+                                .warn(\"Error creating Resource {}: {}\", resourceId,\n+                                    commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n                         commonspec.getLogger().warn(\"Resource {} created\", resourceId);\n                     }\n                 } catch (Exception e) {\n-                    commonspec.getLogger().warn(\"Error creating user {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger().warn(\"Error creating user {}: {}\", resourceId,\n+                        commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n@@ -180,25 +202,32 @@ public class GosecSpec extends BaseGSpec {\n                 if (resource.equals(\"policy\") && commonspec.getResponse().getStatusCode() == 200) {\n                     if (doesNotExist) {\n                         // Policy already exists\n-                        commonspec.getLogger().warn(\"Policy {} already exist - not created\", resourceId);\n+                        commonspec.getLogger()\n+                            .warn(\"Policy {} already exist - not created\", resourceId);\n \n                     } else {\n                         // Delete policy if exists\n-                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type, modifications);\n+                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type,\n+                            modifications);\n                         commonspec.getLogger().warn(\"Policy {} deleted\", resourceId);\n \n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusDelete);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusDelete);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error deleting Policy {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger().warn(\"Error deleting Policy {}: {}\", resourceId,\n+                                commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n-                        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, doesNotExist, baseData, type, modifications);\n+                        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo,\n+                            doesNotExist, baseData, type, modifications);\n                     }\n                 }\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}{}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger()\n+                .error(\"Rest Host or Rest Port are not initialized {}{}\", commonspec.getRestHost(),\n+                    commonspec.getRestPort());\n             throw e;\n         }\n     }\n@@ -213,7 +242,8 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception\n      */\n     @When(\"^I delete '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it exists$\")\n-    public void deleteUserIfExists(String resource, String resourceId, String endPoint, String loginInfo) throws Exception {\n+    public void deleteUserIfExists(String resource, String resourceId, String endPoint,\n+                                   String loginInfo) throws Exception {\n         Integer[] expectedStatusDelete = {200, 204};\n         String endPointResource = \"\";\n         String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n@@ -239,13 +269,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -269,14 +304,18 @@ public class GosecSpec extends BaseGSpec {\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusDelete);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().warn(\"Error deleting Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger().warn(\"Error deleting Resource {}: {}\", resourceId,\n+                        commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().warn(\"Resource {} with id {} not found so it's not deleted\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .warn(\"Resource {} with id {} not found so it's not deleted\", resource,\n+                        resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n@@ -292,24 +331,30 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                 commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining ID from policy \" + policyName);\n                 }\n             }\n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", endPoint);\n+                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                    commonspec.getResponse().getStatusCode() + \")\", endPoint);\n             }\n         }\n     }\n \n     @When(\"^I create tenant '(.+?)' if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createTenant(String tenantId, String baseData, String type, DataTable modifications) throws Exception {\n+    public void createTenant(String tenantId, String baseData, String type, DataTable modifications)\n+        throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n         String endPointResource = endPoint + \"/\" + tenantId;\n         Integer expectedStatus = 201;\n@@ -322,7 +367,8 @@ public class GosecSpec extends BaseGSpec {\n             try {\n                 assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error creating Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger().warn(\"Error creating Tenant {}: {}\", tenantId,\n+                    commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         }\n@@ -341,7 +387,8 @@ public class GosecSpec extends BaseGSpec {\n             try {\n                 assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error deleting Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger().warn(\"Error deleting Tenant {}: {}\", tenantId,\n+                    commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         } else {\n@@ -350,7 +397,8 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I include '(user|group)' '(.+?)' in tenant '(.+?)'$\")\n-    public void includeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n+    public void includeResourceInTenant(String resource, String resourceId, String tenantId)\n+        throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n         String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n         String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n@@ -365,28 +413,41 @@ public class GosecSpec extends BaseGSpec {\n         }\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n-                        commonspec.getLogger().debug(\"{} is already included in tenant\", resourceId);\n+                    JsonObject jsonTenantInfo = new JsonObject(\n+                        JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values()\n+                        .contains(JsonValue.valueOf(resourceId))) {\n+                        commonspec.getLogger()\n+                            .debug(\"{} is already included in tenant\", resourceId);\n                     } else {\n                         ((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).add(resourceId);\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\", \"\");\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null, endPointTenant,\n+                                JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\",\n+                                \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error adding \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error adding \" + resource + \" \" + resourceId + \" in tenant \" +\n+                                    tenantId + \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId + \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n                 throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n@@ -397,9 +458,11 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n                 fail(\"Error obtaining ID from profile \" + profileName);\n             }\n         } else {\n@@ -408,7 +471,8 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I get json from( tag)? policy with name '(.+?)' and save it( in environment variable '(.*?)')?( in file '(.*?)')?$\")\n-    public void getPolicyJson(String tag, String policyName, String envVar, String fileName) throws Exception {\n+    public void getPolicyJson(String tag, String policyName, String envVar, String fileName)\n+        throws Exception {\n         String endPoint = \"/service/gosecmanagement/api/policy\";\n         String newEndPoint = \"/service/gosecmanagement/api/policies\";\n         String errorMessage = \"api/policies\";\n@@ -423,31 +487,42 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             }\n-            restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\",\n+                \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null,\n+                null);\n \n             if (envVar != null) {\n                 ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n \n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining JSON from policy \" + policyName);\n                 }\n             }\n \n             if (fileName != null) {\n                 // Create file (temporary) and set path to be accessible within test\n-                File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n+                File tempDirectory =\n+                    new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                 String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                commonspec.getLogger()\n+                    .debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n                 // Note that this Writer will delete the file if it exists\n-                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                Writer out = new BufferedWriter(\n+                    new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                        StandardCharsets.UTF_8));\n                 try {\n                     out.write(commonspec.getResponse().getResponse());\n                 } catch (Exception e) {\n-                    commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                    commonspec.getLogger()\n+                        .error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile,\n+                            e.toString());\n                 } finally {\n                     out.close();\n                 }\n@@ -457,33 +532,49 @@ public class GosecSpec extends BaseGSpec {\n \n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                commonspec.getLogger().warn(\"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\", endPoint);\n+                commonspec.getLogger().warn(\n+                    \"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\",\n+                    endPoint);\n                 restSpec.sendRequestNoDataTable(\"GET\", newEndPoint, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + policyName +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + policyName +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                     }\n-                    restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(), null, null, null);\n+                    restSpec.sendRequestNoDataTable(\"GET\",\n+                        \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(),\n+                        null, null, null);\n \n                     if (envVar != null) {\n                         ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n-                        if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                        if (ThreadProperty.get(envVar) == null ||\n+                            ThreadProperty.get(envVar).trim().equals(\"\")) {\n                             fail(\"Error obtaining JSON from policy \" + policyName);\n                         }\n                     }\n \n                     if (fileName != null) {\n                         // Create file (temporary) and set path to be accessible within test\n-                        File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n+                        File tempDirectory =\n+                            new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                        commonspec.getLogger()\n+                            .debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n                         // Note that this Writer will delete the file if it exists\n-                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                        Writer out = new BufferedWriter(\n+                            new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                StandardCharsets.UTF_8));\n                         try {\n                             out.write(commonspec.getResponse().getResponse());\n                         } catch (Exception e) {\n-                            commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                            commonspec.getLogger()\n+                                .error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile,\n+                                    e.toString());\n                         } finally {\n                             out.close();\n                         }\n@@ -492,10 +583,12 @@ public class GosecSpec extends BaseGSpec {\n                     }\n \n                 } else {\n-                    fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n+                    fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                        commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n                 }\n             } else {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage2);\n+                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                    commonspec.getResponse().getStatusCode() + \")\", errorMessage2);\n             }\n         }\n     }\n@@ -514,10 +607,12 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            JsonObject jsonGroupInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+            JsonObject jsonGroupInfo = new JsonObject(\n+                JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n             restSpec.sendRequestNoDataTable(\"GET\", endPointGetProfile, null, null, null);\n             if (commonspec.getResponse().getStatusCode() == 200) {\n-                JsonObject jsonProfileInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                JsonObject jsonProfileInfo = new JsonObject(\n+                    JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n                 // Get groups from profile\n                 JsonArray jsonGroups = (JsonArray) jsonProfileInfo.get(groups);\n                 // Get size of groups\n@@ -532,7 +627,8 @@ public class GosecSpec extends BaseGSpec {\n                     String jsonIds = ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n \n                     if (jsonIds.equals(groupId)) {\n-                        commonspec.getLogger().warn(\"{} is already included in the profile {}\", groupId, profileId);\n+                        commonspec.getLogger()\n+                            .warn(\"{} is already included in the profile {}\", groupId, profileId);\n                         content = true;\n                         break;\n                     } else {\n@@ -546,20 +642,27 @@ public class GosecSpec extends BaseGSpec {\n                     // Add gids array to new json for PUT request\n                     putObject.put(\"gids\", stringGroups);\n \n-                    commonspec.getLogger().warn(\"Json for PUT request---> {}\", putObject.toString());\n-                    Future<Response> response = commonspec.generateRequest(\"PUT\", false, null, null, endPointGetProfile, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                    commonspec.getLogger()\n+                        .warn(\"Json for PUT request---> {}\", putObject.toString());\n+                    Future<Response> response = commonspec\n+                        .generateRequest(\"PUT\", false, null, null, endPointGetProfile,\n+                            JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                     commonspec.setResponse(\"PUT\", response.get());\n                     if (commonspec.getResponse().getStatusCode() != 204) {\n-                        throw new Exception(\"Error adding Group: \" + groupId + \" in Profile \" + profileId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                        throw new Exception(\n+                            \"Error adding Group: \" + groupId + \" in Profile \" + profileId +\n+                                \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                     }\n                 }\n \n             } else {\n-                throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+                throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n             }\n \n         } else {\n-            throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n@@ -588,7 +691,9 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I update '(policy|user|group|tenant)' '(.+?)'( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void updateResource(String resource, String resourceId, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n+    public void updateResource(String resource, String resourceId, String loginInfo,\n+                               String baseData, String type, DataTable modifications)\n+        throws Exception {\n         Integer[] expectedStatusUpdate = {200, 201, 204};\n         String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n@@ -614,13 +719,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -638,35 +748,43 @@ public class GosecSpec extends BaseGSpec {\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 if (resource.equals(\"tenant\")) {\n-                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type,\n+                        modifications);\n                 } else {\n-                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type,\n+                        modifications);\n                 }\n                 commonspec.getLogger().warn(\"Resource {}:{} updated\", resource, resourceId);\n \n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusUpdate);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().error(\"Error updating Resource {} {}: {}\", resource, resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger()\n+                        .error(\"Error updating Resource {} {}: {}\", resource, resourceId,\n+                            commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().error(\"Resource {}:{} not found so it's not updated\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .error(\"Resource {}:{} not found so it's not updated\", resource, resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n \n     /**\n      * Removes user or group from tenant if the resource exists and has been assigned previously\n-     * @param resource      : type of resource (user or group)\n-     * @param resourceId    : userId or groupId\n+     *\n+     * @param resource   : type of resource (user or group)\n+     * @param resourceId : userId or groupId\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I remove '(user|group)' '(.+?)' from tenant '(.+?)'$\")\n-    public void removeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n+    public void removeResourceInTenant(String resource, String resourceId, String tenantId)\n+        throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n         String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n         String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n@@ -681,50 +799,67 @@ public class GosecSpec extends BaseGSpec {\n         }\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n+                    JsonObject jsonTenantInfo = new JsonObject(\n+                        JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values()\n+                        .contains(JsonValue.valueOf(resourceId))) {\n                         // remove resource from tenant\n                         // Get groups/users from tenant\n                         JsonArray jsonGroups = (JsonArray) jsonTenantInfo.get(uidOrGidTenant);\n                         // Create new string for new data without resource\n                         String[] stringGroups = new String[jsonGroups.size() - 1];\n                         // Create json for put\n-                        JSONObject putObject = new JSONObject(commonspec.getResponse().getResponse());\n+                        JSONObject putObject =\n+                            new JSONObject(commonspec.getResponse().getResponse());\n                         // Remove ids in json\n                         putObject.remove(uidOrGidTenant);\n                         // create new array with values without resourceId\n                         for (int i = 0; i < jsonGroups.size(); i++) {\n                             int j = 0;\n-                            String jsonIds = jsonGroups.get(i).toString().substring(1, jsonGroups.get(i).toString().length() - 1);\n+                            String jsonIds = jsonGroups.get(i).toString()\n+                                .substring(1, jsonGroups.get(i).toString().length() - 1);\n                             if (jsonIds.equals(resourceId)) {\n-                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\", resource, resourceId, tenantId);\n+                                commonspec.getLogger()\n+                                    .warn(\"{} {} removed from tenant {}\", resource, resourceId,\n+                                        tenantId);\n                             } else {\n                                 stringGroups[j] = jsonIds;\n                                 j = j + 1;\n                             }\n                         }\n                         putObject.put(uidOrGidTenant, stringGroups);\n-                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\", putObject.toString());\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                        commonspec.getLogger()\n+                            .debug(\"Json for PATCH request---> {}\", putObject.toString());\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null, endPointTenant,\n+                                JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error removing \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error removing \" + resource + \" \" + resourceId + \" in tenant \" +\n+                                    tenantId + \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n \n                     } else {\n-                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\", resourceId);\n+                        commonspec.getLogger()\n+                            .error(\"{} is not included in tenant -> not removed\", resourceId);\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId + \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n                 throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n",
            "diff_size": 231
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/38/GosecSpec.java\nindex 89dfa884b64..7c5cdcc1013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/38/GosecSpec.java\n@@ -43,7 +43,8 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n-    /**\n+\n+/**\n      * Generic constructor.\n      *\n      * @param spec object\n@@ -728,4 +729,4 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/38/GosecSpec.java\nindex 89dfa884b64..598c18dec5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/38/GosecSpec.java\n@@ -27,7 +27,6 @@ import org.hjson.JsonValue;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.*;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n@@ -36,8 +35,10 @@ import java.util.List;\n import java.util.concurrent.Future;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+\n import static org.assertj.core.api.Assertions.fail;\n \n+\n public class GosecSpec extends BaseGSpec {\n \n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n@@ -48,17 +49,20 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n     }\n \n+\n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createResource(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type, modifications);\n-\n     }\n \n+\n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type, modifications);\n@@ -77,6 +81,7 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications\n      * @throws Exception\n      */\n+\n     private void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, boolean doesNotExist, String baseData, String type, DataTable modifications) throws Exception {\n         Integer expectedStatusCreate = 201;\n         Integer expectedStatusDelete = 200;\n@@ -88,7 +93,6 @@ public class GosecSpec extends BaseGSpec {\n         List<List<String>> newModifications;\n         newModifications = convertDataTableToModifiableList(modifications);\n         Boolean addSourceType = false;\n-\n         if (endPoint != null) {\n             endPointResource = endPoint + resourceId;\n \n@@ -114,7 +118,6 @@ public class GosecSpec extends BaseGSpec {\n             }\n             endPointResource = endPoint + resourceId;\n         }\n-\n         if (gosecVersion != null) {\n             String[] gosecVersionArray = gosecVersion.split(\"\\\\.\");\n             // Add inputSourceType if Gosec >= 1.4.x\n@@ -122,12 +125,12 @@ public class GosecSpec extends BaseGSpec {\n                 addSourceType = true;\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n@@ -137,6 +140,7 @@ public class GosecSpec extends BaseGSpec {\n                     } else {\n                         commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n+\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n@@ -146,7 +150,6 @@ public class GosecSpec extends BaseGSpec {\n                     }\n                 }\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n \n             if (commonspec.getResponse().getStatusCode() != 200) {\n@@ -156,9 +159,15 @@ public class GosecSpec extends BaseGSpec {\n                     newModifications.add(newField);\n                 }\n                 // Create datatable with modified data\n+\n                 DataTable gosecModifications = DataTable.create(newModifications);\n                 // Send POST request\n-                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type, gosecModifications);\n+                restSpec.sendRequest(\"POST\",\n+                    newEndPoint,\n+                        loginInfo,\n+                            baseData,\n+                                type,\n+                                    gosecModifications);\n                 try {\n                     if (commonspec.getResponse().getStatusCode() == 409) {\n                         commonspec.getLogger().warn(\"The resource {} already exists\", resourceId);\n@@ -177,16 +186,20 @@ public class GosecSpec extends BaseGSpec {\n                 }\n             } else {\n                 commonspec.getLogger().warn(\"{}:{} already exist\", resource, resourceId);\n+\n                 if (resource.equals(\"policy\") && commonspec.getResponse().getStatusCode() == 200) {\n                     if (doesNotExist) {\n                         // Policy already exists\n                         commonspec.getLogger().warn(\"Policy {} already exist - not created\", resourceId);\n-\n                     } else {\n                         // Delete policy if exists\n-                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type, modifications);\n+                        restSpec.sendRequest(\"DELETE\",\n+                            endPointResource,\n+                                loginInfo,\n+                                    baseData,\n+                                        type,\n+                                            modifications);\n                         commonspec.getLogger().warn(\"Policy {} deleted\", resourceId);\n-\n                         try {\n                             assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusDelete);\n                         } catch (AssertionError e) {\n@@ -212,13 +225,14 @@ public class GosecSpec extends BaseGSpec {\n      * @param loginInfo\n      * @throws Exception\n      */\n+\n+\n     @When(\"^I delete '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it exists$\")\n     public void deleteUserIfExists(String resource, String resourceId, String endPoint, String loginInfo) throws Exception {\n         Integer[] expectedStatusDelete = {200, 204};\n         String endPointResource = \"\";\n         String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n-\n         if (endPoint != null) {\n             endPointResource = endPoint + resourceId;\n         } else {\n@@ -232,12 +246,12 @@ public class GosecSpec extends BaseGSpec {\n                 }\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n@@ -247,6 +261,7 @@ public class GosecSpec extends BaseGSpec {\n                     } else {\n                         commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n+\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n@@ -258,14 +273,12 @@ public class GosecSpec extends BaseGSpec {\n             } else {\n                 endPointResource = endPoint + resourceId;\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 // Delete resource if exists\n                 restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource, loginInfo, null, null);\n                 commonspec.getLogger().warn(\"Resource {} deleted\", resourceId);\n-\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusDelete);\n                 } catch (AssertionError e) {\n@@ -281,22 +294,24 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get id from( tag)? policy with name '(.+?)' and save it in environment variable '(.+?)'$\")\n     public void getPolicyId(String tag, String policyName, String envVar) throws Exception {\n         String endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n-\n         if (tag != null) {\n             endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_TAGS\");\n         }\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n+\n             if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n                 commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                 commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n+\n                 if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining ID from policy \" + policyName);\n                 }\n@@ -308,6 +323,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I create tenant '(.+?)' if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createTenant(String tenantId, String baseData, String type, DataTable modifications) throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n@@ -315,6 +331,7 @@ public class GosecSpec extends BaseGSpec {\n         Integer expectedStatus = 201;\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             commonspec.getLogger().warn(\"Tenant {} already exist - not created\", tenantId);\n         } else {\n@@ -328,6 +345,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I delete tenant '(.+?)' if it exists$\")\n     public void deleteTenant(String tenantId) throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n@@ -335,6 +353,7 @@ public class GosecSpec extends BaseGSpec {\n         Integer expectedStatus = 204;\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource, null, null, null);\n             commonspec.getLogger().warn(\"Tenant {} deleted\", tenantId);\n@@ -349,6 +368,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I include '(user|group)' '(.+?)' in tenant '(.+?)'$\")\n     public void includeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n@@ -364,9 +384,11 @@ public class GosecSpec extends BaseGSpec {\n             endPointGosec = endPointGetAllGroups;\n         }\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n                     if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n@@ -375,6 +397,7 @@ public class GosecSpec extends BaseGSpec {\n                         ((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).add(resourceId);\n                         Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n+\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n                             throw new Exception(\"Error adding \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                         }\n@@ -390,15 +413,17 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get id from profile with name '(.+?)' and save it in environment variable '(.+?)'$\")\n     public void getProfiled(String profileName, String envVar) throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/profiles\";\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n+\n             if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n                 fail(\"Error obtaining ID from profile \" + profileName);\n             }\n@@ -407,13 +432,13 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get json from( tag)? policy with name '(.+?)' and save it( in environment variable '(.*?)')?( in file '(.*?)')?$\")\n     public void getPolicyJson(String tag, String policyName, String envVar, String fileName) throws Exception {\n         String endPoint = \"/service/gosecmanagement/api/policy\";\n         String newEndPoint = \"/service/gosecmanagement/api/policies\";\n         String errorMessage = \"api/policies\";\n         String errorMessage2 = \"api/policy\";\n-\n         if (tag != null) {\n             endPoint = \"/service/gosecmanagement/api/policy/tag\";\n             newEndPoint = \"/service/gosecmanagement/api/policies/tags\";\n@@ -422,8 +447,10 @@ public class GosecSpec extends BaseGSpec {\n         }\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+\n             if (commonspec.getCommandResult().trim().equals(\"\")) {\n                 commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             }\n@@ -436,14 +463,15 @@ public class GosecSpec extends BaseGSpec {\n                     fail(\"Error obtaining JSON from policy \" + policyName);\n                 }\n             }\n-\n             if (fileName != null) {\n                 // Create file (temporary) and set path to be accessible within test\n                 File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                 String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\",\n+                    absolutePathFile);\n                 // Note that this Writer will delete the file if it exists\n-                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                                                       StandardCharsets.UTF_8));\n                 try {\n                     out.write(commonspec.getResponse().getResponse());\n                 } catch (Exception e) {\n@@ -451,16 +479,16 @@ public class GosecSpec extends BaseGSpec {\n                 } finally {\n                     out.close();\n                 }\n-\n                 Assertions.assertThat(new File(absolutePathFile).isFile());\n             }\n-\n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n                 commonspec.getLogger().warn(\"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\", endPoint);\n                 restSpec.sendRequestNoDataTable(\"GET\", newEndPoint, null, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+\n                     if (commonspec.getCommandResult().trim().equals(\"\")) {\n                         commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     }\n@@ -468,18 +496,20 @@ public class GosecSpec extends BaseGSpec {\n \n                     if (envVar != null) {\n                         ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n+\n                         if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n                             fail(\"Error obtaining JSON from policy \" + policyName);\n                         }\n                     }\n-\n                     if (fileName != null) {\n                         // Create file (temporary) and set path to be accessible within test\n                         File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\",\n+                            absolutePathFile);\n                         // Note that this Writer will delete the file if it exists\n-                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                                                               StandardCharsets.UTF_8));\n                         try {\n                             out.write(commonspec.getResponse().getResponse());\n                         } catch (Exception e) {\n@@ -487,10 +517,8 @@ public class GosecSpec extends BaseGSpec {\n                         } finally {\n                             out.close();\n                         }\n-\n                         Assertions.assertThat(new File(absolutePathFile).isFile());\n                     }\n-\n                 } else {\n                     fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n                 }\n@@ -500,6 +528,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I include group '(.+?)' in profile '(.+?)'$\")\n     public void includeGroupInProfile(String groupId, String profileId) throws Exception {\n         String endPointGetGroup = \"/service/gosecmanagement/api/group?id=\" + groupId;\n@@ -509,13 +538,13 @@ public class GosecSpec extends BaseGSpec {\n         String id = \"id\";\n         String roles = \"roles\";\n         Boolean content = false;\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             JsonObject jsonGroupInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n             restSpec.sendRequestNoDataTable(\"GET\", endPointGetProfile, null, null, null);\n+\n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 JsonObject jsonProfileInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n                 // Get groups from profile\n@@ -530,34 +559,32 @@ public class GosecSpec extends BaseGSpec {\n \n                 for (int i = 0; i < jsonGroups.size(); i++) {\n                     String jsonIds = ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n-\n                     if (jsonIds.equals(groupId)) {\n-                        commonspec.getLogger().warn(\"{} is already included in the profile {}\", groupId, profileId);\n+                        commonspec.getLogger().warn(\"{} is already included in the profile {}\",\n+                            groupId,\n+                                profileId);\n                         content = true;\n                         break;\n                     } else {\n                         stringGroups[i] = jsonIds;\n                     }\n                 }\n-\n                 if (!content) {\n                     // Add new group in array of gids\n                     stringGroups[jsonGroups.size()] = groupId;\n                     // Add gids array to new json for PUT request\n                     putObject.put(\"gids\", stringGroups);\n-\n                     commonspec.getLogger().warn(\"Json for PUT request---> {}\", putObject.toString());\n                     Future<Response> response = commonspec.generateRequest(\"PUT\", false, null, null, endPointGetProfile, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                     commonspec.setResponse(\"PUT\", response.get());\n+\n                     if (commonspec.getResponse().getStatusCode() != 204) {\n                         throw new Exception(\"Error adding Group: \" + groupId + \" in Profile \" + profileId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                     }\n                 }\n-\n             } else {\n                 throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n             }\n-\n         } else {\n             throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n         }\n@@ -587,6 +614,8 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications : data to modify the resource\n      * @throws Exception if the resource does not exists or the request fails\n      */\n+\n+\n     @When(\"^I update '(policy|user|group|tenant)' '(.+?)'( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void updateResource(String resource, String resourceId, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         Integer[] expectedStatusUpdate = {200, 201, 204};\n@@ -594,7 +623,6 @@ public class GosecSpec extends BaseGSpec {\n         String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n         String endPoint = \"\";\n         String endPointResource = \"\";\n-\n         if (resource.equals(\"policy\")) {\n             endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         } else {\n@@ -607,12 +635,12 @@ public class GosecSpec extends BaseGSpec {\n                 endPoint = \"/service/gosec-identities-daas/identities/tenants/\";\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n@@ -622,6 +650,7 @@ public class GosecSpec extends BaseGSpec {\n                     } else {\n                         commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n+\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n@@ -633,17 +662,25 @@ public class GosecSpec extends BaseGSpec {\n             } else {\n                 endPointResource = endPoint + resourceId;\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 if (resource.equals(\"tenant\")) {\n-                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PATCH\",\n+                        endPointResource,\n+                            loginInfo,\n+                                baseData,\n+                                    type,\n+                                        modifications);\n                 } else {\n-                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PUT\",\n+                        endPointResource,\n+                            loginInfo,\n+                                baseData,\n+                                    type,\n+                                        modifications);\n                 }\n                 commonspec.getLogger().warn(\"Resource {}:{} updated\", resource, resourceId);\n-\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusUpdate);\n                 } catch (AssertionError e) {\n@@ -665,6 +702,8 @@ public class GosecSpec extends BaseGSpec {\n      * @param resourceId    : userId or groupId\n      * @throws Exception if the resource does not exists or the request fails\n      */\n+\n+\n     @When(\"^I remove '(user|group)' '(.+?)' from tenant '(.+?)'$\")\n     public void removeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n@@ -680,9 +719,11 @@ public class GosecSpec extends BaseGSpec {\n             endPointGosec = endPointGetAllGroups;\n         }\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n+\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n+\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n                     JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n                     if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n@@ -696,26 +737,32 @@ public class GosecSpec extends BaseGSpec {\n                         // Remove ids in json\n                         putObject.remove(uidOrGidTenant);\n                         // create new array with values without resourceId\n+\n                         for (int i = 0; i < jsonGroups.size(); i++) {\n                             int j = 0;\n                             String jsonIds = jsonGroups.get(i).toString().substring(1, jsonGroups.get(i).toString().length() - 1);\n                             if (jsonIds.equals(resourceId)) {\n-                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\", resource, resourceId, tenantId);\n+                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\",\n+                                    resource,\n+                                        resourceId,\n+                                            tenantId);\n                             } else {\n                                 stringGroups[j] = jsonIds;\n                                 j = j + 1;\n                             }\n                         }\n                         putObject.put(uidOrGidTenant, stringGroups);\n-                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\", putObject.toString());\n+                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\",\n+                            putObject.toString());\n                         Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n+\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n                             throw new Exception(\"Error removing \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                         }\n-\n                     } else {\n-                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\", resourceId);\n+                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\",\n+                            resourceId);\n                     }\n                 } else {\n                     throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n@@ -727,5 +774,4 @@ public class GosecSpec extends BaseGSpec {\n             throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 129
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/38/GosecSpec.java\nindex 89dfa884b64..8d4fbedc126 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/38/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/38/GosecSpec.java\n@@ -48,6 +48,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1899",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1899/OutOfOrderSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1899/OutOfOrderSequence.java\nindex c45533d9fe3..93bac0f8287 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1899/OutOfOrderSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1899/OutOfOrderSequence.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.concurrent.TimeoutException;\n@@ -32,40 +33,40 @@ import java.util.concurrent.TimeoutException;\n  */\n public interface OutOfOrderSequence\n {\n-    /**\n-     * Offers a number to this sequence.\n-     *\n-     * @param number number to offer this sequence\n-     * @param meta meta data about the number\n-     * @return {@code true} if highest gap-free number changed as part of this call, otherwise {@code false}.\n-     */\n-    boolean offer( long number, long[] meta );\n+  /**\n+   * Offers a number to this sequence.\n+   *\n+   * @param number number to offer this sequence\n+   * @param meta   meta data about the number\n+   * @return {@code true} if highest gap-free number changed as part of this call, otherwise {@code false}.\n+   */\n+  boolean offer(long number, long[] meta);\n \n-    /**\n-     * @return the highest number, without its meta data.\n-     */\n-    long highestEverSeen();\n+  /**\n+   * @return the highest number, without its meta data.\n+   */\n+  long highestEverSeen();\n \n-    /**\n-     * @return {@code long[]} with the highest offered gap-free number and its meta data.\n-     */\n-    long[] get();\n+  /**\n+   * @return {@code long[]} with the highest offered gap-free number and its meta data.\n+   */\n+  long[] get();\n \n-    /**\n-     * Waits for the specified number (gap-free).\n-     *\n-     * @param awaitedNumber the awaited number.\n-     * @param timeoutMillis the maximum time to wait in milliseconds.\n-     */\n-    void await( long awaitedNumber, long timeoutMillis ) throws TimeoutException, InterruptedException;\n+  /**\n+   * Waits for the specified number (gap-free).\n+   *\n+   * @param awaitedNumber the awaited number.\n+   * @param timeoutMillis the maximum time to wait in milliseconds.\n+   */\n+  void await(long awaitedNumber, long timeoutMillis) throws TimeoutException, InterruptedException;\n \n-    /**\n-     * @return the highest gap-free number, without its meta data.\n-     */\n-    long getHighestGapFreeNumber();\n+  /**\n+   * @return the highest gap-free number, without its meta data.\n+   */\n+  long getHighestGapFreeNumber();\n \n-    /**\n-     * Used in recovery. I don't like the visibility of this method at all.\n-     */\n-    void set( long number, long[] meta );\n+  /**\n+   * Used in recovery. I don't like the visibility of this method at all.\n+   */\n+  void set(long number, long[] meta);\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1899/OutOfOrderSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1899/OutOfOrderSequence.java\nindex c45533d9fe3..7fb766ec6e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1899/OutOfOrderSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1899/OutOfOrderSequence.java\n@@ -68,4 +68,4 @@ public interface OutOfOrderSequence\n      * Used in recovery. I don't like the visibility of this method at all.\n      */\n     void set( long number, long[] meta );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ibinti-bugvm",
    "error_id": "102",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @param <V> The result type returned by this Future's {@code get} method\n */\npublic interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n\n    /**\n     * Returns true if this is a periodic task. A periodic task may",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "column": "43",
                    "severity": "error",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "21",
                    "column": "3",
                    "severity": "error",
                    "message": "'>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler/102/RunnableScheduledFuture.java\nindex 71252332952..c918b15d37a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler/102/RunnableScheduledFuture.java\n@@ -16,7 +16,9 @@ package java.util.concurrent;\n  * @author Doug Lea\n  * @param <V> The result type returned by this Future's {@code get} method\n  */\n-public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n+public interface RunnableScheduledFuture<V>extends RunnableFuture\n+  <\n+V >, ScheduledFuture<V> {\n \n     /**\n      * Returns true if this is a periodic task. A periodic task may\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/102/RunnableScheduledFuture.java\nindex 71252332952..d994873b483 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/102/RunnableScheduledFuture.java\n@@ -10,20 +10,22 @@ package java.util.concurrent;\n  * A {@link ScheduledFuture} that is {@link Runnable}. Successful\n  * execution of the {@code run} method causes completion of the\n  * {@code Future} and allows access to its results.\n+ *\n+ * @param <V> The result type returned by this Future's {@code get} method\n+ * @author Doug Lea\n  * @see FutureTask\n  * @see Executor\n  * @since 1.6\n- * @author Doug Lea\n- * @param <V> The result type returned by this Future's {@code get} method\n  */\n-public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n+public interface RunnableScheduledFuture<V>\n+  extends RunnableFuture<V>, ScheduledFuture<V> {\n \n-    /**\n-     * Returns true if this is a periodic task. A periodic task may\n-     * re-run according to some schedule. A non-periodic task can be\n-     * run only once.\n-     *\n-     * @return true if this task is periodic\n-     */\n-    boolean isPeriodic();\n+  /**\n+   * Returns true if this is a periodic task. A periodic task may\n+   * re-run according to some schedule. A non-periodic task can be\n+   * run only once.\n+   *\n+   * @return true if this task is periodic\n+   */\n+  boolean isPeriodic();\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/102/RunnableScheduledFuture.java\nindex 71252332952..7c075ef6597 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/102/RunnableScheduledFuture.java\n@@ -26,4 +26,4 @@ public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, Scheduled\n      * @return true if this task is periodic\n      */\n     boolean isPeriodic();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/102/RunnableScheduledFuture.java\nindex 71252332952..bf8166bcfb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/102/RunnableScheduledFuture.java\n@@ -16,6 +16,8 @@ package java.util.concurrent;\n  * @author Doug Lea\n  * @param <V> The result type returned by this Future's {@code get} method\n  */\n+\n+\n public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n \n     /**\n@@ -25,5 +27,7 @@ public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, Scheduled\n      *\n      * @return true if this task is periodic\n      */\n+\n+\n     boolean isPeriodic();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "column": "70",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "19",
                    "column": "87",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "19",
                    "column": "89",
                    "severity": "error",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "19",
                    "column": "90",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "19",
                    "column": "90",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_random/102/RunnableScheduledFuture.java\nindex 71252332952..5448138064b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_random/102/RunnableScheduledFuture.java\n@@ -16,14 +16,12 @@ package java.util.concurrent;\n  * @author Doug Lea\n  * @param <V> The result type returned by this Future's {@code get} method\n  */\n-public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n-\n-    /**\n+public interface RunnableScheduledFuture<V> extends RunnableFuture<V>,ScheduledFuture <V>{/**\n      * Returns true if this is a periodic task. A periodic task may\n      * re-run according to some schedule. A non-periodic task can be\n      * run only once.\n      *\n      * @return true if this task is periodic\n-     */\n-    boolean isPeriodic();\n+     */ boolean isPeriodic();\n+boolean isPeriodic();\n }\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "column": "43",
                    "severity": "error",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "21",
                    "column": "3",
                    "severity": "error",
                    "message": "'>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/102/RunnableScheduledFuture.java\nindex 71252332952..c918b15d37a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/102/RunnableScheduledFuture.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/102/RunnableScheduledFuture.java\n@@ -16,7 +16,9 @@ package java.util.concurrent;\n  * @author Doug Lea\n  * @param <V> The result type returned by this Future's {@code get} method\n  */\n-public interface RunnableScheduledFuture<V> extends RunnableFuture<V>, ScheduledFuture<V> {\n+public interface RunnableScheduledFuture<V>extends RunnableFuture\n+  <\n+V >, ScheduledFuture<V> {\n \n     /**\n      * Returns true if this is a periodic task. A periodic task may\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
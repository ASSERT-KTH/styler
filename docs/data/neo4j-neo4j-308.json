{
    "project_name": "neo4j-neo4j",
    "error_id": "308",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/308/StorageSchemaReaderSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/308/StorageSchemaReaderSnapshot.java\nindex 7199bd7e116..eb99df794a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/308/StorageSchemaReaderSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/308/StorageSchemaReaderSnapshot.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.Iterator;\n@@ -30,39 +31,39 @@ class StorageSchemaReaderSnapshot implements StorageSchemaReader\n {\n     private final SchemaCache schema;\n \n-    StorageSchemaReaderSnapshot( SchemaCache schema )\n+    StorageSchemaReaderSnapshot(SchemaCache schema)\n     {\n         this.schema = schema;\n     }\n \n     @Override\n-    public IndexDescriptor indexGetForName( String name )\n+    public IndexDescriptor indexGetForName(String name)\n     {\n-        return schema.indexForName( name );\n+        return schema.indexForName(name);\n     }\n \n     @Override\n-    public ConstraintDescriptor constraintGetForName( String name )\n+    public ConstraintDescriptor constraintGetForName(String name)\n     {\n-        return schema.constraintForName( name );\n+        return schema.constraintForName(name);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexGetForSchema( SchemaDescriptor descriptor )\n+    public Iterator<IndexDescriptor> indexGetForSchema(SchemaDescriptor descriptor)\n     {\n-        return schema.indexesForSchema( descriptor );\n+        return schema.indexesForSchema(descriptor);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetForLabel( int labelId )\n+    public Iterator<IndexDescriptor> indexesGetForLabel(int labelId)\n     {\n-        return schema.indexesForLabel( labelId );\n+        return schema.indexesForLabel(labelId);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetForRelationshipType( int relationshipType )\n+    public Iterator<IndexDescriptor> indexesGetForRelationshipType(int relationshipType)\n     {\n-        return schema.indexesForRelationshipType( relationshipType );\n+        return schema.indexesForRelationshipType(relationshipType);\n     }\n \n     @Override\n@@ -72,15 +73,15 @@ class StorageSchemaReaderSnapshot implements StorageSchemaReader\n     }\n \n     @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForLabel( int labelId )\n+    public Iterator<ConstraintDescriptor> constraintsGetForLabel(int labelId)\n     {\n-        return schema.constraintsForLabel( labelId );\n+        return schema.constraintsForLabel(labelId);\n     }\n \n     @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType( int typeId )\n+    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType(int typeId)\n     {\n-        return schema.constraintsForRelationshipType( typeId );\n+        return schema.constraintsForRelationshipType(typeId);\n     }\n \n     @Override\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
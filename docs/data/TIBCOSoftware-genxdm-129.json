{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "129",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n    {\n\t\tthis.base = base;\n\t\tthis.bridge = bridge;\n\t\tthis.types = annotator;\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/129/AxiomSequenceBuilder.java\nindex eaecea72711..275fd6ebbc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/129/AxiomSequenceBuilder.java\n@@ -36,7 +36,7 @@ final class AxiomSequenceBuilder\n {\n     public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n     {\n-\t\tthis.base = base;\n+        this.base = base;\n \t\tthis.bridge = bridge;\n \t\tthis.types = annotator;\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/129/AxiomSequenceBuilder.java\nindex eaecea72711..228815bb448 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/129/AxiomSequenceBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.axiom.enhanced;\n \n import java.io.IOException;\n@@ -31,107 +32,97 @@ import org.genxdm.io.DtdAttributeKind;\n import org.genxdm.typed.io.SequenceBuilder;\n import org.genxdm.typed.types.AtomBridge;\n \n-final class AxiomSequenceBuilder \n-    implements SequenceBuilder<Object, XmlAtom>\n-{\n-    public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n-    {\n-\t\tthis.base = base;\n-\t\tthis.bridge = bridge;\n-\t\tthis.types = annotator;\n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final List<? extends XmlAtom> value, final QName type)\n-\t{\n-\t    attribute(namespaceURI, localName, prefix, bridge.getC14NString(value), /*map from schema to dtd?*/ DtdAttributeKind.CDATA);\n-\t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n-\t    \n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final String value, DtdAttributeKind type) throws GenXDMException\n-\t{\n-\t    base.attribute(namespaceURI, localName, prefix, value, type); \n-\t}\n-\t\n-\tpublic void close()\n-\t    throws IOException\n-\t{\n-\t    base.close();\n-\t}\n-\t\n-\tpublic void comment(final String value)\n-\t{\n-\t    base.comment(value);\n-\t}\n-\t\n-\tpublic void endDocument()\n-\t{\n-\t\tbase.endDocument();\n-\t}\n-\n-\tpublic void endElement()\n-\t{\n-\t    base.endElement();\n-\t}\n-\n-\tpublic void flush()\n-\t    throws IOException\n-\t{\n-\t    base.flush();\n-\t}\n-\n-\tpublic List<Object> getNodes()\n-\t{\n-\t    return base.getNodes();\n-\t}\n-\t\n-\tpublic Object getNode()\n-\t{\n-\t    return base.getNode();\n-\t}\n-\n-\tpublic void namespace(final String prefix, final String namespaceURI)\n-\t{\n-\t    base.namespace(prefix, namespaceURI);\n-\t}\n-\n-\tpublic void processingInstruction(final String target, final String data)\n-\t{\n-\t    base.processingInstruction(target, data);\n-\t}\n-\n-\tpublic void reset()\n-\t{\n-\t\tbase.reset();\n-\t}\n-\n-\tpublic void startDocument(final URI documentURI, final String docTypeDecl)\n-\t{\n-\t    base.startDocument(documentURI, docTypeDecl);\n-\t}\n-\n-\tpublic void startElement(final String namespaceURI, final String localName, final String prefix)\n-    {\n-\t    base.startElement(namespaceURI, localName, prefix);\n-    }\n-\n-\tpublic void startElement(final String namespaceURI, final String localName, final String prefix, final QName type)\n-\t{\n-\t    startElement(namespaceURI, localName, prefix);\n-\t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n-\t}\n-\n-\tpublic void text(final List<? extends XmlAtom> value)\n-\t{\n-\t    base.text(bridge.getC14NString(value));\n-\t}\n-\n-\tpublic void text(final String value) throws GenXDMException\n-\t{\n-\t    base.text(value);\n-\t}\n-\n-\tprivate final FilteredFragmentBuilder<Object> base;\n-\tprivate final AtomBridge<XmlAtom> bridge;\n-\tprivate final TypeAnnotator types;\n+final class AxiomSequenceBuilder\n+    implements SequenceBuilder<Object, XmlAtom> {\n+    public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base,\n+                                final AtomBridge<XmlAtom> bridge, final OMFactory factory,\n+                                final TypeAnnotator annotator, final boolean ignoreComments) {\n+        this.base = base;\n+        this.bridge = bridge;\n+        this.types = annotator;\n+    }\n+\n+    public void attribute(final String namespaceURI, final String localName, final String prefix,\n+                          final List<? extends XmlAtom> value, final QName type) {\n+        attribute(namespaceURI, localName, prefix,\n+            bridge.getC14NString(value), /*map from schema to dtd?*/ DtdAttributeKind.CDATA);\n+        types.annotate(((AxiomFragmentBuilder) base.getBaseBuilder()).lastNodeId(), type);\n+\n+    }\n+\n+    public void attribute(final String namespaceURI, final String localName, final String prefix,\n+                          final String value, DtdAttributeKind type) throws GenXDMException {\n+        base.attribute(namespaceURI, localName, prefix, value, type);\n+    }\n+\n+    public void close()\n+        throws IOException {\n+        base.close();\n+    }\n+\n+    public void comment(final String value) {\n+        base.comment(value);\n+    }\n+\n+    public void endDocument() {\n+        base.endDocument();\n+    }\n+\n+    public void endElement() {\n+        base.endElement();\n+    }\n+\n+    public void flush()\n+        throws IOException {\n+        base.flush();\n+    }\n+\n+    public List<Object> getNodes() {\n+        return base.getNodes();\n+    }\n+\n+    public Object getNode() {\n+        return base.getNode();\n+    }\n+\n+    public void namespace(final String prefix, final String namespaceURI) {\n+        base.namespace(prefix, namespaceURI);\n+    }\n+\n+    public void processingInstruction(final String target, final String data) {\n+        base.processingInstruction(target, data);\n+    }\n+\n+    public void reset() {\n+        base.reset();\n+    }\n+\n+    public void startDocument(final URI documentURI, final String docTypeDecl) {\n+        base.startDocument(documentURI, docTypeDecl);\n+    }\n+\n+    public void startElement(final String namespaceURI, final String localName,\n+                             final String prefix) {\n+        base.startElement(namespaceURI, localName, prefix);\n+    }\n+\n+    public void startElement(final String namespaceURI, final String localName, final String prefix,\n+                             final QName type) {\n+        startElement(namespaceURI, localName, prefix);\n+        types.annotate(((AxiomFragmentBuilder) base.getBaseBuilder()).lastNodeId(), type);\n+    }\n+\n+    public void text(final List<? extends XmlAtom> value) {\n+        base.text(bridge.getC14NString(value));\n+    }\n+\n+    public void text(final String value) throws GenXDMException {\n+        base.text(value);\n+    }\n+\n+    private final FilteredFragmentBuilder<Object> base;\n+\n+    private final AtomBridge<XmlAtom> bridge;\n+\n+    private final TypeAnnotator types;\n }\n",
            "diff_size": 104
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/129/AxiomSequenceBuilder.java\nindex eaecea72711..86b43ae24a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/129/AxiomSequenceBuilder.java\n@@ -36,38 +36,38 @@ final class AxiomSequenceBuilder\n {\n     public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n     {\n-\t\tthis.base = base;\n+    this.base = base;\n \t\tthis.bridge = bridge;\n \t\tthis.types = annotator;\n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final List<? extends XmlAtom> value, final QName type)\n-\t{\n+    }\n+\n+public void attribute(final String namespaceURI, final String localName, final String prefix, final List<? extends XmlAtom> value, final QName type)\n+{\n \t    attribute(namespaceURI, localName, prefix, bridge.getC14NString(value), /*map from schema to dtd?*/ DtdAttributeKind.CDATA);\n \t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n-\t    \n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final String value, DtdAttributeKind type) throws GenXDMException\n-\t{\n-\t    base.attribute(namespaceURI, localName, prefix, value, type); \n-\t}\n-\t\n-\tpublic void close()\n-\t    throws IOException\n+\n+    }\n+\n+public void attribute(final String namespaceURI, final String localName, final String prefix, final String value, DtdAttributeKind type) throws GenXDMException\n+{\n+\t    base.attribute(namespaceURI, localName, prefix, value, type);\n+    }\n+\n+   public void close()\n+    throws IOException\n \t{\n \t    base.close();\n \t}\n-\t\n-\tpublic void comment(final String value)\n-\t{\n+\n+public void comment(final String value)\n+{\n \t    base.comment(value);\n \t}\n-\t\n-\tpublic void endDocument()\n-\t{\n-\t\tbase.endDocument();\n-\t}\n+\n+public void endDocument()\n+{\n+    base.endDocument();\n+    }\n \n \tpublic void endElement()\n \t{\n@@ -84,9 +84,9 @@ final class AxiomSequenceBuilder\n \t{\n \t    return base.getNodes();\n \t}\n-\t\n-\tpublic Object getNode()\n-\t{\n+\n+public Object getNode()\n+{\n \t    return base.getNode();\n \t}\n \n@@ -102,8 +102,8 @@ final class AxiomSequenceBuilder\n \n \tpublic void reset()\n \t{\n-\t\tbase.reset();\n-\t}\n+    base.reset();\n+    }\n \n \tpublic void startDocument(final URI documentURI, final String docTypeDecl)\n \t{\n@@ -111,11 +111,11 @@ final class AxiomSequenceBuilder\n \t}\n \n \tpublic void startElement(final String namespaceURI, final String localName, final String prefix)\n-    {\n-\t    base.startElement(namespaceURI, localName, prefix);\n+{\n+    base.startElement(namespaceURI, localName, prefix);\n     }\n \n-\tpublic void startElement(final String namespaceURI, final String localName, final String prefix, final QName type)\n+public void startElement(final String namespaceURI, final String localName, final String prefix, final QName type)\n \t{\n \t    startElement(namespaceURI, localName, prefix);\n \t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n@@ -134,4 +134,4 @@ final class AxiomSequenceBuilder\n \tprivate final FilteredFragmentBuilder<Object> base;\n \tprivate final AtomBridge<XmlAtom> bridge;\n \tprivate final TypeAnnotator types;\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/129/AxiomSequenceBuilder.java\nindex eaecea72711..c74ad622833 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/129/AxiomSequenceBuilder.java\n@@ -18,9 +18,7 @@ package org.genxdm.bridge.axiom.enhanced;\n import java.io.IOException;\n import java.net.URI;\n import java.util.List;\n-\n import javax.xml.namespace.QName;\n-\n import org.apache.axiom.om.OMFactory;\n import org.genxdm.bridge.axiom.AxiomFragmentBuilder;\n import org.genxdm.bridgekit.atoms.XmlAtom;\n@@ -31,107 +29,109 @@ import org.genxdm.io.DtdAttributeKind;\n import org.genxdm.typed.io.SequenceBuilder;\n import org.genxdm.typed.types.AtomBridge;\n \n-final class AxiomSequenceBuilder \n-    implements SequenceBuilder<Object, XmlAtom>\n+final class AxiomSequenceBuilder implements SequenceBuilder<Object, XmlAtom>\n {\n     public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n     {\n-\t\tthis.base = base;\n-\t\tthis.bridge = bridge;\n-\t\tthis.types = annotator;\n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final List<? extends XmlAtom> value, final QName type)\n-\t{\n-\t    attribute(namespaceURI, localName, prefix, bridge.getC14NString(value), /*map from schema to dtd?*/ DtdAttributeKind.CDATA);\n-\t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n-\t    \n-\t}\n-\t\n-\tpublic void attribute(final String namespaceURI, final String localName, final String prefix, final String value, DtdAttributeKind type) throws GenXDMException\n-\t{\n-\t    base.attribute(namespaceURI, localName, prefix, value, type); \n-\t}\n-\t\n-\tpublic void close()\n-\t    throws IOException\n-\t{\n-\t    base.close();\n-\t}\n-\t\n-\tpublic void comment(final String value)\n-\t{\n-\t    base.comment(value);\n-\t}\n-\t\n-\tpublic void endDocument()\n-\t{\n-\t\tbase.endDocument();\n-\t}\n-\n-\tpublic void endElement()\n-\t{\n-\t    base.endElement();\n-\t}\n-\n-\tpublic void flush()\n-\t    throws IOException\n-\t{\n-\t    base.flush();\n-\t}\n-\n-\tpublic List<Object> getNodes()\n-\t{\n-\t    return base.getNodes();\n-\t}\n-\t\n-\tpublic Object getNode()\n-\t{\n-\t    return base.getNode();\n-\t}\n-\n-\tpublic void namespace(final String prefix, final String namespaceURI)\n-\t{\n-\t    base.namespace(prefix, namespaceURI);\n-\t}\n-\n-\tpublic void processingInstruction(final String target, final String data)\n-\t{\n-\t    base.processingInstruction(target, data);\n-\t}\n-\n-\tpublic void reset()\n-\t{\n-\t\tbase.reset();\n-\t}\n-\n-\tpublic void startDocument(final URI documentURI, final String docTypeDecl)\n-\t{\n-\t    base.startDocument(documentURI, docTypeDecl);\n-\t}\n-\n-\tpublic void startElement(final String namespaceURI, final String localName, final String prefix)\n-    {\n-\t    base.startElement(namespaceURI, localName, prefix);\n-    }\n-\n-\tpublic void startElement(final String namespaceURI, final String localName, final String prefix, final QName type)\n-\t{\n-\t    startElement(namespaceURI, localName, prefix);\n-\t    types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(), type);\n-\t}\n-\n-\tpublic void text(final List<? extends XmlAtom> value)\n-\t{\n-\t    base.text(bridge.getC14NString(value));\n-\t}\n-\n-\tpublic void text(final String value) throws GenXDMException\n-\t{\n-\t    base.text(value);\n-\t}\n-\n-\tprivate final FilteredFragmentBuilder<Object> base;\n-\tprivate final AtomBridge<XmlAtom> bridge;\n-\tprivate final TypeAnnotator types;\n-}\n+        this.base = base;\n+        this.bridge = bridge;\n+        this.types = annotator;\n+    }\n+\n+    public void attribute(final String namespaceURI, final String localName, final String prefix, final List<? extends XmlAtom> value, final QName type)\n+    {\n+        attribute(namespaceURI, localName, prefix, bridge.getC14NString(value), /*map from schema to dtd?*/ DtdAttributeKind.CDATA);\n+        types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(),\n+            type);\n+    }\n+\n+    public void attribute(final String namespaceURI, final String localName, final String prefix, final String value, DtdAttributeKind type)\n+        throws GenXDMException\n+    {\n+        base.attribute(namespaceURI, localName, prefix, value, type);\n+    }\n+\n+    public void close()\n+        throws IOException\n+    {\n+        base.close();\n+    }\n+\n+    public void comment(final String value)\n+    {\n+        base.comment(value);\n+    }\n+\n+    public void endDocument()\n+    {\n+        base.endDocument();\n+    }\n+\n+    public void endElement()\n+    {\n+        base.endElement();\n+    }\n+\n+    public void flush()\n+        throws IOException\n+    {\n+        base.flush();\n+    }\n+\n+    public List<Object> getNodes()\n+    {\n+        return base.getNodes();\n+    }\n+\n+    public Object getNode()\n+    {\n+        return base.getNode();\n+    }\n+\n+    public void namespace(final String prefix, final String namespaceURI)\n+    {\n+        base.namespace(prefix, namespaceURI);\n+    }\n+\n+    public void processingInstruction(final String target, final String data)\n+    {\n+        base.processingInstruction(target, data);\n+    }\n+\n+    public void reset()\n+    {\n+        base.reset();\n+    }\n+\n+    public void startDocument(final URI documentURI, final String docTypeDecl)\n+    {\n+        base.startDocument(documentURI, docTypeDecl);\n+    }\n+\n+    public void startElement(final String namespaceURI, final String localName, final String prefix)\n+    {\n+        base.startElement(namespaceURI, localName, prefix);\n+    }\n+\n+    public void startElement(final String namespaceURI, final String localName, final String prefix, final QName type)\n+    {\n+        startElement(namespaceURI, localName, prefix);\n+        types.annotate(((AxiomFragmentBuilder)base.getBaseBuilder()).lastNodeId(),\n+            type);\n+    }\n+\n+    public void text(final List<? extends XmlAtom> value)\n+    {\n+        base.text(bridge.getC14NString(value));\n+    }\n+\n+    public void text(final String value)\n+        throws GenXDMException\n+    {\n+        base.text(value);\n+    }\n+\n+    private final FilteredFragmentBuilder<Object> base;\n+    private final AtomBridge<XmlAtom> bridge;\n+    private final TypeAnnotator types;\n+}\n\\ No newline at end of file\n",
            "diff_size": 106
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/129/AxiomSequenceBuilder.java\nindex eaecea72711..275fd6ebbc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/129/AxiomSequenceBuilder.java\n@@ -36,7 +36,7 @@ final class AxiomSequenceBuilder\n {\n     public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n     {\n-\t\tthis.base = base;\n+        this.base = base;\n \t\tthis.bridge = bridge;\n \t\tthis.types = annotator;\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/129/AxiomSequenceBuilder.java\nindex eaecea72711..275fd6ebbc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/129/AxiomSequenceBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/129/AxiomSequenceBuilder.java\n@@ -36,7 +36,7 @@ final class AxiomSequenceBuilder\n {\n     public AxiomSequenceBuilder(final FilteredFragmentBuilder<Object> base, final AtomBridge<XmlAtom> bridge, final OMFactory factory, final TypeAnnotator annotator, final boolean ignoreComments)\n     {\n-\t\tthis.base = base;\n+        this.base = base;\n \t\tthis.bridge = bridge;\n \t\tthis.types = annotator;\n \t}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
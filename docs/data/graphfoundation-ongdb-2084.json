{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2084",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2084/HighIdTransactionApplier.java\nindex 8d4a1e82940..06951fa47a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2084/HighIdTransactionApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.command;\n \n import java.io.IOException;\n@@ -51,152 +52,151 @@ import static java.lang.Math.max;\n \n public class HighIdTransactionApplier extends TransactionApplier.Adapter\n {\n-    private final NeoStores neoStores;\n-    private final Map<RecordStore<?>,HighId> highIds = new HashMap<>();\n-\n-    public HighIdTransactionApplier( NeoStores neoStores )\n-    {\n-        this.neoStores = neoStores;\n-    }\n-\n-    @Override\n-    public boolean visitNodeCommand( NodeCommand command )\n-    {\n-        NodeStore nodeStore = neoStores.getNodeStore();\n-        track( nodeStore, command );\n-        track( nodeStore.getDynamicLabelStore(), command.getAfter().getDynamicLabelRecords() );\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitRelationshipCommand( RelationshipCommand command )\n-    {\n-        track( neoStores.getRelationshipStore(), command );\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitPropertyCommand( PropertyCommand command )\n-    {\n-        PropertyStore propertyStore = neoStores.getPropertyStore();\n-        track( propertyStore, command );\n-        for ( PropertyBlock block : command.getAfter() )\n-        {\n-            switch ( block.getType() )\n-            {\n-            case STRING:\n-                track( propertyStore.getStringStore(), block.getValueRecords() );\n-                break;\n-            case ARRAY:\n-                track( propertyStore.getArrayStore(), block.getValueRecords() );\n-                break;\n-            default:\n-                // Not needed, no dynamic records then\n-                break;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitRelationshipGroupCommand( RelationshipGroupCommand command )\n+  private final NeoStores neoStores;\n+  private final Map<RecordStore<?>, HighId> highIds = new HashMap<>();\n+\n+  public HighIdTransactionApplier(NeoStores neoStores)\n+  {\n+    this.neoStores = neoStores;\n+  }\n+\n+  @Override\n+  public boolean visitNodeCommand(NodeCommand command)\n+  {\n+    NodeStore nodeStore = neoStores.getNodeStore();\n+    track(nodeStore, command);\n+    track(nodeStore.getDynamicLabelStore(), command.getAfter().getDynamicLabelRecords());\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitRelationshipCommand(RelationshipCommand command)\n+  {\n+    track(neoStores.getRelationshipStore(), command);\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitPropertyCommand(PropertyCommand command)\n+  {\n+    PropertyStore propertyStore = neoStores.getPropertyStore();\n+    track(propertyStore, command);\n+    for (PropertyBlock block : command.getAfter())\n     {\n-        track( neoStores.getRelationshipGroupStore(), command );\n-        return false;\n+      switch (block.getType())\n+      {\n+        case STRING:\n+          track(propertyStore.getStringStore(), block.getValueRecords());\n+          break;\n+        case ARRAY:\n+          track(propertyStore.getArrayStore(), block.getValueRecords());\n+          break;\n+        default:\n+          // Not needed, no dynamic records then\n+          break;\n+      }\n     }\n-\n-    @Override\n-    public boolean visitRelationshipTypeTokenCommand( RelationshipTypeTokenCommand command )\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitRelationshipGroupCommand(RelationshipGroupCommand command)\n+  {\n+    track(neoStores.getRelationshipGroupStore(), command);\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitRelationshipTypeTokenCommand(RelationshipTypeTokenCommand command)\n+  {\n+    trackToken(neoStores.getRelationshipTypeTokenStore(), command);\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitLabelTokenCommand(LabelTokenCommand command)\n+  {\n+    trackToken(neoStores.getLabelTokenStore(), command);\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitPropertyKeyTokenCommand(PropertyKeyTokenCommand command)\n+  {\n+    trackToken(neoStores.getPropertyKeyTokenStore(), command);\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitSchemaRuleCommand(SchemaRuleCommand command)\n+  {\n+    SchemaStore schemaStore = neoStores.getSchemaStore();\n+    for (DynamicRecord record : command.getRecordsAfter())\n     {\n-        trackToken( neoStores.getRelationshipTypeTokenStore(), command );\n-        return false;\n+      track(schemaStore, record);\n     }\n-\n-    @Override\n-    public boolean visitLabelTokenCommand( LabelTokenCommand command )\n+    return false;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    // Notifies the stores about the recovered ids and will bump those high ids atomically if\n+    // they surpass the current high ids\n+    for (Map.Entry<RecordStore<?>, HighId> highId : highIds.entrySet())\n     {\n-        trackToken( neoStores.getLabelTokenStore(), command );\n-        return false;\n+      highId.getKey().setHighestPossibleIdInUse(highId.getValue().id);\n     }\n+  }\n \n-    @Override\n-    public boolean visitPropertyKeyTokenCommand( PropertyKeyTokenCommand command )\n+  private void track(RecordStore<?> store, AbstractBaseRecord record)\n+  {\n+    long id = max(record.getId(), record.requiresSecondaryUnit() ? record.getSecondaryUnitId() : -1);\n+    HighId highId = highIds.get(store);\n+    if (highId == null)\n     {\n-        trackToken( neoStores.getPropertyKeyTokenStore(), command );\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitSchemaRuleCommand( SchemaRuleCommand command )\n+      highIds.put(store, new HighId(id));\n+    } else\n     {\n-        SchemaStore schemaStore = neoStores.getSchemaStore();\n-        for ( DynamicRecord record : command.getRecordsAfter() )\n-        {\n-            track( schemaStore, record );\n-        }\n-        return false;\n+      highId.track(id);\n     }\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        // Notifies the stores about the recovered ids and will bump those high ids atomically if\n-        // they surpass the current high ids\n-        for ( Map.Entry<RecordStore<?>,HighId> highId : highIds.entrySet() )\n-        {\n-            highId.getKey().setHighestPossibleIdInUse( highId.getValue().id );\n-        }\n-    }\n+  private <RECORD extends AbstractBaseRecord> void track(RecordStore<RECORD> store, BaseCommand<RECORD> command)\n+  {\n+    track(store, command.getAfter());\n+  }\n \n-    private void track( RecordStore<?> store, AbstractBaseRecord record )\n+  private void track(RecordStore<?> store, Collection<? extends AbstractBaseRecord> records)\n+  {\n+    for (AbstractBaseRecord record : records)\n     {\n-        long id = max( record.getId(), record.requiresSecondaryUnit() ? record.getSecondaryUnitId() : -1 );\n-        HighId highId = highIds.get( store );\n-        if ( highId == null )\n-        {\n-            highIds.put( store, new HighId( id ) );\n-        }\n-        else\n-        {\n-            highId.track( id );\n-        }\n+      track(store, record);\n     }\n+  }\n \n-    private <RECORD extends AbstractBaseRecord> void track( RecordStore<RECORD> store, BaseCommand<RECORD> command )\n-    {\n-        track( store, command.getAfter() );\n-    }\n+  private <RECORD extends TokenRecord, TOKEN extends Token>\n+  void trackToken(TokenStore<RECORD, TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand)\n+  {\n+    track(tokenStore, tokenCommand.getAfter());\n+    track(tokenStore.getNameStore(), tokenCommand.getAfter().getNameRecords());\n+  }\n \n-    private void track( RecordStore<?> store, Collection<? extends AbstractBaseRecord> records )\n-    {\n-        for ( AbstractBaseRecord record : records )\n-        {\n-            track( store, record );\n-        }\n-    }\n+  private static class HighId\n+  {\n+    private long id;\n \n-    private <RECORD extends TokenRecord, TOKEN extends Token>\n-    void trackToken( TokenStore<RECORD, TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand )\n+    HighId(long id)\n     {\n-        track( tokenStore, tokenCommand.getAfter() );\n-        track( tokenStore.getNameStore(), tokenCommand.getAfter().getNameRecords() );\n+      this.id = id;\n     }\n \n-    private static class HighId\n+    void track(long id)\n     {\n-        private long id;\n-\n-        HighId( long id )\n-        {\n-            this.id = id;\n-        }\n-\n-        void track( long id )\n-        {\n-            if ( id > this.id )\n-            {\n-                this.id = id;\n-            }\n-        }\n+      if (id > this.id)\n+      {\n+        this.id = id;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 187
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2084/HighIdTransactionApplier.java\nindex 8d4a1e82940..fb65f24882d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2084/HighIdTransactionApplier.java\n@@ -175,8 +175,7 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n         }\n     }\n \n-    private <RECORD extends TokenRecord, TOKEN extends Token>\n-    void trackToken( TokenStore<RECORD, TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand )\n+    private <RECORD extends TokenRecord, TOKEN extends Token> void trackToken( TokenStore<RECORD,TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand )\n     {\n         track( tokenStore, tokenCommand.getAfter() );\n         track( tokenStore.getNameStore(), tokenCommand.getAfter().getNameRecords() );\n@@ -199,4 +198,4 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "175",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "175",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2084/HighIdTransactionApplier.java\nindex 8d4a1e82940..51143972372 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2084/HighIdTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2084/HighIdTransactionApplier.java\n@@ -23,7 +23,6 @@ import java.io.IOException;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.neo4j.kernel.impl.api.TransactionApplier;\n import org.neo4j.kernel.impl.store.NeoStores;\n import org.neo4j.kernel.impl.store.NodeStore;\n@@ -46,7 +45,6 @@ import org.neo4j.kernel.impl.transaction.command.Command.RelationshipTypeTokenCo\n import org.neo4j.kernel.impl.transaction.command.Command.SchemaRuleCommand;\n import org.neo4j.kernel.impl.transaction.command.Command.TokenCommand;\n import org.neo4j.storageengine.api.Token;\n-\n import static java.lang.Math.max;\n \n public class HighIdTransactionApplier extends TransactionApplier.Adapter\n@@ -80,7 +78,8 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n     {\n         PropertyStore propertyStore = neoStores.getPropertyStore();\n         track( propertyStore, command );\n-        for ( PropertyBlock block : command.getAfter() )\n+        for( PropertyBlock block : command.getAfter()\n+        )\n         {\n             switch ( block.getType() )\n             {\n@@ -95,6 +94,7 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n                 break;\n             }\n         }\n+\n         return false;\n     }\n \n@@ -130,10 +130,12 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n     public boolean visitSchemaRuleCommand( SchemaRuleCommand command )\n     {\n         SchemaStore schemaStore = neoStores.getSchemaStore();\n-        for ( DynamicRecord record : command.getRecordsAfter() )\n+        for( DynamicRecord record : command.getRecordsAfter()\n+        )\n         {\n             track( schemaStore, record );\n         }\n+\n         return false;\n     }\n \n@@ -142,7 +144,8 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n     {\n         // Notifies the stores about the recovered ids and will bump those high ids atomically if\n         // they surpass the current high ids\n-        for ( Map.Entry<RecordStore<?>,HighId> highId : highIds.entrySet() )\n+        for( Map.Entry<RecordStore<?>,HighId> highId : highIds.entrySet()\n+        )\n         {\n             highId.getKey().setHighestPossibleIdInUse( highId.getValue().id );\n         }\n@@ -150,7 +153,7 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n \n     private void track( RecordStore<?> store, AbstractBaseRecord record )\n     {\n-        long id = max( record.getId(), record.requiresSecondaryUnit() ? record.getSecondaryUnitId() : -1 );\n+        long id = max( record.getId(), record.requiresSecondaryUnit() ? record.getSecondaryUnitId() : - 1 );\n         HighId highId = highIds.get( store );\n         if ( highId == null )\n         {\n@@ -169,14 +172,13 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n \n     private void track( RecordStore<?> store, Collection<? extends AbstractBaseRecord> records )\n     {\n-        for ( AbstractBaseRecord record : records )\n+        for( AbstractBaseRecord record : records)\n         {\n             track( store, record );\n         }\n     }\n \n-    private <RECORD extends TokenRecord, TOKEN extends Token>\n-    void trackToken( TokenStore<RECORD, TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand )\n+    private< RECORD extends TokenRecord, TOKEN extends Token> void trackToken( TokenStore<RECORD,TOKEN> tokenStore, TokenCommand<RECORD> tokenCommand )\n     {\n         track( tokenStore, tokenCommand.getAfter() );\n         track( tokenStore.getNameStore(), tokenCommand.getAfter().getNameRecords() );\n@@ -199,4 +201,4 @@ public class HighIdTransactionApplier extends TransactionApplier.Adapter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "918",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport java.util.HashSet;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/918/VariableNameValidator.java\nindex a72e0535698..ccb1e3d8ec8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/918/VariableNameValidator.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.runtime.api.impl;\r\n \r\n import java.util.HashSet;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/918/VariableNameValidator.java\nindex a72e0535698..66c45ffbf54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/918/VariableNameValidator.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.runtime.api.impl;\r\n \r\n import java.util.HashSet;\r\n@@ -23,20 +24,20 @@ import java.util.regex.Pattern;\n import org.springframework.util.StringUtils;\r\n \r\n public class VariableNameValidator {\r\n-    \r\n+\r\n     public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n+\r\n+    public boolean validate(String name) {\r\n+\r\n+        if (StringUtils.hasLength(name)) {\r\n             if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n                 return true;\r\n-            }  \r\n+            }\r\n         }\r\n         return false;\r\n-        \r\n+\r\n     }\r\n-    \r\n+\r\n     public Set<String> validateVariables(Map<String, Object> variables) {\r\n         Set<String> mismatchedVars = new HashSet<>();\r\n         if (variables != null && !variables.isEmpty()) {\r\n@@ -44,9 +45,9 @@ public class VariableNameValidator {\n                 if (!validate(variable.getKey())) {\r\n                     mismatchedVars.add(variable.getKey());\r\n                 }\r\n-            }   \r\n+            }\r\n         }\r\n-        \r\n+\r\n         return mismatchedVars;\r\n     }\r\n \r\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/918/VariableNameValidator.java\nindex a72e0535698..f50c1a095c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/918/VariableNameValidator.java\n@@ -13,41 +13,36 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.activiti.runtime.api.impl;\r\n-\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.springframework.util.StringUtils;\r\n-\r\n-public class VariableNameValidator {\r\n-    \r\n-    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n-            if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n-                return true;\r\n-            }  \r\n-        }\r\n-        return false;\r\n-        \r\n-    }\r\n-    \r\n-    public Set<String> validateVariables(Map<String, Object> variables) {\r\n-        Set<String> mismatchedVars = new HashSet<>();\r\n-        if (variables != null && !variables.isEmpty()) {\r\n-            for (Map.Entry<String, Object> variable : variables.entrySet()) {\r\n-                if (!validate(variable.getKey())) {\r\n-                    mismatchedVars.add(variable.getKey());\r\n-                }\r\n-            }   \r\n-        }\r\n-        \r\n-        return mismatchedVars;\r\n-    }\r\n-\r\n-}\r\n+package org.activiti.runtime.api.impl;\n+\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import org.springframework.util.StringUtils;\n+\n+\n+public class VariableNameValidator {\n+\n+  public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\n+  public boolean validate(String name) {\n+    if (StringUtils.hasLength(name)) {\n+      if (Pattern.compile(regexPattern).matcher(name).matches()) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  public Set<String> validateVariables(Map<String, Object> variables) {\n+    Set<String> mismatchedVars = new HashSet<>();\n+    if (variables != null && !variables.isEmpty()) {\n+        for (Map.Entry<String, Object> variable : variables.entrySet()) {\n+          if (!validate(variable.getKey())) {\n+            mismatchedVars.add(variable.getKey());\n+          }\n+        }\n+    }\n+    return mismatchedVars;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/918/VariableNameValidator.java\nindex a72e0535698..ccb1e3d8ec8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/918/VariableNameValidator.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.runtime.api.impl;\r\n \r\n import java.util.HashSet;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/918/VariableNameValidator.java\nindex a72e0535698..ccb1e3d8ec8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/918/VariableNameValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/918/VariableNameValidator.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.runtime.api.impl;\r\n \r\n import java.util.HashSet;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
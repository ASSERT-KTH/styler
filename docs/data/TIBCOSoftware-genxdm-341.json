{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "341",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    implements TopLevelPattern\n{\n\tprivate final TopLevelPattern pattern1;\n\tprivate final PathPattern pattern2;\n\n\t/**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/341/AlternativesPattern.java\nindex e074a5d952f..737ecaf2cc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/341/AlternativesPattern.java\n@@ -32,7 +32,7 @@ import org.genxdm.xpath.v10.ExprException;\n class AlternativesPattern\r\n     implements TopLevelPattern\r\n {\r\n-\tprivate final TopLevelPattern pattern1;\r\n+private final TopLevelPattern pattern1;\r\n \tprivate final PathPattern pattern2;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/341/AlternativesPattern.java\nindex e074a5d952f..aba66042664 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/341/AlternativesPattern.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.patterns;\r\n \r\n import java.lang.reflect.Array;\r\n@@ -30,38 +31,37 @@ import org.genxdm.xpath.v10.ExprException;\n  * represents an \"OR\" (union) of match patterns\r\n  */\r\n class AlternativesPattern\r\n-    implements TopLevelPattern\r\n-{\r\n-\tprivate final TopLevelPattern pattern1;\r\n-\tprivate final PathPattern pattern2;\r\n+    implements TopLevelPattern {\r\n+    private final TopLevelPattern pattern1;\r\n+\r\n+    private final PathPattern pattern2;\r\n \r\n-\t/**\r\n-\t * construct with a head pattern1 and tail pattern2\r\n-\t */\r\n-\tAlternativesPattern(final TopLevelPattern pattern1, final PathPattern pattern2)\r\n-\t{\r\n-\t\tthis.pattern1 = pattern1;\r\n-\t\tthis.pattern2 = pattern2;\r\n-\t}\r\n+    /**\r\n+     * construct with a head pattern1 and tail pattern2\r\n+     */\r\n+    AlternativesPattern(final TopLevelPattern pattern1, final PathPattern pattern2) {\r\n+        this.pattern1 = pattern1;\r\n+        this.pattern2 = pattern2;\r\n+    }\r\n \r\n-\t/**\r\n-\t * evaluate to a boolean\r\n-\t */\r\n-\tpublic <N> boolean matches(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\treturn pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\r\n-\t}\r\n+    /**\r\n+     * evaluate to a boolean\r\n+     */\r\n+    public <N> boolean matches(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv)\r\n+        throws ExprException {\r\n+        return pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\r\n+    }\r\n \r\n-\t/**\r\n-\t * @return an array of all the alternative PathPatterns\r\n-\t */\r\n-\tpublic PathPattern[] getAlternatives()\r\n-\t{\r\n-\t\t// we decompose a backwards sort of lisp-like list\r\n-\t\tfinal PathPattern[] tem = pattern1.getAlternatives();\r\n-\t\tfinal PathPattern[] result = (PathPattern[])Array.newInstance(PathPattern.class, tem.length + 1);\r\n-\t\tSystem.arraycopy(tem, 0, result, 0, tem.length);\r\n-\t\tresult[result.length - 1] = pattern2;\r\n-\t\treturn result;\r\n-\t}\r\n+    /**\r\n+     * @return an array of all the alternative PathPatterns\r\n+     */\r\n+    public PathPattern[] getAlternatives() {\r\n+        // we decompose a backwards sort of lisp-like list\r\n+        final PathPattern[] tem = pattern1.getAlternatives();\r\n+        final PathPattern[] result =\r\n+            (PathPattern[]) Array.newInstance(PathPattern.class, tem.length + 1);\r\n+        System.arraycopy(tem, 0, result, 0, tem.length);\r\n+        result[result.length - 1] = pattern2;\r\n+        return result;\r\n+    }\r\n }\r\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/341/AlternativesPattern.java\nindex e074a5d952f..bf557cf26c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/341/AlternativesPattern.java\n@@ -31,37 +31,37 @@ import org.genxdm.xpath.v10.ExprException;\n  */\r\n class AlternativesPattern\r\n     implements TopLevelPattern\r\n-{\r\n-\tprivate final TopLevelPattern pattern1;\r\n+{\n+    private final TopLevelPattern pattern1;\r\n \tprivate final PathPattern pattern2;\r\n \r\n \t/**\r\n \t * construct with a head pattern1 and tail pattern2\r\n \t */\r\n \tAlternativesPattern(final TopLevelPattern pattern1, final PathPattern pattern2)\r\n-\t{\r\n-\t\tthis.pattern1 = pattern1;\r\n-\t\tthis.pattern2 = pattern2;\r\n-\t}\r\n+\t{\n+    this.pattern1 = pattern1;\r\n+\t\tthis.pattern2 = pattern2;\n+    }\r\n \r\n \t/**\r\n \t * evaluate to a boolean\r\n \t */\r\n \tpublic <N> boolean matches(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\treturn pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\r\n-\t}\r\n+\t{\n+    return pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\n+    }\r\n \r\n \t/**\r\n \t * @return an array of all the alternative PathPatterns\r\n \t */\r\n \tpublic PathPattern[] getAlternatives()\r\n-\t{\r\n-\t\t// we decompose a backwards sort of lisp-like list\r\n+\t{\n+    // we decompose a backwards sort of lisp-like list\r\n \t\tfinal PathPattern[] tem = pattern1.getAlternatives();\r\n \t\tfinal PathPattern[] result = (PathPattern[])Array.newInstance(PathPattern.class, tem.length + 1);\r\n \t\tSystem.arraycopy(tem, 0, result, 0, tem.length);\r\n \t\tresult[result.length - 1] = pattern2;\r\n-\t\treturn result;\r\n-\t}\r\n-}\r\n+\t\treturn result;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/341/AlternativesPattern.java\nindex e074a5d952f..30f8cc5a12c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/341/AlternativesPattern.java\n@@ -18,50 +18,52 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.patterns;\r\n-\r\n-import java.lang.reflect.Array;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n+package org.genxdm.processor.xpath.v10.patterns;\n+\n+import java.lang.reflect.Array;\n+import org.genxdm.Model;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n import org.genxdm.xpath.v10.ExprException;\r\n \r\n /**\r\n  * represents an \"OR\" (union) of match patterns\r\n- */\r\n-class AlternativesPattern\r\n-    implements TopLevelPattern\r\n-{\r\n-\tprivate final TopLevelPattern pattern1;\r\n-\tprivate final PathPattern pattern2;\r\n+ */\n+\n+class AlternativesPattern implements TopLevelPattern\n+{\n+    private final TopLevelPattern pattern1;\n+    private final PathPattern pattern2;\r\n \r\n-\t/**\r\n-\t * construct with a head pattern1 and tail pattern2\r\n-\t */\r\n-\tAlternativesPattern(final TopLevelPattern pattern1, final PathPattern pattern2)\r\n-\t{\r\n-\t\tthis.pattern1 = pattern1;\r\n-\t\tthis.pattern2 = pattern2;\r\n-\t}\r\n+    /**\r\n+     * construct with a head pattern1 and tail pattern2\r\n+     */\n+\n+    AlternativesPattern(final TopLevelPattern pattern1, final PathPattern pattern2)\n+    {\n+        this.pattern1 = pattern1;\n+        this.pattern2 = pattern2;\n+    }\r\n \r\n-\t/**\r\n-\t * evaluate to a boolean\r\n-\t */\r\n-\tpublic <N> boolean matches(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\treturn pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\r\n-\t}\r\n+    /**\r\n+     * evaluate to a boolean\r\n+     */\n+\n+    public <N> boolean matches(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) throws ExprException\n+    {\n+        return pattern1.matches(model, node, dynEnv) || pattern2.matches(model, node, dynEnv);\n+    }\r\n \r\n-\t/**\r\n-\t * @return an array of all the alternative PathPatterns\r\n-\t */\r\n-\tpublic PathPattern[] getAlternatives()\r\n-\t{\r\n-\t\t// we decompose a backwards sort of lisp-like list\r\n-\t\tfinal PathPattern[] tem = pattern1.getAlternatives();\r\n-\t\tfinal PathPattern[] result = (PathPattern[])Array.newInstance(PathPattern.class, tem.length + 1);\r\n-\t\tSystem.arraycopy(tem, 0, result, 0, tem.length);\r\n-\t\tresult[result.length - 1] = pattern2;\r\n-\t\treturn result;\r\n-\t}\r\n-}\r\n+    /**\r\n+     * @return an array of all the alternative PathPatterns\r\n+     */\n+\n+    public PathPattern[] getAlternatives()\n+    {\r\n+        // we decompose a backwards sort of lisp-like list\n+        final PathPattern[] tem = pattern1.getAlternatives();\n+        final PathPattern[] result = (PathPattern[])Array.newInstance(PathPattern.class, tem.length + 1);\n+        System.arraycopy(tem, 0, result, 0, tem.length);\n+        result[result.length - 1] = pattern2;\n+        return result;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/341/AlternativesPattern.java\nindex e074a5d952f..737ecaf2cc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/341/AlternativesPattern.java\n@@ -32,7 +32,7 @@ import org.genxdm.xpath.v10.ExprException;\n class AlternativesPattern\r\n     implements TopLevelPattern\r\n {\r\n-\tprivate final TopLevelPattern pattern1;\r\n+private final TopLevelPattern pattern1;\r\n \tprivate final PathPattern pattern2;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/341/AlternativesPattern.java\nindex e074a5d952f..1b8b50901ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/341/AlternativesPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/341/AlternativesPattern.java\n@@ -32,7 +32,7 @@ import org.genxdm.xpath.v10.ExprException;\n class AlternativesPattern\r\n     implements TopLevelPattern\r\n {\r\n-\tprivate final TopLevelPattern pattern1;\r\n+    private final TopLevelPattern pattern1;\r\n \tprivate final PathPattern pattern2;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
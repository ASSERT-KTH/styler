{
    "project_name": "SentinelDataHub-dhus-core",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "68",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 82).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "         return (T)this;\n      }\n      throw new UnsupportedOperationException(\"Unsupported impl \" + cl.getName());\n   }\n\n   @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/28/AsyncProduct.java\nindex c278e437603..123ea2f563b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler/28/AsyncProduct.java\n@@ -65,10 +65,11 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n       {\n          return (T)this;\n       }\n-      throw new UnsupportedOperationException(\"Unsupported impl \" + cl.getName());\n-   }\n+      throw new UnsupportedOperationException(\"Unsupported impl \" +\n+            cl.getName());\n+    }\n \n-   @Override\n+    @Override\n    public Long getContentLength()\n    {\n       return 0L;\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/28/AsyncProduct.java\nindex c278e437603..4ef35af5067 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/28/AsyncProduct.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.dhus.store.datastore.async;\n \n import org.dhus.AbstractProduct;\n@@ -28,56 +29,61 @@ import org.dhus.store.datastore.DataStoreProduct;\n  */\n public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n {\n-   /** Back link to store for {@link #asyncFetchData()}. */\n-   private final AsyncDataSource source;\n+    /**\n+     * Back link to store for {@link #asyncFetchData()}.\n+     */\n+    private final AsyncDataSource source;\n \n-   /**\n-    * Data or not data ... that is the question!\n-    * @param source Source store\n-    */\n-   public AsyncProduct(AsyncDataSource source)\n-   {\n-      this.source = source;\n-   }\n+    /**\n+     * Data or not data ... that is the question!\n+     *\n+     * @param source Source store\n+     */\n+    public AsyncProduct(AsyncDataSource source)\n+    {\n+        this.source = source;\n+    }\n \n-   /**\n-    * Please fetch that product for me.\n-    * @throws DataStoreException could not perform fetch\n-    * @see AsyncDataSource#fetch(AsyncProduct)\n-    */\n-   public void asyncFetchData() throws DataStoreException\n-   {\n-      this.source.fetch(this);\n-   }\n+    /**\n+     * Please fetch that product for me.\n+     *\n+     * @throws DataStoreException could not perform fetch\n+     * @see AsyncDataSource#fetch(AsyncProduct)\n+     */\n+    public void asyncFetchData() throws DataStoreException\n+    {\n+        this.source.fetch(this);\n+    }\n \n-   @Override\n-   protected Class<?>[] implsTypes()\n-   {\n-      Class<?>[] poo = new Class<?>[1];\n-      poo[0] = DataStoreProduct.class;\n-      return poo;\n-   }\n+    @Override\n+    protected Class<?>[] implsTypes()\n+    {\n+        Class<?>[] poo = new Class<?>[1];\n+        poo[0] = DataStoreProduct.class;\n+        return poo;\n+    }\n \n-   @Override\n-   public <T> T getImpl(Class<? extends T> cl)\n-   {\n-      if (DataStoreProduct.class.isAssignableFrom(cl))\n-      {\n-         return (T)this;\n-      }\n-      throw new UnsupportedOperationException(\"Unsupported impl \" + cl.getName());\n-   }\n+    @Override\n+    public <T> T getImpl(Class<? extends T> cl)\n+    {\n+        if (DataStoreProduct.class.isAssignableFrom(cl))\n+        {\n+            return (T) this;\n+        }\n+        throw new UnsupportedOperationException(\n+            \"Unsupported impl \" + cl.getName());\n+    }\n \n-   @Override\n-   public Long getContentLength()\n-   {\n-      return 0L;\n-   }\n+    @Override\n+    public Long getContentLength()\n+    {\n+        return 0L;\n+    }\n \n-   @Override\n-   public String getResourceLocation()\n-   {\n-      return null;\n-   }\n+    @Override\n+    public String getResourceLocation()\n+    {\n+        return null;\n+    }\n \n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/28/AsyncProduct.java\nindex c278e437603..f8720be0542 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/28/AsyncProduct.java\n@@ -80,4 +80,4 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n       return null;\n    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/28/AsyncProduct.java\nindex c278e437603..fcb01a88db9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/28/AsyncProduct.java\n@@ -26,6 +26,7 @@ import org.dhus.store.datastore.DataStoreProduct;\n /**\n  * A product whose data may not be accessible at that moment.\n  */\n+\n public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n {\n    /** Back link to store for {@link #asyncFetchData()}. */\n@@ -35,7 +36,8 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n     * Data or not data ... that is the question!\n     * @param source Source store\n     */\n-   public AsyncProduct(AsyncDataSource source)\n+\n+   public AsyncProduct (AsyncDataSource source)\n    {\n       this.source = source;\n    }\n@@ -45,13 +47,14 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n     * @throws DataStoreException could not perform fetch\n     * @see AsyncDataSource#fetch(AsyncProduct)\n     */\n-   public void asyncFetchData() throws DataStoreException\n+\n+   public void asyncFetchData () throws DataStoreException\n    {\n-      this.source.fetch(this);\n+      this.source.fetch (this);\n    }\n \n    @Override\n-   protected Class<?>[] implsTypes()\n+   protected Class<?>[] implsTypes ()\n    {\n       Class<?>[] poo = new Class<?>[1];\n       poo[0] = DataStoreProduct.class;\n@@ -61,23 +64,25 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n    @Override\n    public <T> T getImpl(Class<? extends T> cl)\n    {\n-      if (DataStoreProduct.class.isAssignableFrom(cl))\n+      if (DataStoreProduct.class.isAssignableFrom (cl))\n       {\n-         return (T)this;\n+         return (T) this;\n       }\n-      throw new UnsupportedOperationException(\"Unsupported impl \" + cl.getName());\n+\n+\n+      throw new UnsupportedOperationException(\"Unsupported impl \" +\n+      cl.getName ());\n    }\n \n    @Override\n-   public Long getContentLength()\n+   public Long getContentLength ()\n    {\n       return 0L;\n    }\n \n    @Override\n-   public String getResourceLocation()\n+   public String getResourceLocation ()\n    {\n       return null;\n    }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/28/AsyncProduct.java\nindex c278e437603..123ea2f563b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/28/AsyncProduct.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/styler_three_grams/28/AsyncProduct.java\n@@ -65,10 +65,11 @@ public class AsyncProduct extends AbstractProduct implements DataStoreProduct\n       {\n          return (T)this;\n       }\n-      throw new UnsupportedOperationException(\"Unsupported impl \" + cl.getName());\n-   }\n+      throw new UnsupportedOperationException(\"Unsupported impl \" +\n+            cl.getName());\n+    }\n \n-   @Override\n+    @Override\n    public Long getContentLength()\n    {\n       return 0L;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_random"
    ]
}
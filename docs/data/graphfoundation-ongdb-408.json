{
    "project_name": "graphfoundation-ongdb",
    "error_id": "408",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/408/AquireLockCall.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/408/AquireLockCall.java\nindex 5e5153f218b..81108f32364 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/408/AquireLockCall.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/408/AquireLockCall.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -31,19 +32,19 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n \n abstract class AquireLockCall implements TargetCaller<Master, LockResult>\n {\n-    @Override\n-    public Response<LockResult> call( Master master, RequestContext context,\n-                                      ChannelBuffer input, ChannelBuffer target )\n+  @Override\n+  public Response<LockResult> call(Master master, RequestContext context,\n+                                   ChannelBuffer input, ChannelBuffer target)\n+  {\n+    ResourceType type = ResourceTypes.fromId(input.readInt());\n+    long[] ids = new long[input.readInt()];\n+    for (int i = 0; i < ids.length; i++)\n     {\n-        ResourceType type = ResourceTypes.fromId( input.readInt() );\n-        long[] ids = new long[input.readInt()];\n-        for ( int i = 0; i < ids.length; i++ )\n-        {\n-            ids[i] = input.readLong();\n-        }\n-        return lock( master, context, type, ids );\n+      ids[i] = input.readLong();\n     }\n+    return lock(master, context, type, ids);\n+  }\n \n-    protected abstract Response<LockResult> lock( Master master, RequestContext context, ResourceType type,\n-                                                  long... ids );\n+  protected abstract Response<LockResult> lock(Master master, RequestContext context, ResourceType type,\n+                                               long... ids);\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/408/AquireLockCall.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/408/AquireLockCall.java\nindex 5e5153f218b..3a1b4447ff3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/408/AquireLockCall.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/408/AquireLockCall.java\n@@ -32,18 +32,17 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n abstract class AquireLockCall implements TargetCaller<Master, LockResult>\n {\n     @Override\n-    public Response<LockResult> call( Master master, RequestContext context,\n-                                      ChannelBuffer input, ChannelBuffer target )\n-    {\n+    public Response<LockResult> call( Master master, RequestContext context, ChannelBuffer input, ChannelBuffer target )\n+{\n         ResourceType type = ResourceTypes.fromId( input.readInt() );\n         long[] ids = new long[input.readInt()];\n         for ( int i = 0; i < ids.length; i++ )\n         {\n             ids[i] = input.readLong();\n         }\n-        return lock( master, context, type, ids );\n+\n+return lock( master, context, type, ids );\n     }\n \n-    protected abstract Response<LockResult> lock( Master master, RequestContext context, ResourceType type,\n-                                                  long... ids );\n-}\n+    protected abstract Response<LockResult> lock( Master master, RequestContext context, ResourceType type, long... ids );\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
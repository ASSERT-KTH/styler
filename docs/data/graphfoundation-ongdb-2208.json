{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2208",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2208/TxSingleNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2208/TxSingleNodeCursor.java\nindex debcdd9b7de..c2c5bafc50d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2208/TxSingleNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2208/TxSingleNodeCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.cursor;\n \n import java.util.function.Consumer;\n@@ -39,129 +40,128 @@ import static org.neo4j.kernel.impl.store.record.Record.NO_NEXT_RELATIONSHIP;\n  */\n public class TxSingleNodeCursor implements Cursor<NodeItem>, NodeItem\n {\n-    private final TransactionState state;\n-    private final Consumer<TxSingleNodeCursor> cache;\n-\n-    private long id = StatementConstants.NO_SUCH_NODE;\n-    private Cursor<NodeItem> cursor;\n-    private NodeState nodeState;\n-    private boolean nodeIsAddedInThisTx;\n-\n-    public TxSingleNodeCursor( TransactionState state, Consumer<TxSingleNodeCursor> cache )\n+  private final TransactionState state;\n+  private final Consumer<TxSingleNodeCursor> cache;\n+\n+  private long id = StatementConstants.NO_SUCH_NODE;\n+  private Cursor<NodeItem> cursor;\n+  private NodeState nodeState;\n+  private boolean nodeIsAddedInThisTx;\n+\n+  public TxSingleNodeCursor(TransactionState state, Consumer<TxSingleNodeCursor> cache)\n+  {\n+    this.state = state;\n+    this.cache = cache;\n+  }\n+\n+  public TxSingleNodeCursor init(Cursor<NodeItem> nodeCursor, long nodeId)\n+  {\n+    this.id = nodeId;\n+    this.cursor = nodeCursor;\n+    this.nodeIsAddedInThisTx = state.nodeIsAddedInThisTx(id);\n+    return this;\n+  }\n+\n+  @Override\n+  public NodeItem get()\n+  {\n+    if (id == StatementConstants.NO_SUCH_NODE)\n     {\n-        this.state = state;\n-        this.cache = cache;\n+      throw new IllegalStateException();\n     }\n \n-    public TxSingleNodeCursor init( Cursor<NodeItem> nodeCursor, long nodeId )\n-    {\n-        this.id = nodeId;\n-        this.cursor = nodeCursor;\n-        this.nodeIsAddedInThisTx = state.nodeIsAddedInThisTx( id );\n-        return this;\n-    }\n+    return this;\n+  }\n \n-    @Override\n-    public NodeItem get()\n+  @Override\n+  public boolean next()\n+  {\n+    if (id == StatementConstants.NO_SUCH_NODE)\n     {\n-        if ( id == StatementConstants.NO_SUCH_NODE )\n-        {\n-            throw new IllegalStateException();\n-        }\n-\n-        return this;\n+      return false;\n     }\n \n-    @Override\n-    public boolean next()\n+    if (state.nodeIsDeletedInThisTx(id))\n     {\n-        if ( id == StatementConstants.NO_SUCH_NODE )\n-        {\n-            return false;\n-        }\n-\n-        if ( state.nodeIsDeletedInThisTx( id ) )\n-        {\n-            this.id = StatementConstants.NO_SUCH_NODE;\n-            return false;\n-        }\n-\n-        if ( cursor.next() || nodeIsAddedInThisTx )\n-        {\n-            // this makes sure we read the node from tx state only once and we do not loop forever\n-            nodeIsAddedInThisTx = false;\n-            this.nodeState = state.getNodeState( id );\n-            return true;\n-        }\n-        else\n-        {\n-            this.id = StatementConstants.NO_SUCH_NODE;\n-            this.nodeState = null;\n-            return false;\n-        }\n+      this.id = StatementConstants.NO_SUCH_NODE;\n+      return false;\n     }\n \n-    @Override\n-    public void close()\n+    if (cursor.next() || nodeIsAddedInThisTx)\n     {\n-        cursor.close();\n-        cursor = null;\n-        cache.accept( this );\n-    }\n-\n-    @Override\n-    public long id()\n-    {\n-        return id;\n-    }\n-\n-    @Override\n-    public PrimitiveIntSet labels()\n+      // this makes sure we read the node from tx state only once and we do not loop forever\n+      nodeIsAddedInThisTx = false;\n+      this.nodeState = state.getNodeState(id);\n+      return true;\n+    } else\n     {\n-        return state.augmentLabels( nodeIsAddedInThisTx ? intSet() : this.cursor.get().labels(), nodeState );\n+      this.id = StatementConstants.NO_SUCH_NODE;\n+      this.nodeState = null;\n+      return false;\n     }\n-\n-    @Override\n-    public boolean hasLabel( int labelId )\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    cursor.close();\n+    cursor = null;\n+    cache.accept(this);\n+  }\n+\n+  @Override\n+  public long id()\n+  {\n+    return id;\n+  }\n+\n+  @Override\n+  public PrimitiveIntSet labels()\n+  {\n+    return state.augmentLabels(nodeIsAddedInThisTx ? intSet() : this.cursor.get().labels(), nodeState);\n+  }\n+\n+  @Override\n+  public boolean hasLabel(int labelId)\n+  {\n+    if (nodeIsAddedInThisTx || nodeState.labelDiffSets().getRemoved().contains(labelId))\n     {\n-        if ( nodeIsAddedInThisTx || nodeState.labelDiffSets().getRemoved().contains( labelId ) )\n-        {\n-            return false;\n-        }\n-        if ( nodeState.labelDiffSets().getAdded().contains( labelId ) )\n-        {\n-            return true;\n-        }\n-        return this.cursor.get().hasLabel( labelId );\n+      return false;\n     }\n-\n-    @Override\n-    public boolean isDense()\n-    {\n-        return cursor.get().isDense();\n-    }\n-\n-    @Override\n-    public long nextGroupId()\n-    {\n-        return nodeIsAddedInThisTx ? NO_NEXT_RELATIONSHIP.longValue() : cursor.get().nextGroupId();\n-    }\n-\n-    @Override\n-    public long nextRelationshipId()\n-    {\n-        return nodeIsAddedInThisTx ? NO_NEXT_RELATIONSHIP.longValue() : cursor.get().nextRelationshipId();\n-    }\n-\n-    @Override\n-    public long nextPropertyId()\n-    {\n-        return nodeIsAddedInThisTx ? NO_NEXT_PROPERTY.longValue() : cursor.get().nextPropertyId();\n-    }\n-\n-    @Override\n-    public Lock lock()\n+    if (nodeState.labelDiffSets().getAdded().contains(labelId))\n     {\n-        return nodeIsAddedInThisTx ? NO_LOCK : cursor.get().lock();\n+      return true;\n     }\n+    return this.cursor.get().hasLabel(labelId);\n+  }\n+\n+  @Override\n+  public boolean isDense()\n+  {\n+    return cursor.get().isDense();\n+  }\n+\n+  @Override\n+  public long nextGroupId()\n+  {\n+    return nodeIsAddedInThisTx ? NO_NEXT_RELATIONSHIP.longValue() : cursor.get().nextGroupId();\n+  }\n+\n+  @Override\n+  public long nextRelationshipId()\n+  {\n+    return nodeIsAddedInThisTx ? NO_NEXT_RELATIONSHIP.longValue() : cursor.get().nextRelationshipId();\n+  }\n+\n+  @Override\n+  public long nextPropertyId()\n+  {\n+    return nodeIsAddedInThisTx ? NO_NEXT_PROPERTY.longValue() : cursor.get().nextPropertyId();\n+  }\n+\n+  @Override\n+  public Lock lock()\n+  {\n+    return nodeIsAddedInThisTx ? NO_LOCK : cursor.get().lock();\n+  }\n }\n",
            "diff_size": 185
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2208/TxSingleNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2208/TxSingleNodeCursor.java\nindex debcdd9b7de..44bbb1dc8a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2208/TxSingleNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2208/TxSingleNodeCursor.java\n@@ -128,7 +128,8 @@ public class TxSingleNodeCursor implements Cursor<NodeItem>, NodeItem\n         {\n             return false;\n         }\n-        if ( nodeState.labelDiffSets().getAdded().contains( labelId ) )\n+\n+if ( nodeState.labelDiffSets().getAdded().contains( labelId ) )\n         {\n             return true;\n         }\n@@ -164,4 +165,4 @@ public class TxSingleNodeCursor implements Cursor<NodeItem>, NodeItem\n     {\n         return nodeIsAddedInThisTx ? NO_LOCK : cursor.get().lock();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
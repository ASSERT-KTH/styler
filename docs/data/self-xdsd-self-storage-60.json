{
    "project_name": "self-xdsd-self-storage",
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "101",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                )\n            ).fetch();\n        for(final Record rec : result) {\n            ofWallet.add(\n                new StoredPaymentMethod(\n                    this.storage,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/60/SelfPaymentMethods.java\nindex 71a5f22f803..fcc4e935693 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/60/SelfPaymentMethods.java\n@@ -98,7 +98,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n                     ).and(SLF_PAYMENTMETHODS_XDSD.TYPE.eq(wallet.type()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofWallet.add(\n                 new StoredPaymentMethod(\n                     this.storage,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/60/SelfPaymentMethods.java\nindex 71a5f22f803..b9a9d375b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/60/SelfPaymentMethods.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.PaymentMethod;\n@@ -41,6 +42,7 @@ import static com.selfxdsd.storage.generated.jooq.Tables.SLF_WALLETS_XDSD;\n \n /**\n  * PaymentMethods (of project Wallets) in Self.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.13\n@@ -59,7 +61,8 @@ public final class SelfPaymentMethods implements PaymentMethods {\n \n     /**\n      * Ctor.\n-     * @param storage Parent Storage.\n+     *\n+     * @param storage  Parent Storage.\n      * @param database Database.\n      */\n     public SelfPaymentMethods(\n@@ -98,7 +101,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n                     ).and(SLF_PAYMENTMETHODS_XDSD.TYPE.eq(wallet.type()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofWallet.add(\n                 new StoredPaymentMethod(\n                     this.storage,\n@@ -119,7 +122,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n     public PaymentMethod active() {\n         throw new UnsupportedOperationException(\n             \"You cannot get the active PaymentMethod out of all of them. \"\n-            + \"Call #ofWallet(...) first.\"\n+                + \"Call #ofWallet(...) first.\"\n         );\n     }\n \n@@ -132,7 +135,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n     public Iterator<PaymentMethod> iterator() {\n         throw new UnsupportedOperationException(\n             \"You cannot iterate over all PaymentMethods in Self. \"\n-            + \"Call #ofWallet(...) first.\"\n+                + \"Call #ofWallet(...) first.\"\n         );\n     }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/60/SelfPaymentMethods.java\nindex 71a5f22f803..cd9f62ac35d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/60/SelfPaymentMethods.java\n@@ -62,19 +62,15 @@ public final class SelfPaymentMethods implements PaymentMethods {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfPaymentMethods(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+    public SelfPaymentMethods(final Storage storage,\n+        final Database database) {\n         this.storage = storage;\n         this.database = database;\n     }\n \n     @Override\n-    public PaymentMethod register(\n-        final Wallet wallet,\n-        final String identifier\n-    ) {\n+    public PaymentMethod register(final Wallet wallet,\n+        final String identifier) {\n         return null;\n     }\n \n@@ -87,11 +83,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n     public PaymentMethods ofWallet(final Wallet wallet) {\n         final List<PaymentMethod> ofWallet = new ArrayList<>();\n         final Project project = wallet.project();\n-        final Result<Record> result = this.database\n-            .jooq()\n-            .select()\n-            .from(SLF_PAYMENTMETHODS_XDSD)\n-            .where(\n+        final Result<Record> result = this.database.jooq().select().from(SLF_PAYMENTMETHODS_XDSD).where(\n                 SLF_PAYMENTMETHODS_XDSD.PROVIDER.eq(project.provider()).and(\n                     SLF_PAYMENTMETHODS_XDSD.REPO_FULLNAME.eq(\n                         project.repoFullName()\n@@ -110,8 +102,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n         }\n         return new WalletPaymentMethods(\n             wallet,\n-            () -> ofWallet.stream(),\n-            this.storage\n+            () -> ofWallet.stream(), this.storage\n         );\n     }\n \n@@ -135,4 +126,4 @@ public final class SelfPaymentMethods implements PaymentMethods {\n             + \"Call #ofWallet(...) first.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 78, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "93",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "93",
                    "column": "60",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "99",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 284).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "120",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "147",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "189",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "212",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "220",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "253",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "267",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "269",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "271",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "273",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "132",
                    "column": "22",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/60/SelfPaymentMethods.java\nindex 71a5f22f803..675117362ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/60/SelfPaymentMethods.java\n@@ -31,12 +31,14 @@ import com.selfxdsd.core.projects.StoredPaymentMethod;\n import com.selfxdsd.core.projects.WalletPaymentMethods;\n import org.jooq.Record;\n import org.jooq.Result;\n-\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n \n+\n import static com.selfxdsd.storage.generated.jooq.Tables.SLF_PAYMENTMETHODS_XDSD;\n+\n+\n import static com.selfxdsd.storage.generated.jooq.Tables.SLF_WALLETS_XDSD;\n \n /**\n@@ -45,16 +47,21 @@ import static com.selfxdsd.storage.generated.jooq.Tables.SLF_WALLETS_XDSD;\n  * @version $Id$\n  * @since 0.0.13\n  */\n+\n+\n public final class SelfPaymentMethods implements PaymentMethods {\n \n     /**\n      * Parent Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Database.\n      */\n+\n     private final Database database;\n \n     /**\n@@ -62,19 +69,17 @@ public final class SelfPaymentMethods implements PaymentMethods {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfPaymentMethods(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+\n+\n+    public SelfPaymentMethods(final Storage storage, final Database database) {\n         this.storage = storage;\n-        this.database = database;\n+\n+\n+                                                                              this.database = database;\n     }\n \n     @Override\n-    public PaymentMethod register(\n-        final Wallet wallet,\n-        final String identifier\n-    ) {\n+    public PaymentMethod register(final Wallet wallet, final String identifier) {\n         return null;\n     }\n \n@@ -85,41 +90,36 @@ public final class SelfPaymentMethods implements PaymentMethods {\n \n     @Override\n     public PaymentMethods ofWallet(final Wallet wallet) {\n-        final List<PaymentMethod> ofWallet = new ArrayList<>();\n-        final Project project = wallet.project();\n-        final Result<Record> result = this.database\n-            .jooq()\n-            .select()\n-            .from(SLF_PAYMENTMETHODS_XDSD)\n-            .where(\n-                SLF_PAYMENTMETHODS_XDSD.PROVIDER.eq(project.provider()).and(\n-                    SLF_PAYMENTMETHODS_XDSD.REPO_FULLNAME.eq(\n-                        project.repoFullName()\n-                    ).and(SLF_PAYMENTMETHODS_XDSD.TYPE.eq(wallet.type()))\n-                )\n-            ).fetch();\n-        for(final Record rec : result) {\n-            ofWallet.add(\n-                new StoredPaymentMethod(\n-                    this.storage,\n-                    rec.getValue(SLF_PAYMENTMETHODS_XDSD.IDENTIFIER),\n-                    wallet,\n-                    rec.getValue(SLF_WALLETS_XDSD.ACTIVE)\n-                )\n-            );\n-        }\n+        final List < PaymentMethod> ofWallet= new ArrayList <>();\n+\n+\n+        final Project project= wallet.project();\n+\n+\n+        final Result < Record> result=\n+            this.database.jooq() .select() .from( SLF_PAYMENTMETHODS_XDSD) .where( SLF_PAYMENTMETHODS_XDSD.PROVIDER.eq( project.provider() ) .and( SLF_PAYMENTMETHODS_XDSD.REPO_FULLNAME.eq( project.repoFullName() ) .and( SLF_PAYMENTMETHODS_XDSD.TYPE.eq( wallet.type() ) ) ) ) .fetch();\n+\n+\n+        for( final Record rec: result) {\n+                                           ofWallet.add( new StoredPaymentMethod(\n+                                                             this.storage,\n+                                                             rec.getValue( SLF_PAYMENTMETHODS_XDSD.IDENTIFIER),\n+                                                             wallet,\n+                                                             rec.getValue( SLF_WALLETS_XDSD.ACTIVE)\n+                                                         ) );\n+                                       }\n+\n         return new WalletPaymentMethods(\n-            wallet,\n-            () -> ofWallet.stream(),\n-            this.storage\n-        );\n+                   wallet,\n+                   ( )-> ofWallet.stream(),\n+                   this.storage\n+               );\n     }\n \n     @Override\n     public PaymentMethod active() {\n         throw new UnsupportedOperationException(\n-            \"You cannot get the active PaymentMethod out of all of them. \"\n-            + \"Call #ofWallet(...) first.\"\n+                  \"You cannot get the active PaymentMethod out of all of them. \" + \"Call #ofWallet(...) first.\"\n         );\n     }\n \n@@ -129,10 +129,9 @@ public final class SelfPaymentMethods implements PaymentMethods {\n     }\n \n     @Override\n-    public Iterator<PaymentMethod> iterator() {\n+    public Iterator < PaymentMethod> iterator() {\n         throw new UnsupportedOperationException(\n-            \"You cannot iterate over all PaymentMethods in Self. \"\n-            + \"Call #ofWallet(...) first.\"\n+                  \"You cannot iterate over all PaymentMethods in Self. \" + \"Call #ofWallet(...) first.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/60/SelfPaymentMethods.java\nindex 71a5f22f803..fcc4e935693 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/60/SelfPaymentMethods.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/60/SelfPaymentMethods.java\n@@ -98,7 +98,7 @@ public final class SelfPaymentMethods implements PaymentMethods {\n                     ).and(SLF_PAYMENTMETHODS_XDSD.TYPE.eq(wallet.type()))\n                 )\n             ).fetch();\n-        for(final Record rec : result) {\n+        for (final Record rec : result) {\n             ofWallet.add(\n                 new StoredPaymentMethod(\n                     this.storage,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
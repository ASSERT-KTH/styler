{
    "project_name": "java110-MicroCommunity",
    "error_id": "530",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 184).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n\n        if (meterWaters == null || meterWaters.size() == 0) {\n            return meterWaters;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..9747c43e175 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/530/MeterWaterInnerServiceSMOImpl.java\n@@ -43,8 +43,9 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n         if (page != PageDto.DEFAULT_PAGE) {\n             meterWaterDto.setPage((page - 1) * meterWaterDto.getRow());\n         }\n+    List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil\n \n-        List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n+        . beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n \n         if (meterWaters == null || meterWaters.size() == 0) {\n             return meterWaters;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..bc35e820b4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/530/MeterWaterInnerServiceSMOImpl.java\n@@ -44,7 +44,8 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n             meterWaterDto.setPage((page - 1) * meterWaterDto.getRow());\n         }\n \n-        List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n+        List<MeterWaterDto> meterWaters = BeanConvertUtil\n+            .covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n \n         if (meterWaters == null || meterWaters.size() == 0) {\n             return meterWaters;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..79537f9a059 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/530/MeterWaterInnerServiceSMOImpl.java\n@@ -109,4 +109,4 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..c46708a9d7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/530/MeterWaterInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.intf.fee.IMeterWaterInnerServiceSMO;\n import com.java110.intf.user.IUserInnerServiceSMO;\n@@ -12,7 +11,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +22,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMeterWaterInnerServiceSMO {\n \n@@ -38,14 +38,14 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = meterWaterDto.getPage();\n \n+\n+        int page = meterWaterDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             meterWaterDto.setPage((page - 1) * meterWaterDto.getRow());\n         }\n \n         List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n-\n         if (meterWaters == null || meterWaters.size() == 0) {\n             return meterWaters;\n         }\n@@ -53,7 +53,6 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n         String[] userIds = getUserIds(meterWaters);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (MeterWaterDto meterWater : meterWaters) {\n             refreshMeterWater(meterWater, users);\n         }\n@@ -66,6 +65,8 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n      * @param meterWater \u5c0f\u533a\u6c34\u7535\u8d39\u4fe1\u606f\n      * @param users      \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshMeterWater(MeterWaterDto meterWater, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (meterWater.getWaterId().equals(user.getUserId())) {\n@@ -80,12 +81,13 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n      * @param meterWaters \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<MeterWaterDto> meterWaters) {\n         List<String> userIds = new ArrayList<String>();\n         for (MeterWaterDto meterWater : meterWaters) {\n             userIds.add(meterWater.getWaterId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -109,4 +111,4 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..046311085de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/530/MeterWaterInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             meterWaterDto.setPage((page - 1) * meterWaterDto.getRow());\n-        }\n-\n-        List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n+        }List <MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n \n         if (meterWaters == null || meterWaters.size() == 0) {\n             return meterWaters;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/530/MeterWaterInnerServiceSMOImpl.java\nindex 2e05298f403..9747c43e175 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/530/MeterWaterInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/530/MeterWaterInnerServiceSMOImpl.java\n@@ -43,8 +43,9 @@ public class MeterWaterInnerServiceSMOImpl extends BaseServiceSMO implements IMe\n         if (page != PageDto.DEFAULT_PAGE) {\n             meterWaterDto.setPage((page - 1) * meterWaterDto.getRow());\n         }\n+    List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil\n \n-        List<MeterWaterDto> meterWaters = BeanConvertUtil.covertBeanList(meterWaterServiceDaoImpl.getMeterWaterInfo(BeanConvertUtil.beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n+        . beanCovertMap(meterWaterDto)), MeterWaterDto.class);\n \n         if (meterWaters == null || meterWaters.size() == 0) {\n             return meterWaters;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
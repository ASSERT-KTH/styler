{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1488",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1488/UniquePropertyValueValidationException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1488/UniquePropertyValueValidationException.java\nindex 10096ead37a..883c08af730 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1488/UniquePropertyValueValidationException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1488/UniquePropertyValueValidationException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.exceptions.schema;\n \n import java.util.Collections;\n@@ -32,57 +33,57 @@ import org.neo4j.kernel.api.schema.constaints.IndexBackedConstraintDescriptor;\n \n public class UniquePropertyValueValidationException extends ConstraintValidationException\n {\n-    private final Set<IndexEntryConflictException> conflicts;\n+  private final Set<IndexEntryConflictException> conflicts;\n \n-    public UniquePropertyValueValidationException( IndexBackedConstraintDescriptor constraint,\n-            ConstraintValidationException.Phase phase, IndexEntryConflictException conflict )\n-    {\n-        this( constraint, phase, Collections.singleton( conflict ) );\n-    }\n+  public UniquePropertyValueValidationException(IndexBackedConstraintDescriptor constraint,\n+                                                ConstraintValidationException.Phase phase, IndexEntryConflictException conflict)\n+  {\n+    this(constraint, phase, Collections.singleton(conflict));\n+  }\n \n-    public UniquePropertyValueValidationException( IndexBackedConstraintDescriptor constraint,\n-            ConstraintValidationException.Phase phase, Set<IndexEntryConflictException> conflicts )\n-    {\n-        super( constraint, phase, phase == Phase.VERIFICATION ? \"Existing data\" : \"New data\", buildCauseChain( conflicts ) );\n-        this.conflicts = conflicts;\n-    }\n+  public UniquePropertyValueValidationException(IndexBackedConstraintDescriptor constraint,\n+                                                ConstraintValidationException.Phase phase, Set<IndexEntryConflictException> conflicts)\n+  {\n+    super(constraint, phase, phase == Phase.VERIFICATION ? \"Existing data\" : \"New data\", buildCauseChain(conflicts));\n+    this.conflicts = conflicts;\n+  }\n \n-    private static IndexEntryConflictException buildCauseChain( Set<IndexEntryConflictException> conflicts )\n+  private static IndexEntryConflictException buildCauseChain(Set<IndexEntryConflictException> conflicts)\n+  {\n+    IndexEntryConflictException chainedConflicts = null;\n+    for (IndexEntryConflictException conflict : conflicts)\n     {\n-        IndexEntryConflictException chainedConflicts = null;\n-        for ( IndexEntryConflictException conflict : conflicts )\n-        {\n-            chainedConflicts = Exceptions.chain( chainedConflicts, conflict );\n-        }\n-        return chainedConflicts;\n+      chainedConflicts = Exceptions.chain(chainedConflicts, conflict);\n     }\n+    return chainedConflicts;\n+  }\n \n-    public UniquePropertyValueValidationException( IndexBackedConstraintDescriptor constraint,\n-            ConstraintValidationException.Phase phase, Throwable cause )\n-    {\n-        super( constraint, phase, phase == Phase.VERIFICATION ? \"Existing data\" : \"New data\", cause );\n-        this.conflicts = Collections.emptySet();\n-    }\n+  public UniquePropertyValueValidationException(IndexBackedConstraintDescriptor constraint,\n+                                                ConstraintValidationException.Phase phase, Throwable cause)\n+  {\n+    super(constraint, phase, phase == Phase.VERIFICATION ? \"Existing data\" : \"New data\", cause);\n+    this.conflicts = Collections.emptySet();\n+  }\n \n-    @Override\n-    public String getUserMessage( TokenNameLookup tokenNameLookup )\n+  @Override\n+  public String getUserMessage(TokenNameLookup tokenNameLookup)\n+  {\n+    SchemaDescriptor schema = constraint.schema();\n+    StringBuilder message = new StringBuilder();\n+    for (Iterator<IndexEntryConflictException> iterator = conflicts.iterator(); iterator.hasNext(); )\n     {\n-        SchemaDescriptor schema = constraint.schema();\n-        StringBuilder message = new StringBuilder();\n-        for ( Iterator<IndexEntryConflictException> iterator = conflicts.iterator(); iterator.hasNext(); )\n-        {\n-            IndexEntryConflictException conflict = iterator.next();\n-            message.append( conflict.evidenceMessage( tokenNameLookup, schema ) );\n-            if ( iterator.hasNext() )\n-            {\n-                message.append( System.lineSeparator() );\n-            }\n-        }\n-        return message.toString();\n+      IndexEntryConflictException conflict = iterator.next();\n+      message.append(conflict.evidenceMessage(tokenNameLookup, schema));\n+      if (iterator.hasNext())\n+      {\n+        message.append(System.lineSeparator());\n+      }\n     }\n+    return message.toString();\n+  }\n \n-    public Set<IndexEntryConflictException> conflicts()\n-    {\n-        return conflicts;\n-    }\n+  public Set<IndexEntryConflictException> conflicts()\n+  {\n+    return conflicts;\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1488/UniquePropertyValueValidationException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1488/UniquePropertyValueValidationException.java\nindex 10096ead37a..cc74c6826ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1488/UniquePropertyValueValidationException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1488/UniquePropertyValueValidationException.java\n@@ -54,7 +54,8 @@ public class UniquePropertyValueValidationException extends ConstraintValidation\n         {\n             chainedConflicts = Exceptions.chain( chainedConflicts, conflict );\n         }\n-        return chainedConflicts;\n+\n+return chainedConflicts;\n     }\n \n     public UniquePropertyValueValidationException( IndexBackedConstraintDescriptor constraint,\n@@ -69,7 +70,8 @@ public class UniquePropertyValueValidationException extends ConstraintValidation\n     {\n         SchemaDescriptor schema = constraint.schema();\n         StringBuilder message = new StringBuilder();\n-        for ( Iterator<IndexEntryConflictException> iterator = conflicts.iterator(); iterator.hasNext(); )\n+        for ( Iterator<IndexEntryConflictException> iterator = conflicts.iterator();\n+iterator.hasNext(); )\n         {\n             IndexEntryConflictException conflict = iterator.next();\n             message.append( conflict.evidenceMessage( tokenNameLookup, schema ) );\n@@ -85,4 +87,4 @@ public class UniquePropertyValueValidationException extends ConstraintValidation\n     {\n         return conflicts;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
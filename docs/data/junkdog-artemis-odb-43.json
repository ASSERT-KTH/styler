{
    "project_name": "junkdog-artemis-odb",
    "error_id": "43",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 111).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tfor (int i = 0; i < count; i++) {\n\t\t\tint id = input.readInt();\n\t\t\tArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n\t\t\tarchetypes.compositionIdMapper.put(id, te);\n\t\t}\n\t\treturn archetypes;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/43/KryoArchetypeMapperSerializer.java\nindex 8e468a38cbe..1606da3d46f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/43/KryoArchetypeMapperSerializer.java\n@@ -28,8 +28,8 @@ public class KryoArchetypeMapperSerializer extends Serializer<ArchetypeMapper> {\n \t\tint count = input.readInt();\n \t\tfor (int i = 0; i < count; i++) {\n \t\t\tint id = input.readInt();\n-\t\t\tArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n-\t\t\tarchetypes.compositionIdMapper.put(id, te);\n+\t\t\t\tArchetypeMapper .TransmuterEntry te =kryo.readObject (input,\n+\t\t\tArchetypeMapper . TransmuterEntry .class);archetypes.compositionIdMapper.put(id, te);\n \t\t}\n \t\treturn archetypes;\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/43/KryoArchetypeMapperSerializer.java\nindex 8e468a38cbe..609cfb4c38d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/43/KryoArchetypeMapperSerializer.java\n@@ -9,28 +9,29 @@ import java.util.Map;\n \n public class KryoArchetypeMapperSerializer extends Serializer<ArchetypeMapper> {\n \n-\t@Override\n-\tpublic void write (Kryo kryo, Output output, ArchetypeMapper archetypeMapper) {\n-\t\tint count = 0;\n-\t\tfor (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n-\t\t\tcount++;\n-\t\t}\n-\t\toutput.writeInt(count);\n-\t\tfor (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n-\t\t\toutput.writeInt(entry.getKey());\n-\t\t\tkryo.writeObject(output, entry.getValue());\n-\t\t}\n-\t}\n+    @Override\n+    public void write(Kryo kryo, Output output, ArchetypeMapper archetypeMapper) {\n+        int count = 0;\n+        for (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n+            count++;\n+        }\n+        output.writeInt(count);\n+        for (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n+            output.writeInt(entry.getKey());\n+            kryo.writeObject(output, entry.getValue());\n+        }\n+    }\n \n-\t@Override\n-\tpublic ArchetypeMapper read (Kryo kryo, Input input, Class<ArchetypeMapper> aClass) {\n-\t\tArchetypeMapper archetypes = new ArchetypeMapper();\n-\t\tint count = input.readInt();\n-\t\tfor (int i = 0; i < count; i++) {\n-\t\t\tint id = input.readInt();\n-\t\t\tArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n-\t\t\tarchetypes.compositionIdMapper.put(id, te);\n-\t\t}\n-\t\treturn archetypes;\n-\t}\n+    @Override\n+    public ArchetypeMapper read(Kryo kryo, Input input, Class<ArchetypeMapper> aClass) {\n+        ArchetypeMapper archetypes = new ArchetypeMapper();\n+        int count = input.readInt();\n+        for (int i = 0; i < count; i++) {\n+            int id = input.readInt();\n+            ArchetypeMapper.TransmuterEntry te =\n+                    kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n+            archetypes.compositionIdMapper.put(id, te);\n+        }\n+        return archetypes;\n+    }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/43/KryoArchetypeMapperSerializer.java\nindex 8e468a38cbe..4b47310d2ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/43/KryoArchetypeMapperSerializer.java\n@@ -33,4 +33,4 @@ public class KryoArchetypeMapperSerializer extends Serializer<ArchetypeMapper> {\n \t\t}\n \t\treturn archetypes;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/43/KryoArchetypeMapperSerializer.java\nindex 8e468a38cbe..5f8abb5d1bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/43/KryoArchetypeMapperSerializer.java\n@@ -4,33 +4,33 @@ import com.esotericsoftware.kryo.Kryo;\n import com.esotericsoftware.kryo.Serializer;\n import com.esotericsoftware.kryo.io.Input;\n import com.esotericsoftware.kryo.io.Output;\n-\n import java.util.Map;\n \n public class KryoArchetypeMapperSerializer extends Serializer<ArchetypeMapper> {\n+ @Override\n+ public void write(Kryo kryo, Output output, ArchetypeMapper archetypeMapper) {\n+  int count = 0;\n+  for (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n+   count++;\n+  }\n+\n+  output.writeInt(count);\n+  for (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n+   output.writeInt(entry.getKey());\n+   kryo.writeObject(output, entry.getValue());\n+  }\n+ }\n \n-\t@Override\n-\tpublic void write (Kryo kryo, Output output, ArchetypeMapper archetypeMapper) {\n-\t\tint count = 0;\n-\t\tfor (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n-\t\t\tcount++;\n-\t\t}\n-\t\toutput.writeInt(count);\n-\t\tfor (Map.Entry<Integer, ArchetypeMapper.TransmuterEntry> entry : archetypeMapper.entrySet()) {\n-\t\t\toutput.writeInt(entry.getKey());\n-\t\t\tkryo.writeObject(output, entry.getValue());\n-\t\t}\n-\t}\n+ @Override\n+ public ArchetypeMapper read(Kryo kryo, Input input, Class<ArchetypeMapper> aClass) {\n+  ArchetypeMapper archetypes = new ArchetypeMapper();\n+  int count = input.readInt();\n+  for (int i = 0; i < count; i++) {\n+   int id = input.readInt();\n+   ArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n+   archetypes.compositionIdMapper.put(id, te);\n+  }\n \n-\t@Override\n-\tpublic ArchetypeMapper read (Kryo kryo, Input input, Class<ArchetypeMapper> aClass) {\n-\t\tArchetypeMapper archetypes = new ArchetypeMapper();\n-\t\tint count = input.readInt();\n-\t\tfor (int i = 0; i < count; i++) {\n-\t\t\tint id = input.readInt();\n-\t\t\tArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n-\t\t\tarchetypes.compositionIdMapper.put(id, te);\n-\t\t}\n-\t\treturn archetypes;\n-\t}\n-}\n+  return archetypes;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/43/KryoArchetypeMapperSerializer.java\nindex 8e468a38cbe..1606da3d46f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/43/KryoArchetypeMapperSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/43/KryoArchetypeMapperSerializer.java\n@@ -28,8 +28,8 @@ public class KryoArchetypeMapperSerializer extends Serializer<ArchetypeMapper> {\n \t\tint count = input.readInt();\n \t\tfor (int i = 0; i < count; i++) {\n \t\t\tint id = input.readInt();\n-\t\t\tArchetypeMapper.TransmuterEntry te = kryo.readObject(input, ArchetypeMapper.TransmuterEntry.class);\n-\t\t\tarchetypes.compositionIdMapper.put(id, te);\n+\t\t\t\tArchetypeMapper .TransmuterEntry te =kryo.readObject (input,\n+\t\t\tArchetypeMapper . TransmuterEntry .class);archetypes.compositionIdMapper.put(id, te);\n \t\t}\n \t\treturn archetypes;\n \t}\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_random"
    ]
}
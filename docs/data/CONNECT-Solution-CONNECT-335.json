{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "335",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.callback.purposeuse;\n\nimport gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\nimport gov.hhs.fha.nhinc.nhinclib.NhincConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/335/PurposeUseProxyCommunityImpl.java\nindex ef8575a19c1..02bebe9087b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/335/PurposeUseProxyCommunityImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.callback.purposeuse;\n-\n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.properties.IPropertyAcessor;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/335/PurposeUseProxyCommunityImpl.java\nindex ef8575a19c1..0b8691222f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/335/PurposeUseProxyCommunityImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.callback.purposeuse;\n \n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n@@ -35,70 +36,69 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author rhalfert\n  */\n public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyCommunityImpl.class);\n-\n-    private static final String PURPOSE_FOR_USE_PROPERTY_FILE = \"purposeUse\";\n-    private final IPropertyAcessor propertyAccessor;\n+  private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyCommunityImpl.class);\n \n-    /**\n-     * Constructor allows injection of the property accessor.\n-     *\n-     * @param propertyAccessor used to pull properties.\n-     */\n-    public PurposeUseProxyCommunityImpl(IPropertyAcessor propertyAccessor) {\n-        super();\n-        this.propertyAccessor = propertyAccessor;\n-    }\n+  private static final String PURPOSE_FOR_USE_PROPERTY_FILE = \"purposeUse\";\n+  private final IPropertyAcessor propertyAccessor;\n \n-    /**\n-     * Default constructor.\n-     */\n-    public PurposeUseProxyCommunityImpl() {\n-        super();\n-        propertyAccessor = PropertyAccessor.getInstance();\n-    }\n+  /**\n+   * Constructor allows injection of the property accessor.\n+   *\n+   * @param propertyAccessor used to pull properties.\n+   */\n+  public PurposeUseProxyCommunityImpl(IPropertyAcessor propertyAccessor) {\n+    super();\n+    this.propertyAccessor = propertyAccessor;\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n+  /**\n+   * Default constructor.\n+   */\n+  public PurposeUseProxyCommunityImpl() {\n+    super();\n+    propertyAccessor = PropertyAccessor.getInstance();\n+  }\n \n-        // check configured hcid value in purpose for use properties file\n-        String targetHomeCommunityId = callbackProperties.getTargetHomeCommunityId();\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n \n-        if (targetHomeCommunityId != null) {\n-            if (targetHomeCommunityId.startsWith(NhincConstants.HCID_PREFIX)) {\n-                targetHomeCommunityId = targetHomeCommunityId.replace(NhincConstants.HCID_PREFIX, \"\");\n-            }\n-            return isPurposeForUseEnabled(targetHomeCommunityId);\n-        }\n+    // check configured hcid value in purpose for use properties file\n+    String targetHomeCommunityId = callbackProperties.getTargetHomeCommunityId();\n \n-        return false;\n+    if (targetHomeCommunityId != null) {\n+      if (targetHomeCommunityId.startsWith(NhincConstants.HCID_PREFIX)) {\n+        targetHomeCommunityId = targetHomeCommunityId.replace(NhincConstants.HCID_PREFIX, \"\");\n+      }\n+      return isPurposeForUseEnabled(targetHomeCommunityId);\n     }\n \n-    /**\n-     * Returns boolean condition on whether PurposeForUse is enabled based on HCID.\n-     *\n-     * @param homeCommunityId The home community for which to check the property setting\n-     * @return The PurposeForUse enabled setting\n-     */\n-    private boolean isPurposeForUseEnabled(String homeCommunityId) {\n-        boolean match = false;\n-        try {\n-            String purposeForUseEnabled = propertyAccessor.getProperty(PURPOSE_FOR_USE_PROPERTY_FILE, homeCommunityId);\n-            if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n-                match = true;\n-            }\n-        } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId,\n-                    PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n-        return match;\n+    return false;\n+  }\n+\n+  /**\n+   * Returns boolean condition on whether PurposeForUse is enabled based on HCID.\n+   *\n+   * @param homeCommunityId The home community for which to check the property setting\n+   * @return The PurposeForUse enabled setting\n+   */\n+  private boolean isPurposeForUseEnabled(String homeCommunityId) {\n+    boolean match = false;\n+    try {\n+      String purposeForUseEnabled = propertyAccessor.getProperty(PURPOSE_FOR_USE_PROPERTY_FILE, homeCommunityId);\n+      if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n+        match = true;\n+      }\n+    } catch (PropertyAccessException ex) {\n+      LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId,\n+          PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n     }\n+    return match;\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/335/PurposeUseProxyCommunityImpl.java\nindex ef8575a19c1..89595d8a30f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/335/PurposeUseProxyCommunityImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.callback.purposeuse;\n \n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n@@ -71,11 +72,11 @@ public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n \n         // check configured hcid value in purpose for use properties file\n         String targetHomeCommunityId = callbackProperties.getTargetHomeCommunityId();\n-\n-        if (targetHomeCommunityId != null) {\n+if (targetHomeCommunityId != null) {\n             if (targetHomeCommunityId.startsWith(NhincConstants.HCID_PREFIX)) {\n                 targetHomeCommunityId = targetHomeCommunityId.replace(NhincConstants.HCID_PREFIX, \"\");\n-            }\n+\n+    }\n             return isPurposeForUseEnabled(targetHomeCommunityId);\n         }\n \n@@ -96,9 +97,9 @@ public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n                 match = true;\n             }\n         } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId,\n-                    PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n-        }\n+            LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId, PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n+\n+    }\n         return match;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/335/PurposeUseProxyCommunityImpl.java\nindex ef8575a19c1..e438ec0f1e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/335/PurposeUseProxyCommunityImpl.java\n@@ -38,10 +38,11 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author rhalfert\n  */\n+\n+\n public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyCommunityImpl.class);\n-\n     private static final String PURPOSE_FOR_USE_PROPERTY_FILE = \"purposeUse\";\n     private final IPropertyAcessor propertyAccessor;\n \n@@ -50,35 +51,38 @@ public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n      *\n      * @param propertyAccessor used to pull properties.\n      */\n+\n     public PurposeUseProxyCommunityImpl(IPropertyAcessor propertyAccessor) {\n-        super();\n-        this.propertyAccessor = propertyAccessor;\n+                                                                           super();\n+                                                                           this.propertyAccessor = propertyAccessor;\n     }\n \n     /**\n      * Default constructor.\n      */\n+\n+\n     public PurposeUseProxyCommunityImpl() {\n-        super();\n-        propertyAccessor = PropertyAccessor.getInstance();\n+                                          super();\n+                                          propertyAccessor = PropertyAccessor.getInstance();\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n \n         // check configured hcid value in purpose for use properties file\n         String targetHomeCommunityId = callbackProperties.getTargetHomeCommunityId();\n-\n         if (targetHomeCommunityId != null) {\n             if (targetHomeCommunityId.startsWith(NhincConstants.HCID_PREFIX)) {\n                 targetHomeCommunityId = targetHomeCommunityId.replace(NhincConstants.HCID_PREFIX, \"\");\n             }\n             return isPurposeForUseEnabled(targetHomeCommunityId);\n         }\n-\n         return false;\n     }\n \n@@ -88,6 +92,7 @@ public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n      * @param homeCommunityId The home community for which to check the property setting\n      * @return The PurposeForUse enabled setting\n      */\n+\n     private boolean isPurposeForUseEnabled(String homeCommunityId) {\n         boolean match = false;\n         try {\n@@ -96,9 +101,9 @@ public class PurposeUseProxyCommunityImpl implements PurposeUseProxy {\n                 match = true;\n             }\n         } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId,\n-                    PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n+            LOG.error(\"Error: Failed to retrieve (homeCommunityId) {} from property file {}: {}\", homeCommunityId, PURPOSE_FOR_USE_PROPERTY_FILE, ex.getLocalizedMessage(), ex);\n         }\n         return match;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/335/PurposeUseProxyCommunityImpl.java\nindex ef8575a19c1..02bebe9087b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/335/PurposeUseProxyCommunityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/335/PurposeUseProxyCommunityImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.callback.purposeuse;\n-\n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.properties.IPropertyAcessor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
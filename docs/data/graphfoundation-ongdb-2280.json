{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2280",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "100",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2280/DirectRecordStoreMigrator.java\nindex b4fbc6d88e7..ce4301d3a9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2280/DirectRecordStoreMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.File;\n@@ -47,87 +48,87 @@ import static org.neo4j.helpers.ArrayUtil.contains;\n  */\n public class DirectRecordStoreMigrator\n {\n-    private final PageCache pageCache;\n-    private final FileSystemAbstraction fs;\n-    private final Config config;\n+  private final PageCache pageCache;\n+  private final FileSystemAbstraction fs;\n+  private final Config config;\n \n-    public DirectRecordStoreMigrator( PageCache pageCache, FileSystemAbstraction fs, Config config )\n-    {\n-        this.pageCache = pageCache;\n-        this.fs = fs;\n-        this.config = config;\n-    }\n+  public DirectRecordStoreMigrator(PageCache pageCache, FileSystemAbstraction fs, Config config)\n+  {\n+    this.pageCache = pageCache;\n+    this.fs = fs;\n+    this.config = config;\n+  }\n \n-    public void migrate( File fromStoreDir, RecordFormats fromFormat, File toStoreDir, RecordFormats toFormat,\n-            ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen )\n-    {\n-        StoreType[] storesToOpen = ArrayUtil.concat( types, additionalTypesToOpen );\n-        progressReporter.start( storesToOpen.length );\n+  public void migrate(File fromStoreDir, RecordFormats fromFormat, File toStoreDir, RecordFormats toFormat,\n+                      ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen)\n+  {\n+    StoreType[] storesToOpen = ArrayUtil.concat(types, additionalTypesToOpen);\n+    progressReporter.start(storesToOpen.length);\n \n-        try (\n-                NeoStores fromStores = new StoreFactory( fromStoreDir, config, new DefaultIdGeneratorFactory( fs ),\n-                    pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen );\n-                NeoStores toStores = new StoreFactory( toStoreDir, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ),\n-                    new DefaultIdGeneratorFactory( fs ), pageCache, fs, toFormat, NullLogProvider.getInstance(),\n-                        EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen ) )\n+    try (\n+        NeoStores fromStores = new StoreFactory(fromStoreDir, config, new DefaultIdGeneratorFactory(fs),\n+            pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY)\n+            .openNeoStores(true, storesToOpen);\n+        NeoStores toStores = new StoreFactory(toStoreDir, withPersistedStoreHeadersAsConfigFrom(fromStores, storesToOpen),\n+            new DefaultIdGeneratorFactory(fs), pageCache, fs, toFormat, NullLogProvider.getInstance(),\n+            EmptyVersionContextSupplier.EMPTY)\n+            .openNeoStores(true, storesToOpen))\n+    {\n+      for (StoreType type : types)\n+      {\n+        // This condition will exclude counts store first and foremost.\n+        if (type.isRecordStore())\n         {\n-            for ( StoreType type : types )\n-            {\n-                // This condition will exclude counts store first and foremost.\n-                if ( type.isRecordStore() )\n-                {\n-                    migrate( fromStores.getRecordStore( type ), toStores.getRecordStore( type ) );\n-                    progressReporter.progress( 1 );\n-                }\n-            }\n+          migrate(fromStores.getRecordStore(type), toStores.getRecordStore(type));\n+          progressReporter.progress(1);\n         }\n+      }\n     }\n+  }\n \n-    private <RECORD extends AbstractBaseRecord> void migrate( RecordStore<RECORD> from, RecordStore<RECORD> to )\n+  private <RECORD extends AbstractBaseRecord> void migrate(RecordStore<RECORD> from, RecordStore<RECORD> to)\n+  {\n+    to.setHighestPossibleIdInUse(from.getHighestPossibleIdInUse());\n+\n+    from.scanAllRecords(record ->\n     {\n-        to.setHighestPossibleIdInUse( from.getHighestPossibleIdInUse() );\n+      to.prepareForCommit(record);\n+      to.updateRecord(record);\n+      return false;\n+    });\n+  }\n \n-        from.scanAllRecords( record ->\n-        {\n-            to.prepareForCommit( record );\n-            to.updateRecord( record );\n-            return false;\n-        } );\n+  /**\n+   * Creates a configuration to include dynamic record store sizes where data size in old a new format\n+   * will be the same. This is important because we're doing a record-to-record migration and so\n+   * data which fits into one record must fit into the other as to not needing additional blocks\n+   * in the dynamic record chain.\n+   *\n+   * @param legacyStores {@link NeoStores} to read dynamic record data sizes from.\n+   * @param types        array of {@link StoreType} which we know that legacy stores have opened.\n+   * @return a {@link Config} which mimics dynamic record data sizes from the {@code legacyStores}.\n+   */\n+  private Config withPersistedStoreHeadersAsConfigFrom(NeoStores legacyStores, StoreType[] types)\n+  {\n+    Map<String, String> config = new HashMap<>();\n+    if (contains(types, StoreType.RELATIONSHIP_GROUP))\n+    {\n+      config.put(GraphDatabaseSettings.dense_node_threshold.name(),\n+          String.valueOf(legacyStores.getRelationshipGroupStore().getStoreHeaderInt()));\n     }\n-\n-    /**\n-     * Creates a configuration to include dynamic record store sizes where data size in old a new format\n-     * will be the same. This is important because we're doing a record-to-record migration and so\n-     * data which fits into one record must fit into the other as to not needing additional blocks\n-     * in the dynamic record chain.\n-     *\n-     * @param legacyStores {@link NeoStores} to read dynamic record data sizes from.\n-     * @param types array of {@link StoreType} which we know that legacy stores have opened.\n-     * @return a {@link Config} which mimics dynamic record data sizes from the {@code legacyStores}.\n-     */\n-    private Config withPersistedStoreHeadersAsConfigFrom( NeoStores legacyStores, StoreType[] types )\n+    if (contains(types, StoreType.PROPERTY))\n     {\n-        Map<String,String> config = new HashMap<>();\n-        if ( contains( types, StoreType.RELATIONSHIP_GROUP ) )\n-        {\n-            config.put( GraphDatabaseSettings.dense_node_threshold.name(),\n-                    String.valueOf( legacyStores.getRelationshipGroupStore().getStoreHeaderInt() ) );\n-        }\n-        if ( contains( types, StoreType.PROPERTY ) )\n-        {\n-            config.put( GraphDatabaseSettings.array_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() ) );\n-            config.put( GraphDatabaseSettings.string_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getStringStore().getRecordDataSize() ) );\n-        }\n-        if ( contains( types, StoreType.NODE_LABEL ) )\n-        {\n-            config.put( GraphDatabaseSettings.label_block_size.name(),\n-                    String.valueOf( legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() ) );\n-        }\n-        this.config.augment( config );\n-        return this.config;\n+      config.put(GraphDatabaseSettings.array_block_size.name(),\n+          String.valueOf(legacyStores.getPropertyStore().getArrayStore().getRecordDataSize()));\n+      config.put(GraphDatabaseSettings.string_block_size.name(),\n+          String.valueOf(legacyStores.getPropertyStore().getStringStore().getRecordDataSize()));\n+    }\n+    if (contains(types, StoreType.NODE_LABEL))\n+    {\n+      config.put(GraphDatabaseSettings.label_block_size.name(),\n+          String.valueOf(legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize()));\n     }\n+    this.config.augment(config);\n+    return this.config;\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 284).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2280/DirectRecordStoreMigrator.java\nindex b4fbc6d88e7..91a64759948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2280/DirectRecordStoreMigrator.java\n@@ -64,15 +64,9 @@ public class DirectRecordStoreMigrator\n         StoreType[] storesToOpen = ArrayUtil.concat( types, additionalTypesToOpen );\n         progressReporter.start( storesToOpen.length );\n \n-        try (\n-                NeoStores fromStores = new StoreFactory( fromStoreDir, config, new DefaultIdGeneratorFactory( fs ),\n-                    pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen );\n-                NeoStores toStores = new StoreFactory( toStoreDir, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ),\n-                    new DefaultIdGeneratorFactory( fs ), pageCache, fs, toFormat, NullLogProvider.getInstance(),\n-                        EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen ) )\n-        {\n+        try ( NeoStores fromStores = new StoreFactory( fromStoreDir, config, new DefaultIdGeneratorFactory( fs ), pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY ).openNeoStores( true, storesToOpen );\n+NeoStores toStores = new StoreFactory( toStoreDir, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ), new DefaultIdGeneratorFactory( fs ), pageCache, fs, toFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY ).openNeoStores( true, storesToOpen ) )\n+{\n             for ( StoreType type : types )\n             {\n                 // This condition will exclude counts store first and foremost.\n@@ -88,8 +82,7 @@ public class DirectRecordStoreMigrator\n     private <RECORD extends AbstractBaseRecord> void migrate( RecordStore<RECORD> from, RecordStore<RECORD> to )\n     {\n         to.setHighestPossibleIdInUse( from.getHighestPossibleIdInUse() );\n-\n-        from.scanAllRecords( record ->\n+from.scanAllRecords( record ->\n         {\n             to.prepareForCommit( record );\n             to.updateRecord( record );\n@@ -112,22 +105,20 @@ public class DirectRecordStoreMigrator\n         Map<String,String> config = new HashMap<>();\n         if ( contains( types, StoreType.RELATIONSHIP_GROUP ) )\n         {\n-            config.put( GraphDatabaseSettings.dense_node_threshold.name(),\n-                    String.valueOf( legacyStores.getRelationshipGroupStore().getStoreHeaderInt() ) );\n+            config.put( GraphDatabaseSettings.dense_node_threshold.name(), String.valueOf( legacyStores.getRelationshipGroupStore().getStoreHeaderInt() ) );\n         }\n-        if ( contains( types, StoreType.PROPERTY ) )\n+\n+if ( contains( types, StoreType.PROPERTY ) )\n         {\n-            config.put( GraphDatabaseSettings.array_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() ) );\n-            config.put( GraphDatabaseSettings.string_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getStringStore().getRecordDataSize() ) );\n+            config.put( GraphDatabaseSettings.array_block_size.name(), String.valueOf( legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() ) );\n+config.put( GraphDatabaseSettings.string_block_size.name(), String.valueOf( legacyStores.getPropertyStore().getStringStore().getRecordDataSize() ) );\n         }\n-        if ( contains( types, StoreType.NODE_LABEL ) )\n+\n+if ( contains( types, StoreType.NODE_LABEL ) )\n         {\n-            config.put( GraphDatabaseSettings.label_block_size.name(),\n-                    String.valueOf( legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() ) );\n+            config.put( GraphDatabaseSettings.label_block_size.name(), String.valueOf( legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() ) );\n         }\n         this.config.augment( config );\n         return this.config;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 527).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'try' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "527",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2280/DirectRecordStoreMigrator.java\nindex b4fbc6d88e7..1fd453ec1b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2280/DirectRecordStoreMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2280/DirectRecordStoreMigrator.java\n@@ -22,7 +22,6 @@ package org.neo4j.kernel.impl.storemigration;\n import java.io.File;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n import org.neo4j.helpers.ArrayUtil;\n import org.neo4j.io.fs.FileSystemAbstraction;\n@@ -38,13 +37,13 @@ import org.neo4j.kernel.impl.store.id.DefaultIdGeneratorFactory;\n import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n import org.neo4j.kernel.impl.util.monitoring.ProgressReporter;\n import org.neo4j.logging.NullLogProvider;\n-\n import static org.neo4j.helpers.ArrayUtil.contains;\n \n /**\n  * Idea is to migrate a {@link NeoStores} store by store, record by record in a sequential fashion for\n  * quick migration from one {@link RecordFormats} to another.\n  */\n+\n public class DirectRecordStoreMigrator\n {\n     private final PageCache pageCache;\n@@ -58,22 +57,13 @@ public class DirectRecordStoreMigrator\n         this.config = config;\n     }\n \n-    public void migrate( File fromStoreDir, RecordFormats fromFormat, File toStoreDir, RecordFormats toFormat,\n-            ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen )\n+    public void migrate( File fromStoreDir, RecordFormats fromFormat, File toStoreDir, RecordFormats toFormat, ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen )\n     {\n         StoreType[] storesToOpen = ArrayUtil.concat( types, additionalTypesToOpen );\n         progressReporter.start( storesToOpen.length );\n-\n-        try (\n-                NeoStores fromStores = new StoreFactory( fromStoreDir, config, new DefaultIdGeneratorFactory( fs ),\n-                    pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen );\n-                NeoStores toStores = new StoreFactory( toStoreDir, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ),\n-                    new DefaultIdGeneratorFactory( fs ), pageCache, fs, toFormat, NullLogProvider.getInstance(),\n-                        EmptyVersionContextSupplier.EMPTY )\n-                        .openNeoStores( true, storesToOpen ) )\n+        try( NeoStores fromStores = new StoreFactory( fromStoreDir, config, new DefaultIdGeneratorFactory( fs ), pageCache, fs, fromFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY ).openNeoStores( true, storesToOpen ); NeoStores toStores = new StoreFactory( toStoreDir, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ), new DefaultIdGeneratorFactory( fs ), pageCache, fs, toFormat, NullLogProvider.getInstance(), EmptyVersionContextSupplier.EMPTY ).openNeoStores( true, storesToOpen ))\n         {\n-            for ( StoreType type : types )\n+            for( StoreType type : types)\n             {\n                 // This condition will exclude counts store first and foremost.\n                 if ( type.isRecordStore() )\n@@ -88,13 +78,12 @@ public class DirectRecordStoreMigrator\n     private <RECORD extends AbstractBaseRecord> void migrate( RecordStore<RECORD> from, RecordStore<RECORD> to )\n     {\n         to.setHighestPossibleIdInUse( from.getHighestPossibleIdInUse() );\n-\n         from.scanAllRecords( record ->\n-        {\n-            to.prepareForCommit( record );\n-            to.updateRecord( record );\n-            return false;\n-        } );\n+                             {\n+                                 to.prepareForCommit( record );\n+                                 to.updateRecord( record );\n+                                 return false;\n+                             } );\n     }\n \n     /**\n@@ -107,27 +96,27 @@ public class DirectRecordStoreMigrator\n      * @param types array of {@link StoreType} which we know that legacy stores have opened.\n      * @return a {@link Config} which mimics dynamic record data sizes from the {@code legacyStores}.\n      */\n+\n     private Config withPersistedStoreHeadersAsConfigFrom( NeoStores legacyStores, StoreType[] types )\n     {\n         Map<String,String> config = new HashMap<>();\n         if ( contains( types, StoreType.RELATIONSHIP_GROUP ) )\n         {\n-            config.put( GraphDatabaseSettings.dense_node_threshold.name(),\n-                    String.valueOf( legacyStores.getRelationshipGroupStore().getStoreHeaderInt() ) );\n+            config.put( GraphDatabaseSettings.dense_node_threshold.name(), String.valueOf( legacyStores.getRelationshipGroupStore().getStoreHeaderInt() ) );\n         }\n+\n         if ( contains( types, StoreType.PROPERTY ) )\n         {\n-            config.put( GraphDatabaseSettings.array_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() ) );\n-            config.put( GraphDatabaseSettings.string_block_size.name(),\n-                    String.valueOf( legacyStores.getPropertyStore().getStringStore().getRecordDataSize() ) );\n+            config.put( GraphDatabaseSettings.array_block_size.name(), String.valueOf( legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() ) );\n+            config.put( GraphDatabaseSettings.string_block_size.name(), String.valueOf( legacyStores.getPropertyStore().getStringStore().getRecordDataSize() ) );\n         }\n+\n         if ( contains( types, StoreType.NODE_LABEL ) )\n         {\n-            config.put( GraphDatabaseSettings.label_block_size.name(),\n-                    String.valueOf( legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() ) );\n+            config.put( GraphDatabaseSettings.label_block_size.name(), String.valueOf( legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() ) );\n         }\n+\n         this.config.augment( config );\n         return this.config;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
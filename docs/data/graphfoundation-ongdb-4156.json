{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4156",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4156/StringIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4156/StringIndexProvider.java\nindex ef4bb7b7b4d..d6e8a6cf70d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4156/StringIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4156/StringIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.File;\n@@ -41,91 +42,91 @@ import org.neo4j.values.storable.ValueCategory;\n /**\n  * Schema index provider for native indexes backed by e.g. {@link GBPTree}.\n  */\n-public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey,NativeSchemaValue>\n+public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey, NativeSchemaValue>\n {\n-    public static final String KEY = \"string\";\n-    static final IndexCapability CAPABILITY = new StringIndexCapability();\n-    private static final Descriptor STRING_PROVIDER_DESCRIPTOR = new Descriptor( KEY, \"1.0\" );\n+  public static final String KEY = \"string\";\n+  static final IndexCapability CAPABILITY = new StringIndexCapability();\n+  private static final Descriptor STRING_PROVIDER_DESCRIPTOR = new Descriptor(KEY, \"1.0\");\n \n-    public StringIndexProvider( PageCache pageCache, FileSystemAbstraction fs,\n-            IndexDirectoryStructure.Factory directoryStructure, Monitor monitor, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-            boolean readOnly )\n-    {\n-        super( STRING_PROVIDER_DESCRIPTOR, 0, directoryStructure, pageCache, fs, monitor, recoveryCleanupWorkCollector, readOnly );\n-    }\n+  public StringIndexProvider(PageCache pageCache, FileSystemAbstraction fs,\n+                             IndexDirectoryStructure.Factory directoryStructure, Monitor monitor, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+                             boolean readOnly)\n+  {\n+    super(STRING_PROVIDER_DESCRIPTOR, 0, directoryStructure, pageCache, fs, monitor, recoveryCleanupWorkCollector, readOnly);\n+  }\n \n-    @Override\n-    Layout<StringSchemaKey,NativeSchemaValue> layout( SchemaIndexDescriptor descriptor )\n-    {\n-        return new StringLayout();\n-    }\n+  @Override\n+  Layout<StringSchemaKey, NativeSchemaValue> layout(SchemaIndexDescriptor descriptor)\n+  {\n+    return new StringLayout();\n+  }\n+\n+  @Override\n+  protected IndexPopulator newIndexPopulator(File storeFile, Layout<StringSchemaKey, NativeSchemaValue> layout,\n+                                             SchemaIndexDescriptor descriptor, long indexId,\n+                                             IndexSamplingConfig samplingConfig)\n+  {\n+    return new StringSchemaIndexPopulator(pageCache, fs, storeFile, layout, monitor, descriptor, indexId, samplingConfig);\n+  }\n+\n+  @Override\n+  protected IndexAccessor newIndexAccessor(File storeFile, Layout<StringSchemaKey, NativeSchemaValue> layout, SchemaIndexDescriptor descriptor,\n+                                           long indexId, IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    return new StringSchemaIndexAccessor(pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor,\n+        indexId, samplingConfig);\n+  }\n+\n+  @Override\n+  public IndexCapability getCapability(SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    return CAPABILITY;\n+  }\n+\n+  /**\n+   * For single property string queries capabilities are\n+   * Order: ASCENDING\n+   * Value: YES (can provide exact value)\n+   * <p>\n+   * For other queries there is no support\n+   */\n+  private static class StringIndexCapability implements IndexCapability\n+  {\n+    private final IndexLimitation[] limitations = {IndexLimitation.SLOW_CONTAINS};\n \n     @Override\n-    protected IndexPopulator newIndexPopulator( File storeFile, Layout<StringSchemaKey,NativeSchemaValue> layout,\n-                                                SchemaIndexDescriptor descriptor, long indexId,\n-                                                IndexSamplingConfig samplingConfig )\n+    public IndexOrder[] orderCapability(ValueCategory... valueCategories)\n     {\n-        return new StringSchemaIndexPopulator( pageCache, fs, storeFile, layout, monitor, descriptor, indexId, samplingConfig );\n+      if (support(valueCategories))\n+      {\n+        return ORDER_ASC;\n+      }\n+      return ORDER_NONE;\n     }\n \n     @Override\n-    protected IndexAccessor newIndexAccessor( File storeFile, Layout<StringSchemaKey,NativeSchemaValue> layout, SchemaIndexDescriptor descriptor,\n-            long indexId, IndexSamplingConfig samplingConfig ) throws IOException\n+    public IndexValueCapability valueCapability(ValueCategory... valueCategories)\n     {\n-        return new StringSchemaIndexAccessor( pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor,\n-                indexId, samplingConfig );\n+      if (support(valueCategories))\n+      {\n+        return IndexValueCapability.YES;\n+      }\n+      if (singleWildcard(valueCategories))\n+      {\n+        return IndexValueCapability.PARTIAL;\n+      }\n+      return IndexValueCapability.NO;\n     }\n \n     @Override\n-    public IndexCapability getCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n+    public IndexLimitation[] limitations()\n     {\n-        return CAPABILITY;\n+      return limitations;\n     }\n \n-    /**\n-     * For single property string queries capabilities are\n-     * Order: ASCENDING\n-     * Value: YES (can provide exact value)\n-     *\n-     * For other queries there is no support\n-     */\n-    private static class StringIndexCapability implements IndexCapability\n+    private boolean support(ValueCategory[] valueCategories)\n     {\n-        private final IndexLimitation[] limitations = {IndexLimitation.SLOW_CONTAINS};\n-\n-        @Override\n-        public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n-        {\n-            if ( support( valueCategories ) )\n-            {\n-                return ORDER_ASC;\n-            }\n-            return ORDER_NONE;\n-        }\n-\n-        @Override\n-        public IndexValueCapability valueCapability( ValueCategory... valueCategories )\n-        {\n-            if ( support( valueCategories ) )\n-            {\n-                return IndexValueCapability.YES;\n-            }\n-            if ( singleWildcard( valueCategories ) )\n-            {\n-                return IndexValueCapability.PARTIAL;\n-            }\n-            return IndexValueCapability.NO;\n-        }\n-\n-        @Override\n-        public IndexLimitation[] limitations()\n-        {\n-            return limitations;\n-        }\n-\n-        private boolean support( ValueCategory[] valueCategories )\n-        {\n-            return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEXT;\n-        }\n+      return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEXT;\n     }\n+  }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4156/StringIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4156/StringIndexProvider.java\nindex ef4bb7b7b4d..05bfaca34fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4156/StringIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4156/StringIndexProvider.java\n@@ -61,17 +61,16 @@ public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey,Nat\n     }\n \n     @Override\n-    protected IndexPopulator newIndexPopulator( File storeFile, Layout<StringSchemaKey,NativeSchemaValue> layout,\n-                                                SchemaIndexDescriptor descriptor, long indexId,\n+    protected IndexPopulator newIndexPopulator( File storeFile, Layout<StringSchemaKey,NativeSchemaValue> layout, SchemaIndexDescriptor descriptor, long indexId,\n                                                 IndexSamplingConfig samplingConfig )\n-    {\n+{\n         return new StringSchemaIndexPopulator( pageCache, fs, storeFile, layout, monitor, descriptor, indexId, samplingConfig );\n     }\n \n     @Override\n     protected IndexAccessor newIndexAccessor( File storeFile, Layout<StringSchemaKey,NativeSchemaValue> layout, SchemaIndexDescriptor descriptor,\n             long indexId, IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n+{\n         return new StringSchemaIndexAccessor( pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor,\n                 indexId, samplingConfig );\n     }\n@@ -100,7 +99,8 @@ public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey,Nat\n             {\n                 return ORDER_ASC;\n             }\n-            return ORDER_NONE;\n+\n+return ORDER_NONE;\n         }\n \n         @Override\n@@ -110,11 +110,13 @@ public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey,Nat\n             {\n                 return IndexValueCapability.YES;\n             }\n-            if ( singleWildcard( valueCategories ) )\n+\n+if ( singleWildcard( valueCategories ) )\n             {\n                 return IndexValueCapability.PARTIAL;\n             }\n-            return IndexValueCapability.NO;\n+\n+return IndexValueCapability.NO;\n         }\n \n         @Override\n@@ -128,4 +130,4 @@ public class StringIndexProvider extends NativeIndexProvider<StringSchemaKey,Nat\n             return valueCategories.length == 1 && valueCategories[0] == ValueCategory.TEXT;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/41/Format.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/41/Format.java\nindex b38d3179061..370eb523c8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/41/Format.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/41/Format.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import java.text.DateFormat;\n@@ -30,209 +31,213 @@ import org.neo4j.io.ByteUnit;\n \n public class Format\n {\n-    /**\n-     * Default time zone is UTC (+00:00) so that comparing timestamped logs from different\n-     * sources is an easier task.\n-     */\n-    public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone( \"UTC\" );\n-\n-    private static final String[] BYTE_SIZES = { \"B\", \"kB\", \"MB\", \"GB\" };\n-    private static final String[] COUNT_SIZES = { \"\", \"k\", \"M\", \"G\", \"T\" };\n-\n-    public static final String DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSSZ\";\n-    public static final String TIME_FORMAT = \"HH:mm:ss.SSS\";\n-\n-    private static final ThreadLocalFormat DATE = new ThreadLocalFormat( DATE_FORMAT );\n-    private static final ThreadLocalFormat TIME = new ThreadLocalFormat( TIME_FORMAT );\n-    private static int KB = (int) ByteUnit.kibiBytes( 1 );\n-\n-    public static String date()\n-    {\n-        return date( DEFAULT_TIME_ZONE );\n-    }\n-\n-    public static String date( TimeZone timeZone )\n-    {\n-        return date( new Date(), timeZone );\n-    }\n-\n-    public static String date( long millis )\n-    {\n-        return date( millis, DEFAULT_TIME_ZONE );\n-    }\n-\n-    public static String date( long millis, TimeZone timeZone )\n-    {\n-        return date( new Date( millis ), timeZone );\n-    }\n-\n-    public static String date( Date date )\n-    {\n-        return date( date, DEFAULT_TIME_ZONE );\n-    }\n-\n-    public static String date( Date date, TimeZone timeZone )\n-    {\n-        return DATE.format( date, timeZone );\n-    }\n-\n-    public static String time()\n-    {\n-        return time( DEFAULT_TIME_ZONE );\n-    }\n-\n-    public static String time( TimeZone timeZone )\n-    {\n-        return time( new Date() );\n-    }\n-\n-    public static String time( long millis )\n-    {\n-        return time( millis, DEFAULT_TIME_ZONE );\n-    }\n-\n-    public static String time( long millis, TimeZone timeZone )\n-    {\n-        return time( new Date( millis ), timeZone );\n-    }\n-\n-    public static String time( Date date )\n-    {\n-        return time( date, DEFAULT_TIME_ZONE );\n+  /**\n+   * Default time zone is UTC (+00:00) so that comparing timestamped logs from different\n+   * sources is an easier task.\n+   */\n+  public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone(\"UTC\");\n+\n+  private static final String[] BYTE_SIZES = {\"B\", \"kB\", \"MB\", \"GB\"};\n+  private static final String[] COUNT_SIZES = {\"\", \"k\", \"M\", \"G\", \"T\"};\n+\n+  public static final String DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSSZ\";\n+  public static final String TIME_FORMAT = \"HH:mm:ss.SSS\";\n+\n+  private static final ThreadLocalFormat DATE = new ThreadLocalFormat(DATE_FORMAT);\n+  private static final ThreadLocalFormat TIME = new ThreadLocalFormat(TIME_FORMAT);\n+  private static int KB = (int) ByteUnit.kibiBytes(1);\n+\n+  public static String date()\n+  {\n+    return date(DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String date(TimeZone timeZone)\n+  {\n+    return date(new Date(), timeZone);\n+  }\n+\n+  public static String date(long millis)\n+  {\n+    return date(millis, DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String date(long millis, TimeZone timeZone)\n+  {\n+    return date(new Date(millis), timeZone);\n+  }\n+\n+  public static String date(Date date)\n+  {\n+    return date(date, DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String date(Date date, TimeZone timeZone)\n+  {\n+    return DATE.format(date, timeZone);\n+  }\n+\n+  public static String time()\n+  {\n+    return time(DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String time(TimeZone timeZone)\n+  {\n+    return time(new Date());\n+  }\n+\n+  public static String time(long millis)\n+  {\n+    return time(millis, DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String time(long millis, TimeZone timeZone)\n+  {\n+    return time(new Date(millis), timeZone);\n+  }\n+\n+  public static String time(Date date)\n+  {\n+    return time(date, DEFAULT_TIME_ZONE);\n+  }\n+\n+  public static String time(Date date, TimeZone timeZone)\n+  {\n+    return TIME.format(date, timeZone);\n+  }\n+\n+  public static String bytes(long bytes)\n+  {\n+    return suffixCount(bytes, BYTE_SIZES, KB);\n+  }\n+\n+  public static String count(long count)\n+  {\n+    return suffixCount(count, COUNT_SIZES, 1_000);\n+  }\n+\n+  private static String suffixCount(long value, String[] sizes, int stride)\n+  {\n+    double size = value;\n+    for (String suffix : sizes)\n+    {\n+      if (size < stride)\n+      {\n+        return String.format(Locale.ROOT, \"%.2f %s\", size, suffix);\n+      }\n+      size /= stride;\n+    }\n+    return String.format(Locale.ROOT, \"%.2f TB\", size);\n+  }\n+\n+  public static String duration(long durationMillis)\n+  {\n+    return duration(durationMillis, TimeUnit.DAYS, TimeUnit.MILLISECONDS);\n+  }\n+\n+  public static String duration(long durationMillis, TimeUnit highestGranularity, TimeUnit lowestGranularity)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+\n+    TimeUnit[] units = TimeUnit.values();\n+    reverse(units);\n+    boolean use = false;\n+    for (TimeUnit unit : units)\n+    {\n+      if (unit == highestGranularity)\n+      {\n+        use = true;\n+      }\n+\n+      if (use)\n+      {\n+        durationMillis = extractFromDuration(durationMillis, unit, builder);\n+        if (unit == lowestGranularity)\n+        {\n+          break;\n+        }\n+      }\n     }\n \n-    public static String time( Date date, TimeZone timeZone )\n+    if (builder.length() == 0)\n     {\n-        return TIME.format( date, timeZone );\n+      // The value is too low to extract any meaningful numbers with the given unit brackets.\n+      // So we append a zero of the lowest unit.\n+      builder.append('0').append(shortName(lowestGranularity));\n     }\n \n-    public static String bytes( long bytes )\n-    {\n-        return suffixCount( bytes, BYTE_SIZES, KB );\n-    }\n+    return builder.toString();\n+  }\n \n-    public static String count( long count )\n+  private static <T> void reverse(T[] array)\n+  {\n+    int half = array.length >> 1;\n+    for (int i = 0; i < half; i++)\n     {\n-        return suffixCount( count, COUNT_SIZES, 1_000 );\n+      T temp = array[i];\n+      int highIndex = array.length - 1 - i;\n+      array[i] = array[highIndex];\n+      array[highIndex] = temp;\n     }\n+  }\n \n-    private static String suffixCount( long value, String[] sizes, int stride )\n+  private static String shortName(TimeUnit unit)\n+  {\n+    switch (unit)\n     {\n-        double size = value;\n-        for ( String suffix : sizes )\n-        {\n-            if ( size < stride )\n-            {\n-                return String.format( Locale.ROOT, \"%.2f %s\", size, suffix );\n-            }\n-            size /= stride;\n-        }\n-        return String.format( Locale.ROOT, \"%.2f TB\", size );\n+      case NANOSECONDS:\n+        return \"ns\";\n+      case MICROSECONDS:\n+        return \"\u03bcs\";\n+      case MILLISECONDS:\n+        return \"ms\";\n+      default:\n+        return unit.name().substring(0, 1).toLowerCase();\n     }\n+  }\n \n-    public static String duration( long durationMillis )\n+  private static long extractFromDuration(long durationMillis, TimeUnit unit, StringBuilder target)\n+  {\n+    int count = 0;\n+    long millisPerUnit = unit.toMillis(1);\n+    while (durationMillis >= millisPerUnit)\n     {\n-        return duration( durationMillis, TimeUnit.DAYS, TimeUnit.MILLISECONDS );\n+      count++;\n+      durationMillis -= millisPerUnit;\n     }\n-\n-    public static String duration( long durationMillis, TimeUnit highestGranularity, TimeUnit lowestGranularity )\n+    if (count > 0)\n     {\n-        StringBuilder builder = new StringBuilder();\n-\n-        TimeUnit[] units = TimeUnit.values();\n-        reverse( units );\n-        boolean use = false;\n-        for ( TimeUnit unit : units )\n-        {\n-            if ( unit == highestGranularity )\n-            {\n-                use = true;\n-            }\n-\n-            if ( use )\n-            {\n-                durationMillis = extractFromDuration( durationMillis, unit, builder );\n-                if ( unit == lowestGranularity )\n-                {\n-                    break;\n-                }\n-            }\n-        }\n-\n-        if ( builder.length() == 0 )\n-        {\n-            // The value is too low to extract any meaningful numbers with the given unit brackets.\n-            // So we append a zero of the lowest unit.\n-            builder.append( '0' ).append( shortName( lowestGranularity ) );\n-        }\n-\n-        return builder.toString();\n+      target.append(target.length() > 0 ? \" \" : \"\").append(count).append(shortName(unit));\n     }\n+    return durationMillis;\n+  }\n \n-    private static <T> void reverse( T[] array )\n-    {\n-        int half = array.length >> 1;\n-        for ( int i = 0; i < half; i++ )\n-        {\n-            T temp = array[i];\n-            int highIndex = array.length - 1 - i;\n-            array[i] = array[highIndex];\n-            array[highIndex] = temp;\n-        }\n-    }\n+  private Format()\n+  {\n+    // No instances\n+  }\n \n-    private static String shortName( TimeUnit unit )\n-    {\n-        switch ( unit )\n-        {\n-        case NANOSECONDS: return \"ns\";\n-        case MICROSECONDS: return \"\u03bcs\";\n-        case MILLISECONDS: return \"ms\";\n-        default: return unit.name().substring( 0, 1 ).toLowerCase();\n-        }\n-    }\n+  private static class ThreadLocalFormat extends ThreadLocal<DateFormat>\n+  {\n+    private final String format;\n \n-    private static long extractFromDuration( long durationMillis, TimeUnit unit, StringBuilder target )\n+    ThreadLocalFormat(String format)\n     {\n-        int count = 0;\n-        long millisPerUnit = unit.toMillis( 1 );\n-        while ( durationMillis >= millisPerUnit )\n-        {\n-            count++;\n-            durationMillis -= millisPerUnit;\n-        }\n-        if ( count > 0 )\n-        {\n-            target.append( target.length() > 0 ? \" \" : \"\" ).append( count ).append( shortName( unit ) );\n-        }\n-        return durationMillis;\n+      this.format = format;\n     }\n \n-    private Format()\n+    String format(Date date, TimeZone timeZone)\n     {\n-        // No instances\n+      DateFormat dateFormat = get();\n+      dateFormat.setTimeZone(timeZone);\n+      return dateFormat.format(date);\n     }\n \n-    private static class ThreadLocalFormat extends ThreadLocal<DateFormat>\n+    @Override\n+    protected DateFormat initialValue()\n     {\n-        private final String format;\n-\n-        ThreadLocalFormat( String format )\n-        {\n-            this.format = format;\n-        }\n-\n-        String format( Date date, TimeZone timeZone )\n-        {\n-            DateFormat dateFormat = get();\n-            dateFormat.setTimeZone( timeZone );\n-            return dateFormat.format( date );\n-        }\n-\n-        @Override\n-        protected DateFormat initialValue()\n-        {\n-            return new SimpleDateFormat( format );\n-        }\n+      return new SimpleDateFormat(format);\n     }\n+  }\n }\n",
            "diff_size": 260
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/41/Format.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/41/Format.java\nindex b38d3179061..582594a99a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/41/Format.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/41/Format.java\n@@ -37,14 +37,16 @@ public class Format\n     public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getTimeZone( \"UTC\" );\n \n     private static final String[] BYTE_SIZES = { \"B\", \"kB\", \"MB\", \"GB\" };\n-    private static final String[] COUNT_SIZES = { \"\", \"k\", \"M\", \"G\", \"T\" };\n+\n+private static final String[] COUNT_SIZES = { \"\", \"k\", \"M\", \"G\", \"T\" };\n \n     public static final String DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSSZ\";\n-    public static final String TIME_FORMAT = \"HH:mm:ss.SSS\";\n+\n+public static final String TIME_FORMAT = \"HH:mm:ss.SSS\";\n \n     private static final ThreadLocalFormat DATE = new ThreadLocalFormat( DATE_FORMAT );\n     private static final ThreadLocalFormat TIME = new ThreadLocalFormat( TIME_FORMAT );\n-    private static int KB = (int) ByteUnit.kibiBytes( 1 );\n+    private static int KB = ( int) ByteUnit.kibiBytes( 1 );\n \n     public static String date()\n     {\n@@ -125,9 +127,11 @@ public class Format\n             {\n                 return String.format( Locale.ROOT, \"%.2f %s\", size, suffix );\n             }\n-            size /= stride;\n+\n+size /= stride;\n         }\n-        return String.format( Locale.ROOT, \"%.2f TB\", size );\n+\n+return String.format( Locale.ROOT, \"%.2f TB\", size );\n     }\n \n     public static String duration( long durationMillis )\n@@ -185,11 +189,15 @@ public class Format\n     {\n         switch ( unit )\n         {\n-        case NANOSECONDS: return \"ns\";\n-        case MICROSECONDS: return \"\u03bcs\";\n-        case MILLISECONDS: return \"ms\";\n-        default: return unit.name().substring( 0, 1 ).toLowerCase();\n-        }\n+        case NANOSECONDS:\n+    return \"ns\";\n+    case MICROSECONDS:\n+    return \"\u03bcs\";\n+    case MILLISECONDS:\n+    return \"ms\";\n+    default:\n+    return unit.name().substring( 0, 1 ).toLowerCase();\n+    }\n     }\n \n     private static long extractFromDuration( long durationMillis, TimeUnit unit, StringBuilder target )\n@@ -201,11 +209,13 @@ public class Format\n             count++;\n             durationMillis -= millisPerUnit;\n         }\n-        if ( count > 0 )\n+\n+if ( count > 0 )\n         {\n             target.append( target.length() > 0 ? \" \" : \"\" ).append( count ).append( shortName( unit ) );\n         }\n-        return durationMillis;\n+\n+return durationMillis;\n     }\n \n     private Format()\n@@ -235,4 +245,4 @@ public class Format\n             return new SimpleDateFormat( format );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
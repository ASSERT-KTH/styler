{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1803",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1803/PooledConcurrentMergeScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1803/PooledConcurrentMergeScheduler.java\nindex 830e2ad2140..5a28f72c4bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1803/PooledConcurrentMergeScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1803/PooledConcurrentMergeScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.apache.lucene.index;\n \n import java.io.IOException;\n@@ -33,7 +34,7 @@ import org.neo4j.util.FeatureToggles;\n /**\n  * Lucene indexes merge scheduler that execute merges in a thread pool instead of starting separate thread for each\n  * merge. Each writer have it's own scheduler but all of them use shared pool.\n- *\n+ * <p>\n  * Current implementation is minimalistic in a number of things it knows about lucene internals to simplify\n  * migrations overhead. It wraps up lucene internal merge tasks and execute them in a common thread pool.\n  * In case if pool and queue exhausted merge will be performed in callers thread.\n@@ -43,121 +44,118 @@ import org.neo4j.util.FeatureToggles;\n  */\n public class PooledConcurrentMergeScheduler extends ConcurrentMergeScheduler\n {\n-    private static final int POOL_QUEUE_CAPACITY =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.queue.capacity\", 100 );\n-    private static final int POOL_MINIMUM_THREADS =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.minimum.threads\", 4 );\n-    private static final int POOL_MAXIMUM_THREADS =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.maximum.threads\", 10 );\n-\n-    private final LongAdder writerTaskCounter = new LongAdder();\n-\n-    @Override\n-    public void merge( IndexWriter writer, MergeTrigger trigger, boolean newMergesFound )\n-            throws IOException\n+  private static final int POOL_QUEUE_CAPACITY =\n+      FeatureToggles.getInteger(PooledConcurrentMergeScheduler.class, \"pool.queue.capacity\", 100);\n+  private static final int POOL_MINIMUM_THREADS =\n+      FeatureToggles.getInteger(PooledConcurrentMergeScheduler.class, \"pool.minimum.threads\", 4);\n+  private static final int POOL_MAXIMUM_THREADS =\n+      FeatureToggles.getInteger(PooledConcurrentMergeScheduler.class, \"pool.maximum.threads\", 10);\n+\n+  private final LongAdder writerTaskCounter = new LongAdder();\n+\n+  @Override\n+  public void merge(IndexWriter writer, MergeTrigger trigger, boolean newMergesFound)\n+      throws IOException\n+  {\n+    while (true)\n     {\n-        while ( true )\n+      MergePolicy.OneMerge merge = writer.getNextMerge();\n+      if (merge == null)\n+      {\n+        return;\n+      }\n+      boolean success = false;\n+      try\n+      {\n+        MergeThread mergeThread = getMergeThread(writer, merge);\n+        writerTaskCounter.increment();\n+        PooledConcurrentMergePool.mergeThreadsPool.submit(mergeTask(mergeThread));\n+        success = true;\n+      } finally\n+      {\n+        if (!success)\n         {\n-            MergePolicy.OneMerge merge = writer.getNextMerge();\n-            if ( merge == null )\n-            {\n-                return;\n-            }\n-            boolean success = false;\n-            try\n-            {\n-                MergeThread mergeThread = getMergeThread( writer, merge );\n-                writerTaskCounter.increment();\n-                PooledConcurrentMergePool.mergeThreadsPool.submit( mergeTask( mergeThread ) );\n-                success = true;\n-            }\n-            finally\n-            {\n-                if ( !success )\n-                {\n-                    writer.mergeFinish( merge );\n-                    writerTaskCounter.decrement();\n-                }\n-            }\n+          writer.mergeFinish(merge);\n+          writerTaskCounter.decrement();\n         }\n+      }\n     }\n-\n-    @Override\n-    public void close()\n-    {\n-        waitForAllTasks();\n-        super.close();\n-    }\n-\n-    @Override\n-    protected void updateMergeThreads()\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    waitForAllTasks();\n+    super.close();\n+  }\n+\n+  @Override\n+  protected void updateMergeThreads()\n+  {\n+    //noop\n+  }\n+\n+  @Override\n+  void removeMergeThread()\n+  {\n+    // noop\n+  }\n+\n+  long getWriterTaskCount()\n+  {\n+    return writerTaskCounter.longValue();\n+  }\n+\n+  private Runnable mergeTask(MergeThread mergeThread)\n+  {\n+    return new MergeTask(mergeThread, writerTaskCounter);\n+  }\n+\n+  private void waitForAllTasks()\n+  {\n+    try\n     {\n-        //noop\n-    }\n-\n-    @Override\n-    void removeMergeThread()\n+      Predicates.await(() -> writerTaskCounter.longValue() == 0, 10, TimeUnit.MINUTES, 10, TimeUnit.MILLISECONDS);\n+    } catch (Throwable t)\n     {\n-        // noop\n+      throw new RuntimeException(t);\n     }\n+  }\n \n-    long getWriterTaskCount()\n-    {\n-        return writerTaskCounter.longValue();\n-    }\n+  private static class PooledConcurrentMergePool\n+  {\n+    private static final ExecutorService mergeThreadsPool =\n+        new ThreadPoolExecutor(POOL_MINIMUM_THREADS, getMaximumPoolSize(), 60L, TimeUnit.SECONDS,\n+            new ArrayBlockingQueue<>(POOL_QUEUE_CAPACITY),\n+            new NamedThreadFactory(\"Lucene-Merge\", true), new ThreadPoolExecutor.CallerRunsPolicy());\n \n-    private Runnable mergeTask( MergeThread mergeThread )\n+    private static int getMaximumPoolSize()\n     {\n-        return new MergeTask( mergeThread, writerTaskCounter );\n+      return Math.max(POOL_MAXIMUM_THREADS, Runtime.getRuntime().availableProcessors());\n     }\n+  }\n \n-    private void waitForAllTasks()\n-    {\n-        try\n-        {\n-            Predicates.await( () -> writerTaskCounter.longValue() == 0, 10, TimeUnit.MINUTES, 10, TimeUnit.MILLISECONDS );\n-        }\n-        catch ( Throwable t )\n-        {\n-            throw new RuntimeException( t );\n-        }\n-    }\n+  private static class MergeTask implements Runnable\n+  {\n+    private final MergeThread mergeThread;\n+    private final LongAdder taskCounter;\n \n-    private static class PooledConcurrentMergePool\n+    MergeTask(MergeThread mergeThread, LongAdder taskCounter)\n     {\n-        private static final ExecutorService mergeThreadsPool =\n-                new ThreadPoolExecutor( POOL_MINIMUM_THREADS, getMaximumPoolSize(), 60L, TimeUnit.SECONDS,\n-                        new ArrayBlockingQueue<>( POOL_QUEUE_CAPACITY ),\n-                        new NamedThreadFactory( \"Lucene-Merge\", true ), new ThreadPoolExecutor.CallerRunsPolicy() );\n-\n-        private static int getMaximumPoolSize()\n-        {\n-            return Math.max( POOL_MAXIMUM_THREADS, Runtime.getRuntime().availableProcessors() );\n-        }\n+      this.mergeThread = mergeThread;\n+      this.taskCounter = taskCounter;\n     }\n \n-    private static class MergeTask implements Runnable\n+    @Override\n+    public void run()\n     {\n-        private final MergeThread mergeThread;\n-        private final LongAdder taskCounter;\n-\n-        MergeTask( MergeThread mergeThread, LongAdder taskCounter )\n-        {\n-            this.mergeThread = mergeThread;\n-            this.taskCounter = taskCounter;\n-        }\n-\n-        @Override\n-        public void run()\n-        {\n-            try\n-            {\n-                mergeThread.run();\n-            }\n-            finally\n-            {\n-                taskCounter.decrement();\n-            }\n-        }\n+      try\n+      {\n+        mergeThread.run();\n+      } finally\n+      {\n+        taskCounter.decrement();\n+      }\n     }\n+  }\n }\n",
            "diff_size": 148
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 296).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1803/PooledConcurrentMergeScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1803/PooledConcurrentMergeScheduler.java\nindex 830e2ad2140..2cc1c295776 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1803/PooledConcurrentMergeScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1803/PooledConcurrentMergeScheduler.java\n@@ -43,19 +43,16 @@ import org.neo4j.util.FeatureToggles;\n  */\n public class PooledConcurrentMergeScheduler extends ConcurrentMergeScheduler\n {\n-    private static final int POOL_QUEUE_CAPACITY =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.queue.capacity\", 100 );\n-    private static final int POOL_MINIMUM_THREADS =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.minimum.threads\", 4 );\n-    private static final int POOL_MAXIMUM_THREADS =\n-            FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.maximum.threads\", 10 );\n+    private static final int POOL_QUEUE_CAPACITY = FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.queue.capacity\", 100 );\n \n-    private final LongAdder writerTaskCounter = new LongAdder();\n+private static final int POOL_MINIMUM_THREADS = FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.minimum.threads\", 4 );\n+\n+private static final int POOL_MAXIMUM_THREADS = FeatureToggles.getInteger( PooledConcurrentMergeScheduler.class, \"pool.maximum.threads\", 10 );\n+private final LongAdder writerTaskCounter = new LongAdder();\n \n     @Override\n-    public void merge( IndexWriter writer, MergeTrigger trigger, boolean newMergesFound )\n-            throws IOException\n-    {\n+    public void merge( IndexWriter writer, MergeTrigger trigger, boolean newMergesFound ) throws IOException\n+{\n         while ( true )\n         {\n             MergePolicy.OneMerge merge = writer.getNextMerge();\n@@ -125,12 +122,9 @@ public class PooledConcurrentMergeScheduler extends ConcurrentMergeScheduler\n \n     private static class PooledConcurrentMergePool\n     {\n-        private static final ExecutorService mergeThreadsPool =\n-                new ThreadPoolExecutor( POOL_MINIMUM_THREADS, getMaximumPoolSize(), 60L, TimeUnit.SECONDS,\n-                        new ArrayBlockingQueue<>( POOL_QUEUE_CAPACITY ),\n-                        new NamedThreadFactory( \"Lucene-Merge\", true ), new ThreadPoolExecutor.CallerRunsPolicy() );\n+        private static final ExecutorService mergeThreadsPool = new ThreadPoolExecutor( POOL_MINIMUM_THREADS, getMaximumPoolSize(), 60L, TimeUnit.SECONDS, new ArrayBlockingQueue<>( POOL_QUEUE_CAPACITY ), new NamedThreadFactory( \"Lucene-Merge\", true ), new ThreadPoolExecutor.CallerRunsPolicy() );\n \n-        private static int getMaximumPoolSize()\n+private static int getMaximumPoolSize()\n         {\n             return Math.max( POOL_MAXIMUM_THREADS, Runtime.getRuntime().availableProcessors() );\n         }\n@@ -160,4 +154,4 @@ public class PooledConcurrentMergeScheduler extends ConcurrentMergeScheduler\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
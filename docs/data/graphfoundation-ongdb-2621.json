{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2621",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2621/Procedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2621/Procedures.java\nindex d429a420c67..87f583b1e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2621/Procedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2621/Procedures.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.io.File;\n@@ -53,290 +54,303 @@ import org.neo4j.values.ValueMapper;\n  */\n public class Procedures extends LifecycleAdapter\n {\n-    private final ProcedureRegistry registry = new ProcedureRegistry();\n-    private final TypeMappers typeMappers;\n-    private final ComponentRegistry safeComponents = new ComponentRegistry();\n-    private final ComponentRegistry allComponents = new ComponentRegistry();\n-    private final ReflectiveProcedureCompiler compiler;\n-    private final ThrowingConsumer<Procedures, ProcedureException> builtin;\n-    private final File pluginDir;\n-    private final Log log;\n-\n-    /**\n-     * Used by testing.\n-     */\n-    public Procedures()\n-    {\n-        this( null, new SpecialBuiltInProcedures( \"N/A\", \"N/A\" ), null, NullLog.getInstance(), ProcedureConfig.DEFAULT );\n-    }\n-\n-    public Procedures(\n-            EmbeddedProxySPI proxySPI,\n-            ThrowingConsumer<Procedures,ProcedureException> builtin,\n-            File pluginDir,\n-            Log log,\n-            ProcedureConfig config )\n-    {\n-        this.builtin = builtin;\n-        this.pluginDir = pluginDir;\n-        this.log = log;\n-        this.typeMappers = new TypeMappers( proxySPI );\n-        this.compiler = new ReflectiveProcedureCompiler( typeMappers, safeComponents, allComponents, log, config );\n-    }\n-\n-    /**\n-     * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param proc the procedure.\n-     */\n-    public void register( CallableProcedure proc ) throws ProcedureException\n-    {\n-        register( proc, false );\n-    }\n-\n-    /**\n-     * Register a new function. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param function the fucntion.\n-     */\n-    public void register( CallableUserFunction function ) throws ProcedureException\n-    {\n-        register( function, false );\n-    }\n-\n-    /**\n-     * Register a new function. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param function the fucntion.\n-     */\n-    public void register( CallableUserAggregationFunction function ) throws ProcedureException\n-    {\n-        register( function, false );\n-    }\n-\n-    /**\n-     * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param function the function.\n-     */\n-    public void register( CallableUserFunction function, boolean overrideCurrentImplementation ) throws ProcedureException\n-    {\n-        registry.register( function, overrideCurrentImplementation );\n-    }\n-\n-    /**\n-     * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param function the function.\n-     */\n-    public void register( CallableUserAggregationFunction function, boolean overrideCurrentImplementation ) throws ProcedureException\n+  private final ProcedureRegistry registry = new ProcedureRegistry();\n+  private final TypeMappers typeMappers;\n+  private final ComponentRegistry safeComponents = new ComponentRegistry();\n+  private final ComponentRegistry allComponents = new ComponentRegistry();\n+  private final ReflectiveProcedureCompiler compiler;\n+  private final ThrowingConsumer<Procedures, ProcedureException> builtin;\n+  private final File pluginDir;\n+  private final Log log;\n+\n+  /**\n+   * Used by testing.\n+   */\n+  public Procedures()\n+  {\n+    this(null, new SpecialBuiltInProcedures(\"N/A\", \"N/A\"), null, NullLog.getInstance(), ProcedureConfig.DEFAULT);\n+  }\n+\n+  public Procedures(\n+      EmbeddedProxySPI proxySPI,\n+      ThrowingConsumer<Procedures, ProcedureException> builtin,\n+      File pluginDir,\n+      Log log,\n+      ProcedureConfig config)\n+  {\n+    this.builtin = builtin;\n+    this.pluginDir = pluginDir;\n+    this.log = log;\n+    this.typeMappers = new TypeMappers(proxySPI);\n+    this.compiler = new ReflectiveProcedureCompiler(typeMappers, safeComponents, allComponents, log, config);\n+  }\n+\n+  /**\n+   * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param proc the procedure.\n+   */\n+  public void register(CallableProcedure proc) throws ProcedureException\n+  {\n+    register(proc, false);\n+  }\n+\n+  /**\n+   * Register a new function. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param function the fucntion.\n+   */\n+  public void register(CallableUserFunction function) throws ProcedureException\n+  {\n+    register(function, false);\n+  }\n+\n+  /**\n+   * Register a new function. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param function the fucntion.\n+   */\n+  public void register(CallableUserAggregationFunction function) throws ProcedureException\n+  {\n+    register(function, false);\n+  }\n+\n+  /**\n+   * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param function the function.\n+   */\n+  public void register(CallableUserFunction function, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    registry.register(function, overrideCurrentImplementation);\n+  }\n+\n+  /**\n+   * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param function the function.\n+   */\n+  public void register(CallableUserAggregationFunction function, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    registry.register(function, overrideCurrentImplementation);\n+  }\n+\n+  /**\n+   * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n+   *\n+   * @param proc the procedure.\n+   */\n+  public void register(CallableProcedure proc, boolean overrideCurrentImplementation) throws ProcedureException\n+  {\n+    registry.register(proc, overrideCurrentImplementation);\n+  }\n+\n+  /**\n+   * Register a new internal procedure defined with annotations on a java class.\n+   *\n+   * @param proc the procedure class\n+   */\n+  public void registerProcedure(Class<?> proc) throws KernelException\n+  {\n+    registerProcedure(proc, false);\n+  }\n+\n+  /**\n+   * Register a new internal procedure defined with annotations on a java class.\n+   *\n+   * @param proc                          the procedure class\n+   * @param overrideCurrentImplementation set to true if procedures within this class should override older procedures with the same name\n+   */\n+  public void registerProcedure(Class<?> proc, boolean overrideCurrentImplementation) throws KernelException\n+  {\n+    registerProcedure(proc, overrideCurrentImplementation, null);\n+  }\n+\n+  /**\n+   * Register a new internal procedure defined with annotations on a java class.\n+   *\n+   * @param proc                          the procedure class\n+   * @param overrideCurrentImplementation set to true if procedures within this class should override older procedures with the same name\n+   * @param warning                       the warning the procedure should generate when called\n+   */\n+  public void registerProcedure(Class<?> proc, boolean overrideCurrentImplementation, String warning) throws KernelException\n+  {\n+    for (CallableProcedure procedure : compiler.compileProcedure(proc, warning, true))\n     {\n-        registry.register( function, overrideCurrentImplementation );\n+      register(procedure, overrideCurrentImplementation);\n     }\n-\n-    /**\n-     * Register a new procedure. This method must not be called concurrently with {@link #procedure(QualifiedName)}.\n-     * @param proc the procedure.\n-     */\n-    public void register( CallableProcedure proc, boolean overrideCurrentImplementation ) throws ProcedureException\n+  }\n+\n+  /**\n+   * Register a new function defined with annotations on a java class.\n+   *\n+   * @param func the function class\n+   */\n+  public void registerBuiltInFunctions(Class<?> func) throws KernelException\n+  {\n+    for (CallableUserFunction function : compiler.withoutNamingRestrictions().compileFunction(func, true))\n     {\n-        registry.register( proc, overrideCurrentImplementation );\n+      register(function, false);\n     }\n-\n-    /**\n-     * Register a new internal procedure defined with annotations on a java class.\n-     * @param proc the procedure class\n-     */\n-    public void registerProcedure( Class<?> proc ) throws KernelException\n-    {\n-        registerProcedure( proc, false );\n-    }\n-\n-    /**\n-     * Register a new internal procedure defined with annotations on a java class.\n-     * @param proc the procedure class\n-     * @param overrideCurrentImplementation set to true if procedures within this class should override older procedures with the same name\n-     */\n-    public void registerProcedure( Class<?> proc, boolean overrideCurrentImplementation ) throws KernelException\n+  }\n+\n+  /**\n+   * Register a new function defined with annotations on a java class.\n+   *\n+   * @param func the function class\n+   */\n+  public void registerFunction(Class<?> func) throws KernelException\n+  {\n+    registerFunction(func, false);\n+  }\n+\n+  /**\n+   * Register a new aggregation function defined with annotations on a java class.\n+   *\n+   * @param func the function class\n+   */\n+  public void registerAggregationFunction(Class<?> func, boolean overrideCurrentImplementation) throws KernelException\n+  {\n+    for (CallableUserAggregationFunction function : compiler.compileAggregationFunction(func))\n     {\n-        registerProcedure( proc, overrideCurrentImplementation, null );\n+      register(function, overrideCurrentImplementation);\n     }\n-\n-    /**\n-     * Register a new internal procedure defined with annotations on a java class.\n-     * @param proc the procedure class\n-     * @param overrideCurrentImplementation set to true if procedures within this class should override older procedures with the same name\n-     * @param warning the warning the procedure should generate when called\n-     */\n-    public void registerProcedure( Class<?> proc, boolean overrideCurrentImplementation, String warning ) throws KernelException\n+  }\n+\n+  /**\n+   * Register a new aggregation function defined with annotations on a java class.\n+   *\n+   * @param func the function class\n+   */\n+  public void registerAggregationFunction(Class<?> func) throws KernelException\n+  {\n+    registerAggregationFunction(func, false);\n+  }\n+\n+  /**\n+   * Register a new function defined with annotations on a java class.\n+   *\n+   * @param func the function class\n+   */\n+  public void registerFunction(Class<?> func, boolean overrideCurrentImplementation) throws KernelException\n+  {\n+    for (CallableUserFunction function : compiler.compileFunction(func, false))\n     {\n-        for ( CallableProcedure procedure : compiler.compileProcedure( proc, warning, true ) )\n-        {\n-            register( procedure, overrideCurrentImplementation );\n-        }\n+      register(function, overrideCurrentImplementation);\n     }\n-\n-    /**\n-     * Register a new function defined with annotations on a java class.\n-     * @param func the function class\n-     */\n-    public void registerBuiltInFunctions( Class<?> func ) throws KernelException\n+  }\n+\n+  /**\n+   * Registers a type and its mapping to Neo4jTypes\n+   *\n+   * @param javaClass the class of the native type\n+   * @param type      the mapping to Neo4jTypes\n+   */\n+  public void registerType(Class<?> javaClass, Neo4jTypes.AnyType type)\n+  {\n+    typeMappers.registerType(javaClass, new TypeMappers.DefaultValueConverter(type, javaClass));\n+  }\n+\n+  /**\n+   * Registers a component, these become available in reflective procedures for injection.\n+   *\n+   * @param cls      the type of component to be registered (this is what users 'ask' for in their field declaration)\n+   * @param provider a function that supplies the component, given the context of a procedure invocation\n+   * @param safe     set to false if this component can bypass security, true if it respects security\n+   */\n+  public <T> void registerComponent(Class<T> cls, ComponentRegistry.Provider<T> provider, boolean safe)\n+  {\n+    if (safe)\n     {\n-        for ( CallableUserFunction function : compiler.withoutNamingRestrictions().compileFunction( func, true ) )\n-        {\n-            register( function, false );\n-        }\n+      safeComponents.register(cls, provider);\n     }\n-\n-    /**\n-     * Register a new function defined with annotations on a java class.\n-     * @param func the function class\n-     */\n-    public void registerFunction( Class<?> func ) throws KernelException\n+    allComponents.register(cls, provider);\n+  }\n+\n+  public ProcedureHandle procedure(QualifiedName name) throws ProcedureException\n+  {\n+    return registry.procedure(name);\n+  }\n+\n+  public UserFunctionHandle function(QualifiedName name)\n+  {\n+    return registry.function(name);\n+  }\n+\n+  public UserFunctionHandle aggregationFunction(QualifiedName name)\n+  {\n+    return registry.aggregationFunction(name);\n+  }\n+\n+  public Set<ProcedureSignature> getAllProcedures()\n+  {\n+    return registry.getAllProcedures();\n+  }\n+\n+  public Set<UserFunctionSignature> getAllFunctions()\n+  {\n+    return registry.getAllFunctions();\n+  }\n+\n+  public RawIterator<Object[], ProcedureException> callProcedure(Context ctx, QualifiedName name,\n+                                                                 Object[] input, ResourceTracker resourceTracker) throws ProcedureException\n+  {\n+    return registry.callProcedure(ctx, name, input, resourceTracker);\n+  }\n+\n+  public RawIterator<Object[], ProcedureException> callProcedure(Context ctx, int id,\n+                                                                 Object[] input, ResourceTracker resourceTracker) throws ProcedureException\n+  {\n+    return registry.callProcedure(ctx, id, input, resourceTracker);\n+  }\n+\n+  public AnyValue callFunction(Context ctx, QualifiedName name, AnyValue[] input) throws ProcedureException\n+  {\n+    return registry.callFunction(ctx, name, input);\n+  }\n+\n+  public AnyValue callFunction(Context ctx, int id, AnyValue[] input) throws ProcedureException\n+  {\n+    return registry.callFunction(ctx, id, input);\n+  }\n+\n+  public UserAggregator createAggregationFunction(Context ctx, QualifiedName name) throws ProcedureException\n+  {\n+    return registry.createAggregationFunction(ctx, name);\n+  }\n+\n+  public UserAggregator createAggregationFunction(Context ctx, int id) throws ProcedureException\n+  {\n+    return registry.createAggregationFunction(ctx, id);\n+  }\n+\n+  public ValueMapper<Object> valueMapper()\n+  {\n+    return typeMappers;\n+  }\n+\n+  @Override\n+  public void start() throws Throwable\n+  {\n+\n+    ProcedureJarLoader loader = new ProcedureJarLoader(compiler, log);\n+    ProcedureJarLoader.Callables callables = loader.loadProceduresFromDir(pluginDir);\n+    for (CallableProcedure procedure : callables.procedures())\n     {\n-        registerFunction( func, false );\n+      register(procedure);\n     }\n \n-    /**\n-     * Register a new aggregation function defined with annotations on a java class.\n-     * @param func the function class\n-     */\n-    public void registerAggregationFunction( Class<?> func, boolean overrideCurrentImplementation ) throws KernelException\n+    for (CallableUserFunction function : callables.functions())\n     {\n-        for ( CallableUserAggregationFunction function : compiler.compileAggregationFunction( func ) )\n-        {\n-            register( function, overrideCurrentImplementation );\n-        }\n+      register(function);\n     }\n \n-    /**\n-     * Register a new aggregation function defined with annotations on a java class.\n-     * @param func the function class\n-     */\n-    public void registerAggregationFunction( Class<?> func ) throws KernelException\n+    for (CallableUserAggregationFunction function : callables.aggregationFunctions())\n     {\n-        registerAggregationFunction( func, false );\n+      register(function);\n     }\n \n-    /**\n-     * Register a new function defined with annotations on a java class.\n-     * @param func the function class\n-     */\n-    public void registerFunction( Class<?> func, boolean overrideCurrentImplementation ) throws KernelException\n-    {\n-        for ( CallableUserFunction function : compiler.compileFunction( func, false ) )\n-        {\n-            register( function, overrideCurrentImplementation );\n-        }\n-    }\n-\n-    /**\n-     * Registers a type and its mapping to Neo4jTypes\n-     *\n-     * @param javaClass\n-     *         the class of the native type\n-     * @param type\n-     *         the mapping to Neo4jTypes\n-     */\n-    public void registerType( Class<?> javaClass, Neo4jTypes.AnyType type )\n-    {\n-        typeMappers.registerType( javaClass, new TypeMappers.DefaultValueConverter( type, javaClass ) );\n-    }\n-\n-    /**\n-     * Registers a component, these become available in reflective procedures for injection.\n-     * @param cls the type of component to be registered (this is what users 'ask' for in their field declaration)\n-     * @param provider a function that supplies the component, given the context of a procedure invocation\n-     * @param safe set to false if this component can bypass security, true if it respects security\n-     */\n-    public <T> void registerComponent( Class<T> cls, ComponentRegistry.Provider<T> provider, boolean safe )\n-    {\n-        if ( safe )\n-        {\n-            safeComponents.register( cls, provider );\n-        }\n-        allComponents.register( cls, provider );\n-    }\n-\n-    public ProcedureHandle procedure( QualifiedName name ) throws ProcedureException\n-    {\n-        return registry.procedure( name );\n-    }\n-\n-    public UserFunctionHandle function( QualifiedName name )\n-    {\n-        return registry.function( name );\n-    }\n-\n-    public UserFunctionHandle aggregationFunction( QualifiedName name )\n-    {\n-        return registry.aggregationFunction( name );\n-    }\n-\n-    public Set<ProcedureSignature> getAllProcedures()\n-    {\n-        return registry.getAllProcedures();\n-    }\n-\n-    public Set<UserFunctionSignature> getAllFunctions()\n-    {\n-        return registry.getAllFunctions();\n-    }\n-\n-    public RawIterator<Object[], ProcedureException> callProcedure( Context ctx, QualifiedName name,\n-                                                           Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n-        return registry.callProcedure( ctx, name, input, resourceTracker );\n-    }\n-\n-    public RawIterator<Object[], ProcedureException> callProcedure( Context ctx, int id,\n-            Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n-        return registry.callProcedure( ctx, id, input, resourceTracker );\n-    }\n-\n-    public AnyValue callFunction( Context ctx, QualifiedName name, AnyValue[] input ) throws ProcedureException\n-    {\n-        return registry.callFunction( ctx, name, input );\n-    }\n-\n-    public AnyValue callFunction( Context ctx, int id, AnyValue[] input ) throws ProcedureException\n-    {\n-        return registry.callFunction( ctx, id, input );\n-    }\n-\n-    public UserAggregator createAggregationFunction( Context ctx, QualifiedName name ) throws ProcedureException\n-    {\n-        return registry.createAggregationFunction( ctx, name );\n-    }\n-\n-    public UserAggregator createAggregationFunction( Context ctx, int id ) throws ProcedureException\n-    {\n-        return registry.createAggregationFunction( ctx, id );\n-    }\n-\n-    public ValueMapper<Object> valueMapper()\n-    {\n-        return typeMappers;\n-    }\n-\n-    @Override\n-    public void start() throws Throwable\n-    {\n-\n-        ProcedureJarLoader loader = new ProcedureJarLoader( compiler, log );\n-        ProcedureJarLoader.Callables callables = loader.loadProceduresFromDir( pluginDir );\n-        for ( CallableProcedure procedure : callables.procedures() )\n-        {\n-            register( procedure );\n-        }\n-\n-        for ( CallableUserFunction function : callables.functions() )\n-        {\n-            register( function );\n-        }\n-\n-        for ( CallableUserAggregationFunction function : callables.aggregationFunctions() )\n-        {\n-            register( function );\n-        }\n-\n-        // And register built-in procedures\n-        builtin.accept( this );\n-    }\n+    // And register built-in procedures\n+    builtin.accept(this);\n+  }\n }\n",
            "diff_size": 421
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2621/Procedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2621/Procedures.java\nindex d429a420c67..486d5aa6aa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2621/Procedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2621/Procedures.java\n@@ -58,7 +58,7 @@ public class Procedures extends LifecycleAdapter\n     private final ComponentRegistry safeComponents = new ComponentRegistry();\n     private final ComponentRegistry allComponents = new ComponentRegistry();\n     private final ReflectiveProcedureCompiler compiler;\n-    private final ThrowingConsumer<Procedures, ProcedureException> builtin;\n+    private final ThrowingConsumer<Procedures,ProcedureException> builtin;\n     private final File pluginDir;\n     private final Log log;\n \n@@ -70,9 +70,7 @@ public class Procedures extends LifecycleAdapter\n         this( null, new SpecialBuiltInProcedures( \"N/A\", \"N/A\" ), null, NullLog.getInstance(), ProcedureConfig.DEFAULT );\n     }\n \n-    public Procedures(\n-            EmbeddedProxySPI proxySPI,\n-            ThrowingConsumer<Procedures,ProcedureException> builtin,\n+    public Procedures( EmbeddedProxySPI proxySPI, ThrowingConsumer<Procedures,ProcedureException> builtin,\n             File pluginDir,\n             Log log,\n             ProcedureConfig config )\n@@ -278,15 +276,14 @@ public class Procedures extends LifecycleAdapter\n         return registry.getAllFunctions();\n     }\n \n-    public RawIterator<Object[], ProcedureException> callProcedure( Context ctx, QualifiedName name,\n-                                                           Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n+    public RawIterator<Object[], ProcedureException> callProcedure( Context ctx, QualifiedName name, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n+{\n         return registry.callProcedure( ctx, name, input, resourceTracker );\n     }\n \n     public RawIterator<Object[], ProcedureException> callProcedure( Context ctx, int id,\n             Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n+{\n         return registry.callProcedure( ctx, id, input, resourceTracker );\n     }\n \n@@ -318,8 +315,7 @@ public class Procedures extends LifecycleAdapter\n     @Override\n     public void start() throws Throwable\n     {\n-\n-        ProcedureJarLoader loader = new ProcedureJarLoader( compiler, log );\n+    ProcedureJarLoader loader = new ProcedureJarLoader( compiler, log );\n         ProcedureJarLoader.Callables callables = loader.loadProceduresFromDir( pluginDir );\n         for ( CallableProcedure procedure : callables.procedures() )\n         {\n@@ -339,4 +335,4 @@ public class Procedures extends LifecycleAdapter\n         // And register built-in procedures\n         builtin.accept( this );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
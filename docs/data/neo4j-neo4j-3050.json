{
    "project_name": "neo4j-neo4j",
    "error_id": "3050",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "335",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "338",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "341",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "344",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "353",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "360",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "360",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "365",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "523",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3050/JavaSourceMethodWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3050/JavaSourceMethodWriter.java\nindex 6ab21475cec..4b4a74b1e85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3050/JavaSourceMethodWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3050/JavaSourceMethodWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import org.apache.commons.text.StringEscapeUtils;\n@@ -35,35 +36,38 @@ import org.neo4j.codegen.TypeReference;\n \n class JavaSourceMethodWriter implements MethodWriter, ExpressionVisitor\n {\n-    private static final Runnable BOTTOM = () -> { throw new IllegalStateException( \"Popped too many levels!\" ); };\n-    private static final Runnable LEVEL = () -> {};\n+    private static final Runnable BOTTOM = () -> {\n+        throw new IllegalStateException(\"Popped too many levels!\");\n+    };\n+    private static final Runnable LEVEL = () -> {\n+    };\n     private static final String INDENTATION = \"    \";\n     private final StringBuilder target;\n     private final JavaSourceClassWriter classSourceWriter;\n     private final boolean isStatic;\n     private final Deque<Runnable> levels = new LinkedList<>();\n \n-    JavaSourceMethodWriter( StringBuilder target, JavaSourceClassWriter classSourceWriter, boolean isStatic )\n+    JavaSourceMethodWriter(StringBuilder target, JavaSourceClassWriter classSourceWriter, boolean isStatic)\n     {\n         this.target = target;\n         this.classSourceWriter = classSourceWriter;\n         this.isStatic = isStatic;\n-        this.levels.push( BOTTOM );\n-        this.levels.push( LEVEL );\n+        this.levels.push(BOTTOM);\n+        this.levels.push(LEVEL);\n     }\n \n     private StringBuilder indent()\n     {\n-        for ( int level = this.levels.size(); level-- > 0; )\n+        for (int level = this.levels.size(); level-- > 0; )\n         {\n-            target.append( INDENTATION );\n+            target.append(INDENTATION);\n         }\n         return target;\n     }\n \n-    private StringBuilder append( CharSequence text )\n+    private StringBuilder append(CharSequence text)\n     {\n-        return target.append( text );\n+        return target.append(text);\n     }\n \n     @Override\n@@ -75,519 +79,509 @@ class JavaSourceMethodWriter implements MethodWriter, ExpressionVisitor\n     @Override\n     public void done()\n     {\n-        if ( levels.size() != 1 )\n+        if (levels.size() != 1)\n         {\n-            throw new IllegalStateException( \"unbalanced blocks!\" );\n+            throw new IllegalStateException(\"unbalanced blocks!\");\n         }\n-        classSourceWriter.append( target );\n+        classSourceWriter.append(target);\n     }\n \n     @Override\n-    public void expression( Expression expression )\n+    public void expression(Expression expression)\n     {\n-        if ( expression == Expression.EMPTY )\n+        if (expression == Expression.EMPTY)\n         {\n             return;\n         }\n         indent();\n-        expression.accept( this );\n-        target.append( \";\\n\" );\n+        expression.accept(this);\n+        target.append(\";\\n\");\n     }\n \n     @Override\n-    public void put( Expression target, FieldReference field, Expression value )\n+    public void put(Expression target, FieldReference field, Expression value)\n     {\n         indent();\n-        target.accept( this );\n-        append( \".\" );\n-        append( field.name() );\n-        append( \" = \" );\n-        value.accept( this );\n-        append( \";\\n\" );\n+        target.accept(this);\n+        append(\".\");\n+        append(field.name());\n+        append(\" = \");\n+        value.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n-    public void putStatic( FieldReference field, Expression value )\n+    public void putStatic(FieldReference field, Expression value)\n     {\n         indent();\n-        append( field.owner().fullName() );\n-        append( \".\" );\n-        append( field.name() );\n-        append( \" = \" );\n-        value.accept( this );\n-        append( \";\\n\" );\n+        append(field.owner().fullName());\n+        append(\".\");\n+        append(field.name());\n+        append(\" = \");\n+        value.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n     public void returns()\n     {\n-        indent().append( \"return;\\n\" );\n+        indent().append(\"return;\\n\");\n     }\n \n     @Override\n-    public void returns( Expression value )\n+    public void returns(Expression value)\n     {\n-        indent().append( \"return \" );\n-        value.accept( this );\n-        append( \";\\n\" );\n+        indent().append(\"return \");\n+        value.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n     public void continues()\n     {\n-        indent().append( \"continue;\\n\" );\n+        indent().append(\"continue;\\n\");\n     }\n \n     @Override\n-    public void breaks( String labelName )\n+    public void breaks(String labelName)\n     {\n-        indent().append( \"break \" + labelName + \";\\n\" );\n+        indent().append(\"break \" + labelName + \";\\n\");\n     }\n \n     @Override\n-    public void declare( LocalVariable local )\n+    public void declare(LocalVariable local)\n     {\n-        indent().append( local.type().fullName() ).append( ' ' ).append( local.name() ).append( \";\\n\" );\n+        indent().append(local.type().fullName()).append(' ').append(local.name()).append(\";\\n\");\n     }\n \n     @Override\n-    public void assignVariableInScope( LocalVariable local, Expression value )\n+    public void assignVariableInScope(LocalVariable local, Expression value)\n     {\n-        indent().append( local.name() ).append( \" = \" );\n-        value.accept( this );\n-        append( \";\\n\" );\n+        indent().append(local.name()).append(\" = \");\n+        value.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n-    public void assign( LocalVariable variable, Expression value )\n+    public void assign(LocalVariable variable, Expression value)\n     {\n-        indent().append( variable.type().fullName() ).append( ' ' ).append( variable.name() ).append( \" = \" );\n-        value.accept( this );\n-        append( \";\\n\" );\n+        indent().append(variable.type().fullName()).append(' ').append(variable.name()).append(\" = \");\n+        value.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n-    public void beginWhile( Expression test, String labelName )\n+    public void beginWhile(Expression test, String labelName)\n     {\n-        if ( labelName != null && !labelName.isEmpty() )\n+        if (labelName != null && !labelName.isEmpty())\n         {\n-            indent().append( labelName + \":\\n\" );\n+            indent().append(labelName + \":\\n\");\n         }\n-        indent().append( \"while( \" );\n-        test.accept( this );\n-        append( \" )\\n\" );\n-        indent().append( \"{\\n\" );\n-        levels.push( LEVEL );\n+        indent().append(\"while( \");\n+        test.accept(this);\n+        append(\" )\\n\");\n+        indent().append(\"{\\n\");\n+        levels.push(LEVEL);\n     }\n \n     @Override\n-    public void beginIf( Expression test )\n+    public void beginIf(Expression test)\n     {\n-        indent().append( \"if ( \" );\n-        test.accept( this );\n-        append( \" )\\n\" );\n-        indent().append( \"{\\n\" );\n-        levels.push( LEVEL );\n+        indent().append(\"if ( \");\n+        test.accept(this);\n+        append(\" )\\n\");\n+        indent().append(\"{\\n\");\n+        levels.push(LEVEL);\n     }\n \n     @Override\n-    public <T> void ifElseStatement( Expression test, Consumer<T> onTrue, Consumer<T> onFalse, T block )\n+    public <T> void ifElseStatement(Expression test, Consumer<T> onTrue, Consumer<T> onFalse, T block)\n     {\n-        beginIf( test );\n-        onTrue.accept( block );\n+        beginIf(test);\n+        onTrue.accept(block);\n         levels.pop();\n-        indent().append( \"}\\n\" );\n-        indent().append( \"else {\\n\" );\n-        levels.push( LEVEL );\n-        onFalse.accept( block );\n+        indent().append(\"}\\n\");\n+        indent().append(\"else {\\n\");\n+        levels.push(LEVEL);\n+        onFalse.accept(block);\n         levels.pop();\n-        indent().append( \"}\\n\" );\n+        indent().append(\"}\\n\");\n     }\n \n     @Override\n     public void beginBlock()\n     {\n-        indent().append( \"{\\n\" );\n-        levels.push( LEVEL );\n+        indent().append(\"{\\n\");\n+        levels.push(LEVEL);\n     }\n \n     @Override\n-    public <T> void tryCatchBlock( Consumer<T> body, Consumer<T> handler, LocalVariable exception, T block )\n+    public <T> void tryCatchBlock(Consumer<T> body, Consumer<T> handler, LocalVariable exception, T block)\n     {\n \n-        indent().append( \"try\\n\" );\n-        indent().append( \"{\\n\" );\n-        levels.push( LEVEL );\n-        body.accept( block );\n+        indent().append(\"try\\n\");\n+        indent().append(\"{\\n\");\n+        levels.push(LEVEL);\n+        body.accept(block);\n         levels.pop();\n-        indent().append( \"}\\n\" );\n-        indent().append( \"catch ( \" )\n-                .append( exception.type().fullName() ).append( ' ' )\n-                .append( exception.name() )\n-                .append( \" )\\n\" );\n-        indent().append( \"{\\n\" );\n-        levels.push( LEVEL );\n-        handler.accept( block );\n+        indent().append(\"}\\n\");\n+        indent().append(\"catch ( \")\n+          .append(exception.type().fullName()).append(' ')\n+          .append(exception.name())\n+          .append(\" )\\n\");\n+        indent().append(\"{\\n\");\n+        levels.push(LEVEL);\n+        handler.accept(block);\n         levels.pop();\n-        indent().append( \"}\\n\" );\n+        indent().append(\"}\\n\");\n     }\n \n     @Override\n-    public void throwException( Expression exception )\n+    public void throwException(Expression exception)\n     {\n-        indent().append( \"throw \" );\n-        exception.accept( this );\n-        append( \";\\n\" );\n+        indent().append(\"throw \");\n+        exception.accept(this);\n+        append(\";\\n\");\n     }\n \n     @Override\n     public void endBlock()\n     {\n         Runnable action = levels.pop();\n-        indent().append( \"}\\n\" );\n+        indent().append(\"}\\n\");\n         action.run();\n     }\n \n     @Override\n-    public void invoke( Expression target, MethodReference method, Expression[] arguments )\n+    public void invoke(Expression target, MethodReference method, Expression[] arguments)\n     {\n-        target.accept( this );\n-        if ( !method.isConstructor() )\n+        target.accept(this);\n+        if (!method.isConstructor())\n         {\n-            append( \".\" ).append( method.name() );\n+            append(\".\").append(method.name());\n         }\n-        arglist( arguments );\n+        arglist(arguments);\n     }\n \n     @Override\n-    public void invoke( MethodReference method, Expression[] arguments )\n+    public void invoke(MethodReference method, Expression[] arguments)\n     {\n-        append( method.owner().fullName() ).append( '.' ).append( method.name() );\n-        arglist( arguments );\n+        append(method.owner().fullName()).append('.').append(method.name());\n+        arglist(arguments);\n     }\n \n-    private void arglist( Expression[] arguments )\n+    private void arglist(Expression[] arguments)\n     {\n-        append( \"(\" );\n+        append(\"(\");\n         String sep = \" \";\n-        for ( Expression argument : arguments )\n+        for (Expression argument : arguments)\n         {\n-            append( sep );\n-            argument.accept( this );\n+            append(sep);\n+            argument.accept(this);\n             sep = \", \";\n         }\n-        if ( sep.length() > 1 )\n+        if (sep.length() > 1)\n         {\n-            append( \" \" );\n+            append(\" \");\n         }\n-        append( \")\" );\n+        append(\")\");\n     }\n \n     @Override\n-    public void load( LocalVariable variable )\n+    public void load(LocalVariable variable)\n     {\n-        append( variable.name() );\n+        append(variable.name());\n     }\n \n     @Override\n-    public void arrayLoad( Expression array, Expression index )\n+    public void arrayLoad(Expression array, Expression index)\n     {\n-        array.accept( this );\n-        append( \"[\" );\n-        index.accept( this );\n-        append( \"]\" );\n+        array.accept(this);\n+        append(\"[\");\n+        index.accept(this);\n+        append(\"]\");\n     }\n \n     @Override\n-    public void arraySet( Expression array, Expression index, Expression value )\n+    public void arraySet(Expression array, Expression index, Expression value)\n     {\n-        array.accept( this );\n-        append( \"[\" );\n-        index.accept( this );\n-        append( \"] = \" );\n-        value.accept( this );\n+        array.accept(this);\n+        append(\"[\");\n+        index.accept(this);\n+        append(\"] = \");\n+        value.accept(this);\n     }\n \n     @Override\n-    public void arrayLength( Expression array )\n+    public void arrayLength(Expression array)\n     {\n-        array.accept( this );\n-        append( \".length\" );\n+        array.accept(this);\n+        append(\".length\");\n     }\n \n     @Override\n-    public void getField( Expression target, FieldReference field )\n+    public void getField(Expression target, FieldReference field)\n     {\n-        target.accept( this );\n-        append( \".\" ).append( field.name() );\n+        target.accept(this);\n+        append(\".\").append(field.name());\n     }\n \n     @Override\n-    public void constant( Object value )\n+    public void constant(Object value)\n     {\n-        if ( value == null )\n+        if (value == null)\n         {\n-            append( \"null\" );\n-        }\n-        else if ( value instanceof String )\n+            append(\"null\");\n+        } else if (value instanceof String)\n         {\n-            append( \"\\\"\" ).append( StringEscapeUtils.escapeJava( (String) value ) ).append( '\"' );\n-        }\n-        else if ( value instanceof Integer )\n+            append(\"\\\"\").append(StringEscapeUtils.escapeJava((String) value)).append('\"');\n+        } else if (value instanceof Integer)\n         {\n-            append( value.toString() );\n-        }\n-        else if ( value instanceof Long )\n+            append(value.toString());\n+        } else if (value instanceof Long)\n         {\n-            append( value.toString() ).append( 'L' );\n-        }\n-        else if ( value instanceof Double )\n+            append(value.toString()).append('L');\n+        } else if (value instanceof Double)\n         {\n             Double doubleValue = (Double) value;\n-            if ( Double.isNaN( doubleValue ) )\n+            if (Double.isNaN(doubleValue))\n             {\n-                append( \"Double.NaN\" );\n-            }\n-            else if ( doubleValue == Double.POSITIVE_INFINITY )\n+                append(\"Double.NaN\");\n+            } else if (doubleValue == Double.POSITIVE_INFINITY)\n             {\n-                append( \"Double.POSITIVE_INFINITY\" );\n-            }\n-            else if ( doubleValue == Double.NEGATIVE_INFINITY )\n+                append(\"Double.POSITIVE_INFINITY\");\n+            } else if (doubleValue == Double.NEGATIVE_INFINITY)\n             {\n-                append( \"Double.NEGATIVE_INFINITY\" );\n-            }\n-            else\n+                append(\"Double.NEGATIVE_INFINITY\");\n+            } else\n             {\n-                append( value.toString() );\n+                append(value.toString());\n             }\n-        }\n-        else if ( value instanceof Boolean )\n+        } else if (value instanceof Boolean)\n         {\n-            append( value.toString() );\n-        }\n-        else\n+            append(value.toString());\n+        } else\n         {\n-            throw new UnsupportedOperationException( value.getClass() + \" constants\" );\n+            throw new UnsupportedOperationException(value.getClass() + \" constants\");\n         }\n     }\n \n     @Override\n-    public void getStatic( FieldReference field )\n+    public void getStatic(FieldReference field)\n     {\n-        append( field.owner().fullName() ).append( '.' ).append( field.name() );\n+        append(field.owner().fullName()).append('.').append(field.name());\n     }\n \n     @Override\n-    public void loadThis( String sourceName )\n+    public void loadThis(String sourceName)\n     {\n-        append( sourceName );\n+        append(sourceName);\n     }\n \n     @Override\n-    public void newInstance( TypeReference type )\n+    public void newInstance(TypeReference type)\n     {\n-        append( \"new \" ).append( type.fullName() );\n+        append(\"new \").append(type.fullName());\n     }\n \n     @Override\n-    public void not( Expression expression )\n+    public void not(Expression expression)\n     {\n-        append( \"!( \" );\n-        expression.accept( this );\n-        append( \" )\" );\n+        append(\"!( \");\n+        expression.accept(this);\n+        append(\" )\");\n     }\n \n     @Override\n-    public void ternary( Expression test, Expression onTrue, Expression onFalse )\n+    public void ternary(Expression test, Expression onTrue, Expression onFalse)\n     {\n-        append( \"((\" );\n-        test.accept( this );\n-        append( \") ? (\" );\n-        onTrue.accept( this );\n-        append( \") : (\" );\n-        onFalse.accept( this );\n-        append( \"))\" );\n+        append(\"((\");\n+        test.accept(this);\n+        append(\") ? (\");\n+        onTrue.accept(this);\n+        append(\") : (\");\n+        onFalse.accept(this);\n+        append(\"))\");\n     }\n \n     @Override\n-    public void equal( Expression lhs, Expression rhs )\n+    public void equal(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" == \" );\n+        binaryOperation(lhs, rhs, \" == \");\n     }\n \n     @Override\n-    public void notEqual( Expression lhs, Expression rhs )\n+    public void notEqual(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" != \" );\n+        binaryOperation(lhs, rhs, \" != \");\n     }\n \n     @Override\n-    public void isNull( Expression expression )\n+    public void isNull(Expression expression)\n     {\n-        expression.accept( this );\n-        append( \" == null\" );\n+        expression.accept(this);\n+        append(\" == null\");\n     }\n \n     @Override\n-    public void notNull( Expression expression )\n+    public void notNull(Expression expression)\n     {\n-        expression.accept( this );\n-        append( \" != null\" );\n+        expression.accept(this);\n+        append(\" != null\");\n     }\n \n     @Override\n-    public void or( Expression... expressions )\n+    public void or(Expression... expressions)\n     {\n-        boolOp( expressions, \" || \");\n+        boolOp(expressions, \" || \");\n     }\n \n     @Override\n-    public void and( Expression... expressions )\n+    public void and(Expression... expressions)\n     {\n-        boolOp( expressions, \" && \");\n+        boolOp(expressions, \" && \");\n     }\n \n-    private void boolOp( Expression[] expressions, String op )\n+    private void boolOp(Expression[] expressions, String op)\n     {\n         String sep = \"\";\n-        for ( Expression expression : expressions )\n+        for (Expression expression : expressions)\n         {\n-            append( sep );\n+            append(sep);\n             append(\"(\");\n-            expression.accept( this );\n+            expression.accept(this);\n             append(\")\");\n             sep = op;\n         }\n     }\n \n     @Override\n-    public void add( Expression lhs, Expression rhs )\n+    public void add(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" + \" );\n+        binaryOperation(lhs, rhs, \" + \");\n     }\n \n     @Override\n-    public void gt( Expression lhs, Expression rhs )\n+    public void gt(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" > \" );\n+        binaryOperation(lhs, rhs, \" > \");\n     }\n \n     @Override\n-    public void gte( Expression lhs, Expression rhs )\n+    public void gte(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" >= \" );\n+        binaryOperation(lhs, rhs, \" >= \");\n     }\n \n     @Override\n-    public void lt( Expression lhs, Expression rhs )\n+    public void lt(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" < \" );\n+        binaryOperation(lhs, rhs, \" < \");\n     }\n \n     @Override\n-    public void lte( Expression lhs, Expression rhs )\n+    public void lte(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" <= \" );\n+        binaryOperation(lhs, rhs, \" <= \");\n     }\n \n     @Override\n-    public void subtract( Expression lhs, Expression rhs )\n+    public void subtract(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" - \" );\n+        binaryOperation(lhs, rhs, \" - \");\n     }\n \n     @Override\n-    public void multiply( Expression lhs, Expression rhs )\n+    public void multiply(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" * \" );\n+        binaryOperation(lhs, rhs, \" * \");\n     }\n \n-    private void div( Expression lhs, Expression rhs )\n+    private void div(Expression lhs, Expression rhs)\n     {\n-        binaryOperation( lhs, rhs, \" / \" );\n+        binaryOperation(lhs, rhs, \" / \");\n     }\n \n     @Override\n-    public void cast( TypeReference type, Expression expression )\n+    public void cast(TypeReference type, Expression expression)\n     {\n-        if ( !type.equals( expression.type() ) )\n+        if (!type.equals(expression.type()))\n         {\n-            append( \"(\" );\n-            append( \"(\" ).append( type.fullName() ).append( \") \" );\n-            append( \"(\" );\n-            expression.accept( this );\n-            append( \")\" );\n-            append( \")\" );\n-        }\n-        else\n+            append(\"(\");\n+            append(\"(\").append(type.fullName()).append(\") \");\n+            append(\"(\");\n+            expression.accept(this);\n+            append(\")\");\n+            append(\")\");\n+        } else\n         {\n-            expression.accept( this );\n+            expression.accept(this);\n         }\n     }\n \n     @Override\n-    public void instanceOf( TypeReference type, Expression expression )\n+    public void instanceOf(TypeReference type, Expression expression)\n     {\n-        expression.accept( this );\n-        append( \" instanceof \" ).append( type.fullName() );\n+        expression.accept(this);\n+        append(\" instanceof \").append(type.fullName());\n     }\n \n     @Override\n-    public void newInitializedArray( TypeReference type, Expression... constants )\n+    public void newInitializedArray(TypeReference type, Expression... constants)\n     {\n-        append( \"new \" ).append( type.fullName() ).append( \"[]{\" );\n+        append(\"new \").append(type.fullName()).append(\"[]{\");\n         String sep = \"\";\n-        for ( Expression constant : constants )\n+        for (Expression constant : constants)\n         {\n-            append( sep );\n-            constant.accept( this );\n+            append(sep);\n+            constant.accept(this);\n             sep = \", \";\n         }\n-        append( \"}\" );\n+        append(\"}\");\n     }\n \n     @Override\n-    public void newArray( TypeReference type, int size )\n+    public void newArray(TypeReference type, int size)\n     {\n-        append( \"new \" ).append( type.fullName() ).append( '[' ).append( size ).append( ']' );\n+        append(\"new \").append(type.fullName()).append('[').append(size).append(']');\n     }\n \n     @Override\n-    public void longToDouble( Expression expression )\n+    public void longToDouble(Expression expression)\n     {\n-        cast( TypeReference.typeReference( double.class ), expression );\n+        cast(TypeReference.typeReference(double.class), expression);\n     }\n \n     @Override\n-    public void pop( Expression expression )\n+    public void pop(Expression expression)\n     {\n-        expression.accept( this );\n+        expression.accept(this);\n     }\n \n     @Override\n-    public void box( Expression expression )\n+    public void box(Expression expression)\n     {\n         //For source code we rely on autoboxing\n-        append( \"(/*box*/ \" );\n-        expression.accept( this );\n-        append( \")\" );\n+        append(\"(/*box*/ \");\n+        expression.accept(this);\n+        append(\")\");\n     }\n \n     @Override\n-    public void unbox( Expression expression )\n+    public void unbox(Expression expression)\n     {\n         //For source code we rely on autoboxing\n-        expression.accept( this );\n+        expression.accept(this);\n     }\n \n-    private void binaryOperation( Expression lhs, Expression rhs, String operator )\n+    private void binaryOperation(Expression lhs, Expression rhs, String operator)\n     {\n-        append( \"(\" );\n-        lhs.accept( this );\n-        append( \")\" );\n-        append( operator );\n-        append( \"(\" );\n-        rhs.accept( this );\n-        append( \")\" );\n+        append(\"(\");\n+        lhs.accept(this);\n+        append(\")\");\n+        append(operator);\n+        append(\"(\");\n+        rhs.accept(this);\n+        append(\")\");\n     }\n }\n",
            "diff_size": 253
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
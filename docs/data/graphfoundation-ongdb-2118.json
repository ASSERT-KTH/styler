{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2118",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2118/ScoreEntityIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2118/ScoreEntityIterator.java\nindex cac036992b6..4c3351495fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2118/ScoreEntityIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2118/ScoreEntityIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import java.util.Iterator;\n@@ -34,168 +35,166 @@ import org.neo4j.kernel.api.impl.index.collector.ValuesIterator;\n  */\n public class ScoreEntityIterator implements Iterator<ScoreEntityIterator.ScoreEntry>\n {\n-    private static final ScoreEntityIterator EMPTY = new ScoreEntityIterator()\n+  private static final ScoreEntityIterator EMPTY = new ScoreEntityIterator()\n+  {\n+    @Override\n+    public Stream<ScoreEntry> stream()\n     {\n-        @Override\n-        public Stream<ScoreEntry> stream()\n-        {\n-            return Stream.empty();\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public ScoreEntry next()\n-        {\n-            throw new NoSuchElementException( \"The iterator is exhausted\" );\n-        }\n-    };\n-    private final ValuesIterator iterator;\n+      return Stream.empty();\n+    }\n \n-    ScoreEntityIterator( ValuesIterator sortedValuesIterator )\n+    @Override\n+    public boolean hasNext()\n     {\n-        this.iterator = sortedValuesIterator;\n+      return false;\n     }\n \n-    private ScoreEntityIterator()\n+    @Override\n+    public ScoreEntry next()\n     {\n-        this.iterator = null;\n+      throw new NoSuchElementException(\"The iterator is exhausted\");\n     }\n-\n-    public Stream<ScoreEntry> stream()\n+  };\n+  private final ValuesIterator iterator;\n+\n+  ScoreEntityIterator(ValuesIterator sortedValuesIterator)\n+  {\n+    this.iterator = sortedValuesIterator;\n+  }\n+\n+  private ScoreEntityIterator()\n+  {\n+    this.iterator = null;\n+  }\n+\n+  public Stream<ScoreEntry> stream()\n+  {\n+    return StreamSupport.stream(Spliterators.spliteratorUnknownSize(this, Spliterator.ORDERED), false);\n+  }\n+\n+  @Override\n+  public boolean hasNext()\n+  {\n+    return iterator.hasNext();\n+  }\n+\n+  @Override\n+  public ScoreEntry next()\n+  {\n+    if (hasNext())\n     {\n-        return StreamSupport.stream( Spliterators.spliteratorUnknownSize( this, Spliterator.ORDERED ), false );\n+      return new ScoreEntry(iterator.next(), iterator.currentScore());\n+    } else\n+    {\n+      throw new NoSuchElementException(\"The iterator is exhausted\");\n+    }\n+  }\n+\n+  /**\n+   * Concatenates the given iterators\n+   *\n+   * @param iterators to concatenate\n+   * @return a {@link ScoreEntityIterator} that iterates over all of the elements in all of the given iterators\n+   */\n+  public static ScoreEntityIterator concat(List<ScoreEntityIterator> iterators)\n+  {\n+    return new ConcatenatingScoreEntityIterator(iterators);\n+  }\n+\n+  public static ScoreEntityIterator emptyIterator()\n+  {\n+    return EMPTY;\n+  }\n+\n+  private static class ConcatenatingScoreEntityIterator extends ScoreEntityIterator\n+  {\n+    private final List<? extends ScoreEntityIterator> iterators;\n+    private final ScoreEntry[] buffer;\n+    private boolean fetched;\n+    private ScoreEntry nextHead;\n+\n+    ConcatenatingScoreEntityIterator(List<? extends ScoreEntityIterator> iterators)\n+    {\n+      this.iterators = iterators;\n+      this.buffer = new ScoreEntry[iterators.size()];\n     }\n \n     @Override\n     public boolean hasNext()\n     {\n-        return iterator.hasNext();\n+      if (!fetched)\n+      {\n+        fetch();\n+      }\n+      return nextHead != null;\n     }\n \n-    @Override\n-    public ScoreEntry next()\n+    private void fetch()\n     {\n-        if ( hasNext() )\n+      int candidateHead = -1;\n+      for (int i = 0; i < iterators.size(); i++)\n+      {\n+        ScoreEntry entry = buffer[i];\n+        //Fill buffer if needed.\n+        if (entry == null && iterators.get(i).hasNext())\n         {\n-            return new ScoreEntry( iterator.next(), iterator.currentScore() );\n+          entry = iterators.get(i).next();\n+          buffer[i] = entry;\n         }\n-        else\n+\n+        //Check if entry might be candidate for next to return.\n+        if (entry != null && (nextHead == null || entry.score > nextHead.score))\n         {\n-            throw new NoSuchElementException( \"The iterator is exhausted\" );\n+          nextHead = entry;\n+          candidateHead = i;\n         }\n+      }\n+      if (candidateHead != -1)\n+      {\n+        buffer[candidateHead] = null;\n+      }\n+      fetched = true;\n     }\n \n-    /**\n-     * Concatenates the given iterators\n-     *\n-     * @param iterators to concatenate\n-     * @return a {@link ScoreEntityIterator} that iterates over all of the elements in all of the given iterators\n-     */\n-    public static ScoreEntityIterator concat( List<ScoreEntityIterator> iterators )\n+    @Override\n+    public ScoreEntry next()\n     {\n-        return new ConcatenatingScoreEntityIterator( iterators );\n+      if (hasNext())\n+      {\n+        fetched = false;\n+        ScoreEntry best = nextHead;\n+        nextHead = null;\n+        return best;\n+      } else\n+      {\n+        throw new NoSuchElementException(\"The iterator is exhausted\");\n+      }\n     }\n+  }\n+\n+  /**\n+   * A ScoreEntry consists of an entity id together with its score.\n+   */\n+  public static class ScoreEntry\n+  {\n+    private final long entityId;\n+    private final float score;\n \n-    public static ScoreEntityIterator emptyIterator()\n+    public long entityId()\n     {\n-        return EMPTY;\n+      return entityId;\n     }\n \n-    private static class ConcatenatingScoreEntityIterator extends ScoreEntityIterator\n+    public float score()\n     {\n-        private final List<? extends ScoreEntityIterator> iterators;\n-        private final ScoreEntry[] buffer;\n-        private boolean fetched;\n-        private ScoreEntry nextHead;\n-\n-        ConcatenatingScoreEntityIterator( List<? extends ScoreEntityIterator> iterators )\n-        {\n-            this.iterators = iterators;\n-            this.buffer = new ScoreEntry[iterators.size()];\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            if ( !fetched )\n-            {\n-                fetch();\n-            }\n-            return nextHead != null;\n-        }\n-\n-        private void fetch()\n-        {\n-            int candidateHead = -1;\n-            for ( int i = 0; i < iterators.size(); i++ )\n-            {\n-                ScoreEntry entry = buffer[i];\n-                //Fill buffer if needed.\n-                if ( entry == null && iterators.get( i ).hasNext() )\n-                {\n-                    entry = iterators.get( i ).next();\n-                    buffer[i] = entry;\n-                }\n-\n-                //Check if entry might be candidate for next to return.\n-                if ( entry != null && (nextHead == null || entry.score > nextHead.score) )\n-                {\n-                    nextHead = entry;\n-                    candidateHead = i;\n-                }\n-            }\n-            if ( candidateHead != -1 )\n-            {\n-                buffer[candidateHead] = null;\n-            }\n-            fetched = true;\n-        }\n-\n-        @Override\n-        public ScoreEntry next()\n-        {\n-            if ( hasNext() )\n-            {\n-                fetched = false;\n-                ScoreEntry best = nextHead;\n-                nextHead = null;\n-                return best;\n-            }\n-            else\n-            {\n-                throw new NoSuchElementException( \"The iterator is exhausted\" );\n-            }\n-        }\n+      return score;\n     }\n \n-    /**\n-     * A ScoreEntry consists of an entity id together with its score.\n-     */\n-    public static class ScoreEntry\n+    ScoreEntry(long entityId, float score)\n     {\n-        private final long entityId;\n-        private final float score;\n-\n-        public long entityId()\n-        {\n-            return entityId;\n-        }\n \n-        public float score()\n-        {\n-            return score;\n-        }\n-\n-        ScoreEntry( long entityId, float score )\n-        {\n-\n-            this.entityId = entityId;\n-            this.score = score;\n-        }\n+      this.entityId = entityId;\n+      this.score = score;\n     }\n+  }\n }\n",
            "diff_size": 233
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "147",
                    "column": "72",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2118/ScoreEntityIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2118/ScoreEntityIterator.java\nindex cac036992b6..a4a92b9a541 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2118/ScoreEntityIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2118/ScoreEntityIterator.java\n@@ -126,7 +126,8 @@ public class ScoreEntityIterator implements Iterator<ScoreEntityIterator.ScoreEn\n             {\n                 fetch();\n             }\n-            return nextHead != null;\n+\n+return nextHead != null;\n         }\n \n         private void fetch()\n@@ -143,7 +144,7 @@ public class ScoreEntityIterator implements Iterator<ScoreEntityIterator.ScoreEn\n                 }\n \n                 //Check if entry might be candidate for next to return.\n-                if ( entry != null && (nextHead == null || entry.score > nextHead.score) )\n+                if ( entry != null && ( nextHead == null || entry.score> nextHead.score) )\n                 {\n                     nextHead = entry;\n                     candidateHead = i;\n@@ -153,7 +154,8 @@ public class ScoreEntityIterator implements Iterator<ScoreEntityIterator.ScoreEn\n             {\n                 buffer[candidateHead] = null;\n             }\n-            fetched = true;\n+\n+fetched = true;\n         }\n \n         @Override\n@@ -193,9 +195,8 @@ public class ScoreEntityIterator implements Iterator<ScoreEntityIterator.ScoreEn\n \n         ScoreEntry( long entityId, float score )\n         {\n-\n-            this.entityId = entityId;\n+    this.entityId = entityId;\n             this.score = score;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
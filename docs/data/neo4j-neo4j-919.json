{
    "project_name": "neo4j-neo4j",
    "error_id": "919",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/919/DetachingRelationshipDeleter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/919/DetachingRelationshipDeleter.java\nindex 21406785003..93c5c616802 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/919/DetachingRelationshipDeleter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/919/DetachingRelationshipDeleter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.set.primitive.MutableLongSet;\n@@ -37,12 +38,12 @@ class DetachingRelationshipDeleter\n {\n     private final LongPredicate relationshipDeleter;\n \n-    DetachingRelationshipDeleter( LongPredicate relationshipDeleter )\n+    DetachingRelationshipDeleter(LongPredicate relationshipDeleter)\n     {\n         this.relationshipDeleter = relationshipDeleter;\n     }\n \n-    int lockNodesAndDeleteRelationships( long nodeId, KernelTransactionImplementation ktx )\n+    int lockNodesAndDeleteRelationships(long nodeId, KernelTransactionImplementation ktx)\n     {\n         Locks.Client locks = ktx.statementLocks().optimistic();\n         LockTracer lockTracer = ktx.lockTracer();\n@@ -60,66 +61,64 @@ class DetachingRelationshipDeleter\n             relIds = new LongHashSet();\n             // Collect the relationships and neighbours of the node.\n             // If this view ends up being inconsistent, then we will do it over.\n-            ktx.dataRead().singleNode( nodeId, nodes );\n-            if ( nodes.next() )\n+            ktx.dataRead().singleNode(nodeId, nodes);\n+            if (nodes.next())\n             {\n-                nodeIds.add( nodes.nodeReference() );\n-                try ( var rels = RelationshipSelections.allCursor( cursors, nodes, null, cursorTracer ) )\n+                nodeIds.add(nodes.nodeReference());\n+                try (var rels = RelationshipSelections.allCursor(cursors, nodes, null, cursorTracer))\n                 {\n-                    while ( rels.next() )\n+                    while (rels.next())\n                     {\n-                        relIds.add( rels.relationshipReference() );\n-                        nodeIds.add( rels.sourceNodeReference() );\n-                        nodeIds.add( rels.targetNodeReference() );\n+                        relIds.add(rels.relationshipReference());\n+                        nodeIds.add(rels.sourceNodeReference());\n+                        nodeIds.add(rels.targetNodeReference());\n                     }\n                 }\n             }\n \n             // Lock all the nodes involved by following the node id ordering.\n-            locks.acquireExclusive( lockTracer, ResourceTypes.NODE, nodeIds.toSortedArray() );\n+            locks.acquireExclusive(lockTracer, ResourceTypes.NODE, nodeIds.toSortedArray());\n \n             // After locking all involved parties, verify that we've collected the right sets.\n-            ktx.dataRead().singleNode( nodeId, nodes );\n-            if ( nodes.next() )\n+            ktx.dataRead().singleNode(nodeId, nodes);\n+            if (nodes.next())\n             {\n                 int verifiedRels = 0;\n-                try ( var rels = RelationshipSelections.allCursor( cursors, nodes, null, cursorTracer ) )\n+                try (var rels = RelationshipSelections.allCursor(cursors, nodes, null, cursorTracer))\n                 {\n-                    while ( rels.next() && !retry )\n+                    while (rels.next() && !retry)\n                     {\n-                        retry = !relIds.contains( rels.relationshipReference() );\n-                        retry |= !nodeIds.contains( rels.sourceNodeReference() );\n-                        retry |= !nodeIds.contains( rels.targetNodeReference() );\n+                        retry = !relIds.contains(rels.relationshipReference());\n+                        retry |= !nodeIds.contains(rels.sourceNodeReference());\n+                        retry |= !nodeIds.contains(rels.targetNodeReference());\n                         verifiedRels++;\n                     }\n                 }\n                 retry |= verifiedRels != relIds.size();\n-                if ( retry )\n+                if (retry)\n                 {\n-                    locks.releaseExclusive( ResourceTypes.NODE, nodeIds.toSortedArray() );\n+                    locks.releaseExclusive(ResourceTypes.NODE, nodeIds.toSortedArray());\n                 }\n-            }\n-            else\n+            } else\n             {\n                 // The node got deleted ahead of us. The job is done, so just return.\n-                locks.releaseExclusive( ResourceTypes.NODE, nodeIds.toSortedArray() );\n+                locks.releaseExclusive(ResourceTypes.NODE, nodeIds.toSortedArray());\n                 return 0;\n             }\n         }\n-        while ( retry );\n+        while (retry);\n \n         // Then finally remove all relationships incident on our node.\n         int relationshipsDeleted = 0;\n-        for ( long relId : relIds.toSortedArray() )\n+        for (long relId : relIds.toSortedArray())\n         {\n-            locks.acquireExclusive( lockTracer, ResourceTypes.RELATIONSHIP, relId );\n-            if ( relationshipDeleter.test( relId ) )\n+            locks.acquireExclusive(lockTracer, ResourceTypes.RELATIONSHIP, relId);\n+            if (relationshipDeleter.test(relId))\n             {\n                 relationshipsDeleted++;\n-            }\n-            else\n+            } else\n             {\n-                locks.releaseExclusive( ResourceTypes.RELATIONSHIP, relId );\n+                locks.releaseExclusive(ResourceTypes.RELATIONSHIP, relId);\n             }\n         }\n         return relationshipsDeleted;\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/919/DetachingRelationshipDeleter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/919/DetachingRelationshipDeleter.java\nindex 21406785003..07ecf32049f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/919/DetachingRelationshipDeleter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/919/DetachingRelationshipDeleter.java\n@@ -124,4 +124,4 @@ class DetachingRelationshipDeleter\n         }\n         return relationshipsDeleted;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
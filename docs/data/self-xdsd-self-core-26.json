{
    "project_name": "self-xdsd-self-core",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "113",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        }\n        Commit commit = null;\n        if(jsonObject != null){\n            LOG.debug(\"Commit found!\");\n            commit = new GithubCommit(\n                commitUri,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/26/GithubCommits.java\nindex 22918056272..6877ee56fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/26/GithubCommits.java\n@@ -110,7 +110,7 @@ final class GithubCommits implements Commits {\n                 );\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(\"Commit found!\");\n             commit = new GithubCommit(\n                 commitUri,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/26/GithubCommits.java\nindex 22918056272..25c183b0fb4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/26/GithubCommits.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core;\n \n import java.net.HttpURLConnection;\n@@ -34,6 +35,7 @@ import com.selfxdsd.api.storage.Storage;\n \n /**\n  * Commits in a github Repo.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.31\n@@ -65,9 +67,9 @@ final class GithubCommits implements Commits {\n     /**\n      * Ctor.\n      *\n-     * @param resources Github's JSON Resources.\n+     * @param resources  Github's JSON Resources.\n      * @param commitsUri Commits base URI.\n-     * @param storage Storage.\n+     * @param storage    Storage.\n      */\n     GithubCommits(\n         final JsonResources resources,\n@@ -83,7 +85,7 @@ final class GithubCommits implements Commits {\n     public Commit getCommit(final String ref) {\n         LOG.debug(\n             \"Getting commit [\" + ref + \"] from [\"\n-            + this.commitsUri + \"...\"\n+                + this.commitsUri + \"...\"\n         );\n         final URI commitUri = URI.create(\n             this.commitsUri.toString() + \"/\" + ref\n@@ -102,15 +104,15 @@ final class GithubCommits implements Commits {\n             default:\n                 LOG.error(\n                     \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n+                        + \"Received status code: \" + resource.statusCode() + \".\"\n                 );\n                 throw new IllegalStateException(\n                     \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n+                        + \"Received status code: \" + resource.statusCode() + \".\"\n                 );\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             LOG.debug(\"Commit found!\");\n             commit = new GithubCommit(\n                 commitUri,\n@@ -141,8 +143,8 @@ final class GithubCommits implements Commits {\n         } else {\n             throw new IllegalStateException(\n                 \"List of Repo Commits returned \" + resource.statusCode()\n-                + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n-                + \"].\"\n+                    + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n+                    + \"].\"\n             );\n         }\n         return latest;\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/26/GithubCommits.java\nindex 22918056272..f117a681d85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/26/GithubCommits.java\n@@ -110,7 +110,7 @@ final class GithubCommits implements Commits {\n                 );\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             LOG.debug(\"Commit found!\");\n             commit = new GithubCommit(\n                 commitUri,\n@@ -154,4 +154,4 @@ final class GithubCommits implements Commits {\n             \"You cannot iterate over all the Commits in a Repo.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 38, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/26/GithubCommits.java\nindex 22918056272..78022e907d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/26/GithubCommits.java\n@@ -38,28 +38,36 @@ import com.selfxdsd.api.storage.Storage;\n  * @version $Id$\n  * @since 0.0.31\n  */\n+\n+\n final class GithubCommits implements Commits {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        GithubCommits.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GithubCommits.class);\n \n     /**\n      * Github repo Commits base uri.\n      */\n+\n+\n     private final URI commitsUri;\n \n     /**\n      * Github's JSON Resources.\n      */\n+\n+\n     private final JsonResources resources;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -69,6 +77,8 @@ final class GithubCommits implements Commits {\n      * @param commitsUri Commits base URI.\n      * @param storage Storage.\n      */\n+\n+\n     GithubCommits(\n         final JsonResources resources,\n         final URI commitsUri,\n@@ -81,45 +91,37 @@ final class GithubCommits implements Commits {\n \n     @Override\n     public Commit getCommit(final String ref) {\n-        LOG.debug(\n-            \"Getting commit [\" + ref + \"] from [\"\n-            + this.commitsUri + \"...\"\n-        );\n-        final URI commitUri = URI.create(\n-            this.commitsUri.toString() + \"/\" + ref\n-        );\n+        LOG.debug(\"Getting commit [\"\n+                      + ref + \"] from [\"\n+                      + this.commitsUri + \"...\");\n+        final URI commitUri = URI.create(this.commitsUri.toString() + \"/\"\n++ ref);\n         final Resource resource = this.resources.get(commitUri);\n         JsonObject jsonObject;\n-        switch (resource.statusCode()) {\n-            case HttpURLConnection.HTTP_OK:\n-                jsonObject = resource.asJsonObject();\n-                break;\n-            case HttpURLConnection.HTTP_NOT_FOUND:\n-            case HttpURLConnection.HTTP_NO_CONTENT:\n-            case 422:\n-                jsonObject = null;\n-                break;\n-            default:\n-                LOG.error(\n-                    \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n-                );\n-                throw new IllegalStateException(\n-                    \"Could not get the commit \" + ref + \". \"\n-                    + \"Received status code: \" + resource.statusCode() + \".\"\n-                );\n+        switch(resource.statusCode()) {\n+                                      case HttpURLConnection.HTTP_OK:\n+                                      jsonObject = resource.asJsonObject();\n+                                      break;\n+                                      case HttpURLConnection.HTTP_NOT_FOUND: case HttpURLConnection.HTTP_NO_CONTENT: case 422:\n+            jsonObject = null;\n+            break;\n+                                      default:\n+            LOG.error(\"Could not get the commit \"\n+                      + ref + \". \"\n++ \"Received status code: \"\n+                          + resource.statusCode() + \".\");\n+            throw new IllegalStateException(\"Could not get the commit \"\n+                                            + ref + \". \"\n++ \"Received status code: \"\n+                                                + resource.statusCode() + \".\");\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             LOG.debug(\"Commit found!\");\n-            commit = new GithubCommit(\n-                commitUri,\n-                jsonObject,\n-                this.storage,\n-                this.resources\n-            );\n+            commit = new GithubCommit(commitUri, jsonObject, this.storage, this.resources);\n         } else {\n-            LOG.debug(\"Commit [\" + ref + \"] not found, returning null.\");\n+            LOG.debug(\"Commit [\"\n+                          + ref + \"] not found, returning null.\");\n         }\n         return commit;\n     }\n@@ -131,27 +133,22 @@ final class GithubCommits implements Commits {\n         if (resource.statusCode() == HttpURLConnection.HTTP_OK) {\n             final JsonObject json = resource.asJsonArray().getJsonObject(0);\n             latest = new GithubCommit(\n-                URI.create(\n-                    this.commitsUri.toString() + \"/\" + json.getString(\"sha\")\n-                ),\n+                URI.create(this.commitsUri.toString() + \"/\"\n++ json.getString(\"sha\")),\n                 json,\n                 this.storage,\n                 this.resources\n             );\n         } else {\n-            throw new IllegalStateException(\n-                \"List of Repo Commits returned \" + resource.statusCode()\n-                + \", expected 200 OK. URI is [\" + this.commitsUri.toString()\n-                + \"].\"\n-            );\n+            throw new IllegalStateException(\"List of Repo Commits returned \"\n+                                                + resource.statusCode() + \", expected 200 OK. URI is [\"\n+                                                + this.commitsUri.toString() + \"].\");\n         }\n         return latest;\n     }\n \n     @Override\n     public Iterator<Commit> iterator() {\n-        throw new UnsupportedOperationException(\n-            \"You cannot iterate over all the Commits in a Repo.\"\n-        );\n+        throw new UnsupportedOperationException(\"You cannot iterate over all the Commits in a Repo.\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/26/GithubCommits.java\nindex 22918056272..6877ee56fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/26/GithubCommits.java\n@@ -110,7 +110,7 @@ final class GithubCommits implements Commits {\n                 );\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(\"Commit found!\");\n             commit = new GithubCommit(\n                 commitUri,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/26/GithubCommits.java\nindex 22918056272..6877ee56fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/26/GithubCommits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/26/GithubCommits.java\n@@ -110,7 +110,7 @@ final class GithubCommits implements Commits {\n                 );\n         }\n         Commit commit = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             LOG.debug(\"Commit found!\");\n             commit = new GithubCommit(\n                 commitUri,\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1437",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1437/StreamingBatchOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1437/StreamingBatchOperations.java\nindex dedf1d1a554..624c353d9ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1437/StreamingBatchOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1437/StreamingBatchOperations.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import org.eclipse.jetty.util.log.Log;\n@@ -44,80 +45,78 @@ import org.neo4j.server.web.WebServer;\n public class StreamingBatchOperations extends BatchOperations\n {\n \n-    private static final Logger LOGGER = Log.getLogger( StreamingBatchOperations.class );\n-    private StreamingBatchOperationResults results;\n+  private static final Logger LOGGER = Log.getLogger(StreamingBatchOperations.class);\n+  private StreamingBatchOperationResults results;\n+\n+  public StreamingBatchOperations(WebServer webServer)\n+  {\n+    super(webServer);\n+  }\n \n-    public StreamingBatchOperations( WebServer webServer )\n+  public void readAndExecuteOperations(UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n+                                       InputStream body, ServletOutputStream output) throws IOException, ServletException\n+  {\n+    results = new StreamingBatchOperationResults(jsonFactory.createJsonGenerator(output), output);\n+    Map<Integer, String> locations = results.getLocations();\n+    parseAndPerform(uriInfo, httpHeaders, req, body, locations);\n+    results.close();\n+  }\n+\n+  @Override\n+  protected void invoke(String method, String path, String body, Integer id, URI targetUri,\n+                        InternalJettyServletRequest req, InternalJettyServletResponse res) throws IOException\n+  {\n+    results.startOperation(path, id);\n+    try\n     {\n-        super( webServer );\n-    }\n+      res = new BatchInternalJettyServletResponse(results.getServletOutputStream());\n+      webServer.invokeDirectly(targetUri.getPath(), req, res);\n+    } catch (Exception e)\n+    {\n+      LOGGER.warn(e);\n+      results.writeError(500, e.getMessage());\n+      throw new BatchOperationFailedException(500, e.getMessage(), e);\n \n-    public void readAndExecuteOperations( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n-            InputStream body, ServletOutputStream output ) throws IOException, ServletException\n+    }\n+    final int status = res.getStatus();\n+    if (is2XXStatusCode(status))\n     {\n-        results = new StreamingBatchOperationResults( jsonFactory.createJsonGenerator( output ), output );\n-        Map<Integer,String> locations = results.getLocations();\n-        parseAndPerform( uriInfo, httpHeaders, req, body, locations );\n-        results.close();\n+      results.addOperationResult(status, id, res.getHeader(\"Location\"));\n+    } else\n+    {\n+      final String message = \"Error \" + status + \" executing batch operation: \" +\n+          ((id != null) ? id + \". \" : \"\") + method + \" \" + path + \" \" + body;\n+      results.writeError(status, res.getReason());\n+      throw new BatchOperationFailedException(status, message, new Exception(res.getReason()));\n     }\n+  }\n \n-    @Override\n-    protected void invoke( String method, String path, String body, Integer id, URI targetUri,\n-            InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException\n-    {\n-        results.startOperation( path, id );\n-        try\n-        {\n-            res = new BatchInternalJettyServletResponse( results.getServletOutputStream() );\n-            webServer.invokeDirectly( targetUri.getPath(), req, res );\n-        }\n-        catch ( Exception e )\n-        {\n-            LOGGER.warn( e );\n-            results.writeError( 500, e.getMessage() );\n-            throw new BatchOperationFailedException( 500, e.getMessage(), e );\n+  @Override\n+  protected void addHeaders(final InternalJettyServletRequest res, final HttpHeaders httpHeaders)\n+  {\n+    super.addHeaders(res, httpHeaders);\n+    res.addHeader(StreamingJsonFormat.STREAM_HEADER, \"true\");\n+  }\n+\n+  private static class BatchInternalJettyServletResponse extends InternalJettyServletResponse\n+  {\n+    private final ServletOutputStream output;\n \n-        }\n-        final int status = res.getStatus();\n-        if ( is2XXStatusCode( status ) )\n-        {\n-            results.addOperationResult( status, id, res.getHeader( \"Location\" ) );\n-        }\n-        else\n-        {\n-            final String message = \"Error \" + status + \" executing batch operation: \" +\n-                    ((id != null) ? id + \". \" : \"\") + method + \" \" + path + \" \" + body;\n-            results.writeError( status, res.getReason() );\n-            throw new BatchOperationFailedException( status, message, new Exception( res.getReason() ) );\n-        }\n+    BatchInternalJettyServletResponse(ServletOutputStream output)\n+    {\n+      this.output = output;\n     }\n \n     @Override\n-    protected void addHeaders( final InternalJettyServletRequest res, final HttpHeaders httpHeaders )\n+    public ServletOutputStream getOutputStream()\n     {\n-        super.addHeaders( res, httpHeaders );\n-        res.addHeader( StreamingJsonFormat.STREAM_HEADER, \"true\" );\n+      return output;\n     }\n \n-    private static class BatchInternalJettyServletResponse extends InternalJettyServletResponse\n+    @Override\n+    public PrintWriter getWriter()\n     {\n-        private final ServletOutputStream output;\n-\n-        BatchInternalJettyServletResponse( ServletOutputStream output )\n-        {\n-            this.output = output;\n-        }\n-\n-        @Override\n-        public ServletOutputStream getOutputStream()\n-        {\n-            return output;\n-        }\n-\n-        @Override\n-        public PrintWriter getWriter()\n-        {\n-            return new PrintWriter( new OutputStreamWriter( output, StandardCharsets.UTF_8 ) );\n-        }\n+      return new PrintWriter(new OutputStreamWriter(output, StandardCharsets.UTF_8));\n     }\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1437/StreamingBatchOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1437/StreamingBatchOperations.java\nindex dedf1d1a554..d9c28b67d51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1437/StreamingBatchOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1437/StreamingBatchOperations.java\n@@ -43,7 +43,6 @@ import org.neo4j.server.web.WebServer;\n \n public class StreamingBatchOperations extends BatchOperations\n {\n-\n     private static final Logger LOGGER = Log.getLogger( StreamingBatchOperations.class );\n     private StreamingBatchOperationResults results;\n \n@@ -54,7 +53,7 @@ public class StreamingBatchOperations extends BatchOperations\n \n     public void readAndExecuteOperations( UriInfo uriInfo, HttpHeaders httpHeaders, HttpServletRequest req,\n             InputStream body, ServletOutputStream output ) throws IOException, ServletException\n-    {\n+{\n         results = new StreamingBatchOperationResults( jsonFactory.createJsonGenerator( output ), output );\n         Map<Integer,String> locations = results.getLocations();\n         parseAndPerform( uriInfo, httpHeaders, req, body, locations );\n@@ -64,7 +63,7 @@ public class StreamingBatchOperations extends BatchOperations\n     @Override\n     protected void invoke( String method, String path, String body, Integer id, URI targetUri,\n             InternalJettyServletRequest req, InternalJettyServletResponse res ) throws IOException\n-    {\n+{\n         results.startOperation( path, id );\n         try\n         {\n@@ -76,8 +75,7 @@ public class StreamingBatchOperations extends BatchOperations\n             LOGGER.warn( e );\n             results.writeError( 500, e.getMessage() );\n             throw new BatchOperationFailedException( 500, e.getMessage(), e );\n-\n-        }\n+    }\n         final int status = res.getStatus();\n         if ( is2XXStatusCode( status ) )\n         {\n@@ -85,9 +83,8 @@ public class StreamingBatchOperations extends BatchOperations\n         }\n         else\n         {\n-            final String message = \"Error \" + status + \" executing batch operation: \" +\n-                    ((id != null) ? id + \". \" : \"\") + method + \" \" + path + \" \" + body;\n-            results.writeError( status, res.getReason() );\n+            final String message = \"Error \" + status + \" executing batch operation: \" + ((id != null ) ? id + \". \" : \"\") + method + \" \" + path + \" \" + body;\n+results.writeError( status, res.getReason() );\n             throw new BatchOperationFailedException( status, message, new Exception( res.getReason() ) );\n         }\n     }\n@@ -120,4 +117,4 @@ public class StreamingBatchOperations extends BatchOperations\n             return new PrintWriter( new OutputStreamWriter( output, StandardCharsets.UTF_8 ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
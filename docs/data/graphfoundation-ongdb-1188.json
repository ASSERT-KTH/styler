{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1188",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1188/TokenHolder.java\nindex 14f3b0339af..9edede4dcc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1188/TokenHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.List;\n@@ -25,22 +26,24 @@ import org.neo4j.storageengine.api.Token;\n \n public interface TokenHolder<TOKEN extends Token>\n {\n-    int NO_ID = -1;\n+  int NO_ID = -1;\n \n-    void setInitialTokens( List<TOKEN> tokens ) throws NonUniqueTokenException;\n+  void setInitialTokens(List<TOKEN> tokens) throws NonUniqueTokenException;\n \n-    void addToken( TOKEN token ) throws NonUniqueTokenException;\n+  void addToken(TOKEN token) throws NonUniqueTokenException;\n \n-    int getOrCreateId( String name );\n+  int getOrCreateId(String name);\n \n-    TOKEN getTokenById( int id ) throws TokenNotFoundException;\n+  TOKEN getTokenById(int id) throws TokenNotFoundException;\n \n-    TOKEN getTokenByIdOrNull( int id );\n+  TOKEN getTokenByIdOrNull(int id);\n \n-    /** Returns the id, or {@link #NO_ID} if no token with this name exists. */\n-    int getIdByName( String name );\n+  /**\n+   * Returns the id, or {@link #NO_ID} if no token with this name exists.\n+   */\n+  int getIdByName(String name);\n \n-    Iterable<TOKEN> getAllTokens();\n+  Iterable<TOKEN> getAllTokens();\n \n-    int size();\n+  int size();\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1188/TokenHolder.java\nindex 14f3b0339af..e497423b3e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1188/TokenHolder.java\n@@ -32,8 +32,7 @@ public interface TokenHolder<TOKEN extends Token>\n     void addToken( TOKEN token ) throws NonUniqueTokenException;\n \n     int getOrCreateId( String name );\n-\n-    TOKEN getTokenById( int id ) throws TokenNotFoundException;\n+TOKEN getTokenById( int id ) throws TokenNotFoundException;\n \n     TOKEN getTokenByIdOrNull( int id );\n \n@@ -43,4 +42,4 @@ public interface TokenHolder<TOKEN extends Token>\n     Iterable<TOKEN> getAllTokens();\n \n     int size();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "66",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "38",
                    "column": "7",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1188/TokenHolder.java\nindex 14f3b0339af..441a8f59ae9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1188/TokenHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1188/TokenHolder.java\n@@ -20,27 +20,21 @@\n package org.neo4j.kernel.impl.core;\n \n import java.util.List;\n-\n import org.neo4j.storageengine.api.Token;\n \n public interface TokenHolder<TOKEN extends Token>\n {\n-    int NO_ID = -1;\n-\n-    void setInitialTokens( List<TOKEN> tokens ) throws NonUniqueTokenException;\n-\n-    void addToken( TOKEN token ) throws NonUniqueTokenException;\n-\n-    int getOrCreateId( String name );\n-\n-    TOKEN getTokenById( int id ) throws TokenNotFoundException;\n-\n-    TOKEN getTokenByIdOrNull( int id );\n+    int NO_ID = - 1;\n+    void setInitialTokens( List<TOKEN> tokens ) throws NonUniqueTokenException ;\n+    void addToken( TOKEN token ) throws NonUniqueTokenException ;\n+    int getOrCreateId( String name )\n+    ; TOKEN getTokenById( int id ) throws TokenNotFoundException ;\n+    TOKEN getTokenByIdOrNull( int id )\n+    ;\n \n     /** Returns the id, or {@link #NO_ID} if no token with this name exists. */\n-    int getIdByName( String name );\n-\n-    Iterable<TOKEN> getAllTokens();\n-\n-    int size();\n-}\n+    int getIdByName( String name )\n+    ; Iterable<TOKEN> getAllTokens()\n+      ;\n+    int size()\n+    ; }\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3945",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3945/JshExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3945/JshExecutor.java\nindex 35712a528c0..45aff5d34e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3945/JshExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3945/JshExecutor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.apps.extra;\n \n import java.io.File;\n@@ -33,199 +34,197 @@ import org.neo4j.shell.ShellException;\n  */\n public class JshExecutor extends ScriptExecutor\n {\n-    static\n+  static\n+  {\n+    String jythonSystemVariableName = \"python.home\";\n+    if (System.getProperty(jythonSystemVariableName) == null)\n     {\n-        String jythonSystemVariableName = \"python.home\";\n-        if ( System.getProperty( jythonSystemVariableName ) == null )\n-        {\n-            String variable = tryFindEnvironmentVariable( \"JYTHON_HOME\",\n-                \"JYTHONHOME\", \"JYTHON\", \"PYTHON_HOME\", \"PYTHONHOME\", \"PYTHON\" );\n-            variable = variable == null ? \"/usr/local/jython\" : variable;\n-            System.setProperty( jythonSystemVariableName, variable );\n-        }\n+      String variable = tryFindEnvironmentVariable(\"JYTHON_HOME\",\n+          \"JYTHONHOME\", \"JYTHON\", \"PYTHON_HOME\", \"PYTHONHOME\", \"PYTHON\");\n+      variable = variable == null ? \"/usr/local/jython\" : variable;\n+      System.setProperty(jythonSystemVariableName, variable);\n     }\n+  }\n \n-    private static String tryFindEnvironmentVariable( String... examples )\n+  private static String tryFindEnvironmentVariable(String... examples)\n+  {\n+    Map<String, String> env = System.getenv();\n+    for (String example : examples)\n     {\n-        Map<String, String> env = System.getenv();\n-        for ( String example : examples )\n+      for (String envKey : env.keySet())\n+      {\n+        if (envKey.contains(example))\n         {\n-            for ( String envKey : env.keySet() )\n-            {\n-                if ( envKey.contains( example ) )\n-                {\n-                    return env.get( envKey );\n-                }\n-            }\n+          return env.get(envKey);\n         }\n-        return null;\n+      }\n+    }\n+    return null;\n+  }\n+\n+  /**\n+   * The class name which represents the PythonInterpreter class.\n+   */\n+  private static final String INTERPRETER_CLASS =\n+      \"org.python.util.PythonInterpreter\";\n+\n+  @Override\n+  protected void ensureDependenciesAreInClasspath() throws ShellException\n+  {\n+    try\n+    {\n+      Class.forName(INTERPRETER_CLASS);\n+    } catch (ClassNotFoundException e)\n+    {\n+      throw new ShellException(\"Jython not found in the classpath\");\n+    }\n+  }\n+\n+  @Override\n+  protected String getPathKey()\n+  {\n+    return \"JSH_PATH\";\n+  }\n+\n+  @Override\n+  protected Object newInterpreter(String[] paths) throws ShellException\n+  {\n+    try\n+    {\n+      return Class.forName(INTERPRETER_CLASS).newInstance();\n+    } catch (Exception e)\n+    {\n+      throw new ShellException(\"Invalid jython classes\");\n+    }\n+  }\n+\n+  @Override\n+  protected void runScript(Object interpreter, String scriptName,\n+                           Map<String, Object> properties, String[] paths) throws Exception\n+  {\n+    File scriptFile = findScriptFile(scriptName, paths);\n+    Output out = (Output) properties.remove(\"out\");\n+    interpreter.getClass().getMethod(\"setOut\", Writer.class).invoke(\n+        interpreter, new OutputWriter(out));\n+    Method setMethod = interpreter.getClass().getMethod(\"set\",\n+        String.class, Object.class);\n+    for (String key : properties.keySet())\n+    {\n+      setMethod.invoke(interpreter, key, properties.get(key));\n     }\n+    interpreter.getClass().getMethod(\"execfile\", String.class)\n+        .invoke(interpreter, scriptFile.getAbsolutePath());\n+  }\n+\n+  private File findScriptFile(String scriptName, String[] paths)\n+      throws ShellException\n+  {\n+    for (String path : paths)\n+    {\n+      File result = findScriptFile(scriptName, path);\n+      if (result != null)\n+      {\n+        return result;\n+      }\n+    }\n+    throw new ShellException(\"No script '\" + scriptName + \"' found\");\n+  }\n \n-    /**\n-     * The class name which represents the PythonInterpreter class.\n-     */\n-    private static final String INTERPRETER_CLASS =\n-        \"org.python.util.PythonInterpreter\";\n+  private File findScriptFile(String scriptName, String path)\n+  {\n+    File pathFile = new File(path);\n+    if (!pathFile.exists())\n+    {\n+      return null;\n+    }\n \n-    @Override\n-    protected void ensureDependenciesAreInClasspath() throws ShellException\n+    for (File file : pathFile.listFiles())\n     {\n-        try\n-        {\n-            Class.forName( INTERPRETER_CLASS );\n-        }\n-        catch ( ClassNotFoundException e )\n-        {\n-            throw new ShellException( \"Jython not found in the classpath\" );\n-        }\n+      String name = file.getName();\n+      int dotIndex = name.lastIndexOf('.');\n+      name = dotIndex == -1 ? name : name.substring(0, dotIndex);\n+      String extension = dotIndex == -1 ? null :\n+          file.getName().substring(dotIndex + 1);\n+      if (scriptName.equals(name) && (extension == null ||\n+          extension.toLowerCase().equals(\"py\")))\n+      {\n+        return file;\n+      }\n     }\n+    return null;\n+  }\n \n-    @Override\n-    protected String getPathKey()\n+  private static class OutputWriter extends Writer\n+  {\n+    private Output out;\n+\n+    OutputWriter(Output out)\n     {\n-        return \"JSH_PATH\";\n+      this.out = out;\n     }\n \n     @Override\n-    protected Object newInterpreter( String[] paths ) throws ShellException\n+    public Writer append(char c) throws IOException\n     {\n-        try\n-        {\n-            return Class.forName( INTERPRETER_CLASS ).newInstance();\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellException( \"Invalid jython classes\" );\n-        }\n+      out.append(c);\n+      return this;\n     }\n \n     @Override\n-    protected void runScript( Object interpreter, String scriptName,\n-        Map<String, Object> properties, String[] paths ) throws Exception\n-    {\n-        File scriptFile = findScriptFile( scriptName, paths );\n-        Output out = (Output) properties.remove( \"out\" );\n-        interpreter.getClass().getMethod( \"setOut\", Writer.class ).invoke(\n-            interpreter, new OutputWriter( out ) );\n-        Method setMethod = interpreter.getClass().getMethod( \"set\",\n-            String.class, Object.class );\n-        for ( String key : properties.keySet() )\n-        {\n-            setMethod.invoke( interpreter, key, properties.get( key ) );\n-        }\n-        interpreter.getClass().getMethod( \"execfile\", String.class )\n-            .invoke( interpreter, scriptFile.getAbsolutePath() );\n+    public Writer append(CharSequence csq, int start, int end)\n+        throws IOException\n+    {\n+      out.append(csq, start, end);\n+      return this;\n     }\n \n-    private File findScriptFile( String scriptName, String[] paths )\n-        throws ShellException\n+    @Override\n+    public Writer append(CharSequence csq) throws IOException\n     {\n-        for ( String path : paths )\n-        {\n-            File result = findScriptFile( scriptName, path );\n-            if ( result != null )\n-            {\n-                return result;\n-            }\n-        }\n-        throw new ShellException( \"No script '\" + scriptName + \"' found\" );\n+      out.append(csq);\n+      return this;\n     }\n \n-    private File findScriptFile( String scriptName, String path )\n+    @Override\n+    public void close()\n     {\n-        File pathFile = new File( path );\n-        if ( !pathFile.exists() )\n-        {\n-            return null;\n-        }\n-\n-        for ( File file : pathFile.listFiles() )\n-        {\n-            String name = file.getName();\n-            int dotIndex = name.lastIndexOf( '.' );\n-            name = dotIndex == -1 ? name : name.substring( 0, dotIndex );\n-            String extension = dotIndex == -1 ? null :\n-                file.getName().substring( dotIndex + 1 );\n-            if ( scriptName.equals( name ) && ( extension == null ||\n-                extension.toLowerCase().equals( \"py\" ) ) )\n-            {\n-                return file;\n-            }\n-        }\n-        return null;\n     }\n \n-    private static class OutputWriter extends Writer\n+    @Override\n+    public void flush()\n     {\n-        private Output out;\n-\n-        OutputWriter( Output out )\n-        {\n-            this.out = out;\n-        }\n-\n-        @Override\n-        public Writer append( char c ) throws IOException\n-        {\n-            out.append( c );\n-            return this;\n-        }\n-\n-        @Override\n-        public Writer append( CharSequence csq, int start, int end )\n-            throws IOException\n-        {\n-            out.append( csq, start, end );\n-            return this;\n-        }\n-\n-        @Override\n-        public Writer append( CharSequence csq ) throws IOException\n-        {\n-            out.append( csq );\n-            return this;\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-        }\n-\n-        @Override\n-        public void flush()\n-        {\n-        }\n+    }\n \n-        @Override\n-        public void write( char[] cbuf, int off, int len ) throws IOException\n-        {\n-            out.print( new String( cbuf, off, len ) );\n-        }\n+    @Override\n+    public void write(char[] cbuf, int off, int len) throws IOException\n+    {\n+      out.print(new String(cbuf, off, len));\n+    }\n \n-        @Override\n-        public void write( char[] cbuf ) throws IOException\n-        {\n-            out.print( new String( cbuf ) );\n-        }\n+    @Override\n+    public void write(char[] cbuf) throws IOException\n+    {\n+      out.print(new String(cbuf));\n+    }\n \n-        @Override\n-        public void write( int c ) throws IOException\n-        {\n-            out.print( String.valueOf( c ) );\n-        }\n+    @Override\n+    public void write(int c) throws IOException\n+    {\n+      out.print(String.valueOf(c));\n+    }\n \n-        @Override\n-        public void write( String str, int off, int len ) throws IOException\n-        {\n-            char[] cbuf = new char[ len ];\n-            str.getChars( off, off + len, cbuf, 0 );\n-            write( cbuf, off, len );\n-        }\n+    @Override\n+    public void write(String str, int off, int len) throws IOException\n+    {\n+      char[] cbuf = new char[len];\n+      str.getChars(off, off + len, cbuf, 0);\n+      write(cbuf, off, len);\n+    }\n \n-        @Override\n-        public void write( String str ) throws IOException\n-        {\n-            out.print( str );\n-        }\n+    @Override\n+    public void write(String str) throws IOException\n+    {\n+      out.print(str);\n     }\n+  }\n }\n",
            "diff_size": 251
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3945/JshExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3945/JshExecutor.java\nindex 35712a528c0..82f30e50dc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3945/JshExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3945/JshExecutor.java\n@@ -38,8 +38,7 @@ public class JshExecutor extends ScriptExecutor\n         String jythonSystemVariableName = \"python.home\";\n         if ( System.getProperty( jythonSystemVariableName ) == null )\n         {\n-            String variable = tryFindEnvironmentVariable( \"JYTHON_HOME\",\n-                \"JYTHONHOME\", \"JYTHON\", \"PYTHON_HOME\", \"PYTHONHOME\", \"PYTHON\" );\n+            String variable = tryFindEnvironmentVariable( \"JYTHON_HOME\", \"JYTHONHOME\", \"JYTHON\", \"PYTHON_HOME\", \"PYTHONHOME\", \"PYTHON\" );\n             variable = variable == null ? \"/usr/local/jython\" : variable;\n             System.setProperty( jythonSystemVariableName, variable );\n         }\n@@ -47,7 +46,7 @@ public class JshExecutor extends ScriptExecutor\n \n     private static String tryFindEnvironmentVariable( String... examples )\n     {\n-        Map<String, String> env = System.getenv();\n+        Map<String,String> env = System.getenv();\n         for ( String example : examples )\n         {\n             for ( String envKey : env.keySet() )\n@@ -64,10 +63,9 @@ public class JshExecutor extends ScriptExecutor\n     /**\n      * The class name which represents the PythonInterpreter class.\n      */\n-    private static final String INTERPRETER_CLASS =\n-        \"org.python.util.PythonInterpreter\";\n+    private static final String INTERPRETER_CLASS = \"org.python.util.PythonInterpreter\";\n \n-    @Override\n+@Override\n     protected void ensureDependenciesAreInClasspath() throws ShellException\n     {\n         try\n@@ -100,26 +98,21 @@ public class JshExecutor extends ScriptExecutor\n     }\n \n     @Override\n-    protected void runScript( Object interpreter, String scriptName,\n-        Map<String, Object> properties, String[] paths ) throws Exception\n-    {\n+    protected void runScript( Object interpreter, String scriptName, Map<String,Object> properties, String[] paths ) throws Exception\n+{\n         File scriptFile = findScriptFile( scriptName, paths );\n         Output out = (Output) properties.remove( \"out\" );\n-        interpreter.getClass().getMethod( \"setOut\", Writer.class ).invoke(\n-            interpreter, new OutputWriter( out ) );\n-        Method setMethod = interpreter.getClass().getMethod( \"set\",\n-            String.class, Object.class );\n-        for ( String key : properties.keySet() )\n+        interpreter.getClass().getMethod( \"setOut\", Writer.class ).invoke( interpreter, new OutputWriter( out ) );\n+Method setMethod = interpreter.getClass().getMethod( \"set\", String.class, Object.class );\n+for ( String key : properties.keySet() )\n         {\n             setMethod.invoke( interpreter, key, properties.get( key ) );\n         }\n-        interpreter.getClass().getMethod( \"execfile\", String.class )\n-            .invoke( interpreter, scriptFile.getAbsolutePath() );\n+        interpreter.getClass().getMethod( \"execfile\", String.class ).invoke( interpreter, scriptFile.getAbsolutePath() );\n     }\n \n-    private File findScriptFile( String scriptName, String[] paths )\n-        throws ShellException\n-    {\n+    private File findScriptFile( String scriptName, String[] paths ) throws ShellException\n+{\n         for ( String path : paths )\n         {\n             File result = findScriptFile( scriptName, path );\n@@ -146,9 +139,9 @@ public class JshExecutor extends ScriptExecutor\n             name = dotIndex == -1 ? name : name.substring( 0, dotIndex );\n             String extension = dotIndex == -1 ? null :\n                 file.getName().substring( dotIndex + 1 );\n-            if ( scriptName.equals( name ) && ( extension == null ||\n+if ( scriptName.equals( name ) && ( extension == null ||\n                 extension.toLowerCase().equals( \"py\" ) ) )\n-            {\n+{\n                 return file;\n             }\n         }\n@@ -172,9 +165,8 @@ public class JshExecutor extends ScriptExecutor\n         }\n \n         @Override\n-        public Writer append( CharSequence csq, int start, int end )\n-            throws IOException\n-        {\n+        public Writer append( CharSequence csq, int start, int end ) throws IOException\n+{\n             out.append( csq, start, end );\n             return this;\n         }\n@@ -228,4 +220,4 @@ public class JshExecutor extends ScriptExecutor\n             out.print( str );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
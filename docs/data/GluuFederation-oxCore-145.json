{
    "project_name": "GluuFederation-oxCore",
    "error_id": "145",
    "information": {
        "errors": [
            {
                "line": "137",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    private static CustomAttribute getUpdatedAttribute(LdapEntryManager ldapEntryManager, String baseDn, String attributeName, String attributeValue) {\n        try {\n            Calendar calendar = Calendar.getInstance();\n            Date oxLastAccessTimeDate = StaticUtils.decodeGeneralizedTime(attributeValue);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/145/LdapSampleBatchJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/145/LdapSampleBatchJob.java\nindex a7b56c91b77..808dcb90064 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/145/LdapSampleBatchJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/145/LdapSampleBatchJob.java\n@@ -36,7 +36,8 @@ public final class LdapSampleBatchJob {\n         LOG = Logger.getLogger(LdapSample.class);\n     }\n \n-    private LdapSampleBatchJob() { }\n+    private LdapSampleBatchJob() {\n+    }\n \n     public static void main(String[] args) {\n         // Prepare sample connection details\n@@ -53,7 +54,7 @@ public final class LdapSampleBatchJob {\n                 for (SimpleTokenLdap simpleTokenLdap : objects) {\n                     try {\n                         CustomAttribute customAttribute = getUpdatedAttribute(ldapEntryManager, simpleTokenLdap.getDn(), \"oxAuthExpiration\",\n-                                simpleTokenLdap.getAttribute(\"oxAuthExpiration\"));\n+                            simpleTokenLdap.getAttribute(\"oxAuthExpiration\"));\n                         simpleTokenLdap.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         ldapEntryManager.merge(simpleTokenLdap);\n                         processedCount++;\n@@ -68,7 +69,7 @@ public final class LdapSampleBatchJob {\n \n         final Filter filter1 = Filter.createPresenceFilter(\"oxAuthExpiration\");\n         ldapEntryManager.findEntries(\"o=gluu\", SimpleTokenLdap.class, filter1, SearchScope.SUB, new String[] {\"oxAuthExpiration\"},\n-                tokenLdapBatchOperation, 0, 0, 100);\n+            tokenLdapBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleSession> sessionBatchOperation = new ProcessBatchOperation<SimpleSession>() {\n             private int processedCount = 0;\n@@ -78,7 +79,7 @@ public final class LdapSampleBatchJob {\n                 for (SimpleSession simpleSession : objects) {\n                     try {\n                         CustomAttribute customAttribute = getUpdatedAttribute(ldapEntryManager, simpleSession.getDn(), \"oxLastAccessTime\",\n-                                simpleSession.getAttribute(\"oxLastAccessTime\"));\n+                            simpleSession.getAttribute(\"oxLastAccessTime\"));\n                         simpleSession.setCustomAttributes(Arrays.asList(new CustomAttribute[] {customAttribute}));\n                         ldapEntryManager.merge(simpleSession);\n                         processedCount++;\n@@ -93,7 +94,7 @@ public final class LdapSampleBatchJob {\n \n         final Filter filter2 = Filter.createPresenceFilter(\"oxLastAccessTime\");\n         ldapEntryManager.findEntries(\"o=gluu\", SimpleSession.class, filter2, SearchScope.SUB, new String[] {\"oxLastAccessTime\"},\n-                sessionBatchOperation, 0, 0, 100);\n+            sessionBatchOperation, 0, 0, 100);\n \n         BatchOperation<SimpleClient> clientBatchOperation = new ProcessBatchOperation<SimpleClient>() {\n             private int processedCount = 0;\n@@ -110,7 +111,7 @@ public final class LdapSampleBatchJob {\n \n         final Filter filter3 = Filter.createPresenceFilter(\"oxAuthExpiration\");\n         List<SimpleClient> result3 = ldapEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter3, SearchScope.SUB,\n-                new String[] {\"oxAuthExpiration\"}, clientBatchOperation, 0, 0, 1000);\n+            new String[] {\"oxAuthExpiration\"}, clientBatchOperation, 0, 0, 1000);\n \n         LOG.info(\"Result count (without collecting results): \" + result3.size());\n \n@@ -129,12 +130,13 @@ public final class LdapSampleBatchJob {\n \n         final Filter filter4 = Filter.createPresenceFilter(\"oxAuthExpiration\");\n         List<SimpleClient> result4 = ldapEntryManager.findEntries(\"o=gluu\", SimpleClient.class, filter4, SearchScope.SUB,\n-                new String[] {\"oxAuthExpiration\"}, clientBatchOperation2, 0, 0, 1000);\n+            new String[] {\"oxAuthExpiration\"}, clientBatchOperation2, 0, 0, 1000);\n \n         LOG.info(\"Result count (with collecting results): \" + result4.size());\n     }\n \n-    private static CustomAttribute getUpdatedAttribute(LdapEntryManager ldapEntryManager, String baseDn, String attributeName, String attributeValue) {\n+    private static CustomAttribute getUpdatedAttribute(LdapEntryManager ldapEntryManager, String baseDn, String attributeName,\n+                                                       String attributeValue) {\n         try {\n             Calendar calendar = Calendar.getInstance();\n             Date oxLastAccessTimeDate = StaticUtils.decodeGeneralizedTime(attributeValue);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/145/LdapSampleBatchJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/145/LdapSampleBatchJob.java\nindex a7b56c91b77..046bced78f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/145/LdapSampleBatchJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/145/LdapSampleBatchJob.java\n@@ -150,4 +150,4 @@ public final class LdapSampleBatchJob {\n         }\n         return null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
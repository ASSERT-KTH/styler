{
    "project_name": "graphfoundation-ongdb",
    "error_id": "343",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/343/SetInitialPasswordCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/343/SetInitialPasswordCommand.java\nindex 765e5e85f72..6d36d38c86b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/343/SetInitialPasswordCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/343/SetInitialPasswordCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin.security;\n \n import java.io.File;\n@@ -40,101 +41,97 @@ import static org.neo4j.kernel.api.security.UserManager.INITIAL_USER_NAME;\n public class SetInitialPasswordCommand implements AdminCommand\n {\n \n-    private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument( 0, \"password\" );\n+  private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument(0, \"password\");\n \n-    private final Path homeDir;\n-    private final Path configDir;\n-    private OutsideWorld outsideWorld;\n+  private final Path homeDir;\n+  private final Path configDir;\n+  private OutsideWorld outsideWorld;\n \n-    SetInitialPasswordCommand( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-        this.outsideWorld = outsideWorld;\n-    }\n+  SetInitialPasswordCommand(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+    this.outsideWorld = outsideWorld;\n+  }\n \n-    public static Arguments arguments()\n-    {\n-        return arguments;\n-    }\n+  public static Arguments arguments()\n+  {\n+    return arguments;\n+  }\n \n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    try\n     {\n-        try\n-        {\n-            setPassword( arguments.parse( args ).get( 0 ) );\n-        }\n-        catch ( IncorrectUsage | CommandFailed e )\n-        {\n-            throw e;\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            throw new CommandFailed( throwable.getMessage(), new RuntimeException( throwable ) );\n-        }\n-    }\n-\n-    private void setPassword( String password ) throws Throwable\n+      setPassword(arguments.parse(args).get(0));\n+    } catch (IncorrectUsage | CommandFailed e)\n     {\n-        Config config = loadNeo4jConfig();\n-        FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n-        File authFile = CommunitySecurityModule.getUserRepositoryFile( config );\n-\n-        if ( realUsersExist( authFile ) )\n-        {\n-            throw new CommandFailed( realUsersExistErrorMsg( fileSystem, authFile ) );\n-        }\n-        else\n-        {\n-            File file = CommunitySecurityModule.getInitialUserRepositoryFile( config );\n-            if ( fileSystem.fileExists( file ) )\n-            {\n-                fileSystem.deleteFile( file );\n-            }\n-\n-            FileUserRepository userRepository =\n-                    new FileUserRepository( fileSystem, file, NullLogProvider.getInstance() );\n-            userRepository.start();\n-            userRepository.create(\n-                    new User.Builder( INITIAL_USER_NAME, Credential.forPassword( password ) )\n-                            .withRequiredPasswordChange( false )\n-                            .build()\n-                );\n-            userRepository.shutdown();\n-            outsideWorld.stdOutLine( \"Changed password for user '\" + INITIAL_USER_NAME + \"'.\" );\n-        }\n-    }\n-\n-    private boolean realUsersExist( File authFile )\n+      throw e;\n+    } catch (Throwable throwable)\n     {\n-        return outsideWorld.fileSystem().fileExists( authFile );\n+      throw new CommandFailed(throwable.getMessage(), new RuntimeException(throwable));\n     }\n+  }\n+\n+  private void setPassword(String password) throws Throwable\n+  {\n+    Config config = loadNeo4jConfig();\n+    FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n+    File authFile = CommunitySecurityModule.getUserRepositoryFile(config);\n \n-    private String realUsersExistErrorMsg( FileSystemAbstraction fileSystem, File authFile )\n+    if (realUsersExist(authFile))\n     {\n-        String files;\n-        File parentFile = authFile.getParentFile();\n-        File roles = new File( parentFile, \"roles\" );\n-\n-        if ( fileSystem.fileExists( roles ) )\n-        {\n-            files = \"`auth` and `roles` files\";\n-        }\n-        else\n-        {\n-            files = \"`auth` file\";\n-        }\n-\n-        return  \"the provided initial password was not set because existing Neo4j users were detected at `\" +\n-               authFile.getAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" +\n-                \"to only have a default user with the provided password.\";\n+      throw new CommandFailed(realUsersExistErrorMsg(fileSystem, authFile));\n+    } else\n+    {\n+      File file = CommunitySecurityModule.getInitialUserRepositoryFile(config);\n+      if (fileSystem.fileExists(file))\n+      {\n+        fileSystem.deleteFile(file);\n+      }\n+\n+      FileUserRepository userRepository =\n+          new FileUserRepository(fileSystem, file, NullLogProvider.getInstance());\n+      userRepository.start();\n+      userRepository.create(\n+          new User.Builder(INITIAL_USER_NAME, Credential.forPassword(password))\n+              .withRequiredPasswordChange(false)\n+              .build()\n+      );\n+      userRepository.shutdown();\n+      outsideWorld.stdOutLine(\"Changed password for user '\" + INITIAL_USER_NAME + \"'.\");\n     }\n+  }\n+\n+  private boolean realUsersExist(File authFile)\n+  {\n+    return outsideWorld.fileSystem().fileExists(authFile);\n+  }\n \n-    Config loadNeo4jConfig()\n+  private String realUsersExistErrorMsg(FileSystemAbstraction fileSystem, File authFile)\n+  {\n+    String files;\n+    File parentFile = authFile.getParentFile();\n+    File roles = new File(parentFile, \"roles\");\n+\n+    if (fileSystem.fileExists(roles))\n+    {\n+      files = \"`auth` and `roles` files\";\n+    } else\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile() )\n-                .withHome( homeDir.toFile() )\n-                .withConnectorsDisabled().build();\n+      files = \"`auth` file\";\n     }\n+\n+    return \"the provided initial password was not set because existing Neo4j users were detected at `\" +\n+        authFile.getAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" +\n+        \"to only have a default user with the provided password.\";\n+  }\n+\n+  Config loadNeo4jConfig()\n+  {\n+    return Config.fromFile(configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME).toFile())\n+        .withHome(homeDir.toFile())\n+        .withConnectorsDisabled().build();\n+  }\n }\n",
            "diff_size": 123
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 280).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/343/SetInitialPasswordCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/343/SetInitialPasswordCommand.java\nindex 765e5e85f72..9e0747bc147 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/343/SetInitialPasswordCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/343/SetInitialPasswordCommand.java\n@@ -39,7 +39,6 @@ import static org.neo4j.kernel.api.security.UserManager.INITIAL_USER_NAME;\n \n public class SetInitialPasswordCommand implements AdminCommand\n {\n-\n     private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument( 0, \"password\" );\n \n     private final Path homeDir;\n@@ -80,8 +79,7 @@ public class SetInitialPasswordCommand implements AdminCommand\n         Config config = loadNeo4jConfig();\n         FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n         File authFile = CommunitySecurityModule.getUserRepositoryFile( config );\n-\n-        if ( realUsersExist( authFile ) )\n+if ( realUsersExist( authFile ) )\n         {\n             throw new CommandFailed( realUsersExistErrorMsg( fileSystem, authFile ) );\n         }\n@@ -93,15 +91,10 @@ public class SetInitialPasswordCommand implements AdminCommand\n                 fileSystem.deleteFile( file );\n             }\n \n-            FileUserRepository userRepository =\n-                    new FileUserRepository( fileSystem, file, NullLogProvider.getInstance() );\n-            userRepository.start();\n-            userRepository.create(\n-                    new User.Builder( INITIAL_USER_NAME, Credential.forPassword( password ) )\n-                            .withRequiredPasswordChange( false )\n-                            .build()\n-                );\n-            userRepository.shutdown();\n+            FileUserRepository userRepository = new FileUserRepository( fileSystem, file, NullLogProvider.getInstance() );\n+userRepository.start();\n+            userRepository.create( new User.Builder( INITIAL_USER_NAME, Credential.forPassword( password ) ).withRequiredPasswordChange( false ).build() );\n+userRepository.shutdown();\n             outsideWorld.stdOutLine( \"Changed password for user '\" + INITIAL_USER_NAME + \"'.\" );\n         }\n     }\n@@ -116,8 +109,7 @@ public class SetInitialPasswordCommand implements AdminCommand\n         String files;\n         File parentFile = authFile.getParentFile();\n         File roles = new File( parentFile, \"roles\" );\n-\n-        if ( fileSystem.fileExists( roles ) )\n+if ( fileSystem.fileExists( roles ) )\n         {\n             files = \"`auth` and `roles` files\";\n         }\n@@ -126,15 +118,11 @@ public class SetInitialPasswordCommand implements AdminCommand\n             files = \"`auth` file\";\n         }\n \n-        return  \"the provided initial password was not set because existing Neo4j users were detected at `\" +\n-               authFile.getAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" +\n-                \"to only have a default user with the provided password.\";\n+        return \"the provided initial password was not set because existing Neo4j users were detected at `\" + authFile.getAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" + \"to only have a default user with the provided password.\";\n     }\n \n     Config loadNeo4jConfig()\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile() )\n-                .withHome( homeDir.toFile() )\n-                .withConnectorsDisabled().build();\n+        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile() ).withHome( homeDir.toFile() ).withConnectorsDisabled().build();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
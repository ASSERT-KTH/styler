{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "334",
    "information": {
        "errors": [
            {
                "line": "7",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \n{\n\tlong m_attributes = 0;\n\tlong m_comments = 0;\n\tlong m_documents = 0;\n\tlong m_elements = 0;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/334/TestNavigate.java\nindex a50de28667a..254d07230c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/334/TestNavigate.java\n@@ -4,7 +4,7 @@ import java.util.ArrayList;\n \r\n public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n {\r\n-\tlong m_attributes = 0;\r\n+long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/334/TestNavigate.java\nindex a50de28667a..a0cbab1e2aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/334/TestNavigate.java\n@@ -2,39 +2,47 @@ package org.genxdm.samples.performance.bridges;\n \r\n import java.util.ArrayList;\r\n \r\n-public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n-{\r\n-\tlong m_attributes = 0;\r\n-\tlong m_comments = 0;\r\n-\tlong m_documents = 0;\r\n-\tlong m_elements = 0;\r\n-\tlong m_namespaces = 0;\r\n-\tlong m_processingInstructions = 0;\r\n-\tlong m_texts = 0;\r\n-\tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFilename();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tm_attributes = 0;\r\n-\t\tm_comments = 0;\r\n-\t\tm_documents = 0;\r\n-\t\tm_elements = 0;\r\n-\t\tm_namespaces = 0;\r\n-\t\tm_processingInstructions = 0;\r\n-\t\tm_texts = 0;\r\n-\t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\tN node = getTestNode();\r\n-\t    while (node!=null) {\r\n+public class TestNavigate<N, A> extends BaseBridgePerfTest<N, A> {\r\n+    long m_attributes = 0;\r\n+\r\n+    long m_comments = 0;\r\n+\r\n+    long m_documents = 0;\r\n+\r\n+    long m_elements = 0;\r\n+\r\n+    long m_namespaces = 0;\r\n+\r\n+    long m_processingInstructions = 0;\r\n+\r\n+    long m_texts = 0;\r\n+\r\n+    long m_other = 0;\r\n+\r\n+    long m_all = 0;\r\n+\r\n+    @Override\r\n+    public String getTestName() {\r\n+        return getDocFilename();\r\n+    }\r\n+\r\n+    @Override\r\n+    public void iterativeSetup() {\r\n+        m_attributes = 0;\r\n+        m_comments = 0;\r\n+        m_documents = 0;\r\n+        m_elements = 0;\r\n+        m_namespaces = 0;\r\n+        m_processingInstructions = 0;\r\n+        m_texts = 0;\r\n+        m_other = 0;\r\n+        m_all = 0;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void execute() {\r\n+        N node = getTestNode();\r\n+        while (node != null) {\r\n /*\t    \t\r\n \t        switch(getModel().getNodeKind(node))\r\n \t        {\r\n@@ -64,23 +72,21 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n \t        \tbreak;\r\n \t        }\r\n */\r\n-\t    \tm_all++;\r\n-\t        if(getModel().hasChildren(node))\r\n-\t        {\r\n-\t\t        node = getModel().getFirstChild(node);\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (getModel().getNextSibling(node) == null && node != getTestNode())\r\n-\t        \t{\r\n-\t        \t\tnode = getModel().getParent(node);\r\n-\t        \t}\r\n-\t\t        node = getModel().getNextSibling(node);\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n+            m_all++;\r\n+            if (getModel().hasChildren(node)) {\r\n+                node = getModel().getFirstChild(node);\r\n+            } else {\r\n+                while (getModel().getNextSibling(node) == null && node != getTestNode()) {\r\n+                    node = getModel().getParent(node);\r\n+                }\r\n+                node = getModel().getNextSibling(node);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public Iterable<String> iterativeTeardown() {\r\n+        ArrayList<String> retval = new ArrayList<String>();\r\n /*\t\t\r\n        \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n        \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n@@ -90,8 +96,10 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n        \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n        \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n        \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n+*/\r\n+        if (m_all > 0) {\r\n+            retval.add(\"node count = \" + Long.toString(m_all));\r\n+        }\r\n+        return retval;\r\n+    }\r\n }\r\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/334/TestNavigate.java\nindex a50de28667a..3ca0f241da0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/334/TestNavigate.java\n@@ -3,8 +3,8 @@ package org.genxdm.samples.performance.bridges;\n import java.util.ArrayList;\r\n \r\n public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n-{\r\n-\tlong m_attributes = 0;\r\n+{\n+    long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n@@ -12,16 +12,16 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n \tlong m_processingInstructions = 0;\r\n \tlong m_texts = 0;\r\n \tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFilename();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tm_attributes = 0;\r\n+\tlong m_all = 0;\n+\n+@Override\n+public String getTestName() {\n+    return getDocFilename();\n+    }\n+\n+@Override\n+public void iterativeSetup() {\n+    m_attributes = 0;\r\n \t\tm_comments = 0;\r\n \t\tm_documents = 0;\r\n \t\tm_elements = 0;\r\n@@ -29,13 +29,12 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n \t\tm_processingInstructions = 0;\r\n \t\tm_texts = 0;\r\n \t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n+\t\tm_all = 0;\n+    }\r\n \t@Override\r\n-\tpublic void execute() {\r\n-\t\tN node = getTestNode();\r\n-\t    while (node!=null) {\r\n-/*\t    \t\r\n+\tpublic void execute() {\n+    N node = getTestNode();\n+while (node != null) { /*\t    \t\r\n \t        switch(getModel().getNodeKind(node))\r\n \t        {\r\n \t\t\tcase ATTRIBUTE:\r\n@@ -63,24 +62,28 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n \t        \tm_other++;\r\n \t        \tbreak;\r\n \t        }\r\n-*/\r\n-\t    \tm_all++;\r\n-\t        if(getModel().hasChildren(node))\r\n-\t        {\r\n-\t\t        node = getModel().getFirstChild(node);\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (getModel().getNextSibling(node) == null && node != getTestNode())\r\n-\t        \t{\r\n-\t        \t\tnode = getModel().getParent(node);\r\n-\t        \t}\r\n-\t\t        node = getModel().getNextSibling(node);\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n+*/\n+m_all++;\n+if(getModel().hasChildren(node))\r\n+\t        {\n+    node = getModel().getFirstChild(node);\n+    }\n+else\n+ {\n+\n+            while (getModel().getNextSibling(node) == null && node != getTestNode())\r\n+\t        \t{\n+    node = getModel().getParent(node);\n+    }\r\n+\t\t        node = getModel().getNextSibling(node);\n+    }\n+    } \r\n+\t}\n+\n+@Override\r\n+\tpublic Iterable<String> iterativeTeardown() {\n+    ArrayList<String> retval = new ArrayList<String>();\n+\n /*\t\t\r\n        \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n        \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n@@ -90,8 +93,9 @@ public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A>\n        \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n        \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n        \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n-}\r\n+*/\n+if (m_all > 0)\n+    retval.add(\"node count = \" + Long.toString(m_all));\n+return retval;\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/334/TestNavigate.java\nindex a50de28667a..10a85272d04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/334/TestNavigate.java\n@@ -1,97 +1,107 @@\n-package org.genxdm.samples.performance.bridges;\r\n-\r\n-import java.util.ArrayList;\r\n-\r\n-public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n-{\r\n-\tlong m_attributes = 0;\r\n-\tlong m_comments = 0;\r\n-\tlong m_documents = 0;\r\n-\tlong m_elements = 0;\r\n-\tlong m_namespaces = 0;\r\n-\tlong m_processingInstructions = 0;\r\n-\tlong m_texts = 0;\r\n-\tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFilename();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tm_attributes = 0;\r\n-\t\tm_comments = 0;\r\n-\t\tm_documents = 0;\r\n-\t\tm_elements = 0;\r\n-\t\tm_namespaces = 0;\r\n-\t\tm_processingInstructions = 0;\r\n-\t\tm_texts = 0;\r\n-\t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\tN node = getTestNode();\r\n-\t    while (node!=null) {\r\n-/*\t    \t\r\n-\t        switch(getModel().getNodeKind(node))\r\n-\t        {\r\n-\t\t\tcase ATTRIBUTE:\r\n-\t\t\t\tm_attributes++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase COMMENT:\r\n-\t\t\t\tm_comments++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase DOCUMENT:\r\n-\t\t\t\tm_documents++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase ELEMENT:\r\n-\t\t\t\tm_elements++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase NAMESPACE:\r\n-\t\t\t\tm_namespaces++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase PROCESSING_INSTRUCTION:\r\n-\t\t\t\tm_processingInstructions++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase TEXT:\r\n-\t\t\t\tm_texts++;\r\n-\t\t\t\tbreak;\r\n-\t        default:\r\n-\t        \tm_other++;\r\n-\t        \tbreak;\r\n-\t        }\r\n-*/\r\n-\t    \tm_all++;\r\n-\t        if(getModel().hasChildren(node))\r\n-\t        {\r\n-\t\t        node = getModel().getFirstChild(node);\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (getModel().getNextSibling(node) == null && node != getTestNode())\r\n-\t        \t{\r\n-\t        \t\tnode = getModel().getParent(node);\r\n-\t        \t}\r\n-\t\t        node = getModel().getNextSibling(node);\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n-/*\t\t\r\n-       \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n-       \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n-       \tif(m_documents > 0)              retval.add(\"document count = \" + Long.toString(m_documents));\r\n-       \tif(m_elements > 0)               retval.add(\"element  count = \" + Long.toString(m_elements));\r\n-       \tif(m_namespaces > 0)             retval.add(\"ns       count = \" + Long.toString(m_namespaces));\r\n-       \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n-       \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n-       \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n-}\r\n+package org.genxdm.samples.performance.bridges;\n+\n+import java.util.ArrayList;\n+\n+public class TestNavigate<N, A>\n+    extends BaseBridgePerfTest<N, A>\n+{\n+    long m_attributes = 0;\n+    long m_comments = 0;\n+    long m_documents = 0;\n+    long m_elements = 0;\n+    long m_namespaces = 0;\n+    long m_processingInstructions = 0;\n+    long m_texts = 0;\n+    long m_other = 0;\n+    long m_all = 0;\n+\n+    @Override\n+    public String getTestName()\n+    {\n+        return getDocFilename();\n+    }\n+\n+    @Override\n+    public void iterativeSetup()\n+    {\n+        m_attributes = 0;\n+        m_comments = 0;\n+        m_documents = 0;\n+        m_elements = 0;\n+        m_namespaces = 0;\n+        m_processingInstructions = 0;\n+        m_texts = 0;\n+        m_other = 0;\n+        m_all = 0;\n+    }\n+\n+    @Override\n+    public void execute()\n+    {\n+        N node = getTestNode();\n+        while (node != null)\n+        {\r\n+/*          \r\n+            switch(getModel().getNodeKind(node))\r\n+            {\r\n+            case ATTRIBUTE:\r\n+                m_attributes++;\r\n+                break;\r\n+            case COMMENT:\r\n+                m_comments++;\r\n+                break;\r\n+            case DOCUMENT:\r\n+                m_documents++;\r\n+                break;\r\n+            case ELEMENT:\r\n+                m_elements++;\r\n+                break;\r\n+            case NAMESPACE:\r\n+                m_namespaces++;\r\n+                break;\r\n+            case PROCESSING_INSTRUCTION:\r\n+                m_processingInstructions++;\r\n+                break;\r\n+            case TEXT:\r\n+                m_texts++;\r\n+                break;\r\n+            default:\r\n+                m_other++;\r\n+                break;\r\n+            }\r\n+*/\n+            m_all++;\n+            if (getModel().hasChildren(node))\n+            {\n+                node = getModel().getFirstChild(node);\n+            }\n+            else\n+            {\n+                while (getModel().getNextSibling(node) == null && node != getTestNode())\n+                {\n+                    node = getModel().getParent(node);\n+                }\n+                node = getModel().getNextSibling(node);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public Iterable<String> iterativeTeardown()\n+    {\n+        ArrayList<String> retval = new ArrayList<String>();\r\n+/*      \r\n+        if(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n+        if(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n+        if(m_documents > 0)              retval.add(\"document count = \" + Long.toString(m_documents));\r\n+        if(m_elements > 0)               retval.add(\"element  count = \" + Long.toString(m_elements));\r\n+        if(m_namespaces > 0)             retval.add(\"ns       count = \" + Long.toString(m_namespaces));\r\n+        if(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n+        if(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n+        if(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n+*/\n+        if (m_all > 0)\n+            retval.add(\"node count = \" + Long.toString(m_all));\n+        return retval;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 107
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/334/TestNavigate.java\nindex a50de28667a..254d07230c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/334/TestNavigate.java\n@@ -4,7 +4,7 @@ import java.util.ArrayList;\n \r\n public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n {\r\n-\tlong m_attributes = 0;\r\n+long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/334/TestNavigate.java\nindex a50de28667a..fd71bcbee96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/334/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/334/TestNavigate.java\n@@ -4,7 +4,7 @@ import java.util.ArrayList;\n \r\n public class TestNavigate<N,A> extends BaseBridgePerfTest<N,A> \r\n {\r\n-\tlong m_attributes = 0;\r\n+    long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
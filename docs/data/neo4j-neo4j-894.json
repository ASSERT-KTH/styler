{
    "project_name": "neo4j-neo4j",
    "error_id": "894",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/894/NativeLuceneFusionIndexProviderFactory30.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/894/NativeLuceneFusionIndexProviderFactory30.java\nindex 4271bbde66c..bcb13aa4541 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/894/NativeLuceneFusionIndexProviderFactory30.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/894/NativeLuceneFusionIndexProviderFactory30.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import java.nio.file.Path;\n@@ -47,11 +48,11 @@ import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesBySu\n public class NativeLuceneFusionIndexProviderFactory30 extends AbstractIndexProviderFactory\n {\n     public static final String KEY = NATIVE30.providerKey();\n-    public static final IndexProviderDescriptor DESCRIPTOR = new IndexProviderDescriptor( KEY, NATIVE30.providerVersion() );\n+    public static final IndexProviderDescriptor DESCRIPTOR = new IndexProviderDescriptor(KEY, NATIVE30.providerVersion());\n \n     public NativeLuceneFusionIndexProviderFactory30()\n     {\n-        super( KEY );\n+        super(KEY);\n     }\n \n     @Override\n@@ -67,43 +68,43 @@ public class NativeLuceneFusionIndexProviderFactory30 extends AbstractIndexProvi\n     }\n \n     @Override\n-    protected IndexProvider internalCreate( PageCache pageCache, Path storeDir, FileSystemAbstraction fs, Monitors monitors, String monitorTag,\n-            Config config, OperationalMode operationalMode, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n+    protected IndexProvider internalCreate(PageCache pageCache, Path storeDir, FileSystemAbstraction fs, Monitors monitors, String monitorTag,\n+                                           Config config, OperationalMode operationalMode, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector)\n     {\n-        return create( pageCache, storeDir, fs, monitors, monitorTag, config, operationalMode, recoveryCleanupWorkCollector );\n+        return create(pageCache, storeDir, fs, monitors, monitorTag, config, operationalMode, recoveryCleanupWorkCollector);\n     }\n \n     @VisibleForTesting\n-    public static FusionIndexProvider create( PageCache pageCache, Path databaseDirectory, FileSystemAbstraction fs,\n-            Monitors monitors, String monitorTag, Config config, OperationalMode operationalMode,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n+    public static FusionIndexProvider create(PageCache pageCache, Path databaseDirectory, FileSystemAbstraction fs,\n+                                             Monitors monitors, String monitorTag, Config config, OperationalMode operationalMode,\n+                                             RecoveryCleanupWorkCollector recoveryCleanupWorkCollector)\n     {\n-        IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure( databaseDirectory );\n+        IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure(databaseDirectory);\n         boolean isSingleInstance = operationalMode == OperationalMode.SINGLE;\n-        boolean readOnly = IndexProviderFactoryUtil.isReadOnly( config, isSingleInstance );\n-        boolean archiveFailedIndex = config.get( GraphDatabaseInternalSettings.archive_failed_index );\n+        boolean readOnly = IndexProviderFactoryUtil.isReadOnly(config, isSingleInstance);\n+        boolean archiveFailedIndex = config.get(GraphDatabaseInternalSettings.archive_failed_index);\n \n         DatabaseIndexContext databaseIndexContext =\n-                DatabaseIndexContext.builder( pageCache, fs ).withMonitors( monitors ).withTag( monitorTag ).withReadOnly( readOnly ).build();\n+          DatabaseIndexContext.builder(pageCache, fs).withMonitors(monitors).withTag(monitorTag).withReadOnly(readOnly).build();\n         GenericNativeIndexProvider generic =\n-                new GenericNativeIndexProvider( databaseIndexContext, childDirectoryStructure,\n-                        recoveryCleanupWorkCollector, config );\n-        LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider( fs, childDirectoryStructure, monitors, monitorTag, config, isSingleInstance );\n+          new GenericNativeIndexProvider(databaseIndexContext, childDirectoryStructure,\n+            recoveryCleanupWorkCollector, config);\n+        LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider(fs, childDirectoryStructure, monitors, monitorTag, config, isSingleInstance);\n \n-        return new FusionIndexProvider( generic, lucene, new FusionSlotSelector30(),\n-                DESCRIPTOR, directoriesByProvider( databaseDirectory ), fs, archiveFailedIndex );\n+        return new FusionIndexProvider(generic, lucene, new FusionSlotSelector30(),\n+          DESCRIPTOR, directoriesByProvider(databaseDirectory), fs, archiveFailedIndex);\n     }\n \n     @VisibleForTesting\n-    public static IndexDirectoryStructure.Factory subProviderDirectoryStructure( Path databaseDirectory )\n+    public static IndexDirectoryStructure.Factory subProviderDirectoryStructure(Path databaseDirectory)\n     {\n-        return subProviderDirectoryStructure( databaseDirectory, DESCRIPTOR );\n+        return subProviderDirectoryStructure(databaseDirectory, DESCRIPTOR);\n     }\n \n     @VisibleForTesting\n-    public static IndexDirectoryStructure.Factory subProviderDirectoryStructure( Path databaseDirectory, IndexProviderDescriptor descriptor )\n+    public static IndexDirectoryStructure.Factory subProviderDirectoryStructure(Path databaseDirectory, IndexProviderDescriptor descriptor)\n     {\n-        IndexDirectoryStructure parentDirectoryStructure = directoriesByProvider( databaseDirectory ).forProvider( descriptor );\n-        return directoriesBySubProvider( parentDirectoryStructure );\n+        IndexDirectoryStructure parentDirectoryStructure = directoriesByProvider(databaseDirectory).forProvider(descriptor);\n+        return directoriesBySubProvider(parentDirectoryStructure);\n     }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
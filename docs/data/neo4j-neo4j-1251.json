{
    "project_name": "neo4j-neo4j",
    "error_id": "1251",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1251/CrashGenerationCleaner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1251/CrashGenerationCleaner.java\nindex b52fe20fab3..294457c0254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1251/CrashGenerationCleaner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1251/CrashGenerationCleaner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -46,13 +47,13 @@ class CrashGenerationCleaner\n {\n     private static final String INDEX_CLEANER_TAG = \"indexCleaner\";\n     private static final String NUMBER_OF_WORKERS_NAME = \"number_of_workers\";\n-    private static final int NUMBER_OF_WORKERS_DEFAULT = min( 8, Runtime.getRuntime().availableProcessors() );\n-    private static final int NUMBER_OF_WORKERS = FeatureToggles.getInteger( CrashGenerationCleaner.class, NUMBER_OF_WORKERS_NAME, NUMBER_OF_WORKERS_DEFAULT );\n+    private static final int NUMBER_OF_WORKERS_DEFAULT = min(8, Runtime.getRuntime().availableProcessors());\n+    private static final int NUMBER_OF_WORKERS = FeatureToggles.getInteger(CrashGenerationCleaner.class, NUMBER_OF_WORKERS_NAME, NUMBER_OF_WORKERS_DEFAULT);\n \n     private static final long MIN_BATCH_SIZE = 10;\n     static final long MAX_BATCH_SIZE = 100;\n     private final PagedFile pagedFile;\n-    private final TreeNode<?,?> treeNode;\n+    private final TreeNode<?, ?> treeNode;\n     private final long lowTreeNodeId;\n     private final long highTreeNodeId;\n     private final long stableGeneration;\n@@ -61,8 +62,8 @@ class CrashGenerationCleaner\n     private final PageCacheTracer pageCacheTracer;\n     private final String treeName;\n \n-    CrashGenerationCleaner( PagedFile pagedFile, TreeNode<?,?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n-            long stableGeneration, long unstableGeneration, Monitor monitor, PageCacheTracer pageCacheTracer, String treeName )\n+    CrashGenerationCleaner(PagedFile pagedFile, TreeNode<?, ?> treeNode, long lowTreeNodeId, long highTreeNodeId,\n+                           long stableGeneration, long unstableGeneration, Monitor monitor, PageCacheTracer pageCacheTracer, String treeName)\n     {\n         this.pagedFile = pagedFile;\n         this.treeNode = treeNode;\n@@ -75,15 +76,15 @@ class CrashGenerationCleaner\n         this.treeName = treeName;\n     }\n \n-    private static long batchSize( long pagesToClean, int threads )\n+    private static long batchSize(long pagesToClean, int threads)\n     {\n         // Batch size at most maxBatchSize, at least minBatchSize and trying to give each thread 100 batches each\n-        return min( MAX_BATCH_SIZE, max( MIN_BATCH_SIZE, pagesToClean / (100L * threads) ) );\n+        return min(MAX_BATCH_SIZE, max(MIN_BATCH_SIZE, pagesToClean / (100L * threads)));\n     }\n \n     // === Methods about the execution and threading ===\n \n-    public void clean( CleanupJob.Executor executor )\n+    public void clean(CleanupJob.Executor executor)\n     {\n         monitor.cleanupStarted();\n         assert unstableGeneration > stableGeneration : unexpectedGenerations();\n@@ -92,63 +93,62 @@ class CrashGenerationCleaner\n         Stopwatch startTime = Stopwatch.start();\n         long pagesToClean = highTreeNodeId - lowTreeNodeId;\n         int threads = NUMBER_OF_WORKERS;\n-        long batchSize = batchSize( pagesToClean, threads );\n-        AtomicLong nextId = new AtomicLong( lowTreeNodeId );\n+        long batchSize = batchSize(pagesToClean, threads);\n+        AtomicLong nextId = new AtomicLong(lowTreeNodeId);\n         AtomicBoolean stopFlag = new AtomicBoolean();\n         LongAdder cleanedPointers = new LongAdder();\n         LongAdder numberOfTreeNodes = new LongAdder();\n         List<CleanupJob.JobResult<?>> jobResults = new ArrayList<>();\n-        for ( int i = 0; i < threads; i++ )\n+        for (int i = 0; i < threads; i++)\n         {\n-            Callable<?> cleanerTask = cleaner( nextId, batchSize, numberOfTreeNodes, cleanedPointers, stopFlag, pageCacheTracer );\n-            CleanupJob.JobResult<?> jobHandle = executor.submit( \"Recovery clean up of '\" + treeName + \"'\", cleanerTask );\n-            jobResults.add( jobHandle );\n+            Callable<?> cleanerTask = cleaner(nextId, batchSize, numberOfTreeNodes, cleanedPointers, stopFlag, pageCacheTracer);\n+            CleanupJob.JobResult<?> jobHandle = executor.submit(\"Recovery clean up of '\" + treeName + \"'\", cleanerTask);\n+            jobResults.add(jobHandle);\n         }\n \n-        awaitAll( jobResults );\n+        awaitAll(jobResults);\n \n-        monitor.cleanupFinished( pagesToClean, numberOfTreeNodes.sum(), cleanedPointers.sum(), startTime.elapsed( MILLISECONDS ) );\n+        monitor.cleanupFinished(pagesToClean, numberOfTreeNodes.sum(), cleanedPointers.sum(), startTime.elapsed(MILLISECONDS));\n     }\n \n-    private Callable<?> cleaner( AtomicLong nextId, long batchSize, LongAdder numberOfTreeNodes, LongAdder cleanedPointers, AtomicBoolean stopFlag,\n-            PageCacheTracer pageCacheTracer )\n+    private Callable<?> cleaner(AtomicLong nextId, long batchSize, LongAdder numberOfTreeNodes, LongAdder cleanedPointers, AtomicBoolean stopFlag,\n+                                PageCacheTracer pageCacheTracer)\n     {\n         return () ->\n         {\n-            try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_CLEANER_TAG );\n-                  PageCursor cursor = pagedFile.io( 0, PagedFile.PF_SHARED_READ_LOCK, cursorTracer );\n-                  PageCursor writeCursor = pagedFile.io( 0, PagedFile.PF_SHARED_WRITE_LOCK, cursorTracer ) )\n+            try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_CLEANER_TAG);\n+                 PageCursor cursor = pagedFile.io(0, PagedFile.PF_SHARED_READ_LOCK, cursorTracer);\n+                 PageCursor writeCursor = pagedFile.io(0, PagedFile.PF_SHARED_WRITE_LOCK, cursorTracer))\n             {\n                 long localNextId;\n-                while ( ( localNextId = nextId.getAndAdd( batchSize )) < highTreeNodeId )\n+                while ((localNextId = nextId.getAndAdd(batchSize)) < highTreeNodeId)\n                 {\n                     int localNumberOfTreeNodes = 0;\n-                    for ( int i = 0; i < batchSize && localNextId < highTreeNodeId; i++, localNextId++ )\n+                    for (int i = 0; i < batchSize && localNextId < highTreeNodeId; i++, localNextId++)\n                     {\n-                        PageCursorUtil.goTo( cursor, \"clean\", localNextId );\n+                        PageCursorUtil.goTo(cursor, \"clean\", localNextId);\n \n-                        boolean isTreeNode = isTreeNode( cursor );\n-                        if ( isTreeNode )\n+                        boolean isTreeNode = isTreeNode(cursor);\n+                        if (isTreeNode)\n                         {\n                             localNumberOfTreeNodes++;\n-                            if ( hasCrashedGSPP( this.treeNode, cursor ) )\n+                            if (hasCrashedGSPP(this.treeNode, cursor))\n                             {\n-                                writeCursor.next( cursor.getCurrentPageId() );\n-                                cleanTreeNode( this.treeNode, writeCursor, cleanedPointers );\n+                                writeCursor.next(cursor.getCurrentPageId());\n+                                cleanTreeNode(this.treeNode, writeCursor, cleanedPointers);\n                             }\n                         }\n                     }\n-                    numberOfTreeNodes.add( localNumberOfTreeNodes );\n+                    numberOfTreeNodes.add(localNumberOfTreeNodes);\n \n-                    if ( stopFlag.get() )\n+                    if (stopFlag.get())\n                     {\n                         break;\n                     }\n                 }\n-            }\n-            catch ( Throwable e )\n+            } catch (Throwable e)\n             {\n-                stopFlag.set( true );\n+                stopFlag.set(true);\n                 throw e;\n             }\n             return null;\n@@ -157,121 +157,120 @@ class CrashGenerationCleaner\n \n     // === Methods about checking if a tree node has crashed pointers ===\n \n-    private boolean isTreeNode( PageCursor cursor ) throws IOException\n+    private boolean isTreeNode(PageCursor cursor) throws IOException\n     {\n         boolean isTreeNode;\n         do\n         {\n-            isTreeNode = TreeNode.nodeType( cursor ) == TreeNode.NODE_TYPE_TREE_NODE;\n+            isTreeNode = TreeNode.nodeType(cursor) == TreeNode.NODE_TYPE_TREE_NODE;\n         }\n-        while ( cursor.shouldRetry() );\n-        PageCursorUtil.checkOutOfBounds( cursor );\n+        while (cursor.shouldRetry());\n+        PageCursorUtil.checkOutOfBounds(cursor);\n         return isTreeNode;\n     }\n \n-    private boolean hasCrashedGSPP( TreeNode<?,?> treeNode, PageCursor cursor ) throws IOException\n+    private boolean hasCrashedGSPP(TreeNode<?, ?> treeNode, PageCursor cursor) throws IOException\n     {\n         int keyCount;\n         do\n         {\n-            keyCount = TreeNode.keyCount( cursor );\n+            keyCount = TreeNode.keyCount(cursor);\n         }\n-        while ( cursor.shouldRetry() );\n-        PageCursorUtil.checkOutOfBounds( cursor );\n+        while (cursor.shouldRetry());\n+        PageCursorUtil.checkOutOfBounds(cursor);\n \n         boolean hasCrashed;\n         do\n         {\n             hasCrashed =\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR ) ||\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING ) ||\n-                    hasCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING );\n+              hasCrashedGSPP(cursor, TreeNode.BYTE_POS_SUCCESSOR) ||\n+                hasCrashedGSPP(cursor, TreeNode.BYTE_POS_LEFTSIBLING) ||\n+                hasCrashedGSPP(cursor, TreeNode.BYTE_POS_RIGHTSIBLING);\n \n-            if ( !hasCrashed && TreeNode.isInternal( cursor ) )\n+            if (!hasCrashed && TreeNode.isInternal(cursor))\n             {\n-                for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ) && !hasCrashed; i++ )\n+                for (int i = 0; i <= keyCount && treeNode.reasonableChildCount(i) && !hasCrashed; i++)\n                 {\n-                    hasCrashed = hasCrashedGSPP( cursor, treeNode.childOffset( i ) );\n+                    hasCrashed = hasCrashedGSPP(cursor, treeNode.childOffset(i));\n                 }\n             }\n         }\n-        while ( cursor.shouldRetry() );\n-        PageCursorUtil.checkOutOfBounds( cursor );\n+        while (cursor.shouldRetry());\n+        PageCursorUtil.checkOutOfBounds(cursor);\n         return hasCrashed;\n     }\n \n-    private boolean hasCrashedGSPP( PageCursor cursor, int gsppOffset )\n+    private boolean hasCrashedGSPP(PageCursor cursor, int gsppOffset)\n     {\n-        return hasCrashedGSP( cursor, gsppOffset ) || hasCrashedGSP( cursor, gsppOffset + GenerationSafePointer.SIZE );\n+        return hasCrashedGSP(cursor, gsppOffset) || hasCrashedGSP(cursor, gsppOffset + GenerationSafePointer.SIZE);\n     }\n \n-    private boolean hasCrashedGSP( PageCursor cursor, int offset )\n+    private boolean hasCrashedGSP(PageCursor cursor, int offset)\n     {\n-        cursor.setOffset( offset );\n-        long generation = GenerationSafePointer.readGeneration( cursor );\n+        cursor.setOffset(offset);\n+        long generation = GenerationSafePointer.readGeneration(cursor);\n         return generation > stableGeneration && generation < unstableGeneration;\n     }\n \n     // === Methods about actually cleaning a discovered crashed tree node ===\n \n-    private void cleanTreeNode( TreeNode<?,?> treeNode, PageCursor cursor, LongAdder cleanedPointers )\n+    private void cleanTreeNode(TreeNode<?, ?> treeNode, PageCursor cursor, LongAdder cleanedPointers)\n     {\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_SUCCESSOR, cleanedPointers );\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_LEFTSIBLING, cleanedPointers );\n-        cleanCrashedGSPP( cursor, TreeNode.BYTE_POS_RIGHTSIBLING, cleanedPointers );\n+        cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_SUCCESSOR, cleanedPointers);\n+        cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_LEFTSIBLING, cleanedPointers);\n+        cleanCrashedGSPP(cursor, TreeNode.BYTE_POS_RIGHTSIBLING, cleanedPointers);\n \n-        if ( TreeNode.isInternal( cursor ) )\n+        if (TreeNode.isInternal(cursor))\n         {\n-            int keyCount = TreeNode.keyCount( cursor );\n-            for ( int i = 0; i <= keyCount && treeNode.reasonableChildCount( i ); i++ )\n+            int keyCount = TreeNode.keyCount(cursor);\n+            for (int i = 0; i <= keyCount && treeNode.reasonableChildCount(i); i++)\n             {\n-                cleanCrashedGSPP( cursor, treeNode.childOffset( i ), cleanedPointers );\n+                cleanCrashedGSPP(cursor, treeNode.childOffset(i), cleanedPointers);\n             }\n         }\n     }\n \n-    private void cleanCrashedGSPP( PageCursor cursor, int gsppOffset, LongAdder cleanedPointers )\n+    private void cleanCrashedGSPP(PageCursor cursor, int gsppOffset, LongAdder cleanedPointers)\n     {\n-        cleanCrashedGSP( cursor, gsppOffset, cleanedPointers );\n-        cleanCrashedGSP( cursor, gsppOffset + GenerationSafePointer.SIZE, cleanedPointers );\n+        cleanCrashedGSP(cursor, gsppOffset, cleanedPointers);\n+        cleanCrashedGSP(cursor, gsppOffset + GenerationSafePointer.SIZE, cleanedPointers);\n     }\n \n     /**\n      * NOTE: No shouldRetry is used because cursor is assumed to be a write cursor.\n      */\n-    private void cleanCrashedGSP( PageCursor cursor, int gspOffset, LongAdder cleanedPointers )\n+    private void cleanCrashedGSP(PageCursor cursor, int gspOffset, LongAdder cleanedPointers)\n     {\n-        if ( hasCrashedGSP( cursor, gspOffset ) )\n+        if (hasCrashedGSP(cursor, gspOffset))\n         {\n-            cursor.setOffset( gspOffset );\n-            GenerationSafePointer.clean( cursor );\n+            cursor.setOffset(gspOffset);\n+            GenerationSafePointer.clean(cursor);\n             cleanedPointers.increment();\n         }\n     }\n \n-    private String unexpectedGenerations( )\n+    private String unexpectedGenerations()\n     {\n         return \"Unexpected generations, stableGeneration=\" + stableGeneration + \", unstableGeneration=\" + unstableGeneration;\n     }\n \n-    private void awaitAll( Iterable<? extends CleanupJob.JobResult<?>> jobHandles )\n+    private void awaitAll(Iterable<? extends CleanupJob.JobResult<?>> jobHandles)\n     {\n         Throwable finalError = null;\n-        for ( var jobHandle : jobHandles )\n+        for (var jobHandle : jobHandles)\n         {\n             try\n             {\n                 jobHandle.get();\n-            }\n-            catch ( Throwable e )\n+            } catch (Throwable e)\n             {\n-                finalError = Exceptions.chain( finalError, e );\n+                finalError = Exceptions.chain(finalError, e);\n             }\n         }\n-        if ( finalError != null )\n+        if (finalError != null)\n         {\n-            Exceptions.throwIfUnchecked( finalError );\n-            throw new RuntimeException( finalError );\n+            Exceptions.throwIfUnchecked(finalError);\n+            throw new RuntimeException(finalError);\n         }\n     }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
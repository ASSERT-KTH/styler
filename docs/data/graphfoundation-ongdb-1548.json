{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1548",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1548/RaftMessageMonitoringHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1548/RaftMessageMonitoringHandler.java\nindex b4ed80a7647..ad891320e9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1548/RaftMessageMonitoringHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1548/RaftMessageMonitoringHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus;\n \n import java.time.Clock;\n@@ -30,62 +31,61 @@ import org.neo4j.kernel.monitoring.Monitors;\n \n public class RaftMessageMonitoringHandler implements LifecycleMessageHandler<RaftMessages.ReceivedInstantClusterIdAwareMessage<?>>\n {\n-    private final LifecycleMessageHandler<RaftMessages.ReceivedInstantClusterIdAwareMessage<?>> raftMessageHandler;\n-    private final Clock clock;\n-    private final RaftMessageProcessingMonitor raftMessageDelayMonitor;\n+  private final LifecycleMessageHandler<RaftMessages.ReceivedInstantClusterIdAwareMessage<?>> raftMessageHandler;\n+  private final Clock clock;\n+  private final RaftMessageProcessingMonitor raftMessageDelayMonitor;\n \n-    public RaftMessageMonitoringHandler( LifecycleMessageHandler<RaftMessages.ReceivedInstantClusterIdAwareMessage<?>> raftMessageHandler,\n-            Clock clock, Monitors monitors )\n-    {\n-        this.raftMessageHandler = raftMessageHandler;\n-        this.clock = clock;\n-        this.raftMessageDelayMonitor = monitors.newMonitor( RaftMessageProcessingMonitor.class );\n-    }\n+  public RaftMessageMonitoringHandler(LifecycleMessageHandler<RaftMessages.ReceivedInstantClusterIdAwareMessage<?>> raftMessageHandler,\n+                                      Clock clock, Monitors monitors)\n+  {\n+    this.raftMessageHandler = raftMessageHandler;\n+    this.clock = clock;\n+    this.raftMessageDelayMonitor = monitors.newMonitor(RaftMessageProcessingMonitor.class);\n+  }\n \n-    public static ComposableMessageHandler composable( Clock clock, Monitors monitors )\n-    {\n-        return delegate -> new RaftMessageMonitoringHandler( delegate, clock, monitors );\n-    }\n+  public static ComposableMessageHandler composable(Clock clock, Monitors monitors)\n+  {\n+    return delegate -> new RaftMessageMonitoringHandler(delegate, clock, monitors);\n+  }\n \n-    @Override\n-    public synchronized void handle( RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage )\n-    {\n-        Instant start = clock.instant();\n+  @Override\n+  public synchronized void handle(RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage)\n+  {\n+    Instant start = clock.instant();\n \n-        logDelay( incomingMessage, start );\n+    logDelay(incomingMessage, start);\n \n-        timeHandle( incomingMessage, start );\n-    }\n+    timeHandle(incomingMessage, start);\n+  }\n \n-    private void timeHandle( RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage, Instant start )\n+  private void timeHandle(RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage, Instant start)\n+  {\n+    try\n     {\n-        try\n-        {\n-            raftMessageHandler.handle( incomingMessage );\n-        }\n-        finally\n-        {\n-            Duration duration = Duration.between( start, clock.instant() );\n-            raftMessageDelayMonitor.updateTimer( incomingMessage.type(), duration );\n-        }\n+      raftMessageHandler.handle(incomingMessage);\n+    } finally\n+    {\n+      Duration duration = Duration.between(start, clock.instant());\n+      raftMessageDelayMonitor.updateTimer(incomingMessage.type(), duration);\n     }\n+  }\n \n-    private void logDelay( RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage, Instant start )\n-    {\n-        Duration delay = Duration.between( incomingMessage.receivedAt(), start );\n+  private void logDelay(RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage, Instant start)\n+  {\n+    Duration delay = Duration.between(incomingMessage.receivedAt(), start);\n \n-        raftMessageDelayMonitor.setDelay( delay );\n-    }\n+    raftMessageDelayMonitor.setDelay(delay);\n+  }\n \n-    @Override\n-    public void start( ClusterId clusterId ) throws Throwable\n-    {\n-        raftMessageHandler.start( clusterId );\n-    }\n+  @Override\n+  public void start(ClusterId clusterId) throws Throwable\n+  {\n+    raftMessageHandler.start(clusterId);\n+  }\n \n-    @Override\n-    public void stop() throws Throwable\n-    {\n-        raftMessageHandler.stop();\n-    }\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    raftMessageHandler.stop();\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1548/RaftMessageMonitoringHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1548/RaftMessageMonitoringHandler.java\nindex b4ed80a7647..77927ff0d15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1548/RaftMessageMonitoringHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1548/RaftMessageMonitoringHandler.java\n@@ -73,8 +73,7 @@ public class RaftMessageMonitoringHandler implements LifecycleMessageHandler<Raf\n     private void logDelay( RaftMessages.ReceivedInstantClusterIdAwareMessage<?> incomingMessage, Instant start )\n     {\n         Duration delay = Duration.between( incomingMessage.receivedAt(), start );\n-\n-        raftMessageDelayMonitor.setDelay( delay );\n+raftMessageDelayMonitor.setDelay( delay );\n     }\n \n     @Override\n@@ -88,4 +87,4 @@ public class RaftMessageMonitoringHandler implements LifecycleMessageHandler<Raf\n     {\n         raftMessageHandler.stop();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
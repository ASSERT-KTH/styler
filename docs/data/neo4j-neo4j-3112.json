{
    "project_name": "neo4j-neo4j",
    "error_id": "3112",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3112/SingleSourceShortestPathBFS.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3112/SingleSourceShortestPathBFS.java\nindex cb21bb26c15..a8d39cacf26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3112/SingleSourceShortestPathBFS.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3112/SingleSourceShortestPathBFS.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.shortestpath;\n \n import java.util.HashMap;\n@@ -34,25 +35,26 @@ import org.neo4j.graphdb.RelationshipType;\n  * Breadth first search to find all shortest uniform paths from a node to all\n  * others. I.e. assume the cost 1 for all relationships. This can be done by\n  * Dijkstra with the right arguments, but this should be faster.\n+ *\n  * @complexity This algorithm runs in O(m) time (not including the case when m\n- *             is zero).\n+ * is zero).\n  */\n public class SingleSourceShortestPathBFS implements\n-    SingleSourceShortestPath<Integer>\n+  SingleSourceShortestPath<Integer>\n {\n     protected Node startNode;\n     protected Direction relationShipDirection;\n     protected RelationshipType[] relationShipTypes;\n-    protected Map<Node,Integer> distances = new HashMap<>();\n-    protected Map<Node,List<Relationship>> predecessors = new HashMap<>();\n+    protected Map<Node, Integer> distances = new HashMap<>();\n+    protected Map<Node, List<Relationship>> predecessors = new HashMap<>();\n     // Limits\n     protected long maxDepth = Long.MAX_VALUE;\n     protected long depth;\n     LinkedList<Node> currentLayer = new LinkedList<>();\n     LinkedList<Node> nextLayer = new LinkedList<>();\n \n-    public SingleSourceShortestPathBFS( Node startNode,\n-        Direction relationShipDirection, RelationshipType... relationShipTypes )\n+    public SingleSourceShortestPathBFS(Node startNode,\n+                                       Direction relationShipDirection, RelationshipType... relationShipTypes)\n     {\n         super();\n         this.startNode = startNode;\n@@ -64,7 +66,7 @@ public class SingleSourceShortestPathBFS implements\n     /**\n      * This sets the maximum depth to scan.\n      */\n-    public void limitDepth( long maxDepth )\n+    public void limitDepth(long maxDepth)\n     {\n         this.maxDepth = maxDepth;\n     }\n@@ -73,7 +75,7 @@ public class SingleSourceShortestPathBFS implements\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public void setStartNode( Node node )\n+    public void setStartNode(Node node)\n     {\n         startNode = node;\n         reset();\n@@ -89,7 +91,7 @@ public class SingleSourceShortestPathBFS implements\n         predecessors = new HashMap<>();\n         currentLayer = new LinkedList<>();\n         nextLayer = new LinkedList<>();\n-        currentLayer.add( startNode );\n+        currentLayer.add(startNode);\n         depth = 0;\n     }\n \n@@ -97,137 +99,138 @@ public class SingleSourceShortestPathBFS implements\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public Integer getCost( Node targetNode )\n+    public Integer getCost(Node targetNode)\n     {\n-        calculate( targetNode );\n-        return distances.get( targetNode );\n+        calculate(targetNode);\n+        return distances.get(targetNode);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<Entity> getPath( Node targetNode )\n+    public List<Entity> getPath(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNode( targetNode, predecessors, true,\n-            false );\n+        return Util.constructSinglePathToNode(targetNode, predecessors, true,\n+          false);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<Node> getPathAsNodes( Node targetNode )\n+    public List<Node> getPathAsNodes(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNodeAsNodes( targetNode, predecessors,\n-            true, false );\n+        return Util.constructSinglePathToNodeAsNodes(targetNode, predecessors,\n+          true, false);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<Relationship> getPathAsRelationships( Node targetNode )\n+    public List<Relationship> getPathAsRelationships(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNodeAsRelationships( targetNode,\n-            predecessors, false );\n+        return Util.constructSinglePathToNodeAsRelationships(targetNode,\n+          predecessors, false);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<List<Entity>> getPaths( Node targetNode )\n+    public List<List<Entity>> getPaths(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructAllPathsToNode( targetNode, predecessors, true,\n-            false );\n+        return Util.constructAllPathsToNode(targetNode, predecessors, true,\n+          false);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<List<Node>> getPathsAsNodes( Node targetNode )\n+    public List<List<Node>> getPathsAsNodes(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructAllPathsToNodeAsNodes( targetNode, predecessors,\n-            true, false );\n+        return Util.constructAllPathsToNodeAsNodes(targetNode, predecessors,\n+          true, false);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<List<Relationship>> getPathsAsRelationships( Node targetNode )\n+    public List<List<Relationship>> getPathsAsRelationships(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructAllPathsToNodeAsRelationships( targetNode,\n-            predecessors, false );\n+        return Util.constructAllPathsToNodeAsRelationships(targetNode,\n+          predecessors, false);\n     }\n \n     /**\n      * Iterator-style \"next\" method.\n+     *\n      * @return True if evaluate was made. False if no more computation could be\n-     *         done.\n+     * done.\n      */\n     public boolean processNextNode()\n     {\n         // finished with current layer? increase depth\n-        if ( currentLayer.isEmpty() )\n+        if (currentLayer.isEmpty())\n         {\n-            if ( nextLayer.isEmpty() )\n+            if (nextLayer.isEmpty())\n             {\n                 return false;\n             }\n@@ -238,26 +241,26 @@ public class SingleSourceShortestPathBFS implements\n         Node node = currentLayer.poll();\n         // Multiple paths to a certain node might make it appear several\n         // times, just process it once\n-        if ( distances.containsKey( node ) )\n+        if (distances.containsKey(node))\n         {\n             return true;\n         }\n         // Put it in distances\n-        distances.put( node, (int) depth );\n+        distances.put(node, (int) depth);\n         // Follow all edges\n-        for ( RelationshipType relationshipType : relationShipTypes )\n+        for (RelationshipType relationshipType : relationShipTypes)\n         {\n-            for ( Relationship relationship : node.getRelationships( relationShipDirection, relationshipType ) )\n+            for (Relationship relationship : node.getRelationships(relationShipDirection, relationshipType))\n             {\n-                Node targetNode = relationship.getOtherNode( node );\n+                Node targetNode = relationship.getOtherNode(node);\n                 // Are we going back into the already finished area?\n                 // That would be more expensive.\n-                if ( !distances.containsKey( targetNode ) )\n+                if (!distances.containsKey(targetNode))\n                 {\n                     // Put this into the next layer and the predecessors\n-                    nextLayer.add( targetNode );\n-                    List<Relationship> targetPreds = predecessors.computeIfAbsent( targetNode, k -> new LinkedList<>() );\n-                    targetPreds.add( relationship );\n+                    nextLayer.add(targetNode);\n+                    List<Relationship> targetPreds = predecessors.computeIfAbsent(targetNode, k -> new LinkedList<>());\n+                    targetPreds.add(relationship);\n                 }\n             }\n         }\n@@ -270,19 +273,19 @@ public class SingleSourceShortestPathBFS implements\n      */\n     public boolean calculate()\n     {\n-        return calculate( null );\n+        return calculate(null);\n     }\n \n     /**\n      * Internal calculate method that will run the calculation until either the\n      * limit is reached or a result has been generated for a given node.\n      */\n-    public boolean calculate( Node targetNode )\n+    public boolean calculate(Node targetNode)\n     {\n-        while ( depth <= maxDepth\n-            && (targetNode == null || !distances.containsKey( targetNode )) )\n+        while (depth <= maxDepth\n+          && (targetNode == null || !distances.containsKey(targetNode)))\n         {\n-            if ( !processNextNode() )\n+            if (!processNextNode())\n             {\n                 return false;\n             }\n@@ -294,18 +297,18 @@ public class SingleSourceShortestPathBFS implements\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<Node> getPredecessorNodes( Node node )\n+    public List<Node> getPredecessorNodes(Node node)\n     {\n         List<Node> result = new LinkedList<>();\n-        List<Relationship> predecessorRelationShips = predecessors.get( node );\n-        if ( predecessorRelationShips == null\n-            || predecessorRelationShips.isEmpty() )\n+        List<Relationship> predecessorRelationShips = predecessors.get(node);\n+        if (predecessorRelationShips == null\n+          || predecessorRelationShips.isEmpty())\n         {\n             return null;\n         }\n-        for ( Relationship relationship : predecessorRelationShips )\n+        for (Relationship relationship : predecessorRelationShips)\n         {\n-            result.add( relationship.getOtherNode( node ) );\n+            result.add(relationship.getOtherNode(node));\n         }\n         return result;\n     }\n@@ -314,7 +317,7 @@ public class SingleSourceShortestPathBFS implements\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public Map<Node,List<Relationship>> getPredecessors()\n+    public Map<Node, List<Relationship>> getPredecessors()\n     {\n         calculate();\n         return predecessors;\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
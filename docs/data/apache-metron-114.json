{
    "project_name": "apache-metron",
    "error_id": "114",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.metron.solr.dao;\n\nimport java.io.IOException;\nimport java.lang.invoke.MethodHandles;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/114/SolrDao.java\nindex ee541eb13fe..51cdd131a4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/114/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/114/SolrDao.java\nindex ee541eb13fe..b1291142842 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/114/SolrDao.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n@@ -58,11 +59,11 @@ public class SolrDao implements IndexDao {\n   private AccessConfig accessConfig;\n \n   protected SolrDao(SolrClient client,\n-      AccessConfig config,\n-      SolrSearchDao solrSearchDao,\n-      SolrUpdateDao solrUpdateDao,\n-      SolrRetrieveLatestDao retrieveLatestDao,\n-      SolrColumnMetadataDao solrColumnMetadataDao) {\n+                    AccessConfig config,\n+                    SolrSearchDao solrSearchDao,\n+                    SolrUpdateDao solrUpdateDao,\n+                    SolrRetrieveLatestDao retrieveLatestDao,\n+                    SolrColumnMetadataDao solrColumnMetadataDao) {\n     this.client = client;\n     this.accessConfig = config;\n     this.solrSearchDao = solrSearchDao;\n@@ -124,7 +125,7 @@ public class SolrDao implements IndexDao {\n \n   @Override\n   public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n+                    Optional<Long> timestamp)\n       throws OriginalNotFoundException, IOException {\n     solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/114/SolrDao.java\nindex ee541eb13fe..5d99bfcac73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/114/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n@@ -56,8 +57,7 @@ public class SolrDao implements IndexDao {\n   private ColumnMetadataDao solrColumnMetadataDao;\n \n   private AccessConfig accessConfig;\n-\n-  protected SolrDao(SolrClient client,\n+protected SolrDao(SolrClient client,\n       AccessConfig config,\n       SolrSearchDao solrSearchDao,\n       SolrUpdateDao solrUpdateDao,\n@@ -123,10 +123,8 @@ public class SolrDao implements IndexDao {\n   }\n \n   @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n-    solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n+  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n+  solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n \n   @Override\n@@ -154,4 +152,4 @@ public class SolrDao implements IndexDao {\n   public SolrSearchDao getSolrUpdateDao() {\n     return solrSearchDao;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/114/SolrDao.java\nindex ee541eb13fe..15ce33e2fe9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/114/SolrDao.java\n@@ -46,23 +46,18 @@ import org.slf4j.LoggerFactory;\n public class SolrDao implements IndexDao {\n \n   private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n   public static final String ROOT_FIELD = \"_root_\";\n-  public static final String VERSION_FIELD = \"_version_\";\n \n+  public static final String VERSION_FIELD = \"_version_\";\n   private transient SolrClient client;\n   private SolrSearchDao solrSearchDao;\n   private SolrUpdateDao solrUpdateDao;\n   private SolrRetrieveLatestDao solrRetrieveLatestDao;\n   private ColumnMetadataDao solrColumnMetadataDao;\n-\n   private AccessConfig accessConfig;\n \n-  protected SolrDao(SolrClient client,\n-      AccessConfig config,\n-      SolrSearchDao solrSearchDao,\n-      SolrUpdateDao solrUpdateDao,\n-      SolrRetrieveLatestDao retrieveLatestDao,\n-      SolrColumnMetadataDao solrColumnMetadataDao) {\n+  protected SolrDao(SolrClient client, AccessConfig config, SolrSearchDao solrSearchDao, SolrUpdateDao solrUpdateDao, SolrRetrieveLatestDao retrieveLatestDao, SolrColumnMetadataDao solrColumnMetadataDao) {\n     this.client = client;\n     this.accessConfig = config;\n     this.solrSearchDao = solrSearchDao;\n@@ -123,9 +118,7 @@ public class SolrDao implements IndexDao {\n   }\n \n   @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n+  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n     solrUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n \n@@ -154,4 +147,4 @@ public class SolrDao implements IndexDao {\n   public SolrSearchDao getSolrUpdateDao() {\n     return solrSearchDao;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/114/SolrDao.java\nindex ee541eb13fe..51cdd131a4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/114/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/114/SolrDao.java\nindex ee541eb13fe..51cdd131a4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/114/SolrDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/114/SolrDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
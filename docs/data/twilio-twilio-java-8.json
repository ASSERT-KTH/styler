{
    "project_name": "twilio-twilio-java",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "168",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/8/SimReader.java\nindex 1b98c42ee39..1028ca74d32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/8/SimReader.java\n@@ -165,7 +165,7 @@ public class SimReader extends Reader<Sim> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/8/SimReader.java\nindex 1b98c42ee39..b5bb4029f04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/8/SimReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.supersim.v1;\n@@ -165,7 +165,7 @@ public class SimReader extends Reader<Sim> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/8/SimReader.java\nindex 1b98c42ee39..041d1522556 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/8/SimReader.java\n@@ -23,6 +23,7 @@ import com.twilio.rest.Domains;\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class SimReader extends Reader<Sim> {\n     private Sim.Status status;\n     private String fleet;\n@@ -35,6 +36,7 @@ public class SimReader extends Reader<Sim> {\n      * @param status The status of the Sim resources to read\n      * @return this\n      */\n+\n     public SimReader setStatus(final Sim.Status status) {\n         this.status = status;\n         return this;\n@@ -47,6 +49,8 @@ public class SimReader extends Reader<Sim> {\n      *              assigned\n      * @return this\n      */\n+\n+\n     public SimReader setFleet(final String fleet) {\n         this.fleet = fleet;\n         return this;\n@@ -61,6 +65,8 @@ public class SimReader extends Reader<Sim> {\n      * @param iccid The ICCID associated with a Super SIM to filter the list by\n      * @return this\n      */\n+\n+\n     public SimReader setIccid(final String iccid) {\n         this.iccid = iccid;\n         return this;\n@@ -72,6 +78,7 @@ public class SimReader extends Reader<Sim> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sim ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Sim> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -83,14 +90,11 @@ public class SimReader extends Reader<Sim> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sim ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Sim> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.SUPERSIM.toString(),\n-            \"/v1/Sims\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.SUPERSIM.toString(), \"/v1/Sims\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -103,14 +107,12 @@ public class SimReader extends Reader<Sim> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sim ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Sim> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Sim> getPage(final String targetUrl,\n+                             final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -121,13 +123,11 @@ public class SimReader extends Reader<Sim> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Sim> nextPage(final Page<Sim> page,\n                               final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -138,13 +138,11 @@ public class SimReader extends Reader<Sim> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Sim> previousPage(final Page<Sim> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -155,9 +153,11 @@ public class SimReader extends Reader<Sim> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Sim> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Sim> pageForRequest(final TwilioRestClient client,\n+                                     final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Sim read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -165,15 +165,11 @@ public class SimReader extends Reader<Sim> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"sims\",\n-            response.getContent(),\n-            Sim.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"sims\", response.getContent(), Sim.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -181,6 +177,8 @@ public class SimReader extends Reader<Sim> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/8/SimReader.java\nindex 1b98c42ee39..1028ca74d32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/8/SimReader.java\n@@ -165,7 +165,7 @@ public class SimReader extends Reader<Sim> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/8/SimReader.java\nindex 1b98c42ee39..a145bf7ebed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/8/SimReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/8/SimReader.java\n@@ -165,7 +165,8 @@ public class SimReader extends Reader<Sim> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
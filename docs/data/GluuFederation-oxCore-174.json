{
    "project_name": "GluuFederation-oxCore",
    "error_id": "174",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 192).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                if (StringUtils.isNotBlank(redisConfiguration.getSslTrustStoreFilePath())) {\n                    pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true,\n                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n                } else {\n                    pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true);\n                }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "139",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "158",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "46",
                    "column": "160",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "189",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "46",
                    "column": "192",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' at column 193 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "194",
                    "severity": "error",
                    "message": "'else' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/174/RedisStandaloneProvider.java\nindex 5ff54bc1f44..42c8f71da82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/174/RedisStandaloneProvider.java\n@@ -43,8 +43,7 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             if (redisConfiguration.getUseSsl()) {\n                 if (StringUtils.isNotBlank(redisConfiguration.getSslTrustStoreFilePath())) {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true,\n-                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n-                } else {\n+                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())),new SSLParameters (),new DefaultHostnameVerifier ());}else {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true);\n                 }\n             } else {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/174/RedisStandaloneProvider.java\nindex 5ff54bc1f44..2dbe857a544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/174/RedisStandaloneProvider.java\n@@ -43,7 +43,8 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             if (redisConfiguration.getUseSsl()) {\n                 if (StringUtils.isNotBlank(redisConfiguration.getSslTrustStoreFilePath())) {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true,\n-                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n+                        RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())),\n+                        new SSLParameters(), new DefaultHostnameVerifier());\n                 } else {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true);\n                 }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/174/RedisStandaloneProvider.java\nindex 5ff54bc1f44..498ca8ed79d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/174/RedisStandaloneProvider.java\n@@ -135,4 +135,4 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             jedis.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/174/RedisStandaloneProvider.java\nindex 5ff54bc1f44..9a1debd1d96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/174/RedisStandaloneProvider.java\n@@ -9,7 +9,6 @@ import redis.clients.jedis.HostAndPort;\n import redis.clients.jedis.Jedis;\n import redis.clients.jedis.JedisPool;\n import redis.clients.jedis.JedisPoolConfig;\n-\n import javax.annotation.PreDestroy;\n import javax.net.ssl.SSLParameters;\n import java.io.File;\n@@ -20,10 +19,11 @@ import java.io.Serializable;\n  *\n  * @author yuriyz on 02/23/2017.\n  */\n+\n+\n public class RedisStandaloneProvider extends AbstractRedisProvider {\n \n     private static final Logger LOG = LoggerFactory.getLogger(RedisStandaloneProvider.class);\n-\n     private JedisPool pool;\n \n     public RedisStandaloneProvider(RedisConfiguration redisConfiguratio) {\n@@ -32,18 +32,15 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n \n     public void create() {\n         LOG.debug(\"Starting RedisStandaloneProvider ...\");\n-\n         try {\n             JedisPoolConfig poolConfig = new JedisPoolConfig();\n             poolConfig.setMaxTotal(1000);\n             poolConfig.setMinIdle(2);\n \n             HostAndPort hostAndPort = RedisClusterProvider.hosts(redisConfiguration.getServers()).iterator().next();\n-\n             if (redisConfiguration.getUseSsl()) {\n                 if (StringUtils.isNotBlank(redisConfiguration.getSslTrustStoreFilePath())) {\n-                    pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true,\n-                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n+                    pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true, RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n                 } else {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true);\n                 }\n@@ -61,9 +58,7 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n     @PreDestroy\n     public void destroy() {\n         LOG.debug(\"Destroying RedisStandaloneProvider\");\n-\n         pool.close();\n-\n         LOG.debug(\"Destroyed RedisStandaloneProvider\");\n     }\n \n@@ -82,6 +77,7 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             if (value != null && value.length > 0) {\n                 deserialized = SerializationUtils.deserialize(value);\n             }\n+\n             return deserialized;\n         } finally {\n             jedis.close();\n@@ -93,7 +89,9 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n         Jedis jedis = pool.getResource();\n         setAuthIfNeeded(jedis);\n         try {\n-            String status = jedis.setex(key.getBytes(), expirationInSeconds, SerializationUtils.serialize((Serializable) object));\n+            String status = jedis.setex(key.getBytes(),\n+                expirationInSeconds,\n+                    SerializationUtils.serialize((Serializable) object));\n             LOG.trace(\"put - key: \" + key + \", status: \" + status);\n         } finally {\n             jedis.close();\n@@ -135,4 +133,4 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             jedis.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "139",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "158",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "46",
                    "column": "160",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "189",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "46",
                    "column": "192",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' at column 193 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "193",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "194",
                    "severity": "error",
                    "message": "'else' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/174/RedisStandaloneProvider.java\nindex 5ff54bc1f44..42c8f71da82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/174/RedisStandaloneProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/174/RedisStandaloneProvider.java\n@@ -43,8 +43,7 @@ public class RedisStandaloneProvider extends AbstractRedisProvider {\n             if (redisConfiguration.getUseSsl()) {\n                 if (StringUtils.isNotBlank(redisConfiguration.getSslTrustStoreFilePath())) {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true,\n-                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n-                } else {\n+                            RedisProviderFactory.createTrustStoreSslSocketFactory(new File(redisConfiguration.getSslTrustStoreFilePath())),new SSLParameters (),new DefaultHostnameVerifier ());}else {\n                     pool = new JedisPool(poolConfig, hostAndPort.getHost(), hostAndPort.getPort(), true);\n                 }\n             } else {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "warning",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "   * @return a prebuild instance\n   */\n  public static KeyringConfigCallback withPassword(String passphrase) {\n    requireNonNull(passphrase, \"passphrase must not be null\");\n\n    return withPassword(passphrase.toCharArray());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..ed4e78d5f81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/13/KeyringConfigCallbacks.java\n@@ -29,6 +29,7 @@ public final class KeyringConfigCallbacks {\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n+\n   public static KeyringConfigCallback withPassword(String passphrase) {\n     requireNonNull(passphrase, \"passphrase must not be null\");\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..95aa33aca30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/13/KeyringConfigCallbacks.java\n@@ -17,6 +17,7 @@ public final class KeyringConfigCallbacks {\n \n   /**\n    * Use the passed passphrase to decrypt every key encountered.\n+   *\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n@@ -24,8 +25,10 @@ public final class KeyringConfigCallbacks {\n   public static KeyringConfigCallback withPassword(char[] passphrase) {\n     return new StaticPasswordKeyringConfigCallback(passphrase);\n   }\n+\n   /**\n    * Use the passed passphrase to decrypt every key encountered.\n+   *\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..c1f290af1f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/13/KeyringConfigCallbacks.java\n@@ -24,7 +24,8 @@ public final class KeyringConfigCallbacks {\n   public static KeyringConfigCallback withPassword(char[] passphrase) {\n     return new StaticPasswordKeyringConfigCallback(passphrase);\n   }\n-  /**\n+\n+/**\n    * Use the passed passphrase to decrypt every key encountered.\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n@@ -55,4 +56,4 @@ public final class KeyringConfigCallbacks {\n \n     return new StaticPasswordFromMapKeyringConfigCallback(mapSourceKeyIdToPassphrase);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..02af1a5df99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/13/KeyringConfigCallbacks.java\n@@ -1,17 +1,20 @@\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.callbacks;\n \n import static java.util.Objects.requireNonNull;\n-\n import java.util.Map;\n \n /**\n  * Factory for convenience implementations of KeyringConfigCallback.\n  * {@link KeyringConfigCallback}\n  */\n-@SuppressWarnings({\"PMD.ClassNamingConventions\"})\n-public final class KeyringConfigCallbacks {\n+\n+\n+@SuppressWarnings({\n+  \"PMD.ClassNamingConventions\"}) public final class KeyringConfigCallbacks {\n \n   // no construction\n+\n+\n   private KeyringConfigCallbacks() {\n   }\n \n@@ -20,6 +23,7 @@ public final class KeyringConfigCallbacks {\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n+\n   @SuppressWarnings(\"PMD.UseVarargs\")\n   public static KeyringConfigCallback withPassword(char[] passphrase) {\n     return new StaticPasswordKeyringConfigCallback(passphrase);\n@@ -29,9 +33,9 @@ public final class KeyringConfigCallbacks {\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n+\n   public static KeyringConfigCallback withPassword(String passphrase) {\n     requireNonNull(passphrase, \"passphrase must not be null\");\n-\n     return withPassword(passphrase.toCharArray());\n   }\n \n@@ -40,6 +44,7 @@ public final class KeyringConfigCallbacks {\n    *\n    * @return a prebuild instance\n    */\n+\n   public static KeyringConfigCallback withUnprotectedKeys() {\n     return new UnprotectedKeysKeyringConfigCallback();\n   }\n@@ -49,10 +54,9 @@ public final class KeyringConfigCallbacks {\n    *\n    * @return a prebuild instance\n    */\n-  public static KeyringConfigCallback withPasswordsFromMap(\n-      Map<Long, char[]> mapSourceKeyIdToPassphrase) {\n-    requireNonNull(mapSourceKeyIdToPassphrase, \"mapSourceKeyIdToPassphrase must not be null\");\n \n+  public static KeyringConfigCallback withPasswordsFromMap(Map<Long, char[]> mapSourceKeyIdToPassphrase) {\n+    requireNonNull(mapSourceKeyIdToPassphrase, \"mapSourceKeyIdToPassphrase must not be null\");\n     return new StaticPasswordFromMapKeyringConfigCallback(mapSourceKeyIdToPassphrase);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..ed4e78d5f81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/13/KeyringConfigCallbacks.java\n@@ -29,6 +29,7 @@ public final class KeyringConfigCallbacks {\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n+\n   public static KeyringConfigCallback withPassword(String passphrase) {\n     requireNonNull(passphrase, \"passphrase must not be null\");\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/13/KeyringConfigCallbacks.java\nindex 8c4de7d8b7b..ed4e78d5f81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfigCallbacks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/13/KeyringConfigCallbacks.java\n@@ -29,6 +29,7 @@ public final class KeyringConfigCallbacks {\n    * @param passphrase passphrase to use\n    * @return a prebuild instance\n    */\n+\n   public static KeyringConfigCallback withPassword(String passphrase) {\n     requireNonNull(passphrase, \"passphrase must not be null\");\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
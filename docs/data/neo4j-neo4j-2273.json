{
    "project_name": "neo4j-neo4j",
    "error_id": "2273",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2273/TransactionHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2273/TransactionHandle.java\nindex 0b7d72ccda7..f0d7976e3c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2273/TransactionHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2273/TransactionHandle.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher;\n \n import java.net.URI;\n@@ -35,18 +36,18 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n /**\n  * Encapsulates executing statements in a transaction, committing the transaction, or rolling it back.\n- *\n+ * <p>\n  * Constructing a {@link TransactionHandle} does not immediately ask the kernel to create a\n  * {@link org.neo4j.kernel.api.KernelTransaction}; instead a {@link org.neo4j.kernel.api.KernelTransaction} is\n  * only created when the first statements need to be executed.\n- *\n+ * <p>\n  * At the end of each statement-executing method, the {@link org.neo4j.kernel.api.KernelTransaction} is either\n  * suspended (ready to be resumed by a later operation), or committed, or rolled back.\n- *\n+ * <p>\n  * If you acquire instances of this class from {@link TransactionHandleRegistry}, it will prevent concurrent access to\n  * the same instance. Therefore the implementation assumes that a single instance will only be accessed from\n  * a single thread.\n- *\n+ * <p>\n  * All of the public methods on this class are \"single-shot\"; once you have called one method, the handle returns\n  * itself\n  * to the registry. If you want to use it again, you'll need to acquire it back from the registry to ensure exclusive\n@@ -66,9 +67,9 @@ public class TransactionHandle implements TransactionTerminationHandle\n     private TransitionalTxManagementKernelTransaction context;\n     private long expirationTimestamp = -1;\n \n-    TransactionHandle( GraphDatabaseAPI databaseAPI, QueryExecutionEngine engine,\n-                       TransactionRegistry registry, TransactionUriScheme uriScheme, boolean implicitTransaction, LoginContext loginContext,\n-                       ClientConnectionInfo connectionInfo, long customTransactionTimeoutMillis )\n+    TransactionHandle(GraphDatabaseAPI databaseAPI, QueryExecutionEngine engine,\n+                      TransactionRegistry registry, TransactionUriScheme uriScheme, boolean implicitTransaction, LoginContext loginContext,\n+                      ClientConnectionInfo connectionInfo, long customTransactionTimeoutMillis)\n     {\n         this.databaseAPI = databaseAPI;\n         this.engine = engine;\n@@ -78,12 +79,12 @@ public class TransactionHandle implements TransactionTerminationHandle\n         this.loginContext = loginContext;\n         this.connectionInfo = connectionInfo;\n         this.customTransactionTimeoutMillis = customTransactionTimeoutMillis;\n-        this.id = registry.begin( this );\n+        this.id = registry.begin(this);\n     }\n \n     URI uri()\n     {\n-        return uriScheme.txUri( id );\n+        return uriScheme.txUri(id);\n     }\n \n     boolean isImplicit()\n@@ -104,16 +105,16 @@ public class TransactionHandle implements TransactionTerminationHandle\n     @Override\n     public boolean terminate()\n     {\n-        if ( context != null )\n+        if (context != null)\n         {\n             context.terminate();\n         }\n         return true;\n     }\n \n-    boolean isPeriodicCommit( String statement )\n+    boolean isPeriodicCommit(String statement)\n     {\n-        return engine.isPeriodicCommit( statement );\n+        return engine.isPeriodicCommit(statement);\n     }\n \n     void closeTransactionForPeriodicCommit()\n@@ -128,27 +129,27 @@ public class TransactionHandle implements TransactionTerminationHandle\n \n     void ensureActiveTransaction()\n     {\n-        if ( context == null )\n+        if (context == null)\n         {\n-            context = new TransitionalTxManagementKernelTransaction( databaseAPI, type, loginContext, connectionInfo, customTransactionTimeoutMillis );\n+            context = new TransitionalTxManagementKernelTransaction(databaseAPI, type, loginContext, connectionInfo, customTransactionTimeoutMillis);\n         }\n     }\n \n-    Result executeStatement( Statement statement, boolean periodicCommit )\n+    Result executeStatement(Statement statement, boolean periodicCommit)\n     {\n-        if ( periodicCommit )\n+        if (periodicCommit)\n         {\n             Result result;\n-            try ( Transaction transaction = databaseAPI\n-                    .beginTransaction( Type.IMPLICIT, loginContext, connectionInfo, customTransactionTimeoutMillis,\n-                    MILLISECONDS ) )\n+            try (Transaction transaction = databaseAPI\n+              .beginTransaction(Type.IMPLICIT, loginContext, connectionInfo, customTransactionTimeoutMillis,\n+                MILLISECONDS))\n             {\n-                result = transaction.execute( statement.getStatement(), statement.getParameters() );\n+                result = transaction.execute(statement.getStatement(), statement.getParameters());\n                 transaction.commit();\n             }\n             return result;\n         }\n-        return context.getInternalTransaction().execute( statement.getStatement(), statement.getParameters() );\n+        return context.getInternalTransaction().execute(statement.getStatement(), statement.getParameters());\n     }\n \n     void forceRollback()\n@@ -158,7 +159,7 @@ public class TransactionHandle implements TransactionTerminationHandle\n \n     void suspendTransaction()\n     {\n-        expirationTimestamp = registry.release( id, this );\n+        expirationTimestamp = registry.release(id, this);\n     }\n \n     void commit()\n@@ -166,10 +167,9 @@ public class TransactionHandle implements TransactionTerminationHandle\n         try\n         {\n             context.commit();\n-        }\n-        finally\n+        } finally\n         {\n-            registry.forget( id );\n+            registry.forget(id);\n         }\n     }\n \n@@ -178,10 +178,9 @@ public class TransactionHandle implements TransactionTerminationHandle\n         try\n         {\n             context.rollback();\n-        }\n-        finally\n+        } finally\n         {\n-            registry.forget( id );\n+            registry.forget(id);\n         }\n     }\n \n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2273/TransactionHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2273/TransactionHandle.java\nindex 0b7d72ccda7..47ab70df376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2273/TransactionHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2273/TransactionHandle.java\n@@ -194,4 +194,4 @@ public class TransactionHandle implements TransactionTerminationHandle\n     {\n         return context;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "80",
    "information": {
        "errors": [
            {
                "line": "136",
                "severity": "warning",
                "message": "'catch' child has incorrect indentation level 7, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        computeCredential = getComputeCredential();\n      } catch (GeneralSecurityException e) {\n       throw new IOException(e);\n      }\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/80/AuthCredentials.java\nindex 13d91836ae4..eaf5e6849bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/80/AuthCredentials.java\n@@ -133,8 +133,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/80/AuthCredentials.java\nindex 13d91836ae4..1b52140dd7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/80/AuthCredentials.java\n@@ -53,7 +53,7 @@ public abstract class AuthCredentials implements Serializable {\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return new AppIdentityCredential(scopes);\n     }\n \n@@ -133,13 +133,13 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n+        throw new IOException(e);\n       }\n     }\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return computeCredential;\n     }\n   }\n@@ -156,18 +156,18 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n     protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+                                                            Set<String> scopes) {\n       return new HttpCredentialsAdapter(googleCredentials);\n     }\n   }\n \n   protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-      Set<String> scopes);\n+                                                                   Set<String> scopes);\n \n   public static AuthCredentials createForAppEngine() {\n     return AppEngineAuthCredentials.INSTANCE;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/80/AuthCredentials.java\nindex 13d91836ae4..8d4517940ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/80/AuthCredentials.java\n@@ -133,8 +133,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+  throw new IOException(e);\n+  }\n     }\n \n     @Override\n@@ -156,7 +156,7 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n@@ -210,4 +210,4 @@ public abstract class AuthCredentials implements Serializable {\n     credential.refreshToken();\n     return credential;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/80/AuthCredentials.java\nindex 13d91836ae4..05e207ececa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/80/AuthCredentials.java\n@@ -28,7 +28,6 @@ import com.google.api.client.http.javanet.NetHttpTransport;\n import com.google.api.client.json.jackson.JacksonFactory;\n import com.google.auth.http.HttpCredentialsAdapter;\n import com.google.auth.oauth2.GoogleCredentials;\n-\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectStreamException;\n@@ -41,19 +40,18 @@ import java.util.Set;\n /**\n  * Credentials for accessing Google Cloud services.\n  */\n+\n+\n public abstract class AuthCredentials implements Serializable {\n \n   private static final long serialVersionUID = 236297804453464604L;\n-\n   private static class AppEngineAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = 7931300552744202954L;\n-\n     private static final AuthCredentials INSTANCE = new AppEngineAuthCredentials();\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return new AppIdentityCredential(scopes);\n     }\n \n@@ -67,7 +65,6 @@ public abstract class AuthCredentials implements Serializable {\n     private static final long serialVersionUID = 8007708734318445901L;\n     private final String account;\n     private final PrivateKey privateKey;\n-\n     private static final AuthCredentials NO_CREDENTIALS = new ServiceAccountAuthCredentials();\n \n     ServiceAccountAuthCredentials(String account, PrivateKey privateKey) {\n@@ -81,11 +78,8 @@ public abstract class AuthCredentials implements Serializable {\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(\n-        HttpTransport transport, Set<String> scopes) {\n-      GoogleCredential.Builder builder = new GoogleCredential.Builder()\n-          .setTransport(transport)\n-          .setJsonFactory(new JacksonFactory());\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n+      GoogleCredential.Builder builder = new GoogleCredential.Builder().setTransport(transport).setJsonFactory(new JacksonFactory());\n       if (privateKey != null) {\n         builder.setServiceAccountPrivateKey(privateKey);\n         builder.setServiceAccountId(account);\n@@ -114,14 +108,13 @@ public abstract class AuthCredentials implements Serializable {\n       }\n       ServiceAccountAuthCredentials other = (ServiceAccountAuthCredentials) obj;\n       return Objects.equals(account, other.account)\n-          && Objects.equals(privateKey, other.privateKey);\n+        && Objects.equals(privateKey, other.privateKey);\n     }\n   }\n \n   private static class ComputeEngineAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = -5217355402127260144L;\n-\n     private transient ComputeCredential computeCredential;\n \n     ComputeEngineAuthCredentials() throws IOException, GeneralSecurityException {\n@@ -133,13 +126,12 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n+        throw new IOException(e);\n       }\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return computeCredential;\n     }\n   }\n@@ -147,7 +139,6 @@ public abstract class AuthCredentials implements Serializable {\n   private static class ApplicationDefaultAuthCredentials extends AuthCredentials {\n \n     private static final long serialVersionUID = -8306873864136099893L;\n-\n     private transient GoogleCredentials googleCredentials;\n \n     ApplicationDefaultAuthCredentials() throws IOException {\n@@ -156,25 +147,22 @@ public abstract class AuthCredentials implements Serializable {\n \n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n       in.defaultReadObject();\n-      googleCredentials =  GoogleCredentials.getApplicationDefault();\n+      googleCredentials = GoogleCredentials.getApplicationDefault();\n     }\n \n     @Override\n-    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-        Set<String> scopes) {\n+    protected HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes) {\n       return new HttpCredentialsAdapter(googleCredentials);\n     }\n   }\n \n-  protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport,\n-      Set<String> scopes);\n+  protected abstract HttpRequestInitializer httpRequestInitializer(HttpTransport transport, Set<String> scopes);\n \n   public static AuthCredentials createForAppEngine() {\n     return AppEngineAuthCredentials.INSTANCE;\n   }\n \n-  public static AuthCredentials createForComputeEngine()\n-      throws IOException, GeneralSecurityException {\n+  public static AuthCredentials createForComputeEngine() throws IOException, GeneralSecurityException {\n     return new ComputeEngineAuthCredentials();\n   }\n \n@@ -190,6 +178,7 @@ public abstract class AuthCredentials implements Serializable {\n    * @return the credentials instance.\n    * @throws IOException if the credentials cannot be created in the current environment.\n    */\n+\n   public static AuthCredentials createApplicationDefaults() throws IOException {\n     return new ApplicationDefaultAuthCredentials();\n   }\n@@ -210,4 +199,4 @@ public abstract class AuthCredentials implements Serializable {\n     credential.refreshToken();\n     return credential;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/80/AuthCredentials.java\nindex 13d91836ae4..eaf5e6849bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/80/AuthCredentials.java\n@@ -133,8 +133,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/80/AuthCredentials.java\nindex 13d91836ae4..eaf5e6849bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/80/AuthCredentials.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/80/AuthCredentials.java\n@@ -133,8 +133,8 @@ public abstract class AuthCredentials implements Serializable {\n       try {\n         computeCredential = getComputeCredential();\n       } catch (GeneralSecurityException e) {\n-       throw new IOException(e);\n-      }\n+        throw new IOException(e);\n+    }\n     }\n \n     @Override\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
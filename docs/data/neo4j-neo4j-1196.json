{
    "project_name": "neo4j-neo4j",
    "error_id": "1196",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1196/ShiroAuthenticationInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1196/ShiroAuthenticationInfo.java\nindex 9a764984122..a4b4683b228 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1196/ShiroAuthenticationInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1196/ShiroAuthenticationInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import org.apache.shiro.authc.AuthenticationInfo;\n@@ -42,19 +43,19 @@ public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n     {\n         super();\n         this.authenticationResult = AuthenticationResult.FAILURE;\n-        this.throwables = new ArrayList<>( 1 );\n+        this.throwables = new ArrayList<>(1);\n     }\n \n-    public ShiroAuthenticationInfo( Object principal, String realmName, AuthenticationResult authenticationResult )\n+    public ShiroAuthenticationInfo(Object principal, String realmName, AuthenticationResult authenticationResult)\n     {\n-        super( principal, null, realmName );\n+        super(principal, null, realmName);\n         this.authenticationResult = authenticationResult;\n     }\n \n-    public ShiroAuthenticationInfo( Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n-            String realmName, AuthenticationResult authenticationResult )\n+    public ShiroAuthenticationInfo(Object principal, Object hashedCredentials, ByteSource credentialsSalt,\n+                                   String realmName, AuthenticationResult authenticationResult)\n     {\n-        super( principal, hashedCredentials, credentialsSalt, realmName );\n+        super(principal, hashedCredentials, credentialsSalt, realmName);\n         this.authenticationResult = authenticationResult;\n     }\n \n@@ -63,9 +64,9 @@ public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n         return authenticationResult;\n     }\n \n-    public void addThrowable( Throwable t )\n+    public void addThrowable(Throwable t)\n     {\n-        throwables.add( t );\n+        throwables.add(t);\n     }\n \n     public List<Throwable> getThrowables()\n@@ -74,39 +75,38 @@ public class ShiroAuthenticationInfo extends SimpleAuthenticationInfo\n     }\n \n     @Override\n-    public void merge( AuthenticationInfo info )\n+    public void merge(AuthenticationInfo info)\n     {\n-        if ( info == null || info.getPrincipals() == null || info.getPrincipals().isEmpty() )\n+        if (info == null || info.getPrincipals() == null || info.getPrincipals().isEmpty())\n         {\n             return;\n         }\n \n-        super.merge( info );\n+        super.merge(info);\n \n-        if ( info instanceof ShiroAuthenticationInfo )\n+        if (info instanceof ShiroAuthenticationInfo)\n         {\n-            authenticationResult = mergeAuthenticationResult( authenticationResult,\n-                    ((ShiroAuthenticationInfo) info).getAuthenticationResult() );\n-        }\n-        else\n+            authenticationResult = mergeAuthenticationResult(authenticationResult,\n+              ((ShiroAuthenticationInfo) info).getAuthenticationResult());\n+        } else\n         {\n             // If we get here (which means no AuthenticationException or UnknownAccountException was thrown)\n             // it means the realm that provided the info was able to authenticate the subject,\n             // so we claim the result to be an implicit success\n-            authenticationResult = mergeAuthenticationResult( authenticationResult, AuthenticationResult.SUCCESS );\n+            authenticationResult = mergeAuthenticationResult(authenticationResult, AuthenticationResult.SUCCESS);\n         }\n     }\n \n     private static final AuthenticationResult[][] MERGE_MATRIX = {\n-        /* v result | new res >   SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED */\n-        /* SUCCESS           */ { SUCCESS,                  SUCCESS,                  SUCCESS          ,        PASSWORD_CHANGE_REQUIRED },\n-        /* FAILURE           */ { SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* TOO_MANY_ATTEMPTS */ { SUCCESS,                  TOO_MANY_ATTEMPTS,        TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED },\n-        /* PASSWORD_CHANGE.. */ { PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED }\n+      /* v result | new res >   SUCCESS,                  FAILURE,                  TOO_MANY_ATTEMPTS,        PASSWORD_CHANGE_REQUIRED */\n+      /* SUCCESS           */ {SUCCESS, SUCCESS, SUCCESS, PASSWORD_CHANGE_REQUIRED},\n+      /* FAILURE           */ {SUCCESS, FAILURE, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED},\n+      /* TOO_MANY_ATTEMPTS */ {SUCCESS, TOO_MANY_ATTEMPTS, TOO_MANY_ATTEMPTS, PASSWORD_CHANGE_REQUIRED},\n+      /* PASSWORD_CHANGE.. */ {PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED, PASSWORD_CHANGE_REQUIRED}\n     };\n \n     private static AuthenticationResult mergeAuthenticationResult(\n-            AuthenticationResult result, AuthenticationResult newResult )\n+      AuthenticationResult result, AuthenticationResult newResult)\n     {\n         return MERGE_MATRIX[result.ordinal()][newResult.ordinal()];\n     }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
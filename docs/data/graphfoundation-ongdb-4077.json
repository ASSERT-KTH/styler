{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4077",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "284",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "290",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "315",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "319",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "331",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "334",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "376",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "381",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4077/FullTxData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4077/FullTxData.java\nindex 214cf427fc1..b2d4f9a8ad9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4077/FullTxData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4077/FullTxData.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.document.Document;\n@@ -59,365 +60,348 @@ import static org.neo4j.index.impl.lucene.explicit.LuceneExplicitIndex.KEY_DOC_I\n \n class FullTxData extends TxData\n {\n-    /*\n-     * The concept of orphan exists to find entities when querying where the transaction state\n-     * (i.e. a FullTxData object) has seen removed entities w/o key and potentially also w/o value.\n-     * A TxData instance receiving \"add\" calls with null key/value is an instance used to track removals.\n-     * A Lucene document storing state about e.g. {@code index.remove( myNode, \"name\" )}\n-     * <pre>\n-     * {\n-     *     __all__: \"name\"\n-     * }\n-     * </pre>\n-     *\n-     * A Lucene document storing state about e.g. {@code index.remove( myNode )}\n-     * <pre>\n-     * {\n-     *     __all__: \"1\"\n-     * }\n-     * where queries would (if there are any orphans at all stored) include the \"all orphans\" value (\"1\") as\n-     * well as any specific key which is pulled out from the incoming query.\n-     */\n-    private static final String ORPHANS_KEY = \"__all__\";\n-    /**\n-     * When querying we need to distinguish between documents coming from the store and documents\n-     * coming from transaction state. A field with this key is put on all documents in transaction state.\n-     */\n-    public static final String TX_STATE_KEY = \"__tx_state__\";\n-    private static final byte[] TX_STATE_VALUE = new byte[] {1};\n-    private static final String ORPHANS_VALUE = \"1\";\n-\n-    private Directory directory;\n-    private IndexWriter writer;\n-    private boolean modified;\n-    private IndexReader reader;\n-    private IndexSearcher searcher;\n-    private final PrimitiveLongObjectMap<Document> cachedDocuments = Primitive.longObjectMap();\n-    private Set<String> orphans;\n-\n-    FullTxData( LuceneExplicitIndex index )\n+  /*\n+   * The concept of orphan exists to find entities when querying where the transaction state\n+   * (i.e. a FullTxData object) has seen removed entities w/o key and potentially also w/o value.\n+   * A TxData instance receiving \"add\" calls with null key/value is an instance used to track removals.\n+   * A Lucene document storing state about e.g. {@code index.remove( myNode, \"name\" )}\n+   * <pre>\n+   * {\n+   *     __all__: \"name\"\n+   * }\n+   * </pre>\n+   *\n+   * A Lucene document storing state about e.g. {@code index.remove( myNode )}\n+   * <pre>\n+   * {\n+   *     __all__: \"1\"\n+   * }\n+   * where queries would (if there are any orphans at all stored) include the \"all orphans\" value (\"1\") as\n+   * well as any specific key which is pulled out from the incoming query.\n+   */\n+  private static final String ORPHANS_KEY = \"__all__\";\n+  /**\n+   * When querying we need to distinguish between documents coming from the store and documents\n+   * coming from transaction state. A field with this key is put on all documents in transaction state.\n+   */\n+  public static final String TX_STATE_KEY = \"__tx_state__\";\n+  private static final byte[] TX_STATE_VALUE = new byte[] {1};\n+  private static final String ORPHANS_VALUE = \"1\";\n+\n+  private Directory directory;\n+  private IndexWriter writer;\n+  private boolean modified;\n+  private IndexReader reader;\n+  private IndexSearcher searcher;\n+  private final PrimitiveLongObjectMap<Document> cachedDocuments = Primitive.longObjectMap();\n+  private Set<String> orphans;\n+\n+  FullTxData(LuceneExplicitIndex index)\n+  {\n+    super(index);\n+  }\n+\n+  @Override\n+  void add(TxDataHolder holder, EntityId entityId, String key, Object value)\n+  {\n+    try\n     {\n-        super( index );\n-    }\n-\n-    @Override\n-    void add( TxDataHolder holder, EntityId entityId, String key, Object value )\n+      ensureLuceneDataInstantiated();\n+      long id = entityId.id();\n+      Document document = findDocument(id);\n+      boolean add = false;\n+      if (document == null)\n+      {\n+        document = IndexType.newDocument(entityId);\n+        document.add(new StoredField(TX_STATE_KEY, TX_STATE_VALUE));\n+        cachedDocuments.put(id, document);\n+        add = true;\n+      }\n+\n+      if (key == null && value == null)\n+      {\n+        // Set a special \"always hit\" flag\n+        document.add(new StringField(ORPHANS_KEY, ORPHANS_VALUE, Store.NO));\n+        addOrphan(null);\n+      } else if (value == null)\n+      {\n+        // Set a special \"always hit\" flag\n+        document.add(new StringField(ORPHANS_KEY, key, Store.NO));\n+        addOrphan(key);\n+      } else\n+      {\n+        index.type.addToDocument(document, key, value);\n+      }\n+\n+      if (add)\n+      {\n+        writer.addDocument(document);\n+      } else\n+      {\n+        writer.updateDocument(index.type.idTerm(id), document);\n+      }\n+      invalidateSearcher();\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            ensureLuceneDataInstantiated();\n-            long id = entityId.id();\n-            Document document = findDocument( id );\n-            boolean add = false;\n-            if ( document == null )\n-            {\n-                document = IndexType.newDocument( entityId );\n-                document.add( new StoredField( TX_STATE_KEY, TX_STATE_VALUE ) );\n-                cachedDocuments.put( id, document );\n-                add = true;\n-            }\n-\n-            if ( key == null && value == null )\n-            {\n-                // Set a special \"always hit\" flag\n-                document.add( new StringField( ORPHANS_KEY, ORPHANS_VALUE, Store.NO ) );\n-                addOrphan( null );\n-            }\n-            else if ( value == null )\n-            {\n-                // Set a special \"always hit\" flag\n-                document.add( new StringField( ORPHANS_KEY, key, Store.NO ) );\n-                addOrphan( key );\n-            }\n-            else\n-            {\n-                index.type.addToDocument( document, key, value );\n-            }\n-\n-            if ( add )\n-            {\n-                writer.addDocument( document );\n-            }\n-            else\n-            {\n-                writer.updateDocument( index.type.idTerm( id ), document );\n-            }\n-            invalidateSearcher();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private void addOrphan( String key )\n+  private void addOrphan(String key)\n+  {\n+    if (orphans == null)\n     {\n-        if ( orphans == null )\n-        {\n-            orphans = new HashSet<>();\n-        }\n-        orphans.add( key );\n+      orphans = new HashSet<>();\n     }\n+    orphans.add(key);\n+  }\n \n-    private Document findDocument( long id )\n-    {\n-        return cachedDocuments.get( id );\n-    }\n+  private Document findDocument(long id)\n+  {\n+    return cachedDocuments.get(id);\n+  }\n \n-    private void ensureLuceneDataInstantiated()\n+  private void ensureLuceneDataInstantiated()\n+  {\n+    if (this.directory == null)\n     {\n-        if ( this.directory == null )\n-        {\n-            try\n-            {\n-                this.directory = new RAMDirectory();\n-                IndexWriterConfig writerConfig = new IndexWriterConfig( index.type.analyzer );\n-                this.writer = new IndexWriter( directory, writerConfig );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        }\n+      try\n+      {\n+        this.directory = new RAMDirectory();\n+        IndexWriterConfig writerConfig = new IndexWriterConfig(index.type.analyzer);\n+        this.writer = new IndexWriter(directory, writerConfig);\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n     }\n+  }\n \n-    @Override\n-    void remove( TxDataHolder holder, EntityId entityId, String key, Object value )\n+  @Override\n+  void remove(TxDataHolder holder, EntityId entityId, String key, Object value)\n+  {\n+    try\n     {\n-        try\n+      ensureLuceneDataInstantiated();\n+      long id = entityId.id();\n+      Document document = findDocument(id);\n+      if (document != null)\n+      {\n+        index.type.removeFromDocument(document, key, value);\n+        if (LuceneDataSource.documentIsEmpty(document))\n         {\n-            ensureLuceneDataInstantiated();\n-            long id = entityId.id();\n-            Document document = findDocument( id );\n-            if ( document != null )\n-            {\n-                index.type.removeFromDocument( document, key, value );\n-                if ( LuceneDataSource.documentIsEmpty( document ) )\n-                {\n-                    writer.deleteDocuments( index.type.idTerm( id ) );\n-                }\n-                else\n-                {\n-                    writer.updateDocument( index.type.idTerm( id ), document );\n-                }\n-            }\n-            invalidateSearcher();\n-        }\n-        catch ( IOException e )\n+          writer.deleteDocuments(index.type.idTerm(id));\n+        } else\n         {\n-            throw new RuntimeException( e );\n+          writer.updateDocument(index.type.idTerm(id), document);\n         }\n-    }\n-\n-    @Override\n-    Collection<EntityId> query( TxDataHolder holder, Query query, QueryContext contextOrNull )\n+      }\n+      invalidateSearcher();\n+    } catch (IOException e)\n     {\n-        return internalQuery( query, contextOrNull );\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private Collection<EntityId> internalQuery( Query query, QueryContext contextOrNull )\n-    {\n-        if ( this.directory == null )\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        try\n-        {\n-            Sort sorting = contextOrNull != null ? contextOrNull.getSorting() : null;\n-            boolean prioritizeCorrectness = contextOrNull == null || !contextOrNull.getTradeCorrectnessForSpeed();\n-            IndexSearcher theSearcher = searcher( prioritizeCorrectness );\n-            query = includeOrphans( query );\n-            DocValuesCollector docValuesCollector = new DocValuesCollector( prioritizeCorrectness );\n-            theSearcher.search( query, docValuesCollector );\n-            Collection<EntityId> result = new ArrayList<>();\n-            PrimitiveLongIterator valuesIterator = docValuesCollector.getSortedValuesIterator( KEY_DOC_ID, sorting );\n-            while ( valuesIterator.hasNext() )\n-            {\n-                result.add( new EntityId.IdData( valuesIterator.next() ) );\n-            }\n-            return result;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n+  @Override\n+  Collection<EntityId> query(TxDataHolder holder, Query query, QueryContext contextOrNull)\n+  {\n+    return internalQuery(query, contextOrNull);\n+  }\n \n-    private Query includeOrphans( Query query )\n+  private Collection<EntityId> internalQuery(Query query, QueryContext contextOrNull)\n+  {\n+    if (this.directory == null)\n     {\n-        if ( orphans == null )\n-        {\n-            return query;\n-        }\n-\n-        return new BooleanQuery.Builder()\n-                .add( injectOrphans( query ), Occur.SHOULD )\n-                .add( new TermQuery( new Term( ORPHANS_KEY, ORPHANS_VALUE ) ), Occur.SHOULD )\n-                .build();\n+      return Collections.emptySet();\n     }\n \n-    private Query injectOrphans( Query query )\n+    try\n     {\n-        if ( query instanceof BooleanQuery )\n-        {\n-            BooleanQuery source = (BooleanQuery) query;\n-            BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-            for ( BooleanClause clause : source.clauses() )\n-            {\n-                builder.add( injectOrphans( clause.getQuery() ), clause.getOccur() );\n-            }\n-            return builder.build();\n-        }\n-\n-        String orphanField = extractTermField( query );\n-        if ( orphanField == null )\n-        {\n-            return query;\n-        }\n-\n-        return new BooleanQuery.Builder()\n-                .add( query, Occur.SHOULD )\n-                .add( new TermQuery( new Term( ORPHANS_KEY, orphanField ) ), Occur.SHOULD )\n-                .build();\n+      Sort sorting = contextOrNull != null ? contextOrNull.getSorting() : null;\n+      boolean prioritizeCorrectness = contextOrNull == null || !contextOrNull.getTradeCorrectnessForSpeed();\n+      IndexSearcher theSearcher = searcher(prioritizeCorrectness);\n+      query = includeOrphans(query);\n+      DocValuesCollector docValuesCollector = new DocValuesCollector(prioritizeCorrectness);\n+      theSearcher.search(query, docValuesCollector);\n+      Collection<EntityId> result = new ArrayList<>();\n+      PrimitiveLongIterator valuesIterator = docValuesCollector.getSortedValuesIterator(KEY_DOC_ID, sorting);\n+      while (valuesIterator.hasNext())\n+      {\n+        result.add(new EntityId.IdData(valuesIterator.next()));\n+      }\n+      return result;\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private String extractTermField( Query query )\n+  private Query includeOrphans(Query query)\n+  {\n+    if (orphans == null)\n     {\n-        // Try common types of queries\n-        if ( query instanceof TermQuery )\n-        {\n-            return ((TermQuery)query).getTerm().field();\n-        }\n-        else if ( query instanceof WildcardQuery )\n-        {\n-            return ((WildcardQuery)query).getTerm().field();\n-        }\n-        else if ( query instanceof PrefixQuery )\n-        {\n-            return ((PrefixQuery)query).getPrefix().field();\n-        }\n-        else if ( query instanceof MatchAllDocsQuery )\n-        {\n-            return null;\n-        }\n-\n-        // Try to extract terms and get it that way\n-        String field = getFieldFromExtractTerms( query );\n-        if ( field != null )\n-        {\n-            return field;\n-        }\n-\n-        // Last resort: since Query doesn't have a common interface for getting\n-        // the term/field of its query this is one option.\n-        return getFieldViaReflection( query );\n+      return query;\n     }\n \n-    private String getFieldViaReflection( Query query )\n+    return new BooleanQuery.Builder()\n+        .add(injectOrphans(query), Occur.SHOULD)\n+        .add(new TermQuery(new Term(ORPHANS_KEY, ORPHANS_VALUE)), Occur.SHOULD)\n+        .build();\n+  }\n+\n+  private Query injectOrphans(Query query)\n+  {\n+    if (query instanceof BooleanQuery)\n     {\n-        try\n-        {\n-            try\n-            {\n-                Term term = (Term) query.getClass().getMethod( \"getTerm\" ).invoke( query );\n-                return term.field();\n-            }\n-            catch ( NoSuchMethodException e )\n-            {\n-                return (String) query.getClass().getMethod( \"getField\" ).invoke( query );\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      BooleanQuery source = (BooleanQuery) query;\n+      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n+      for (BooleanClause clause : source.clauses())\n+      {\n+        builder.add(injectOrphans(clause.getQuery()), clause.getOccur());\n+      }\n+      return builder.build();\n     }\n \n-    private String getFieldFromExtractTerms( Query query )\n+    String orphanField = extractTermField(query);\n+    if (orphanField == null)\n     {\n-        Set<Term> terms = new HashSet<>();\n-        try\n-        {\n-            searcher.createNormalizedWeight( query, false ).extractTerms( terms );\n-        }\n-        catch ( IOException ioe )\n-        {\n-            throw new UnsupportedOperationException( ioe );\n-        }\n-        catch ( UnsupportedOperationException ue )\n-        {\n-            // TODO This is for \"*\" queries and such. Lucene doesn't seem\n-            // to be able/willing to rewrite such queries.\n-            // Just ignore the orphans then... OK?\n-        }\n-        return terms.isEmpty() ? null : terms.iterator().next().field();\n+      return query;\n     }\n \n-    @Override\n-    void close()\n+    return new BooleanQuery.Builder()\n+        .add(query, Occur.SHOULD)\n+        .add(new TermQuery(new Term(ORPHANS_KEY, orphanField)), Occur.SHOULD)\n+        .build();\n+  }\n+\n+  private String extractTermField(Query query)\n+  {\n+    // Try common types of queries\n+    if (query instanceof TermQuery)\n+    {\n+      return ((TermQuery) query).getTerm().field();\n+    } else if (query instanceof WildcardQuery)\n     {\n-        LuceneUtil.close( this.writer );\n-        LuceneUtil.close( this.reader );\n-        LuceneUtil.close( this.searcher );\n+      return ((WildcardQuery) query).getTerm().field();\n+    } else if (query instanceof PrefixQuery)\n+    {\n+      return ((PrefixQuery) query).getPrefix().field();\n+    } else if (query instanceof MatchAllDocsQuery)\n+    {\n+      return null;\n     }\n \n-    private void invalidateSearcher()\n+    // Try to extract terms and get it that way\n+    String field = getFieldFromExtractTerms(query);\n+    if (field != null)\n     {\n-        this.modified = true;\n+      return field;\n     }\n \n-    private IndexSearcher searcher( boolean allowRefreshSearcher )\n-    {\n-        if ( this.searcher != null && (!modified || !allowRefreshSearcher) )\n-        {\n-            return this.searcher;\n-        }\n+    // Last resort: since Query doesn't have a common interface for getting\n+    // the term/field of its query this is one option.\n+    return getFieldViaReflection(query);\n+  }\n \n-        try\n-        {\n-            IndexReader newReader = this.reader == null ?\n-                                    DirectoryReader.open( this.writer ) :\n-                                    DirectoryReader.openIfChanged( (DirectoryReader) this.reader );\n-            if ( newReader == null )\n-            {\n-                return this.searcher;\n-            }\n-            LuceneUtil.close( reader );\n-            this.reader = newReader;\n-            LuceneUtil.close( searcher );\n-            searcher = new IndexSearcher( reader );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        finally\n-        {\n-            if ( allowRefreshSearcher )\n-            {\n-                this.modified = false;\n-            }\n-        }\n-        return this.searcher;\n+  private String getFieldViaReflection(Query query)\n+  {\n+    try\n+    {\n+      try\n+      {\n+        Term term = (Term) query.getClass().getMethod(\"getTerm\").invoke(query);\n+        return term.field();\n+      } catch (NoSuchMethodException e)\n+      {\n+        return (String) query.getClass().getMethod(\"getField\").invoke(query);\n+      }\n+    } catch (Exception e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    @Override\n-    IndexSearcher asSearcher( TxDataHolder holder, QueryContext context )\n+  private String getFieldFromExtractTerms(Query query)\n+  {\n+    Set<Term> terms = new HashSet<>();\n+    try\n+    {\n+      searcher.createNormalizedWeight(query, false).extractTerms(terms);\n+    } catch (IOException ioe)\n     {\n-        boolean refresh = context == null || !context.getTradeCorrectnessForSpeed();\n-        return searcher( refresh );\n+      throw new UnsupportedOperationException(ioe);\n+    } catch (UnsupportedOperationException ue)\n+    {\n+      // TODO This is for \"*\" queries and such. Lucene doesn't seem\n+      // to be able/willing to rewrite such queries.\n+      // Just ignore the orphans then... OK?\n     }\n-\n-    @Override\n-    Collection<EntityId> get( TxDataHolder holder, String key, Object value )\n+    return terms.isEmpty() ? null : terms.iterator().next().field();\n+  }\n+\n+  @Override\n+  void close()\n+  {\n+    LuceneUtil.close(this.writer);\n+    LuceneUtil.close(this.reader);\n+    LuceneUtil.close(this.searcher);\n+  }\n+\n+  private void invalidateSearcher()\n+  {\n+    this.modified = true;\n+  }\n+\n+  private IndexSearcher searcher(boolean allowRefreshSearcher)\n+  {\n+    if (this.searcher != null && (!modified || !allowRefreshSearcher))\n     {\n-        return internalQuery( index.type.get( key, value ), null );\n+      return this.searcher;\n     }\n \n-    @Override\n-    Collection<EntityId> getOrphans( String key )\n+    try\n+    {\n+      IndexReader newReader = this.reader == null ?\n+          DirectoryReader.open(this.writer) :\n+          DirectoryReader.openIfChanged((DirectoryReader) this.reader);\n+      if (newReader == null)\n+      {\n+        return this.searcher;\n+      }\n+      LuceneUtil.close(reader);\n+      this.reader = newReader;\n+      LuceneUtil.close(searcher);\n+      searcher = new IndexSearcher(reader);\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n+    } finally\n     {\n-        return emptyList();\n+      if (allowRefreshSearcher)\n+      {\n+        this.modified = false;\n+      }\n     }\n+    return this.searcher;\n+  }\n+\n+  @Override\n+  IndexSearcher asSearcher(TxDataHolder holder, QueryContext context)\n+  {\n+    boolean refresh = context == null || !context.getTradeCorrectnessForSpeed();\n+    return searcher(refresh);\n+  }\n+\n+  @Override\n+  Collection<EntityId> get(TxDataHolder holder, String key, Object value)\n+  {\n+    return internalQuery(index.type.get(key, value), null);\n+  }\n+\n+  @Override\n+  Collection<EntityId> getOrphans(String key)\n+  {\n+    return emptyList();\n+  }\n }\n",
            "diff_size": 464
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4077/FullTxData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4077/FullTxData.java\nindex 214cf427fc1..c1d40ad25dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4077/FullTxData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4077/FullTxData.java\n@@ -79,13 +79,15 @@ class FullTxData extends TxData\n      * well as any specific key which is pulled out from the incoming query.\n      */\n     private static final String ORPHANS_KEY = \"__all__\";\n-    /**\n+\n+/**\n      * When querying we need to distinguish between documents coming from the store and documents\n      * coming from transaction state. A field with this key is put on all documents in transaction state.\n      */\n     public static final String TX_STATE_KEY = \"__tx_state__\";\n-    private static final byte[] TX_STATE_VALUE = new byte[] {1};\n-    private static final String ORPHANS_VALUE = \"1\";\n+    private static final byte[] TX_STATE_VALUE = new byte[]{1};\n+\n+private static final String ORPHANS_VALUE = \"1\";\n \n     private Directory directory;\n     private IndexWriter writer;\n@@ -142,7 +144,8 @@ class FullTxData extends TxData\n             {\n                 writer.updateDocument( index.type.idTerm( id ), document );\n             }\n-            invalidateSearcher();\n+\n+invalidateSearcher();\n         }\n         catch ( IOException e )\n         {\n@@ -201,7 +204,8 @@ class FullTxData extends TxData\n                     writer.updateDocument( index.type.idTerm( id ), document );\n                 }\n             }\n-            invalidateSearcher();\n+\n+invalidateSearcher();\n         }\n         catch ( IOException e )\n         {\n@@ -236,7 +240,8 @@ class FullTxData extends TxData\n             {\n                 result.add( new EntityId.IdData( valuesIterator.next() ) );\n             }\n-            return result;\n+\n+return result;\n         }\n         catch ( IOException e )\n         {\n@@ -251,10 +256,7 @@ class FullTxData extends TxData\n             return query;\n         }\n \n-        return new BooleanQuery.Builder()\n-                .add( injectOrphans( query ), Occur.SHOULD )\n-                .add( new TermQuery( new Term( ORPHANS_KEY, ORPHANS_VALUE ) ), Occur.SHOULD )\n-                .build();\n+        return new BooleanQuery.Builder().add( injectOrphans( query ), Occur.SHOULD ).add( new TermQuery( new Term( ORPHANS_KEY, ORPHANS_VALUE ) ), Occur.SHOULD ).build();\n     }\n \n     private Query injectOrphans( Query query )\n@@ -267,7 +269,8 @@ class FullTxData extends TxData\n             {\n                 builder.add( injectOrphans( clause.getQuery() ), clause.getOccur() );\n             }\n-            return builder.build();\n+\n+return builder.build();\n         }\n \n         String orphanField = extractTermField( query );\n@@ -276,10 +279,7 @@ class FullTxData extends TxData\n             return query;\n         }\n \n-        return new BooleanQuery.Builder()\n-                .add( query, Occur.SHOULD )\n-                .add( new TermQuery( new Term( ORPHANS_KEY, orphanField ) ), Occur.SHOULD )\n-                .build();\n+        return new BooleanQuery.Builder().add( query, Occur.SHOULD ).add( new TermQuery( new Term( ORPHANS_KEY, orphanField ) ), Occur.SHOULD ).build();\n     }\n \n     private String extractTermField( Query query )\n@@ -287,15 +287,15 @@ class FullTxData extends TxData\n         // Try common types of queries\n         if ( query instanceof TermQuery )\n         {\n-            return ((TermQuery)query).getTerm().field();\n+            return ((TermQuery) query).getTerm().field();\n         }\n         else if ( query instanceof WildcardQuery )\n         {\n-            return ((WildcardQuery)query).getTerm().field();\n+            return ((WildcardQuery) query).getTerm().field();\n         }\n         else if ( query instanceof PrefixQuery )\n         {\n-            return ((PrefixQuery)query).getPrefix().field();\n+            return ((PrefixQuery) query).getPrefix().field();\n         }\n         else if ( query instanceof MatchAllDocsQuery )\n         {\n@@ -351,7 +351,8 @@ class FullTxData extends TxData\n             // to be able/willing to rewrite such queries.\n             // Just ignore the orphans then... OK?\n         }\n-        return terms.isEmpty() ? null : terms.iterator().next().field();\n+\n+return terms.isEmpty() ? null : terms.iterator().next().field();\n     }\n \n     @Override\n@@ -376,10 +377,8 @@ class FullTxData extends TxData\n \n         try\n         {\n-            IndexReader newReader = this.reader == null ?\n-                                    DirectoryReader.open( this.writer ) :\n-                                    DirectoryReader.openIfChanged( (DirectoryReader) this.reader );\n-            if ( newReader == null )\n+            IndexReader newReader = this.reader == null ? DirectoryReader.open( this.writer ) : DirectoryReader.openIfChanged( (DirectoryReader) this.reader );\n+if ( newReader == null )\n             {\n                 return this.searcher;\n             }\n@@ -420,4 +419,4 @@ class FullTxData extends TxData\n     {\n         return emptyList();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
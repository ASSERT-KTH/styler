{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4250",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4250/ApplyTransactionsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4250/ApplyTransactionsCommand.java\nindex 82d4fedbf91..9cf0dad6985 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4250/ApplyTransactionsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4250/ApplyTransactionsCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.applytx;\n \n import java.io.File;\n@@ -55,109 +56,105 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.EXTERNAL;\n \n public class ApplyTransactionsCommand extends ArgsCommand\n {\n-    private final File from;\n-    private final Supplier<GraphDatabaseAPI> to;\n+  private final File from;\n+  private final Supplier<GraphDatabaseAPI> to;\n+\n+  public ApplyTransactionsCommand(File from, Supplier<GraphDatabaseAPI> to)\n+  {\n+    this.from = from;\n+    this.to = to;\n+  }\n \n-    public ApplyTransactionsCommand( File from, Supplier<GraphDatabaseAPI> to )\n+  @Override\n+  protected void run(Args args, PrintStream out) throws Exception\n+  {\n+    DependencyResolver dependencyResolver = to.get().getDependencyResolver();\n+    TransactionIdStore txIdStore = dependencyResolver.resolveDependency(TransactionIdStore.class);\n+    Config config = dependencyResolver.resolveDependency(Config.class);\n+    long fromTx = txIdStore.getLastCommittedTransaction().transactionId();\n+    long toTx;\n+    if (args.orphans().isEmpty())\n     {\n-        this.from = from;\n-        this.to = to;\n+      throw new IllegalArgumentException(\"No tx specified\");\n     }\n \n-    @Override\n-    protected void run( Args args, PrintStream out ) throws Exception\n+    String whereTo = args.orphans().get(0);\n+    if (whereTo.equals(\"next\"))\n     {\n-        DependencyResolver dependencyResolver = to.get().getDependencyResolver();\n-        TransactionIdStore txIdStore = dependencyResolver.resolveDependency( TransactionIdStore.class );\n-        Config config = dependencyResolver.resolveDependency( Config.class );\n-        long fromTx = txIdStore.getLastCommittedTransaction().transactionId();\n-        long toTx;\n-        if ( args.orphans().isEmpty() )\n-        {\n-            throw new IllegalArgumentException( \"No tx specified\" );\n-        }\n-\n-        String whereTo = args.orphans().get( 0 );\n-        if ( whereTo.equals( \"next\" ) )\n-        {\n-            toTx = fromTx + 1;\n-        }\n-        else if ( whereTo.equals( \"last\" ) )\n-        {\n-            toTx = Long.MAX_VALUE;\n-        }\n-        else\n-        {\n-            toTx = Long.parseLong( whereTo );\n-        }\n-\n-        long lastApplied = applyTransactions( from, to.get(), config, fromTx, toTx, out );\n-        out.println( \"Applied transactions up to and including \" + lastApplied );\n+      toTx = fromTx + 1;\n+    } else if (whereTo.equals(\"last\"))\n+    {\n+      toTx = Long.MAX_VALUE;\n+    } else\n+    {\n+      toTx = Long.parseLong(whereTo);\n     }\n \n-    private long applyTransactions( File fromPath, GraphDatabaseAPI toDb, Config toConfig,\n-            long fromTxExclusive, long toTxInclusive, PrintStream out )\n-            throws IOException, TransactionFailureException\n+    long lastApplied = applyTransactions(from, to.get(), config, fromTx, toTx, out);\n+    out.println(\"Applied transactions up to and including \" + lastApplied);\n+  }\n+\n+  private long applyTransactions(File fromPath, GraphDatabaseAPI toDb, Config toConfig,\n+                                 long fromTxExclusive, long toTxInclusive, PrintStream out)\n+      throws IOException, TransactionFailureException\n+  {\n+    DependencyResolver resolver = toDb.getDependencyResolver();\n+    TransactionRepresentationCommitProcess commitProcess =\n+        new TransactionRepresentationCommitProcess(\n+            resolver.resolveDependency(TransactionAppender.class),\n+            resolver.resolveDependency(StorageEngine.class));\n+    LifeSupport life = new LifeSupport();\n+    try (DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n+         PageCache pageCache = StandalonePageCacheFactory.createPageCache(fileSystem))\n     {\n-        DependencyResolver resolver = toDb.getDependencyResolver();\n-        TransactionRepresentationCommitProcess commitProcess =\n-                new TransactionRepresentationCommitProcess(\n-                        resolver.resolveDependency( TransactionAppender.class ),\n-                        resolver.resolveDependency( StorageEngine.class ) );\n-        LifeSupport life = new LifeSupport();\n-        try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n+      LogicalTransactionStore source = life.add(new ReadOnlyTransactionStore(pageCache, fileSystem, fromPath,\n+          Config.defaults(), new Monitors()));\n+      life.start();\n+      long lastAppliedTx = fromTxExclusive;\n+      // Some progress if there are more than a couple of transactions to apply\n+      ProgressListener progress = toTxInclusive - fromTxExclusive >= 100 ?\n+          textual(out).singlePart(\"Application progress\",\n+              toTxInclusive - fromTxExclusive) :\n+          ProgressListener.NONE;\n+      try (IOCursor<CommittedTransactionRepresentation> cursor = source.getTransactions(fromTxExclusive + 1))\n+      {\n+        while (cursor.next())\n         {\n-            LogicalTransactionStore source = life.add( new ReadOnlyTransactionStore( pageCache, fileSystem, fromPath,\n-                    Config.defaults(), new Monitors() ) );\n-            life.start();\n-            long lastAppliedTx = fromTxExclusive;\n-            // Some progress if there are more than a couple of transactions to apply\n-            ProgressListener progress = toTxInclusive - fromTxExclusive >= 100 ?\n-                                        textual( out ).singlePart( \"Application progress\",\n-                                                toTxInclusive - fromTxExclusive ) :\n-                                        ProgressListener.NONE;\n-            try ( IOCursor<CommittedTransactionRepresentation> cursor = source.getTransactions( fromTxExclusive + 1 ) )\n-            {\n-                while ( cursor.next() )\n-                {\n-                    CommittedTransactionRepresentation transaction = cursor.get();\n-                    TransactionRepresentation transactionRepresentation =\n-                            transaction.getTransactionRepresentation();\n-                    try\n-                    {\n-                        commitProcess.commit( new TransactionToApply( transactionRepresentation ), NULL, EXTERNAL );\n-                        progress.add( 1 );\n-                    }\n-                    catch ( final Throwable e )\n-                    {\n-                        System.err.println( \"ERROR applying transaction \" + transaction.getCommitEntry().getTxId() );\n-                        throw e;\n-                    }\n-                    lastAppliedTx = transaction.getCommitEntry().getTxId();\n-                    if ( lastAppliedTx == toTxInclusive )\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-            return lastAppliedTx;\n+          CommittedTransactionRepresentation transaction = cursor.get();\n+          TransactionRepresentation transactionRepresentation =\n+              transaction.getTransactionRepresentation();\n+          try\n+          {\n+            commitProcess.commit(new TransactionToApply(transactionRepresentation), NULL, EXTERNAL);\n+            progress.add(1);\n+          } catch (final Throwable e)\n+          {\n+            System.err.println(\"ERROR applying transaction \" + transaction.getCommitEntry().getTxId());\n+            throw e;\n+          }\n+          lastAppliedTx = transaction.getCommitEntry().getTxId();\n+          if (lastAppliedTx == toTxInclusive)\n+          {\n+            break;\n+          }\n         }\n-        finally\n-        {\n-            life.shutdown();\n-        }\n-    }\n-\n-    @Override\n-    public String toString()\n+      }\n+      return lastAppliedTx;\n+    } finally\n     {\n-        return ArrayUtil.join( new String[] {\n-                \"Applies transaction from the source onto the new db. Example:\",\n-                \"  apply last : applies transactions from the currently last applied and up to the last\",\n-                \"               transaction of source db\",\n-                \"  apply next : applies the next transaction onto the new db\",\n-                \"  apply 234  : applies up to and including tx 234 from the source db onto the new db\" },\n-                format( \"%n\" ) );\n+      life.shutdown();\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return ArrayUtil.join(new String[] {\n+            \"Applies transaction from the source onto the new db. Example:\",\n+            \"  apply last : applies transactions from the currently last applied and up to the last\",\n+            \"               transaction of source db\",\n+            \"  apply next : applies the next transaction onto the new db\",\n+            \"  apply 234  : applies up to and including tx 234 from the source db onto the new db\"},\n+        format(\"%n\"));\n+  }\n }\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 396).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4250/ApplyTransactionsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4250/ApplyTransactionsCommand.java\nindex 82d4fedbf91..4713469978c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4250/ApplyTransactionsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4250/ApplyTransactionsCommand.java\n@@ -96,35 +96,29 @@ public class ApplyTransactionsCommand extends ArgsCommand\n     }\n \n     private long applyTransactions( File fromPath, GraphDatabaseAPI toDb, Config toConfig,\n-            long fromTxExclusive, long toTxInclusive, PrintStream out )\n-            throws IOException, TransactionFailureException\n-    {\n+            long fromTxExclusive, long toTxInclusive, PrintStream out ) throws IOException, TransactionFailureException\n+{\n         DependencyResolver resolver = toDb.getDependencyResolver();\n-        TransactionRepresentationCommitProcess commitProcess =\n-                new TransactionRepresentationCommitProcess(\n-                        resolver.resolveDependency( TransactionAppender.class ),\n-                        resolver.resolveDependency( StorageEngine.class ) );\n-        LifeSupport life = new LifeSupport();\n+        TransactionRepresentationCommitProcess commitProcess = new TransactionRepresentationCommitProcess( resolver.resolveDependency( TransactionAppender.class ), resolver.resolveDependency( StorageEngine.class ) );\n+LifeSupport life = new LifeSupport();\n         try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n-        {\n+PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n+{\n             LogicalTransactionStore source = life.add( new ReadOnlyTransactionStore( pageCache, fileSystem, fromPath,\n                     Config.defaults(), new Monitors() ) );\n-            life.start();\n+life.start();\n             long lastAppliedTx = fromTxExclusive;\n             // Some progress if there are more than a couple of transactions to apply\n-            ProgressListener progress = toTxInclusive - fromTxExclusive >= 100 ?\n-                                        textual( out ).singlePart( \"Application progress\",\n-                                                toTxInclusive - fromTxExclusive ) :\n-                                        ProgressListener.NONE;\n-            try ( IOCursor<CommittedTransactionRepresentation> cursor = source.getTransactions( fromTxExclusive + 1 ) )\n+            ProgressListener progress = toTxInclusive - fromTxExclusive >= 100 ? textual( out ).singlePart( \"Application progress\",\n+                                                toTxInclusive - fromTxExclusive ) : ProgressListener.NONE;\n+try ( IOCursor<CommittedTransactionRepresentation> cursor = source.getTransactions( fromTxExclusive + 1 ) )\n             {\n                 while ( cursor.next() )\n                 {\n                     CommittedTransactionRepresentation transaction = cursor.get();\n-                    TransactionRepresentation transactionRepresentation =\n-                            transaction.getTransactionRepresentation();\n-                    try\n+                    TransactionRepresentation transactionRepresentation = transaction.getTransactionRepresentation();\n+\n+try\n                     {\n                         commitProcess.commit( new TransactionToApply( transactionRepresentation ), NULL, EXTERNAL );\n                         progress.add( 1 );\n@@ -134,7 +128,8 @@ public class ApplyTransactionsCommand extends ArgsCommand\n                         System.err.println( \"ERROR applying transaction \" + transaction.getCommitEntry().getTxId() );\n                         throw e;\n                     }\n-                    lastAppliedTx = transaction.getCommitEntry().getTxId();\n+\n+lastAppliedTx = transaction.getCommitEntry().getTxId();\n                     if ( lastAppliedTx == toTxInclusive )\n                     {\n                         break;\n@@ -152,12 +147,7 @@ public class ApplyTransactionsCommand extends ArgsCommand\n     @Override\n     public String toString()\n     {\n-        return ArrayUtil.join( new String[] {\n-                \"Applies transaction from the source onto the new db. Example:\",\n-                \"  apply last : applies transactions from the currently last applied and up to the last\",\n-                \"               transaction of source db\",\n-                \"  apply next : applies the next transaction onto the new db\",\n-                \"  apply 234  : applies up to and including tx 234 from the source db onto the new db\" },\n+        return ArrayUtil.join( new String[] { \"Applies transaction from the source onto the new db. Example:\", \"  apply last : applies transactions from the currently last applied and up to the last\", \"               transaction of source db\", \"  apply next : applies the next transaction onto the new db\", \"  apply 234  : applies up to and including tx 234 from the source db onto the new db\" },\n                 format( \"%n\" ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
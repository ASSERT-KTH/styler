{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4051",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "204",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4051/Neo4jError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4051/Neo4jError.java\nindex 049b14b6001..3ee1fd6c32d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4051/Neo4jError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4051/Neo4jError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.runtime;\n \n import java.util.List;\n@@ -31,204 +32,202 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public class Neo4jError\n {\n-    private final Status status;\n-    private final String message;\n-    private final Throwable cause;\n-    private final UUID reference;\n-    private final boolean fatal;\n-\n-    private Neo4jError( Status status, String message, Throwable cause, boolean fatal )\n-    {\n-        this.status = status;\n-        this.message = message;\n-        this.cause = cause;\n-        this.fatal = fatal;\n-        this.reference = UUID.randomUUID();\n-    }\n-\n-    private Neo4jError( Status status, String message, boolean fatal )\n-    {\n-        this( status, message, null, fatal );\n-    }\n-\n-    private Neo4jError( Status status, Throwable cause, boolean fatal )\n-    {\n-        this( status, status.code().description(), cause, fatal );\n-    }\n-\n-    public Status status()\n-    {\n-        return status;\n-    }\n-\n-    public String message()\n-    {\n-        return message;\n-    }\n-\n-    public Throwable cause()\n-    {\n-        return cause;\n-    }\n-\n-    public UUID reference()\n-    {\n-        return reference;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        Neo4jError that = (Neo4jError) o;\n-\n-        return (status != null ? status.equals( that.status ) : that.status == null) &&\n-                !(message != null ? !message.equals( that.message ) : that.message != null);\n-\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = status != null ? status.hashCode() : 0;\n-        result = 31 * result + (message != null ? message.hashCode() : 0);\n-        return result;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"Neo4jError{\" +\n-                \"status=\" + status +\n-                \", message='\" + message + '\\'' +\n-                \", cause=\" + cause +\n-                \", reference=\" + reference +\n-                '}';\n-    }\n-\n-    public static Status codeFromString( String codeStr )\n-    {\n-        String[] parts = codeStr.split( \"\\\\.\" );\n-        if ( parts.length != 4 )\n-        {\n-            return Status.General.UnknownError;\n-        }\n-\n-        String category = parts[2];\n-        String error = parts[3];\n-\n-        // Note: the input string may contain arbitrary input data, using reflection would open network attack vector\n-        switch ( category )\n-        {\n-        case \"Schema\":\n-            return Status.Schema.valueOf( error );\n-        case \"LegacyIndex\":\n-            return Status.LegacyIndex.valueOf( error );\n-        case \"General\":\n-            return Status.General.valueOf( error );\n-        case \"Statement\":\n-            return Status.Statement.valueOf( error );\n-        case \"Transaction\":\n-            return Status.Transaction.valueOf( error );\n-        case \"Request\":\n-            return Status.Request.valueOf( error );\n-        case \"Network\":\n-            return Status.Network.valueOf( error );\n-        case \"Security\":\n-            return Status.Security.valueOf( error );\n-        default:\n-            return Status.General.UnknownError;\n-        }\n-    }\n-\n-    private static Neo4jError fromThrowable( Throwable any, boolean isFatal )\n-    {\n-        for ( Throwable cause = any; cause != null; cause = cause.getCause() )\n-        {\n-            if ( cause instanceof Status.HasStatus )\n-            {\n-                return new Neo4jError( ((Status.HasStatus) cause).status(), any.getMessage(), any, isFatal );\n-            }\n-            if ( cause instanceof DatabaseShutdownException )\n-            {\n-                return new Neo4jError( Status.General.DatabaseUnavailable, cause, isFatal );\n-            }\n-            if ( cause instanceof OutOfMemoryError )\n-            {\n-                return new Neo4jError( Status.General.OutOfMemoryError, cause, isFatal );\n-            }\n-            if ( cause instanceof StackOverflowError )\n-            {\n-                return new Neo4jError( Status.General.StackOverFlowError, cause, isFatal );\n-            }\n-        }\n-\n-        // In this case, an error has \"slipped out\", and we don't have a good way to handle it. This indicates\n-        // a buggy code path, and we need to try to convince whoever ends up here to tell us about it.\n-\n-        return new Neo4jError( Status.General.UnknownError, any != null ? any.getMessage() : null, any, isFatal );\n-    }\n-\n-    public static Neo4jError from( Status status, String message )\n-    {\n-        return new Neo4jError( status, message, false );\n-    }\n-\n-    public static Neo4jError from( Throwable any )\n-    {\n-        return fromThrowable( any, false );\n-    }\n-\n-    public static Neo4jError combine( List<Neo4jError> errors )\n-    {\n-        if ( errors == null || errors.isEmpty() )\n-        {\n-            return null;\n-        }\n-        else if ( errors.size() == 1 )\n-        {\n-            return errors.get( 0 );\n-        }\n-        else\n-        {\n-            Neo4jError first = errors.get( 0 );\n-            Status combinedStatus = first.status;\n-            StringBuilder combinedMessage =\n-                    new StringBuilder( String.format( \"The following errors has occurred:%n%n\" ) );\n-            combinedMessage.append( first.message );\n-            for ( int i = 1; i < errors.size(); i++ )\n-            {\n-                Neo4jError error = errors.get( i );\n-                combinedStatus = error.status == combinedStatus ? error.status : Status.General.UnknownError;\n-                combinedMessage\n-                        .append( System.lineSeparator() )\n-                        .append( error.message );\n-            }\n-\n-            return from( combinedStatus, combinedMessage.toString() );\n-        }\n-    }\n-\n-    public static Neo4jError fatalFrom( Throwable any )\n-    {\n-        return fromThrowable( any, true );\n-    }\n-\n-    public static Neo4jError fatalFrom( Status status, String message )\n-    {\n-        return new Neo4jError( status, message, true );\n-    }\n-\n-    public boolean isFatal()\n-    {\n-        return fatal;\n-    }\n+  private final Status status;\n+  private final String message;\n+  private final Throwable cause;\n+  private final UUID reference;\n+  private final boolean fatal;\n+\n+  private Neo4jError(Status status, String message, Throwable cause, boolean fatal)\n+  {\n+    this.status = status;\n+    this.message = message;\n+    this.cause = cause;\n+    this.fatal = fatal;\n+    this.reference = UUID.randomUUID();\n+  }\n+\n+  private Neo4jError(Status status, String message, boolean fatal)\n+  {\n+    this(status, message, null, fatal);\n+  }\n+\n+  private Neo4jError(Status status, Throwable cause, boolean fatal)\n+  {\n+    this(status, status.code().description(), cause, fatal);\n+  }\n+\n+  public Status status()\n+  {\n+    return status;\n+  }\n+\n+  public String message()\n+  {\n+    return message;\n+  }\n+\n+  public Throwable cause()\n+  {\n+    return cause;\n+  }\n+\n+  public UUID reference()\n+  {\n+    return reference;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+\n+    Neo4jError that = (Neo4jError) o;\n+\n+    return (status != null ? status.equals(that.status) : that.status == null) &&\n+        !(message != null ? !message.equals(that.message) : that.message != null);\n+\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = status != null ? status.hashCode() : 0;\n+    result = 31 * result + (message != null ? message.hashCode() : 0);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Neo4jError{\" +\n+        \"status=\" + status +\n+        \", message='\" + message + '\\'' +\n+        \", cause=\" + cause +\n+        \", reference=\" + reference +\n+        '}';\n+  }\n+\n+  public static Status codeFromString(String codeStr)\n+  {\n+    String[] parts = codeStr.split(\"\\\\.\");\n+    if (parts.length != 4)\n+    {\n+      return Status.General.UnknownError;\n+    }\n+\n+    String category = parts[2];\n+    String error = parts[3];\n+\n+    // Note: the input string may contain arbitrary input data, using reflection would open network attack vector\n+    switch (category)\n+    {\n+      case \"Schema\":\n+        return Status.Schema.valueOf(error);\n+      case \"LegacyIndex\":\n+        return Status.LegacyIndex.valueOf(error);\n+      case \"General\":\n+        return Status.General.valueOf(error);\n+      case \"Statement\":\n+        return Status.Statement.valueOf(error);\n+      case \"Transaction\":\n+        return Status.Transaction.valueOf(error);\n+      case \"Request\":\n+        return Status.Request.valueOf(error);\n+      case \"Network\":\n+        return Status.Network.valueOf(error);\n+      case \"Security\":\n+        return Status.Security.valueOf(error);\n+      default:\n+        return Status.General.UnknownError;\n+    }\n+  }\n+\n+  private static Neo4jError fromThrowable(Throwable any, boolean isFatal)\n+  {\n+    for (Throwable cause = any; cause != null; cause = cause.getCause())\n+    {\n+      if (cause instanceof Status.HasStatus)\n+      {\n+        return new Neo4jError(((Status.HasStatus) cause).status(), any.getMessage(), any, isFatal);\n+      }\n+      if (cause instanceof DatabaseShutdownException)\n+      {\n+        return new Neo4jError(Status.General.DatabaseUnavailable, cause, isFatal);\n+      }\n+      if (cause instanceof OutOfMemoryError)\n+      {\n+        return new Neo4jError(Status.General.OutOfMemoryError, cause, isFatal);\n+      }\n+      if (cause instanceof StackOverflowError)\n+      {\n+        return new Neo4jError(Status.General.StackOverFlowError, cause, isFatal);\n+      }\n+    }\n+\n+    // In this case, an error has \"slipped out\", and we don't have a good way to handle it. This indicates\n+    // a buggy code path, and we need to try to convince whoever ends up here to tell us about it.\n+\n+    return new Neo4jError(Status.General.UnknownError, any != null ? any.getMessage() : null, any, isFatal);\n+  }\n+\n+  public static Neo4jError from(Status status, String message)\n+  {\n+    return new Neo4jError(status, message, false);\n+  }\n+\n+  public static Neo4jError from(Throwable any)\n+  {\n+    return fromThrowable(any, false);\n+  }\n+\n+  public static Neo4jError combine(List<Neo4jError> errors)\n+  {\n+    if (errors == null || errors.isEmpty())\n+    {\n+      return null;\n+    } else if (errors.size() == 1)\n+    {\n+      return errors.get(0);\n+    } else\n+    {\n+      Neo4jError first = errors.get(0);\n+      Status combinedStatus = first.status;\n+      StringBuilder combinedMessage =\n+          new StringBuilder(String.format(\"The following errors has occurred:%n%n\"));\n+      combinedMessage.append(first.message);\n+      for (int i = 1; i < errors.size(); i++)\n+      {\n+        Neo4jError error = errors.get(i);\n+        combinedStatus = error.status == combinedStatus ? error.status : Status.General.UnknownError;\n+        combinedMessage\n+            .append(System.lineSeparator())\n+            .append(error.message);\n+      }\n+\n+      return from(combinedStatus, combinedMessage.toString());\n+    }\n+  }\n+\n+  public static Neo4jError fatalFrom(Throwable any)\n+  {\n+    return fromThrowable(any, true);\n+  }\n+\n+  public static Neo4jError fatalFrom(Status status, String message)\n+  {\n+    return new Neo4jError(status, message, true);\n+  }\n+\n+  public boolean isFatal()\n+  {\n+    return fatal;\n+  }\n }\n",
            "diff_size": 201
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4051/Neo4jError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4051/Neo4jError.java\nindex 049b14b6001..f00e01fa3c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4051/Neo4jError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4051/Neo4jError.java\n@@ -83,35 +83,30 @@ public class Neo4jError\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         Neo4jError that = (Neo4jError) o;\n \n-        return (status != null ? status.equals( that.status ) : that.status == null) &&\n-                !(message != null ? !message.equals( that.message ) : that.message != null);\n-\n+        return (status != null ? status.equals( that.status ) : that.status == null ) &&\n+                !( message != null ? !message.equals( that.message ) : that.message != null );\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = status != null ? status.hashCode() : 0;\n-        result = 31 * result + (message != null ? message.hashCode() : 0);\n+        result = 31 * result + (message != null ? message.hashCode() : 0 );\n         return result;\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"Neo4jError{\" +\n-                \"status=\" + status +\n-                \", message='\" + message + '\\'' +\n-                \", cause=\" + cause +\n-                \", reference=\" + reference +\n-                '}';\n+        return \"Neo4jError{\" + \"status=\" + status + \", message='\" + message + '\\'' + \", cause=\" + cause + \", reference=\" + reference + '}';\n     }\n \n     public static Status codeFromString( String codeStr )\n@@ -157,15 +152,18 @@ public class Neo4jError\n             {\n                 return new Neo4jError( ((Status.HasStatus) cause).status(), any.getMessage(), any, isFatal );\n             }\n-            if ( cause instanceof DatabaseShutdownException )\n+\n+if ( cause instanceof DatabaseShutdownException )\n             {\n                 return new Neo4jError( Status.General.DatabaseUnavailable, cause, isFatal );\n             }\n-            if ( cause instanceof OutOfMemoryError )\n+\n+if ( cause instanceof OutOfMemoryError )\n             {\n                 return new Neo4jError( Status.General.OutOfMemoryError, cause, isFatal );\n             }\n-            if ( cause instanceof StackOverflowError )\n+\n+if ( cause instanceof StackOverflowError )\n             {\n                 return new Neo4jError( Status.General.StackOverFlowError, cause, isFatal );\n             }\n@@ -201,16 +199,13 @@ public class Neo4jError\n         {\n             Neo4jError first = errors.get( 0 );\n             Status combinedStatus = first.status;\n-            StringBuilder combinedMessage =\n-                    new StringBuilder( String.format( \"The following errors has occurred:%n%n\" ) );\n-            combinedMessage.append( first.message );\n+            StringBuilder combinedMessage = new StringBuilder( String.format( \"The following errors has occurred:%n%n\" ) );\n+combinedMessage.append( first.message );\n             for ( int i = 1; i < errors.size(); i++ )\n             {\n                 Neo4jError error = errors.get( i );\n                 combinedStatus = error.status == combinedStatus ? error.status : Status.General.UnknownError;\n-                combinedMessage\n-                        .append( System.lineSeparator() )\n-                        .append( error.message );\n+                combinedMessage.append( System.lineSeparator() ).append( error.message );\n             }\n \n             return from( combinedStatus, combinedMessage.toString() );\n@@ -231,4 +226,4 @@ public class Neo4jError\n     {\n         return fatal;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
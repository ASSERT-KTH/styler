{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "112",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      if (processName != null) {\n        updated.compute(\n            processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n      }\n      return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 10, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..ae54c1ccc9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/112/GlobalWatermarkTrackerTest.java\n@@ -52,7 +52,7 @@ public class GlobalWatermarkTrackerTest {\n       if (processName != null) {\n         updated.compute(\n             processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n-      }\n+          }\n       return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..1988d2304c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/112/GlobalWatermarkTrackerTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.storage.watermark;\n \n import static org.junit.Assert.assertEquals;\n@@ -36,10 +37,12 @@ public class GlobalWatermarkTrackerTest {\n     }\n \n     @Override\n-    public void setup(Map<String, Object> cfg) {}\n+    public void setup(Map<String, Object> cfg) {\n+    }\n \n     @Override\n-    public void initWatermarks(Map<String, Long> initialWatermarks) {}\n+    public void initWatermarks(Map<String, Long> initialWatermarks) {\n+    }\n \n     @Override\n     public CompletableFuture<Void> update(String processName, long currentWatermark) {\n@@ -51,13 +54,15 @@ public class GlobalWatermarkTrackerTest {\n     public long getGlobalWatermark(@Nullable String processName, long currentWatermark) {\n       if (processName != null) {\n         updated.compute(\n-            processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n+            processName,\n+            (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n       }\n       return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n     }\n \n     @Override\n-    public void close() {}\n+    public void close() {\n+    }\n   }\n \n   @Test\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "54",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..e76d7a94b6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/112/GlobalWatermarkTrackerTest.java\n@@ -51,7 +51,7 @@ public class GlobalWatermarkTrackerTest {\n     public long getGlobalWatermark(@Nullable String processName, long currentWatermark) {\n       if (processName != null) {\n         updated.compute(\n-            processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n+            processName, (k, v) -> Math.max(v == null? Long.MIN_VALUE : v, currentWatermark));\n       }\n       return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n     }\n@@ -68,4 +68,4 @@ public class GlobalWatermarkTrackerTest {\n     tracker.finished(\"name\");\n     assertEquals(Long.MAX_VALUE, tracker.getWatermark());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "66",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "82",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..abdc8033347 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/112/GlobalWatermarkTrackerTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.storage.watermark;\n \n import static org.junit.Assert.assertEquals;\n-\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.CompletableFuture;\n@@ -24,6 +23,8 @@ import javax.annotation.Nullable;\n import org.junit.Test;\n \n /** Test invariants of {@link GlobalWatermarkTracker}. */\n+\n+\n public class GlobalWatermarkTrackerTest {\n \n   private static class Tracker implements GlobalWatermarkTracker {\n@@ -50,10 +51,12 @@ public class GlobalWatermarkTrackerTest {\n     @Override\n     public long getGlobalWatermark(@Nullable String processName, long currentWatermark) {\n       if (processName != null) {\n-        updated.compute(\n-            processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n+        updated.compute(processName, (k, v) -> Math.max(v == null? Long.MIN_VALUE: v, currentWatermark));\n       }\n-      return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n+      return updated.values().stream()\n+                             .mapToLong(e -> e)\n+                             .min()\n+                             .orElse(Long.MIN_VALUE);\n     }\n \n     @Override\n@@ -68,4 +71,4 @@ public class GlobalWatermarkTrackerTest {\n     tracker.finished(\"name\");\n     assertEquals(Long.MAX_VALUE, tracker.getWatermark());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 10, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..ae54c1ccc9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/112/GlobalWatermarkTrackerTest.java\n@@ -52,7 +52,7 @@ public class GlobalWatermarkTrackerTest {\n       if (processName != null) {\n         updated.compute(\n             processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n-      }\n+          }\n       return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "column": "46",
                    "severity": "error",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "54",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "68",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "69",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/112/GlobalWatermarkTrackerTest.java\nindex 7b6e52c0708..dbafd0d9758 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/112/GlobalWatermarkTrackerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/112/GlobalWatermarkTrackerTest.java\n@@ -51,8 +51,8 @@ public class GlobalWatermarkTrackerTest {\n     public long getGlobalWatermark(@Nullable String processName, long currentWatermark) {\n       if (processName != null) {\n         updated.compute(\n-            processName, (k, v) -> Math.max(v == null ? Long.MIN_VALUE : v, currentWatermark));\n-      }\n+            processName, (k, v) -> Math.max(v== null?Long.MIN_VALUE:v,currentWatermark));\n+            }\n       return updated.values().stream().mapToLong(e -> e).min().orElse(Long.MIN_VALUE);\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
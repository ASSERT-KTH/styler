{
    "project_name": "ctripcorp-apollo",
    "error_id": "117",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 107).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest(classes = AdminServiceTestConfiguration.class, webEnvironment = WebEnvironment.RANDOM_PORT)\npublic abstract class AbstractControllerTest {\n\n  @Autowired",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/117/AbstractControllerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/117/AbstractControllerTest.java\nindex 3d4922495b3..c30d97b4b13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/117/AbstractControllerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/117/AbstractControllerTest.java\n@@ -36,4 +36,4 @@ public abstract class AbstractControllerTest {\n   protected String url(String path) {\n     return \"http://localhost:\" + port + path;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/117/AbstractControllerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/117/AbstractControllerTest.java\nindex 3d4922495b3..fae21a4b56c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/117/AbstractControllerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/117/AbstractControllerTest.java\n@@ -1,7 +1,6 @@\n package com.ctrip.framework.apollo.adminservice.controller;\n \n import com.ctrip.framework.apollo.AdminServiceTestConfiguration;\n-\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n@@ -12,7 +11,6 @@ import org.springframework.boot.test.web.client.TestRestTemplate;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n import org.springframework.web.client.DefaultResponseErrorHandler;\n import org.springframework.web.client.RestTemplate;\n-\n import javax.annotation.PostConstruct;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n@@ -36,4 +34,4 @@ public abstract class AbstractControllerTest {\n   protected String url(String path) {\n     return \"http://localhost:\" + port + path;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
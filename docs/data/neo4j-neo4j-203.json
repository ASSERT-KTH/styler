{
    "project_name": "neo4j-neo4j",
    "error_id": "203",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/203/SchemaRead.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/203/SchemaRead.java\nindex 40c00a4ef33..7b2cf2198fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/203/SchemaRead.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/203/SchemaRead.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import java.util.Iterator;\n@@ -41,7 +42,7 @@ public interface SchemaRead extends SchemaReadCore\n      * @param schema The schema for which to look up an index.\n      * @return An index matching the schema, or {@link IndexDescriptor#NO_INDEX} if no such index was found or something went wrong.\n      */\n-    Iterator<IndexDescriptor> indexForSchemaNonTransactional( SchemaDescriptor schema );\n+    Iterator<IndexDescriptor> indexForSchemaNonTransactional(SchemaDescriptor schema);\n \n     /**\n      * Computes the selectivity of the unique values.\n@@ -50,7 +51,7 @@ public interface SchemaRead extends SchemaReadCore\n      * @return The selectivity of the given index\n      * @throws IndexNotFoundKernelException if the index is not there\n      */\n-    double indexUniqueValuesSelectivity( IndexDescriptor index ) throws IndexNotFoundKernelException;\n+    double indexUniqueValuesSelectivity(IndexDescriptor index) throws IndexNotFoundKernelException;\n \n     /**\n      * Returns the size of the index.\n@@ -59,18 +60,18 @@ public interface SchemaRead extends SchemaReadCore\n      * @return The size of the current index\n      * @throws IndexNotFoundKernelException if the index is not there\n      */\n-    long indexSize( IndexDescriptor index ) throws IndexNotFoundKernelException;\n+    long indexSize(IndexDescriptor index) throws IndexNotFoundKernelException;\n \n     /**\n      * Count the number of index entries for the given nodeId and value.\n      *\n-     * @param index The index of interest\n-     * @param nodeId node id to match.\n+     * @param index         The index of interest\n+     * @param nodeId        node id to match.\n      * @param propertyKeyId the indexed property to look at (composite indexes apply to more than one property, so we need to specify this)\n-     * @param value the property value\n+     * @param value         the property value\n      * @return number of index entries for the given {@code nodeId} and {@code value}.\n      */\n-    long nodesCountIndexed( IndexDescriptor index, long nodeId, int propertyKeyId, Value value ) throws KernelException;\n+    long nodesCountIndexed(IndexDescriptor index, long nodeId, int propertyKeyId, Value value) throws KernelException;\n \n     /**\n      * Returns the index sample info.\n@@ -79,7 +80,7 @@ public interface SchemaRead extends SchemaReadCore\n      * @return index sample info\n      * @throws IndexNotFoundKernelException if the index does not exist.\n      */\n-    IndexSample indexSample( IndexDescriptor index ) throws IndexNotFoundKernelException;\n+    IndexSample indexSample(IndexDescriptor index) throws IndexNotFoundKernelException;\n \n     /**\n      * Finds all constraints for the given schema\n@@ -87,7 +88,7 @@ public interface SchemaRead extends SchemaReadCore\n      * @param descriptor The descriptor of the schema\n      * @return All constraints for the given schema\n      */\n-    Iterator<ConstraintDescriptor> constraintsGetForSchema( SchemaDescriptor descriptor );\n+    Iterator<ConstraintDescriptor> constraintsGetForSchema(SchemaDescriptor descriptor);\n \n     /**\n      * Checks if a constraint exists\n@@ -95,7 +96,7 @@ public interface SchemaRead extends SchemaReadCore\n      * @param descriptor The descriptor of the constraint to check.\n      * @return {@code true} if the constraint exists, otherwise {@code false}\n      */\n-    boolean constraintExists( ConstraintDescriptor descriptor );\n+    boolean constraintExists(ConstraintDescriptor descriptor);\n \n     /**\n      * Produce a snapshot of the current schema, which can be accessed without acquiring any schema locks.\n@@ -112,17 +113,18 @@ public interface SchemaRead extends SchemaReadCore\n      * Get the owning constraint for a constraint index or <tt>null</tt> if the index does not have an owning\n      * constraint.\n      */\n-    Long indexGetOwningUniquenessConstraintId( IndexDescriptor index );\n+    Long indexGetOwningUniquenessConstraintId(IndexDescriptor index);\n \n     /**\n      * Returns schema state for the given key or create a new state if not there\n-     * @param key The key to access\n+     *\n+     * @param key     The key to access\n      * @param creator function creating schema state\n-     * @param <K> type of the key\n-     * @param <V> type of the schema state value\n+     * @param <K>     type of the key\n+     * @param <V>     type of the schema state value\n      * @return the state associated with the key or a new value if non-existing\n      */\n-    <K, V> V schemaStateGetOrCreate( K key, Function<K, V> creator );\n+    <K, V> V schemaStateGetOrCreate(K key, Function<K, V> creator);\n \n     /**\n      * Flush the schema state\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
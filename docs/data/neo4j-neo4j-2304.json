{
    "project_name": "neo4j-neo4j",
    "error_id": "2304",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2304/GenericLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2304/GenericLayout.java\nindex 975716a56f2..52ccbf93106 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2304/GenericLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2304/GenericLayout.java\n@@ -17,20 +17,21 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.Layout;\n import org.neo4j.io.pagecache.PageCursor;\n import org.neo4j.kernel.impl.index.schema.config.IndexSpecificSpaceFillingCurveSettings;\n \n-class GenericLayout extends IndexLayout<GenericKey,NativeIndexValue>\n+class GenericLayout extends IndexLayout<GenericKey, NativeIndexValue>\n {\n     private final int numberOfSlots;\n     private final IndexSpecificSpaceFillingCurveSettings spatialSettings;\n \n-    GenericLayout( int numberOfSlots, IndexSpecificSpaceFillingCurveSettings spatialSettings )\n+    GenericLayout(int numberOfSlots, IndexSpecificSpaceFillingCurveSettings spatialSettings)\n     {\n-        super( false, Layout.namedIdentifier( \"NSIL\", numberOfSlots ), 0, 5 );\n+        super(false, Layout.namedIdentifier(\"NSIL\", numberOfSlots), 0, 5);\n         this.numberOfSlots = numberOfSlots;\n         this.spatialSettings = spatialSettings;\n     }\n@@ -39,41 +40,41 @@ class GenericLayout extends IndexLayout<GenericKey,NativeIndexValue>\n     public GenericKey newKey()\n     {\n         return numberOfSlots == 1\n-               // An optimized version which has the GenericKeyState built-in w/o indirection\n-               ? new GenericKey( spatialSettings )\n-               // A version which has an indirection to GenericKeyState[]\n-               : new CompositeGenericKey( numberOfSlots, spatialSettings );\n+          // An optimized version which has the GenericKeyState built-in w/o indirection\n+          ? new GenericKey(spatialSettings)\n+          // A version which has an indirection to GenericKeyState[]\n+          : new CompositeGenericKey(numberOfSlots, spatialSettings);\n     }\n \n     @Override\n-    public GenericKey copyKey( GenericKey key, GenericKey into )\n+    public GenericKey copyKey(GenericKey key, GenericKey into)\n     {\n-        into.copyFrom( key );\n+        into.copyFrom(key);\n         return into;\n     }\n \n     @Override\n-    public int keySize( GenericKey key )\n+    public int keySize(GenericKey key)\n     {\n         return key.size();\n     }\n \n     @Override\n-    public void writeKey( PageCursor cursor, GenericKey key )\n+    public void writeKey(PageCursor cursor, GenericKey key)\n     {\n-        key.put( cursor );\n+        key.put(cursor);\n     }\n \n     @Override\n-    public void readKey( PageCursor cursor, GenericKey into, int keySize )\n+    public void readKey(PageCursor cursor, GenericKey into, int keySize)\n     {\n-        into.get( cursor, keySize );\n+        into.get(cursor, keySize);\n     }\n \n     @Override\n-    public void minimalSplitter( GenericKey left, GenericKey right, GenericKey into )\n+    public void minimalSplitter(GenericKey left, GenericKey right, GenericKey into)\n     {\n-        right.minimalSplitter( left, right, into );\n+        right.minimalSplitter(left, right, into);\n     }\n \n     IndexSpecificSpaceFillingCurveSettings getSpaceFillingCurveSettings()\n@@ -82,13 +83,13 @@ class GenericLayout extends IndexLayout<GenericKey,NativeIndexValue>\n     }\n \n     @Override\n-    public void initializeAsLowest( GenericKey key )\n+    public void initializeAsLowest(GenericKey key)\n     {\n         key.initValuesAsLowest();\n     }\n \n     @Override\n-    public void initializeAsHighest( GenericKey key )\n+    public void initializeAsHighest(GenericKey key)\n     {\n         key.initValuesAsHighest();\n     }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/35/ReconnectingChannels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/35/ReconnectingChannels.java\nindex 861ef8634e2..94919d06520 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/35/ReconnectingChannels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/35/ReconnectingChannels.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.messaging;\n \n import java.util.Collection;\n@@ -32,44 +33,44 @@ import org.neo4j.stream.Streams;\n \n public class ReconnectingChannels\n {\n-    private final ConcurrentHashMap<AdvertisedSocketAddress,ReconnectingChannel> lazyChannelMap =\n-            new ConcurrentHashMap<>();\n+  private final ConcurrentHashMap<AdvertisedSocketAddress, ReconnectingChannel> lazyChannelMap =\n+      new ConcurrentHashMap<>();\n \n-    public int size()\n-    {\n-        return lazyChannelMap.size();\n-    }\n+  public int size()\n+  {\n+    return lazyChannelMap.size();\n+  }\n \n-    public ReconnectingChannel get( AdvertisedSocketAddress to )\n-    {\n-        return lazyChannelMap.get( to );\n-    }\n+  public ReconnectingChannel get(AdvertisedSocketAddress to)\n+  {\n+    return lazyChannelMap.get(to);\n+  }\n \n-    public ReconnectingChannel putIfAbsent( AdvertisedSocketAddress to, ReconnectingChannel timestampedLazyChannel )\n-    {\n-        return lazyChannelMap.putIfAbsent( to, timestampedLazyChannel );\n-    }\n+  public ReconnectingChannel putIfAbsent(AdvertisedSocketAddress to, ReconnectingChannel timestampedLazyChannel)\n+  {\n+    return lazyChannelMap.putIfAbsent(to, timestampedLazyChannel);\n+  }\n \n-    public Collection<ReconnectingChannel> values()\n-    {\n-        return lazyChannelMap.values();\n-    }\n+  public Collection<ReconnectingChannel> values()\n+  {\n+    return lazyChannelMap.values();\n+  }\n \n-    public void remove( AdvertisedSocketAddress address )\n-    {\n-        lazyChannelMap.remove( address );\n-    }\n+  public void remove(AdvertisedSocketAddress address)\n+  {\n+    lazyChannelMap.remove(address);\n+  }\n \n-    public Stream<Pair<AdvertisedSocketAddress,ProtocolStack>> installedProtocols()\n-    {\n-        return lazyChannelMap.entrySet().stream()\n-                .map( this::installedProtocolOpt )\n-                .flatMap( Streams::ofOptional );\n-    }\n+  public Stream<Pair<AdvertisedSocketAddress, ProtocolStack>> installedProtocols()\n+  {\n+    return lazyChannelMap.entrySet().stream()\n+        .map(this::installedProtocolOpt)\n+        .flatMap(Streams::ofOptional);\n+  }\n \n-    private Optional<Pair<AdvertisedSocketAddress,ProtocolStack>> installedProtocolOpt( Map.Entry<AdvertisedSocketAddress,ReconnectingChannel> entry )\n-    {\n-        return entry.getValue().installedProtocolStack()\n-                .map( protocols -> Pair.of( entry.getKey(), protocols ) );\n-    }\n+  private Optional<Pair<AdvertisedSocketAddress, ProtocolStack>> installedProtocolOpt(Map.Entry<AdvertisedSocketAddress, ReconnectingChannel> entry)\n+  {\n+    return entry.getValue().installedProtocolStack()\n+        .map(protocols -> Pair.of(entry.getKey(), protocols));\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/35/ReconnectingChannels.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/35/ReconnectingChannels.java\nindex 861ef8634e2..16d418fa7c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/35/ReconnectingChannels.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/35/ReconnectingChannels.java\n@@ -32,10 +32,9 @@ import org.neo4j.stream.Streams;\n \n public class ReconnectingChannels\n {\n-    private final ConcurrentHashMap<AdvertisedSocketAddress,ReconnectingChannel> lazyChannelMap =\n-            new ConcurrentHashMap<>();\n+    private final ConcurrentHashMap<AdvertisedSocketAddress,ReconnectingChannel> lazyChannelMap = new ConcurrentHashMap<>();\n \n-    public int size()\n+public int size()\n     {\n         return lazyChannelMap.size();\n     }\n@@ -62,14 +61,11 @@ public class ReconnectingChannels\n \n     public Stream<Pair<AdvertisedSocketAddress,ProtocolStack>> installedProtocols()\n     {\n-        return lazyChannelMap.entrySet().stream()\n-                .map( this::installedProtocolOpt )\n-                .flatMap( Streams::ofOptional );\n+        return lazyChannelMap.entrySet().stream().map( this::installedProtocolOpt ).flatMap( Streams::ofOptional );\n     }\n \n     private Optional<Pair<AdvertisedSocketAddress,ProtocolStack>> installedProtocolOpt( Map.Entry<AdvertisedSocketAddress,ReconnectingChannel> entry )\n     {\n-        return entry.getValue().installedProtocolStack()\n-                .map( protocols -> Pair.of( entry.getKey(), protocols ) );\n+        return entry.getValue().installedProtocolStack().map( protocols -> Pair.of( entry.getKey(), protocols ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
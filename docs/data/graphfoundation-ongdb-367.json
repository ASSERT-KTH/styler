{
    "project_name": "graphfoundation-ongdb",
    "error_id": "367",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/367/Rmrel.java\nindex 058b9f7b65a..337a40df994 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/367/Rmrel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import java.rmi.RemoteException;\n@@ -37,67 +38,67 @@ import org.neo4j.shell.ShellException;\n  * Mimics the POSIX application \"rmdir\", but neo4j has relationships instead of\n  * directories (if you look at Neo4j in a certain perspective).\n  */\n-@Service.Implementation( App.class )\n+@Service.Implementation(App.class)\n public class Rmrel extends TransactionProvidingApp\n {\n-    /**\n-     * Constructs a new application which can delete relationships in Neo4j.\n-     */\n-    public Rmrel()\n-    {\n-        this.addOptionDefinition( \"f\", new OptionDefinition( OptionValueType.NONE,\n-            \"Force deletion, i.e. disables the connectedness check\" ) );\n-        this.addOptionDefinition( \"d\", new OptionDefinition( OptionValueType.NONE,\n-            \"Also delete the node on the other side of the relationship if removing\" +\n-            \" this relationship results in it not having any relationships left\" ) );\n-    }\n+  /**\n+   * Constructs a new application which can delete relationships in Neo4j.\n+   */\n+  public Rmrel()\n+  {\n+    this.addOptionDefinition(\"f\", new OptionDefinition(OptionValueType.NONE,\n+        \"Force deletion, i.e. disables the connectedness check\"));\n+    this.addOptionDefinition(\"d\", new OptionDefinition(OptionValueType.NONE,\n+        \"Also delete the node on the other side of the relationship if removing\" +\n+            \" this relationship results in it not having any relationships left\"));\n+  }\n \n-    @Override\n-    public String getDescription()\n-    {\n-        return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" +\n-                \"Usage: rmrel <relationship id>\\n\" +\n-                \"   or  rmrel -f <relationship id>\";\n-    }\n+  @Override\n+  public String getDescription()\n+  {\n+    return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" +\n+        \"Usage: rmrel <relationship id>\\n\" +\n+        \"   or  rmrel -f <relationship id>\";\n+  }\n \n-    @Override\n-    protected Continuation exec( AppCommandParser parser, Session session,\n-        Output out ) throws ShellException, RemoteException\n-    {\n-        assertCurrentIsNode( session );\n+  @Override\n+  protected Continuation exec(AppCommandParser parser, Session session,\n+                              Output out) throws ShellException, RemoteException\n+  {\n+    assertCurrentIsNode(session);\n \n-        if ( parser.arguments().isEmpty() )\n-        {\n-            throw new ShellException(\n-                \"Must supply relationship id to delete as the first argument\" );\n-        }\n+    if (parser.arguments().isEmpty())\n+    {\n+      throw new ShellException(\n+          \"Must supply relationship id to delete as the first argument\");\n+    }\n \n-        Node currentNode = this.getCurrent( session ).asNode();\n-        Relationship rel = findRel( currentNode, Long.parseLong(\n-            parser.arguments().get( 0 ) ) );\n-        rel.delete();\n+    Node currentNode = this.getCurrent(session).asNode();\n+    Relationship rel = findRel(currentNode, Long.parseLong(\n+        parser.arguments().get(0)));\n+    rel.delete();\n \n-        Node otherNode = rel.getOtherNode( currentNode );\n+    Node otherNode = rel.getOtherNode(currentNode);\n \n-        boolean deleteOtherNodeIfEmpty = parser.options().containsKey( \"d\" );\n-        if ( deleteOtherNodeIfEmpty && !otherNode.hasRelationship() )\n-        {\n-            out.println( \"Also deleted \" + getDisplayName( getServer(), session, otherNode, false ) +\n-                    \" due to it not having any relationships left\" );\n-            otherNode.delete();\n-        }\n-        return Continuation.INPUT_COMPLETE;\n+    boolean deleteOtherNodeIfEmpty = parser.options().containsKey(\"d\");\n+    if (deleteOtherNodeIfEmpty && !otherNode.hasRelationship())\n+    {\n+      out.println(\"Also deleted \" + getDisplayName(getServer(), session, otherNode, false) +\n+          \" due to it not having any relationships left\");\n+      otherNode.delete();\n     }\n+    return Continuation.INPUT_COMPLETE;\n+  }\n \n-    private Relationship findRel( Node currentNode, long relId )\n-        throws ShellException\n+  private Relationship findRel(Node currentNode, long relId)\n+      throws ShellException\n+  {\n+    Relationship rel = getServer().getDb().getRelationshipById(relId);\n+    if (rel.getStartNode().equals(currentNode) || rel.getEndNode().equals(currentNode))\n     {\n-        Relationship rel = getServer().getDb().getRelationshipById( relId );\n-        if ( rel.getStartNode().equals( currentNode ) || rel.getEndNode().equals( currentNode ) )\n-        {\n-            return rel;\n-        }\n-        throw new ShellException( \"No relationship \" + relId +\n-            \" connected to \" + currentNode );\n+      return rel;\n     }\n+    throw new ShellException(\"No relationship \" + relId +\n+        \" connected to \" + currentNode);\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 223).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/367/Rmrel.java\nindex 058b9f7b65a..d09dc8a5dab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/367/Rmrel.java\n@@ -45,59 +45,47 @@ public class Rmrel extends TransactionProvidingApp\n      */\n     public Rmrel()\n     {\n-        this.addOptionDefinition( \"f\", new OptionDefinition( OptionValueType.NONE,\n-            \"Force deletion, i.e. disables the connectedness check\" ) );\n-        this.addOptionDefinition( \"d\", new OptionDefinition( OptionValueType.NONE,\n-            \"Also delete the node on the other side of the relationship if removing\" +\n-            \" this relationship results in it not having any relationships left\" ) );\n+        this.addOptionDefinition( \"f\", new OptionDefinition( OptionValueType.NONE, \"Force deletion, i.e. disables the connectedness check\" ) );\n+this.addOptionDefinition( \"d\", new OptionDefinition( OptionValueType.NONE, \"Also delete the node on the other side of the relationship if removing\" + \" this relationship results in it not having any relationships left\" ) );\n     }\n \n     @Override\n     public String getDescription()\n     {\n-        return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" +\n-                \"Usage: rmrel <relationship id>\\n\" +\n-                \"   or  rmrel -f <relationship id>\";\n+        return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" + \"Usage: rmrel <relationship id>\\n\" + \"   or  rmrel -f <relationship id>\";\n     }\n \n     @Override\n-    protected Continuation exec( AppCommandParser parser, Session session,\n-        Output out ) throws ShellException, RemoteException\n-    {\n+    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws ShellException, RemoteException\n+{\n         assertCurrentIsNode( session );\n-\n-        if ( parser.arguments().isEmpty() )\n+if ( parser.arguments().isEmpty() )\n         {\n-            throw new ShellException(\n-                \"Must supply relationship id to delete as the first argument\" );\n-        }\n+            throw new ShellException( \"Must supply relationship id to delete as the first argument\" );\n+    }\n \n         Node currentNode = this.getCurrent( session ).asNode();\n-        Relationship rel = findRel( currentNode, Long.parseLong(\n-            parser.arguments().get( 0 ) ) );\n-        rel.delete();\n-\n-        Node otherNode = rel.getOtherNode( currentNode );\n+        Relationship rel = findRel( currentNode, Long.parseLong( parser.arguments().get( 0 ) ) );\n+rel.delete();\n+Node otherNode = rel.getOtherNode( currentNode );\n \n         boolean deleteOtherNodeIfEmpty = parser.options().containsKey( \"d\" );\n         if ( deleteOtherNodeIfEmpty && !otherNode.hasRelationship() )\n         {\n-            out.println( \"Also deleted \" + getDisplayName( getServer(), session, otherNode, false ) +\n-                    \" due to it not having any relationships left\" );\n-            otherNode.delete();\n+            out.println( \"Also deleted \" + getDisplayName( getServer(), session, otherNode, false ) + \" due to it not having any relationships left\" );\n+otherNode.delete();\n         }\n-        return Continuation.INPUT_COMPLETE;\n+\n+return Continuation.INPUT_COMPLETE;\n     }\n \n-    private Relationship findRel( Node currentNode, long relId )\n-        throws ShellException\n-    {\n+    private Relationship findRel( Node currentNode, long relId ) throws ShellException\n+{\n         Relationship rel = getServer().getDb().getRelationshipById( relId );\n         if ( rel.getStartNode().equals( currentNode ) || rel.getEndNode().equals( currentNode ) )\n         {\n             return rel;\n         }\n-        throw new ShellException( \"No relationship \" + relId +\n-            \" connected to \" + currentNode );\n+        throw new ShellException( \"No relationship \" + relId + \" connected to \" + currentNode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "36",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "84",
                    "column": "54",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "61",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/367/Rmrel.java\nindex 058b9f7b65a..51dcbaeda08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/367/Rmrel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/367/Rmrel.java\n@@ -20,7 +20,6 @@\n package org.neo4j.shell.kernel.apps;\n \n import java.rmi.RemoteException;\n-\n import org.neo4j.graphdb.Node;\n import org.neo4j.graphdb.Relationship;\n import org.neo4j.helpers.Service;\n@@ -37,7 +36,8 @@ import org.neo4j.shell.ShellException;\n  * Mimics the POSIX application \"rmdir\", but neo4j has relationships instead of\n  * directories (if you look at Neo4j in a certain perspective).\n  */\n-@Service.Implementation( App.class )\n+\n+@ Service.Implementation( App.class )\n public class Rmrel extends TransactionProvidingApp\n {\n     /**\n@@ -45,59 +45,47 @@ public class Rmrel extends TransactionProvidingApp\n      */\n     public Rmrel()\n     {\n-        this.addOptionDefinition( \"f\", new OptionDefinition( OptionValueType.NONE,\n-            \"Force deletion, i.e. disables the connectedness check\" ) );\n-        this.addOptionDefinition( \"d\", new OptionDefinition( OptionValueType.NONE,\n-            \"Also delete the node on the other side of the relationship if removing\" +\n-            \" this relationship results in it not having any relationships left\" ) );\n+        this.addOptionDefinition( \"f\", new OptionDefinition( OptionValueType.NONE, \"Force deletion, i.e. disables the connectedness check\" ) );\n+        this.addOptionDefinition( \"d\", new OptionDefinition( OptionValueType.NONE, \"Also delete the node on the other side of the relationship if removing\" + \" this relationship results in it not having any relationships left\" ) );\n     }\n \n     @Override\n     public String getDescription()\n     {\n-        return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" +\n-                \"Usage: rmrel <relationship id>\\n\" +\n-                \"   or  rmrel -f <relationship id>\";\n+        return \"Deletes a relationship, also ensuring the connectedness of the graph. That check can be ignored with -f\\n\" + \"Usage: rmrel <relationship id>\\n\" + \"   or  rmrel -f <relationship id>\";\n     }\n \n     @Override\n-    protected Continuation exec( AppCommandParser parser, Session session,\n-        Output out ) throws ShellException, RemoteException\n+    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws ShellException, RemoteException\n     {\n         assertCurrentIsNode( session );\n-\n         if ( parser.arguments().isEmpty() )\n         {\n-            throw new ShellException(\n-                \"Must supply relationship id to delete as the first argument\" );\n+            throw new ShellException( \"Must supply relationship id to delete as the first argument\" );\n         }\n \n         Node currentNode = this.getCurrent( session ).asNode();\n-        Relationship rel = findRel( currentNode, Long.parseLong(\n-            parser.arguments().get( 0 ) ) );\n+        Relationship rel = findRel( currentNode, Long.parseLong( parser.arguments().get( 0 ) ) );\n         rel.delete();\n-\n         Node otherNode = rel.getOtherNode( currentNode );\n-\n         boolean deleteOtherNodeIfEmpty = parser.options().containsKey( \"d\" );\n-        if ( deleteOtherNodeIfEmpty && !otherNode.hasRelationship() )\n+        if ( deleteOtherNodeIfEmpty&& ! otherNode.hasRelationship() )\n         {\n-            out.println( \"Also deleted \" + getDisplayName( getServer(), session, otherNode, false ) +\n-                    \" due to it not having any relationships left\" );\n+            out.println( \"Also deleted \" + getDisplayName( getServer(), session, otherNode, false ) + \" due to it not having any relationships left\" );\n             otherNode.delete();\n         }\n+\n         return Continuation.INPUT_COMPLETE;\n     }\n \n-    private Relationship findRel( Node currentNode, long relId )\n-        throws ShellException\n+    private Relationship findRel( Node currentNode, long relId ) throws ShellException\n     {\n         Relationship rel = getServer().getDb().getRelationshipById( relId );\n-        if ( rel.getStartNode().equals( currentNode ) || rel.getEndNode().equals( currentNode ) )\n+        if ( rel.getStartNode().equals( currentNode )|| rel.getEndNode().equals( currentNode ) )\n         {\n             return rel;\n         }\n-        throw new ShellException( \"No relationship \" + relId +\n-            \" connected to \" + currentNode );\n+\n+        throw new ShellException( \"No relationship \" + relId+ \" connected to \" + currentNode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
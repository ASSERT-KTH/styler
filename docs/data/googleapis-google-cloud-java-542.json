{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "542",
    "information": {
        "errors": [
            {
                "line": "111",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 104).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    requestPb.addKeys(key);\n    try {\n      com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build());\n      if (responsePb.getDeferredCount() > 0) {\n        key = responsePb.getDeferred(0);\n      } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/542/DatastoreOptions.java\nindex 23128a85676..d0e2c5501f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/542/DatastoreOptions.java\n@@ -100,7 +100,7 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n     Builder builder = toBuilder();\n     builder.normalizeDataset(false);\n     // Replace provided project-id with full project-id (s~xxx, e~xxx,...)\n-    com.google.datastore.v1beta3.LookupRequest.Builder requestPb = \n+    com.google.datastore.v1beta3.LookupRequest.Builder requestPb =\n         com.google.datastore.v1beta3.LookupRequest.newBuilder();\n     com.google.datastore.v1beta3.Key key = com.google.datastore.v1beta3.Key.newBuilder()\n         .addPath(com.google.datastore.v1beta3.Key.PathElement.newBuilder()\n@@ -108,7 +108,8 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n         .build();\n     requestPb.addKeys(key);\n     try {\n-      com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build());\n+      com.google.datastore.v1beta3.LookupResponse responsePb =\n+          datastoreRpc().lookup(requestPb.build());\n       if (responsePb.getDeferredCount() > 0) {\n         key = responsePb.getDeferred(0);\n       } else {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/542/DatastoreOptions.java\nindex 23128a85676..e79d0e0493b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/542/DatastoreOptions.java\n@@ -66,7 +66,8 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n     @Override\n     public DatastoreOptions build() {\n       DatastoreOptions options = new DatastoreOptions(this);\n-      return normalizeDataset ? options.normalize() : options;\n+      return normalizeDataset\n+    ? options.normalize() : options;\n     }\n \n     public Builder namespace(String namespace) {\n@@ -100,12 +101,10 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n     Builder builder = toBuilder();\n     builder.normalizeDataset(false);\n     // Replace provided project-id with full project-id (s~xxx, e~xxx,...)\n-    com.google.datastore.v1beta3.LookupRequest.Builder requestPb = \n-        com.google.datastore.v1beta3.LookupRequest.newBuilder();\n-    com.google.datastore.v1beta3.Key key = com.google.datastore.v1beta3.Key.newBuilder()\n+    com.google.datastore.v1beta3.LookupRequest.Builder requestPb = com.google.datastore.v1beta3.LookupRequest.newBuilder();\n+com.google.datastore.v1beta3.Key key = com.google.datastore.v1beta3.Key.newBuilder()\n         .addPath(com.google.datastore.v1beta3.Key.PathElement.newBuilder()\n-            .setKind(\"__foo__\").setName(\"bar\"))\n-        .build();\n+            .setKind(\"__foo__\").setName(\"bar\")).build();\n     requestPb.addKeys(key);\n     try {\n       com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build());\n@@ -208,4 +207,4 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n   public static Builder builder() {\n     return new Builder();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "column": "26",
                    "severity": "warning",
                    "message": "WhitespaceAround: '^' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/542/DatastoreOptions.java\nindex 23128a85676..e73c4422bfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/542/DatastoreOptions.java\n@@ -26,12 +26,12 @@ import com.google.gcloud.spi.DatastoreRpc;\n import com.google.gcloud.spi.DatastoreRpc.DatastoreRpcException;\n import com.google.gcloud.spi.DatastoreRpcFactory;\n import com.google.gcloud.spi.DefaultDatastoreRpc;\n-\n import java.lang.reflect.Method;\n import java.util.Iterator;\n import java.util.Objects;\n import java.util.Set;\n \n+\n public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOptions> {\n \n   private static final long serialVersionUID = -8636602944160689193L;\n@@ -40,21 +40,18 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n   private static final String DATASTORE_SCOPE = \"https://www.googleapis.com/auth/datastore\";\n   private static final String USERINFO_SCOPE = \"https://www.googleapis.com/auth/userinfo.email\";\n   private static final Set<String> SCOPES = ImmutableSet.of(DATASTORE_SCOPE, USERINFO_SCOPE);\n-\n   private final String namespace;\n   private final boolean force;\n   private final boolean normalizeDataset;\n   private transient DatastoreRpc datastoreRpc;\n \n-  public static class Builder extends\n-      ServiceOptions.Builder<DatastoreRpc, DatastoreOptions, Builder> {\n+  public static class Builder extends ServiceOptions.Builder<DatastoreRpc, DatastoreOptions, Builder> {\n \n     private String namespace;\n     private boolean force;\n     private boolean normalizeDataset = true;\n \n-    private Builder() {\n-    }\n+    private Builder() {}\n \n     private Builder(DatastoreOptions options) {\n       super(options);\n@@ -96,24 +93,18 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n     if (!normalizeDataset) {\n       return this;\n     }\n-\n     Builder builder = toBuilder();\n     builder.normalizeDataset(false);\n     // Replace provided project-id with full project-id (s~xxx, e~xxx,...)\n-    com.google.datastore.v1beta3.LookupRequest.Builder requestPb = \n-        com.google.datastore.v1beta3.LookupRequest.newBuilder();\n-    com.google.datastore.v1beta3.Key key = com.google.datastore.v1beta3.Key.newBuilder()\n-        .addPath(com.google.datastore.v1beta3.Key.PathElement.newBuilder()\n-            .setKind(\"__foo__\").setName(\"bar\"))\n-        .build();\n+    com.google.datastore.v1beta3.LookupRequest.Builder requestPb = com.google.datastore.v1beta3.LookupRequest.newBuilder();\n+    com.google.datastore.v1beta3.Key key = com.google.datastore.v1beta3.Key.newBuilder().addPath(com.google.datastore.v1beta3.Key.PathElement.newBuilder().setKind(\"__foo__\").setName(\"bar\")).build();\n     requestPb.addKeys(key);\n     try {\n       com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build());\n       if (responsePb.getDeferredCount() > 0) {\n         key = responsePb.getDeferred(0);\n       } else {\n-        Iterator<com.google.datastore.v1beta3.EntityResult> combinedIter =\n-            Iterables.concat(responsePb.getMissingList(), responsePb.getFoundList()).iterator();\n+        Iterator<com.google.datastore.v1beta3.EntityResult> combinedIter = Iterables.concat(responsePb.getMissingList(), responsePb.getFoundList()).iterator();\n         key = combinedIter.next().getEntity().getKey();\n       }\n       builder.projectId(key.getPartitionId().getProjectId());\n@@ -172,7 +163,7 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n \n   @Override\n   public int hashCode() {\n-    return baseHashCode() ^ Objects.hash(namespace, force, normalizeDataset);\n+    return baseHashCode()^ Objects.hash(namespace, force, normalizeDataset);\n   }\n \n   @Override\n@@ -181,9 +172,10 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n       return false;\n     }\n     DatastoreOptions other = (DatastoreOptions) obj;\n-    return baseEquals(other) && Objects.equals(namespace, other.namespace)\n-        && Objects.equals(force, other.force)\n-        && Objects.equals(normalizeDataset, other.normalizeDataset);\n+    return baseEquals(other)\n+      && Objects.equals(namespace, other.namespace)\n+      && Objects.equals(force, other.force)\n+      && Objects.equals(normalizeDataset, other.normalizeDataset);\n   }\n \n   DatastoreRpc datastoreRpc() {\n@@ -208,4 +200,4 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n   public static Builder builder() {\n     return new Builder();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/542/DatastoreOptions.java\nindex 23128a85676..95033c14412 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/542/DatastoreOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/542/DatastoreOptions.java\n@@ -108,8 +108,8 @@ public class DatastoreOptions extends ServiceOptions<DatastoreRpc, DatastoreOpti\n         .build();\n     requestPb.addKeys(key);\n     try {\n-      com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build());\n-      if (responsePb.getDeferredCount() > 0) {\n+      com.google.datastore.v1beta3.LookupResponse responsePb = datastoreRpc().lookup(requestPb.build())\n+    ; if (responsePb.getDeferredCount() > 0) {\n         key = responsePb.getDeferred(0);\n       } else {\n         Iterator<com.google.datastore.v1beta3.EntityResult> combinedIter =\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
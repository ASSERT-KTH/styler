{
    "project_name": "java110-MicroCommunity",
    "error_id": "482",
    "information": {
        "errors": [
            {
                "line": "165",
                "column": "20",
                "severity": "error",
                "message": "'{' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            } else if (\"992019111758490006\".equals(appId)) { //\u5c0f\u7a0b\u5e8f\n                paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n            } else {//app\n                paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n            }\n            paramObj.put(\"userId\", GenerateCodeFactory.getUserId());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/482/OwnerRegisterListener.java\nindex 79e47ff8a64..c86729d47c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/482/OwnerRegisterListener.java\n@@ -162,7 +162,7 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT);\n             } else if (\"992019111758490006\".equals(appId)) { //\u5c0f\u7a0b\u5e8f\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n-            } else {//app\n+            } else { //app\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n             }\n             paramObj.put(\"userId\", GenerateCodeFactory.getUserId());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "165",
                    "column": "20",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/482/OwnerRegisterListener.java\nindex 79e47ff8a64..b9d0788e0fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/482/OwnerRegisterListener.java\n@@ -114,7 +114,7 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n \n         try {\n             OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n-            ownerAppUserDto.setStates(new String[]{\"10000\", \"12000\"});\n+            ownerAppUserDto.setStates(new String[] {\"10000\", \"12000\"});\n \n             List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "160",
                    "column": "27",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/482/OwnerRegisterListener.java\nindex 79e47ff8a64..f3c79e00daa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/482/OwnerRegisterListener.java\n@@ -28,7 +28,6 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n-\n import java.util.List;\n \n /**\n@@ -40,15 +39,20 @@ import java.util.List;\n  * add by wuxw 2019/4/26\n  **/\n \n+\n @Java110Listener(\"ownerRegisterListener\")\n public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n \n     //\u57df\n+\n+\n     public static final String DOMAIN_COMMON = \"DOMAIN.COMMON\";\n \n     //\u952e\n-    public static final String ID_CARD_SWITCH = \"ID_CARD_SWITCH\";\n \n+\n+\n+    public static final String ID_CARD_SWITCH = \"ID_CARD_SWITCH\";\n     private static final int DEFAULT_SEQ_COMMUNITY_MEMBER = 2;\n \n     @Autowired\n@@ -74,7 +78,6 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n \n     @Autowired\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n-\n     private static Logger logger = LoggerFactory.getLogger(OwnerRegisterListener.class);\n \n     @Override\n@@ -96,7 +99,6 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n         Assert.hasKeyAndValue(reqJson, \"link\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\");\n         Assert.hasKeyAndValue(reqJson, \"msgCode\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\u9a8c\u8bc1\u7801\");\n         Assert.hasKeyAndValue(reqJson, \"password\", \"\u672a\u5305\u542b\u5bc6\u7801\");\n-\n         SmsDto smsDto = new SmsDto();\n         smsDto.setTel(reqJson.getString(\"link\"));\n         smsDto.setCode(reqJson.getString(\"msgCode\"));\n@@ -108,14 +110,12 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n     }\n \n     @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n-\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n-\n         try {\n             OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n-            ownerAppUserDto.setStates(new String[]{\"10000\", \"12000\"});\n-\n+            ownerAppUserDto.setStates(new String[] {\"10000\", \"12000\"});\n             List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n \n             //Assert.listOnlyOne(ownerAppUserDtos, \"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u5165\u9a7b\u5c0f\u533a\");\n@@ -124,16 +124,14 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n             }\n \n             //\u67e5\u8be2\u5c0f\u533a\u662f\u5426\u5b58\u5728\n+\n             CommunityDto communityDto = new CommunityDto();\n             communityDto.setCityCode(reqJson.getString(\"areaCode\"));\n             communityDto.setName(reqJson.getString(\"communityName\"));\n             communityDto.setState(\"1100\");\n             List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n-\n             Assert.listOnlyOne(communityDtos, \"\u586b\u5199\u5c0f\u533a\u4fe1\u606f\u9519\u8bef\");\n-\n             CommunityDto tmpCommunityDto = communityDtos.get(0);\n-\n             OwnerDto ownerDto = new OwnerDto();\n             ownerDto.setCommunityId(tmpCommunityDto.getCommunityId());\n             //ownerDto.setIdCard(reqJson.getString(\"idCard\"));\n@@ -147,49 +145,46 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n             if (val.equals(\"1\") && idCard != null) {\n                 ownerDto.setIdCard(idCard);\n             }\n-            List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n \n+            List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n             Assert.listOnlyOne(ownerDtos, \"\u586b\u5199\u4e1a\u4e3b\u4fe1\u606f\u9519\u8bef\");\n-\n             OwnerDto tmpOwnerDto = ownerDtos.get(0);\n-\n             DataFlowContext dataFlowContext = event.getDataFlowContext();\n-\n             String paramIn = dataFlowContext.getReqData();\n             JSONObject paramObj = JSONObject.parseObject(paramIn);\n             String appId = context.getAppId();\n             if (\"992020061452450002\".equals(appId)) { //\u516c\u4f17\u53f7\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT);\n             } else if (\"992019111758490006\".equals(appId)) { //\u5c0f\u7a0b\u5e8f\n-                paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n-            } else {//app\n-                paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n-            }\n+                       paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n+                   } else {//app\n+                       paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n+                   }\n+\n             paramObj.put(\"userId\", GenerateCodeFactory.getUserId());\n+\n             if (reqJson.containsKey(\"openId\")) {\n                 paramObj.put(\"openId\", reqJson.getString(\"openId\"));\n             } else {\n                 paramObj.put(\"openId\", \"-1\");\n             }\n             //\u6dfb\u52a0\u5c0f\u533a\u697c\n+\n             ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, dataFlowContext);\n             paramObj.put(\"name\", paramObj.getString(\"appUserName\"));\n             paramObj.put(\"tel\", paramObj.getString(\"link\"));\n             userBMOImpl.registerUser(paramObj, dataFlowContext);\n-\n         } catch (Exception e) {\n             context.setServiceBusiness(null);\n             context.setResponseEntity(ResultVo.createResponseEntity(ResultVo.CODE_UNAUTHORIZED, e.getMessage()));\n         }\n     }\n \n-\n     @Override\n     public int getOrder() {\n         return 0;\n     }\n \n-\n     public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n         return fileInnerServiceSMOImpl;\n     }\n@@ -198,7 +193,6 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n         this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n     }\n \n-\n     public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n         return communityInnerServiceSMOImpl;\n     }\n@@ -207,7 +201,6 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n         this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n     }\n \n-\n     public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n         return ownerInnerServiceSMOImpl;\n     }\n@@ -231,4 +224,4 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/482/OwnerRegisterListener.java\nindex 79e47ff8a64..c86729d47c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/482/OwnerRegisterListener.java\n@@ -162,7 +162,7 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT);\n             } else if (\"992019111758490006\".equals(appId)) { //\u5c0f\u7a0b\u5e8f\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n-            } else {//app\n+            } else { //app\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n             }\n             paramObj.put(\"userId\", GenerateCodeFactory.getUserId());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/482/OwnerRegisterListener.java\nindex 79e47ff8a64..c86729d47c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/482/OwnerRegisterListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/482/OwnerRegisterListener.java\n@@ -162,7 +162,7 @@ public class OwnerRegisterListener extends AbstractServiceApiPlusListener {\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT);\n             } else if (\"992019111758490006\".equals(appId)) { //\u5c0f\u7a0b\u5e8f\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_WECHAT_MINA);\n-            } else {//app\n+            } else { //app\n                 paramObj.put(\"appType\", OwnerAppUserDto.APP_TYPE_APP);\n             }\n             paramObj.put(\"userId\", GenerateCodeFactory.getUserId());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
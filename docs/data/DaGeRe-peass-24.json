{
    "project_name": "DaGeRe-peass",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "33",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t}\n\t\n\tpublic int getVersions(){\n\t\treturn data.size();\n\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/24/TestData.java\nindex fbcd4f6d52d..6a729879846 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/24/TestData.java\n@@ -64,7 +64,7 @@ public class TestData {\n \t\treturn testcase.getMethod();\n \t}\n \t\n-\tpublic int getVersions(){\n+\tpublic int getVersions() {\n \t\treturn data.size();\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/24/TestData.java\nindex fbcd4f6d52d..e4ae5448423 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/24/TestData.java\n@@ -13,59 +13,58 @@ import de.peran.dependencyprocessors.VersionComparator;\n \n /**\n  * Saves the measurement data of one testclass in every version and every run.\n- * \n- * @author reichelt\n  *\n+ * @author reichelt\n  */\n public class TestData {\n \n-\tprivate static final Logger LOG = LogManager.getLogger(TestData.class);\n-\n-\tprivate final TestCase testcase;\n-\n-\tprivate final SortedMap<String, EvaluationPair> data = new TreeMap<>(VersionComparator.INSTANCE);\n-\n-\tpublic TestData(final TestCase testcase) {\n-\t\tsuper();\n-\t\tthis.testcase = testcase;\n-\t}\n-\n-\tpublic void addMeasurement(final String version, final Kopemedata resultData, final boolean isNew) {\n-\t\tfinal String versionOfPair = isNew ? VersionComparator.getNextVersionForTestcase(testcase, version) : version;\n-\n-\t\tLOG.trace(\"Pair-Version: {} Class: {} Method: {}\", versionOfPair, testcase.getClazz(), testcase.getMethod());\n-\t\tEvaluationPair currentPair = data.get(versionOfPair);\n-\t\t// LOG.debug(currentPair);\n-\t\tif (currentPair == null) {\n-\t\t\tfinal String predecessor = isNew ? version : VersionComparator.getPreviousVersionForTestcase(testcase, version);\n-\t\t\tLOG.debug(\"Version: {} Predecessor: {}\", versionOfPair, predecessor);\n-\t\t\tcurrentPair = new EvaluationPair(versionOfPair, predecessor);\n-\t\t\tdata.put(versionOfPair, currentPair);\n-\t\t}\n-\n-\t\tfinal Result result = resultData.getTestcases().getTestcase().get(0).getDatacollector().get(0).getResult().get(0);\n-\t\tif (!isNew) {\n-\t\t\tcurrentPair.getCurrent().add(result);\n-\t\t} else {\n-\t\t\tcurrentPair.getPrevius().add(result);\n-\t\t}\n-\n-\t}\n-\n-\tpublic SortedMap<String, EvaluationPair> getMeasurements() {\n-\t\treturn data;\n-\t}\n-\n-\tpublic String getTestClass() {\n-\t\treturn testcase.getClazz();\n-\t}\n-\n-\tpublic String getTestMethod() {\n-\t\treturn testcase.getMethod();\n-\t}\n-\t\n-\tpublic int getVersions(){\n-\t\treturn data.size();\n-\t}\n+  private static final Logger LOG = LogManager.getLogger(TestData.class);\n+\n+  private final TestCase testcase;\n+\n+  private final SortedMap<String, EvaluationPair> data = new TreeMap<>(VersionComparator.INSTANCE);\n+\n+  public TestData(final TestCase testcase) {\n+    super();\n+    this.testcase = testcase;\n+  }\n+\n+  public void addMeasurement(final String version, final Kopemedata resultData, final boolean isNew) {\n+    final String versionOfPair = isNew ? VersionComparator.getNextVersionForTestcase(testcase, version) : version;\n+\n+    LOG.trace(\"Pair-Version: {} Class: {} Method: {}\", versionOfPair, testcase.getClazz(), testcase.getMethod());\n+    EvaluationPair currentPair = data.get(versionOfPair);\n+    // LOG.debug(currentPair);\n+    if (currentPair == null) {\n+      final String predecessor = isNew ? version : VersionComparator.getPreviousVersionForTestcase(testcase, version);\n+      LOG.debug(\"Version: {} Predecessor: {}\", versionOfPair, predecessor);\n+      currentPair = new EvaluationPair(versionOfPair, predecessor);\n+      data.put(versionOfPair, currentPair);\n+    }\n+\n+    final Result result = resultData.getTestcases().getTestcase().get(0).getDatacollector().get(0).getResult().get(0);\n+    if (!isNew) {\n+      currentPair.getCurrent().add(result);\n+    } else {\n+      currentPair.getPrevius().add(result);\n+    }\n+\n+  }\n+\n+  public SortedMap<String, EvaluationPair> getMeasurements() {\n+    return data;\n+  }\n+\n+  public String getTestClass() {\n+    return testcase.getClazz();\n+  }\n+\n+  public String getTestMethod() {\n+    return testcase.getMethod();\n+  }\n+\n+  public int getVersions() {\n+    return data.size();\n+  }\n \n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/24/TestData.java\nindex fbcd4f6d52d..ca9c497be9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/24/TestData.java\n@@ -64,8 +64,8 @@ public class TestData {\n \t\treturn testcase.getMethod();\n \t}\n \t\n-\tpublic int getVersions(){\n-\t\treturn data.size();\n+\tpublic int getVersions() {\n+\treturn data.size();\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/24/TestData.java\nindex fbcd4f6d52d..9ef7b11c51a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/24/TestData.java\n@@ -2,10 +2,8 @@ package de.peran.measurement.analysis.statistics;\n \n import java.util.SortedMap;\n import java.util.TreeMap;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n-\n import de.dagere.kopeme.generated.Kopemedata;\n import de.dagere.kopeme.generated.TestcaseType.Datacollector.Result;\n import de.peran.dependency.analysis.data.TestCase;\n@@ -17,55 +15,54 @@ import de.peran.dependencyprocessors.VersionComparator;\n  * @author reichelt\n  *\n  */\n-public class TestData {\n-\n-\tprivate static final Logger LOG = LogManager.getLogger(TestData.class);\n-\n-\tprivate final TestCase testcase;\n-\n-\tprivate final SortedMap<String, EvaluationPair> data = new TreeMap<>(VersionComparator.INSTANCE);\n-\n-\tpublic TestData(final TestCase testcase) {\n-\t\tsuper();\n-\t\tthis.testcase = testcase;\n-\t}\n \n-\tpublic void addMeasurement(final String version, final Kopemedata resultData, final boolean isNew) {\n-\t\tfinal String versionOfPair = isNew ? VersionComparator.getNextVersionForTestcase(testcase, version) : version;\n \n-\t\tLOG.trace(\"Pair-Version: {} Class: {} Method: {}\", versionOfPair, testcase.getClazz(), testcase.getMethod());\n-\t\tEvaluationPair currentPair = data.get(versionOfPair);\n-\t\t// LOG.debug(currentPair);\n-\t\tif (currentPair == null) {\n-\t\t\tfinal String predecessor = isNew ? version : VersionComparator.getPreviousVersionForTestcase(testcase, version);\n-\t\t\tLOG.debug(\"Version: {} Predecessor: {}\", versionOfPair, predecessor);\n-\t\t\tcurrentPair = new EvaluationPair(versionOfPair, predecessor);\n-\t\t\tdata.put(versionOfPair, currentPair);\n-\t\t}\n-\n-\t\tfinal Result result = resultData.getTestcases().getTestcase().get(0).getDatacollector().get(0).getResult().get(0);\n-\t\tif (!isNew) {\n-\t\t\tcurrentPair.getCurrent().add(result);\n-\t\t} else {\n-\t\t\tcurrentPair.getPrevius().add(result);\n-\t\t}\n-\n-\t}\n-\n-\tpublic SortedMap<String, EvaluationPair> getMeasurements() {\n-\t\treturn data;\n-\t}\n-\n-\tpublic String getTestClass() {\n-\t\treturn testcase.getClazz();\n-\t}\n-\n-\tpublic String getTestMethod() {\n-\t\treturn testcase.getMethod();\n-\t}\n-\t\n-\tpublic int getVersions(){\n-\t\treturn data.size();\n-\t}\n-\n-}\n+public class TestData {\n+ private static final Logger LOG = LogManager.getLogger(TestData.class);\n+ private final TestCase testcase;\n+ private final SortedMap<String, EvaluationPair> data = new TreeMap<>(VersionComparator.INSTANCE);\n+\n+ public TestData(final TestCase testcase) {\n+  super();\n+  this.testcase = testcase;\n+ }\n+\n+\n+ public void addMeasurement(final String version, final Kopemedata resultData, final boolean isNew) {\n+  final String versionOfPair = isNew ? VersionComparator.getNextVersionForTestcase(testcase, version) : version;\n+  LOG.trace(\"Pair-Version: {} Class: {} Method: {}\", versionOfPair, testcase.getClazz(), testcase.getMethod());\n+\n+  EvaluationPair currentPair = data.get(versionOfPair);\n+  // LOG.debug(currentPair);\n+  if (currentPair == null) {\n+   final String predecessor = isNew ? version : VersionComparator.getPreviousVersionForTestcase(testcase, version);\n+   LOG.debug(\"Version: {} Predecessor: {}\", versionOfPair, predecessor);\n+   currentPair = new EvaluationPair(versionOfPair, predecessor);\n+   data.put(versionOfPair, currentPair);\n+  }\n+\n+  final Result result = resultData.getTestcases().getTestcase().get(0).getDatacollector().get(0).getResult().get(0);\n+  if (!isNew) {\n+   currentPair.getCurrent().add(result);\n+  } else {\n+   currentPair.getPrevius().add(result);\n+  }\n+ }\n+\n+ public SortedMap<String, EvaluationPair> getMeasurements() {\n+  return data;\n+ }\n+\n+ public String getTestClass() {\n+  return testcase.getClazz();\n+ }\n+\n+ public String getTestMethod() {\n+  return testcase.getMethod();\n+ }\n+\n+ public int getVersions() {\n+  return data.size();\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 65
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/24/TestData.java\nindex fbcd4f6d52d..6a729879846 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/24/TestData.java\n@@ -64,7 +64,7 @@ public class TestData {\n \t\treturn testcase.getMethod();\n \t}\n \t\n-\tpublic int getVersions(){\n+\tpublic int getVersions() {\n \t\treturn data.size();\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/24/TestData.java\nindex fbcd4f6d52d..6a729879846 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/24/TestData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/24/TestData.java\n@@ -64,7 +64,7 @@ public class TestData {\n \t\treturn testcase.getMethod();\n \t}\n \t\n-\tpublic int getVersions(){\n+\tpublic int getVersions() {\n \t\treturn data.size();\n \t}\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
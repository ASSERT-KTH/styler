{
    "project_name": "neo4j-neo4j",
    "error_id": "1895",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1895/TransactionLogsRecovery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1895/TransactionLogsRecovery.java\nindex 4d69c14576b..c7029a38c0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1895/TransactionLogsRecovery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1895/TransactionLogsRecovery.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.nio.channels.ClosedByInterruptException;\n@@ -59,9 +60,10 @@ public class TransactionLogsRecovery extends LifecycleAdapter\n     private final PageCacheTracer pageCacheTracer;\n     private int numberOfRecoveredTransactions;\n \n-    public TransactionLogsRecovery( RecoveryService recoveryService, CorruptedLogsTruncator logsTruncator, Lifecycle schemaLife,\n-            RecoveryMonitor monitor, ProgressReporter progressReporter, boolean failOnCorruptedLogFiles, RecoveryStartupChecker recoveryStartupChecker,\n-            PageCacheTracer pageCacheTracer )\n+    public TransactionLogsRecovery(RecoveryService recoveryService, CorruptedLogsTruncator logsTruncator, Lifecycle schemaLife,\n+                                   RecoveryMonitor monitor, ProgressReporter progressReporter, boolean failOnCorruptedLogFiles,\n+                                   RecoveryStartupChecker recoveryStartupChecker,\n+                                   PageCacheTracer pageCacheTracer)\n     {\n         this.recoveryService = recoveryService;\n         this.monitor = monitor;\n@@ -77,7 +79,7 @@ public class TransactionLogsRecovery extends LifecycleAdapter\n     public void init() throws Exception\n     {\n         RecoveryStartInformation recoveryStartInformation = recoveryService.getRecoveryStartInformation();\n-        if ( !recoveryStartInformation.isRecoveryRequired() )\n+        if (!recoveryStartInformation.isRecoveryRequired())\n         {\n             schemaLife.init();\n             return;\n@@ -87,54 +89,54 @@ public class TransactionLogsRecovery extends LifecycleAdapter\n \n         LogPosition recoveryStartPosition = recoveryStartInformation.getRecoveryPosition();\n \n-        monitor.recoveryRequired( recoveryStartPosition );\n+        monitor.recoveryRequired(recoveryStartPosition);\n \n         LogPosition recoveryToPosition = recoveryStartPosition;\n         LogPosition lastTransactionPosition = recoveryStartPosition;\n         CommittedTransactionRepresentation lastTransaction = null;\n         CommittedTransactionRepresentation lastReversedTransaction = null;\n-        if ( !recoveryStartInformation.isMissingLogs() )\n+        if (!recoveryStartInformation.isMissingLogs())\n         {\n             try\n             {\n                 long lowestRecoveredTxId = TransactionIdStore.BASE_TX_ID;\n-                try ( var transactionsToRecover = recoveryService.getTransactionsInReverseOrder( recoveryStartPosition );\n-                      var cursorTracer = pageCacheTracer.createPageCursorTracer( REVERSE_RECOVERY_TAG );\n-                      var recoveryVisitor = recoveryService.getRecoveryApplier( REVERSE_RECOVERY, cursorTracer ) )\n+                try (var transactionsToRecover = recoveryService.getTransactionsInReverseOrder(recoveryStartPosition);\n+                     var cursorTracer = pageCacheTracer.createPageCursorTracer(REVERSE_RECOVERY_TAG);\n+                     var recoveryVisitor = recoveryService.getRecoveryApplier(REVERSE_RECOVERY, cursorTracer))\n                 {\n-                    while ( transactionsToRecover.next() )\n+                    while (transactionsToRecover.next())\n                     {\n                         recoveryStartupChecker.checkIfCanceled();\n                         CommittedTransactionRepresentation transaction = transactionsToRecover.get();\n-                        if ( lastReversedTransaction == null )\n+                        if (lastReversedTransaction == null)\n                         {\n                             lastReversedTransaction = transaction;\n-                            initProgressReporter( recoveryStartInformation, lastReversedTransaction );\n+                            initProgressReporter(recoveryStartInformation, lastReversedTransaction);\n                         }\n-                        recoveryVisitor.visit( transaction );\n+                        recoveryVisitor.visit(transaction);\n                         lowestRecoveredTxId = transaction.getCommitEntry().getTxId();\n                         reportProgress();\n                     }\n                 }\n \n-                monitor.reverseStoreRecoveryCompleted( lowestRecoveredTxId );\n+                monitor.reverseStoreRecoveryCompleted(lowestRecoveredTxId);\n \n                 // We cannot initialise the schema (tokens, schema cache, indexing service, etc.) until we have returned the store to a consistent state.\n                 // We need to be able to read the store before we can even figure out what indexes, tokens, etc. we have. Hence we defer the initialisation\n                 // of the schema life until after we've done the reverse recovery.\n                 schemaLife.init();\n \n-                try ( TransactionCursor transactionsToRecover = recoveryService.getTransactions( recoveryStartPosition );\n-                        var cursorTracer = pageCacheTracer.createPageCursorTracer( RECOVERY_TAG );\n-                        RecoveryApplier recoveryVisitor = recoveryService.getRecoveryApplier( RECOVERY, cursorTracer ) )\n+                try (TransactionCursor transactionsToRecover = recoveryService.getTransactions(recoveryStartPosition);\n+                     var cursorTracer = pageCacheTracer.createPageCursorTracer(RECOVERY_TAG);\n+                     RecoveryApplier recoveryVisitor = recoveryService.getRecoveryApplier(RECOVERY, cursorTracer))\n                 {\n-                    while ( transactionsToRecover.next() )\n+                    while (transactionsToRecover.next())\n                     {\n                         recoveryStartupChecker.checkIfCanceled();\n                         lastTransaction = transactionsToRecover.get();\n                         long txId = lastTransaction.getCommitEntry().getTxId();\n-                        recoveryVisitor.visit( lastTransaction );\n-                        monitor.transactionRecovered( txId );\n+                        recoveryVisitor.visit(lastTransaction);\n+                        monitor.transactionRecovered(txId);\n                         numberOfRecoveredTransactions++;\n                         lastTransactionPosition = transactionsToRecover.position();\n                         recoveryToPosition = lastTransactionPosition;\n@@ -142,61 +144,58 @@ public class TransactionLogsRecovery extends LifecycleAdapter\n                     }\n                     recoveryToPosition = transactionsToRecover.position();\n                 }\n-            }\n-            catch ( Error | ClosedByInterruptException | DatabaseStartAbortedException e )\n+            } catch (Error | ClosedByInterruptException | DatabaseStartAbortedException e)\n             {\n                 // We do not want to truncate logs based on these exceptions. Since users can influence them with config changes\n                 // the users are able to workaround this if truncations is really needed.\n                 throw e;\n-            }\n-            catch ( Throwable t )\n+            } catch (Throwable t)\n             {\n-                if ( failOnCorruptedLogFiles )\n+                if (failOnCorruptedLogFiles)\n                 {\n-                    throwUnableToCleanRecover( t );\n+                    throwUnableToCleanRecover(t);\n                 }\n-                if ( lastTransaction != null )\n+                if (lastTransaction != null)\n                 {\n                     LogEntryCommit commitEntry = lastTransaction.getCommitEntry();\n-                    monitor.failToRecoverTransactionsAfterCommit( t, commitEntry, recoveryToPosition );\n-                }\n-                else\n+                    monitor.failToRecoverTransactionsAfterCommit(t, commitEntry, recoveryToPosition);\n+                } else\n                 {\n-                    monitor.failToRecoverTransactionsAfterPosition( t, recoveryStartPosition );\n+                    monitor.failToRecoverTransactionsAfterPosition(t, recoveryStartPosition);\n                 }\n             }\n             progressReporter.completed();\n-            logsTruncator.truncate( recoveryToPosition );\n+            logsTruncator.truncate(recoveryToPosition);\n         }\n \n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( RECOVERY_COMPLETED_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(RECOVERY_COMPLETED_TAG))\n         {\n             final boolean missingLogs = recoveryStartInformation.isMissingLogs();\n-            recoveryService.transactionsRecovered( lastTransaction, lastTransactionPosition, recoveryToPosition, missingLogs, cursorTracer );\n+            recoveryService.transactionsRecovered(lastTransaction, lastTransactionPosition, recoveryToPosition, missingLogs, cursorTracer);\n         }\n-        monitor.recoveryCompleted( numberOfRecoveredTransactions, recoveryStartTime.elapsed( MILLISECONDS ) );\n+        monitor.recoveryCompleted(numberOfRecoveredTransactions, recoveryStartTime.elapsed(MILLISECONDS));\n     }\n \n-    private void initProgressReporter( RecoveryStartInformation recoveryStartInformation,\n-            CommittedTransactionRepresentation lastReversedTransaction )\n+    private void initProgressReporter(RecoveryStartInformation recoveryStartInformation,\n+                                      CommittedTransactionRepresentation lastReversedTransaction)\n     {\n         long numberOfTransactionToRecover =\n-                getNumberOfTransactionToRecover( recoveryStartInformation, lastReversedTransaction );\n+          getNumberOfTransactionToRecover(recoveryStartInformation, lastReversedTransaction);\n         // since we will process each transaction twice (doing reverse and direct detour) we need to\n         // multiply number of transactions that we want to recover by 2 to be able to report correct progress\n-        progressReporter.start( numberOfTransactionToRecover * 2 );\n+        progressReporter.start(numberOfTransactionToRecover * 2);\n     }\n \n     private void reportProgress()\n     {\n-        progressReporter.progress( 1 );\n+        progressReporter.progress(1);\n     }\n \n-    private static long getNumberOfTransactionToRecover( RecoveryStartInformation recoveryStartInformation,\n-            CommittedTransactionRepresentation lastReversedTransaction )\n+    private static long getNumberOfTransactionToRecover(RecoveryStartInformation recoveryStartInformation,\n+                                                        CommittedTransactionRepresentation lastReversedTransaction)\n     {\n         return lastReversedTransaction.getCommitEntry().getTxId() -\n-                recoveryStartInformation.getFirstTxIdAfterLastCheckPoint() + 1;\n+          recoveryStartInformation.getFirstTxIdAfterLastCheckPoint() + 1;\n     }\n \n     @Override\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
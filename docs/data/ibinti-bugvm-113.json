{
    "project_name": "ibinti-bugvm",
    "error_id": "113",
    "information": {
        "errors": [
            {
                "line": "59",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 85).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     *\n     * @param message the exception detail message\n     * @param cause the {@code Throwable} that caused this exception, or {@code null}\n     * if the cause is unavailable, unknown, or not a {@code Throwable}\n     */\n    public HttpException(final String message, final Throwable cause) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/113/HttpException.java\nindex c02c52ce523..915c516f1d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/113/HttpException.java\n@@ -34,34 +34,34 @@ package org.apache.http;\n  */\n public class HttpException extends Exception {\n \n-    private static final long serialVersionUID = -5437299376222011036L;\n+  private static final long serialVersionUID = -5437299376222011036L;\n \n-    /**\n-     * Creates a new HttpException with a {@code null} detail message.\n-     */\n-    public HttpException() {\n-        super();\n-    }\n+  /**\n+   * Creates a new HttpException with a {@code null} detail message.\n+   */\n+  public HttpException() {\n+    super();\n+  }\n \n-    /**\n-     * Creates a new HttpException with the specified detail message.\n-     *\n-     * @param message the exception detail message\n-     */\n-    public HttpException(final String message) {\n-        super(message);\n-    }\n+  /**\n+   * Creates a new HttpException with the specified detail message.\n+   *\n+   * @param message the exception detail message\n+   */\n+  public HttpException(final String message) {\n+    super(message);\n+  }\n \n-    /**\n-     * Creates a new HttpException with the specified detail message and cause.\n-     *\n-     * @param message the exception detail message\n-     * @param cause the {@code Throwable} that caused this exception, or {@code null}\n-     * if the cause is unavailable, unknown, or not a {@code Throwable}\n-     */\n-    public HttpException(final String message, final Throwable cause) {\n-        super(message);\n-        initCause(cause);\n-    }\n+  /**\n+   * Creates a new HttpException with the specified detail message and cause.\n+   *\n+   * @param message the exception detail message\n+   * @param cause   the {@code Throwable} that caused this exception, or {@code null}\n+   *                if the cause is unavailable, unknown, or not a {@code Throwable}\n+   */\n+  public HttpException(final String message, final Throwable cause) {\n+    super(message);\n+    initCause(cause);\n+  }\n \n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/113/HttpException.java\nindex c02c52ce523..041ebc4e5c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/113/HttpException.java\n@@ -64,4 +64,4 @@ public class HttpException extends Exception {\n         initCause(cause);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/113/HttpException.java\nindex c02c52ce523..77c504d47a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/113/HttpException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/113/HttpException.java\n@@ -32,6 +32,8 @@ package org.apache.http;\n  *\n  * @since 4.0\n  */\n+\n+\n public class HttpException extends Exception {\n \n     private static final long serialVersionUID = -5437299376222011036L;\n@@ -39,6 +41,8 @@ public class HttpException extends Exception {\n     /**\n      * Creates a new HttpException with a {@code null} detail message.\n      */\n+\n+\n     public HttpException() {\n         super();\n     }\n@@ -48,6 +52,8 @@ public class HttpException extends Exception {\n      *\n      * @param message the exception detail message\n      */\n+\n+\n     public HttpException(final String message) {\n         super(message);\n     }\n@@ -59,9 +65,10 @@ public class HttpException extends Exception {\n      * @param cause the {@code Throwable} that caused this exception, or {@code null}\n      * if the cause is unavailable, unknown, or not a {@code Throwable}\n      */\n+\n+\n     public HttpException(final String message, final Throwable cause) {\n         super(message);\n         initCause(cause);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
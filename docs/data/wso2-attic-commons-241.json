{
    "project_name": "wso2-attic-commons",
    "error_id": "241",
    "information": {
        "errors": [
            {
                "line": "53",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                    if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n                        __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n                                + oea.extensionName + \" failed. No implementation found.\");\n                    }\n                }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/241/EXTENSIONACTIVITY.java\nindex 875be643045..356ec9faffa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/241/EXTENSIONACTIVITY.java\n@@ -50,8 +50,8 @@ public class EXTENSIONACTIVITY extends ACTIVITY {\n                 for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n                     if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n                         __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n-                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n-                                + oea.extensionName + \" failed. No implementation found.\");\n+                    throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \"\n+                            + oea.extensionName + \" failed. No implementation found.\");\n                     }\n                 }\n                 // act like <empty> - do nothing\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/241/EXTENSIONACTIVITY.java\nindex 875be643045..f4cec93259d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/241/EXTENSIONACTIVITY.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.rtrep.v2;\n \n import org.apache.commons.logging.Log;\n@@ -28,43 +29,43 @@ import org.apache.ode.bpel.rtrep.common.extension.ExtensionContext;\n /**\n  * JacobRunnable that delegates the work of the <code>extensionActivity</code> activity\n  * to a registered extension implementation.\n- * \n+ *\n  * @author Tammo van Lessen (University of Stuttgart)\n  */\n public class EXTENSIONACTIVITY extends ACTIVITY {\n-    private static final long serialVersionUID = 1L;\n-    private static final Log __log = LogFactory.getLog(EXTENSIONACTIVITY.class);\n+  private static final long serialVersionUID = 1L;\n+  private static final Log __log = LogFactory.getLog(EXTENSIONACTIVITY.class);\n \n-    public EXTENSIONACTIVITY(ActivityInfo self, ScopeFrame scopeFrame,\n-            LinkFrame linkFrame) {\n-        super(self, scopeFrame, linkFrame);\n-    }\n+  public EXTENSIONACTIVITY(ActivityInfo self, ScopeFrame scopeFrame,\n+                           LinkFrame linkFrame) {\n+    super(self, scopeFrame, linkFrame);\n+  }\n \n-    public final void run() {\n-        final ExtensionContext context = new ExtensionContextImpl(_self, _scopeFrame, getBpelRuntime());\n-        final OExtensionActivity oea = (OExtensionActivity)_self.o;\n-        \n-        try {\n-            ExtensionOperation ea = getBpelRuntime().createExtensionActivityImplementation(oea.extensionName);\n-            if (ea == null) {\n-                for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n-                    if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n-                        __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n-                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n-                                + oea.extensionName + \" failed. No implementation found.\");\n-                    }\n-                }\n-                // act like <empty> - do nothing\n-                context.complete();\n-                return;\n-            }\n+  public final void run() {\n+    final ExtensionContext context = new ExtensionContextImpl(_self, _scopeFrame, getBpelRuntime());\n+    final OExtensionActivity oea = (OExtensionActivity) _self.o;\n \n-            ea.run(context, oea.nestedElement.getElement());\n-        } catch (FaultException fault) {\n-            __log.error(fault);\n-            context.completeWithFault(fault);\n+    try {\n+      ExtensionOperation ea = getBpelRuntime().createExtensionActivityImplementation(oea.extensionName);\n+      if (ea == null) {\n+        for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n+          if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n+            __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n+            throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \"\n+              + oea.extensionName + \" failed. No implementation found.\");\n+          }\n         }\n+        // act like <empty> - do nothing\n+        context.complete();\n+        return;\n+      }\n \n+      ea.run(context, oea.nestedElement.getElement());\n+    } catch (FaultException fault) {\n+      __log.error(fault);\n+      context.completeWithFault(fault);\n     }\n \n+  }\n+\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/241/EXTENSIONACTIVITY.java\nindex 875be643045..4493d939eb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/241/EXTENSIONACTIVITY.java\n@@ -50,9 +50,8 @@ public class EXTENSIONACTIVITY extends ACTIVITY {\n                 for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n                     if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n                         __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n-                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n-                                + oea.extensionName + \" failed. No implementation found.\");\n-                    }\n+                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" + oea.extensionName + \" failed. No implementation found.\");\n+    }\n                 }\n                 // act like <empty> - do nothing\n                 context.complete();\n@@ -67,4 +66,4 @@ public class EXTENSIONACTIVITY extends ACTIVITY {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/241/EXTENSIONACTIVITY.java\nindex 875be643045..356ec9faffa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/241/EXTENSIONACTIVITY.java\n@@ -50,8 +50,8 @@ public class EXTENSIONACTIVITY extends ACTIVITY {\n                 for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n                     if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n                         __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n-                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n-                                + oea.extensionName + \" failed. No implementation found.\");\n+                    throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \"\n+                            + oea.extensionName + \" failed. No implementation found.\");\n                     }\n                 }\n                 // act like <empty> - do nothing\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/241/EXTENSIONACTIVITY.java\nindex 875be643045..cd2708819b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/241/EXTENSIONACTIVITY.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/241/EXTENSIONACTIVITY.java\n@@ -50,7 +50,8 @@ public class EXTENSIONACTIVITY extends ACTIVITY {\n                 for (OProcess.OExtension oe : oea.getOwner().mustUnderstandExtensions) {\n                     if (oea.extensionName.getNamespaceURI().equals(oe.namespaceURI)) {\n                         __log.warn(\"Lookup of extension activity \" + oea.extensionName + \" failed.\");\n-                        throw new FaultException(ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \" \n+                        throw new FaultException(\n+                                ExtensibilityQNames.UNKNOWN_EA_FAULT_NAME, \"Lookup of extension activity \"\n                                 + oea.extensionName + \" failed. No implementation found.\");\n                     }\n                 }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
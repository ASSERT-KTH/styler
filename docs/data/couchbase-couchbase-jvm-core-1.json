{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "88",
                "column": "86",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n            if (ks == null && ts == null) {\n                throw new IllegalStateException(\"Either a KeyStore or a TrustStore \" +\n                    \"need to be provided (or both).\");\n            } else if (ks == null) {\n                ks = ts;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "88",
                    "column": "86",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "89",
                    "column": "86",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/1/SSLEngineFactory.java\nindex bdd43461c23..54e1962c341 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/1/SSLEngineFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.endpoint;\n \n import com.couchbase.client.core.env.SecureEnvironment;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/1/SSLEngineFactory.java\nindex bdd43461c23..dded9f9689b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/1/SSLEngineFactory.java\n@@ -85,8 +85,7 @@ public class SSLEngineFactory {\n             }\n \n             if (ks == null && ts == null) {\n-                throw new IllegalStateException(\"Either a KeyStore or a TrustStore \" +\n-                    \"need to be provided (or both).\");\n+                throw new IllegalStateException(\"Either a KeyStore or a TrustStore \" + \"need to be provided (or both).\");\n             } else if (ks == null) {\n                 ks = ts;\n                 LOGGER.debug(\"No KeyStore provided, using provided TrustStore to initialize both factories.\");\n@@ -111,4 +110,4 @@ public class SSLEngineFactory {\n             throw new SSLException(\"Could not create SSLEngine.\", ex);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/1/SSLEngineFactory.java\nindex bdd43461c23..c3140564b86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/1/SSLEngineFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/1/SSLEngineFactory.java\n@@ -18,7 +18,6 @@ package com.couchbase.client.core.endpoint;\n import com.couchbase.client.core.env.SecureEnvironment;\n import com.couchbase.client.core.logging.CouchbaseLogger;\n import com.couchbase.client.core.logging.CouchbaseLoggerFactory;\n-\n import javax.net.ssl.KeyManagerFactory;\n import javax.net.ssl.SSLContext;\n import javax.net.ssl.SSLEngine;\n@@ -32,11 +31,13 @@ import java.security.KeyStore;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n public class SSLEngineFactory {\n \n     /**\n      * The logger used.\n      */\n+\n     private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(SSLEngineFactory.class);\n \n     /**\n@@ -49,6 +50,7 @@ public class SSLEngineFactory {\n      *\n      * @param env the config environment.\n      */\n+\n     public SSLEngineFactory(SecureEnvironment env) {\n         this.env = env;\n     }\n@@ -58,11 +60,11 @@ public class SSLEngineFactory {\n      *\n      * @return a {@link SSLEngine} ready to be used.\n      */\n+\n     public SSLEngine get() {\n         try {\n             String pass = env.sslKeystorePassword();\n             char[] password = pass == null || pass.isEmpty() ? null : pass.toCharArray();\n-\n             KeyStore ks = env.sslKeystore();\n             if (ks == null) {\n                 String ksFile = env.sslKeystoreFile();\n@@ -71,7 +73,6 @@ public class SSLEngineFactory {\n                     ks.load(new FileInputStream(ksFile), password);\n                 }\n             }\n-\n             KeyStore ts = env.sslTruststore();\n             if (ts == null) {\n                 String tsFile = env.sslTruststoreFile();\n@@ -80,35 +81,33 @@ public class SSLEngineFactory {\n                     String tsPassword = env.sslTruststorePassword();\n                     char[] tspass = tsPassword == null || tsPassword.isEmpty() ? null : tsPassword.toCharArray();\n                     ts = KeyStore.getInstance(KeyStore.getDefaultType());\n-                    ts.load(new FileInputStream(tsFile), tspass);\n+                    ts.load(new FileInputStream(tsFile),\n+tspass);\n                 }\n             }\n \n             if (ks == null && ts == null) {\n-                throw new IllegalStateException(\"Either a KeyStore or a TrustStore \" +\n-                    \"need to be provided (or both).\");\n+                throw new IllegalStateException(\"Either a KeyStore or a TrustStore \" + \"need to be provided (or both).\");\n             } else if (ks == null) {\n                 ks = ts;\n                 LOGGER.debug(\"No KeyStore provided, using provided TrustStore to initialize both factories.\");\n             } else if (ts == null) {\n-                ts = ks;\n-                LOGGER.debug(\"No TrustStore provided, using provided KeyStore to initialize both factories.\");\n-            }\n-\n+                       ts = ks;\n+                       LOGGER.debug(\"No TrustStore provided, using provided KeyStore to initialize both factories.\");\n+                   }\n             String defaultAlgorithm = KeyManagerFactory.getDefaultAlgorithm();\n             KeyManagerFactory kmf = KeyManagerFactory.getInstance(defaultAlgorithm);\n             TrustManagerFactory tmf = TrustManagerFactory.getInstance(defaultAlgorithm);\n             kmf.init(ks, password);\n             tmf.init(ts);\n-\n             SSLContext ctx = SSLContext.getInstance(\"TLS\");\n             ctx.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-\n             SSLEngine engine = ctx.createSSLEngine();\n             engine.setUseClientMode(true);\n             return engine;\n         } catch (Exception ex) {\n-            throw new SSLException(\"Could not create SSLEngine.\", ex);\n+            throw new SSLException(\"Could not create SSLEngine.\",\n+                ex);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "88",
                    "column": "86",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "88",
                    "column": "86",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
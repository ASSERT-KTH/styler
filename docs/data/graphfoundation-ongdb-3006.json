{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3006",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3006/LucenePartitionAllDocumentsReader.java\nindex f920a26f909..cb868a268a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3006/LucenePartitionAllDocumentsReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import org.apache.lucene.document.Document;\n@@ -39,84 +40,82 @@ import org.neo4j.kernel.api.impl.index.partition.PartitionSearcher;\n  */\n public class LucenePartitionAllDocumentsReader implements BoundedIterable<Document>\n {\n-    private final PartitionSearcher partitionSearcher;\n-    private final IndexSearcher searcher;\n-    private final IndexReader reader;\n+  private final PartitionSearcher partitionSearcher;\n+  private final IndexSearcher searcher;\n+  private final IndexReader reader;\n \n-    public LucenePartitionAllDocumentsReader( PartitionSearcher partitionSearcher )\n-    {\n-        this.partitionSearcher = partitionSearcher;\n-        this.searcher = partitionSearcher.getIndexSearcher();\n-        this.reader = searcher.getIndexReader();\n-    }\n+  public LucenePartitionAllDocumentsReader(PartitionSearcher partitionSearcher)\n+  {\n+    this.partitionSearcher = partitionSearcher;\n+    this.searcher = partitionSearcher.getIndexSearcher();\n+    this.reader = searcher.getIndexReader();\n+  }\n \n-    @Override\n-    public long maxCount()\n-    {\n-        return reader.maxDoc();\n-    }\n+  @Override\n+  public long maxCount()\n+  {\n+    return reader.maxDoc();\n+  }\n \n-    @Override\n-    public Iterator<Document> iterator()\n+  @Override\n+  public Iterator<Document> iterator()\n+  {\n+    return new PrefetchingIterator<Document>()\n     {\n-        return new PrefetchingIterator<Document>()\n+      DocIdSetIterator idIterator = iterateAllDocs();\n+\n+      @Override\n+      protected Document fetchNextOrNull()\n+      {\n+        try\n+        {\n+          int doc = idIterator.nextDoc();\n+          if (doc == DocIdSetIterator.NO_MORE_DOCS)\n+          {\n+            return null;\n+          }\n+          return getDocument(doc);\n+        } catch (IOException e)\n         {\n-            DocIdSetIterator idIterator = iterateAllDocs();\n+          throw new LuceneDocumentRetrievalException(\"Can't fetch document id from lucene index.\", e);\n+        }\n+      }\n+    };\n+  }\n \n-            @Override\n-            protected Document fetchNextOrNull()\n-            {\n-                try\n-                {\n-                    int doc = idIterator.nextDoc();\n-                    if ( doc == DocIdSetIterator.NO_MORE_DOCS )\n-                    {\n-                        return null;\n-                    }\n-                    return getDocument( doc );\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new LuceneDocumentRetrievalException( \"Can't fetch document id from lucene index.\", e );\n-                }\n-            }\n-        };\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    partitionSearcher.close();\n+  }\n \n-    @Override\n-    public void close() throws IOException\n+  private Document getDocument(int docId)\n+  {\n+    try\n+    {\n+      return searcher.doc(docId);\n+    } catch (IOException e)\n     {\n-        partitionSearcher.close();\n+      throw new LuceneDocumentRetrievalException(\"Can't retrieve document with id: \" + docId + \".\", docId, e);\n     }\n+  }\n \n-    private Document getDocument( int docId )\n+  private DocIdSetIterator iterateAllDocs()\n+  {\n+    Bits liveDocs = MultiFields.getLiveDocs(reader);\n+    DocIdSetIterator allDocs = DocIdSetIterator.all(reader.maxDoc());\n+    if (liveDocs == null)\n     {\n-        try\n-        {\n-            return searcher.doc( docId );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new LuceneDocumentRetrievalException( \"Can't retrieve document with id: \" + docId + \".\", docId, e );\n-        }\n+      return allDocs;\n     }\n \n-    private DocIdSetIterator iterateAllDocs()\n+    return new FilteredDocIdSetIterator(allDocs)\n     {\n-        Bits liveDocs = MultiFields.getLiveDocs( reader );\n-        DocIdSetIterator allDocs = DocIdSetIterator.all( reader.maxDoc() );\n-        if ( liveDocs == null )\n-        {\n-            return allDocs;\n-        }\n-\n-        return new FilteredDocIdSetIterator( allDocs )\n-        {\n-            @Override\n-            protected boolean match( int doc )\n-            {\n-                return liveDocs.get( doc );\n-            }\n-        };\n-    }\n+      @Override\n+      protected boolean match(int doc)\n+      {\n+        return liveDocs.get(doc);\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3006/LucenePartitionAllDocumentsReader.java\nindex f920a26f909..fe202b8d6b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3006/LucenePartitionAllDocumentsReader.java\n@@ -73,7 +73,8 @@ public class LucenePartitionAllDocumentsReader implements BoundedIterable<Docume\n                     {\n                         return null;\n                     }\n-                    return getDocument( doc );\n+\n+return getDocument( doc );\n                 }\n                 catch ( IOException e )\n                 {\n@@ -119,4 +120,4 @@ public class LucenePartitionAllDocumentsReader implements BoundedIterable<Docume\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3006/LucenePartitionAllDocumentsReader.java\nindex f920a26f909..2d821b86104 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3006/LucenePartitionAllDocumentsReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3006/LucenePartitionAllDocumentsReader.java\n@@ -26,10 +26,8 @@ import org.apache.lucene.search.DocIdSetIterator;\n import org.apache.lucene.search.FilteredDocIdSetIterator;\n import org.apache.lucene.search.IndexSearcher;\n import org.apache.lucene.util.Bits;\n-\n import java.io.IOException;\n import java.util.Iterator;\n-\n import org.neo4j.helpers.collection.BoundedIterable;\n import org.neo4j.helpers.collection.PrefetchingIterator;\n import org.neo4j.kernel.api.impl.index.partition.PartitionSearcher;\n@@ -37,6 +35,7 @@ import org.neo4j.kernel.api.impl.index.partition.PartitionSearcher;\n /**\n  * Provides a view of all {@link Document}s in a single partition.\n  */\n+\n public class LucenePartitionAllDocumentsReader implements BoundedIterable<Document>\n {\n     private final PartitionSearcher partitionSearcher;\n@@ -60,27 +59,27 @@ public class LucenePartitionAllDocumentsReader implements BoundedIterable<Docume\n     public Iterator<Document> iterator()\n     {\n         return new PrefetchingIterator<Document>()\n+{\n+    DocIdSetIterator idIterator = iterateAllDocs();\n+    @Override\n+    protected Document fetchNextOrNull()\n+    {\n+        try\n         {\n-            DocIdSetIterator idIterator = iterateAllDocs();\n-\n-            @Override\n-            protected Document fetchNextOrNull()\n+            int doc = idIterator.nextDoc();\n+            if ( doc == DocIdSetIterator.NO_MORE_DOCS )\n             {\n-                try\n-                {\n-                    int doc = idIterator.nextDoc();\n-                    if ( doc == DocIdSetIterator.NO_MORE_DOCS )\n-                    {\n-                        return null;\n-                    }\n-                    return getDocument( doc );\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new LuceneDocumentRetrievalException( \"Can't fetch document id from lucene index.\", e );\n-                }\n+                return null;\n             }\n-        };\n+\n+            return getDocument( doc );\n+        }\n+        catch ( IOException e )\n+        {\n+            throw new LuceneDocumentRetrievalException( \"Can't fetch document id from lucene index.\", e );\n+        }\n+    }\n+};\n     }\n \n     @Override\n@@ -111,12 +110,12 @@ public class LucenePartitionAllDocumentsReader implements BoundedIterable<Docume\n         }\n \n         return new FilteredDocIdSetIterator( allDocs )\n-        {\n-            @Override\n-            protected boolean match( int doc )\n-            {\n-                return liveDocs.get( doc );\n-            }\n-        };\n+{\n+    @Override\n+    protected boolean match( int doc )\n+    {\n+        return liveDocs.get( doc );\n+    }\n+};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
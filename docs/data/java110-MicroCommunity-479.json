{
    "project_name": "java110-MicroCommunity",
    "error_id": "479",
    "information": {
        "errors": [
            {
                "line": "110",
                "column": "54",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        /*apiFeeVo.setRoomId(roomDto.getRoomId());\n        apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n\n        // \u4e1a\u4e3b\u4fe1\u606f\n        OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/479/QueryIndexStatisticListener.java\nindex ff64c34a971..ca65f727945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/479/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/479/QueryIndexStatisticListener.java\nindex ff64c34a971..ca65f727945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/479/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/479/QueryIndexStatisticListener.java\nindex ff64c34a971..fabf3d51244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/479/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n@@ -202,4 +202,4 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/479/QueryIndexStatisticListener.java\nindex ff64c34a971..18fea7465b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/479/QueryIndexStatisticListener.java\n@@ -1,6 +1,5 @@\n package com.java110.api.listener.index;\n \n-\n import com.alibaba.fastjson.JSONObject;\n import com.java110.api.listener.AbstractServiceApiDataFlowListener;\n import com.java110.common.constant.ResponseConstant;\n@@ -26,7 +25,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -37,6 +35,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @Java110Listener(\"queryIndexStatistic\")\n public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListener {\n \n@@ -73,6 +73,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n      *\n      * @param event \u65f6\u95f4\u5bf9\u8c61\n      */\n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n@@ -81,7 +82,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         validateFeeData(reqJson);\n         FeeDto feeDtoParamIn = BeanConvertUtil.covertBean(reqJson, FeeDto.class);\n         feeDtoParamIn.setPayerObjId(reqJson.getString(\"roomId\"));\n-\n         List<FeeDto> feeDtos = feeInnerServiceSMOImpl.queryFees(feeDtoParamIn);\n         ResponseEntity<String> responseEntity = null;\n         if (feeDtos == null || feeDtos.size() == 0) {\n@@ -89,7 +89,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n-\n         ApiFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiFeeVo.class);\n         //apiFeeVo.setStartTime(DateUtil.getFormatTimeString(feeDto.getStartTime(), DateUtil.DATE_FORMATE_STRING_A));\n         //apiFeeVo.setEndTime(DateUtil.getFormatTimeString(feeDto.getEndTime(), DateUtil.DATE_FORMATE_STRING_A));\n@@ -99,7 +98,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto.setRoomId(feeDto.getPayerObjId());\n         roomDto.setCommunityId(feeDto.getCommunityId());\n         List<RoomDto> roomDtos = roomInnerServiceSMOImpl.queryRooms(roomDto);\n-\n         if (roomDtos == null || roomDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u4fe1\u606f roomId\" + feeDto.getPayerObjId());\n         }\n@@ -107,7 +105,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n@@ -116,22 +114,20 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         if (ownerRoomRelDtos == null || ownerRoomRelDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u548c\u4e1a\u4e3b\u5173\u7cfb\u4fe1\u606f roomId=\" + roomDto.getRoomId());\n         }\n+\n         OwnerDto ownerDto = new OwnerDto();\n         ownerDto.setOwnerId(ownerRoomRelDtos.get(0).getOwnerId());\n         ownerDto.setCommunityId(feeDto.getCommunityId());\n         List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwners(ownerDto);\n-\n         if (ownerDtos == null || ownerDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u4e1a\u4e3b\u4fe1\u606f ownerId=\" + ownerRoomRelDtos.get(0).getOwnerId());\n         }\n+\n         ownerDto = ownerDtos.get(0);\n         apiFeeVo.setOwnerId(ownerDto.getOwnerId());\n         apiFeeVo.setOwnerName(ownerDto.getName());\n         apiFeeVo.setLink(ownerDto.getLink());\n-\n         responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n-\n-\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n@@ -140,12 +136,12 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n      *\n      * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n      */\n+\n+\n     private void validateFeeData(JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"feeTypeCd\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bfeeTypeCd\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542broomId\u4fe1\u606f\");\n-\n-\n     }\n \n     @Override\n@@ -161,7 +157,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n     }\n \n-\n     public IRoomInnerServiceSMO getRoomInnerServiceSMOImpl() {\n         return roomInnerServiceSMOImpl;\n     }\n@@ -170,7 +165,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n     }\n \n-\n     public IFloorInnerServiceSMO getFloorInnerServiceSMOImpl() {\n         return floorInnerServiceSMOImpl;\n     }\n@@ -202,4 +196,4 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/479/QueryIndexStatisticListener.java\nindex ff64c34a971..ca65f727945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/479/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/479/QueryIndexStatisticListener.java\nindex ff64c34a971..ca65f727945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/479/QueryIndexStatisticListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/479/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
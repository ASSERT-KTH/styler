{
    "project_name": "neo4j-neo4j",
    "error_id": "1687",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1687/AbstractUserRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1687/AbstractUserRepository.java\nindex fdba8e7606f..d9f90937f29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1687/AbstractUserRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1687/AbstractUserRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.io.IOException;\n@@ -37,15 +38,19 @@ import static org.neo4j.internal.helpers.collection.MapUtil.trimToList;\n \n public abstract class AbstractUserRepository extends LifecycleAdapter implements UserRepository\n {\n-    /** Quick lookup of users by name */\n-    private final Map<String,User> usersByName = new ConcurrentHashMap<>();\n+    /**\n+     * Quick lookup of users by name\n+     */\n+    private final Map<String, User> usersByName = new ConcurrentHashMap<>();\n \n-    /** Master list of users */\n+    /**\n+     * Master list of users\n+     */\n     protected volatile List<User> users = new ArrayList<>();\n-    AtomicLong lastLoaded = new AtomicLong( 0L );\n+    AtomicLong lastLoaded = new AtomicLong(0L);\n \n     // Allow all ascii from '!' to '~', apart from ',' and ':' which are used as separators in flat file\n-    private final Pattern usernamePattern = Pattern.compile( \"^[\\\\x21-\\\\x2B\\\\x2D-\\\\x39\\\\x3B-\\\\x7E]+$\" );\n+    private final Pattern usernamePattern = Pattern.compile(\"^[\\\\x21-\\\\x2B\\\\x2D-\\\\x39\\\\x3B-\\\\x7E]+$\");\n \n     @Override\n     public void clear()\n@@ -55,53 +60,53 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n     }\n \n     @Override\n-    public User getUserByName( String username )\n+    public User getUserByName(String username)\n     {\n-        return username == null ? null : usersByName.get( username );\n+        return username == null ? null : usersByName.get(username);\n     }\n \n     @Override\n-    public void create( User user ) throws InvalidArgumentsException, IOException\n+    public void create(User user) throws InvalidArgumentsException, IOException\n     {\n-        assertValidUsername( user.name() );\n+        assertValidUsername(user.name());\n \n-        synchronized ( this )\n+        synchronized (this)\n         {\n             // Check for existing user\n-            for ( User other : users )\n+            for (User other : users)\n             {\n-                if ( other.name().equals( user.name() ) )\n+                if (other.name().equals(user.name()))\n                 {\n-                    throw new InvalidArgumentsException( \"The specified user '\" + user.name() + \"' already exists.\" );\n+                    throw new InvalidArgumentsException(\"The specified user '\" + user.name() + \"' already exists.\");\n                 }\n             }\n \n-            users.add( user );\n-            usersByName.put( user.name(), user );\n+            users.add(user);\n+            usersByName.put(user.name(), user);\n             persistUsers();\n         }\n     }\n \n     @Override\n-    public void setUsers( ListSnapshot<User> usersSnapshot ) throws InvalidArgumentsException\n+    public void setUsers(ListSnapshot<User> usersSnapshot) throws InvalidArgumentsException\n     {\n-        for ( User user : usersSnapshot.values() )\n+        for (User user : usersSnapshot.values())\n         {\n-            assertValidUsername( user.name() );\n+            assertValidUsername(user.name());\n         }\n \n-        synchronized ( this )\n+        synchronized (this)\n         {\n             users.clear();\n \n-            this.users.addAll( usersSnapshot.values() );\n-            this.lastLoaded.set( usersSnapshot.timestamp() );\n+            this.users.addAll(usersSnapshot.values());\n+            this.lastLoaded.set(usersSnapshot.timestamp());\n \n-            trimToList( usersByName, users, User::name );\n+            trimToList(usersByName, users, User::name);\n \n-            for ( User user : users )\n+            for (User user : users)\n             {\n-                usersByName.put( user.name(), user );\n+                usersByName.put(user.name(), user);\n             }\n         }\n     }\n@@ -113,24 +118,24 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n     }\n \n     @Override\n-    public void assertValidUsername( String username ) throws InvalidArgumentsException\n+    public void assertValidUsername(String username) throws InvalidArgumentsException\n     {\n-        if ( username == null || username.isEmpty() )\n+        if (username == null || username.isEmpty())\n         {\n-            throw new InvalidArgumentsException( \"The provided username is empty.\" );\n+            throw new InvalidArgumentsException(\"The provided username is empty.\");\n         }\n-        if ( !usernamePattern.matcher( username ).matches() )\n+        if (!usernamePattern.matcher(username).matches())\n         {\n             throw new InvalidArgumentsException(\n-                    \"Username '\" + username +\n-                    \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\" );\n+              \"Username '\" + username +\n+                \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\");\n         }\n     }\n \n     @Override\n     public synchronized Set<String> getAllUsernames()\n     {\n-        return users.stream().map( User::name ).collect( Collectors.toSet() );\n+        return users.stream().map(User::name).collect(Collectors.toSet());\n     }\n \n     /**\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
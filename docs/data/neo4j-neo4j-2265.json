{
    "project_name": "neo4j-neo4j",
    "error_id": "2265",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2265/AbstractDatabaseManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2265/AbstractDatabaseManager.java\nindex 5dd0b23e9f5..f0b5904a65a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2265/AbstractDatabaseManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2265/AbstractDatabaseManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.database;\n \n import java.util.Map;\n@@ -57,7 +58,7 @@ import static org.neo4j.configuration.GraphDatabaseInternalSettings.snapshot_que\n \n public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extends LifecycleAdapter implements DatabaseManager<DB>\n {\n-    protected final Map<NamedDatabaseId,DB> databaseMap;\n+    protected final Map<NamedDatabaseId, DB> databaseMap;\n     protected final GlobalModule globalModule;\n     protected final AbstractEditionModule edition;\n     protected final Log log;\n@@ -66,25 +67,25 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n     protected final LogProvider logProvider;\n     private final DatabaseIdRepository.Caching databaseIdRepository;\n \n-    protected AbstractDatabaseManager( GlobalModule globalModule, AbstractEditionModule edition, boolean manageDatabasesOnStartAndStop )\n+    protected AbstractDatabaseManager(GlobalModule globalModule, AbstractEditionModule edition, boolean manageDatabasesOnStartAndStop)\n     {\n         this.logProvider = globalModule.getLogService().getInternalLogProvider();\n-        this.log = logProvider.getLog( getClass() );\n+        this.log = logProvider.getLog(getClass());\n         this.globalModule = globalModule;\n         this.config = globalModule.getGlobalConfig();\n         this.edition = edition;\n         this.manageDatabasesOnStartAndStop = manageDatabasesOnStartAndStop;\n         this.databaseMap = new ConcurrentHashMap<>();\n-        this.databaseIdRepository = createDatabaseIdRepository( globalModule );\n+        this.databaseIdRepository = createDatabaseIdRepository(globalModule);\n     }\n \n-    private DatabaseIdRepository.Caching createDatabaseIdRepository( GlobalModule globalModule )\n+    private DatabaseIdRepository.Caching createDatabaseIdRepository(GlobalModule globalModule)\n     {\n         return CommunityEditionModule.tryResolveOrCreate(\n-                DatabaseIdRepository.Caching.class,\n-                globalModule.getExternalDependencyResolver(),\n-                () -> new MapCachingDatabaseIdRepository(\n-                        new SystemDbDatabaseIdRepository( this, globalModule.getJobScheduler() ) ) );\n+          DatabaseIdRepository.Caching.class,\n+          globalModule.getExternalDependencyResolver(),\n+          () -> new MapCachingDatabaseIdRepository(\n+            new SystemDbDatabaseIdRepository(this, globalModule.getJobScheduler())));\n     }\n \n     @Override\n@@ -101,7 +102,7 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n     @Override\n     public void start() throws Exception\n     {\n-        if ( manageDatabasesOnStartAndStop )\n+        if (manageDatabasesOnStartAndStop)\n         {\n             startAllDatabases();\n         }\n@@ -109,13 +110,13 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n \n     private void startAllDatabases()\n     {\n-        forEachDatabase( this::startDatabase, false, \"start\" );\n+        forEachDatabase(this::startDatabase, false, \"start\");\n     }\n \n     @Override\n     public void stop() throws Exception\n     {\n-        if ( manageDatabasesOnStartAndStop )\n+        if (manageDatabasesOnStartAndStop)\n         {\n             stopAllDatabases();\n         }\n@@ -123,100 +124,96 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n \n     private void stopAllDatabases()\n     {\n-        forEachDatabase( this::stopDatabase, true, \"stop\" );\n+        forEachDatabase(this::stopDatabase, true, \"stop\");\n     }\n \n     @Override\n-    public final SortedMap<NamedDatabaseId,DB> registeredDatabases()\n+    public final SortedMap<NamedDatabaseId, DB> registeredDatabases()\n     {\n         return databasesSnapshot();\n     }\n \n-    private NavigableMap<NamedDatabaseId,DB> databasesSnapshot()\n+    private NavigableMap<NamedDatabaseId, DB> databasesSnapshot()\n     {\n-        return unmodifiableNavigableMap( new TreeMap<>( databaseMap ) );\n+        return unmodifiableNavigableMap(new TreeMap<>(databaseMap));\n     }\n \n-    protected abstract DB createDatabaseContext( NamedDatabaseId namedDatabaseId ) throws Exception;\n+    protected abstract DB createDatabaseContext(NamedDatabaseId namedDatabaseId) throws Exception;\n \n-    protected ModularDatabaseCreationContext newDatabaseCreationContext( NamedDatabaseId namedDatabaseId, Dependencies parentDependencies,\n-            Monitors parentMonitors )\n+    protected ModularDatabaseCreationContext newDatabaseCreationContext(NamedDatabaseId namedDatabaseId, Dependencies parentDependencies,\n+                                                                        Monitors parentMonitors)\n     {\n-        EditionDatabaseComponents editionDatabaseComponents = edition.createDatabaseComponents( namedDatabaseId );\n-        var globalProcedures = parentDependencies.resolveDependency( GlobalProcedures.class );\n-        var databaseConfig = new DatabaseConfig( config, namedDatabaseId );\n+        EditionDatabaseComponents editionDatabaseComponents = edition.createDatabaseComponents(namedDatabaseId);\n+        var globalProcedures = parentDependencies.resolveDependency(GlobalProcedures.class);\n+        var databaseConfig = new DatabaseConfig(config, namedDatabaseId);\n \n-        return new ModularDatabaseCreationContext( namedDatabaseId, globalModule, parentDependencies, parentMonitors,\n-                                                   editionDatabaseComponents, globalProcedures, createVersionContextSupplier( databaseConfig ),\n-                                                   databaseConfig, LeaseService.NO_LEASES );\n+        return new ModularDatabaseCreationContext(namedDatabaseId, globalModule, parentDependencies, parentMonitors,\n+          editionDatabaseComponents, globalProcedures, createVersionContextSupplier(databaseConfig),\n+          databaseConfig, LeaseService.NO_LEASES);\n     }\n \n-    private void forEachDatabase( BiConsumer<NamedDatabaseId,DB> consumer, boolean systemDatabaseLast, String operationName )\n+    private void forEachDatabase(BiConsumer<NamedDatabaseId, DB> consumer, boolean systemDatabaseLast, String operationName)\n     {\n         var snapshot = systemDatabaseLast ? databasesSnapshot().descendingMap().entrySet() : databasesSnapshot().entrySet();\n         DatabaseManagementException dbmsExceptions = null;\n \n-        for ( var entry : snapshot )\n+        for (var entry : snapshot)\n         {\n             NamedDatabaseId namedDatabaseId = entry.getKey();\n             DB context = entry.getValue();\n             try\n             {\n-                consumer.accept( namedDatabaseId, context );\n-            }\n-            catch ( Throwable t )\n+                consumer.accept(namedDatabaseId, context);\n+            } catch (Throwable t)\n             {\n-                var dbmsException = new DatabaseManagementException( format( \"An error occurred! Unable to %s the database `%s`.\",\n-                        operationName, namedDatabaseId ), t );\n-                dbmsExceptions = Exceptions.chain( dbmsExceptions, dbmsException );\n+                var dbmsException = new DatabaseManagementException(format(\"An error occurred! Unable to %s the database `%s`.\",\n+                  operationName, namedDatabaseId), t);\n+                dbmsExceptions = Exceptions.chain(dbmsExceptions, dbmsException);\n             }\n         }\n \n-        if ( dbmsExceptions != null )\n+        if (dbmsExceptions != null)\n         {\n             throw dbmsExceptions;\n         }\n     }\n \n-    protected void startDatabase( NamedDatabaseId namedDatabaseId, DB context )\n+    protected void startDatabase(NamedDatabaseId namedDatabaseId, DB context)\n     {\n         try\n         {\n-            log.info( \"Starting '%s'.\", namedDatabaseId );\n+            log.info(\"Starting '%s'.\", namedDatabaseId);\n             Database database = context.database();\n             database.start();\n-        }\n-        catch ( Throwable t )\n+        } catch (Throwable t)\n         {\n-            throw new DatabaseManagementException( format( \"An error occurred! Unable to start `%s`.\", namedDatabaseId ), t );\n+            throw new DatabaseManagementException(format(\"An error occurred! Unable to start `%s`.\", namedDatabaseId), t);\n         }\n     }\n \n-    protected void stopDatabase( NamedDatabaseId namedDatabaseId, DB context )\n+    protected void stopDatabase(NamedDatabaseId namedDatabaseId, DB context)\n     {\n         try\n         {\n-            log.info( \"Stopping '%s'.\", namedDatabaseId );\n+            log.info(\"Stopping '%s'.\", namedDatabaseId);\n             Database database = context.database();\n             database.stop();\n-        }\n-        catch ( Throwable t )\n+        } catch (Throwable t)\n         {\n-            throw new DatabaseManagementException( format( \"An error occurred! Unable to stop `%s`.\", namedDatabaseId ), t );\n+            throw new DatabaseManagementException(format(\"An error occurred! Unable to stop `%s`.\", namedDatabaseId), t);\n         }\n     }\n \n-    protected VersionContextSupplier createVersionContextSupplier( DatabaseConfig databaseConfig )\n+    protected VersionContextSupplier createVersionContextSupplier(DatabaseConfig databaseConfig)\n     {\n         DependencyResolver externalDependencyResolver = globalModule.getExternalDependencyResolver();\n         Class<VersionContextSupplier> klass = VersionContextSupplier.class;\n-        if ( externalDependencyResolver.resolveTypeDependencies( klass ).iterator().hasNext() )\n+        if (externalDependencyResolver.resolveTypeDependencies(klass).iterator().hasNext())\n         {\n-            return externalDependencyResolver.resolveDependency( klass );\n-        }\n-        else\n+            return externalDependencyResolver.resolveDependency(klass);\n+        } else\n         {\n-            return databaseConfig.get( snapshot_query ) ? new TransactionVersionContextSupplier() : EmptyVersionContextSupplier.EMPTY;\n+            return databaseConfig.get(snapshot_query) ? new TransactionVersionContextSupplier() : EmptyVersionContextSupplier.EMPTY;\n         }\n     }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2265/AbstractDatabaseManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2265/AbstractDatabaseManager.java\nindex 5dd0b23e9f5..7cccecbe707 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2265/AbstractDatabaseManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2265/AbstractDatabaseManager.java\n@@ -146,8 +146,7 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n         var globalProcedures = parentDependencies.resolveDependency( GlobalProcedures.class );\n         var databaseConfig = new DatabaseConfig( config, namedDatabaseId );\n \n-        return new ModularDatabaseCreationContext( namedDatabaseId, globalModule, parentDependencies, parentMonitors,\n-                                                   editionDatabaseComponents, globalProcedures, createVersionContextSupplier( databaseConfig ),\n+        return new ModularDatabaseCreationContext( namedDatabaseId, globalModule, parentDependencies, parentMonitors, editionDatabaseComponents, globalProcedures, createVersionContextSupplier( databaseConfig ),\n                                                    databaseConfig, LeaseService.NO_LEASES );\n     }\n \n@@ -219,4 +218,4 @@ public abstract class AbstractDatabaseManager<DB extends DatabaseContext> extend\n             return databaseConfig.get( snapshot_query ) ? new TransactionVersionContextSupplier() : EmptyVersionContextSupplier.EMPTY;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
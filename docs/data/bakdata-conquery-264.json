{
    "project_name": "bakdata-conquery",
    "error_id": "264",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "79",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": " * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n */\npublic class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n\t\n\n\tpublic ResourceFormConfigProvider(ObjectReader reader) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/264/ResourceFormConfigProvider.java\nindex 5c7b6ab82db..df22e3774b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/264/ResourceFormConfigProvider.java\n@@ -14,8 +14,8 @@ import io.github.classgraph.ResourceList;\n  * Loads form frontend configuration from the bundled resources that are in the class path.\n  * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n  */\n-public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n-\t\n+public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase {\n+\n \n \tpublic ResourceFormConfigProvider(ObjectReader reader) {\n \t\tsuper(reader);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/264/ResourceFormConfigProvider.java\nindex 5c7b6ab82db..5de2720f25e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/264/ResourceFormConfigProvider.java\n@@ -14,28 +14,27 @@ import io.github.classgraph.ResourceList;\n  * Loads form frontend configuration from the bundled resources that are in the class path.\n  * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n  */\n-public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n-\t\n-\n-\tpublic ResourceFormConfigProvider(ObjectReader reader) {\n-\t\tsuper(reader);\n-\t}\n-\n-\t@Override\n-\tpublic void accept(Collection<FormFrontendConfigInformation> t) {\n-\t\tResourceList frontendConfigs = CPSTypeIdResolver.SCAN_RESULT\n-\t\t\t.getResourcesMatchingPattern(Pattern.compile(\".*\\\\.frontend_conf\\\\.json\"));\n-\t\t\n-\t\tfor (Resource config : frontendConfigs) {\n-\t\t\ttry {\n-\t\t\t\tJsonNode configTree = reader.readTree(config.open());\n-\t\t\t\tt.add(new FormFrontendConfigInformation(\"Resource \" + config.getPath(), configTree));\n-\t\t\t}\n-\t\t\tcatch (IOException e) {\n-\t\t\t\tthrow new IllegalArgumentException(String.format(\"Could not parse the frontend config: %s\", config.getPath()), e);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t}\n-\t\n+public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase {\n+\n+\n+    public ResourceFormConfigProvider(ObjectReader reader) {\n+        super(reader);\n+    }\n+\n+    @Override\n+    public void accept(Collection<FormFrontendConfigInformation> t) {\n+        ResourceList frontendConfigs = CPSTypeIdResolver.SCAN_RESULT\n+            .getResourcesMatchingPattern(Pattern.compile(\".*\\\\.frontend_conf\\\\.json\"));\n+\n+        for (Resource config : frontendConfigs) {\n+            try {\n+                JsonNode configTree = reader.readTree(config.open());\n+                t.add(new FormFrontendConfigInformation(\"Resource \" + config.getPath(), configTree));\n+            } catch (IOException e) {\n+                throw new IllegalArgumentException(String.format(\"Could not parse the frontend config: %s\", config.getPath()), e);\n+            }\n+        }\n+\n+    }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/264/ResourceFormConfigProvider.java\nindex 5c7b6ab82db..709a403c67e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/264/ResourceFormConfigProvider.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.forms.frontendconfiguration;\n import java.io.IOException;\n import java.util.Collection;\n import java.util.regex.Pattern;\n-\n import com.bakdata.conquery.io.cps.CPSTypeIdResolver;\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectReader;\n@@ -14,28 +13,27 @@ import io.github.classgraph.ResourceList;\n  * Loads form frontend configuration from the bundled resources that are in the class path.\n  * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n  */\n-public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n-\t\n \n-\tpublic ResourceFormConfigProvider(ObjectReader reader) {\n-\t\tsuper(reader);\n-\t}\n+public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase {\n+\n+ public ResourceFormConfigProvider(ObjectReader reader) {\n+  super(reader);\n+ }\n \n-\t@Override\n-\tpublic void accept(Collection<FormFrontendConfigInformation> t) {\n-\t\tResourceList frontendConfigs = CPSTypeIdResolver.SCAN_RESULT\n-\t\t\t.getResourcesMatchingPattern(Pattern.compile(\".*\\\\.frontend_conf\\\\.json\"));\n-\t\t\n-\t\tfor (Resource config : frontendConfigs) {\n-\t\t\ttry {\n-\t\t\t\tJsonNode configTree = reader.readTree(config.open());\n-\t\t\t\tt.add(new FormFrontendConfigInformation(\"Resource \" + config.getPath(), configTree));\n-\t\t\t}\n-\t\t\tcatch (IOException e) {\n-\t\t\t\tthrow new IllegalArgumentException(String.format(\"Could not parse the frontend config: %s\", config.getPath()), e);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t}\n-\t\n+ @Override\n+ public void accept(Collection<FormFrontendConfigInformation> t) {\n+  ResourceList frontendConfigs = CPSTypeIdResolver.SCAN_RESULT.getResourcesMatchingPattern(Pattern.compile(\".*\\\\.frontend_conf\\\\.json\"));\n+  for(Resource config :frontendConfigs) {\n+   try {\n+    JsonNode configTree = reader.readTree(config.open());\n+    t.add(new FormFrontendConfigInformation(\"Resource \"+config.getPath(), configTree));\n+   }\n+   catch (IOException e) {\n+    throw new IllegalArgumentException(\n+           String.format(\"Could not parse the frontend config: %s\", config.getPath()),\n+           e\n+          );\n+   }\n+  }\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/264/ResourceFormConfigProvider.java\nindex 5c7b6ab82db..df22e3774b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/264/ResourceFormConfigProvider.java\n@@ -14,8 +14,8 @@ import io.github.classgraph.ResourceList;\n  * Loads form frontend configuration from the bundled resources that are in the class path.\n  * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n  */\n-public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n-\t\n+public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase {\n+\n \n \tpublic ResourceFormConfigProvider(ObjectReader reader) {\n \t\tsuper(reader);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/264/ResourceFormConfigProvider.java\nindex 5c7b6ab82db..adbfed82c78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/264/ResourceFormConfigProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/264/ResourceFormConfigProvider.java\n@@ -14,8 +14,7 @@ import io.github.classgraph.ResourceList;\n  * Loads form frontend configuration from the bundled resources that are in the class path.\n  * In order to be found, the configuration file name must end with {@code *.frontend_conf.json}.\n  */\n-public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase{\n-\t\n+public class ResourceFormConfigProvider extends FormFrontendConfigProviderBase {\n \n \tpublic ResourceFormConfigProvider(ObjectReader reader) {\n \t\tsuper(reader);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
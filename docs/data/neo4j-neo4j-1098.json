{
    "project_name": "neo4j-neo4j",
    "error_id": "1098",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1098/Monitors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1098/Monitors.java\nindex 93a40cc562b..f8077a7941f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1098/Monitors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1098/Monitors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.monitoring;\n \n import org.apache.commons.lang3.ClassUtils;\n@@ -41,25 +42,27 @@ import static org.apache.commons.lang3.ArrayUtils.isEmpty;\n /**\n  * This can be used to create monitor instances using a Dynamic Proxy, which when invoked can delegate to any number of\n  * listeners. Listeners also implement the monitor interface.\n- *\n+ * <p>\n  * The creation of monitors and registration of listeners may happen in any order. Listeners can be registered before\n  * creating the actual monitor, and vice versa.\n- *\n+ * <p>\n  * Components that actually implement listening functionality must be registered using {{@link #addMonitorListener(Object, String...)}.\n- *\n+ * <p>\n  * This class is thread-safe.\n  */\n @IgnoreApiCheck\n public class Monitors\n {\n-    /** Monitor interface method -> Listeners */\n-    private final Map<Method,Set<MonitorListenerInvocationHandler>> methodMonitorListeners = new ConcurrentHashMap<>();\n+    /**\n+     * Monitor interface method -> Listeners\n+     */\n+    private final Map<Method, Set<MonitorListenerInvocationHandler>> methodMonitorListeners = new ConcurrentHashMap<>();\n     private final MutableBag<Class<?>> monitoredInterfaces = MultiReaderHashBag.newBag();\n     private final Monitors parent;\n \n     public Monitors()\n     {\n-        this( null );\n+        this(null);\n     }\n \n     /**\n@@ -74,84 +77,85 @@ public class Monitors\n      *\n      * @param parent to propagate events to.\n      */\n-    public Monitors( Monitors parent )\n+    public Monitors(Monitors parent)\n     {\n         this.parent = parent;\n     }\n \n-    public <T> T newMonitor( Class<T> monitorClass, String... tags )\n+    public <T> T newMonitor(Class<T> monitorClass, String... tags)\n     {\n-        requireInterface( monitorClass );\n+        requireInterface(monitorClass);\n         ClassLoader classLoader = monitorClass.getClassLoader();\n-        MonitorInvocationHandler monitorInvocationHandler = new MonitorInvocationHandler( this, tags );\n-        return monitorClass.cast( Proxy.newProxyInstance( classLoader, new Class<?>[]{monitorClass}, monitorInvocationHandler ) );\n+        MonitorInvocationHandler monitorInvocationHandler = new MonitorInvocationHandler(this, tags);\n+        return monitorClass.cast(Proxy.newProxyInstance(classLoader, new Class<?>[] {monitorClass}, monitorInvocationHandler));\n     }\n \n-    public void addMonitorListener( Object monitorListener, String... tags )\n+    public void addMonitorListener(Object monitorListener, String... tags)\n     {\n-        MonitorListenerInvocationHandler monitorListenerInvocationHandler = createInvocationHandler( monitorListener, tags );\n+        MonitorListenerInvocationHandler monitorListenerInvocationHandler = createInvocationHandler(monitorListener, tags);\n \n-        List<Class<?>> listenerInterfaces = getAllInterfaces( monitorListener );\n-        methodsStream( listenerInterfaces ).forEach( method ->\n+        List<Class<?>> listenerInterfaces = getAllInterfaces(monitorListener);\n+        methodsStream(listenerInterfaces).forEach(method ->\n         {\n             Set<MonitorListenerInvocationHandler> methodHandlers =\n-                    methodMonitorListeners.computeIfAbsent( method, f -> ConcurrentHashMap.newKeySet() );\n-            methodHandlers.add( monitorListenerInvocationHandler );\n-        } );\n-        monitoredInterfaces.addAll( listenerInterfaces );\n+              methodMonitorListeners.computeIfAbsent(method, f -> ConcurrentHashMap.newKeySet());\n+            methodHandlers.add(monitorListenerInvocationHandler);\n+        });\n+        monitoredInterfaces.addAll(listenerInterfaces);\n     }\n \n-    public void removeMonitorListener( Object monitorListener )\n+    public void removeMonitorListener(Object monitorListener)\n     {\n-        List<Class<?>> listenerInterfaces = getAllInterfaces( monitorListener );\n-        methodsStream( listenerInterfaces ).forEach( method -> cleanupMonitorListeners( monitorListener, method ) );\n-        listenerInterfaces.forEach( monitoredInterfaces::remove );\n+        List<Class<?>> listenerInterfaces = getAllInterfaces(monitorListener);\n+        methodsStream(listenerInterfaces).forEach(method -> cleanupMonitorListeners(monitorListener, method));\n+        listenerInterfaces.forEach(monitoredInterfaces::remove);\n     }\n \n-    private void cleanupMonitorListeners( Object monitorListener, Method key )\n+    private void cleanupMonitorListeners(Object monitorListener, Method key)\n     {\n-        methodMonitorListeners.computeIfPresent( key, ( method1, handlers ) ->\n+        methodMonitorListeners.computeIfPresent(key, (method1, handlers) ->\n         {\n-            handlers.removeIf( handler -> monitorListener.equals( handler.getMonitorListener() ) );\n+            handlers.removeIf(handler -> monitorListener.equals(handler.getMonitorListener()));\n             return handlers.isEmpty() ? null : handlers;\n-        } );\n+        });\n     }\n \n-    private static List<Class<?>> getAllInterfaces( Object monitorListener )\n+    private static List<Class<?>> getAllInterfaces(Object monitorListener)\n     {\n-        return ClassUtils.getAllInterfaces( monitorListener.getClass() );\n+        return ClassUtils.getAllInterfaces(monitorListener.getClass());\n     }\n \n-    private static Stream<Method> methodsStream( List<Class<?>> interfaces )\n+    private static Stream<Method> methodsStream(List<Class<?>> interfaces)\n     {\n-        return interfaces.stream().map( Class::getMethods ).flatMap( Arrays::stream );\n+        return interfaces.stream().map(Class::getMethods).flatMap(Arrays::stream);\n     }\n \n-    private static MonitorListenerInvocationHandler createInvocationHandler( Object monitorListener, String[] tags )\n+    private static MonitorListenerInvocationHandler createInvocationHandler(Object monitorListener, String[] tags)\n     {\n-        return isEmpty( tags ) ? new UntaggedMonitorListenerInvocationHandler( monitorListener )\n-                                          : new TaggedMonitorListenerInvocationHandler( monitorListener, tags );\n+        return isEmpty(tags) ? new UntaggedMonitorListenerInvocationHandler(monitorListener)\n+          : new TaggedMonitorListenerInvocationHandler(monitorListener, tags);\n     }\n \n-    private static void requireInterface( Class monitorClass )\n+    private static void requireInterface(Class monitorClass)\n     {\n-        if ( !monitorClass.isInterface() )\n+        if (!monitorClass.isInterface())\n         {\n-            throw new IllegalArgumentException( \"Interfaces should be provided.\" );\n+            throw new IllegalArgumentException(\"Interfaces should be provided.\");\n         }\n     }\n+\n     private interface MonitorListenerInvocationHandler\n     {\n         Object getMonitorListener();\n \n-        void invoke( Object proxy, Method method, Object[] args, String... tags ) throws Throwable;\n+        void invoke(Object proxy, Method method, Object[] args, String... tags) throws Throwable;\n     }\n \n     private static class UntaggedMonitorListenerInvocationHandler implements MonitorListenerInvocationHandler\n     {\n         private final Object monitorListener;\n \n-        UntaggedMonitorListenerInvocationHandler( Object monitorListener )\n+        UntaggedMonitorListenerInvocationHandler(Object monitorListener)\n         {\n             this.monitorListener = monitorListener;\n         }\n@@ -163,9 +167,9 @@ public class Monitors\n         }\n \n         @Override\n-        public void invoke( Object proxy, Method method, Object[] args, String... tags ) throws Throwable\n+        public void invoke(Object proxy, Method method, Object[] args, String... tags) throws Throwable\n         {\n-            method.invoke( monitorListener, args );\n+            method.invoke(monitorListener, args);\n         }\n     }\n \n@@ -173,18 +177,18 @@ public class Monitors\n     {\n         private final String[] tags;\n \n-        TaggedMonitorListenerInvocationHandler( Object monitorListener, String... tags )\n+        TaggedMonitorListenerInvocationHandler(Object monitorListener, String... tags)\n         {\n-            super( monitorListener );\n+            super(monitorListener);\n             this.tags = tags;\n         }\n \n         @Override\n-        public void invoke( Object proxy, Method method, Object[] args, String... tags ) throws Throwable\n+        public void invoke(Object proxy, Method method, Object[] args, String... tags) throws Throwable\n         {\n-            if ( ArrayUtil.containsAll( this.tags, tags ) )\n+            if (ArrayUtil.containsAll(this.tags, tags))\n             {\n-                super.invoke( proxy, method, args, tags );\n+                super.invoke(proxy, method, args, tags);\n             }\n         }\n     }\n@@ -194,41 +198,40 @@ public class Monitors\n         private final Monitors monitor;\n         private final String[] tags;\n \n-        MonitorInvocationHandler( Monitors monitor, String... tags )\n+        MonitorInvocationHandler(Monitors monitor, String... tags)\n         {\n             this.monitor = monitor;\n             this.tags = tags;\n         }\n \n         @Override\n-        public Object invoke( Object proxy, Method method, Object[] args )\n+        public Object invoke(Object proxy, Method method, Object[] args)\n         {\n-            invokeMonitorListeners( monitor, tags, proxy, method, args );\n+            invokeMonitorListeners(monitor, tags, proxy, method, args);\n \n             // Bubble up\n             Monitors current = monitor.parent;\n-            while ( current != null )\n+            while (current != null)\n             {\n-                invokeMonitorListeners( current, tags, proxy, method, args );\n+                invokeMonitorListeners(current, tags, proxy, method, args);\n                 current = current.parent;\n             }\n             return null;\n         }\n \n-        private static void invokeMonitorListeners( Monitors monitor, String[] tags, Object proxy, Method method, Object[] args )\n+        private static void invokeMonitorListeners(Monitors monitor, String[] tags, Object proxy, Method method, Object[] args)\n         {\n-            Set<MonitorListenerInvocationHandler> handlers = monitor.methodMonitorListeners.get( method );\n-            if ( handlers == null || handlers.isEmpty() )\n+            Set<MonitorListenerInvocationHandler> handlers = monitor.methodMonitorListeners.get(method);\n+            if (handlers == null || handlers.isEmpty())\n             {\n                 return;\n             }\n-            for ( MonitorListenerInvocationHandler monitorListenerInvocationHandler : handlers )\n+            for (MonitorListenerInvocationHandler monitorListenerInvocationHandler : handlers)\n             {\n                 try\n                 {\n-                    monitorListenerInvocationHandler.invoke( proxy, method, args, tags );\n-                }\n-                catch ( Throwable ignored )\n+                    monitorListenerInvocationHandler.invoke(proxy, method, args, tags);\n+                } catch (Throwable ignored)\n                 {\n                 }\n             }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
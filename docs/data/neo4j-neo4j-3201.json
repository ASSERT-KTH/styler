{
    "project_name": "neo4j-neo4j",
    "error_id": "3201",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3201/DatabaseManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3201/DatabaseManager.java\nindex 3942e50fd37..88370a402c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3201/DatabaseManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3201/DatabaseManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.database;\n \n import java.util.Optional;\n@@ -58,7 +59,7 @@ public interface DatabaseManager<DB extends DatabaseContext> extends Lifecycle\n      * @param namedDatabaseId the ID of the database to be returned\n      * @return optionally, the database context instance with ID databaseId\n      */\n-    Optional<DB> getDatabaseContext( NamedDatabaseId namedDatabaseId );\n+    Optional<DB> getDatabaseContext(NamedDatabaseId namedDatabaseId);\n \n     /**\n      * Returns a given {@link DatabaseContext} object by name, or `Optional.empty()` if the database does not exist\n@@ -66,9 +67,9 @@ public interface DatabaseManager<DB extends DatabaseContext> extends Lifecycle\n      * @param databaseName the name of the database to be returned\n      * @return optionally, the database context instance with name databaseName\n      */\n-    default Optional<DB> getDatabaseContext( String databaseName )\n+    default Optional<DB> getDatabaseContext(String databaseName)\n     {\n-        return databaseIdRepository().getByName( databaseName ).flatMap( this::getDatabaseContext );\n+        return databaseIdRepository().getByName(databaseName).flatMap(this::getDatabaseContext);\n     }\n \n     /**\n@@ -77,62 +78,67 @@ public interface DatabaseManager<DB extends DatabaseContext> extends Lifecycle\n      * @param databaseId the identifier of the database to be returned\n      * @return optionally, the database context instance with identifier databaseId\n      */\n-    default Optional<DB> getDatabaseContext( DatabaseId databaseId )\n+    default Optional<DB> getDatabaseContext(DatabaseId databaseId)\n     {\n-        return databaseIdRepository().getById( databaseId ).flatMap( this::getDatabaseContext );\n+        return databaseIdRepository().getById(databaseId).flatMap(this::getDatabaseContext);\n     }\n \n     /**\n      * Create database with specified name.\n      * Database name should be unique.\n      * By default a database is in a started state when it is initially created.\n+     *\n      * @param namedDatabaseId ID of database to create\n-     * @throws DatabaseManagementException if database with specified name already exists, or the limited number of databases has been reached.\n      * @return database context for newly created database\n+     * @throws DatabaseManagementException if database with specified name already exists, or the limited number of databases has been reached.\n      */\n-    DB createDatabase( NamedDatabaseId namedDatabaseId ) throws DatabaseManagementException;\n+    DB createDatabase(NamedDatabaseId namedDatabaseId) throws DatabaseManagementException;\n \n     /**\n      * Drop database with specified name.\n      * Database that was requested to be dropped will be stopped first, and then completely removed.\n      * If database with requested name does not exist exception will be thrown.\n+     *\n      * @param namedDatabaseId ID of database to drop.\n      */\n-    void dropDatabase( NamedDatabaseId namedDatabaseId ) throws DatabaseNotFoundException;\n+    void dropDatabase(NamedDatabaseId namedDatabaseId) throws DatabaseNotFoundException;\n \n     /**\n      * Upgrade database with specified name.\n      * The database will be restarted if it is running.\n+     *\n      * @param namedDatabaseId ID of database to upgrade.\n      * @throws DatabaseNotFoundException if there is no database by the given name.\n      */\n-    default void upgradeDatabase( NamedDatabaseId namedDatabaseId ) throws DatabaseNotFoundException\n+    default void upgradeDatabase(NamedDatabaseId namedDatabaseId) throws DatabaseNotFoundException\n     {\n-        throw new UnsupportedOperationException( \"Database upgrade is not yet implemented for \" + getClass().getSimpleName() );\n+        throw new UnsupportedOperationException(\"Database upgrade is not yet implemented for \" + getClass().getSimpleName());\n     }\n \n     /**\n      * Stop database with specified name.\n      * Stopping already stopped database does not have any effect.\n+     *\n      * @param namedDatabaseId database ID to stop\n      */\n-    void stopDatabase( NamedDatabaseId namedDatabaseId ) throws DatabaseNotFoundException;\n+    void stopDatabase(NamedDatabaseId namedDatabaseId) throws DatabaseNotFoundException;\n \n     /**\n      * Start database with specified name.\n      * Starting already started database does not have any effect.\n+     *\n      * @param namedDatabaseId database ID to start\n      */\n-    void startDatabase( NamedDatabaseId namedDatabaseId ) throws DatabaseNotFoundException;\n+    void startDatabase(NamedDatabaseId namedDatabaseId) throws DatabaseNotFoundException;\n \n     /**\n      * Return all {@link DatabaseContext} instances created by this service, associated with their database names.\n-     *\n+     * <p>\n      * The collection returned from this method must be an immutable view over the registered database and sorted by database name.\n      *\n      * @return a Map from database names to database objects.\n      */\n-    SortedMap<NamedDatabaseId,DB> registeredDatabases();\n+    SortedMap<NamedDatabaseId, DB> registeredDatabases();\n \n     /**\n      * Return the {@link DatabaseIdRepository.Caching} constructed with this database manager. Use this to retrieve a\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
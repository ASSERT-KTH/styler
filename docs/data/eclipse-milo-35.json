{
    "project_name": "eclipse-milo",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "32",
                "severity": "error",
                "message": "'}' at column 32 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class ByteConversions {\n\n    private ByteConversions() {}\n\n    @NotNull\n    static Boolean byteToBoolean(@NotNull UByte ub) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/35/ByteConversions.java\nindex f011f895e88..465f18c9787 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/35/ByteConversions.java\n@@ -24,7 +24,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class ByteConversions {\n \n-    private ByteConversions() {}\n+    private ByteConversions() {\n+    }\n \n     @NotNull\n     static Boolean byteToBoolean(@NotNull UByte ub) {\n@@ -98,9 +99,12 @@ final class ByteConversions {\n     static Object explicitConversion(@NotNull UByte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return byteToBoolean(b);\n-            case String:    return byteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case Boolean:\n+                return byteToBoolean(b);\n+            case String:\n+                return byteToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -109,18 +113,28 @@ final class ByteConversions {\n     static Object implicitConversion(@NotNull UByte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return byteToDouble(b);\n-            case Float:     return byteToFloat(b);\n-            case Int16:     return byteToInt16(b);\n-            case Int32:     return byteToInt32(b);\n-            case Int64:     return byteToInt64(b);\n-            case SByte:     return byteToSByte(b);\n-            case UInt16:    return byteToUInt16(b);\n-            case UInt32:    return byteToUInt32(b);\n-            case UInt64:    return byteToUInt64(b);\n-            default:        return null;\n+            case Double:\n+                return byteToDouble(b);\n+            case Float:\n+                return byteToFloat(b);\n+            case Int16:\n+                return byteToInt16(b);\n+            case Int32:\n+                return byteToInt32(b);\n+            case Int64:\n+                return byteToInt64(b);\n+            case SByte:\n+                return byteToSByte(b);\n+            case UInt16:\n+                return byteToUInt16(b);\n+            case UInt32:\n+                return byteToUInt32(b);\n+            case UInt64:\n+                return byteToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n-    \n+\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/35/ByteConversions.java\nindex f011f895e88..51bef2edcf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/35/ByteConversions.java\n@@ -98,9 +98,11 @@ final class ByteConversions {\n     static Object explicitConversion(@NotNull UByte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return byteToBoolean(b);\n+            case Boolean:\n+    return byteToBoolean(b);\n             case String:    return byteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            default:\n+    return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -118,9 +120,9 @@ final class ByteConversions {\n             case UInt16:    return byteToUInt16(b);\n             case UInt32:    return byteToUInt32(b);\n             case UInt64:    return byteToUInt64(b);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n-    \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/35/ByteConversions.java\nindex f011f895e88..c30ae588d11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/35/ByteConversions.java\n@@ -24,7 +24,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class ByteConversions {\n \n-    private ByteConversions() {}\n+    private ByteConversions() {\n+    }\n \n     @NotNull\n     static Boolean byteToBoolean(@NotNull UByte ub) {\n@@ -85,10 +86,7 @@ final class ByteConversions {\n     static Object convert(@NotNull Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof UByte) {\n             UByte b = (UByte) o;\n-\n-            return implicit ?\n-                implicitConversion(b, targetType) :\n-                explicitConversion(b, targetType);\n+            return implicit ? implicitConversion(b, targetType) : explicitConversion(b, targetType);\n         } else {\n             return null;\n         }\n@@ -98,9 +96,13 @@ final class ByteConversions {\n     static Object explicitConversion(@NotNull UByte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return byteToBoolean(b);\n-            case String:    return byteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case Boolean:\n+                return byteToBoolean(b);\n+\n+            case String:\n+                return byteToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -109,18 +111,36 @@ final class ByteConversions {\n     static Object implicitConversion(@NotNull UByte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return byteToDouble(b);\n-            case Float:     return byteToFloat(b);\n-            case Int16:     return byteToInt16(b);\n-            case Int32:     return byteToInt32(b);\n-            case Int64:     return byteToInt64(b);\n-            case SByte:     return byteToSByte(b);\n-            case UInt16:    return byteToUInt16(b);\n-            case UInt32:    return byteToUInt32(b);\n-            case UInt64:    return byteToUInt64(b);\n-            default:        return null;\n+            case Double:\n+                return byteToDouble(b);\n+\n+            case Float:\n+                return byteToFloat(b);\n+\n+            case Int16:\n+                return byteToInt16(b);\n+\n+            case Int32:\n+                return byteToInt32(b);\n+\n+            case Int64:\n+                return byteToInt64(b);\n+\n+            case SByte:\n+                return byteToSByte(b);\n+\n+            case UInt16:\n+                return byteToUInt16(b);\n+\n+            case UInt32:\n+                return byteToUInt32(b);\n+\n+            case UInt64:\n+                return byteToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n-    \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/35/ByteConversions.java\nindex f011f895e88..1469a46c031 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/35/ByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/35/ByteConversions.java\n@@ -24,9 +24,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class ByteConversions {\n \n-    private ByteConversions() {}\n+    private ByteConversions() {\n \n-    @NotNull\n+    } @NotNull\n     static Boolean byteToBoolean(@NotNull UByte ub) {\n         return ub.intValue() != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
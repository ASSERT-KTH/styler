{
    "project_name": "st-js-st-js",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "80",
                "column": "82",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t}\n\n\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n\t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/3/STJSPackageWebJarTest.java\nindex 43bff26c102..76d791c7d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/3/STJSPackageWebJarTest.java\n@@ -77,7 +77,7 @@ public class STJSPackageWebJarTest {\n \t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n \t}\n \n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n+\tprivate static void assertNotContainsEntry(Set<String> entries, String entry) {\n \t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n \t}\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/3/STJSPackageWebJarTest.java\nindex 43bff26c102..d0aaf45c35b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/3/STJSPackageWebJarTest.java\n@@ -17,67 +17,67 @@ import static org.junit.Assert.assertTrue;\n  */\n public class STJSPackageWebJarTest {\n \n-\t@SuppressWarnings(\"unchecked\")\n-\t@Test\n-\tpublic void testPackageIt() throws Exception {\n-\n-\t\tFile testDir = ResourceExtractor.simpleExtractResources(getClass(), \"/package-js-webjar\");\n-\n-\t\tVerifier verifier = new Verifier(testDir.getAbsolutePath());\n-\t\tverifier.deleteArtifact(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n-\n-\t\t// coming from the configuration of surefire plugin outside\n-\t\tverifier.getCliOptions().add(\"-Dstjs.version=\" + System.getProperty(\"stjs.version\"));\n-\n-\t\tverifier.executeGoal(\"install\");\n-\n-\t\tverifier.verifyErrorFreeLog();\n-\n-\t\tString artifactFile = verifier.getArtifactPath(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n-\t\tSet<String> entryNames = JarUtils.getJarEntries(artifactFile);\n-\n-\t\t// all resources that must be loaded by a browser must be packaged in the folder\n-\t\t// specified in <generatedSourcesDirectory>\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.map\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.java\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs/example/stjs-lib-example.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.map\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.java\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.js\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.map\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.java\");\n-\t\tassertNotContainsEntry(entryNames, \"stjs/example/stjs-lib-example.js\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.js\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.map\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.java\");\n-\n-\t\t// Class files must be packaged at the root of the web jar\n-\t\tassertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.class\");\n-\t\tassertContainsEntry(entryNames, \"DefaultPackageExample.class\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.class\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.class\");\n-\n-\t\t// the .stjs properties files must be in both places (classpath and webjar path), so that we can easily do bidirectional mapping between\n-\t\t// .js and .class file locations\n-\t\tassertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"DefaultPackageExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.stjs\");\n-\n-\t\t// stjs.js should not be included in a webjar (it is declared as a dependency instead)\n-\t\tassertNotContainsEntry(entryNames, \"stjs.js\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs.js\");\n-\n-\t\tverifier.resetStreams();\n-\t}\n-\n-\tprivate static void assertContainsEntry(Set<String> entries, String entry) {\n-\t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n-\t}\n-\n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n-\t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n-\t}\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testPackageIt() throws Exception {\n+\n+        File testDir = ResourceExtractor.simpleExtractResources(getClass(), \"/package-js-webjar\");\n+\n+        Verifier verifier = new Verifier(testDir.getAbsolutePath());\n+        verifier.deleteArtifact(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n+\n+        // coming from the configuration of surefire plugin outside\n+        verifier.getCliOptions().add(\"-Dstjs.version=\" + System.getProperty(\"stjs.version\"));\n+\n+        verifier.executeGoal(\"install\");\n+\n+        verifier.verifyErrorFreeLog();\n+\n+        String artifactFile = verifier.getArtifactPath(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n+        Set<String> entryNames = JarUtils.getJarEntries(artifactFile);\n+\n+        // all resources that must be loaded by a browser must be packaged in the folder\n+        // specified in <generatedSourcesDirectory>\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.js\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.map\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.java\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs/example/stjs-lib-example.js\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.js\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.map\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.java\");\n+        assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.js\");\n+        assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.map\");\n+        assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.java\");\n+        assertNotContainsEntry(entryNames, \"stjs/example/stjs-lib-example.js\");\n+        assertNotContainsEntry(entryNames, \"DefaultPackageExample.js\");\n+        assertNotContainsEntry(entryNames, \"DefaultPackageExample.map\");\n+        assertNotContainsEntry(entryNames, \"DefaultPackageExample.java\");\n+\n+        // Class files must be packaged at the root of the web jar\n+        assertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.class\");\n+        assertContainsEntry(entryNames, \"DefaultPackageExample.class\");\n+        assertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.class\");\n+        assertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.class\");\n+\n+        // the .stjs properties files must be in both places (classpath and webjar path), so that we can easily do bidirectional mapping between\n+        // .js and .class file locations\n+        assertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n+        assertContainsEntry(entryNames, \"DefaultPackageExample.stjs\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n+        assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.stjs\");\n+\n+        // stjs.js should not be included in a webjar (it is declared as a dependency instead)\n+        assertNotContainsEntry(entryNames, \"stjs.js\");\n+        assertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs.js\");\n+\n+        verifier.resetStreams();\n+    }\n+\n+    private static void assertContainsEntry(Set<String> entries, String entry) {\n+        assertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n+    }\n+\n+    private static void assertNotContainsEntry(Set<String> entries, String entry) {\n+        assertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n+    }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/3/STJSPackageWebJarTest.java\nindex 43bff26c102..f1bb6853177 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/3/STJSPackageWebJarTest.java\n@@ -77,7 +77,7 @@ public class STJSPackageWebJarTest {\n \t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n \t}\n \n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n+\tprivate static void assertNotContainsEntry(Set<String> entries, String entry) {\n \t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/3/STJSPackageWebJarTest.java\nindex 43bff26c102..12608c40ff9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/3/STJSPackageWebJarTest.java\n@@ -2,12 +2,11 @@ package org.stjs;\n \n import java.io.File;\n import java.util.Set;\n-\n import org.apache.maven.it.Verifier;\n import org.apache.maven.it.util.ResourceExtractor;\n import org.junit.Test;\n-\n import static org.junit.Assert.assertFalse;\n+\n import static org.junit.Assert.assertTrue;\n \n /**\n@@ -15,69 +14,70 @@ import static org.junit.Assert.assertTrue;\n  *\n  * @author acraciun\n  */\n-public class STJSPackageWebJarTest {\n-\n-\t@SuppressWarnings(\"unchecked\")\n-\t@Test\n-\tpublic void testPackageIt() throws Exception {\n-\n-\t\tFile testDir = ResourceExtractor.simpleExtractResources(getClass(), \"/package-js-webjar\");\n-\n-\t\tVerifier verifier = new Verifier(testDir.getAbsolutePath());\n-\t\tverifier.deleteArtifact(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n-\n-\t\t// coming from the configuration of surefire plugin outside\n-\t\tverifier.getCliOptions().add(\"-Dstjs.version=\" + System.getProperty(\"stjs.version\"));\n \n-\t\tverifier.executeGoal(\"install\");\n \n-\t\tverifier.verifyErrorFreeLog();\n-\n-\t\tString artifactFile = verifier.getArtifactPath(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n-\t\tSet<String> entryNames = JarUtils.getJarEntries(artifactFile);\n-\n-\t\t// all resources that must be loaded by a browser must be packaged in the folder\n-\t\t// specified in <generatedSourcesDirectory>\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.map\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.java\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs/example/stjs-lib-example.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.js\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.map\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.java\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.js\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.map\");\n-\t\tassertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.java\");\n-\t\tassertNotContainsEntry(entryNames, \"stjs/example/stjs-lib-example.js\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.js\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.map\");\n-\t\tassertNotContainsEntry(entryNames, \"DefaultPackageExample.java\");\n-\n-\t\t// Class files must be packaged at the root of the web jar\n-\t\tassertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.class\");\n-\t\tassertContainsEntry(entryNames, \"DefaultPackageExample.class\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.class\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.class\");\n-\n-\t\t// the .stjs properties files must be in both places (classpath and webjar path), so that we can easily do bidirectional mapping between\n-\t\t// .js and .class file locations\n-\t\tassertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"DefaultPackageExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n-\t\tassertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.stjs\");\n-\n-\t\t// stjs.js should not be included in a webjar (it is declared as a dependency instead)\n-\t\tassertNotContainsEntry(entryNames, \"stjs.js\");\n-\t\tassertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs.js\");\n-\n-\t\tverifier.resetStreams();\n-\t}\n-\n-\tprivate static void assertContainsEntry(Set<String> entries, String entry) {\n-\t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n-\t}\n+public class STJSPackageWebJarTest {\n \n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n-\t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n-\t}\n-}\n+ @SuppressWarnings(\"unchecked\")\n+ @Test\n+ public void testPackageIt() throws Exception {\n+  File testDir = ResourceExtractor.simpleExtractResources(getClass(), \"/package-js-webjar\");\n+  Verifier verifier = new Verifier(testDir.getAbsolutePath());\n+  verifier.deleteArtifact(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n+\n+  // coming from the configuration of surefire plugin outside\n+  verifier.getCliOptions().add(\"-Dstjs.version=\" + System.getProperty(\"stjs.version\"));\n+  verifier.executeGoal(\"install\");\n+  verifier.verifyErrorFreeLog();\n+  String artifactFile = verifier.getArtifactPath(\"org.st-js\", \"package-js-webjar\", \"1.0.0-SNAPSHOT\", \"jar\");\n+  Set<String> entryNames = JarUtils.getJarEntries(artifactFile);\n+\n+  // all resources that must be loaded by a browser must be packaged in the folder\n+  // specified in <generatedSourcesDirectory>\n+  assertContainsEntry(entryNames,\n+\"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.js\");\n+  assertContainsEntry(entryNames,\n+\"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.map\");\n+  assertContainsEntry(entryNames,\n+\"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.java\");\n+  assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs/example/stjs-lib-example.js\");\n+  assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.js\");\n+  assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.map\");\n+  assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.java\");\n+  assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.js\");\n+  assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.map\");\n+  assertNotContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.java\");\n+  assertNotContainsEntry(entryNames, \"stjs/example/stjs-lib-example.js\");\n+  assertNotContainsEntry(entryNames, \"DefaultPackageExample.js\");\n+  assertNotContainsEntry(entryNames, \"DefaultPackageExample.map\");\n+  assertNotContainsEntry(entryNames, \"DefaultPackageExample.java\");\n+\n+  // Class files must be packaged at the root of the web jar\n+  assertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.class\");\n+  assertContainsEntry(entryNames, \"DefaultPackageExample.class\");\n+  assertNotContainsEntry(entryNames,\n+\"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.class\");\n+  assertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.class\");\n+\n+  // the .stjs properties files must be in both places (classpath and webjar path), so that we can easily do bidirectional mapping between\n+  // .js and .class file locations\n+  assertContainsEntry(entryNames, \"org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n+  assertContainsEntry(entryNames, \"DefaultPackageExample.stjs\");\n+  assertContainsEntry(entryNames,\n+\"META-INF/resources/webjar/package-js-webjar/org/stjs/example/lib/stjs/STJSLibExample.stjs\");\n+  assertContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/DefaultPackageExample.stjs\");\n+\n+  // stjs.js should not be included in a webjar (it is declared as a dependency instead)\n+  assertNotContainsEntry(entryNames, \"stjs.js\");\n+  assertNotContainsEntry(entryNames, \"META-INF/resources/webjar/package-js-webjar/stjs.js\");\n+  verifier.resetStreams();\n+ }\n+\n+ private static void assertContainsEntry(Set<String> entries, String entry) {\n+  assertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n+ }\n+\n+ private static void assertNotContainsEntry(Set<String> entries, String entry) {\n+  assertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 125
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/3/STJSPackageWebJarTest.java\nindex 43bff26c102..76d791c7d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/3/STJSPackageWebJarTest.java\n@@ -77,7 +77,7 @@ public class STJSPackageWebJarTest {\n \t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n \t}\n \n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n+\tprivate static void assertNotContainsEntry(Set<String> entries, String entry) {\n \t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n \t}\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/3/STJSPackageWebJarTest.java\nindex 43bff26c102..76d791c7d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/3/STJSPackageWebJarTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/3/STJSPackageWebJarTest.java\n@@ -77,7 +77,7 @@ public class STJSPackageWebJarTest {\n \t\tassertTrue(\"The set \" + entries + \" should contain entry: \" + entry, entries.contains(entry));\n \t}\n \n-\tprivate static void assertNotContainsEntry(Set<String> entries, String entry){\n+\tprivate static void assertNotContainsEntry(Set<String> entries, String entry) {\n \t\tassertFalse(\"The set \" + entries + \" should not contain entry: \" + entry, entries.contains(entry));\n \t}\n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "68",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    if (getPort() == 0) {\n      LOGGER.warn(\n          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n      return;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/68/RestServletInitializer.java\nindex 974b84c6568..3e9afe738e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/68/RestServletInitializer.java\n@@ -47,9 +47,8 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   @Override\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n-      LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+      LOGGER.warn(\"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n+  return;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/68/RestServletInitializer.java\nindex 974b84c6568..67380d1ca49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/68/RestServletInitializer.java\n@@ -66,4 +66,4 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n       throw new ServletException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "column": "134",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "51",
                    "column": "134",
                    "severity": "warning",
                    "message": "'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/68/RestServletInitializer.java\nindex 974b84c6568..37521147729 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/68/RestServletInitializer.java\n@@ -48,8 +48,7 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n       LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");return;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/68/RestServletInitializer.java\nindex 974b84c6568..3e9afe738e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/68/RestServletInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/68/RestServletInitializer.java\n@@ -47,9 +47,8 @@ public class RestServletInitializer extends AbstractConfigurableEmbeddedServletC\n   @Override\n   public void onStartup(ServletContext servletContext) throws ServletException {\n     if (getPort() == 0) {\n-      LOGGER.warn(\n-          \"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n-      return;\n+      LOGGER.warn(\"spring boot embed web container listen port is 0, serviceComb will not use container's port to handler RESTful request.\");\n+  return;\n     }\n \n     // web container did not did listen now.\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
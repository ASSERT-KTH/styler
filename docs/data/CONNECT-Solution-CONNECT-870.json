{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "870",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n\nimport gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\nimport gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistribution_g1;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..1e089eb7f01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/870/AdminDistribution20WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n \n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..e8da61d9dc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/870/AdminDistribution20WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n \n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\n@@ -42,184 +43,190 @@ import org.springframework.stereotype.Service;\n @Service\n public class AdminDistribution20WebServices extends AbstractAdminDistributionWebServicesMXBean {\n \n-    /** The Constant NHIN_AD_BEAN_NAME. */\n-    private static final String NHIN_AD_BEAN_NAME = \"NhinAdministrativeDistributionBean_g1\";\n-\n-    /** The Constant ENTITY_UNSECURED_AD_BEAN_NAME. */\n-    private static final String ENTITY_UNSECURED_AD_BEAN_NAME = \"EntityAdministrativeDistributionBean_g1\";\n-\n-    /** The Constant ENTITY_SECURED_AD_BEAN_NAME. */\n-    private static final String ENTITY_SECURED_AD_BEAN_NAME = \"EntityAdministrativeDistributionSecuredBean_g1\";\n-\n-    private final serviceEnum serviceName = serviceEnum.AdminDistribution;\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n-     */\n-    @Override\n-    public boolean isInboundPassthru() {\n-        boolean isPassthru = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n-        if (compareClassName(inboundAD, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n-     */\n-    @Override\n-    public boolean isOutboundPassthru() {\n-        boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n-        if (compareClassName(outboundAD, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n+  /**\n+   * The Constant NHIN_AD_BEAN_NAME.\n+   */\n+  private static final String NHIN_AD_BEAN_NAME = \"NhinAdministrativeDistributionBean_g1\";\n+\n+  /**\n+   * The Constant ENTITY_UNSECURED_AD_BEAN_NAME.\n+   */\n+  private static final String ENTITY_UNSECURED_AD_BEAN_NAME = \"EntityAdministrativeDistributionBean_g1\";\n+\n+  /**\n+   * The Constant ENTITY_SECURED_AD_BEAN_NAME.\n+   */\n+  private static final String ENTITY_SECURED_AD_BEAN_NAME = \"EntityAdministrativeDistributionSecuredBean_g1\";\n+\n+  private final serviceEnum serviceName = serviceEnum.AdminDistribution;\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n+   */\n+  @Override\n+  public boolean isInboundPassthru() {\n+    boolean isPassthru = false;\n+    NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n+        getNhinBeanName());\n+    InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n+    if (compareClassName(inboundAD, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n-     */\n-    @Override\n-    protected String getNhinBeanName() {\n-        return NHIN_AD_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntityUnsecuredBeanName() {\n-        return ENTITY_UNSECURED_AD_BEAN_NAME;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n+   */\n+  @Override\n+  public boolean isOutboundPassthru() {\n+    boolean isPassthru = false;\n+    EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n+        getEntityUnsecuredBeanName());\n+    OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n+    if (compareClassName(outboundAD, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntitySecuredBeanName() {\n-        return ENTITY_SECURED_AD_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getStandardInboundBeanName());\n-\n-        nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n-\n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getStandardOutboundBeanName());\n-\n-        entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n-        entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n+   */\n+  @Override\n+  protected String getNhinBeanName() {\n+    return NHIN_AD_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntityUnsecuredBeanName() {\n+    return ENTITY_UNSECURED_AD_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntitySecuredBeanName() {\n+    return ENTITY_SECURED_AD_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundStdImpl()\n+      throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+    NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n+        getNhinBeanName());\n+    InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n+        getStandardInboundBeanName());\n+\n+    nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundStdImpl()\n+      throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+    EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n+        getEntityUnsecuredBeanName());\n+    EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n+        EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+\n+    OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n+        getStandardOutboundBeanName());\n+\n+    entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+    entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+  }\n+\n+  @Override\n+  public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+    NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n+        getNhinBeanName());\n+    InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n+        getPassthroughInboundBeanName());\n+\n+    nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundPtImpl()\n+      throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+    EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n+        getEntityUnsecuredBeanName());\n+    EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n+        EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+\n+    OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n+        getPassthroughOutboundBeanName());\n+\n+    entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+    entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+  }\n+\n+  @Override\n+  public serviceEnum getServiceName() {\n+    return serviceName;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n+   */\n+  @Override\n+  public boolean isOutboundStandard() {\n+    boolean isPassthru = false;\n+    EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n+        getEntityUnsecuredBeanName());\n+    OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n+    if (compareClassName(outboundAD, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundPtImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n-\n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getPassthroughOutboundBeanName());\n-\n-        entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n-        entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n-    }\n-\n-    @Override\n-    public serviceEnum getServiceName() {\n-        return serviceName;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n-     */\n-    @Override\n-    public boolean isOutboundStandard() {\n-        boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n-        if (compareClassName(outboundAD, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n-     */\n-    @Override\n-    public boolean isInboundStandard() {\n-        boolean isStandard = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n-        if (compareClassName(inboundAD, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n+   */\n+  @Override\n+  public boolean isInboundStandard() {\n+    boolean isStandard = false;\n+    NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n+        getNhinBeanName());\n+    InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n+    if (compareClassName(inboundAD, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n+    return isStandard;\n+  }\n \n }\n",
            "diff_size": 250
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..4faeb776e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/870/AdminDistribution20WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n \n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\n@@ -61,9 +62,9 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n     @Override\n     public boolean isInboundPassthru() {\n         boolean isPassthru = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n+\n+InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n         if (compareClassName(inboundAD, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -78,9 +79,9 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n+        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n+\n+OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n         if (compareClassName(outboundAD, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -123,14 +124,11 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getStandardInboundBeanName());\n-\n-        nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n+\n+InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class, getStandardInboundBeanName());\n+nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n     }\n \n     /*\n@@ -139,28 +137,22 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n \n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getStandardOutboundBeanName());\n+EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n \n-        entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class, getStandardOutboundBeanName());\n+entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n         entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n     }\n \n     @Override\n     public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getPassthroughInboundBeanName());\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n \n-        nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n+InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class, getPassthroughInboundBeanName());\n+nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n     }\n \n     /*\n@@ -169,17 +161,13 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundPtImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n \n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getPassthroughOutboundBeanName());\n+EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n \n-        entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n+OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class, getPassthroughOutboundBeanName());\n+entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n         entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n     }\n \n@@ -196,9 +184,9 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n+        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n+\n+OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n         if (compareClassName(outboundAD, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -213,13 +201,13 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n     @Override\n     public boolean isInboundStandard() {\n         boolean isStandard = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n+\n+InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n         if (compareClassName(inboundAD, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n         return isStandard;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..ee457ffd70f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/870/AdminDistribution20WebServices.java\n@@ -39,10 +39,14 @@ import org.springframework.stereotype.Service;\n  *\n  * @author msw\n  */\n+\n+\n @Service\n-public class AdminDistribution20WebServices extends AbstractAdminDistributionWebServicesMXBean {\n+public class AdminDistribution20WebServices extends\n+    AbstractAdminDistributionWebServicesMXBean {\n \n     /** The Constant NHIN_AD_BEAN_NAME. */\n+\n     private static final String NHIN_AD_BEAN_NAME = \"NhinAdministrativeDistributionBean_g1\";\n \n     /** The Constant ENTITY_UNSECURED_AD_BEAN_NAME. */\n@@ -50,7 +54,6 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n \n     /** The Constant ENTITY_SECURED_AD_BEAN_NAME. */\n     private static final String ENTITY_SECURED_AD_BEAN_NAME = \"EntityAdministrativeDistributionSecuredBean_g1\";\n-\n     private final serviceEnum serviceName = serviceEnum.AdminDistribution;\n \n     /*\n@@ -58,11 +61,12 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isInboundPassthru() {\n         boolean isPassthru = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n         InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n         if (compareClassName(inboundAD, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -75,11 +79,12 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n+        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n         OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n         if (compareClassName(outboundAD, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -92,6 +97,8 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n      */\n+\n+\n     @Override\n     protected String getNhinBeanName() {\n         return NHIN_AD_BEAN_NAME;\n@@ -102,6 +109,8 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntityUnsecuredBeanName() {\n         return ENTITY_UNSECURED_AD_BEAN_NAME;\n@@ -112,6 +121,8 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntitySecuredBeanName() {\n         return ENTITY_SECURED_AD_BEAN_NAME;\n@@ -122,14 +133,12 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureInboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getStandardInboundBeanName());\n \n+\n+    @Override\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n+        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class, getStandardInboundBeanName());\n         nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n     }\n \n@@ -138,28 +147,22 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundStdImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n \n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getStandardOutboundBeanName());\n \n+    @Override\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n+        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class, getStandardOutboundBeanName());\n         entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n         entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n     }\n \n+\n     @Override\n     public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n-        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class,\n-                getPassthroughInboundBeanName());\n-\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n+        InboundAdminDistribution inboundAdminDistribution = retrieveBean(InboundAdminDistribution.class, getPassthroughInboundBeanName());\n         nhinAD.setInboundAdminDistribution(inboundAdminDistribution);\n     }\n \n@@ -168,21 +171,18 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundPtImpl()\n-            throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n-        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n-        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(\n-                EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n \n-        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class,\n-                getPassthroughOutboundBeanName());\n \n+    @Override\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        EntityAdministrativeDistribution_g1 entityADUnsecured = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n+        EntityAdministrativeDistributionSecured_g1 entityADSecured = retrieveBean(EntityAdministrativeDistributionSecured_g1.class, getEntitySecuredBeanName());\n+        OutboundAdminDistribution outboundAdminDistribution = retrieveBean(OutboundAdminDistribution.class, getPassthroughOutboundBeanName());\n         entityADSecured.setOutboundAdminDistribution(outboundAdminDistribution);\n         entityADUnsecured.setOutboundAdminDistribution(outboundAdminDistribution);\n     }\n \n+\n     @Override\n     public serviceEnum getServiceName() {\n         return serviceName;\n@@ -193,11 +193,12 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isPassthru = false;\n-        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class,\n-                getEntityUnsecuredBeanName());\n+        EntityAdministrativeDistribution_g1 entityAD = retrieveBean(EntityAdministrativeDistribution_g1.class, getEntityUnsecuredBeanName());\n         OutboundAdminDistribution outboundAD = entityAD.getOutboundAdminDistribution();\n         if (compareClassName(outboundAD, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -210,11 +211,12 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isInboundStandard() {\n         boolean isStandard = false;\n-        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class,\n-                getNhinBeanName());\n+        NhinAdministrativeDistribution_g1 nhinAD = retrieveBean(NhinAdministrativeDistribution_g1.class, getNhinBeanName());\n         InboundAdminDistribution inboundAD = nhinAD.getInboundAdminDistribution();\n         if (compareClassName(inboundAD, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n@@ -222,4 +224,4 @@ public class AdminDistribution20WebServices extends AbstractAdminDistributionWeb\n         return isStandard;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..9ca1aca72e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/870/AdminDistribution20WebServices.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n-\n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistribution_g1;\n import gov.hhs.fha.nhinc.admindistribution._20.nhin.NhinAdministrativeDistribution_g1;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/870/AdminDistribution20WebServices.java\nindex d9ccba38f24..1e089eb7f01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/870/AdminDistribution20WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/870/AdminDistribution20WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.configuration.jmx;\n \n import gov.hhs.fha.nhinc.admindistribution._20.entity.EntityAdministrativeDistributionSecured_g1;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1225",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "186",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "334",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "482",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "507",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1225/RecordStorageEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1225/RecordStorageEngine.java\nindex bc0ff9e0a9b..1b28b6994a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1225/RecordStorageEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1225/RecordStorageEngine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storageengine.impl.recordstorage;\n \n import java.io.File;\n@@ -124,415 +125,411 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.REVERSE_REC\n \n public class RecordStorageEngine implements StorageEngine, Lifecycle\n {\n-    private static final boolean takePropertyReadLocks = FeatureToggles.flag(\n-            RecordStorageEngine.class, \"propertyReadLocks\", false );\n-\n-    private final StoreReadLayer storeLayer;\n-    private final IndexingService indexingService;\n-    private final NeoStores neoStores;\n-    private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n-    private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-    private final LabelTokenHolder labelTokenHolder;\n-    private final DatabaseHealth databaseHealth;\n-    private final IndexConfigStore indexConfigStore;\n-    private final SchemaCache schemaCache;\n-    private final IntegrityValidator integrityValidator;\n-    private final CacheAccessBackDoor cacheAccess;\n-    private final LabelScanStore labelScanStore;\n-    private final IndexProviderMap indexProviderMap;\n-    private final ExplicitIndexApplierLookup explicitIndexApplierLookup;\n-    private final SchemaState schemaState;\n-    private final SchemaStorage schemaStorage;\n-    private final ConstraintSemantics constraintSemantics;\n-    private final IdOrderingQueue explicitIndexTransactionOrdering;\n-    private final LockService lockService;\n-    private final WorkSync<Supplier<LabelScanWriter>,LabelUpdateWork> labelScanStoreSync;\n-    private final CommandReaderFactory commandReaderFactory;\n-    private final WorkSync<IndexingUpdateService,IndexUpdatesWork> indexUpdatesSync;\n-    private final IndexStoreView indexStoreView;\n-    private final ExplicitIndexProviderLookup explicitIndexProviderLookup;\n-    private final PropertyPhysicalToLogicalConverter indexUpdatesConverter;\n-    private final Supplier<StorageStatement> storeStatementSupplier;\n-    private final IdController idController;\n-    private final int denseNodeThreshold;\n-    private final int recordIdBatchSize;\n-\n-    public RecordStorageEngine(\n-            File storeDir,\n-            Config config,\n-            PageCache pageCache,\n-            FileSystemAbstraction fs,\n-            LogProvider logProvider,\n-            PropertyKeyTokenHolder propertyKeyTokenHolder,\n-            LabelTokenHolder labelTokens,\n-            RelationshipTypeTokenHolder relationshipTypeTokens,\n-            SchemaState schemaState,\n-            ConstraintSemantics constraintSemantics,\n-            JobScheduler scheduler,\n-            TokenNameLookup tokenNameLookup,\n-            LockService lockService,\n-            IndexProviderMap indexProviderMap,\n-            IndexingService.Monitor indexingServiceMonitor,\n-            DatabaseHealth databaseHealth,\n-            ExplicitIndexProviderLookup explicitIndexProviderLookup,\n-            IndexConfigStore indexConfigStore,\n-            IdOrderingQueue explicitIndexTransactionOrdering,\n-            IdGeneratorFactory idGeneratorFactory,\n-            IdController idController,\n-            Monitors monitors,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-            OperationalMode operationalMode,\n-            VersionContextSupplier versionContextSupplier )\n-    {\n-        this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n-        this.relationshipTypeTokenHolder = relationshipTypeTokens;\n-        this.labelTokenHolder = labelTokens;\n-        this.schemaState = schemaState;\n-        this.lockService = lockService;\n-        this.databaseHealth = databaseHealth;\n-        this.explicitIndexProviderLookup = explicitIndexProviderLookup;\n-        this.indexConfigStore = indexConfigStore;\n-        this.constraintSemantics = constraintSemantics;\n-        this.explicitIndexTransactionOrdering = explicitIndexTransactionOrdering;\n-\n-        this.idController = idController;\n-        StoreFactory factory = new StoreFactory( storeDir, config, idGeneratorFactory, pageCache, fs, logProvider,\n-                versionContextSupplier );\n-        neoStores = factory.openAllNeoStores( true );\n-\n-        try\n-        {\n-            indexUpdatesConverter = new PropertyPhysicalToLogicalConverter( neoStores.getPropertyStore() );\n-            schemaCache = new SchemaCache( constraintSemantics, Collections.emptyList() );\n-            schemaStorage = new SchemaStorage( neoStores.getSchemaStore() );\n-\n-            NeoStoreIndexStoreView neoStoreIndexStoreView = new NeoStoreIndexStoreView( lockService, neoStores );\n-            Boolean readOnly = config.get( GraphDatabaseSettings.read_only ) && operationalMode == OperationalMode.single;\n-            monitors.addMonitorListener( new LoggingMonitor( logProvider.getLog( NativeLabelScanStore.class ) ) );\n-            labelScanStore = new NativeLabelScanStore( pageCache, fs, storeDir, new FullLabelStream( neoStoreIndexStoreView ),\n-                    readOnly, monitors, recoveryCleanupWorkCollector );\n-\n-            indexStoreView = new DynamicIndexStoreView( neoStoreIndexStoreView, labelScanStore, lockService, neoStores, logProvider );\n-            this.indexProviderMap = indexProviderMap;\n-            indexingService = IndexingServiceFactory.createIndexingService( config, scheduler, this.indexProviderMap,\n-                    indexStoreView, tokenNameLookup,\n-                    Iterators.asList( new SchemaStorage( neoStores.getSchemaStore() ).indexesGetAll() ), logProvider,\n-                    indexingServiceMonitor, schemaState );\n-\n-            integrityValidator = new IntegrityValidator( neoStores, indexingService );\n-            cacheAccess = new BridgingCacheAccess( schemaCache, schemaState,\n-                    propertyKeyTokenHolder, relationshipTypeTokens, labelTokens );\n-\n-            storeStatementSupplier = storeStatementSupplier( neoStores );\n-            storeLayer = new StorageLayer(\n-                    propertyKeyTokenHolder, labelTokens, relationshipTypeTokens,\n-                    schemaStorage, neoStores, indexingService,\n-                    storeStatementSupplier, schemaCache );\n-\n-            explicitIndexApplierLookup = new ExplicitIndexApplierLookup.Direct( explicitIndexProviderLookup );\n-\n-            labelScanStoreSync = new WorkSync<>( labelScanStore::newWriter );\n-\n-            commandReaderFactory = new RecordStorageCommandReaderFactory();\n-            indexUpdatesSync = new WorkSync<>( indexingService );\n-\n-            denseNodeThreshold = config.get( GraphDatabaseSettings.dense_node_threshold );\n-            recordIdBatchSize = config.get( GraphDatabaseSettings.record_id_batch_size );\n-        }\n-        catch ( Throwable failure )\n-        {\n-            neoStores.close();\n-            throw failure;\n-        }\n-    }\n-\n-    private Supplier<StorageStatement> storeStatementSupplier( NeoStores neoStores )\n-    {\n-        Supplier<IndexReaderFactory> indexReaderFactory = () -> new IndexReaderFactory.Caching( indexingService );\n-        LockService lockService = takePropertyReadLocks ? this.lockService : NO_LOCK_SERVICE;\n-\n-        return () -> new StoreStatement( neoStores, indexReaderFactory, labelScanStore::newReader, lockService,\n-                allocateCommandCreationContext() );\n-    }\n-\n-    @Override\n-    public StoreReadLayer storeReadLayer()\n+  private static final boolean takePropertyReadLocks = FeatureToggles.flag(\n+      RecordStorageEngine.class, \"propertyReadLocks\", false);\n+\n+  private final StoreReadLayer storeLayer;\n+  private final IndexingService indexingService;\n+  private final NeoStores neoStores;\n+  private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+  private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+  private final LabelTokenHolder labelTokenHolder;\n+  private final DatabaseHealth databaseHealth;\n+  private final IndexConfigStore indexConfigStore;\n+  private final SchemaCache schemaCache;\n+  private final IntegrityValidator integrityValidator;\n+  private final CacheAccessBackDoor cacheAccess;\n+  private final LabelScanStore labelScanStore;\n+  private final IndexProviderMap indexProviderMap;\n+  private final ExplicitIndexApplierLookup explicitIndexApplierLookup;\n+  private final SchemaState schemaState;\n+  private final SchemaStorage schemaStorage;\n+  private final ConstraintSemantics constraintSemantics;\n+  private final IdOrderingQueue explicitIndexTransactionOrdering;\n+  private final LockService lockService;\n+  private final WorkSync<Supplier<LabelScanWriter>, LabelUpdateWork> labelScanStoreSync;\n+  private final CommandReaderFactory commandReaderFactory;\n+  private final WorkSync<IndexingUpdateService, IndexUpdatesWork> indexUpdatesSync;\n+  private final IndexStoreView indexStoreView;\n+  private final ExplicitIndexProviderLookup explicitIndexProviderLookup;\n+  private final PropertyPhysicalToLogicalConverter indexUpdatesConverter;\n+  private final Supplier<StorageStatement> storeStatementSupplier;\n+  private final IdController idController;\n+  private final int denseNodeThreshold;\n+  private final int recordIdBatchSize;\n+\n+  public RecordStorageEngine(\n+      File storeDir,\n+      Config config,\n+      PageCache pageCache,\n+      FileSystemAbstraction fs,\n+      LogProvider logProvider,\n+      PropertyKeyTokenHolder propertyKeyTokenHolder,\n+      LabelTokenHolder labelTokens,\n+      RelationshipTypeTokenHolder relationshipTypeTokens,\n+      SchemaState schemaState,\n+      ConstraintSemantics constraintSemantics,\n+      JobScheduler scheduler,\n+      TokenNameLookup tokenNameLookup,\n+      LockService lockService,\n+      IndexProviderMap indexProviderMap,\n+      IndexingService.Monitor indexingServiceMonitor,\n+      DatabaseHealth databaseHealth,\n+      ExplicitIndexProviderLookup explicitIndexProviderLookup,\n+      IndexConfigStore indexConfigStore,\n+      IdOrderingQueue explicitIndexTransactionOrdering,\n+      IdGeneratorFactory idGeneratorFactory,\n+      IdController idController,\n+      Monitors monitors,\n+      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+      OperationalMode operationalMode,\n+      VersionContextSupplier versionContextSupplier)\n+  {\n+    this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n+    this.relationshipTypeTokenHolder = relationshipTypeTokens;\n+    this.labelTokenHolder = labelTokens;\n+    this.schemaState = schemaState;\n+    this.lockService = lockService;\n+    this.databaseHealth = databaseHealth;\n+    this.explicitIndexProviderLookup = explicitIndexProviderLookup;\n+    this.indexConfigStore = indexConfigStore;\n+    this.constraintSemantics = constraintSemantics;\n+    this.explicitIndexTransactionOrdering = explicitIndexTransactionOrdering;\n+\n+    this.idController = idController;\n+    StoreFactory factory = new StoreFactory(storeDir, config, idGeneratorFactory, pageCache, fs, logProvider,\n+        versionContextSupplier);\n+    neoStores = factory.openAllNeoStores(true);\n+\n+    try\n     {\n-        return storeLayer;\n-    }\n-\n-    @Override\n-    public RecordStorageCommandCreationContext allocateCommandCreationContext()\n+      indexUpdatesConverter = new PropertyPhysicalToLogicalConverter(neoStores.getPropertyStore());\n+      schemaCache = new SchemaCache(constraintSemantics, Collections.emptyList());\n+      schemaStorage = new SchemaStorage(neoStores.getSchemaStore());\n+\n+      NeoStoreIndexStoreView neoStoreIndexStoreView = new NeoStoreIndexStoreView(lockService, neoStores);\n+      Boolean readOnly = config.get(GraphDatabaseSettings.read_only) && operationalMode == OperationalMode.single;\n+      monitors.addMonitorListener(new LoggingMonitor(logProvider.getLog(NativeLabelScanStore.class)));\n+      labelScanStore = new NativeLabelScanStore(pageCache, fs, storeDir, new FullLabelStream(neoStoreIndexStoreView),\n+          readOnly, monitors, recoveryCleanupWorkCollector);\n+\n+      indexStoreView = new DynamicIndexStoreView(neoStoreIndexStoreView, labelScanStore, lockService, neoStores, logProvider);\n+      this.indexProviderMap = indexProviderMap;\n+      indexingService = IndexingServiceFactory.createIndexingService(config, scheduler, this.indexProviderMap,\n+          indexStoreView, tokenNameLookup,\n+          Iterators.asList(new SchemaStorage(neoStores.getSchemaStore()).indexesGetAll()), logProvider,\n+          indexingServiceMonitor, schemaState);\n+\n+      integrityValidator = new IntegrityValidator(neoStores, indexingService);\n+      cacheAccess = new BridgingCacheAccess(schemaCache, schemaState,\n+          propertyKeyTokenHolder, relationshipTypeTokens, labelTokens);\n+\n+      storeStatementSupplier = storeStatementSupplier(neoStores);\n+      storeLayer = new StorageLayer(\n+          propertyKeyTokenHolder, labelTokens, relationshipTypeTokens,\n+          schemaStorage, neoStores, indexingService,\n+          storeStatementSupplier, schemaCache);\n+\n+      explicitIndexApplierLookup = new ExplicitIndexApplierLookup.Direct(explicitIndexProviderLookup);\n+\n+      labelScanStoreSync = new WorkSync<>(labelScanStore::newWriter);\n+\n+      commandReaderFactory = new RecordStorageCommandReaderFactory();\n+      indexUpdatesSync = new WorkSync<>(indexingService);\n+\n+      denseNodeThreshold = config.get(GraphDatabaseSettings.dense_node_threshold);\n+      recordIdBatchSize = config.get(GraphDatabaseSettings.record_id_batch_size);\n+    } catch (Throwable failure)\n     {\n-        return new RecordStorageCommandCreationContext( neoStores, denseNodeThreshold, recordIdBatchSize );\n+      neoStores.close();\n+      throw failure;\n     }\n-\n-    @Override\n-    public CommandReaderFactory commandReaderFactory()\n+  }\n+\n+  private Supplier<StorageStatement> storeStatementSupplier(NeoStores neoStores)\n+  {\n+    Supplier<IndexReaderFactory> indexReaderFactory = () -> new IndexReaderFactory.Caching(indexingService);\n+    LockService lockService = takePropertyReadLocks ? this.lockService : NO_LOCK_SERVICE;\n+\n+    return () -> new StoreStatement(neoStores, indexReaderFactory, labelScanStore::newReader, lockService,\n+        allocateCommandCreationContext());\n+  }\n+\n+  @Override\n+  public StoreReadLayer storeReadLayer()\n+  {\n+    return storeLayer;\n+  }\n+\n+  @Override\n+  public RecordStorageCommandCreationContext allocateCommandCreationContext()\n+  {\n+    return new RecordStorageCommandCreationContext(neoStores, denseNodeThreshold, recordIdBatchSize);\n+  }\n+\n+  @Override\n+  public CommandReaderFactory commandReaderFactory()\n+  {\n+    return commandReaderFactory;\n+  }\n+\n+  @SuppressWarnings(\"resource\")\n+  @Override\n+  public void createCommands(\n+      Collection<StorageCommand> commands,\n+      ReadableTransactionState txState,\n+      StorageStatement storageStatement,\n+      ResourceLocker locks,\n+      long lastTransactionIdWhenStarted)\n+      throws TransactionFailureException, CreateConstraintFailureException, ConstraintValidationException\n+  {\n+    if (txState != null)\n     {\n-        return commandReaderFactory;\n+      // We can make this cast here because we expected that the storageStatement passed in here comes from\n+      // this storage engine itself, anything else is considered a bug. And we do know the inner workings\n+      // of the storage statements that we create.\n+      RecordStorageCommandCreationContext creationContext =\n+          ((StoreStatement) storageStatement).getCommandCreationContext();\n+      TransactionRecordState recordState =\n+          creationContext.createTransactionRecordState(integrityValidator, lastTransactionIdWhenStarted, locks);\n+\n+      // Visit transaction state and populate these record state objects\n+      TxStateVisitor txStateVisitor = new TransactionToRecordStateVisitor(recordState, schemaState,\n+          schemaStorage, constraintSemantics, indexProviderMap);\n+      CountsRecordState countsRecordState = new CountsRecordState();\n+      txStateVisitor = constraintSemantics.decorateTxStateVisitor(\n+          storeLayer,\n+          txState,\n+          txStateVisitor);\n+      txStateVisitor = new TransactionCountingStateVisitor(\n+          txStateVisitor, storeLayer, storageStatement, txState, countsRecordState);\n+      try (TxStateVisitor visitor = txStateVisitor)\n+      {\n+        txState.accept(visitor);\n+      }\n+\n+      // Convert record state into commands\n+      recordState.extractCommands(commands);\n+      countsRecordState.extractCommands(commands);\n     }\n-\n-    @SuppressWarnings( \"resource\" )\n-    @Override\n-    public void createCommands(\n-            Collection<StorageCommand> commands,\n-            ReadableTransactionState txState,\n-            StorageStatement storageStatement,\n-            ResourceLocker locks,\n-            long lastTransactionIdWhenStarted )\n-            throws TransactionFailureException, CreateConstraintFailureException, ConstraintValidationException\n+  }\n+\n+  @Override\n+  public void apply(CommandsToApply batch, TransactionApplicationMode mode) throws Exception\n+  {\n+    // Have these command appliers as separate try-with-resource to have better control over\n+    // point between closing this and the locks above\n+    try (IndexActivator indexActivator = new IndexActivator(indexingService);\n+         LockGroup locks = new LockGroup();\n+         BatchTransactionApplier batchApplier = applier(mode, indexActivator))\n     {\n-        if ( txState != null )\n+      while (batch != null)\n+      {\n+        try (TransactionApplier txApplier = batchApplier.startTx(batch, locks))\n         {\n-            // We can make this cast here because we expected that the storageStatement passed in here comes from\n-            // this storage engine itself, anything else is considered a bug. And we do know the inner workings\n-            // of the storage statements that we create.\n-            RecordStorageCommandCreationContext creationContext =\n-                    ((StoreStatement) storageStatement).getCommandCreationContext();\n-            TransactionRecordState recordState =\n-                    creationContext.createTransactionRecordState( integrityValidator, lastTransactionIdWhenStarted, locks );\n-\n-            // Visit transaction state and populate these record state objects\n-            TxStateVisitor txStateVisitor = new TransactionToRecordStateVisitor( recordState, schemaState,\n-                    schemaStorage, constraintSemantics, indexProviderMap );\n-            CountsRecordState countsRecordState = new CountsRecordState();\n-            txStateVisitor = constraintSemantics.decorateTxStateVisitor(\n-                    storeLayer,\n-                    txState,\n-                    txStateVisitor );\n-            txStateVisitor = new TransactionCountingStateVisitor(\n-                    txStateVisitor, storeLayer, storageStatement, txState, countsRecordState );\n-            try ( TxStateVisitor visitor = txStateVisitor )\n-            {\n-                txState.accept( visitor );\n-            }\n-\n-            // Convert record state into commands\n-            recordState.extractCommands( commands );\n-            countsRecordState.extractCommands( commands );\n+          batch.accept(txApplier);\n         }\n-    }\n-\n-    @Override\n-    public void apply( CommandsToApply batch, TransactionApplicationMode mode ) throws Exception\n-    {\n-        // Have these command appliers as separate try-with-resource to have better control over\n-        // point between closing this and the locks above\n-        try ( IndexActivator indexActivator = new IndexActivator( indexingService );\n-              LockGroup locks = new LockGroup();\n-              BatchTransactionApplier batchApplier = applier( mode, indexActivator ) )\n-        {\n-            while ( batch != null )\n-            {\n-                try ( TransactionApplier txApplier = batchApplier.startTx( batch, locks ) )\n-                {\n-                    batch.accept( txApplier );\n-                }\n-                batch = batch.next();\n-            }\n-        }\n-        catch ( Throwable cause )\n-        {\n-            TransactionApplyKernelException kernelException =\n-                    new TransactionApplyKernelException( cause, \"Failed to apply transaction: %s\", batch );\n-            databaseHealth.panic( kernelException );\n-            throw kernelException;\n-        }\n-    }\n-\n-    /**\n-     * Creates a {@link BatchTransactionApplierFacade} that is to be used for all transactions\n-     * in a batch. Each transaction is handled by a {@link TransactionApplierFacade} which wraps the\n-     * individual {@link TransactionApplier}s returned by the wrapped {@link BatchTransactionApplier}s.\n-     *\n-     * After all transactions have been applied the appliers are closed.\n-     */\n-    protected BatchTransactionApplierFacade applier( TransactionApplicationMode mode, IndexActivator indexActivator )\n-    {\n-        ArrayList<BatchTransactionApplier> appliers = new ArrayList<>();\n-        // Graph store application. The order of the decorated store appliers is irrelevant\n-        appliers.add( new NeoStoreBatchTransactionApplier( mode.version(), neoStores, cacheAccess, lockService( mode ) ) );\n-        if ( mode.needsHighIdTracking() )\n-        {\n-            appliers.add( new HighIdBatchTransactionApplier( neoStores ) );\n-        }\n-        if ( mode.needsCacheInvalidationOnUpdates() )\n-        {\n-            appliers.add( new CacheInvalidationBatchTransactionApplier( neoStores, cacheAccess ) );\n-        }\n-        if ( mode.needsAuxiliaryStores() )\n-        {\n-            // Counts store application\n-            appliers.add( new CountsStoreBatchTransactionApplier( neoStores.getCounts(), mode ) );\n-\n-            // Schema index application\n-            appliers.add( new IndexBatchTransactionApplier( indexingService, labelScanStoreSync, indexUpdatesSync,\n-                    neoStores.getNodeStore(),\n-                    indexUpdatesConverter, indexActivator ) );\n-\n-            // Explicit index application\n-            appliers.add(\n-                    new ExplicitBatchIndexApplier( indexConfigStore, explicitIndexApplierLookup,\n-                            explicitIndexTransactionOrdering,\n-                            mode ) );\n-        }\n-\n-        // Perform the application\n-        return new BatchTransactionApplierFacade(\n-                appliers.toArray( new BatchTransactionApplier[appliers.size()] ) );\n-    }\n-\n-    private LockService lockService( TransactionApplicationMode mode )\n+        batch = batch.next();\n+      }\n+    } catch (Throwable cause)\n     {\n-        return mode == RECOVERY || mode == REVERSE_RECOVERY ? NO_LOCK_SERVICE : lockService;\n+      TransactionApplyKernelException kernelException =\n+          new TransactionApplyKernelException(cause, \"Failed to apply transaction: %s\", batch);\n+      databaseHealth.panic(kernelException);\n+      throw kernelException;\n     }\n-\n-    public void satisfyDependencies( DependencySatisfier satisfier )\n-    {\n-        satisfier.satisfyDependency( explicitIndexApplierLookup );\n-        satisfier.satisfyDependency( cacheAccess );\n-        satisfier.satisfyDependency( indexProviderMap );\n-        satisfier.satisfyDependency( integrityValidator );\n-        satisfier.satisfyDependency( labelScanStore );\n-        satisfier.satisfyDependency( indexingService );\n-        // providing TransactionIdStore, LogVersionRepository\n-        satisfier.satisfyDependency( neoStores.getMetaDataStore() );\n-        satisfier.satisfyDependency( indexStoreView );\n-    }\n-\n-    @Override\n-    public void init() throws Throwable\n-    {\n-        indexingService.init();\n-        labelScanStore.init();\n-    }\n-\n-    @Override\n-    public void start() throws Throwable\n-    {\n-        neoStores.makeStoreOk();\n-\n-        propertyKeyTokenHolder.setInitialTokens(\n-                neoStores.getPropertyKeyTokenStore().getTokens( Integer.MAX_VALUE ) );\n-        relationshipTypeTokenHolder.setInitialTokens(\n-                neoStores.getRelationshipTypeTokenStore().getTokens( Integer.MAX_VALUE ) );\n-        labelTokenHolder.setInitialTokens(\n-                neoStores.getLabelTokenStore().getTokens( Integer.MAX_VALUE ) );\n-\n-        neoStores.startCountStore(); // TODO: move this to counts store lifecycle\n-        loadSchemaCache();\n-        indexingService.start();\n-        labelScanStore.start();\n-        idController.start();\n-    }\n-\n-    @Override\n-    public void loadSchemaCache()\n+  }\n+\n+  /**\n+   * Creates a {@link BatchTransactionApplierFacade} that is to be used for all transactions\n+   * in a batch. Each transaction is handled by a {@link TransactionApplierFacade} which wraps the\n+   * individual {@link TransactionApplier}s returned by the wrapped {@link BatchTransactionApplier}s.\n+   * <p>\n+   * After all transactions have been applied the appliers are closed.\n+   */\n+  protected BatchTransactionApplierFacade applier(TransactionApplicationMode mode, IndexActivator indexActivator)\n+  {\n+    ArrayList<BatchTransactionApplier> appliers = new ArrayList<>();\n+    // Graph store application. The order of the decorated store appliers is irrelevant\n+    appliers.add(new NeoStoreBatchTransactionApplier(mode.version(), neoStores, cacheAccess, lockService(mode)));\n+    if (mode.needsHighIdTracking())\n     {\n-        List<SchemaRule> schemaRules = Iterators.asList( neoStores.getSchemaStore().loadAllSchemaRules() );\n-        schemaCache.load( schemaRules );\n+      appliers.add(new HighIdBatchTransactionApplier(neoStores));\n     }\n-\n-    @Override\n-    public void clearBufferedIds()\n+    if (mode.needsCacheInvalidationOnUpdates())\n     {\n-        idController.clear();\n+      appliers.add(new CacheInvalidationBatchTransactionApplier(neoStores, cacheAccess));\n     }\n-\n-    @Override\n-    public void stop() throws Throwable\n+    if (mode.needsAuxiliaryStores())\n     {\n-        indexingService.stop();\n-        labelScanStore.stop();\n-        idController.stop();\n+      // Counts store application\n+      appliers.add(new CountsStoreBatchTransactionApplier(neoStores.getCounts(), mode));\n+\n+      // Schema index application\n+      appliers.add(new IndexBatchTransactionApplier(indexingService, labelScanStoreSync, indexUpdatesSync,\n+          neoStores.getNodeStore(),\n+          indexUpdatesConverter, indexActivator));\n+\n+      // Explicit index application\n+      appliers.add(\n+          new ExplicitBatchIndexApplier(indexConfigStore, explicitIndexApplierLookup,\n+              explicitIndexTransactionOrdering,\n+              mode));\n     }\n \n-    @Override\n-    public void shutdown() throws Throwable\n+    // Perform the application\n+    return new BatchTransactionApplierFacade(\n+        appliers.toArray(new BatchTransactionApplier[appliers.size()]));\n+  }\n+\n+  private LockService lockService(TransactionApplicationMode mode)\n+  {\n+    return mode == RECOVERY || mode == REVERSE_RECOVERY ? NO_LOCK_SERVICE : lockService;\n+  }\n+\n+  public void satisfyDependencies(DependencySatisfier satisfier)\n+  {\n+    satisfier.satisfyDependency(explicitIndexApplierLookup);\n+    satisfier.satisfyDependency(cacheAccess);\n+    satisfier.satisfyDependency(indexProviderMap);\n+    satisfier.satisfyDependency(integrityValidator);\n+    satisfier.satisfyDependency(labelScanStore);\n+    satisfier.satisfyDependency(indexingService);\n+    // providing TransactionIdStore, LogVersionRepository\n+    satisfier.satisfyDependency(neoStores.getMetaDataStore());\n+    satisfier.satisfyDependency(indexStoreView);\n+  }\n+\n+  @Override\n+  public void init() throws Throwable\n+  {\n+    indexingService.init();\n+    labelScanStore.init();\n+  }\n+\n+  @Override\n+  public void start() throws Throwable\n+  {\n+    neoStores.makeStoreOk();\n+\n+    propertyKeyTokenHolder.setInitialTokens(\n+        neoStores.getPropertyKeyTokenStore().getTokens(Integer.MAX_VALUE));\n+    relationshipTypeTokenHolder.setInitialTokens(\n+        neoStores.getRelationshipTypeTokenStore().getTokens(Integer.MAX_VALUE));\n+    labelTokenHolder.setInitialTokens(\n+        neoStores.getLabelTokenStore().getTokens(Integer.MAX_VALUE));\n+\n+    neoStores.startCountStore(); // TODO: move this to counts store lifecycle\n+    loadSchemaCache();\n+    indexingService.start();\n+    labelScanStore.start();\n+    idController.start();\n+  }\n+\n+  @Override\n+  public void loadSchemaCache()\n+  {\n+    List<SchemaRule> schemaRules = Iterators.asList(neoStores.getSchemaStore().loadAllSchemaRules());\n+    schemaCache.load(schemaRules);\n+  }\n+\n+  @Override\n+  public void clearBufferedIds()\n+  {\n+    idController.clear();\n+  }\n+\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    indexingService.stop();\n+    labelScanStore.stop();\n+    idController.stop();\n+  }\n+\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    indexingService.shutdown();\n+    labelScanStore.shutdown();\n+    neoStores.close();\n+  }\n+\n+  @Override\n+  public void flushAndForce(IOLimiter limiter)\n+  {\n+    indexingService.forceAll(limiter);\n+    labelScanStore.force(limiter);\n+    for (IndexImplementation index : explicitIndexProviderLookup.all())\n     {\n-        indexingService.shutdown();\n-        labelScanStore.shutdown();\n-        neoStores.close();\n+      index.force();\n     }\n-\n-    @Override\n-    public void flushAndForce( IOLimiter limiter )\n+    neoStores.flush(limiter);\n+  }\n+\n+  @Override\n+  public void registerDiagnostics(DiagnosticsManager diagnosticsManager)\n+  {\n+    neoStores.registerDiagnostics(diagnosticsManager);\n+  }\n+\n+  @Override\n+  public void forceClose()\n+  {\n+    try\n     {\n-        indexingService.forceAll( limiter );\n-        labelScanStore.force( limiter );\n-        for ( IndexImplementation index : explicitIndexProviderLookup.all() )\n-        {\n-            index.force();\n-        }\n-        neoStores.flush( limiter );\n-    }\n-\n-    @Override\n-    public void registerDiagnostics( DiagnosticsManager diagnosticsManager )\n+      shutdown();\n+    } catch (Throwable e)\n     {\n-        neoStores.registerDiagnostics( diagnosticsManager );\n+      throw new RuntimeException(e);\n     }\n-\n-    @Override\n-    public void forceClose()\n+  }\n+\n+  @Override\n+  public void prepareForRecoveryRequired()\n+  {\n+    neoStores.deleteIdGenerators();\n+  }\n+\n+  @Override\n+  public Collection<StoreFileMetadata> listStorageFiles()\n+  {\n+    List<StoreFileMetadata> files = new ArrayList<>();\n+    for (StoreType type : StoreType.values())\n     {\n-        try\n-        {\n-            shutdown();\n-        }\n-        catch ( Throwable e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n-\n-    @Override\n-    public void prepareForRecoveryRequired()\n-    {\n-        neoStores.deleteIdGenerators();\n-    }\n-\n-    @Override\n-    public Collection<StoreFileMetadata> listStorageFiles()\n-    {\n-        List<StoreFileMetadata> files = new ArrayList<>();\n-        for ( StoreType type : StoreType.values() )\n-        {\n-            if ( type.equals( StoreType.COUNTS ) )\n-            {\n-                addCountStoreFiles( files );\n-            }\n-            else\n-            {\n-                final RecordStore<AbstractBaseRecord> recordStore = neoStores.getRecordStore( type );\n-                StoreFileMetadata metadata =\n-                        new StoreFileMetadata( recordStore.getStorageFileName(), recordStore.getRecordSize() );\n-                files.add( metadata );\n-            }\n-        }\n-        return files;\n-    }\n-\n-    private void addCountStoreFiles( List<StoreFileMetadata> files )\n-    {\n-        Iterable<File> countStoreFiles = neoStores.getCounts().allFiles();\n-        for ( File countStoreFile : countStoreFiles )\n-        {\n-            StoreFileMetadata countStoreFileMetadata = new StoreFileMetadata( countStoreFile,\n-                    RecordFormat.NO_RECORD_SIZE );\n-            files.add( countStoreFileMetadata );\n-        }\n+      if (type.equals(StoreType.COUNTS))\n+      {\n+        addCountStoreFiles(files);\n+      } else\n+      {\n+        final RecordStore<AbstractBaseRecord> recordStore = neoStores.getRecordStore(type);\n+        StoreFileMetadata metadata =\n+            new StoreFileMetadata(recordStore.getStorageFileName(), recordStore.getRecordSize());\n+        files.add(metadata);\n+      }\n     }\n+    return files;\n+  }\n \n-    /**\n-     * @return the underlying {@link NeoStores} which should <strong>ONLY</strong> be accessed by tests\n-     * until all tests are properly converted to not rely on access to {@link NeoStores}. Currently there\n-     * are important tests which asserts details about the neo stores that are very important to test,\n-     * but to convert all those tests might be a bigger piece of work.\n-     */\n-    public NeoStores testAccessNeoStores()\n+  private void addCountStoreFiles(List<StoreFileMetadata> files)\n+  {\n+    Iterable<File> countStoreFiles = neoStores.getCounts().allFiles();\n+    for (File countStoreFile : countStoreFiles)\n     {\n-        return neoStores;\n+      StoreFileMetadata countStoreFileMetadata = new StoreFileMetadata(countStoreFile,\n+          RecordFormat.NO_RECORD_SIZE);\n+      files.add(countStoreFileMetadata);\n     }\n+  }\n+\n+  /**\n+   * @return the underlying {@link NeoStores} which should <strong>ONLY</strong> be accessed by tests\n+   * until all tests are properly converted to not rely on access to {@link NeoStores}. Currently there\n+   * are important tests which asserts details about the neo stores that are very important to test,\n+   * but to convert all those tests might be a bigger piece of work.\n+   */\n+  public NeoStores testAccessNeoStores()\n+  {\n+    return neoStores;\n+  }\n }\n",
            "diff_size": 613
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1225/RecordStorageEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1225/RecordStorageEngine.java\nindex bc0ff9e0a9b..5eeb07a12d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1225/RecordStorageEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1225/RecordStorageEngine.java\n@@ -124,10 +124,8 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.REVERSE_REC\n \n public class RecordStorageEngine implements StorageEngine, Lifecycle\n {\n-    private static final boolean takePropertyReadLocks = FeatureToggles.flag(\n-            RecordStorageEngine.class, \"propertyReadLocks\", false );\n-\n-    private final StoreReadLayer storeLayer;\n+    private static final boolean takePropertyReadLocks = FeatureToggles.flag( RecordStorageEngine.class, \"propertyReadLocks\", false );\n+private final StoreReadLayer storeLayer;\n     private final IndexingService indexingService;\n     private final NeoStores neoStores;\n     private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n@@ -157,8 +155,7 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n     private final int denseNodeThreshold;\n     private final int recordIdBatchSize;\n \n-    public RecordStorageEngine(\n-            File storeDir,\n+    public RecordStorageEngine( File storeDir,\n             Config config,\n             PageCache pageCache,\n             FileSystemAbstraction fs,\n@@ -194,49 +191,36 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n         this.indexConfigStore = indexConfigStore;\n         this.constraintSemantics = constraintSemantics;\n         this.explicitIndexTransactionOrdering = explicitIndexTransactionOrdering;\n-\n-        this.idController = idController;\n+this.idController = idController;\n         StoreFactory factory = new StoreFactory( storeDir, config, idGeneratorFactory, pageCache, fs, logProvider,\n                 versionContextSupplier );\n-        neoStores = factory.openAllNeoStores( true );\n+neoStores = factory.openAllNeoStores( true );\n \n         try\n         {\n             indexUpdatesConverter = new PropertyPhysicalToLogicalConverter( neoStores.getPropertyStore() );\n             schemaCache = new SchemaCache( constraintSemantics, Collections.emptyList() );\n             schemaStorage = new SchemaStorage( neoStores.getSchemaStore() );\n-\n-            NeoStoreIndexStoreView neoStoreIndexStoreView = new NeoStoreIndexStoreView( lockService, neoStores );\n+NeoStoreIndexStoreView neoStoreIndexStoreView = new NeoStoreIndexStoreView( lockService, neoStores );\n             Boolean readOnly = config.get( GraphDatabaseSettings.read_only ) && operationalMode == OperationalMode.single;\n             monitors.addMonitorListener( new LoggingMonitor( logProvider.getLog( NativeLabelScanStore.class ) ) );\n             labelScanStore = new NativeLabelScanStore( pageCache, fs, storeDir, new FullLabelStream( neoStoreIndexStoreView ),\n                     readOnly, monitors, recoveryCleanupWorkCollector );\n-\n-            indexStoreView = new DynamicIndexStoreView( neoStoreIndexStoreView, labelScanStore, lockService, neoStores, logProvider );\n+indexStoreView = new DynamicIndexStoreView( neoStoreIndexStoreView, labelScanStore, lockService, neoStores, logProvider );\n             this.indexProviderMap = indexProviderMap;\n             indexingService = IndexingServiceFactory.createIndexingService( config, scheduler, this.indexProviderMap,\n                     indexStoreView, tokenNameLookup,\n-                    Iterators.asList( new SchemaStorage( neoStores.getSchemaStore() ).indexesGetAll() ), logProvider,\n-                    indexingServiceMonitor, schemaState );\n-\n-            integrityValidator = new IntegrityValidator( neoStores, indexingService );\n+                    Iterators.asList( new SchemaStorage( neoStores.getSchemaStore() ).indexesGetAll() ), logProvider, indexingServiceMonitor, schemaState );\n+integrityValidator = new IntegrityValidator( neoStores, indexingService );\n             cacheAccess = new BridgingCacheAccess( schemaCache, schemaState,\n                     propertyKeyTokenHolder, relationshipTypeTokens, labelTokens );\n-\n-            storeStatementSupplier = storeStatementSupplier( neoStores );\n-            storeLayer = new StorageLayer(\n-                    propertyKeyTokenHolder, labelTokens, relationshipTypeTokens,\n-                    schemaStorage, neoStores, indexingService,\n-                    storeStatementSupplier, schemaCache );\n-\n-            explicitIndexApplierLookup = new ExplicitIndexApplierLookup.Direct( explicitIndexProviderLookup );\n-\n-            labelScanStoreSync = new WorkSync<>( labelScanStore::newWriter );\n-\n-            commandReaderFactory = new RecordStorageCommandReaderFactory();\n+storeStatementSupplier = storeStatementSupplier( neoStores );\n+            storeLayer = new StorageLayer( propertyKeyTokenHolder, labelTokens, relationshipTypeTokens, schemaStorage, neoStores, indexingService, storeStatementSupplier, schemaCache );\n+explicitIndexApplierLookup = new ExplicitIndexApplierLookup.Direct( explicitIndexProviderLookup );\n+labelScanStoreSync = new WorkSync<>( labelScanStore::newWriter );\n+commandReaderFactory = new RecordStorageCommandReaderFactory();\n             indexUpdatesSync = new WorkSync<>( indexingService );\n-\n-            denseNodeThreshold = config.get( GraphDatabaseSettings.dense_node_threshold );\n+denseNodeThreshold = config.get( GraphDatabaseSettings.dense_node_threshold );\n             recordIdBatchSize = config.get( GraphDatabaseSettings.record_id_batch_size );\n         }\n         catch ( Throwable failure )\n@@ -275,35 +259,27 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n \n     @SuppressWarnings( \"resource\" )\n     @Override\n-    public void createCommands(\n-            Collection<StorageCommand> commands,\n+    public void createCommands( Collection<StorageCommand> commands,\n             ReadableTransactionState txState,\n             StorageStatement storageStatement,\n             ResourceLocker locks,\n-            long lastTransactionIdWhenStarted )\n-            throws TransactionFailureException, CreateConstraintFailureException, ConstraintValidationException\n-    {\n+            long lastTransactionIdWhenStarted ) throws TransactionFailureException, CreateConstraintFailureException, ConstraintValidationException\n+{\n         if ( txState != null )\n         {\n             // We can make this cast here because we expected that the storageStatement passed in here comes from\n             // this storage engine itself, anything else is considered a bug. And we do know the inner workings\n             // of the storage statements that we create.\n-            RecordStorageCommandCreationContext creationContext =\n-                    ((StoreStatement) storageStatement).getCommandCreationContext();\n-            TransactionRecordState recordState =\n-                    creationContext.createTransactionRecordState( integrityValidator, lastTransactionIdWhenStarted, locks );\n-\n-            // Visit transaction state and populate these record state objects\n+            RecordStorageCommandCreationContext creationContext = ((StoreStatement) storageStatement).getCommandCreationContext();\n+TransactionRecordState recordState = creationContext.createTransactionRecordState( integrityValidator, lastTransactionIdWhenStarted, locks );\n+    // Visit transaction state and populate these record state objects\n             TxStateVisitor txStateVisitor = new TransactionToRecordStateVisitor( recordState, schemaState,\n                     schemaStorage, constraintSemantics, indexProviderMap );\n-            CountsRecordState countsRecordState = new CountsRecordState();\n-            txStateVisitor = constraintSemantics.decorateTxStateVisitor(\n-                    storeLayer,\n-                    txState,\n-                    txStateVisitor );\n-            txStateVisitor = new TransactionCountingStateVisitor(\n-                    txStateVisitor, storeLayer, storageStatement, txState, countsRecordState );\n-            try ( TxStateVisitor visitor = txStateVisitor )\n+CountsRecordState countsRecordState = new CountsRecordState();\n+            txStateVisitor = constraintSemantics.decorateTxStateVisitor( storeLayer, txState, txStateVisitor );\n+txStateVisitor = new TransactionCountingStateVisitor( txStateVisitor, storeLayer, storageStatement, txState, countsRecordState );\n+\n+try ( TxStateVisitor visitor = txStateVisitor )\n             {\n                 txState.accept( visitor );\n             }\n@@ -320,23 +296,23 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n         // Have these command appliers as separate try-with-resource to have better control over\n         // point between closing this and the locks above\n         try ( IndexActivator indexActivator = new IndexActivator( indexingService );\n-              LockGroup locks = new LockGroup();\n+LockGroup locks = new LockGroup();\n               BatchTransactionApplier batchApplier = applier( mode, indexActivator ) )\n-        {\n+{\n             while ( batch != null )\n             {\n                 try ( TransactionApplier txApplier = batchApplier.startTx( batch, locks ) )\n                 {\n                     batch.accept( txApplier );\n                 }\n-                batch = batch.next();\n+\n+batch = batch.next();\n             }\n         }\n         catch ( Throwable cause )\n         {\n-            TransactionApplyKernelException kernelException =\n-                    new TransactionApplyKernelException( cause, \"Failed to apply transaction: %s\", batch );\n-            databaseHealth.panic( kernelException );\n+            TransactionApplyKernelException kernelException = new TransactionApplyKernelException( cause, \"Failed to apply transaction: %s\", batch );\n+databaseHealth.panic( kernelException );\n             throw kernelException;\n         }\n     }\n@@ -357,30 +333,27 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n         {\n             appliers.add( new HighIdBatchTransactionApplier( neoStores ) );\n         }\n-        if ( mode.needsCacheInvalidationOnUpdates() )\n+\n+if ( mode.needsCacheInvalidationOnUpdates() )\n         {\n             appliers.add( new CacheInvalidationBatchTransactionApplier( neoStores, cacheAccess ) );\n         }\n-        if ( mode.needsAuxiliaryStores() )\n+\n+if ( mode.needsAuxiliaryStores() )\n         {\n             // Counts store application\n             appliers.add( new CountsStoreBatchTransactionApplier( neoStores.getCounts(), mode ) );\n \n             // Schema index application\n             appliers.add( new IndexBatchTransactionApplier( indexingService, labelScanStoreSync, indexUpdatesSync,\n-                    neoStores.getNodeStore(),\n-                    indexUpdatesConverter, indexActivator ) );\n-\n-            // Explicit index application\n-            appliers.add(\n-                    new ExplicitBatchIndexApplier( indexConfigStore, explicitIndexApplierLookup,\n-                            explicitIndexTransactionOrdering,\n-                            mode ) );\n-        }\n+                    neoStores.getNodeStore(), indexUpdatesConverter, indexActivator ) );\n+    // Explicit index application\n+            appliers.add( new ExplicitBatchIndexApplier( indexConfigStore, explicitIndexApplierLookup,\n+                            explicitIndexTransactionOrdering, mode ) );\n+    }\n \n         // Perform the application\n-        return new BatchTransactionApplierFacade(\n-                appliers.toArray( new BatchTransactionApplier[appliers.size()] ) );\n+        return new BatchTransactionApplierFacade( appliers.toArray( new BatchTransactionApplier[appliers.size()] ) );\n     }\n \n     private LockService lockService( TransactionApplicationMode mode )\n@@ -412,15 +385,10 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n     public void start() throws Throwable\n     {\n         neoStores.makeStoreOk();\n-\n-        propertyKeyTokenHolder.setInitialTokens(\n-                neoStores.getPropertyKeyTokenStore().getTokens( Integer.MAX_VALUE ) );\n-        relationshipTypeTokenHolder.setInitialTokens(\n-                neoStores.getRelationshipTypeTokenStore().getTokens( Integer.MAX_VALUE ) );\n-        labelTokenHolder.setInitialTokens(\n-                neoStores.getLabelTokenStore().getTokens( Integer.MAX_VALUE ) );\n-\n-        neoStores.startCountStore(); // TODO: move this to counts store lifecycle\n+propertyKeyTokenHolder.setInitialTokens( neoStores.getPropertyKeyTokenStore().getTokens( Integer.MAX_VALUE ) );\n+relationshipTypeTokenHolder.setInitialTokens( neoStores.getRelationshipTypeTokenStore().getTokens( Integer.MAX_VALUE ) );\n+labelTokenHolder.setInitialTokens( neoStores.getLabelTokenStore().getTokens( Integer.MAX_VALUE ) );\n+neoStores.startCountStore(); // TODO: move this to counts store lifecycle\n         loadSchemaCache();\n         indexingService.start();\n         labelScanStore.start();\n@@ -506,9 +474,8 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n             else\n             {\n                 final RecordStore<AbstractBaseRecord> recordStore = neoStores.getRecordStore( type );\n-                StoreFileMetadata metadata =\n-                        new StoreFileMetadata( recordStore.getStorageFileName(), recordStore.getRecordSize() );\n-                files.add( metadata );\n+                StoreFileMetadata metadata = new StoreFileMetadata( recordStore.getStorageFileName(), recordStore.getRecordSize() );\n+files.add( metadata );\n             }\n         }\n         return files;\n@@ -521,7 +488,7 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n         {\n             StoreFileMetadata countStoreFileMetadata = new StoreFileMetadata( countStoreFile,\n                     RecordFormat.NO_RECORD_SIZE );\n-            files.add( countStoreFileMetadata );\n+files.add( countStoreFileMetadata );\n         }\n     }\n \n@@ -535,4 +502,4 @@ public class RecordStorageEngine implements StorageEngine, Lifecycle\n     {\n         return neoStores;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 86
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
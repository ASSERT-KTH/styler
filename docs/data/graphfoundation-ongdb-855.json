{
    "project_name": "graphfoundation-ongdb",
    "error_id": "855",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/855/DefaultIndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/855/DefaultIndexReference.java\nindex a1ad2e687f5..5ae828f5da4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/855/DefaultIndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/855/DefaultIndexReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import java.util.Arrays;\n@@ -28,93 +29,92 @@ import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptorFactory;\n \n public class DefaultIndexReference implements IndexReference\n {\n-    private final boolean unique;\n-    private final int label;\n-    private final int[] properties;\n-\n-    private DefaultIndexReference( boolean unique, int label, int[] properties )\n+  private final boolean unique;\n+  private final int label;\n+  private final int[] properties;\n+\n+  private DefaultIndexReference(boolean unique, int label, int[] properties)\n+  {\n+    this.unique = unique;\n+    this.label = label;\n+    this.properties = properties;\n+  }\n+\n+  @Override\n+  public boolean isUnique()\n+  {\n+    return unique;\n+  }\n+\n+  @Override\n+  public int label()\n+  {\n+    return label;\n+  }\n+\n+  @Override\n+  public int[] properties()\n+  {\n+    return properties;\n+  }\n+\n+  public static IndexReference unique(int label, int... properties)\n+  {\n+    return new DefaultIndexReference(true, label, properties);\n+  }\n+\n+  public static IndexReference general(int label, int... properties)\n+  {\n+    return new DefaultIndexReference(false, label, properties);\n+  }\n+\n+  public static IndexReference fromDescriptor(SchemaIndexDescriptor descriptor)\n+  {\n+    boolean unique = descriptor.type() == SchemaIndexDescriptor.Type.UNIQUE;\n+    SchemaDescriptor schema = descriptor.schema();\n+    return new DefaultIndexReference(unique, schema.keyId(), schema.getPropertyIds());\n+  }\n+\n+  public static SchemaIndexDescriptor toDescriptor(IndexReference reference)\n+  {\n+    if (reference.isUnique())\n     {\n-        this.unique = unique;\n-        this.label = label;\n-        this.properties = properties;\n-    }\n-\n-    @Override\n-    public boolean isUnique()\n+      return SchemaIndexDescriptorFactory.uniqueForLabel(reference.label(), reference.properties());\n+    } else\n     {\n-        return unique;\n+      return SchemaIndexDescriptorFactory.forLabel(reference.label(), reference.properties());\n     }\n+  }\n \n-    @Override\n-    public int label()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return label;\n+      return true;\n     }\n-\n-    @Override\n-    public int[] properties()\n+    if (o == null || !(o instanceof IndexReference))\n     {\n-        return properties;\n+      return false;\n     }\n \n-    public static IndexReference unique( int label, int...properties )\n-    {\n-        return new DefaultIndexReference( true, label, properties );\n-    }\n-\n-    public static IndexReference general( int label, int...properties )\n-    {\n-        return new DefaultIndexReference( false, label, properties );\n-    }\n-\n-    public static IndexReference fromDescriptor( SchemaIndexDescriptor descriptor )\n-    {\n-        boolean unique = descriptor.type() == SchemaIndexDescriptor.Type.UNIQUE;\n-        SchemaDescriptor schema = descriptor.schema();\n-        return new DefaultIndexReference( unique, schema.keyId(), schema.getPropertyIds() );\n-    }\n-\n-    public static SchemaIndexDescriptor toDescriptor( IndexReference reference )\n-    {\n-        if ( reference.isUnique() )\n-        {\n-            return SchemaIndexDescriptorFactory.uniqueForLabel( reference.label(), reference.properties() );\n-        }\n-        else\n-        {\n-            return SchemaIndexDescriptorFactory.forLabel( reference.label(), reference.properties() );\n-        }\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || !( o instanceof IndexReference ) )\n-        {\n-            return false;\n-        }\n-\n-        IndexReference that = (IndexReference) o;\n-        return unique == that.isUnique() && label == that.label() && Arrays.equals( properties, that.properties() );\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = unique ? 1 : 0;\n-        result = 31 * result + label;\n-        result = 31 * result + Arrays.hashCode( properties );\n-        return result;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"Index(%d:%s)\", label, Arrays.toString( properties ) );\n-    }\n+    IndexReference that = (IndexReference) o;\n+    return unique == that.isUnique() && label == that.label() && Arrays.equals(properties, that.properties());\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = unique ? 1 : 0;\n+    result = 31 * result + label;\n+    result = 31 * result + Arrays.hashCode(properties);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"Index(%d:%s)\", label, Arrays.toString(properties));\n+  }\n \n }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/855/DefaultIndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/855/DefaultIndexReference.java\nindex a1ad2e687f5..ddee5a94774 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/855/DefaultIndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/855/DefaultIndexReference.java\n@@ -93,7 +93,8 @@ public class DefaultIndexReference implements IndexReference\n         {\n             return true;\n         }\n-        if ( o == null || !( o instanceof IndexReference ) )\n+\n+if ( o == null || !( o instanceof IndexReference ) )\n         {\n             return false;\n         }\n@@ -116,5 +117,4 @@ public class DefaultIndexReference implements IndexReference\n     {\n         return String.format( \"Index(%d:%s)\", label, Arrays.toString( properties ) );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
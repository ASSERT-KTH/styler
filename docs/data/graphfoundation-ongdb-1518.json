{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1518",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1518/InvalidLogEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1518/InvalidLogEntryHandler.java\nindex 919d15c60c7..100f0f45a67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1518/InvalidLogEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1518/InvalidLogEntryHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import org.neo4j.kernel.impl.transaction.log.LogPosition;\n@@ -26,35 +27,35 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n  */\n public abstract class InvalidLogEntryHandler\n {\n-    /**\n-     * Allows no invalid log entries.\n-     */\n-    public static final InvalidLogEntryHandler STRICT = new InvalidLogEntryHandler()\n-    {\n-    };\n+  /**\n+   * Allows no invalid log entries.\n+   */\n+  public static final InvalidLogEntryHandler STRICT = new InvalidLogEntryHandler()\n+  {\n+  };\n \n-    /**\n-     * Log entry couldn't be read correctly. Could be invalid log entry in the log.\n-     *\n-     * @param e error during reading a log entry.\n-     * @param position {@link LogPosition} of the start of the log entry attempted to be read.\n-     * @return {@code true} if this error is accepted, otherwise {@code false} which means the exception\n-     * causing this will be thrown by the caller.\n-     */\n-    public boolean handleInvalidEntry( Exception e, LogPosition position )\n-    {   // consider invalid by default\n-        return false;\n-    }\n+  /**\n+   * Log entry couldn't be read correctly. Could be invalid log entry in the log.\n+   *\n+   * @param e        error during reading a log entry.\n+   * @param position {@link LogPosition} of the start of the log entry attempted to be read.\n+   * @return {@code true} if this error is accepted, otherwise {@code false} which means the exception\n+   * causing this will be thrown by the caller.\n+   */\n+  public boolean handleInvalidEntry(Exception e, LogPosition position)\n+  {   // consider invalid by default\n+    return false;\n+  }\n \n-    /**\n-     * Tells this handler that, given that there were invalid entries, handler thinks they are OK\n-     * to skip and that one or more entries after a bad section could be read then a certain number\n-     * of bytes contained invalid log data and were therefore skipped. Log entry reading continues\n-     * after this call.\n-     *\n-     * @param bytesSkipped number of bytes skipped.\n-     */\n-    public void bytesSkipped( long bytesSkipped )\n-    {   // do nothing by default\n-    }\n+  /**\n+   * Tells this handler that, given that there were invalid entries, handler thinks they are OK\n+   * to skip and that one or more entries after a bad section could be read then a certain number\n+   * of bytes contained invalid log data and were therefore skipped. Log entry reading continues\n+   * after this call.\n+   *\n+   * @param bytesSkipped number of bytes skipped.\n+   */\n+  public void bytesSkipped(long bytesSkipped)\n+  {   // do nothing by default\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1518/InvalidLogEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1518/InvalidLogEntryHandler.java\nindex 919d15c60c7..bb9d129a969 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1518/InvalidLogEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1518/InvalidLogEntryHandler.java\n@@ -42,7 +42,8 @@ public abstract class InvalidLogEntryHandler\n      * causing this will be thrown by the caller.\n      */\n     public boolean handleInvalidEntry( Exception e, LogPosition position )\n-    {   // consider invalid by default\n+    {\n+    // consider invalid by default\n         return false;\n     }\n \n@@ -55,6 +56,7 @@ public abstract class InvalidLogEntryHandler\n      * @param bytesSkipped number of bytes skipped.\n      */\n     public void bytesSkipped( long bytesSkipped )\n-    {   // do nothing by default\n+    {\n+    // do nothing by default\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
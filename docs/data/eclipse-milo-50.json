{
    "project_name": "eclipse-milo",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class SByteConversions {\n\n    private SByteConversions() {}\n\n    @NotNull\n    static Boolean sByteToBoolean(@NotNull Byte b) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/50/SByteConversions.java\nindex 8eaa51bb3c7..ab056af06b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/50/SByteConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class SByteConversions {\n \n-    private SByteConversions() {}\n+    private SByteConversions() {\n+    }\n \n     @NotNull\n     static Boolean sByteToBoolean(@NotNull Byte b) {\n@@ -115,10 +116,14 @@ final class SByteConversions {\n     static Object explicitConversion(@NotNull Byte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return sByteToBoolean(b);\n-            case Byte:      return sByteToByte(b);\n-            case String:    return sByteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case Boolean:\n+                return sByteToBoolean(b);\n+            case Byte:\n+                return sByteToByte(b);\n+            case String:\n+                return sByteToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -127,15 +132,24 @@ final class SByteConversions {\n     static Object implicitConversion(@NotNull Byte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return sByteToDouble(b);\n-            case Float:     return sByteToFloat(b);\n-            case Int16:     return sByteToInt16(b);\n-            case Int32:     return sByteToInt32(b);\n-            case Int64:     return sByteToInt64(b);\n-            case UInt16:    return sByteToUInt16(b);\n-            case UInt32:    return sByteToUInt32(b);\n-            case UInt64:    return sByteToUInt64(b);\n-            default:        return null;\n+            case Double:\n+                return sByteToDouble(b);\n+            case Float:\n+                return sByteToFloat(b);\n+            case Int16:\n+                return sByteToInt16(b);\n+            case Int32:\n+                return sByteToInt32(b);\n+            case Int64:\n+                return sByteToInt64(b);\n+            case UInt16:\n+                return sByteToUInt16(b);\n+            case UInt32:\n+                return sByteToUInt32(b);\n+            case UInt64:\n+                return sByteToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/50/SByteConversions.java\nindex 8eaa51bb3c7..216f676fbb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/50/SByteConversions.java\n@@ -115,10 +115,12 @@ final class SByteConversions {\n     static Object explicitConversion(@NotNull Byte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return sByteToBoolean(b);\n+            case Boolean:\n+    return sByteToBoolean(b);\n             case Byte:      return sByteToByte(b);\n             case String:    return sByteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            default:\n+    return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -135,9 +137,10 @@ final class SByteConversions {\n             case UInt16:    return sByteToUInt16(b);\n             case UInt32:    return sByteToUInt32(b);\n             case UInt64:    return sByteToUInt64(b);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/50/SByteConversions.java\nindex 8eaa51bb3c7..c67f5a840b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/50/SByteConversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class SByteConversions {\n \n-    private SByteConversions() {}\n+    private SByteConversions() {\n+    }\n \n     @NotNull\n     static Boolean sByteToBoolean(@NotNull Byte b) {\n@@ -102,10 +103,7 @@ final class SByteConversions {\n     static Object convert(@NotNull Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Byte) {\n             Byte b = (Byte) o;\n-\n-            return implicit ?\n-                implicitConversion(b, targetType) :\n-                explicitConversion(b, targetType);\n+            return implicit ? implicitConversion(b, targetType) : explicitConversion(b, targetType);\n         } else {\n             return null;\n         }\n@@ -115,10 +113,16 @@ final class SByteConversions {\n     static Object explicitConversion(@NotNull Byte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return sByteToBoolean(b);\n-            case Byte:      return sByteToByte(b);\n-            case String:    return sByteToString(b);\n-            default:        return implicitConversion(b, targetType);\n+            case Boolean:\n+                return sByteToBoolean(b);\n+\n+            case Byte:\n+                return sByteToByte(b);\n+\n+            case String:\n+                return sByteToString(b);\n+            default:\n+                return implicitConversion(b, targetType);\n         }\n         //@formatter:on\n     }\n@@ -127,17 +131,33 @@ final class SByteConversions {\n     static Object implicitConversion(@NotNull Byte b, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return sByteToDouble(b);\n-            case Float:     return sByteToFloat(b);\n-            case Int16:     return sByteToInt16(b);\n-            case Int32:     return sByteToInt32(b);\n-            case Int64:     return sByteToInt64(b);\n-            case UInt16:    return sByteToUInt16(b);\n-            case UInt32:    return sByteToUInt32(b);\n-            case UInt64:    return sByteToUInt64(b);\n-            default:        return null;\n+            case Double:\n+                return sByteToDouble(b);\n+\n+            case Float:\n+                return sByteToFloat(b);\n+\n+            case Int16:\n+                return sByteToInt16(b);\n+\n+            case Int32:\n+                return sByteToInt32(b);\n+\n+            case Int64:\n+                return sByteToInt64(b);\n+\n+            case UInt16:\n+                return sByteToUInt16(b);\n+\n+            case UInt32:\n+                return sByteToUInt32(b);\n+\n+            case UInt64:\n+                return sByteToUInt64(b);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/50/SByteConversions.java\nindex 8eaa51bb3c7..d6f73e6e3d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/50/SByteConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/50/SByteConversions.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class SByteConversions {\n \n-    private SByteConversions() {}\n+    private SByteConversions() {\n \n-    @NotNull\n+    } @NotNull\n     static Boolean sByteToBoolean(@NotNull Byte b) {\n         return b != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
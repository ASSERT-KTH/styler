{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3500",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "293",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3500/DiagnosticsManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3500/DiagnosticsManager.java\nindex 829be413d5a..38a82109697 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3500/DiagnosticsManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3500/DiagnosticsManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.info;\n \n import java.util.Iterator;\n@@ -32,330 +33,328 @@ import org.neo4j.logging.NullLog;\n \n public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecycle\n {\n-    private final List<DiagnosticsProvider> providers = new CopyOnWriteArrayList<>();\n-    private final Log targetLog;\n-    private volatile State state = State.INITIAL;\n-\n-    public DiagnosticsManager( Log targetLog )\n-    {\n-        this.targetLog = targetLog;\n+  private final List<DiagnosticsProvider> providers = new CopyOnWriteArrayList<>();\n+  private final Log targetLog;\n+  private volatile State state = State.INITIAL;\n \n-        providers.add( new DiagnosticsProvider()\n-        {\n-            @Override\n-            public String getDiagnosticsIdentifier()\n-            {\n-                return DiagnosticsManager.this.getClass().getName();\n-            }\n-\n-            @Override\n-            public void dump( DiagnosticsPhase phase, final Logger logger )\n-            {\n-                if ( phase.isInitialization() || phase.isExplicitlyRequested() )\n-                {\n-                    logger.log( \"Diagnostics providers:\" );\n-                    for ( DiagnosticsProvider provider : providers )\n-                    {\n-                        logger.log( provider.getDiagnosticsIdentifier() );\n-                    }\n-                }\n-            }\n-\n-            @Override\n-            public void acceptDiagnosticsVisitor( Object visitor )\n-            {\n-                Visitor<? super DiagnosticsProvider, ? extends RuntimeException> target =\n-                        Visitor.SafeGenerics.castOrNull( DiagnosticsProvider.class, RuntimeException.class, visitor );\n-                if ( target != null )\n-                {\n-                    for ( DiagnosticsProvider provider : providers )\n-                    {\n-                        target.visit( provider );\n-                    }\n-                }\n-            }\n-        } );\n-        SystemDiagnostics.registerWith( this );\n-    }\n+  public DiagnosticsManager(Log targetLog)\n+  {\n+    this.targetLog = targetLog;\n \n-    @Override\n-    public void init()\n+    providers.add(new DiagnosticsProvider()\n     {\n-        synchronized ( providers )\n+      @Override\n+      public String getDiagnosticsIdentifier()\n+      {\n+        return DiagnosticsManager.this.getClass().getName();\n+      }\n+\n+      @Override\n+      public void dump(DiagnosticsPhase phase, final Logger logger)\n+      {\n+        if (phase.isInitialization() || phase.isExplicitlyRequested())\n         {\n-            @SuppressWarnings( \"hiding\" )\n-            State state = this.state;\n-            if ( !state.startup( this ) )\n-            {\n-                return;\n-            }\n+          logger.log(\"Diagnostics providers:\");\n+          for (DiagnosticsProvider provider : providers)\n+          {\n+            logger.log(provider.getDiagnosticsIdentifier());\n+          }\n         }\n-        dumpAll( DiagnosticsPhase.INITIALIZED, getTargetLog() );\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        synchronized ( providers )\n+      }\n+\n+      @Override\n+      public void acceptDiagnosticsVisitor(Object visitor)\n+      {\n+        Visitor<? super DiagnosticsProvider, ? extends RuntimeException> target =\n+            Visitor.SafeGenerics.castOrNull(DiagnosticsProvider.class, RuntimeException.class, visitor);\n+        if (target != null)\n         {\n-            @SuppressWarnings( \"hiding\" )\n-            State state = this.state;\n-            if ( !state.startup( this ) )\n-            {\n-                return;\n-            }\n+          for (DiagnosticsProvider provider : providers)\n+          {\n+            target.visit(provider);\n+          }\n         }\n-        dumpAll( DiagnosticsPhase.STARTED, getTargetLog() );\n+      }\n+    });\n+    SystemDiagnostics.registerWith(this);\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    synchronized (providers)\n+    {\n+      @SuppressWarnings(\"hiding\")\n+      State state = this.state;\n+      if (!state.startup(this))\n+      {\n+        return;\n+      }\n     }\n+    dumpAll(DiagnosticsPhase.INITIALIZED, getTargetLog());\n+  }\n \n-    @Override\n-    public void stop()\n+  @Override\n+  public void start()\n+  {\n+    synchronized (providers)\n     {\n-        synchronized ( providers )\n-        {\n-            @SuppressWarnings( \"hiding\" )\n-            State state = this.state;\n-            if ( !state.shutdown( this ) )\n-            {\n-                return;\n-            }\n-        }\n-        dumpAll( DiagnosticsPhase.STOPPING, getTargetLog() );\n-        providers.clear();\n+      @SuppressWarnings(\"hiding\")\n+      State state = this.state;\n+      if (!state.startup(this))\n+      {\n+        return;\n+      }\n     }\n+    dumpAll(DiagnosticsPhase.STARTED, getTargetLog());\n+  }\n \n-    @Override\n-    public void shutdown()\n+  @Override\n+  public void stop()\n+  {\n+    synchronized (providers)\n     {\n-        synchronized ( providers )\n-        {\n-            @SuppressWarnings( \"hiding\" )\n-            State state = this.state;\n-            if ( !state.shutdown( this ) )\n-            {\n-                return;\n-            }\n-        }\n-        dumpAll( DiagnosticsPhase.SHUTDOWN, getTargetLog() );\n-        providers.clear();\n+      @SuppressWarnings(\"hiding\")\n+      State state = this.state;\n+      if (!state.shutdown(this))\n+      {\n+        return;\n+      }\n     }\n-\n-    private enum State\n+    dumpAll(DiagnosticsPhase.STOPPING, getTargetLog());\n+    providers.clear();\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    synchronized (providers)\n     {\n-        INITIAL\n+      @SuppressWarnings(\"hiding\")\n+      State state = this.state;\n+      if (!state.shutdown(this))\n+      {\n+        return;\n+      }\n+    }\n+    dumpAll(DiagnosticsPhase.SHUTDOWN, getTargetLog());\n+    providers.clear();\n+  }\n+\n+  private enum State\n+  {\n+    INITIAL\n         {\n-            @Override\n-            boolean startup( DiagnosticsManager manager )\n-            {\n-                manager.state = STARTED;\n-                return true;\n-            }\n+          @Override\n+          boolean startup(DiagnosticsManager manager)\n+          {\n+            manager.state = STARTED;\n+            return true;\n+          }\n         },\n-        STARTED,\n-        STOPPED\n-        {\n-            @Override\n-            boolean shutdown( DiagnosticsManager manager )\n-            {\n-                return false;\n-            }\n-        };\n-\n-        boolean startup( DiagnosticsManager manager )\n+    STARTED,\n+    STOPPED\n         {\n+          @Override\n+          boolean shutdown(DiagnosticsManager manager)\n+          {\n             return false;\n-        }\n-\n-        boolean shutdown( DiagnosticsManager manager )\n-        {\n-            manager.state = STOPPED;\n-            return true;\n-        }\n-    }\n+          }\n+        };\n \n-    public Log getTargetLog()\n+    boolean startup(DiagnosticsManager manager)\n     {\n-        return targetLog;\n+      return false;\n     }\n \n-    public void dumpAll()\n+    boolean shutdown(DiagnosticsManager manager)\n     {\n-        dumpAll( DiagnosticsPhase.REQUESTED, getTargetLog() );\n+      manager.state = STOPPED;\n+      return true;\n     }\n+  }\n+\n+  public Log getTargetLog()\n+  {\n+    return targetLog;\n+  }\n+\n+  public void dumpAll()\n+  {\n+    dumpAll(DiagnosticsPhase.REQUESTED, getTargetLog());\n+  }\n+\n+  public void dump(String identifier)\n+  {\n+    extract(identifier, getTargetLog());\n+  }\n+\n+  public void dumpAll(Log log)\n+  {\n+    log.bulk(bulkLog ->\n+    {\n+      for (DiagnosticsProvider provider : providers)\n+      {\n+        dump(provider, DiagnosticsPhase.EXPLICIT, bulkLog);\n+      }\n+    });\n+  }\n+\n+  public void extract(final String identifier, Log log)\n+  {\n+    log.bulk(bulkLog ->\n+    {\n+      for (DiagnosticsProvider provider : providers)\n+      {\n+        if (identifier.equals(provider.getDiagnosticsIdentifier()))\n+        {\n+          dump(provider, DiagnosticsPhase.EXPLICIT, bulkLog);\n+          return;\n+        }\n+      }\n+    });\n+  }\n \n-    public void dump( String identifier )\n+  private void dumpAll(final DiagnosticsPhase phase, Log log)\n+  {\n+    log.bulk(bulkLog ->\n+    {\n+      phase.emitStart(bulkLog);\n+      for (DiagnosticsProvider provider : providers)\n+      {\n+        dump(provider, phase, bulkLog);\n+      }\n+      phase.emitDone(bulkLog);\n+    });\n+  }\n+\n+  public <T> void register(DiagnosticsExtractor<T> extractor, T source)\n+  {\n+    appendProvider(extractedProvider(extractor, source));\n+  }\n+\n+  public <T, E extends Enum<E> & DiagnosticsExtractor<T>> void registerAll(Class<E> extractorEnum, T source)\n+  {\n+    for (DiagnosticsExtractor<T> extractor : extractorEnum.getEnumConstants())\n     {\n-        extract( identifier, getTargetLog() );\n+      register(extractor, source);\n     }\n+  }\n \n-    public void dumpAll( Log log )\n+  public void prependProvider(DiagnosticsProvider provider)\n+  {\n+    @SuppressWarnings(\"hiding\")\n+    State state = this.state;\n+    if (state == State.STOPPED)\n     {\n-        log.bulk( bulkLog ->\n-        {\n-            for ( DiagnosticsProvider provider : providers )\n-            {\n-                dump( provider, DiagnosticsPhase.EXPLICIT, bulkLog );\n-            }\n-        } );\n+      return;\n     }\n-\n-    public void extract( final String identifier, Log log )\n+    providers.add(0, provider);\n+    if (state == State.STARTED)\n     {\n-        log.bulk( bulkLog ->\n-        {\n-            for ( DiagnosticsProvider provider : providers )\n-            {\n-                if ( identifier.equals( provider.getDiagnosticsIdentifier() ) )\n-                {\n-                    dump( provider, DiagnosticsPhase.EXPLICIT, bulkLog );\n-                    return;\n-                }\n-            }\n-        } );\n+      dump(DiagnosticsPhase.STARTED, provider, getTargetLog());\n     }\n+  }\n \n-    private void dumpAll( final DiagnosticsPhase phase, Log log )\n+  public void appendProvider(DiagnosticsProvider provider)\n+  {\n+    @SuppressWarnings(\"hiding\")\n+    State state = this.state;\n+    if (state == State.STOPPED)\n     {\n-        log.bulk( bulkLog ->\n-        {\n-            phase.emitStart( bulkLog );\n-            for ( DiagnosticsProvider provider : providers )\n-            {\n-                dump( provider, phase, bulkLog );\n-            }\n-            phase.emitDone( bulkLog );\n-        } );\n+      return;\n     }\n-\n-    public <T> void register( DiagnosticsExtractor<T> extractor, T source )\n+    providers.add(provider);\n+    if (state == State.STARTED)\n     {\n-        appendProvider( extractedProvider( extractor, source ) );\n+      dump(DiagnosticsPhase.STARTED, provider, getTargetLog());\n     }\n-\n-    public <T, E extends Enum<E> & DiagnosticsExtractor<T>> void registerAll( Class<E> extractorEnum, T source )\n+  }\n+\n+  private void dump(DiagnosticsPhase phase, DiagnosticsProvider provider, Log log)\n+  {\n+    phase.emitStart(log, provider);\n+    dump(provider, phase, log);\n+    phase.emitDone(log, provider);\n+  }\n+\n+  private static void dump(DiagnosticsProvider provider, DiagnosticsPhase phase, Log log)\n+  {\n+    // Optimization to skip diagnostics dumping (which is time consuming) if there's no log anyway.\n+    // This is first and foremost useful for speeding up testing.\n+    if (log == NullLog.getInstance())\n     {\n-        for ( DiagnosticsExtractor<T> extractor : extractorEnum.getEnumConstants() )\n-        {\n-            register( extractor, source );\n-        }\n+      return;\n     }\n \n-    public void prependProvider( DiagnosticsProvider provider )\n+    try\n     {\n-        @SuppressWarnings( \"hiding\" )\n-        State state = this.state;\n-        if ( state == State.STOPPED )\n-        {\n-            return;\n-        }\n-        providers.add( 0, provider );\n-        if ( state == State.STARTED )\n-        {\n-            dump( DiagnosticsPhase.STARTED, provider, getTargetLog() );\n-        }\n+      provider.dump(phase, log.infoLogger());\n+    } catch (Exception cause)\n+    {\n+      log.error(\"Failure while logging diagnostics for \" + provider, cause);\n     }\n+  }\n+\n+  @Override\n+  public Iterator<DiagnosticsProvider> iterator()\n+  {\n+    return providers.iterator();\n+  }\n \n-    public void appendProvider( DiagnosticsProvider provider )\n+  static <T> DiagnosticsProvider extractedProvider(DiagnosticsExtractor<T> extractor, T source)\n+  {\n+    if (extractor instanceof DiagnosticsExtractor.VisitableDiagnostics<?>)\n     {\n-        @SuppressWarnings( \"hiding\" )\n-        State state = this.state;\n-        if ( state == State.STOPPED )\n-        {\n-            return;\n-        }\n-        providers.add( provider );\n-        if ( state == State.STARTED )\n-        {\n-            dump( DiagnosticsPhase.STARTED, provider, getTargetLog() );\n-        }\n+      return new ExtractedVisitableDiagnosticsProvider<>(\n+          (DiagnosticsExtractor.VisitableDiagnostics<T>) extractor, source);\n+    } else\n+    {\n+      return new ExtractedDiagnosticsProvider<>(extractor, source);\n     }\n+  }\n \n-    private void dump( DiagnosticsPhase phase, DiagnosticsProvider provider, Log log )\n+  private static class ExtractedDiagnosticsProvider<T> implements DiagnosticsProvider\n+  {\n+    final DiagnosticsExtractor<T> extractor;\n+    final T source;\n+\n+    ExtractedDiagnosticsProvider(DiagnosticsExtractor<T> extractor, T source)\n     {\n-        phase.emitStart( log, provider );\n-        dump( provider, phase, log );\n-        phase.emitDone( log, provider );\n+      this.extractor = extractor;\n+      this.source = source;\n     }\n \n-    private static void dump( DiagnosticsProvider provider, DiagnosticsPhase phase, Log log )\n+    @Override\n+    public String getDiagnosticsIdentifier()\n     {\n-        // Optimization to skip diagnostics dumping (which is time consuming) if there's no log anyway.\n-        // This is first and foremost useful for speeding up testing.\n-        if ( log == NullLog.getInstance() )\n-        {\n-            return;\n-        }\n-\n-        try\n-        {\n-            provider.dump( phase, log.infoLogger() );\n-        }\n-        catch ( Exception cause )\n-        {\n-            log.error( \"Failure while logging diagnostics for \" + provider, cause );\n-        }\n+      return extractor.toString();\n     }\n \n     @Override\n-    public Iterator<DiagnosticsProvider> iterator()\n+    public void acceptDiagnosticsVisitor(Object visitor)\n     {\n-        return providers.iterator();\n+      // nobody visits the source of this\n     }\n \n-    static <T> DiagnosticsProvider extractedProvider( DiagnosticsExtractor<T> extractor, T source )\n+    @Override\n+    public void dump(DiagnosticsPhase phase, Logger logger)\n     {\n-        if ( extractor instanceof DiagnosticsExtractor.VisitableDiagnostics<?> )\n-        {\n-            return new ExtractedVisitableDiagnosticsProvider<>(\n-                    (DiagnosticsExtractor.VisitableDiagnostics<T>) extractor, source );\n-        }\n-        else\n-        {\n-            return new ExtractedDiagnosticsProvider<>( extractor, source );\n-        }\n+      extractor.dumpDiagnostics(source, phase, logger);\n     }\n+  }\n \n-    private static class ExtractedDiagnosticsProvider<T> implements DiagnosticsProvider\n+  private static class ExtractedVisitableDiagnosticsProvider<T> extends ExtractedDiagnosticsProvider<T>\n+  {\n+    ExtractedVisitableDiagnosticsProvider(VisitableDiagnostics<T> extractor, T source)\n     {\n-        final DiagnosticsExtractor<T> extractor;\n-        final T source;\n-\n-        ExtractedDiagnosticsProvider( DiagnosticsExtractor<T> extractor, T source )\n-        {\n-            this.extractor = extractor;\n-            this.source = source;\n-        }\n-\n-        @Override\n-        public String getDiagnosticsIdentifier()\n-        {\n-            return extractor.toString();\n-        }\n-\n-        @Override\n-        public void acceptDiagnosticsVisitor( Object visitor )\n-        {\n-            // nobody visits the source of this\n-        }\n-\n-        @Override\n-        public void dump( DiagnosticsPhase phase, Logger logger )\n-        {\n-            extractor.dumpDiagnostics( source, phase, logger );\n-        }\n+      super(extractor, source);\n     }\n \n-    private static class ExtractedVisitableDiagnosticsProvider<T> extends ExtractedDiagnosticsProvider<T>\n+    @Override\n+    public void acceptDiagnosticsVisitor(Object visitor)\n     {\n-        ExtractedVisitableDiagnosticsProvider( VisitableDiagnostics<T> extractor, T source )\n-        {\n-            super( extractor, source );\n-        }\n-\n-        @Override\n-        public void acceptDiagnosticsVisitor( Object visitor )\n-        {\n-            ( (DiagnosticsExtractor.VisitableDiagnostics<T>) extractor ).dispatchDiagnosticsVisitor( source, visitor );\n-        }\n+      ((DiagnosticsExtractor.VisitableDiagnostics<T>) extractor).dispatchDiagnosticsVisitor(source, visitor);\n     }\n+  }\n }\n",
            "diff_size": 424
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "310",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3500/DiagnosticsManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3500/DiagnosticsManager.java\nindex 829be413d5a..fac363f6922 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3500/DiagnosticsManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3500/DiagnosticsManager.java\n@@ -64,9 +64,8 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n             @Override\n             public void acceptDiagnosticsVisitor( Object visitor )\n             {\n-                Visitor<? super DiagnosticsProvider, ? extends RuntimeException> target =\n-                        Visitor.SafeGenerics.castOrNull( DiagnosticsProvider.class, RuntimeException.class, visitor );\n-                if ( target != null )\n+                Visitor<? super DiagnosticsProvider, ? extends RuntimeException> target = Visitor.SafeGenerics.castOrNull( DiagnosticsProvider.class, RuntimeException.class, visitor );\n+if ( target != null )\n                 {\n                     for ( DiagnosticsProvider provider : providers )\n                     {\n@@ -90,7 +89,8 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n                 return;\n             }\n         }\n-        dumpAll( DiagnosticsPhase.INITIALIZED, getTargetLog() );\n+\n+dumpAll( DiagnosticsPhase.INITIALIZED, getTargetLog() );\n     }\n \n     @Override\n@@ -105,7 +105,8 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n                 return;\n             }\n         }\n-        dumpAll( DiagnosticsPhase.STARTED, getTargetLog() );\n+\n+dumpAll( DiagnosticsPhase.STARTED, getTargetLog() );\n     }\n \n     @Override\n@@ -120,7 +121,8 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n                 return;\n             }\n         }\n-        dumpAll( DiagnosticsPhase.STOPPING, getTargetLog() );\n+\n+dumpAll( DiagnosticsPhase.STOPPING, getTargetLog() );\n         providers.clear();\n     }\n \n@@ -136,7 +138,8 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n                 return;\n             }\n         }\n-        dumpAll( DiagnosticsPhase.SHUTDOWN, getTargetLog() );\n+\n+dumpAll( DiagnosticsPhase.SHUTDOWN, getTargetLog() );\n         providers.clear();\n     }\n \n@@ -150,9 +153,7 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n                 manager.state = STARTED;\n                 return true;\n             }\n-        },\n-        STARTED,\n-        STOPPED\n+        }, STARTED, STOPPED\n         {\n             @Override\n             boolean shutdown( DiagnosticsManager manager )\n@@ -306,8 +307,7 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n     {\n         if ( extractor instanceof DiagnosticsExtractor.VisitableDiagnostics<?> )\n         {\n-            return new ExtractedVisitableDiagnosticsProvider<>(\n-                    (DiagnosticsExtractor.VisitableDiagnostics<T>) extractor, source );\n+            return new ExtractedVisitableDiagnosticsProvider<>((DiagnosticsExtractor.VisitableDiagnostics<T>) extractor, source );\n         }\n         else\n         {\n@@ -355,7 +355,7 @@ public class DiagnosticsManager implements Iterable<DiagnosticsProvider>, Lifecy\n         @Override\n         public void acceptDiagnosticsVisitor( Object visitor )\n         {\n-            ( (DiagnosticsExtractor.VisitableDiagnostics<T>) extractor ).dispatchDiagnosticsVisitor( source, visitor );\n+            ((DiagnosticsExtractor.VisitableDiagnostics<T>) extractor).dispatchDiagnosticsVisitor( source, visitor );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
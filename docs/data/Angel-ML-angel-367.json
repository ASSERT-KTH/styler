{
    "project_name": "Angel-ML-angel",
    "error_id": "367",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private final Properties conf;\n\n  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n      Configuration hadoopConf) {\n    this.partitionNum = partitionNum;\n    this.minNodeId = minNodeId;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/367/ModelContext.java\nindex f4b6e90b89c..7c09767436a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/367/ModelContext.java\n@@ -17,8 +17,9 @@ public class ModelContext implements Serializable {\n   private final String modelName;\n   private final Properties conf;\n \n-  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n-      Configuration hadoopConf) {\n+  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String\n+modelName ,\n+       Configuration hadoopConf) {\n     this.partitionNum = partitionNum;\n     this.minNodeId = minNodeId;\n     this.maxNodeId = maxNodeId;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/367/ModelContext.java\nindex f4b6e90b89c..67087690c3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/367/ModelContext.java\n@@ -17,8 +17,9 @@ public class ModelContext implements Serializable {\n   private final String modelName;\n   private final Properties conf;\n \n-  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n-      Configuration hadoopConf) {\n+  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum,\n+                      String modelName,\n+                      Configuration hadoopConf) {\n     this.partitionNum = partitionNum;\n     this.minNodeId = minNodeId;\n     this.maxNodeId = maxNodeId;\n@@ -26,7 +27,7 @@ public class ModelContext implements Serializable {\n     this.modelName = modelName;\n     this.conf = new Properties();\n     Iterator<Entry<String, String>> iter = hadoopConf.iterator();\n-    while(iter.hasNext()) {\n+    while (iter.hasNext()) {\n       Entry<String, String> kv = iter.next();\n       conf.setProperty(kv.getKey(), kv.getValue());\n     }\n@@ -70,7 +71,7 @@ public class ModelContext implements Serializable {\n \n   private boolean getBoolean(String key, boolean defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n \n@@ -79,7 +80,7 @@ public class ModelContext implements Serializable {\n \n   private int getInt(String key, int defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n \n@@ -106,7 +107,7 @@ public class ModelContext implements Serializable {\n   public Configuration getHadoopConf() {\n     Configuration hadoopConf = new Configuration();\n     Set<String> keyNames = conf.stringPropertyNames();\n-    for(String keyName : keyNames) {\n+    for (String keyName : keyNames) {\n       hadoopConf.set(keyName, conf.getProperty(keyName));\n     }\n     return hadoopConf;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/367/ModelContext.java\nindex f4b6e90b89c..6c6331d3857 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/367/ModelContext.java\n@@ -26,7 +26,7 @@ public class ModelContext implements Serializable {\n     this.modelName = modelName;\n     this.conf = new Properties();\n     Iterator<Entry<String, String>> iter = hadoopConf.iterator();\n-    while(iter.hasNext()) {\n+    while (iter.hasNext()) {\n       Entry<String, String> kv = iter.next();\n       conf.setProperty(kv.getKey(), kv.getValue());\n     }\n@@ -49,13 +49,11 @@ public class ModelContext implements Serializable {\n   }\n \n   public boolean isUseHashPartition() {\n-    return \"hash\".equalsIgnoreCase(\n-        conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n+    return \"hash\".equalsIgnoreCase(conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n   }\n \n   public boolean isUseRangePartition() {\n-    return \"range\".equalsIgnoreCase(\n-        conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n+    return \"range\".equalsIgnoreCase(conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n   }\n \n   public boolean isLoadBalancePartitionEnable() {\n@@ -70,7 +68,7 @@ public class ModelContext implements Serializable {\n \n   private boolean getBoolean(String key, boolean defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n \n@@ -79,7 +77,7 @@ public class ModelContext implements Serializable {\n \n   private int getInt(String key, int defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n \n@@ -106,7 +104,7 @@ public class ModelContext implements Serializable {\n   public Configuration getHadoopConf() {\n     Configuration hadoopConf = new Configuration();\n     Set<String> keyNames = conf.stringPropertyNames();\n-    for(String keyName : keyNames) {\n+    for (String keyName : keyNames) {\n       hadoopConf.set(keyName, conf.getProperty(keyName));\n     }\n     return hadoopConf;\n@@ -119,4 +117,4 @@ public class ModelContext implements Serializable {\n   public Properties getConf() {\n     return conf;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/367/ModelContext.java\nindex f4b6e90b89c..b7db6b163f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/367/ModelContext.java\n@@ -10,6 +10,7 @@ import java.util.Set;\n import org.apache.hadoop.conf.Configuration;\n \n public class ModelContext implements Serializable {\n+\n   private final int partitionNum;\n   private final long minNodeId;\n   private final long maxNodeId;\n@@ -17,8 +18,7 @@ public class ModelContext implements Serializable {\n   private final String modelName;\n   private final Properties conf;\n \n-  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n-      Configuration hadoopConf) {\n+  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName, Configuration hadoopConf) {\n     this.partitionNum = partitionNum;\n     this.minNodeId = minNodeId;\n     this.maxNodeId = maxNodeId;\n@@ -26,7 +26,7 @@ public class ModelContext implements Serializable {\n     this.modelName = modelName;\n     this.conf = new Properties();\n     Iterator<Entry<String, String>> iter = hadoopConf.iterator();\n-    while(iter.hasNext()) {\n+    while (iter.hasNext()) {\n       Entry<String, String> kv = iter.next();\n       conf.setProperty(kv.getKey(), kv.getValue());\n     }\n@@ -49,44 +49,37 @@ public class ModelContext implements Serializable {\n   }\n \n   public boolean isUseHashPartition() {\n-    return \"hash\".equalsIgnoreCase(\n-        conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n+    return \"hash\".equalsIgnoreCase(conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n   }\n \n   public boolean isUseRangePartition() {\n-    return \"range\".equalsIgnoreCase(\n-        conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n+    return \"range\".equalsIgnoreCase(conf.getProperty(AngelConf.ANGEL_PS_ROUTER_TYPE, AngelConf.DEFAULT_ANGEL_PS_ROUTER_TYPE));\n   }\n \n   public boolean isLoadBalancePartitionEnable() {\n-    return getBoolean(AngelConf.ANGEL_PS_LOADBALANCE_PARTITION_ENABLE,\n-        AngelConf.DEFAULT_ANGEL_PS_LOADBALANCE_PARTITION_ENABLE);\n+    return getBoolean(AngelConf.ANGEL_PS_LOADBALANCE_PARTITION_ENABLE, AngelConf.DEFAULT_ANGEL_PS_LOADBALANCE_PARTITION_ENABLE);\n   }\n \n   public boolean isUseBytesFormatForReadOnly() {\n-    return getBoolean(AngelGraphConf.ANGEL_GRAPH_USE_BYTES_FOR_READONLY,\n-        AngelGraphConf.DEFAULT_ANGEL_GRAPH_USE_BYTES_FOR_READONLY);\n+    return getBoolean(AngelGraphConf.ANGEL_GRAPH_USE_BYTES_FOR_READONLY, AngelGraphConf.DEFAULT_ANGEL_GRAPH_USE_BYTES_FOR_READONLY);\n   }\n \n   private boolean getBoolean(String key, boolean defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n-\n     return \"true\".equalsIgnoreCase(value);\n   }\n \n   private int getInt(String key, int defaultValue) {\n     String value = conf.getProperty(key);\n-    if(key == null) {\n+    if (key == null) {\n       return defaultValue;\n     }\n-\n     return Integer.valueOf(value);\n   }\n \n-\n   public void setMasterHost(String masterHost) {\n     conf.setProperty(AngelConf.ANGEL_AM_HOST, masterHost);\n   }\n@@ -106,7 +99,7 @@ public class ModelContext implements Serializable {\n   public Configuration getHadoopConf() {\n     Configuration hadoopConf = new Configuration();\n     Set<String> keyNames = conf.stringPropertyNames();\n-    for(String keyName : keyNames) {\n+    for (String keyName : keyNames) {\n       hadoopConf.set(keyName, conf.getProperty(keyName));\n     }\n     return hadoopConf;\n@@ -119,4 +112,5 @@ public class ModelContext implements Serializable {\n   public Properties getConf() {\n     return conf;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/367/ModelContext.java\nindex f4b6e90b89c..7c09767436a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_random/367/ModelContext.java\n@@ -17,8 +17,9 @@ public class ModelContext implements Serializable {\n   private final String modelName;\n   private final Properties conf;\n \n-  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n-      Configuration hadoopConf) {\n+  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String\n+modelName ,\n+       Configuration hadoopConf) {\n     this.partitionNum = partitionNum;\n     this.minNodeId = minNodeId;\n     this.maxNodeId = maxNodeId;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/367/ModelContext.java\nindex f4b6e90b89c..01e8c23061f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/367/ModelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/367/ModelContext.java\n@@ -17,8 +17,9 @@ public class ModelContext implements Serializable {\n   private final String modelName;\n   private final Properties conf;\n \n-  public ModelContext(int partitionNum, long minNodeId, long maxNodeId, long nodeNum, String modelName,\n-      Configuration hadoopConf) {\n+  public ModelContext(int partitionNum, long minNodeId,\n+  long maxNodeId, long nodeNum, String modelName,\n+       Configuration hadoopConf) {\n     this.partitionNum = partitionNum;\n     this.minNodeId = minNodeId;\n     this.maxNodeId = maxNodeId;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
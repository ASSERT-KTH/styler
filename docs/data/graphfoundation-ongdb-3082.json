{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3082",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "244",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3082/NumberArrayFactory.java\nindex 8fa03869aa3..6fea86018f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3082/NumberArrayFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n import java.io.File;\n@@ -44,325 +45,323 @@ import static org.neo4j.helpers.Numbers.safeCastLongToInt;\n  */\n public interface NumberArrayFactory\n {\n-    interface Monitor\n-    {\n-        /**\n-         * Notifies about a successful allocation where information about both successful and failed attempts are included.\n-         *\n-         * @param memory amount of memory for this allocation.\n-         * @param successfulFactory the {@link NumberArrayFactory} which proved successful allocating this amount of memory.\n-         * @param attemptedAllocationFailures list of failed attempts to allocate this memory in other allocators.\n-         */\n-        void allocationSuccessful( long memory, NumberArrayFactory successfulFactory, Iterable<AllocationFailure> attemptedAllocationFailures );\n-    }\n-\n-    Monitor NO_MONITOR = ( memory, successfulFactory, attemptedAllocationFailures ) -> { /* no-op */ };\n-\n+  interface Monitor\n+  {\n     /**\n-     * Puts arrays inside the heap.\n+     * Notifies about a successful allocation where information about both successful and failed attempts are included.\n+     *\n+     * @param memory                      amount of memory for this allocation.\n+     * @param successfulFactory           the {@link NumberArrayFactory} which proved successful allocating this amount of memory.\n+     * @param attemptedAllocationFailures list of failed attempts to allocate this memory in other allocators.\n      */\n-    NumberArrayFactory HEAP = new Adapter()\n+    void allocationSuccessful(long memory, NumberArrayFactory successfulFactory, Iterable<AllocationFailure> attemptedAllocationFailures);\n+  }\n+\n+  Monitor NO_MONITOR = (memory, successfulFactory, attemptedAllocationFailures) -> { /* no-op */ };\n+\n+  /**\n+   * Puts arrays inside the heap.\n+   */\n+  NumberArrayFactory HEAP = new Adapter()\n+  {\n+    @Override\n+    public IntArray newIntArray(long length, int defaultValue, long base)\n     {\n-        @Override\n-        public IntArray newIntArray( long length, int defaultValue, long base )\n-        {\n-            return new HeapIntArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n-\n-        @Override\n-        public LongArray newLongArray( long length, long defaultValue, long base )\n-        {\n-            return new HeapLongArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n-\n-        @Override\n-        public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n-        {\n-            return new HeapByteArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"HEAP\";\n-        }\n-    };\n+      return new HeapIntArray(safeCastLongToInt(length), defaultValue, base);\n+    }\n \n-    /**\n-     * Puts arrays off-heap, using unsafe calls.\n-     */\n-    NumberArrayFactory OFF_HEAP = new Adapter()\n+    @Override\n+    public LongArray newLongArray(long length, long defaultValue, long base)\n     {\n-        @Override\n-        public IntArray newIntArray( long length, int defaultValue, long base )\n-        {\n-            return new OffHeapIntArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n-\n-        @Override\n-        public LongArray newLongArray( long length, long defaultValue, long base )\n-        {\n-            return new OffHeapLongArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n-\n-        @Override\n-        public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n-        {\n-            return new OffHeapByteArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"OFF_HEAP\";\n-        }\n-    };\n-\n-    /**\n-     * Used as part of the fallback strategy for {@link Auto}. Tries to split up fixed-size arrays\n-     * ({@link #newLongArray(long, long)} and {@link #newIntArray(long, int)} into smaller chunks where\n-     * some can live on heap and some off heap.\n-     */\n-    NumberArrayFactory CHUNKED_FIXED_SIZE = new ChunkedNumberArrayFactory( NumberArrayFactory.NO_MONITOR );\n+      return new HeapLongArray(safeCastLongToInt(length), defaultValue, base);\n+    }\n \n-    /**\n-     * {@link Auto} factory which uses JVM stats for gathering information about available memory.\n-     */\n-    NumberArrayFactory AUTO_WITHOUT_PAGECACHE = new Auto( NumberArrayFactory.NO_MONITOR, OFF_HEAP, HEAP, CHUNKED_FIXED_SIZE );\n+    @Override\n+    public ByteArray newByteArray(long length, byte[] defaultValue, long base)\n+    {\n+      return new HeapByteArray(safeCastLongToInt(length), defaultValue, base);\n+    }\n \n-    /**\n-     * {@link Auto} factory which has a page cache backed number array as final fallback, in order to prevent OOM\n-     * errors.\n-     * @param pageCache {@link PageCache} to fallback allocation into, if no more memory is available.\n-     * @param dir directory where cached files are placed.\n-     * @param allowHeapAllocation whether or not to allow allocation on heap. Otherwise allocation is restricted\n-     * to off-heap and the page cache fallback. This to be more in control of available space in the heap at all times.\n-     * @param monitor for monitoring successful and failed allocations and which factory was selected.\n-     * @return a {@link NumberArrayFactory} which tries to allocation off-heap, then potentially on heap\n-     * and lastly falls back to allocating inside the given {@code pageCache}.\n-     */\n-    static NumberArrayFactory auto( PageCache pageCache, File dir, boolean allowHeapAllocation, Monitor monitor )\n+    @Override\n+    public String toString()\n+    {\n+      return \"HEAP\";\n+    }\n+  };\n+\n+  /**\n+   * Puts arrays off-heap, using unsafe calls.\n+   */\n+  NumberArrayFactory OFF_HEAP = new Adapter()\n+  {\n+    @Override\n+    public IntArray newIntArray(long length, int defaultValue, long base)\n     {\n-        PageCachedNumberArrayFactory pagedArrayFactory = new PageCachedNumberArrayFactory( pageCache, dir );\n-        ChunkedNumberArrayFactory chunkedArrayFactory = new ChunkedNumberArrayFactory( monitor,\n-                allocationAlternatives( allowHeapAllocation, pagedArrayFactory ) );\n-        return new Auto( monitor, allocationAlternatives( allowHeapAllocation, chunkedArrayFactory ) );\n+      return new OffHeapIntArray(length, defaultValue, base, GlobalMemoryTracker.INSTANCE);\n     }\n \n-    /**\n-     * @param allowHeapAllocation whether or not to include heap allocation as an alternative.\n-     * @param additional other means of allocation to try after the standard off/on heap alternatives.\n-     * @return an array of {@link NumberArrayFactory} with the desired alternatives.\n-     */\n-    static NumberArrayFactory[] allocationAlternatives( boolean allowHeapAllocation, NumberArrayFactory... additional )\n+    @Override\n+    public LongArray newLongArray(long length, long defaultValue, long base)\n     {\n-        List<NumberArrayFactory> result = new ArrayList<>( Collections.singletonList( OFF_HEAP ) );\n-        if ( allowHeapAllocation )\n-        {\n-            result.add( HEAP );\n-        }\n-        result.addAll( asList( additional ) );\n-        return result.toArray( new NumberArrayFactory[result.size()] );\n+      return new OffHeapLongArray(length, defaultValue, base, GlobalMemoryTracker.INSTANCE);\n     }\n \n-    class AllocationFailure\n+    @Override\n+    public ByteArray newByteArray(long length, byte[] defaultValue, long base)\n     {\n-        private final Throwable failure;\n-        private final NumberArrayFactory factory;\n+      return new OffHeapByteArray(length, defaultValue, base, GlobalMemoryTracker.INSTANCE);\n+    }\n \n-        AllocationFailure( Throwable failure, NumberArrayFactory factory )\n-        {\n-            this.failure = failure;\n-            this.factory = factory;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return \"OFF_HEAP\";\n+    }\n+  };\n+\n+  /**\n+   * Used as part of the fallback strategy for {@link Auto}. Tries to split up fixed-size arrays\n+   * ({@link #newLongArray(long, long)} and {@link #newIntArray(long, int)} into smaller chunks where\n+   * some can live on heap and some off heap.\n+   */\n+  NumberArrayFactory CHUNKED_FIXED_SIZE = new ChunkedNumberArrayFactory(NumberArrayFactory.NO_MONITOR);\n+\n+  /**\n+   * {@link Auto} factory which uses JVM stats for gathering information about available memory.\n+   */\n+  NumberArrayFactory AUTO_WITHOUT_PAGECACHE = new Auto(NumberArrayFactory.NO_MONITOR, OFF_HEAP, HEAP, CHUNKED_FIXED_SIZE);\n+\n+  /**\n+   * {@link Auto} factory which has a page cache backed number array as final fallback, in order to prevent OOM\n+   * errors.\n+   *\n+   * @param pageCache           {@link PageCache} to fallback allocation into, if no more memory is available.\n+   * @param dir                 directory where cached files are placed.\n+   * @param allowHeapAllocation whether or not to allow allocation on heap. Otherwise allocation is restricted\n+   *                            to off-heap and the page cache fallback. This to be more in control of available space in the heap at all times.\n+   * @param monitor             for monitoring successful and failed allocations and which factory was selected.\n+   * @return a {@link NumberArrayFactory} which tries to allocation off-heap, then potentially on heap\n+   * and lastly falls back to allocating inside the given {@code pageCache}.\n+   */\n+  static NumberArrayFactory auto(PageCache pageCache, File dir, boolean allowHeapAllocation, Monitor monitor)\n+  {\n+    PageCachedNumberArrayFactory pagedArrayFactory = new PageCachedNumberArrayFactory(pageCache, dir);\n+    ChunkedNumberArrayFactory chunkedArrayFactory = new ChunkedNumberArrayFactory(monitor,\n+        allocationAlternatives(allowHeapAllocation, pagedArrayFactory));\n+    return new Auto(monitor, allocationAlternatives(allowHeapAllocation, chunkedArrayFactory));\n+  }\n+\n+  /**\n+   * @param allowHeapAllocation whether or not to include heap allocation as an alternative.\n+   * @param additional          other means of allocation to try after the standard off/on heap alternatives.\n+   * @return an array of {@link NumberArrayFactory} with the desired alternatives.\n+   */\n+  static NumberArrayFactory[] allocationAlternatives(boolean allowHeapAllocation, NumberArrayFactory... additional)\n+  {\n+    List<NumberArrayFactory> result = new ArrayList<>(Collections.singletonList(OFF_HEAP));\n+    if (allowHeapAllocation)\n+    {\n+      result.add(HEAP);\n+    }\n+    result.addAll(asList(additional));\n+    return result.toArray(new NumberArrayFactory[result.size()]);\n+  }\n \n-        public Throwable getFailure()\n-        {\n-            return failure;\n-        }\n+  class AllocationFailure\n+  {\n+    private final Throwable failure;\n+    private final NumberArrayFactory factory;\n \n-        public NumberArrayFactory getFactory()\n-        {\n-            return factory;\n-        }\n+    AllocationFailure(Throwable failure, NumberArrayFactory factory)\n+    {\n+      this.failure = failure;\n+      this.factory = factory;\n     }\n \n-    /**\n-     * Looks at available memory and decides where the requested array fits best. Tries to allocate the whole\n-     * array with the first candidate, falling back to others as needed.\n-     */\n-    class Auto extends Adapter\n+    public Throwable getFailure()\n     {\n-        private final Monitor monitor;\n-        private final NumberArrayFactory[] candidates;\n-\n-        public Auto( Monitor monitor, NumberArrayFactory... candidates )\n-        {\n-            Objects.requireNonNull( monitor );\n-            this.monitor = monitor;\n-            this.candidates = candidates;\n-        }\n+      return failure;\n+    }\n \n-        @Override\n-        public LongArray newLongArray( long length, long defaultValue, long base )\n-        {\n-            return tryAllocate( length, 8, f -> f.newLongArray( length, defaultValue, base ) );\n-        }\n+    public NumberArrayFactory getFactory()\n+    {\n+      return factory;\n+    }\n+  }\n+\n+  /**\n+   * Looks at available memory and decides where the requested array fits best. Tries to allocate the whole\n+   * array with the first candidate, falling back to others as needed.\n+   */\n+  class Auto extends Adapter\n+  {\n+    private final Monitor monitor;\n+    private final NumberArrayFactory[] candidates;\n+\n+    public Auto(Monitor monitor, NumberArrayFactory... candidates)\n+    {\n+      Objects.requireNonNull(monitor);\n+      this.monitor = monitor;\n+      this.candidates = candidates;\n+    }\n \n-        @Override\n-        public IntArray newIntArray( long length, int defaultValue, long base )\n-        {\n-            return tryAllocate( length, 4, f -> f.newIntArray( length, defaultValue, base ) );\n-        }\n+    @Override\n+    public LongArray newLongArray(long length, long defaultValue, long base)\n+    {\n+      return tryAllocate(length, 8, f -> f.newLongArray(length, defaultValue, base));\n+    }\n \n-        @Override\n-        public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n-        {\n-            return tryAllocate( length, defaultValue.length, f -> f.newByteArray( length, defaultValue, base ) );\n-        }\n+    @Override\n+    public IntArray newIntArray(long length, int defaultValue, long base)\n+    {\n+      return tryAllocate(length, 4, f -> f.newIntArray(length, defaultValue, base));\n+    }\n \n-        private <T extends NumberArray<? extends T>> T tryAllocate( long length, int itemSize,\n-                Function<NumberArrayFactory,T> allocator )\n-        {\n-            List<AllocationFailure> failures = new ArrayList<>();\n-            Error error = null;\n-            for ( NumberArrayFactory candidate : candidates )\n-            {\n-                try\n-                {\n-                    try\n-                    {\n-                        T array = allocator.apply( candidate );\n-                        monitor.allocationSuccessful( length * itemSize, candidate, failures );\n-                        return array;\n-                    }\n-                    catch ( ArithmeticException e )\n-                    {\n-                        throw new OutOfMemoryError( e.getMessage() );\n-                    }\n-                }\n-                catch ( OutOfMemoryError | NativeMemoryAllocationRefusedError e )\n-                {   // Alright let's try the next one\n-                    if ( error == null )\n-                    {\n-                        error = e;\n-                    }\n-                    else\n-                    {\n-                        e.addSuppressed( error );\n-                        error = e;\n-                    }\n-                    failures.add( new AllocationFailure( e, candidate ) );\n-                }\n-            }\n-            throw error( length, itemSize, error );\n-        }\n+    @Override\n+    public ByteArray newByteArray(long length, byte[] defaultValue, long base)\n+    {\n+      return tryAllocate(length, defaultValue.length, f -> f.newByteArray(length, defaultValue, base));\n+    }\n \n-        private Error error( long length, int itemSize, Error error )\n+    private <T extends NumberArray<? extends T>> T tryAllocate(long length, int itemSize,\n+                                                               Function<NumberArrayFactory, T> allocator)\n+    {\n+      List<AllocationFailure> failures = new ArrayList<>();\n+      Error error = null;\n+      for (NumberArrayFactory candidate : candidates)\n+      {\n+        try\n         {\n-            return Exceptions.withMessage( error, format( \"%s: Not enough memory available for allocating %s, tried %s\",\n-                    error.getMessage(), bytes( length * itemSize ), Arrays.toString( candidates ) ) );\n+          try\n+          {\n+            T array = allocator.apply(candidate);\n+            monitor.allocationSuccessful(length * itemSize, candidate, failures);\n+            return array;\n+          } catch (ArithmeticException e)\n+          {\n+            throw new OutOfMemoryError(e.getMessage());\n+          }\n+        } catch (OutOfMemoryError | NativeMemoryAllocationRefusedError e)\n+        {   // Alright let's try the next one\n+          if (error == null)\n+          {\n+            error = e;\n+          } else\n+          {\n+            e.addSuppressed(error);\n+            error = e;\n+          }\n+          failures.add(new AllocationFailure(e, candidate));\n         }\n-\n+      }\n+      throw error(length, itemSize, error);\n     }\n \n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @return a fixed size {@link IntArray}.\n-     */\n-    default IntArray newIntArray( long length, int defaultValue )\n+    private Error error(long length, int itemSize, Error error)\n     {\n-        return newIntArray( length, defaultValue, 0 );\n+      return Exceptions.withMessage(error, format(\"%s: Not enough memory available for allocating %s, tried %s\",\n+          error.getMessage(), bytes(length * itemSize), Arrays.toString(candidates)));\n     }\n \n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @param base base index to rebase all requested indexes with.\n-     * @return a fixed size {@link IntArray}.\n-     */\n-    IntArray newIntArray( long length, int defaultValue, long base );\n-\n-    /**\n-     * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n-     * @param defaultValue value which will represent unset values.\n-     * @return dynamically growing {@link IntArray}.\n-     */\n-    IntArray newDynamicIntArray( long chunkSize, int defaultValue );\n-\n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @return a fixed size {@link LongArray}.\n-     */\n-    default LongArray newLongArray( long length, long defaultValue )\n+  }\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @return a fixed size {@link IntArray}.\n+   */\n+  default IntArray newIntArray(long length, int defaultValue)\n+  {\n+    return newIntArray(length, defaultValue, 0);\n+  }\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @param base         base index to rebase all requested indexes with.\n+   * @return a fixed size {@link IntArray}.\n+   */\n+  IntArray newIntArray(long length, int defaultValue, long base);\n+\n+  /**\n+   * @param chunkSize    the size of each array (number of items). Where new chunks are added when needed.\n+   * @param defaultValue value which will represent unset values.\n+   * @return dynamically growing {@link IntArray}.\n+   */\n+  IntArray newDynamicIntArray(long chunkSize, int defaultValue);\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @return a fixed size {@link LongArray}.\n+   */\n+  default LongArray newLongArray(long length, long defaultValue)\n+  {\n+    return newLongArray(length, defaultValue, 0);\n+  }\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @param base         base index to rebase all requested indexes with.\n+   * @return a fixed size {@link LongArray}.\n+   */\n+  LongArray newLongArray(long length, long defaultValue, long base);\n+\n+  /**\n+   * @param chunkSize    the size of each array (number of items). Where new chunks are added when needed.\n+   * @param defaultValue value which will represent unset values.\n+   * @return dynamically growing {@link LongArray}.\n+   */\n+  LongArray newDynamicLongArray(long chunkSize, long defaultValue);\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @return a fixed size {@link ByteArray}.\n+   */\n+  default ByteArray newByteArray(long length, byte[] defaultValue)\n+  {\n+    return newByteArray(length, defaultValue, 0);\n+  }\n+\n+  /**\n+   * @param length       size of the array.\n+   * @param defaultValue value which will represent unset values.\n+   * @param base         base index to rebase all requested indexes with.\n+   * @return a fixed size {@link ByteArray}.\n+   */\n+  ByteArray newByteArray(long length, byte[] defaultValue, long base);\n+\n+  /**\n+   * @param chunkSize    the size of each array (number of items). Where new chunks are added when needed.\n+   * @param defaultValue value which will represent unset values.\n+   * @return dynamically growing {@link ByteArray}.\n+   */\n+  ByteArray newDynamicByteArray(long chunkSize, byte[] defaultValue);\n+\n+  /**\n+   * Implements the dynamic array methods, because they are the same in most implementations.\n+   */\n+\n+  abstract class Adapter implements NumberArrayFactory\n+  {\n+    @Override\n+    public IntArray newDynamicIntArray(long chunkSize, int defaultValue)\n     {\n-        return newLongArray( length, defaultValue, 0 );\n+      return new DynamicIntArray(this, chunkSize, defaultValue);\n     }\n \n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @param base base index to rebase all requested indexes with.\n-     * @return a fixed size {@link LongArray}.\n-     */\n-    LongArray newLongArray( long length, long defaultValue, long base );\n-\n-    /**\n-     * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n-     * @param defaultValue value which will represent unset values.\n-     * @return dynamically growing {@link LongArray}.\n-     */\n-    LongArray newDynamicLongArray( long chunkSize, long defaultValue );\n-\n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @return a fixed size {@link ByteArray}.\n-     */\n-    default ByteArray newByteArray( long length, byte[] defaultValue )\n+    @Override\n+    public LongArray newDynamicLongArray(long chunkSize, long defaultValue)\n     {\n-        return newByteArray( length, defaultValue, 0 );\n+      return new DynamicLongArray(this, chunkSize, defaultValue);\n     }\n \n-    /**\n-     * @param length size of the array.\n-     * @param defaultValue value which will represent unset values.\n-     * @param base base index to rebase all requested indexes with.\n-     * @return a fixed size {@link ByteArray}.\n-     */\n-    ByteArray newByteArray( long length, byte[] defaultValue, long base );\n-\n-    /**\n-     * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n-     * @param defaultValue value which will represent unset values.\n-     * @return dynamically growing {@link ByteArray}.\n-     */\n-    ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue );\n-\n-    /**\n-     * Implements the dynamic array methods, because they are the same in most implementations.\n-     */\n-\n-    abstract class Adapter implements NumberArrayFactory\n+    @Override\n+    public ByteArray newDynamicByteArray(long chunkSize, byte[] defaultValue)\n     {\n-        @Override\n-        public IntArray newDynamicIntArray( long chunkSize, int defaultValue )\n-        {\n-            return new DynamicIntArray( this, chunkSize, defaultValue );\n-        }\n-\n-        @Override\n-        public LongArray newDynamicLongArray( long chunkSize, long defaultValue )\n-        {\n-            return new DynamicLongArray( this, chunkSize, defaultValue );\n-        }\n-\n-        @Override\n-        public ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue )\n-        {\n-            return new DynamicByteArray( this, chunkSize, defaultValue );\n-        }\n+      return new DynamicByteArray(this, chunkSize, defaultValue);\n     }\n+  }\n }\n",
            "diff_size": 458
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3082/NumberArrayFactory.java\nindex 8fa03869aa3..8cad8f5e983 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3082/NumberArrayFactory.java\n@@ -56,7 +56,8 @@ public interface NumberArrayFactory\n         void allocationSuccessful( long memory, NumberArrayFactory successfulFactory, Iterable<AllocationFailure> attemptedAllocationFailures );\n     }\n \n-    Monitor NO_MONITOR = ( memory, successfulFactory, attemptedAllocationFailures ) -> { /* no-op */ };\n+    Monitor NO_MONITOR = ( memory, successfulFactory, attemptedAllocationFailures ) ->\n+{ /* no-op */ };\n \n     /**\n      * Puts arrays inside the heap.\n@@ -146,7 +147,7 @@ public interface NumberArrayFactory\n         PageCachedNumberArrayFactory pagedArrayFactory = new PageCachedNumberArrayFactory( pageCache, dir );\n         ChunkedNumberArrayFactory chunkedArrayFactory = new ChunkedNumberArrayFactory( monitor,\n                 allocationAlternatives( allowHeapAllocation, pagedArrayFactory ) );\n-        return new Auto( monitor, allocationAlternatives( allowHeapAllocation, chunkedArrayFactory ) );\n+return new Auto( monitor, allocationAlternatives( allowHeapAllocation, chunkedArrayFactory ) );\n     }\n \n     /**\n@@ -221,8 +222,7 @@ public interface NumberArrayFactory\n             return tryAllocate( length, defaultValue.length, f -> f.newByteArray( length, defaultValue, base ) );\n         }\n \n-        private <T extends NumberArray<? extends T>> T tryAllocate( long length, int itemSize,\n-                Function<NumberArrayFactory,T> allocator )\n+        private <T extends NumberArray<? extends T>> T tryAllocate( long length, int itemSize, Function<NumberArrayFactory,T> allocator )\n         {\n             List<AllocationFailure> failures = new ArrayList<>();\n             Error error = null;\n@@ -242,7 +242,8 @@ public interface NumberArrayFactory\n                     }\n                 }\n                 catch ( OutOfMemoryError | NativeMemoryAllocationRefusedError e )\n-                {   // Alright let's try the next one\n+                {\n+    // Alright let's try the next one\n                     if ( error == null )\n                     {\n                         error = e;\n@@ -263,7 +264,6 @@ public interface NumberArrayFactory\n             return Exceptions.withMessage( error, format( \"%s: Not enough memory available for allocating %s, tried %s\",\n                     error.getMessage(), bytes( length * itemSize ), Arrays.toString( candidates ) ) );\n         }\n-\n     }\n \n     /**\n@@ -344,8 +344,7 @@ public interface NumberArrayFactory\n     /**\n      * Implements the dynamic array methods, because they are the same in most implementations.\n      */\n-\n-    abstract class Adapter implements NumberArrayFactory\n+abstract class Adapter implements NumberArrayFactory\n     {\n         @Override\n         public IntArray newDynamicIntArray( long chunkSize, int defaultValue )\n@@ -365,4 +364,4 @@ public interface NumberArrayFactory\n             return new DynamicByteArray( this, chunkSize, defaultValue );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "235",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "61",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "271",
                    "column": "155",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "328",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 252).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "355",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 252).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "360",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 367).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "361",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "362",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 440).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "363",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 434).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "365",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "367",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "368",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 443).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "369",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "370",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 435).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "371",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "373",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "374",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 445).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "375",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "376",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 435).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "377",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 371).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "378",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 367).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3082/NumberArrayFactory.java\nindex 8fa03869aa3..7eeaeac91cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3082/NumberArrayFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3082/NumberArrayFactory.java\n@@ -26,15 +26,16 @@ import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n import java.util.function.Function;\n-\n import org.neo4j.helpers.Exceptions;\n import org.neo4j.io.pagecache.PageCache;\n import org.neo4j.memory.GlobalMemoryTracker;\n import org.neo4j.unsafe.impl.internal.dragons.NativeMemoryAllocationRefusedError;\n-\n import static java.lang.String.format;\n+\n import static java.util.Arrays.asList;\n+\n import static org.neo4j.helpers.Format.bytes;\n+\n import static org.neo4j.helpers.Numbers.safeCastLongToInt;\n \n /**\n@@ -42,6 +43,7 @@ import static org.neo4j.helpers.Numbers.safeCastLongToInt;\n  * memory the arrays will be placed, either in {@link #HEAP}, {@link #OFF_HEAP}, or use an auto allocator which\n  * will have each instance placed where it fits best, favoring the primary candidates.\n  */\n+\n public interface NumberArrayFactory\n {\n     interface Monitor\n@@ -53,77 +55,80 @@ public interface NumberArrayFactory\n          * @param successfulFactory the {@link NumberArrayFactory} which proved successful allocating this amount of memory.\n          * @param attemptedAllocationFailures list of failed attempts to allocate this memory in other allocators.\n          */\n-        void allocationSuccessful( long memory, NumberArrayFactory successfulFactory, Iterable<AllocationFailure> attemptedAllocationFailures );\n-    }\n+        void allocationSuccessful( long memory, NumberArrayFactory successfulFactory, Iterable<AllocationFailure> attemptedAllocationFailures )\n+        ;} Monitor NO_MONITOR = ( memory, successfulFactory, attemptedAllocationFailures ) ->\n+           { /* no-op */\n+           }\n \n-    Monitor NO_MONITOR = ( memory, successfulFactory, attemptedAllocationFailures ) -> { /* no-op */ };\n+           ;\n \n     /**\n      * Puts arrays inside the heap.\n-     */\n-    NumberArrayFactory HEAP = new Adapter()\n+     */ NumberArrayFactory HEAP = new Adapter()\n+{\n+    @Override\n+    public IntArray newIntArray( long length, int defaultValue, long base )\n     {\n-        @Override\n-        public IntArray newIntArray( long length, int defaultValue, long base )\n-        {\n-            return new HeapIntArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n+        return new HeapIntArray( safeCastLongToInt( length ), defaultValue, base );\n+    }\n \n-        @Override\n-        public LongArray newLongArray( long length, long defaultValue, long base )\n-        {\n-            return new HeapLongArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n+    @Override\n+    public LongArray newLongArray( long length, long defaultValue, long base )\n+    {\n+        return new HeapLongArray( safeCastLongToInt( length ), defaultValue, base );\n+    }\n \n-        @Override\n-        public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n-        {\n-            return new HeapByteArray( safeCastLongToInt( length ), defaultValue, base );\n-        }\n+    @Override\n+    public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n+    {\n+        return new HeapByteArray( safeCastLongToInt( length ), defaultValue, base );\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"HEAP\";\n-        }\n-    };\n+    @Override\n+    public String toString()\n+    {\n+        return \"HEAP\";\n+    }\n+}\n+\n+                                                                  ;\n \n     /**\n      * Puts arrays off-heap, using unsafe calls.\n-     */\n-    NumberArrayFactory OFF_HEAP = new Adapter()\n+     */ NumberArrayFactory OFF_HEAP = new Adapter()\n+{\n+    @Override\n+    public IntArray newIntArray( long length, int defaultValue, long base )\n     {\n-        @Override\n-        public IntArray newIntArray( long length, int defaultValue, long base )\n-        {\n-            return new OffHeapIntArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n+        return new OffHeapIntArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n+    }\n \n-        @Override\n-        public LongArray newLongArray( long length, long defaultValue, long base )\n-        {\n-            return new OffHeapLongArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n+    @Override\n+    public LongArray newLongArray( long length, long defaultValue, long base )\n+    {\n+        return new OffHeapLongArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n+    }\n \n-        @Override\n-        public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n-        {\n-            return new OffHeapByteArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n-        }\n+    @Override\n+    public ByteArray newByteArray( long length, byte[] defaultValue, long base )\n+    {\n+        return new OffHeapByteArray( length, defaultValue, base, GlobalMemoryTracker.INSTANCE );\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"OFF_HEAP\";\n-        }\n-    };\n+    @Override\n+    public String toString()\n+    {\n+        return \"OFF_HEAP\";\n+    }\n+}\n+\n+                                                                                                                                      ;\n \n     /**\n      * Used as part of the fallback strategy for {@link Auto}. Tries to split up fixed-size arrays\n      * ({@link #newLongArray(long, long)} and {@link #newIntArray(long, int)} into smaller chunks where\n      * some can live on heap and some off heap.\n-     */\n-    NumberArrayFactory CHUNKED_FIXED_SIZE = new ChunkedNumberArrayFactory( NumberArrayFactory.NO_MONITOR );\n+     */ NumberArrayFactory CHUNKED_FIXED_SIZE = new ChunkedNumberArrayFactory( NumberArrayFactory.NO_MONITOR );\n \n     /**\n      * {@link Auto} factory which uses JVM stats for gathering information about available memory.\n@@ -144,8 +149,7 @@ public interface NumberArrayFactory\n     static NumberArrayFactory auto( PageCache pageCache, File dir, boolean allowHeapAllocation, Monitor monitor )\n     {\n         PageCachedNumberArrayFactory pagedArrayFactory = new PageCachedNumberArrayFactory( pageCache, dir );\n-        ChunkedNumberArrayFactory chunkedArrayFactory = new ChunkedNumberArrayFactory( monitor,\n-                allocationAlternatives( allowHeapAllocation, pagedArrayFactory ) );\n+        ChunkedNumberArrayFactory chunkedArrayFactory = new ChunkedNumberArrayFactory( monitor, allocationAlternatives( allowHeapAllocation, pagedArrayFactory ) );\n         return new Auto( monitor, allocationAlternatives( allowHeapAllocation, chunkedArrayFactory ) );\n     }\n \n@@ -154,6 +158,7 @@ public interface NumberArrayFactory\n      * @param additional other means of allocation to try after the standard off/on heap alternatives.\n      * @return an array of {@link NumberArrayFactory} with the desired alternatives.\n      */\n+\n     static NumberArrayFactory[] allocationAlternatives( boolean allowHeapAllocation, NumberArrayFactory... additional )\n     {\n         List<NumberArrayFactory> result = new ArrayList<>( Collections.singletonList( OFF_HEAP ) );\n@@ -161,6 +166,7 @@ public interface NumberArrayFactory\n         {\n             result.add( HEAP );\n         }\n+\n         result.addAll( asList( additional ) );\n         return result.toArray( new NumberArrayFactory[result.size()] );\n     }\n@@ -191,6 +197,7 @@ public interface NumberArrayFactory\n      * Looks at available memory and decides where the requested array fits best. Tries to allocate the whole\n      * array with the first candidate, falling back to others as needed.\n      */\n+\n     class Auto extends Adapter\n     {\n         private final Monitor monitor;\n@@ -221,19 +228,18 @@ public interface NumberArrayFactory\n             return tryAllocate( length, defaultValue.length, f -> f.newByteArray( length, defaultValue, base ) );\n         }\n \n-        private <T extends NumberArray<? extends T>> T tryAllocate( long length, int itemSize,\n-                Function<NumberArrayFactory,T> allocator )\n+        private <T extends NumberArray<? extends T>> T tryAllocate( long length, int itemSize, Function<NumberArrayFactory,T> allocator )\n         {\n             List<AllocationFailure> failures = new ArrayList<>();\n             Error error = null;\n-            for ( NumberArrayFactory candidate : candidates )\n+            for( NumberArrayFactory candidate : candidates)\n             {\n                 try\n                 {\n                     try\n                     {\n                         T array = allocator.apply( candidate );\n-                        monitor.allocationSuccessful( length * itemSize, candidate, failures );\n+                        monitor.allocationSuccessful( length* itemSize, candidate, failures );\n                         return array;\n                     }\n                     catch ( ArithmeticException e )\n@@ -252,18 +258,18 @@ public interface NumberArrayFactory\n                         e.addSuppressed( error );\n                         error = e;\n                     }\n+\n                     failures.add( new AllocationFailure( e, candidate ) );\n                 }\n             }\n+\n             throw error( length, itemSize, error );\n         }\n \n         private Error error( long length, int itemSize, Error error )\n         {\n-            return Exceptions.withMessage( error, format( \"%s: Not enough memory available for allocating %s, tried %s\",\n-                    error.getMessage(), bytes( length * itemSize ), Arrays.toString( candidates ) ) );\n+            return Exceptions.withMessage( error, format( \"%s: Not enough memory available for allocating %s, tried %s\", error.getMessage(), bytes( length* itemSize ), Arrays.toString( candidates ) ) );\n         }\n-\n     }\n \n     /**\n@@ -271,6 +277,7 @@ public interface NumberArrayFactory\n      * @param defaultValue value which will represent unset values.\n      * @return a fixed size {@link IntArray}.\n      */\n+\n     default IntArray newIntArray( long length, int defaultValue )\n     {\n         return newIntArray( length, defaultValue, 0 );\n@@ -282,14 +289,16 @@ public interface NumberArrayFactory\n      * @param base base index to rebase all requested indexes with.\n      * @return a fixed size {@link IntArray}.\n      */\n-    IntArray newIntArray( long length, int defaultValue, long base );\n+\n+    IntArray newIntArray( long length, int defaultValue, long base )\n+    ;\n \n     /**\n      * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n      * @param defaultValue value which will represent unset values.\n      * @return dynamically growing {@link IntArray}.\n-     */\n-    IntArray newDynamicIntArray( long chunkSize, int defaultValue );\n+     */ IntArray newDynamicIntArray( long chunkSize, int defaultValue )\n+                                                                                                                                                                                                                                                          ;\n \n     /**\n      * @param length size of the array.\n@@ -307,14 +316,16 @@ public interface NumberArrayFactory\n      * @param base base index to rebase all requested indexes with.\n      * @return a fixed size {@link LongArray}.\n      */\n-    LongArray newLongArray( long length, long defaultValue, long base );\n+\n+    LongArray newLongArray( long length, long defaultValue, long base )\n+    ;\n \n     /**\n      * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n      * @param defaultValue value which will represent unset values.\n      * @return dynamically growing {@link LongArray}.\n-     */\n-    LongArray newDynamicLongArray( long chunkSize, long defaultValue );\n+     */ LongArray newDynamicLongArray( long chunkSize, long defaultValue )\n+                                                                                                                                                                                                                                                           ;\n \n     /**\n      * @param length size of the array.\n@@ -332,37 +343,38 @@ public interface NumberArrayFactory\n      * @param base base index to rebase all requested indexes with.\n      * @return a fixed size {@link ByteArray}.\n      */\n-    ByteArray newByteArray( long length, byte[] defaultValue, long base );\n+\n+    ByteArray newByteArray( long length, byte[] defaultValue, long base )\n+    ;\n \n     /**\n      * @param chunkSize the size of each array (number of items). Where new chunks are added when needed.\n      * @param defaultValue value which will represent unset values.\n      * @return dynamically growing {@link ByteArray}.\n-     */\n-    ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue );\n+     */ ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue )\n+                                                                                                                                                                                                                                                           ;\n \n     /**\n      * Implements the dynamic array methods, because they are the same in most implementations.\n-     */\n-\n-    abstract class Adapter implements NumberArrayFactory\n-    {\n-        @Override\n-        public IntArray newDynamicIntArray( long chunkSize, int defaultValue )\n-        {\n-            return new DynamicIntArray( this, chunkSize, defaultValue );\n-        }\n-\n-        @Override\n-        public LongArray newDynamicLongArray( long chunkSize, long defaultValue )\n-        {\n-            return new DynamicLongArray( this, chunkSize, defaultValue );\n-        }\n-\n-        @Override\n-        public ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue )\n-        {\n-            return new DynamicByteArray( this, chunkSize, defaultValue );\n-        }\n-    }\n-}\n+     */ abstract class Adapter implements NumberArrayFactory\n+                                                                                                                                                                                                                                                                                                                                                                              {\n+                                                                                                                                                                                                                                                                                                                                                                                  @Override\n+                                                                                                                                                                                                                                                                                                                                                                                  public IntArray newDynamicIntArray( long chunkSize, int defaultValue )\n+                                                                                                                                                                                                                                                                                                                                                                                  {\n+                                                                                                                                                                                                                                                                                                                                                                                      return new DynamicIntArray( this, chunkSize, defaultValue );\n+                                                                                                                                                                                                                                                                                                                                                                                  }\n+\n+                                                                                                                                                                                                                                                                                                                                                                                  @Override\n+                                                                                                                                                                                                                                                                                                                                                                                  public LongArray newDynamicLongArray( long chunkSize, long defaultValue )\n+                                                                                                                                                                                                                                                                                                                                                                                  {\n+                                                                                                                                                                                                                                                                                                                                                                                      return new DynamicLongArray( this, chunkSize, defaultValue );\n+                                                                                                                                                                                                                                                                                                                                                                                  }\n+\n+                                                                                                                                                                                                                                                                                                                                                                                  @Override\n+                                                                                                                                                                                                                                                                                                                                                                                  public ByteArray newDynamicByteArray( long chunkSize, byte[] defaultValue )\n+                                                                                                                                                                                                                                                                                                                                                                                  {\n+                                                                                                                                                                                                                                                                                                                                                                                      return new DynamicByteArray( this, chunkSize, defaultValue );\n+                                                                                                                                                                                                                                                                                                                                                                                  }\n+                                                                                                                                                                                                                                                                                                                                                                              }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 120
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1070",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "121",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1070/ProtocolHandshaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1070/ProtocolHandshaker.java\nindex cb12d1df5a4..ea4975697d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1070/ProtocolHandshaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1070/ProtocolHandshaker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport.pipeline;\n \n import io.netty.buffer.ByteBuf;\n@@ -49,38 +50,38 @@ public class ProtocolHandshaker extends ChannelInboundHandlerAdapter\n     private ByteBuf handshakeBuffer;\n     private BoltProtocol protocol;\n \n-    public ProtocolHandshaker( BoltProtocolFactory boltProtocolFactory, BoltChannel boltChannel, LogProvider logging,\n-            boolean encryptionRequired, boolean encrypted )\n+    public ProtocolHandshaker(BoltProtocolFactory boltProtocolFactory, BoltChannel boltChannel, LogProvider logging,\n+                              boolean encryptionRequired, boolean encrypted)\n     {\n         this.boltProtocolFactory = boltProtocolFactory;\n         this.boltChannel = boltChannel;\n-        this.log = logging.getLog( getClass() );\n+        this.log = logging.getLog(getClass());\n         this.encryptionRequired = encryptionRequired;\n         this.encrypted = encrypted;\n     }\n \n     @Override\n-    public void handlerAdded( ChannelHandlerContext ctx )\n+    public void handlerAdded(ChannelHandlerContext ctx)\n     {\n-        handshakeBuffer = ctx.alloc().buffer( HANDSHAKE_BUFFER_SIZE, HANDSHAKE_BUFFER_SIZE );\n+        handshakeBuffer = ctx.alloc().buffer(HANDSHAKE_BUFFER_SIZE, HANDSHAKE_BUFFER_SIZE);\n     }\n \n     @Override\n-    public void handlerRemoved( ChannelHandlerContext ctx )\n+    public void handlerRemoved(ChannelHandlerContext ctx)\n     {\n         handshakeBuffer.release();\n         handshakeBuffer = null;\n     }\n \n     @Override\n-    public void channelRead( ChannelHandlerContext ctx, Object msg )\n+    public void channelRead(ChannelHandlerContext ctx, Object msg)\n     {\n         try\n         {\n-            if ( !(msg instanceof ByteBuf) )\n+            if (!(msg instanceof ByteBuf))\n             {\n                 // we know it is HTTP as we only have HTTP (for Websocket) and TCP handlers installed.\n-                log.warn( \"Unsupported connection type: 'HTTP'. Bolt protocol only operates over a TCP connection or WebSocket.\" );\n+                log.warn(\"Unsupported connection type: 'HTTP'. Bolt protocol only operates over a TCP connection or WebSocket.\");\n                 ctx.close();\n                 return;\n             }\n@@ -89,74 +90,71 @@ public class ProtocolHandshaker extends ChannelInboundHandlerAdapter\n             assertEncryptedIfRequired();\n \n             // try to fill out handshake buffer\n-            handshakeBuffer.writeBytes( buf, Math.min( buf.readableBytes(), handshakeBuffer.writableBytes() ) );\n+            handshakeBuffer.writeBytes(buf, Math.min(buf.readableBytes(), handshakeBuffer.writableBytes()));\n \n             // we filled up the handshake buffer\n-            if ( handshakeBuffer.writableBytes() == 0 )\n+            if (handshakeBuffer.writableBytes() == 0)\n             {\n-                if ( verifyBoltPreamble() )\n+                if (verifyBoltPreamble())\n                 {\n                     // let's handshake\n-                    if ( performHandshake() )\n+                    if (performHandshake())\n                     {\n                         // announce selected protocol to the client\n-                        ctx.writeAndFlush( ctx.alloc().buffer( 4 ).writeInt( protocol.version().toInt() ) );\n+                        ctx.writeAndFlush(ctx.alloc().buffer(4).writeInt(protocol.version().toInt()));\n \n                         // install related protocol handlers into the pipeline\n                         protocol.install();\n-                        ctx.pipeline().remove( this );\n+                        ctx.pipeline().remove(this);\n \n                         // if we somehow end up with more data in the incoming buffers, let's send them\n                         // down to the pipeline for the chosen protocol handlers to handle whatever they\n                         // are.\n-                        if ( buf.readableBytes() > 0 )\n+                        if (buf.readableBytes() > 0)\n                         {\n-                            ctx.fireChannelRead( buf.readRetainedSlice( buf.readableBytes() ) );\n+                            ctx.fireChannelRead(buf.readRetainedSlice(buf.readableBytes()));\n                         }\n-                    }\n-                    else\n+                    } else\n                     {\n-                        ctx.writeAndFlush( ctx.alloc().buffer().writeBytes( new byte[]{0, 0, 0, 0} ) ).addListener( ChannelFutureListener.CLOSE );\n+                        ctx.writeAndFlush(ctx.alloc().buffer().writeBytes(new byte[] {0, 0, 0, 0})).addListener(ChannelFutureListener.CLOSE);\n                     }\n-                }\n-                else\n+                } else\n                 {\n                     ctx.close();\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            ReferenceCountUtil.release( msg );\n+            ReferenceCountUtil.release(msg);\n         }\n     }\n \n     @Override\n-    public void exceptionCaught( ChannelHandlerContext ctx, Throwable cause )\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     {\n-        log.error( \"Fatal error occurred during protocol handshaking: \" + ctx.channel(), cause );\n+        log.error(\"Fatal error occurred during protocol handshaking: \" + ctx.channel(), cause);\n         ctx.close();\n     }\n \n     @Override\n-    public void channelInactive( ChannelHandlerContext ctx )\n+    public void channelInactive(ChannelHandlerContext ctx)\n     {\n         ctx.close();\n     }\n \n     private void assertEncryptedIfRequired()\n     {\n-        if ( encryptionRequired && !encrypted )\n+        if (encryptionRequired && !encrypted)\n         {\n-            throw new SecurityException( \"An unencrypted connection attempt was made where encryption is required.\" );\n+            throw new SecurityException(\"An unencrypted connection attempt was made where encryption is required.\");\n         }\n     }\n \n     private boolean verifyBoltPreamble()\n     {\n-        if ( handshakeBuffer.getInt( 0 ) != BOLT_MAGIC_PREAMBLE )\n+        if (handshakeBuffer.getInt(0) != BOLT_MAGIC_PREAMBLE)\n         {\n-            log.debug( \"Invalid Bolt handshake signature. Expected 0x%08X, but got: 0x%08X\", BOLT_MAGIC_PREAMBLE, handshakeBuffer.getInt( 0 ) );\n+            log.debug(\"Invalid Bolt handshake signature. Expected 0x%08X, but got: 0x%08X\", BOLT_MAGIC_PREAMBLE, handshakeBuffer.getInt(0));\n             return false;\n         }\n \n@@ -167,36 +165,36 @@ public class ProtocolHandshaker extends ChannelInboundHandlerAdapter\n     {\n         ArrayList<BoltProtocolVersion> suggestions = new ArrayList<BoltProtocolVersion>();\n \n-        for ( int i = 0; i < 4; i++ )\n+        for (int i = 0; i < 4; i++)\n         {\n-            int rawBytes = handshakeBuffer.getInt( (i + 1) * Integer.BYTES );\n-            int major = BoltProtocolVersion.getMajorFromRawBytes( rawBytes );\n-            int minor = BoltProtocolVersion.getMinorFromRawBytes( rawBytes );\n-            int range = BoltProtocolVersion.getRangeFromRawBytes( rawBytes );\n+            int rawBytes = handshakeBuffer.getInt((i + 1) * Integer.BYTES);\n+            int major = BoltProtocolVersion.getMajorFromRawBytes(rawBytes);\n+            int minor = BoltProtocolVersion.getMinorFromRawBytes(rawBytes);\n+            int range = BoltProtocolVersion.getRangeFromRawBytes(rawBytes);\n \n-            for ( int j = 0; j <= range; j++ )   //Range is inclusive thus the use of <=\n+            for (int j = 0; j <= range; j++)   //Range is inclusive thus the use of <=\n             {\n-                int newMinor = Math.max( minor - j, 0 );\n-                BoltProtocolVersion suggestion = new BoltProtocolVersion( major, newMinor );\n+                int newMinor = Math.max(minor - j, 0);\n+                BoltProtocolVersion suggestion = new BoltProtocolVersion(major, newMinor);\n \n-                protocol = boltProtocolFactory.create( suggestion, boltChannel );\n-                if ( protocol != null )\n+                protocol = boltProtocolFactory.create(suggestion, boltChannel);\n+                if (protocol != null)\n                 {\n                     break;\n                 }\n-                suggestions.add( suggestion );\n+                suggestions.add(suggestion);\n             }\n \n-            if ( protocol != null )\n+            if (protocol != null)\n             {\n                 break;\n             }\n         }\n \n-        if ( protocol == null )\n+        if (protocol == null)\n         {\n-            log.debug( \"Failed Bolt handshake: Bolt versions suggested by client '%s' are not supported by this server.\",\n-                       Arrays.toString( suggestions.toArray() ) );\n+            log.debug(\"Failed Bolt handshake: Bolt versions suggested by client '%s' are not supported by this server.\",\n+              Arrays.toString(suggestions.toArray()));\n         }\n \n         return protocol != null;\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1070/ProtocolHandshaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1070/ProtocolHandshaker.java\nindex cb12d1df5a4..618a5d1e5ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1070/ProtocolHandshaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1070/ProtocolHandshaker.java\n@@ -201,4 +201,4 @@ public class ProtocolHandshaker extends ChannelInboundHandlerAdapter\n \n         return protocol != null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
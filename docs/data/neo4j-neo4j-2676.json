{
    "project_name": "neo4j-neo4j",
    "error_id": "2676",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2676/DirectRecordStoreMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2676/DirectRecordStoreMigrator.java\nindex 1a66075dce1..0d889db7738 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2676/DirectRecordStoreMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2676/DirectRecordStoreMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -57,7 +58,7 @@ class DirectRecordStoreMigrator\n     private final Config config;\n     private final PageCacheTracer cacheTracer;\n \n-    DirectRecordStoreMigrator( PageCache pageCache, FileSystemAbstraction fs, Config config, PageCacheTracer cacheTracer )\n+    DirectRecordStoreMigrator(PageCache pageCache, FileSystemAbstraction fs, Config config, PageCacheTracer cacheTracer)\n     {\n         this.pageCache = pageCache;\n         this.fs = fs;\n@@ -65,41 +66,41 @@ class DirectRecordStoreMigrator\n         this.cacheTracer = cacheTracer;\n     }\n \n-    public void migrate( DatabaseLayout fromDirectoryStructure, RecordFormats fromFormat, DatabaseLayout toDirectoryStructure,\n-            RecordFormats toFormat, ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen ) throws IOException\n+    public void migrate(DatabaseLayout fromDirectoryStructure, RecordFormats fromFormat, DatabaseLayout toDirectoryStructure,\n+                        RecordFormats toFormat, ProgressReporter progressReporter, StoreType[] types, StoreType... additionalTypesToOpen) throws IOException\n     {\n-        StoreType[] storesToOpen = ArrayUtil.concat( types, additionalTypesToOpen );\n-        progressReporter.start( storesToOpen.length );\n+        StoreType[] storesToOpen = ArrayUtil.concat(types, additionalTypesToOpen);\n+        progressReporter.start(storesToOpen.length);\n \n         try (\n-                NeoStores fromStores = new StoreFactory( fromDirectoryStructure, config, new ScanOnOpenReadOnlyIdGeneratorFactory(),\n-                    pageCache, fs, fromFormat, NullLogProvider.getInstance(), cacheTracer, immutable.empty() )\n-                        .openNeoStores( true, storesToOpen );\n-                NeoStores toStores = new StoreFactory( toDirectoryStructure, withPersistedStoreHeadersAsConfigFrom( fromStores, storesToOpen ),\n-                    new DefaultIdGeneratorFactory( fs, immediate() ), pageCache, fs, toFormat, NullLogProvider.getInstance(), cacheTracer, immutable.empty() )\n-                        .openNeoStores( true, storesToOpen );\n-                var cursorTracer = cacheTracer.createPageCursorTracer( DIRECT_STORE_MIGRATOR_TAG ) )\n+          NeoStores fromStores = new StoreFactory(fromDirectoryStructure, config, new ScanOnOpenReadOnlyIdGeneratorFactory(),\n+            pageCache, fs, fromFormat, NullLogProvider.getInstance(), cacheTracer, immutable.empty())\n+            .openNeoStores(true, storesToOpen);\n+          NeoStores toStores = new StoreFactory(toDirectoryStructure, withPersistedStoreHeadersAsConfigFrom(fromStores, storesToOpen),\n+            new DefaultIdGeneratorFactory(fs, immediate()), pageCache, fs, toFormat, NullLogProvider.getInstance(), cacheTracer, immutable.empty())\n+            .openNeoStores(true, storesToOpen);\n+          var cursorTracer = cacheTracer.createPageCursorTracer(DIRECT_STORE_MIGRATOR_TAG))\n         {\n-            toStores.start( cursorTracer );\n-            for ( StoreType type : types )\n+            toStores.start(cursorTracer);\n+            for (StoreType type : types)\n             {\n                 // This condition will exclude counts store first and foremost.\n-                migrate( fromStores.getRecordStore( type ), toStores.getRecordStore( type ), cursorTracer );\n-                progressReporter.progress( 1 );\n+                migrate(fromStores.getRecordStore(type), toStores.getRecordStore(type), cursorTracer);\n+                progressReporter.progress(1);\n             }\n         }\n     }\n \n-    private static <RECORD extends AbstractBaseRecord> void migrate( RecordStore<RECORD> from, RecordStore<RECORD> to, PageCursorTracer cursorTracer )\n+    private static <RECORD extends AbstractBaseRecord> void migrate(RecordStore<RECORD> from, RecordStore<RECORD> to, PageCursorTracer cursorTracer)\n     {\n-        to.setHighestPossibleIdInUse( from.getHighestPossibleIdInUse( cursorTracer ) );\n+        to.setHighestPossibleIdInUse(from.getHighestPossibleIdInUse(cursorTracer));\n \n-        from.scanAllRecords( record ->\n+        from.scanAllRecords(record ->\n         {\n-            to.prepareForCommit( record, cursorTracer );\n-            to.updateRecord( record, cursorTracer );\n+            to.prepareForCommit(record, cursorTracer);\n+            to.updateRecord(record, cursorTracer);\n             return false;\n-        }, cursorTracer );\n+        }, cursorTracer);\n     }\n \n     /**\n@@ -109,23 +110,23 @@ class DirectRecordStoreMigrator\n      * in the dynamic record chain.\n      *\n      * @param legacyStores {@link NeoStores} to read dynamic record data sizes from.\n-     * @param types array of {@link StoreType} which we know that legacy stores have opened.\n+     * @param types        array of {@link StoreType} which we know that legacy stores have opened.\n      * @return a {@link Config} which mimics dynamic record data sizes from the {@code legacyStores}.\n      */\n-    private Config withPersistedStoreHeadersAsConfigFrom( NeoStores legacyStores, StoreType[] types )\n+    private Config withPersistedStoreHeadersAsConfigFrom(NeoStores legacyStores, StoreType[] types)\n     {\n-        if ( contains( types, StoreType.RELATIONSHIP_GROUP ) )\n+        if (contains(types, StoreType.RELATIONSHIP_GROUP))\n         {\n-            config.set( GraphDatabaseSettings.dense_node_threshold, legacyStores.getRelationshipGroupStore().getStoreHeaderInt() );\n+            config.set(GraphDatabaseSettings.dense_node_threshold, legacyStores.getRelationshipGroupStore().getStoreHeaderInt());\n         }\n-        if ( contains( types, StoreType.PROPERTY ) )\n+        if (contains(types, StoreType.PROPERTY))\n         {\n-            config.set( GraphDatabaseInternalSettings.array_block_size, legacyStores.getPropertyStore().getArrayStore().getRecordDataSize() );\n-            config.set( GraphDatabaseInternalSettings.string_block_size, legacyStores.getPropertyStore().getStringStore().getRecordDataSize() );\n+            config.set(GraphDatabaseInternalSettings.array_block_size, legacyStores.getPropertyStore().getArrayStore().getRecordDataSize());\n+            config.set(GraphDatabaseInternalSettings.string_block_size, legacyStores.getPropertyStore().getStringStore().getRecordDataSize());\n         }\n-        if ( contains( types, StoreType.NODE_LABEL ) )\n+        if (contains(types, StoreType.NODE_LABEL))\n         {\n-            config.set( GraphDatabaseInternalSettings.label_block_size, legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize() );\n+            config.set(GraphDatabaseInternalSettings.label_block_size, legacyStores.getNodeStore().getDynamicLabelStore().getRecordDataSize());\n         }\n         return config;\n     }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
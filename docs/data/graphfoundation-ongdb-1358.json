{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1358",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1358/QueryExecutionEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1358/QueryExecutionEngine.java\nindex 0d1b65d1828..61a32275003 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1358/QueryExecutionEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1358/QueryExecutionEngine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import java.util.Map;\n@@ -26,22 +27,22 @@ import org.neo4j.values.virtual.MapValue;\n \n public interface QueryExecutionEngine\n {\n-    Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n+  Result executeQuery(String query, MapValue parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException;\n \n-    Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n+  Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException;\n \n-    Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n+  Result profileQuery(String query, Map<String, Object> parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException;\n \n-    /**\n-     * @return {@code true} if the query is a PERIODIC COMMIT query and not an EXPLAIN query\n-     */\n-    boolean isPeriodicCommit( String query );\n+  /**\n+   * @return {@code true} if the query is a PERIODIC COMMIT query and not an EXPLAIN query\n+   */\n+  boolean isPeriodicCommit(String query);\n \n-    String prettify( String query );\n+  String prettify(String query);\n \n-    long clearQueryCaches();\n+  long clearQueryCaches();\n }\n \n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1358/QueryExecutionEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1358/QueryExecutionEngine.java\nindex 0d1b65d1828..61822c897cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1358/QueryExecutionEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1358/QueryExecutionEngine.java\n@@ -26,22 +26,15 @@ import org.neo4j.values.virtual.MapValue;\n \n public interface QueryExecutionEngine\n {\n-    Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n+    Result executeQuery( String query, MapValue parameters, TransactionalContext context ) throws QueryExecutionKernelException;\n+Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context ) throws QueryExecutionKernelException;\n+Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context ) throws QueryExecutionKernelException;\n \n-    Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n-\n-    Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException;\n-\n-    /**\n+/**\n      * @return {@code true} if the query is a PERIODIC COMMIT query and not an EXPLAIN query\n      */\n     boolean isPeriodicCommit( String query );\n-\n-    String prettify( String query );\n+String prettify( String query );\n \n     long clearQueryCaches();\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
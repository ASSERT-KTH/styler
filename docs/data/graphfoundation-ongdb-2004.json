{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2004",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2004/CacheAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2004/CacheAccess.java\nindex 4a5c50bc09d..add3d0af66d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2004/CacheAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2004/CacheAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.cache;\n \n import java.util.Collection;\n@@ -32,230 +33,230 @@ import org.neo4j.kernel.impl.store.record.PropertyRecord;\n  * Just as {@link RecordAccess} is the main access point for {@link AbstractBaseRecord} and friends,\n  * so is {@link CacheAccess} the main access point for cached values related to records, most often caching\n  * parts of records, specific to certain {@link CheckStage stages} of the consistency check.\n- *\n+ * <p>\n  * The access patterns to {@link CacheAccess} is designed to have multiple threads concurrently, and so\n  * {@link #client()} provides a {@link Client} that accesses the cache on the current thread's behalf.\n- *\n+ * <p>\n  * The cache is a compact representation of records, tied to an id, for example nodeId. There can be multiple\n  * cached values per id, selected by {@code slot}.\n  */\n public interface CacheAccess\n {\n+  /**\n+   * Client per thread for accessing cache and counts for statistics\n+   */\n+  interface Client\n+  {\n     /**\n-     * Client per thread for accessing cache and counts for statistics\n+     * Gets a cached value, put there with {@link #putToCache(long, long...)} or\n+     * {@link #putToCacheSingle(long, int, long)}.\n+     *\n+     * @param id   the entity id this cached value is tied to.\n+     * @param slot which cache slot for this id.\n+     * @return the cached value.\n      */\n-    interface Client\n-    {\n-        /**\n-         * Gets a cached value, put there with {@link #putToCache(long, long...)} or\n-         * {@link #putToCacheSingle(long, int, long)}.\n-         *\n-         * @param id the entity id this cached value is tied to.\n-         * @param slot which cache slot for this id.\n-         * @return the cached value.\n-         */\n-        long getFromCache( long id, int slot );\n-\n-        /**\n-         * Gets a cached value, put there with {@link #putToCache(long, long...)} or\n-         * {@link #putToCacheSingle(long, int, long)} and interpret field value as a boolean.\n-         * 0 will be treated as false all the rest as true.\n-         *\n-         * @param id the entity id this cached value is tied to.\n-         * @param slot which cache slot for this id.\n-         * @return false if slot value is 0, true otherwise.\n-         */\n-        boolean getBooleanFromCache( long id, int slot );\n-\n-        /**\n-         * Caches all values for an id, i.e. fills all slots.\n-         *\n-         * @param id the entity id these cached values will be tied to.\n-         * @param cacheFields the values to cache, one per slot.\n-         */\n-        void putToCache( long id, long... cacheFields );\n-\n-        /**\n-         * Caches a single value for an id and slot.\n-         *\n-         * @param id the entity id this cached values will be tied to.\n-         * @param slot the slot for the given {@code id}.\n-         * @param value the value to cache for this id and slot.\n-         */\n-        void putToCacheSingle( long id, int slot, long value );\n-\n-        /**\n-         * Clears the cached values for the specified {@code id}.\n-         *\n-         * @param id the entity id to clear the cached values for.\n-         */\n-        void clearCache( long id );\n-\n-        /**\n-         * Caches a {@link Collection} of {@link PropertyRecord} for later checking.\n-         *\n-         * @param properties property records to cache for this thread.\n-         */\n-        void putPropertiesToCache( Collection<PropertyRecord> properties );\n-\n-        /**\n-         * Gets a cached {@link PropertyRecord} of a specific {@code id}, see {@link #putPropertiesToCache(Collection)}.\n-         *\n-         * @param id the property record id to look for.\n-         * @return cached {@link PropertyRecord} {@link PropertyRecord#getId() id}, or {@code null} if not found.\n-         */\n-        PropertyRecord getPropertyFromCache( long id );\n-\n-        /**\n-         * @return cached properties.\n-         */\n-        Iterable<PropertyRecord> getPropertiesFromCache();\n-\n-        /**\n-         * Increases the count of the specified {@code type}, for gathering statistics during a run.\n-         *\n-         * @param type counts type.\n-         */\n-        void incAndGetCount( Counts.Type type );\n-\n-        /**\n-         * Some consistency check stages splits the id range into segments, one per thread.\n-         * That split is initiated by {@link CacheAccess#prepareForProcessingOfSingleStore(long)} and checker,\n-         * per thread, using this method.\n-         *\n-         * @param id the record id to check whether or not to process for this thread.\n-         * @return {@code true} if the thread represented by this client should process the record\n-         * of the given {@code id}, otherwise {@code false}.\n-         */\n-        boolean withinBounds( long id );\n-    }\n+    long getFromCache(long id, int slot);\n \n     /**\n-     * @return {@link Client} for the current {@link Thread}.\n+     * Gets a cached value, put there with {@link #putToCache(long, long...)} or\n+     * {@link #putToCacheSingle(long, int, long)} and interpret field value as a boolean.\n+     * 0 will be treated as false all the rest as true.\n+     *\n+     * @param id   the entity id this cached value is tied to.\n+     * @param slot which cache slot for this id.\n+     * @return false if slot value is 0, true otherwise.\n      */\n-    Client client();\n+    boolean getBooleanFromCache(long id, int slot);\n \n     /**\n-     * A flag for record checkers using this cache, where cached values are treated differently if\n-     * we're scanning through a store forwards or backwards.\n+     * Caches all values for an id, i.e. fills all slots.\n      *\n-     * @return {@code true} if the scanning is currently set to go forward.\n+     * @param id          the entity id these cached values will be tied to.\n+     * @param cacheFields the values to cache, one per slot.\n      */\n-    boolean isForward();\n+    void putToCache(long id, long... cacheFields);\n \n     /**\n-     * Tells this {@link CacheAccess} whether or not the current stage, i.e is scanning forwards or backwards\n-     * through a store or not. The cached values are treated differently depending on which. This is due to\n-     * the double-linked nature of some stores, specifically the relationship store.\n+     * Caches a single value for an id and slot.\n      *\n-     * @param forward {@code true} if the current scanning is forwards, otherwise it's backwards.\n+     * @param id    the entity id this cached values will be tied to.\n+     * @param slot  the slot for the given {@code id}.\n+     * @param value the value to cache for this id and slot.\n      */\n-    void setForward( boolean forward );\n+    void putToCacheSingle(long id, int slot, long value);\n \n     /**\n-     * Clears all cached values.\n+     * Clears the cached values for the specified {@code id}.\n+     *\n+     * @param id the entity id to clear the cached values for.\n      */\n-    void clearCache();\n+    void clearCache(long id);\n \n     /**\n-     * Sets the slot sizes of the cached values.\n+     * Caches a {@link Collection} of {@link PropertyRecord} for later checking.\n      *\n-     * @param slotSize defines how many and how big the slots are for cached values that are put after this call.\n+     * @param properties property records to cache for this thread.\n      */\n-    void setCacheSlotSizes( int... slotSize );\n+    void putPropertiesToCache(Collection<PropertyRecord> properties);\n+\n+    /**\n+     * Gets a cached {@link PropertyRecord} of a specific {@code id}, see {@link #putPropertiesToCache(Collection)}.\n+     *\n+     * @param id the property record id to look for.\n+     * @return cached {@link PropertyRecord} {@link PropertyRecord#getId() id}, or {@code null} if not found.\n+     */\n+    PropertyRecord getPropertyFromCache(long id);\n+\n+    /**\n+     * @return cached properties.\n+     */\n+    Iterable<PropertyRecord> getPropertiesFromCache();\n+\n+    /**\n+     * Increases the count of the specified {@code type}, for gathering statistics during a run.\n+     *\n+     * @param type counts type.\n+     */\n+    void incAndGetCount(Counts.Type type);\n+\n+    /**\n+     * Some consistency check stages splits the id range into segments, one per thread.\n+     * That split is initiated by {@link CacheAccess#prepareForProcessingOfSingleStore(long)} and checker,\n+     * per thread, using this method.\n+     *\n+     * @param id the record id to check whether or not to process for this thread.\n+     * @return {@code true} if the thread represented by this client should process the record\n+     * of the given {@code id}, otherwise {@code false}.\n+     */\n+    boolean withinBounds(long id);\n+  }\n+\n+  /**\n+   * @return {@link Client} for the current {@link Thread}.\n+   */\n+  Client client();\n+\n+  /**\n+   * A flag for record checkers using this cache, where cached values are treated differently if\n+   * we're scanning through a store forwards or backwards.\n+   *\n+   * @return {@code true} if the scanning is currently set to go forward.\n+   */\n+  boolean isForward();\n+\n+  /**\n+   * Tells this {@link CacheAccess} whether or not the current stage, i.e is scanning forwards or backwards\n+   * through a store or not. The cached values are treated differently depending on which. This is due to\n+   * the double-linked nature of some stores, specifically the relationship store.\n+   *\n+   * @param forward {@code true} if the current scanning is forwards, otherwise it's backwards.\n+   */\n+  void setForward(boolean forward);\n+\n+  /**\n+   * Clears all cached values.\n+   */\n+  void clearCache();\n+\n+  /**\n+   * Sets the slot sizes of the cached values.\n+   *\n+   * @param slotSize defines how many and how big the slots are for cached values that are put after this call.\n+   */\n+  void setCacheSlotSizes(int... slotSize);\n+\n+  void prepareForProcessingOfSingleStore(long recordsPerCPU);\n+\n+  Client EMPTY_CLIENT = new Client()\n+  {\n+    @Override\n+    public void putPropertiesToCache(Collection<PropertyRecord> properties)\n+    {\n+    }\n+\n+    @Override\n+    public void putToCache(long id, long... cacheFields)\n+    {\n+    }\n+\n+    @Override\n+    public void putToCacheSingle(long id, int slot, long value)\n+    {\n+    }\n+\n+    @Override\n+    public void clearCache(long id)\n+    {\n+    }\n \n-    void prepareForProcessingOfSingleStore( long recordsPerCPU );\n+    @Override\n+    public void incAndGetCount(Type type)\n+    {\n+    }\n+\n+    @Override\n+    public PropertyRecord getPropertyFromCache(long id)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public Iterable<PropertyRecord> getPropertiesFromCache()\n+    {\n+      return null;\n+    }\n \n-    Client EMPTY_CLIENT = new Client()\n+    @Override\n+    public long getFromCache(long id, int slot)\n     {\n-        @Override\n-        public void putPropertiesToCache( Collection<PropertyRecord> properties )\n-        {\n-        }\n-\n-        @Override\n-        public void putToCache( long id, long... cacheFields )\n-        {\n-        }\n-\n-        @Override\n-        public void putToCacheSingle( long id, int slot, long value )\n-        {\n-        }\n-\n-        @Override\n-        public void clearCache( long id )\n-        {\n-        }\n-\n-        @Override\n-        public void incAndGetCount( Type type )\n-        {\n-        }\n-\n-        @Override\n-        public PropertyRecord getPropertyFromCache( long id )\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public Iterable<PropertyRecord> getPropertiesFromCache()\n-        {\n-            return null;\n-        }\n-\n-        @Override\n-        public long getFromCache( long id, int slot )\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public boolean getBooleanFromCache( long id, int slot )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean withinBounds( long id )\n-        {\n-            return false;\n-        }\n-    };\n-\n-    CacheAccess EMPTY = new CacheAccess()\n+      return 0;\n+    }\n+\n+    @Override\n+    public boolean getBooleanFromCache(long id, int slot)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public boolean withinBounds(long id)\n+    {\n+      return false;\n+    }\n+  };\n+\n+  CacheAccess EMPTY = new CacheAccess()\n+  {\n+    @Override\n+    public Client client()\n     {\n-        @Override\n-        public Client client()\n-        {\n-            return EMPTY_CLIENT;\n-        }\n-\n-        @Override\n-        public void setForward( boolean forward )\n-        {\n-        }\n-\n-        @Override\n-        public void setCacheSlotSizes( int... slotSizes )\n-        {\n-        }\n-\n-        @Override\n-        public boolean isForward()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public void clearCache()\n-        {\n-        }\n-\n-        @Override\n-        public void prepareForProcessingOfSingleStore( long recordsPerCPU )\n-        {\n-        }\n-    };\n+      return EMPTY_CLIENT;\n+    }\n+\n+    @Override\n+    public void setForward(boolean forward)\n+    {\n+    }\n+\n+    @Override\n+    public void setCacheSlotSizes(int... slotSizes)\n+    {\n+    }\n+\n+    @Override\n+    public boolean isForward()\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public void clearCache()\n+    {\n+    }\n+\n+    @Override\n+    public void prepareForProcessingOfSingleStore(long recordsPerCPU)\n+    {\n+    }\n+  };\n }\n",
            "diff_size": 323
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2004/CacheAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2004/CacheAccess.java\nindex 4a5c50bc09d..445c8d47034 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2004/CacheAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2004/CacheAccess.java\n@@ -165,8 +165,7 @@ public interface CacheAccess\n     void setCacheSlotSizes( int... slotSize );\n \n     void prepareForProcessingOfSingleStore( long recordsPerCPU );\n-\n-    Client EMPTY_CLIENT = new Client()\n+Client EMPTY_CLIENT = new Client()\n     {\n         @Override\n         public void putPropertiesToCache( Collection<PropertyRecord> properties )\n@@ -258,4 +257,4 @@ public interface CacheAccess\n         {\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
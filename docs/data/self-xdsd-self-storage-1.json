{
    "project_name": "self-xdsd-self-storage",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "86",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public void iteratesUsers() {\n        final Users users = new SelfJooq(new H2Database()).users();\n        for(final User user : users) {\n            MatcherAssert.assertThat(user, Matchers.notNullValue());\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/1/SelfUsersITCase.java\nindex be81c4c2be9..65a76c64dbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/1/SelfUsersITCase.java\n@@ -83,7 +83,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/1/SelfUsersITCase.java\nindex be81c4c2be9..eac5556c034 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/1/SelfUsersITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.Provider;\n@@ -36,6 +37,7 @@ import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_\n /**\n  * Integration tests for {@link SelfUsers}.\n  * Read the package-info.java if you want to run these tests manually.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.1\n@@ -83,7 +85,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'\"vlad\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'\"vlad\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'\"vlad@example.com\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'\"missing\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 107.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'\"foo\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'\"mihai\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'\"mihaiNew@example.com\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/1/SelfUsersITCase.java\nindex be81c4c2be9..b48f20c0acd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/1/SelfUsersITCase.java\n@@ -48,19 +48,28 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void returnsUser() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"vlad\", \"github\");\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n+        final User found = users.user(\n+    \"vlad\",\n+\"github\");\n         MatcherAssert.assertThat(\n             found.username(),\n-            Matchers.equalTo(\"vlad\")\n+            Matchers.equalTo(\n+    \"vlad\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.provider().name(),\n-            Matchers.equalTo(\"github\")\n+            Matchers.equalTo(\n+    \"github\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.email(),\n-            Matchers.equalTo(\"vlad@example.com\")\n+            Matchers.equalTo(\n+    \"vlad@example.com\"\n+    )\n         );\n     }\n \n@@ -69,8 +78,11 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void returnsNullIfUserMissing() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"missing\", \"github\");\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n+        final User found = users.user(\n+    \"missing\",\n+\"github\");\n         MatcherAssert.assertThat(\n             found,\n             Matchers.nullValue()\n@@ -82,27 +94,26 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void iteratesUsers() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n         for(final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n \n-\n-    /**\n+/**\n      * Sign up a user by inserting them into database.\n      */\n     @Test\n     public void signUpUserByInsert() {\n         final H2Database database = new H2Database();\n         final Users users = new SelfJooq(database).users();\n-        users.signUp(\"foo\", Provider.Names.GITHUB, \"foo@mail.com\");\n+        users.signUp(\n+    \"foo\", Provider.Names.GITHUB,\n+\"foo@mail.com\");\n \n-        final Result<Record> result = database.connect().jooq().select()\n-            .from(SLF_USERS_XDSD)\n-            .where(SLF_USERS_XDSD.USERNAME.eq(\"foo\")\n-                .and(SLF_USERS_XDSD.PROVIDER.eq(Provider.Names.GITHUB)))\n-            .fetch();\n+        final Result<Record> result = database.connect().jooq().select().from(SLF_USERS_XDSD).where(SLF_USERS_XDSD.USERNAME.eq(\n+    \"foo\").and(SLF_USERS_XDSD.PROVIDER.eq(Provider.Names.GITHUB))).fetch();\n         MatcherAssert.assertThat(result.isEmpty(), Matchers.is(false));\n     }\n \n@@ -113,15 +124,13 @@ public final class SelfUsersITCase {\n     public void signUpUserByUpdateEmail() {\n         final H2Database database = new H2Database();\n         final Users users = new SelfJooq(database).users();\n-        users.signUp(\"mihai\", Provider.Names.GITLAB, \"mihaiNew@example.com\");\n+        users.signUp(\n+    \"mihai\", Provider.Names.GITLAB,\n+\"mihaiNew@example.com\");\n \n-        final Result<Record> result = database.connect().jooq().select()\n-            .from(SLF_USERS_XDSD)\n-            .where(SLF_USERS_XDSD.USERNAME.eq(\"mihai\")\n-                .and(SLF_USERS_XDSD.EMAIL\n-                    .eq(\"mihaiNew@example.com\")))\n-            .fetch();\n+        final Result<Record> result = database.connect().jooq().select().from(SLF_USERS_XDSD).where(SLF_USERS_XDSD.USERNAME.eq(\n+    \"mihai\").and(SLF_USERS_XDSD.EMAIL.eq(\n+    \"mihaiNew@example.com\"))).fetch();\n         MatcherAssert.assertThat(result.isEmpty(), Matchers.is(false));\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "34",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "74",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 35, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "37",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 29, expected level should be 26.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 41, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 41, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "column": "77",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "132",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "107",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 107, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "121",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "149",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "172",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "174",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "column": "203",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 186, expected level should be 107.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "column": "188",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "148",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "column": "85",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "154",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "154",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "107",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "123",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 123, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "column": "179",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 162, expected level should be 123.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "column": "164",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/1/SelfUsersITCase.java\nindex be81c4c2be9..f28f45beaea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/1/SelfUsersITCase.java\n@@ -31,6 +31,7 @@ import org.jooq.Record;\n import org.jooq.Result;\n import org.junit.Test;\n \n+\n import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_XDSD;\n \n /**\n@@ -40,88 +41,121 @@ import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class SelfUsersITCase {\n \n     /**\n      * SelfUsers can find and return a Users from the\n      * Database.\n      */\n+\n+\n     @Test\n     public void returnsUser() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"vlad\", \"github\");\n-        MatcherAssert.assertThat(\n-            found.username(),\n-            Matchers.equalTo(\"vlad\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.provider().name(),\n-            Matchers.equalTo(\"github\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.email(),\n-            Matchers.equalTo(\"vlad@example.com\")\n-        );\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n+\n+        final User found= users.user(\n+                              \"vlad\", \"github\"\n+                          ); MatcherAssert.assertThat(\n+                                 found.username(),\n+                                 Matchers.equalTo(\n+                                 \"vlad\" )\n+                             ); MatcherAssert.assertThat(\n+                                    found.provider() .name(),\n+                                    Matchers.equalTo(\n+                                    \"github\" )\n+                                ); MatcherAssert.assertThat(\n+                                       found.email(),\n+                                       Matchers.equalTo(\n+                                       \"vlad@example.com\" )\n+                                   );\n     }\n \n     /**\n      * SelfUsers returns null if the User is not found.\n      */\n+\n     @Test\n     public void returnsNullIfUserMissing() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"missing\", \"github\");\n-        MatcherAssert.assertThat(\n-            found,\n-            Matchers.nullValue()\n-        );\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n+\n+        final User found= users.user(\n+                              \"missing\", \"github\"\n+                          ); MatcherAssert.assertThat(\n+                                 found,\n+                                 Matchers.nullValue()\n+                             );\n     }\n \n     /**\n      * SelfUsers can be iterated.\n      */\n+\n     @Test\n     public void iteratesUsers() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n-            MatcherAssert.assertThat(user, Matchers.notNullValue());\n-        }\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n+\n+        for( final User user: users) {\n+                                         MatcherAssert.assertThat(\n+                                             user,\n+                                             Matchers.notNullValue()\n+                                         );\n+                                     }\n     }\n \n \n     /**\n      * Sign up a user by inserting them into database.\n      */\n+\n     @Test\n     public void signUpUserByInsert() {\n-        final H2Database database = new H2Database();\n-        final Users users = new SelfJooq(database).users();\n-        users.signUp(\"foo\", Provider.Names.GITHUB, \"foo@mail.com\");\n-\n-        final Result<Record> result = database.connect().jooq().select()\n-            .from(SLF_USERS_XDSD)\n-            .where(SLF_USERS_XDSD.USERNAME.eq(\"foo\")\n-                .and(SLF_USERS_XDSD.PROVIDER.eq(Provider.Names.GITHUB)))\n-            .fetch();\n-        MatcherAssert.assertThat(result.isEmpty(), Matchers.is(false));\n+        final H2Database database= new H2Database();\n+\n+\n+        final Users users= new SelfJooq( database) .users(); users.signUp(\n+                                                             \"foo\",\n+                                                             Provider.Names.GITHUB,\n+                                                             \"foo@mail.com\");\n+\n+\n+        final Result < Record> result= database.connect() .jooq() .select() .from( SLF_USERS_XDSD) .where( SLF_USERS_XDSD.USERNAME.eq(\n+                                                                                                           \"foo\" ) .and( SLF_USERS_XDSD.PROVIDER.eq( Provider.Names.GITHUB) ) ) .fetch(); MatcherAssert.assertThat(\n+                                                                                                                                                                                              result.isEmpty(),\n+                                                                                                                                                                                              Matchers.is( false)\n+                                                                                                                                                                                          );\n     }\n \n     /**\n      * Sign up a user by updating them into database (they updated their email).\n      */\n+\n     @Test\n     public void signUpUserByUpdateEmail() {\n-        final H2Database database = new H2Database();\n-        final Users users = new SelfJooq(database).users();\n-        users.signUp(\"mihai\", Provider.Names.GITLAB, \"mihaiNew@example.com\");\n-\n-        final Result<Record> result = database.connect().jooq().select()\n-            .from(SLF_USERS_XDSD)\n-            .where(SLF_USERS_XDSD.USERNAME.eq(\"mihai\")\n-                .and(SLF_USERS_XDSD.EMAIL\n-                    .eq(\"mihaiNew@example.com\")))\n-            .fetch();\n-        MatcherAssert.assertThat(result.isEmpty(), Matchers.is(false));\n-    }\n+        final H2Database database= new H2Database();\n+\n \n-}\n+        final Users users= new SelfJooq( database) .users(); users.signUp(\n+                                                             \"mihai\",\n+                                                             Provider.Names.GITLAB,\n+                                                             \"mihaiNew@example.com\");\n+\n+\n+        final Result < Record> result= database.connect() .jooq() .select() .from( SLF_USERS_XDSD) .where( SLF_USERS_XDSD.USERNAME.eq(\n+                                                                                                           \"mihai\" ) .and( SLF_USERS_XDSD.EMAIL.eq(\n+                                                                                                                           \"mihaiNew@example.com\" ) ) ) .fetch(); MatcherAssert.assertThat(\n+                                                                                                                                                                      result.isEmpty(),\n+                                                                                                                                                                      Matchers.is( false)\n+                                                                                                                                                                  );\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 91
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/1/SelfUsersITCase.java\nindex be81c4c2be9..65a76c64dbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/1/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/1/SelfUsersITCase.java\n@@ -83,7 +83,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "49",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        pipeline.addLast(new HttpClientCodec());\n        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n        if (!enableV2) {\n            pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n        } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/61/QueryEndpoint.java\nindex 1ac432248fb..a8c785c3633 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/61/QueryEndpoint.java\n@@ -46,7 +46,7 @@ public class QueryEndpoint extends AbstractEndpoint {\n         }\n \n         pipeline.addLast(new HttpClientCodec());\n-        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n+        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\" ,\"false\"));\n         if (!enableV2) {\n             pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n         } else {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/61/QueryEndpoint.java\nindex 1ac432248fb..6f5746781a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/61/QueryEndpoint.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.endpoint.query;\n \n import com.couchbase.client.core.ResponseEvent;\n@@ -34,9 +35,9 @@ import java.util.concurrent.TimeUnit;\n public class QueryEndpoint extends AbstractEndpoint {\n \n     public QueryEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n+                         RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+            environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n@@ -46,7 +47,8 @@ public class QueryEndpoint extends AbstractEndpoint {\n         }\n \n         pipeline.addLast(new HttpClientCodec());\n-        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n+        boolean enableV2 =\n+            Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n         if (!enableV2) {\n             pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n         } else {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/61/QueryEndpoint.java\nindex 1ac432248fb..2e62a90ab84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/61/QueryEndpoint.java\n@@ -35,8 +35,7 @@ public class QueryEndpoint extends AbstractEndpoint {\n \n     public QueryEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n         RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+        super(hostname, bucket, password, port, environment, responseBuffer, false, environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n@@ -53,4 +52,4 @@ public class QueryEndpoint extends AbstractEndpoint {\n             pipeline.addLast(new QueryHandlerV2(this, responseBuffer(), false, false));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/61/QueryEndpoint.java\nindex 1ac432248fb..b92d9288ad5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/61/QueryEndpoint.java\n@@ -22,7 +22,6 @@ import com.lmax.disruptor.RingBuffer;\n import io.netty.channel.ChannelPipeline;\n import io.netty.handler.codec.http.HttpClientCodec;\n import io.netty.handler.timeout.IdleStateHandler;\n-\n import java.util.concurrent.TimeUnit;\n \n /**\n@@ -31,12 +30,11 @@ import java.util.concurrent.TimeUnit;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n public class QueryEndpoint extends AbstractEndpoint {\n \n-    public QueryEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+    public QueryEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+        super(hostname, bucket, password, port, environment, responseBuffer, false, environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n@@ -44,13 +42,18 @@ public class QueryEndpoint extends AbstractEndpoint {\n         if (environment().keepAliveInterval() > 0) {\n             pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n-\n         pipeline.addLast(new HttpClientCodec());\n         boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n         if (!enableV2) {\n-            pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n+            pipeline.addLast(new QueryHandler(this,\n+                responseBuffer(),\n+                false,\n+                false));\n         } else {\n-            pipeline.addLast(new QueryHandlerV2(this, responseBuffer(), false, false));\n+            pipeline.addLast(new QueryHandlerV2(this,\n+                responseBuffer(),\n+                false,\n+                false));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/61/QueryEndpoint.java\nindex 1ac432248fb..a8c785c3633 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/61/QueryEndpoint.java\n@@ -46,7 +46,7 @@ public class QueryEndpoint extends AbstractEndpoint {\n         }\n \n         pipeline.addLast(new HttpClientCodec());\n-        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n+        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\" ,\"false\"));\n         if (!enableV2) {\n             pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n         } else {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "column": "166",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/61/QueryEndpoint.java\nindex 1ac432248fb..4503abaec30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/61/QueryEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/61/QueryEndpoint.java\n@@ -45,8 +45,7 @@ public class QueryEndpoint extends AbstractEndpoint {\n             pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n \n-        pipeline.addLast(new HttpClientCodec());\n-        boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n+        pipeline.addLast(new HttpClientCodec()); boolean enableV2 = Boolean.parseBoolean(System.getProperty(\"com.couchbase.enableYasjlQueryResponseParser\", \"false\"));\n         if (!enableV2) {\n             pipeline.addLast(new QueryHandler(this, responseBuffer(), false, false));\n         } else {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "408",
    "information": {
        "errors": [
            {
                "line": "411",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      case WSDLConstants.PART:\n      {\n        Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPart();\n        part.setEnclosingDefinition(getEnclosingDefinition());\n        part.setElement(child);\n        getEParts().add(part);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/408/MessageImpl.java\nindex f02876e8170..d8fb63f93f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/408/MessageImpl.java\n@@ -408,7 +408,9 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n     {\n       case WSDLConstants.PART:\n       {\n-        Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPart();\n+          Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).\n+      getWSDLFactory ().createPart\n+      ();\n         part.setEnclosingDefinition(getEnclosingDefinition());\n         part.setElement(child);\n         getEParts().add(part);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/408/MessageImpl.java\nindex f02876e8170..f524f2ada9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/408/MessageImpl.java\n@@ -8,6 +8,7 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n+\n package org.eclipse.wst.wsdl.internal.impl;\n \n \n@@ -55,8 +56,7 @@ import org.w3c.dom.Element;\n  *\n  * @generated\n  */\n-public class MessageImpl extends ExtensibleElementImpl implements Message\n-{\n+public class MessageImpl extends ExtensibleElementImpl implements Message {\n   /**\n    * This class is not intended to be serialized.\n    * serialVersionUID is assigned with 1L to avoid\n@@ -68,9 +68,10 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * The default value of the '{@link #getQName() <em>QName</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getQName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getQName()\n    */\n   protected static final QName QNAME_EDEFAULT = null;\n \n@@ -78,9 +79,10 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * The cached value of the '{@link #getQName() <em>QName</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getQName()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getQName()\n    */\n   protected QName qName = QNAME_EDEFAULT;\n \n@@ -88,9 +90,10 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * The default value of the '{@link #isUndefined() <em>Undefined</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #isUndefined()\n+   *\n    * @generated\n    * @ordered\n+   * @see #isUndefined()\n    */\n   protected static final boolean UNDEFINED_EDEFAULT = false;\n \n@@ -98,9 +101,10 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * The cached value of the '{@link #isUndefined() <em>Undefined</em>}' attribute.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #isUndefined()\n+   *\n    * @generated\n    * @ordered\n+   * @see #isUndefined()\n    */\n   protected boolean undefined = UNDEFINED_EDEFAULT;\n \n@@ -108,87 +112,89 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * The cached value of the '{@link #getEParts() <em>EParts</em>}' containment reference list.\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n-   * @see #getEParts()\n+   *\n    * @generated\n    * @ordered\n+   * @see #getEParts()\n    */\n   protected EList eParts;\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected MessageImpl()\n-  {\n+  protected MessageImpl() {\n     super();\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  protected EClass eStaticClass()\n-  {\n+  protected EClass eStaticClass() {\n     return WSDLPackage.Literals.MESSAGE;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public QName getQName()\n-  {\n+  public QName getQName() {\n     return qName;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setQName(QName newQName)\n-  {\n+  public void setQName(QName newQName) {\n     QName oldQName = qName;\n     qName = newQName;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.MESSAGE__QNAME, oldQName, qName));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public boolean isUndefined()\n-  {\n+  public boolean isUndefined() {\n     return undefined;\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void setUndefined(boolean newUndefined)\n-  {\n+  public void setUndefined(boolean newUndefined) {\n     boolean oldUndefined = undefined;\n     undefined = newUndefined;\n-    if (eNotificationRequired())\n+    if (eNotificationRequired()) {\n       eNotify(new ENotificationImpl(this, Notification.SET, WSDLPackage.MESSAGE__UNDEFINED, oldUndefined, undefined));\n+    }\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public EList getEParts()\n-  {\n-    if (eParts == null)\n-    {\n+  public EList getEParts() {\n+    if (eParts == null) {\n       eParts = new EObjectContainmentEList(Part.class, this, WSDLPackage.MESSAGE__EPARTS);\n     }\n     return eParts;\n@@ -197,32 +203,30 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * Add a part to this message.\n+   *\n    * @param part the part to be added\n-   * <!-- end-user-doc -->\n+   *             <!-- end-user-doc -->\n    * @generated NOT\n    */\n-  public void addPart(javax.wsdl.Part part)\n-  {\n-    getEParts().add((Part)part);\n+  public void addPart(javax.wsdl.Part part) {\n+    getEParts().add((Part) part);\n   }\n \n   /**\n    * <!-- begin-user-doc -->\n    * Get the specified part.\n+   *\n    * @param name the name of the desired part.\n    * @return the corresponding part, or null if there wasn't\n    * any matching part\n    * <!-- end-user-doc -->\n    * @generated NOT\n    */\n-  public javax.wsdl.Part getPart(String name)\n-  {\n+  public javax.wsdl.Part getPart(String name) {\n     Part result = null;\n-    for (Iterator i = getEParts().iterator(); i.hasNext();)\n-    {\n-      Part part = (Part)i.next();\n-      if (name.equals(part.getName()))\n-      {\n+    for (Iterator i = getEParts().iterator(); i.hasNext(); ) {\n+      Part part = (Part) i.next();\n+      if (name.equals(part.getName())) {\n         result = part;\n         break;\n       }\n@@ -234,14 +238,13 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n    * <!-- begin-user-doc -->\n    * Get all the parts defined here.\n    * <!-- end-user-doc -->\n+   *\n    * @generated NOT\n    */\n-  public Map getParts()\n-  {\n+  public Map getParts() {\n     HashMap hashMap = new HashMap();\n-    for (Iterator i = getEParts().iterator(); i.hasNext();)\n-    {\n-      Part part = (Part)i.next();\n+    for (Iterator i = getEParts().iterator(); i.hasNext(); ) {\n+      Part part = (Part) i.next();\n       hashMap.put(part.getName(), part);\n     }\n     return hashMap;\n@@ -250,24 +253,23 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated NOT\n    */\n-  public List getOrderedParts(List partOrder)\n-  {\n+  public List getOrderedParts(List partOrder) {\n     List orderedParts = new Vector();\n-    if (partOrder == null)\n-    {\n+    if (partOrder == null) {\n       orderedParts.addAll(getEParts());\n       return orderedParts;\n     }\n \n     Iterator partNameIterator = partOrder.iterator();\n-    while (partNameIterator.hasNext())\n-    {\n-      String partName = (String)partNameIterator.next();\n+    while (partNameIterator.hasNext()) {\n+      String partName = (String) partNameIterator.next();\n       javax.wsdl.Part part = getPart(partName);\n-      if (part != null)\n+      if (part != null) {\n         orderedParts.add(part);\n+      }\n     }\n \n     return orderedParts;\n@@ -276,14 +278,13 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.MESSAGE__EPARTS:\n-      return ((InternalEList)getEParts()).basicRemove(otherEnd, msgs);\n+  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {\n+    switch (featureID) {\n+    case WSDLPackage.MESSAGE__EPARTS:\n+      return ((InternalEList) getEParts()).basicRemove(otherEnd, msgs);\n     }\n     return super.eInverseRemove(otherEnd, featureID, msgs);\n   }\n@@ -291,17 +292,16 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public Object eGet(int featureID, boolean resolve, boolean coreType)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.MESSAGE__QNAME:\n+  public Object eGet(int featureID, boolean resolve, boolean coreType) {\n+    switch (featureID) {\n+    case WSDLPackage.MESSAGE__QNAME:\n       return getQName();\n-      case WSDLPackage.MESSAGE__UNDEFINED:\n+    case WSDLPackage.MESSAGE__UNDEFINED:\n       return isUndefined() ? Boolean.TRUE : Boolean.FALSE;\n-      case WSDLPackage.MESSAGE__EPARTS:\n+    case WSDLPackage.MESSAGE__EPARTS:\n       return getEParts();\n     }\n     return super.eGet(featureID, resolve, coreType);\n@@ -310,21 +310,20 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eSet(int featureID, Object newValue)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.MESSAGE__QNAME:\n-      setQName((QName)newValue);\n+  public void eSet(int featureID, Object newValue) {\n+    switch (featureID) {\n+    case WSDLPackage.MESSAGE__QNAME:\n+      setQName((QName) newValue);\n       return;\n-      case WSDLPackage.MESSAGE__UNDEFINED:\n-      setUndefined(((Boolean)newValue).booleanValue());\n+    case WSDLPackage.MESSAGE__UNDEFINED:\n+      setUndefined(((Boolean) newValue).booleanValue());\n       return;\n-      case WSDLPackage.MESSAGE__EPARTS:\n+    case WSDLPackage.MESSAGE__EPARTS:\n       getEParts().clear();\n-      getEParts().addAll((Collection)newValue);\n+      getEParts().addAll((Collection) newValue);\n       return;\n     }\n     super.eSet(featureID, newValue);\n@@ -333,19 +332,18 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public void eUnset(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.MESSAGE__QNAME:\n+  public void eUnset(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.MESSAGE__QNAME:\n       setQName(QNAME_EDEFAULT);\n       return;\n-      case WSDLPackage.MESSAGE__UNDEFINED:\n+    case WSDLPackage.MESSAGE__UNDEFINED:\n       setUndefined(UNDEFINED_EDEFAULT);\n       return;\n-      case WSDLPackage.MESSAGE__EPARTS:\n+    case WSDLPackage.MESSAGE__EPARTS:\n       getEParts().clear();\n       return;\n     }\n@@ -355,17 +353,16 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public boolean eIsSet(int featureID)\n-  {\n-    switch (featureID)\n-    {\n-      case WSDLPackage.MESSAGE__QNAME:\n+  public boolean eIsSet(int featureID) {\n+    switch (featureID) {\n+    case WSDLPackage.MESSAGE__QNAME:\n       return QNAME_EDEFAULT == null ? qName != null : !QNAME_EDEFAULT.equals(qName);\n-      case WSDLPackage.MESSAGE__UNDEFINED:\n+    case WSDLPackage.MESSAGE__UNDEFINED:\n       return undefined != UNDEFINED_EDEFAULT;\n-      case WSDLPackage.MESSAGE__EPARTS:\n+    case WSDLPackage.MESSAGE__EPARTS:\n       return eParts != null && !eParts.isEmpty();\n     }\n     return super.eIsSet(featureID);\n@@ -374,12 +371,13 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n+   *\n    * @generated\n    */\n-  public String toString()\n-  {\n-    if (eIsProxy())\n+  public String toString() {\n+    if (eIsProxy()) {\n       return super.toString();\n+    }\n \n     StringBuffer result = new StringBuffer(super.toString());\n     result.append(\" (qName: \"); //$NON-NLS-1$\n@@ -394,98 +392,83 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n   // Reconcile methods\n   //\n \n-  public void reconcileAttributes(Element changedElement)\n-  {\n+  public void reconcileAttributes(Element changedElement) {\n     Definition definition = getEnclosingDefinition();\n     String name = changedElement.getAttribute(WSDLConstants.NAME_ATTRIBUTE);\n     QName qname = new QName(definition.getTargetNamespace(), name == null ? \"\" : name); //$NON-NLS-1$\n     setQName(qname);\n   }\n \n-  public void handleUnreconciledElement(Element child, Collection remainingModelObjects)\n-  {\n-    switch (WSDLUtil.getInstance().getWSDLType(child))\n-    {\n-      case WSDLConstants.PART:\n-      {\n-        Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPart();\n-        part.setEnclosingDefinition(getEnclosingDefinition());\n-        part.setElement(child);\n-        getEParts().add(part);\n-        break;\n-      }\n-      default:\n-      {\n-        super.handleUnreconciledElement(child, remainingModelObjects);\n-        break;\n-      }\n+  public void handleUnreconciledElement(Element child, Collection remainingModelObjects) {\n+    switch (WSDLUtil.getInstance().getWSDLType(child)) {\n+    case WSDLConstants.PART: {\n+      Part part =\n+        ((WSDLPackage) EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPart();\n+      part.setEnclosingDefinition(getEnclosingDefinition());\n+      part.setElement(child);\n+      getEParts().add(part);\n+      break;\n+    }\n+    default: {\n+      super.handleUnreconciledElement(child, remainingModelObjects);\n+      break;\n+    }\n     }\n   }\n \n-  protected void handleReconciliation(Collection remainingModelObjects)\n-  {\n-    for (Iterator i = remainingModelObjects.iterator(); i.hasNext();)\n-    {\n+  protected void handleReconciliation(Collection remainingModelObjects) {\n+    for (Iterator i = remainingModelObjects.iterator(); i.hasNext(); ) {\n       remove(this, i.next());\n     }\n   }\n \n-  protected void remove(Object component, Object modelObject)\n-  {\n+  protected void remove(Object component, Object modelObject) {\n     List list = getList(component, modelObject);\n-    if (list != null)\n-    {\n+    if (list != null) {\n       list.remove(modelObject);\n-    }    \n+    }\n   }\n-  \n-  private List getList(Object component, Object modelObject)\n-  {\n+\n+  private List getList(Object component, Object modelObject) {\n     List result = null;\n-    Message message = (Message)component;\n-    if (modelObject instanceof Part)\n-    {\n+    Message message = (Message) component;\n+    if (modelObject instanceof Part) {\n       result = message.getEParts();\n-    }\n-    else if (modelObject instanceof ExtensibilityElement)\n-    {\n+    } else if (modelObject instanceof ExtensibilityElement) {\n       result = getExtensibilityElements();\n     }\n-    \n+\n     return result;\n-  }  \n+  }\n \n   //\n   // For reconciliation: Model -> DOM\n   //\n \n-  protected void changeAttribute(EAttribute eAttribute)\n-  {\n-    if (isReconciling)\n+  protected void changeAttribute(EAttribute eAttribute) {\n+    if (isReconciling) {\n       return;\n+    }\n \n     super.changeAttribute(eAttribute);\n     Element theElement = getElement();\n-    if (theElement != null)\n-    {\n-      if (eAttribute == null || eAttribute == WSDLPackage.Literals.MESSAGE__QNAME)\n+    if (theElement != null) {\n+      if (eAttribute == null || eAttribute == WSDLPackage.Literals.MESSAGE__QNAME) {\n         niceSetAttribute(theElement, WSDLConstants.NAME_ATTRIBUTE, getQName().getLocalPart());\n+      }\n     }\n   }\n \n-  public Element createElement()\n-  {\n+  public Element createElement() {\n     Element newElement = createElement(WSDLConstants.MESSAGE);\n     setElement(newElement);\n \n     Iterator iterator = getEParts().iterator();\n-    while (iterator.hasNext())\n-    {\n+    while (iterator.hasNext()) {\n       Object obj = iterator.next();\n-      if (obj instanceof Part)\n-      {\n-        Part part = (Part)obj;\n-        Element child = ((PartImpl)part).createElement();\n+      if (obj instanceof Part) {\n+        Part part = (Part) obj;\n+        Element child = ((PartImpl) part).createElement();\n         newElement.appendChild(child);\n       }\n     }\n",
            "diff_size": 171
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "411",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/408/MessageImpl.java\nindex f02876e8170..d8fb63f93f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/408/MessageImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/408/MessageImpl.java\n@@ -408,7 +408,9 @@ public class MessageImpl extends ExtensibleElementImpl implements Message\n     {\n       case WSDLConstants.PART:\n       {\n-        Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).getWSDLFactory().createPart();\n+          Part part = ((WSDLPackage)EPackage.Registry.INSTANCE.getEPackage(WSDLPackage.eNS_URI)).\n+      getWSDLFactory ().createPart\n+      ();\n         part.setEnclosingDefinition(getEnclosingDefinition());\n         part.setElement(child);\n         getEParts().add(part);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "823",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/823/RoleSerialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/823/RoleSerialization.java\nindex cd83ba7eba7..46ed3a2db2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/823/RoleSerialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/823/RoleSerialization.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import java.util.SortedSet;\n@@ -32,43 +33,43 @@ import static java.lang.String.format;\n  */\n public class RoleSerialization extends FileRepositorySerializer<RoleRecord>\n {\n-    private static final String roleSeparator = \":\";\n-    private static final String userSeparator = \",\";\n+  private static final String roleSeparator = \":\";\n+  private static final String userSeparator = \",\";\n \n-    @Override\n-    protected String serialize( RoleRecord role )\n-    {\n-        return String.join( roleSeparator, role.name(), String.join( userSeparator, role.users() ) );\n-    }\n+  @Override\n+  protected String serialize(RoleRecord role)\n+  {\n+    return String.join(roleSeparator, role.name(), String.join(userSeparator, role.users()));\n+  }\n \n-    @Override\n-    protected RoleRecord deserializeRecord( String line, int lineNumber ) throws FormatException\n+  @Override\n+  protected RoleRecord deserializeRecord(String line, int lineNumber) throws FormatException\n+  {\n+    String[] parts = line.split(roleSeparator, -1);\n+    if (parts.length != 2)\n     {\n-        String[] parts = line.split( roleSeparator, -1 );\n-        if ( parts.length != 2 )\n-        {\n-            throw new FormatException( format( \"wrong number of line fields [line %d]\", lineNumber ) );\n-        }\n-        return new RoleRecord.Builder()\n-                .withName( parts[0] )\n-                .withUsers( deserializeUsers( parts[1] ) )\n-                .build();\n+      throw new FormatException(format(\"wrong number of line fields [line %d]\", lineNumber));\n     }\n+    return new RoleRecord.Builder()\n+        .withName(parts[0])\n+        .withUsers(deserializeUsers(parts[1]))\n+        .build();\n+  }\n \n-    private SortedSet<String> deserializeUsers( String part )\n-    {\n-        String[] splits = part.split( userSeparator, -1 );\n+  private SortedSet<String> deserializeUsers(String part)\n+  {\n+    String[] splits = part.split(userSeparator, -1);\n \n-        SortedSet<String> users = new TreeSet<>();\n+    SortedSet<String> users = new TreeSet<>();\n \n-        for ( String user : splits )\n-        {\n-            if ( !user.trim().isEmpty() )\n-            {\n-                users.add( user );\n-            }\n-        }\n-\n-        return users;\n+    for (String user : splits)\n+    {\n+      if (!user.trim().isEmpty())\n+      {\n+        users.add(user);\n+      }\n     }\n+\n+    return users;\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/823/RoleSerialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/823/RoleSerialization.java\nindex cd83ba7eba7..d5ee1711c5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/823/RoleSerialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/823/RoleSerialization.java\n@@ -49,10 +49,7 @@ public class RoleSerialization extends FileRepositorySerializer<RoleRecord>\n         {\n             throw new FormatException( format( \"wrong number of line fields [line %d]\", lineNumber ) );\n         }\n-        return new RoleRecord.Builder()\n-                .withName( parts[0] )\n-                .withUsers( deserializeUsers( parts[1] ) )\n-                .build();\n+        return new RoleRecord.Builder().withName( parts[0] ).withUsers( deserializeUsers( parts[1] ) ).build();\n     }\n \n     private SortedSet<String> deserializeUsers( String part )\n@@ -60,8 +57,7 @@ public class RoleSerialization extends FileRepositorySerializer<RoleRecord>\n         String[] splits = part.split( userSeparator, -1 );\n \n         SortedSet<String> users = new TreeSet<>();\n-\n-        for ( String user : splits )\n+for ( String user : splits )\n         {\n             if ( !user.trim().isEmpty() )\n             {\n@@ -71,4 +67,4 @@ public class RoleSerialization extends FileRepositorySerializer<RoleRecord>\n \n         return users;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2420",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2420/MultiPopulatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2420/MultiPopulatorFactory.java\nindex 0677405d30c..f6963c82b9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2420/MultiPopulatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2420/MultiPopulatorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n@@ -32,36 +33,36 @@ import org.neo4j.logging.LogProvider;\n  */\n public abstract class MultiPopulatorFactory\n {\n-    private MultiPopulatorFactory()\n-    {\n-    }\n+  private MultiPopulatorFactory()\n+  {\n+  }\n \n-    public abstract MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                                   SchemaState schemaState );\n+  public abstract MultipleIndexPopulator create(IndexStoreView storeView, LogProvider logProvider,\n+                                                SchemaState schemaState);\n \n-    public static MultiPopulatorFactory forConfig( Config config )\n-    {\n-        boolean multiThreaded = config.get( GraphDatabaseSettings.multi_threaded_schema_index_population_enabled );\n-        return multiThreaded ? new MultiThreadedPopulatorFactory() : new SingleThreadedPopulatorFactory();\n-    }\n+  public static MultiPopulatorFactory forConfig(Config config)\n+  {\n+    boolean multiThreaded = config.get(GraphDatabaseSettings.multi_threaded_schema_index_population_enabled);\n+    return multiThreaded ? new MultiThreadedPopulatorFactory() : new SingleThreadedPopulatorFactory();\n+  }\n \n-    private static class SingleThreadedPopulatorFactory extends MultiPopulatorFactory\n+  private static class SingleThreadedPopulatorFactory extends MultiPopulatorFactory\n+  {\n+    @Override\n+    public MultipleIndexPopulator create(IndexStoreView storeView, LogProvider logProvider,\n+                                         SchemaState schemaState)\n     {\n-        @Override\n-        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                              SchemaState schemaState )\n-        {\n-            return new MultipleIndexPopulator( storeView, logProvider, schemaState );\n-        }\n+      return new MultipleIndexPopulator(storeView, logProvider, schemaState);\n     }\n+  }\n \n-    private static class MultiThreadedPopulatorFactory extends MultiPopulatorFactory\n+  private static class MultiThreadedPopulatorFactory extends MultiPopulatorFactory\n+  {\n+    @Override\n+    public MultipleIndexPopulator create(IndexStoreView storeView, LogProvider logProvider,\n+                                         SchemaState schemaState)\n     {\n-        @Override\n-        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                              SchemaState schemaState )\n-        {\n-            return new BatchingMultipleIndexPopulator( storeView, logProvider, schemaState );\n-        }\n+      return new BatchingMultipleIndexPopulator(storeView, logProvider, schemaState);\n     }\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2420/MultiPopulatorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2420/MultiPopulatorFactory.java\nindex 0677405d30c..c42b99672f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2420/MultiPopulatorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2420/MultiPopulatorFactory.java\n@@ -36,10 +36,9 @@ public abstract class MultiPopulatorFactory\n     {\n     }\n \n-    public abstract MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                                   SchemaState schemaState );\n+    public abstract MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider, SchemaState schemaState );\n \n-    public static MultiPopulatorFactory forConfig( Config config )\n+public static MultiPopulatorFactory forConfig( Config config )\n     {\n         boolean multiThreaded = config.get( GraphDatabaseSettings.multi_threaded_schema_index_population_enabled );\n         return multiThreaded ? new MultiThreadedPopulatorFactory() : new SingleThreadedPopulatorFactory();\n@@ -48,9 +47,8 @@ public abstract class MultiPopulatorFactory\n     private static class SingleThreadedPopulatorFactory extends MultiPopulatorFactory\n     {\n         @Override\n-        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                              SchemaState schemaState )\n-        {\n+        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider, SchemaState schemaState )\n+{\n             return new MultipleIndexPopulator( storeView, logProvider, schemaState );\n         }\n     }\n@@ -58,10 +56,9 @@ public abstract class MultiPopulatorFactory\n     private static class MultiThreadedPopulatorFactory extends MultiPopulatorFactory\n     {\n         @Override\n-        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider,\n-                                              SchemaState schemaState )\n-        {\n+        public MultipleIndexPopulator create( IndexStoreView storeView, LogProvider logProvider, SchemaState schemaState )\n+{\n             return new BatchingMultipleIndexPopulator( storeView, logProvider, schemaState );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
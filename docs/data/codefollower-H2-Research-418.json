{
    "project_name": "codefollower-H2-Research",
    "error_id": "418",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "5",
                "severity": "warning",
                "message": "'{' at column 5 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "\n    interface Factory<D>\n    {\n        DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/418/StatefulDataType.java\nindex 79ca0814b3a..dbbd8f39bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/418/StatefulDataType.java\n@@ -28,8 +28,7 @@ public interface StatefulDataType<D> {\n     @Override\n     int hashCode();\n \n-    interface Factory<D>\n-    {\n+    interface Factory<D> {\n         DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/418/StatefulDataType.java\nindex 79ca0814b3a..8ad0a23571b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/418/StatefulDataType.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.mvstore.type;\n \n import org.h2.mvstore.WriteBuffer;\n@@ -13,23 +14,21 @@ import java.nio.ByteBuffer;\n  * Interface StatefulDataType.\n  *\n  * @param <D> type of opaque parameter passed as an operational context to Factory.create()\n- *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n public interface StatefulDataType<D> {\n \n-    void save(WriteBuffer buff, MetaType<D> metaType);\n+  void save(WriteBuffer buff, MetaType<D> metaType);\n \n-    Factory<D> getFactory();\n+  Factory<D> getFactory();\n \n-    @Override\n-    boolean equals(Object obj);\n+  @Override\n+  boolean equals(Object obj);\n \n-    @Override\n-    int hashCode();\n+  @Override\n+  int hashCode();\n \n-    interface Factory<D>\n-    {\n-        DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n-    }\n+  interface Factory<D> {\n+    DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n+  }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/418/StatefulDataType.java\nindex 79ca0814b3a..97b12f3f41a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/418/StatefulDataType.java\n@@ -28,8 +28,7 @@ public interface StatefulDataType<D> {\n     @Override\n     int hashCode();\n \n-    interface Factory<D>\n-    {\n+    interface Factory<D> {\n         DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/418/StatefulDataType.java\nindex 79ca0814b3a..293cdfff579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/418/StatefulDataType.java\n@@ -6,7 +6,6 @@\n package org.h2.mvstore.type;\n \n import org.h2.mvstore.WriteBuffer;\n-\n import java.nio.ByteBuffer;\n \n /**\n@@ -16,20 +15,30 @@ import java.nio.ByteBuffer;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n+\n+\n public interface StatefulDataType<D> {\n \n+\n     void save(WriteBuffer buff, MetaType<D> metaType);\n \n+\n     Factory<D> getFactory();\n \n+\n     @Override\n     boolean equals(Object obj);\n \n+\n     @Override\n     int hashCode();\n \n-    interface Factory<D>\n-    {\n-        DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n+\n+    interface Factory<D> {\n+\n+\n+        DataType<?> create(ByteBuffer buff,\n+            MetaType<D> metaDataType, D database);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/418/StatefulDataType.java\nindex 79ca0814b3a..dbbd8f39bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/418/StatefulDataType.java\n@@ -28,8 +28,7 @@ public interface StatefulDataType<D> {\n     @Override\n     int hashCode();\n \n-    interface Factory<D>\n-    {\n+    interface Factory<D> {\n         DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/418/StatefulDataType.java\nindex 79ca0814b3a..dbbd8f39bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/418/StatefulDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/418/StatefulDataType.java\n@@ -28,8 +28,7 @@ public interface StatefulDataType<D> {\n     @Override\n     int hashCode();\n \n-    interface Factory<D>\n-    {\n+    interface Factory<D> {\n         DataType<?> create(ByteBuffer buff, MetaType<D> metaDataType, D database);\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "seedstack-business",
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.assembler;\n\nimport java.lang.annotation.Annotation;\nimport javax.annotation.Nullable;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/63/AssemblerRegistry.java\nindex d8c0e28fc7f..5c5ddb9cc9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/63/AssemblerRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/63/AssemblerRegistry.java\nindex d8c0e28fc7f..c8d8c18d24e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/63/AssemblerRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n@@ -40,7 +41,7 @@ public interface AssemblerRegistry {\n      * @return an assembler instance.\n      */\n     <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n-            @Nullable Annotation qualifier);\n+                                                                 @Nullable Annotation qualifier);\n \n     /**\n      * Returns the Assembler matching the given aggregate root class and the dto class for the\n@@ -54,7 +55,7 @@ public interface AssemblerRegistry {\n      * @return an assembler instance.\n      */\n     <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n-            @Nullable Class<? extends Annotation> qualifier);\n+                                                                 @Nullable Class<? extends Annotation> qualifier);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class.\n@@ -66,7 +67,7 @@ public interface AssemblerRegistry {\n      * @return an assembler instance.\n      */\n     <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass);\n+                                                           Class<D> dtoClass);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n@@ -80,7 +81,7 @@ public interface AssemblerRegistry {\n      * @return an assembler instance.\n      */\n     <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Annotation qualifier);\n+                                                           Class<D> dtoClass, @Nullable Annotation qualifier);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n@@ -94,5 +95,6 @@ public interface AssemblerRegistry {\n      * @return an assembler instance.\n      */\n     <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Class<? extends Annotation> qualifier);\n+                                                           Class<D> dtoClass,\n+                                                           @Nullable Class<? extends Annotation> qualifier);\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "59",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 94.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "warning",
                    "message": "'interface def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/63/AssemblerRegistry.java\nindex d8c0e28fc7f..04bee033742 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/63/AssemblerRegistry.java\n@@ -42,7 +42,7 @@ public interface AssemblerRegistry {\n     <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n             @Nullable Annotation qualifier);\n \n-    /**\n+/**\n      * Returns the Assembler matching the given aggregate root class and the dto class for the\n      * specified qualifier.\n      *\n@@ -56,7 +56,7 @@ public interface AssemblerRegistry {\n     <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n             @Nullable Class<? extends Annotation> qualifier);\n \n-    /**\n+/**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class.\n      *\n      * @param <T>                  the type of the tuple.\n@@ -65,10 +65,9 @@ public interface AssemblerRegistry {\n      * @param dtoClass             the dto class.\n      * @return an assembler instance.\n      */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass);\n+    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass);\n \n-    /**\n+/**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n      * the specified qualifier.\n      *\n@@ -79,10 +78,9 @@ public interface AssemblerRegistry {\n      * @param qualifier            the assembler qualifier.\n      * @return an assembler instance.\n      */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Annotation qualifier);\n+    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass, @Nullable Annotation qualifier);\n \n-    /**\n+/**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n      * the specified qualifier.\n      *\n@@ -93,6 +91,5 @@ public interface AssemblerRegistry {\n      * @param qualifier            the assembler qualifier.\n      * @return an assembler instance.\n      */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Class<? extends Annotation> qualifier);\n-}\n+    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass, @Nullable Class<? extends Annotation> qualifier);\n+    }\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "32",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 42.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 1,026).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 1,548).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 80.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 2,601).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 94.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 3,144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/63/AssemblerRegistry.java\nindex d8c0e28fc7f..998297e1dcf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/63/AssemblerRegistry.java\n@@ -15,6 +15,8 @@ import org.seedstack.business.domain.AggregateRoot;\n /**\n  * This registry allows to access assemblers programmatically.\n  */\n+\n+\n public interface AssemblerRegistry {\n \n     /**\n@@ -25,8 +27,7 @@ public interface AssemblerRegistry {\n      * @param aggregateRootClass the aggregate root class.\n      * @param dtoClass           the dto class.\n      * @return an assembler instance.\n-     */\n-    <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass);\n+     */<A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass);\n \n     /**\n      * Returns the Assembler matching the given aggregate root class and the dto class for the\n@@ -38,9 +39,9 @@ public interface AssemblerRegistry {\n      * @param dtoClass           the dto class.\n      * @param qualifier          the assembler qualifier.\n      * @return an assembler instance.\n-     */\n-    <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n-            @Nullable Annotation qualifier);\n+     */<A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n+\nullable Annotation qualifier);\n \n     /**\n      * Returns the Assembler matching the given aggregate root class and the dto class for the\n@@ -52,9 +53,9 @@ public interface AssemblerRegistry {\n      * @param dtoClass           the dto class.\n      * @param qualifier          the assembler qualifier.\n      * @return an assembler instance.\n-     */\n-    <A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n-            @Nullable Class<? extends Annotation> qualifier);\n+     */<A extends AggregateRoot<?>, D> Assembler<A, D> getAssembler(Class<A> aggregateRootClass, Class<D> dtoClass,\n+\nullable Class<? extends Annotation> qualifier);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class.\n@@ -64,9 +65,7 @@ public interface AssemblerRegistry {\n      * @param aggregateRootClasses an array of aggregate root classes.\n      * @param dtoClass             the dto class.\n      * @return an assembler instance.\n-     */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass);\n+     */<T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n@@ -78,9 +77,9 @@ public interface AssemblerRegistry {\n      * @param dtoClass             the dto class.\n      * @param qualifier            the assembler qualifier.\n      * @return an assembler instance.\n-     */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Annotation qualifier);\n+     */<T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass,\n+\nullable Annotation qualifier);\n \n     /**\n      * Returns the Assembler matching the given list of aggregate root classes and the dto class for\n@@ -92,7 +91,7 @@ public interface AssemblerRegistry {\n      * @param dtoClass             the dto class.\n      * @param qualifier            the assembler qualifier.\n      * @return an assembler instance.\n-     */\n-    <T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses,\n-            Class<D> dtoClass, @Nullable Class<? extends Annotation> qualifier);\n-}\n+     */<T extends Tuple, D> Assembler<T, D> getTupleAssembler(Class<? extends AggregateRoot<?>>[] aggregateRootClasses, Class<D> dtoClass,\n+\nullable Class<? extends Annotation> qualifier);\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/63/AssemblerRegistry.java\nindex d8c0e28fc7f..5c5ddb9cc9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/63/AssemblerRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/63/AssemblerRegistry.java\nindex d8c0e28fc7f..5c5ddb9cc9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/63/AssemblerRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/63/AssemblerRegistry.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
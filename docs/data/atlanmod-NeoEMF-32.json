{
    "project_name": "atlanmod-NeoEMF",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "219",
                "column": "73",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    public EClass get() {\n        return checkNotNull(lazyClass.get(),\n                \"Unable to find the EPackage associated with URI: %s. \" +\n                        \"Make sure it is registered in EPackage.Registry.\", uri);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler/32/ClassBean.java\nindex 7fc5725342b..3a38aef5cbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler/32/ClassBean.java\n@@ -216,8 +216,7 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public EClass get() {\n         return checkNotNull(lazyClass.get(),\n-                \"Unable to find the EPackage associated with URI: %s. \" +\n-                        \"Make sure it is registered in EPackage.Registry.\", uri);\n+                \"Unable to find the EPackage associated with URI: %s. \" + \"Make sure it is registered in EPackage.Registry.\", uri);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "213",
                    "column": "69",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/intellij/32/ClassBean.java\nindex 7fc5725342b..75839dd6c93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/intellij/32/ClassBean.java\n@@ -68,10 +68,10 @@ public class ClassBean implements Serializable {\n         this.uri = checkNotNull(uri, \"uri\");\n \n         lazyClass = LazyReference.soft(() ->\n-                Optional.ofNullable(EPackage.Registry.INSTANCE.getEPackage(uri))\n-                        .map(p -> p.getEClassifier(name))\n-                        .map(EClass.class::cast)\n-                        .orElse(null));\n+            Optional.ofNullable(EPackage.Registry.INSTANCE.getEPackage(uri))\n+                .map(p -> p.getEClassifier(name))\n+                .map(EClass.class::cast)\n+                .orElse(null));\n     }\n \n     /**\n@@ -93,9 +93,7 @@ public class ClassBean implements Serializable {\n      *\n      * @param object the object from which the {@link EClass} has to be retrieve with the {@link\n      *               PersistentEObject#eClass()} method\n-     *\n      * @return a new {@code ClassBean}\n-     *\n      * @throws NullPointerException if any argument is {@code null}\n      * @see #from(EClass)\n      */\n@@ -110,9 +108,7 @@ public class ClassBean implements Serializable {\n      * This method behaves like: {@code of(reference.getName(), reference.getEPackage().getNsURI())}.\n      *\n      * @param eClass the {@link EClass}\n-     *\n      * @return a new {@code ClassBean}\n-     *\n      * @throws NullPointerException if any argument is {@code null}\n      */\n     @Nonnull\n@@ -126,9 +122,7 @@ public class ClassBean implements Serializable {\n      *\n      * @param name the name of the {@link EClass}\n      * @param uri  the literal representation of the {@link URI} of the {@link EClass}\n-     *\n      * @return a new {@code ClassBean}\n-     *\n      * @throws NullPointerException if any argument is {@code null}\n      */\n     @Nonnull\n@@ -183,10 +177,10 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public Optional<ClassBean> inheritFrom() {\n         return get().getESuperTypes()\n-                .parallelStream()\n-                .filter(c -> !c.isInterface())\n-                .map(ClassBean::from)\n-                .findAny();\n+            .parallelStream()\n+            .filter(c -> !c.isInterface())\n+            .map(ClassBean::from)\n+            .findAny();\n     }\n \n     /**\n@@ -198,14 +192,14 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public Set<ClassBean> inheritedBy() {\n         return get().getEPackage().getEClassifiers()\n-                .parallelStream()\n-                .filter(EClass.class::isInstance)\n-                .map(EClass.class::cast)\n-                .filter(c -> get().isSuperTypeOf(c))\n-                .filter(c -> !c.isAbstract())\n-                .filter(c -> !c.isInterface())\n-                .map(ClassBean::from)\n-                .collect(Collectors.toSet());\n+            .parallelStream()\n+            .filter(EClass.class::isInstance)\n+            .map(EClass.class::cast)\n+            .filter(c -> get().isSuperTypeOf(c))\n+            .filter(c -> !c.isAbstract())\n+            .filter(c -> !c.isInterface())\n+            .map(ClassBean::from)\n+            .collect(Collectors.toSet());\n     }\n \n     /**\n@@ -216,8 +210,8 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public EClass get() {\n         return checkNotNull(lazyClass.get(),\n-                \"Unable to find the EPackage associated with URI: %s. \" +\n-                        \"Make sure it is registered in EPackage.Registry.\", uri);\n+            \"Unable to find the EPackage associated with URI: %s. \" +\n+                \"Make sure it is registered in EPackage.Registry.\", uri);\n     }\n \n     @Override\n@@ -236,7 +230,7 @@ public class ClassBean implements Serializable {\n \n         ClassBean that = ClassBean.class.cast(o);\n         return Objects.equals(name, that.name)\n-                && Objects.equals(uri, that.uri);\n+            && Objects.equals(uri, that.uri);\n     }\n \n     @Override\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/naturalize/32/ClassBean.java\nindex 7fc5725342b..a9fe8789206 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/naturalize/32/ClassBean.java\n@@ -216,8 +216,7 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public EClass get() {\n         return checkNotNull(lazyClass.get(),\n-                \"Unable to find the EPackage associated with URI: %s. \" +\n-                        \"Make sure it is registered in EPackage.Registry.\", uri);\n+                \"Unable to find the EPackage associated with URI: %s. \" + \"Make sure it is registered in EPackage.Registry.\", uri);\n     }\n \n     @Override\n@@ -243,5 +242,4 @@ public class ClassBean implements Serializable {\n     public String toString() {\n         return String.format(\"ClassBean {%s @ %s}\", name, uri);\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler_random/32/ClassBean.java\nindex 7fc5725342b..3a38aef5cbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler_random/32/ClassBean.java\n@@ -216,8 +216,7 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public EClass get() {\n         return checkNotNull(lazyClass.get(),\n-                \"Unable to find the EPackage associated with URI: %s. \" +\n-                        \"Make sure it is registered in EPackage.Registry.\", uri);\n+                \"Unable to find the EPackage associated with URI: %s. \" + \"Make sure it is registered in EPackage.Registry.\", uri);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "219",
                    "column": "72",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler_three_grams/32/ClassBean.java\nindex 7fc5725342b..6a59cead50a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/errored/1/32/ClassBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/atlanmod-NeoEMF/styler_three_grams/32/ClassBean.java\n@@ -216,8 +216,7 @@ public class ClassBean implements Serializable {\n     @Nonnull\n     public EClass get() {\n         return checkNotNull(lazyClass.get(),\n-                \"Unable to find the EPackage associated with URI: %s. \" +\n-                        \"Make sure it is registered in EPackage.Registry.\", uri);\n+                \"Unable to find the EPackage associated with URI: %s. \"+ \"Make sure it is registered in EPackage.Registry.\", uri);\n     }\n \n     @Override\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff",
        "styler_three_grams"
    ]
}
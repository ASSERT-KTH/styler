{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2983",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2983/ByteBufferReadableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2983/ByteBufferReadableChannel.java\nindex b3d904259a6..3ddc811b799 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2983/ByteBufferReadableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2983/ByteBufferReadableChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -29,57 +30,57 @@ import org.neo4j.kernel.impl.transaction.log.ReadableClosableChannel;\n  */\n public class ByteBufferReadableChannel implements ReadableClosableChannel\n {\n-    private final ByteBuffer buffer;\n+  private final ByteBuffer buffer;\n \n-    public ByteBufferReadableChannel( ByteBuffer buffer )\n-    {\n-        this.buffer = buffer;\n-    }\n+  public ByteBufferReadableChannel(ByteBuffer buffer)\n+  {\n+    this.buffer = buffer;\n+  }\n \n-    @Override\n-    public byte get()\n-    {\n-        return buffer.get();\n-    }\n+  @Override\n+  public byte get()\n+  {\n+    return buffer.get();\n+  }\n \n-    @Override\n-    public short getShort()\n-    {\n-        return buffer.getShort();\n-    }\n+  @Override\n+  public short getShort()\n+  {\n+    return buffer.getShort();\n+  }\n \n-    @Override\n-    public int getInt()\n-    {\n-        return buffer.getInt();\n-    }\n+  @Override\n+  public int getInt()\n+  {\n+    return buffer.getInt();\n+  }\n \n-    @Override\n-    public long getLong()\n-    {\n-        return buffer.getLong();\n-    }\n+  @Override\n+  public long getLong()\n+  {\n+    return buffer.getLong();\n+  }\n \n-    @Override\n-    public float getFloat()\n-    {\n-        return buffer.getFloat();\n-    }\n+  @Override\n+  public float getFloat()\n+  {\n+    return buffer.getFloat();\n+  }\n \n-    @Override\n-    public double getDouble()\n-    {\n-        return buffer.getDouble();\n-    }\n+  @Override\n+  public double getDouble()\n+  {\n+    return buffer.getDouble();\n+  }\n \n-    @Override\n-    public void get( byte[] bytes, int length )\n-    {\n-        buffer.get( bytes, 0, length );\n-    }\n+  @Override\n+  public void get(byte[] bytes, int length)\n+  {\n+    buffer.get(bytes, 0, length);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-    }\n+  @Override\n+  public void close()\n+  {\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2983/ByteBufferReadableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2983/ByteBufferReadableChannel.java\nindex b3d904259a6..f55dd4dfc27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2983/ByteBufferReadableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2983/ByteBufferReadableChannel.java\n@@ -82,4 +82,4 @@ public class ByteBufferReadableChannel implements ReadableClosableChannel\n     public void close()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
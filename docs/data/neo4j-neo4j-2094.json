{
    "project_name": "neo4j-neo4j",
    "error_id": "2094",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2094/IoPrimitiveUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2094/IoPrimitiveUtils.java\nindex db195c798f8..f5c85b5b1b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2094/IoPrimitiveUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2094/IoPrimitiveUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs;\n \n import java.io.IOException;\n@@ -34,57 +35,57 @@ public final class IoPrimitiveUtils\n     {\n     }\n \n-    public static String readString( ReadableChannel channel, int length ) throws IOException\n+    public static String readString(ReadableChannel channel, int length) throws IOException\n     {\n         assert length >= 0 : \"invalid array length \" + length;\n         byte[] chars = new byte[length];\n-        channel.get( chars, length );\n-        return UTF8.decode( chars );\n+        channel.get(chars, length);\n+        return UTF8.decode(chars);\n     }\n \n-    public static void write3bLengthAndString( WritableChannel channel, String string ) throws IOException\n+    public static void write3bLengthAndString(WritableChannel channel, String string) throws IOException\n     {\n-        byte[] chars = UTF8.encode( string );\n+        byte[] chars = UTF8.encode(string);\n         // 3 bytes to represent the length (4 is a bit overkill)... maybe\n         // this space optimization is a bit overkill also :)\n-        channel.putShort( (short)chars.length );\n-        channel.put( (byte)(chars.length >> 16) );\n+        channel.putShort((short) chars.length);\n+        channel.put((byte) (chars.length >> 16));\n         channel.put(chars, chars.length);\n     }\n \n-    public static String read3bLengthAndString( ReadableChannel channel ) throws IOException\n+    public static String read3bLengthAndString(ReadableChannel channel) throws IOException\n     {\n         short lengthShort = channel.getShort();\n         byte lengthByte = channel.get();\n         int length = (lengthByte << 16) | (lengthShort & 0xFFFF);\n         byte[] chars = new byte[length];\n-        channel.get( chars, length );\n-        return UTF8.decode( chars );\n+        channel.get(chars, length);\n+        return UTF8.decode(chars);\n     }\n \n-    public static void write2bLengthAndString( WritableChannel channel, String string ) throws IOException\n+    public static void write2bLengthAndString(WritableChannel channel, String string) throws IOException\n     {\n-        byte[] chars = UTF8.encode( string );\n-        channel.putShort( (short)chars.length );\n+        byte[] chars = UTF8.encode(string);\n+        channel.putShort((short) chars.length);\n         channel.put(chars, chars.length);\n     }\n \n-    public static String read2bLengthAndString( ReadableChannel channel ) throws IOException\n+    public static String read2bLengthAndString(ReadableChannel channel) throws IOException\n     {\n         short length = channel.getShort();\n-        return readString( channel, length );\n+        return readString(channel, length);\n     }\n \n-    public static boolean readAndFlip( ReadableByteChannel channel, ByteBuffer buffer, int bytes )\n-            throws IOException\n+    public static boolean readAndFlip(ReadableByteChannel channel, ByteBuffer buffer, int bytes)\n+      throws IOException\n     {\n         buffer.clear();\n-        buffer.limit( bytes );\n-        while ( buffer.hasRemaining() )\n+        buffer.limit(bytes);\n+        while (buffer.hasRemaining())\n         {\n-            int read = channel.read( buffer );\n+            int read = channel.read(buffer);\n \n-            if ( read == -1 )\n+            if (read == -1)\n             {\n                 return false;\n             }\n@@ -93,55 +94,55 @@ public final class IoPrimitiveUtils\n         return true;\n     }\n \n-    public static Integer readInt( ReadableByteChannel channel, ByteBuffer buffer ) throws IOException\n+    public static Integer readInt(ReadableByteChannel channel, ByteBuffer buffer) throws IOException\n     {\n-        return readAndFlip( channel, buffer, 4 ) ? buffer.getInt() : null;\n+        return readAndFlip(channel, buffer, 4) ? buffer.getInt() : null;\n     }\n \n-    public static byte[] readBytes( ReadableByteChannel channel, byte[] array ) throws IOException\n+    public static byte[] readBytes(ReadableByteChannel channel, byte[] array) throws IOException\n     {\n-        return readBytes( channel, array, array.length );\n+        return readBytes(channel, array, array.length);\n     }\n \n-    public static byte[] readBytes( ReadableByteChannel channel, byte[] array, int length ) throws IOException\n+    public static byte[] readBytes(ReadableByteChannel channel, byte[] array, int length) throws IOException\n     {\n-        return readAndFlip( channel, ByteBuffer.wrap( array ), length ) ? array : null;\n+        return readAndFlip(channel, ByteBuffer.wrap(array), length) ? array : null;\n     }\n \n-    public static Map<String, String> read2bMap( ReadableChannel channel ) throws IOException\n+    public static Map<String, String> read2bMap(ReadableChannel channel) throws IOException\n     {\n         short size = channel.getShort();\n-        Map<String, String> map = new HashMap<>( size );\n-        for ( int i = 0; i < size; i++ )\n+        Map<String, String> map = new HashMap<>(size);\n+        for (int i = 0; i < size; i++)\n         {\n-            String key = read2bLengthAndString( channel );\n-            String value = read2bLengthAndString( channel );\n-            map.put( key, value );\n+            String key = read2bLengthAndString(channel);\n+            String value = read2bLengthAndString(channel);\n+            map.put(key, value);\n         }\n         return map;\n     }\n \n-    public static void writeInt( StoreChannel channel, ByteBuffer buffer, int value )\n-            throws IOException\n+    public static void writeInt(StoreChannel channel, ByteBuffer buffer, int value)\n+      throws IOException\n     {\n         buffer.clear();\n-        buffer.putInt( value );\n+        buffer.putInt(value);\n         buffer.flip();\n-        channel.writeAll( buffer );\n+        channel.writeAll(buffer);\n     }\n \n-    public static Object[] asArray( Object propertyValue )\n+    public static Object[] asArray(Object propertyValue)\n     {\n-        if ( propertyValue.getClass().isArray() )\n+        if (propertyValue.getClass().isArray())\n         {\n-            int length = Array.getLength( propertyValue );\n-            Object[] result = new Object[ length ];\n-            for ( int i = 0; i < length; i++ )\n+            int length = Array.getLength(propertyValue);\n+            Object[] result = new Object[length];\n+            for (int i = 0; i < length; i++)\n             {\n-                result[ i ] = Array.get( propertyValue, i );\n+                result[i] = Array.get(propertyValue, i);\n             }\n             return result;\n         }\n-        return new Object[] { propertyValue };\n+        return new Object[] {propertyValue};\n     }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4109",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4109/LocalDeadlockDetectedException.java\nindex 28b62c80452..46571cf3e7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4109/LocalDeadlockDetectedException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.lock;\n \n import java.io.StringWriter;\n@@ -36,7 +37,7 @@ import static java.lang.String.format;\n  * deadlock exceptions and retry. This exception is thrown instead of awaiting a lock locally on a slave\n  * after it was acquired on the master, since applying a lock locally after master granted it should succeed,\n  * or fail; it cannot wait for another condition.\n- *\n+ * <p>\n  * While this work-around is in place there is more breathing room to figure out the real problem preventing\n  * some local locks to be grabbed.\n  *\n@@ -44,21 +45,21 @@ import static java.lang.String.format;\n  */\n public class LocalDeadlockDetectedException extends DeadlockDetectedException\n {\n-    public LocalDeadlockDetectedException( Locks.Client lockClient, Locks lockManager, ResourceType resourceType, long resourceId,\n-            LockType type )\n-    {\n-        super( constructHelpfulDiagnosticsMessage( lockClient, lockManager, resourceType, resourceId, type ) );\n-    }\n+  public LocalDeadlockDetectedException(Locks.Client lockClient, Locks lockManager, ResourceType resourceType, long resourceId,\n+                                        LockType type)\n+  {\n+    super(constructHelpfulDiagnosticsMessage(lockClient, lockManager, resourceType, resourceId, type));\n+  }\n \n-    private static String constructHelpfulDiagnosticsMessage( Locks.Client client, Locks lockManager,\n-                                                  ResourceType resourceType, long resourceId, LockType type )\n-    {\n-        StringWriter stringWriter = new StringWriter();\n-        stringWriter.append( format(\n-                \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\",\n-                client, type, resourceType, resourceId ) );\n+  private static String constructHelpfulDiagnosticsMessage(Locks.Client client, Locks lockManager,\n+                                                           ResourceType resourceType, long resourceId, LockType type)\n+  {\n+    StringWriter stringWriter = new StringWriter();\n+    stringWriter.append(format(\n+        \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\",\n+        client, type, resourceType, resourceId));\n \n-        lockManager.accept( new DumpLocksVisitor( FormattedLog.withUTCTimeZone().toWriter( stringWriter ) ) );\n-        return stringWriter.toString();\n-    }\n+    lockManager.accept(new DumpLocksVisitor(FormattedLog.withUTCTimeZone().toWriter(stringWriter)));\n+    return stringWriter.toString();\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4109/LocalDeadlockDetectedException.java\nindex 28b62c80452..836b79e8ce3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4109/LocalDeadlockDetectedException.java\n@@ -50,15 +50,11 @@ public class LocalDeadlockDetectedException extends DeadlockDetectedException\n         super( constructHelpfulDiagnosticsMessage( lockClient, lockManager, resourceType, resourceId, type ) );\n     }\n \n-    private static String constructHelpfulDiagnosticsMessage( Locks.Client client, Locks lockManager,\n-                                                  ResourceType resourceType, long resourceId, LockType type )\n-    {\n+    private static String constructHelpfulDiagnosticsMessage( Locks.Client client, Locks lockManager, ResourceType resourceType, long resourceId, LockType type )\n+{\n         StringWriter stringWriter = new StringWriter();\n-        stringWriter.append( format(\n-                \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\",\n-                client, type, resourceType, resourceId ) );\n-\n-        lockManager.accept( new DumpLocksVisitor( FormattedLog.withUTCTimeZone().toWriter( stringWriter ) ) );\n+        stringWriter.append( format( \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\", client, type, resourceType, resourceId ) );\n+lockManager.accept( new DumpLocksVisitor( FormattedLog.withUTCTimeZone().toWriter( stringWriter ) ) );\n         return stringWriter.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4109/LocalDeadlockDetectedException.java\nindex 28b62c80452..23cc3f087a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4109/LocalDeadlockDetectedException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4109/LocalDeadlockDetectedException.java\n@@ -20,14 +20,12 @@\n package org.neo4j.kernel.ha.lock;\n \n import java.io.StringWriter;\n-\n import org.neo4j.kernel.DeadlockDetectedException;\n import org.neo4j.kernel.impl.locking.DumpLocksVisitor;\n import org.neo4j.kernel.impl.locking.LockType;\n import org.neo4j.kernel.impl.locking.Locks;\n import org.neo4j.logging.FormattedLog;\n import org.neo4j.storageengine.api.lock.ResourceType;\n-\n import static java.lang.String.format;\n \n /**\n@@ -42,23 +40,19 @@ import static java.lang.String.format;\n  *\n  * @author Mattias Persson\n  */\n+\n public class LocalDeadlockDetectedException extends DeadlockDetectedException\n {\n-    public LocalDeadlockDetectedException( Locks.Client lockClient, Locks lockManager, ResourceType resourceType, long resourceId,\n-            LockType type )\n+    public LocalDeadlockDetectedException( Locks.Client lockClient, Locks lockManager, ResourceType resourceType, long resourceId, LockType type )\n     {\n         super( constructHelpfulDiagnosticsMessage( lockClient, lockManager, resourceType, resourceId, type ) );\n     }\n \n-    private static String constructHelpfulDiagnosticsMessage( Locks.Client client, Locks lockManager,\n-                                                  ResourceType resourceType, long resourceId, LockType type )\n+    private static String constructHelpfulDiagnosticsMessage( Locks.Client client, Locks lockManager, ResourceType resourceType, long resourceId, LockType type )\n     {\n         StringWriter stringWriter = new StringWriter();\n-        stringWriter.append( format(\n-                \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\",\n-                client, type, resourceType, resourceId ) );\n-\n+        stringWriter.append( format( \"%s tried to apply local %s lock on %s(%s) after acquired on master. Currently these locks exist:%n\", client, type, resourceType, resourceId ) );\n         lockManager.accept( new DumpLocksVisitor( FormattedLog.withUTCTimeZone().toWriter( stringWriter ) ) );\n         return stringWriter.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
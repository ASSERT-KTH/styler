{
    "project_name": "graphfoundation-ongdb",
    "error_id": "718",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/718/QueryContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/718/QueryContext.java\nindex 544eca5354e..147eef7b03e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/718/QueryContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/718/QueryContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.lucene;\n \n import org.apache.lucene.queryparser.classic.QueryParser.Operator;\n@@ -40,235 +41,234 @@ import org.neo4j.index.impl.lucene.explicit.LuceneUtil;\n  */\n public class QueryContext\n {\n-    private final Object queryOrQueryObject;\n-    private Sort sorting;\n-    private Operator defaultOperator;\n-    private boolean tradeCorrectnessForSpeed;\n-    private int topHits;\n+  private final Object queryOrQueryObject;\n+  private Sort sorting;\n+  private Operator defaultOperator;\n+  private boolean tradeCorrectnessForSpeed;\n+  private int topHits;\n \n-    public QueryContext( Object queryOrQueryObject )\n-    {\n-        this.queryOrQueryObject = queryOrQueryObject;\n-    }\n+  public QueryContext(Object queryOrQueryObject)\n+  {\n+    this.queryOrQueryObject = queryOrQueryObject;\n+  }\n \n-    /**\n-     * @return the query (or query object) specified in the constructor.\n-     */\n-    public Object getQueryOrQueryObject()\n-    {\n-        return queryOrQueryObject;\n-    }\n+  /**\n+   * @return the query (or query object) specified in the constructor.\n+   */\n+  public Object getQueryOrQueryObject()\n+  {\n+    return queryOrQueryObject;\n+  }\n \n-    /**\n-     * Returns a QueryContext with sorting added to it.\n-     *\n-     * @param sorting The sorting to be used\n-     * @return A QueryContext with the sorting applied.\n-     */\n-    public QueryContext sort( Sort sorting )\n-    {\n-        this.sorting = sorting;\n-        return this;\n-    }\n+  /**\n+   * Returns a QueryContext with sorting added to it.\n+   *\n+   * @param sorting The sorting to be used\n+   * @return A QueryContext with the sorting applied.\n+   */\n+  public QueryContext sort(Sort sorting)\n+  {\n+    this.sorting = sorting;\n+    return this;\n+  }\n \n-    /**\n-     * Returns a QueryContext with sorting added to it.\n-     *\n-     * @param key The key to sort on.\n-     * @param additionalKeys Any additional keys to sort on.\n-     * @return A QueryContext with sorting added to it.\n-     */\n-    public QueryContext sort( String key, String... additionalKeys )\n+  /**\n+   * Returns a QueryContext with sorting added to it.\n+   *\n+   * @param key            The key to sort on.\n+   * @param additionalKeys Any additional keys to sort on.\n+   * @return A QueryContext with sorting added to it.\n+   */\n+  public QueryContext sort(String key, String... additionalKeys)\n+  {\n+    SortField firstSortField = new SortedSetSortField(key, false);\n+    if (additionalKeys.length == 0)\n     {\n-        SortField firstSortField = new SortedSetSortField( key, false );\n-        if ( additionalKeys.length == 0 )\n-        {\n-            return sort( new Sort( firstSortField ) );\n-        }\n-\n-        SortField[] sortFields = new SortField[1 + additionalKeys.length];\n-        sortFields[0] = firstSortField;\n-        for ( int i = 0; i < additionalKeys.length; i++ )\n-        {\n-            sortFields[1 + i] = new SortedSetSortField( additionalKeys[i], false );\n-        }\n-        return sort( new Sort( sortFields ) );\n+      return sort(new Sort(firstSortField));\n     }\n \n-    /**\n-     * @return a QueryContext with sorting by relevance, i.e. sorted after which\n-     * score each hit has.\n-     */\n-    public QueryContext sortByScore()\n+    SortField[] sortFields = new SortField[1 + additionalKeys.length];\n+    sortFields[0] = firstSortField;\n+    for (int i = 0; i < additionalKeys.length; i++)\n     {\n-        return sort( Sort.RELEVANCE );\n+      sortFields[1 + i] = new SortedSetSortField(additionalKeys[i], false);\n     }\n+    return sort(new Sort(sortFields));\n+  }\n \n-    /**\n-     * Sort the results of a numeric range query if the query in this context\n-     * is a {@link NumericRangeQuery}, see {@link #numericRange(String, Number, Number)},\n-     * Otherwise an {@link IllegalStateException} will be thrown.\n-     *\n-     * @param key the key to sort on.\n-     * @param reversed if the sort order should be reversed or not. {@code true}\n-     * for lowest first (ascending), {@code false} for highest first (descending)\n-     * @return a QueryContext with sorting by numeric value.\n-     */\n-    public QueryContext sortNumeric( String key, boolean reversed )\n-    {\n-        if ( !( queryOrQueryObject instanceof NumericRangeQuery ) )\n-        {\n-            throw new IllegalStateException( \"Not a numeric range query\" );\n-        }\n-\n-        Number number = ((NumericRangeQuery)queryOrQueryObject).getMin();\n-        number = number != null ? number : ((NumericRangeQuery)queryOrQueryObject).getMax();\n-        SortField.Type fieldType = SortField.Type.INT;\n-        if ( number instanceof Long )\n-        {\n-            fieldType = SortField.Type.LONG;\n-        }\n-        else if ( number instanceof Float )\n-        {\n-            fieldType = SortField.Type.FLOAT;\n-        }\n-        else if ( number instanceof Double )\n-        {\n-            fieldType = SortField.Type.DOUBLE;\n-        }\n-        sort( new Sort( new SortedNumericSortField( key, fieldType, reversed ) ) );\n-        return this;\n-    }\n+  /**\n+   * @return a QueryContext with sorting by relevance, i.e. sorted after which\n+   * score each hit has.\n+   */\n+  public QueryContext sortByScore()\n+  {\n+    return sort(Sort.RELEVANCE);\n+  }\n \n-    /**\n-     * Returns the sorting setting for this context.\n-     *\n-     * @return the sorting set with one of the sort methods, f.ex\n-     * {@link #sort(Sort)} or {@link #sortByScore()}\n-     */\n-    public Sort getSorting()\n+  /**\n+   * Sort the results of a numeric range query if the query in this context\n+   * is a {@link NumericRangeQuery}, see {@link #numericRange(String, Number, Number)},\n+   * Otherwise an {@link IllegalStateException} will be thrown.\n+   *\n+   * @param key      the key to sort on.\n+   * @param reversed if the sort order should be reversed or not. {@code true}\n+   *                 for lowest first (ascending), {@code false} for highest first (descending)\n+   * @return a QueryContext with sorting by numeric value.\n+   */\n+  public QueryContext sortNumeric(String key, boolean reversed)\n+  {\n+    if (!(queryOrQueryObject instanceof NumericRangeQuery))\n     {\n-        return this.sorting;\n+      throw new IllegalStateException(\"Not a numeric range query\");\n     }\n \n-    /**\n-     * Changes the the default operator used between terms in compound queries,\n-     * default is OR.\n-     *\n-     * @param defaultOperator The new operator to use.\n-     * @return A QueryContext with the new default operator applied.\n-     */\n-    public QueryContext defaultOperator( Operator defaultOperator )\n+    Number number = ((NumericRangeQuery) queryOrQueryObject).getMin();\n+    number = number != null ? number : ((NumericRangeQuery) queryOrQueryObject).getMax();\n+    SortField.Type fieldType = SortField.Type.INT;\n+    if (number instanceof Long)\n     {\n-        this.defaultOperator = defaultOperator;\n-        return this;\n-    }\n-\n-    /**\n-     * Returns the default operator used between terms in compound queries.\n-     *\n-     * @return the default {@link Operator} specified with\n-     *         {@link #defaultOperator} or \"OR\" if none specified.\n-     */\n-    public Operator getDefaultOperator()\n+      fieldType = SortField.Type.LONG;\n+    } else if (number instanceof Float)\n     {\n-        return this.defaultOperator;\n-    }\n-\n-    /**\n-     * Adding to or removing from an index affects results from query methods\n-     * inside the same transaction, even before those changes are committed.\n-     * To let those modifications be visible in query results, some rather heavy\n-     * operations may have to be done, which can be slow to complete.\n-     *\n-     * The default behavior is that these modifications are visible, but using\n-     * this method will tell the query to not strive to include the absolutely\n-     * latest modifications, so that such a performance penalty can be avoided.\n-     *\n-     * @return A QueryContext which doesn't necessarily include the latest\n-     * transaction modifications in the results, but may perform faster.\n-     */\n-    public QueryContext tradeCorrectnessForSpeed()\n+      fieldType = SortField.Type.FLOAT;\n+    } else if (number instanceof Double)\n     {\n-        this.tradeCorrectnessForSpeed = true;\n-        return this;\n+      fieldType = SortField.Type.DOUBLE;\n     }\n+    sort(new Sort(new SortedNumericSortField(key, fieldType, reversed)));\n+    return this;\n+  }\n \n-    /**\n-     * Returns {@code true} if this context is set to prioritize speed over\n-     * the inclusion of transactional state in the results.\n-     * @return whether or not {@link #tradeCorrectnessForSpeed()} has been called.\n-     */\n-    public boolean getTradeCorrectnessForSpeed()\n-    {\n-        return tradeCorrectnessForSpeed;\n-    }\n+  /**\n+   * Returns the sorting setting for this context.\n+   *\n+   * @return the sorting set with one of the sort methods, f.ex\n+   * {@link #sort(Sort)} or {@link #sortByScore()}\n+   */\n+  public Sort getSorting()\n+  {\n+    return this.sorting;\n+  }\n \n-    /**\n-     * Makes use of {@link IndexSearcher#search(org.apache.lucene.search.Query, int)},\n-     * alternatively {@link IndexSearcher#search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, Sort)}\n-     * where only the top {@code numberOfTopHits} hits are returned. Default\n-     * behavior is to return all hits, although lazily retrieved from lucene all\n-     * the way up to the {@link IndexHits} iterator.\n-     *\n-     * @param numberOfTopHits the maximum number of top hits to return.\n-     * @return A {@link QueryContext} with the number of top hits set.\n-     */\n-    public QueryContext top( int numberOfTopHits )\n-    {\n-        this.topHits = numberOfTopHits;\n-        return this;\n-    }\n+  /**\n+   * Changes the the default operator used between terms in compound queries,\n+   * default is OR.\n+   *\n+   * @param defaultOperator The new operator to use.\n+   * @return A QueryContext with the new default operator applied.\n+   */\n+  public QueryContext defaultOperator(Operator defaultOperator)\n+  {\n+    this.defaultOperator = defaultOperator;\n+    return this;\n+  }\n \n-    /**\n-     * Return the max number of results to be returned.\n-     *\n-     * @return the top hits set with {@link #top(int)}.\n-     */\n-    public int getTop()\n-    {\n-        return this.topHits;\n-    }\n+  /**\n+   * Returns the default operator used between terms in compound queries.\n+   *\n+   * @return the default {@link Operator} specified with\n+   * {@link #defaultOperator} or \"OR\" if none specified.\n+   */\n+  public Operator getDefaultOperator()\n+  {\n+    return this.defaultOperator;\n+  }\n \n-    /**\n-     * Will create a {@link QueryContext} with a query for numeric ranges, that is\n-     * values that have been indexed using {@link ValueContext#indexNumeric()}.\n-     * {@code from} (lower) and {@code to} (higher) bounds are inclusive.\n-     * It will match the type of numbers supplied to the type of values that\n-     * are indexed in the index, f.ex. long, int, float and double.\n-     * If both {@code from} and {@code to} is {@code null} then it will default\n-     * to int.\n-     *\n-     * @param key the property key to query.\n-     * @param from the low end of the range (inclusive)\n-     * @param to the high end of the range (inclusive)\n-     * @return a {@link QueryContext} to do numeric range queries with.\n-     */\n-    public static QueryContext numericRange( String key, Number from, Number to )\n-    {\n-        return numericRange( key, from, to, true, true );\n-    }\n+  /**\n+   * Adding to or removing from an index affects results from query methods\n+   * inside the same transaction, even before those changes are committed.\n+   * To let those modifications be visible in query results, some rather heavy\n+   * operations may have to be done, which can be slow to complete.\n+   * <p>\n+   * The default behavior is that these modifications are visible, but using\n+   * this method will tell the query to not strive to include the absolutely\n+   * latest modifications, so that such a performance penalty can be avoided.\n+   *\n+   * @return A QueryContext which doesn't necessarily include the latest\n+   * transaction modifications in the results, but may perform faster.\n+   */\n+  public QueryContext tradeCorrectnessForSpeed()\n+  {\n+    this.tradeCorrectnessForSpeed = true;\n+    return this;\n+  }\n \n-    /**\n-     * Will create a {@link QueryContext} with a query for numeric ranges, that is\n-     * values that have been indexed using {@link ValueContext#indexNumeric()}.\n-     * It will match the type of numbers supplied to the type of values that\n-     * are indexed in the index, f.ex. long, int, float and double.\n-     * If both {@code from} and {@code to} is {@code null} then it will default\n-     * to int.\n-     *\n-     * @param key the property key to query.\n-     * @param from the low end of the range (inclusive)\n-     * @param to the high end of the range (inclusive)\n-     * @param includeFrom whether or not {@code from} (the lower bound) is inclusive\n-     * or not.\n-     * @param includeTo whether or not {@code to} (the higher bound) is inclusive\n-     * or not.\n-     * @return a {@link QueryContext} to do numeric range queries with.\n-     */\n-    public static QueryContext numericRange( String key, Number from, Number to,\n-            boolean includeFrom, boolean includeTo )\n-    {\n-        return new QueryContext( LuceneUtil.rangeQuery( key, from, to, includeFrom, includeTo ) );\n-    }\n+  /**\n+   * Returns {@code true} if this context is set to prioritize speed over\n+   * the inclusion of transactional state in the results.\n+   *\n+   * @return whether or not {@link #tradeCorrectnessForSpeed()} has been called.\n+   */\n+  public boolean getTradeCorrectnessForSpeed()\n+  {\n+    return tradeCorrectnessForSpeed;\n+  }\n+\n+  /**\n+   * Makes use of {@link IndexSearcher#search(org.apache.lucene.search.Query, int)},\n+   * alternatively {@link IndexSearcher#search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, Sort)}\n+   * where only the top {@code numberOfTopHits} hits are returned. Default\n+   * behavior is to return all hits, although lazily retrieved from lucene all\n+   * the way up to the {@link IndexHits} iterator.\n+   *\n+   * @param numberOfTopHits the maximum number of top hits to return.\n+   * @return A {@link QueryContext} with the number of top hits set.\n+   */\n+  public QueryContext top(int numberOfTopHits)\n+  {\n+    this.topHits = numberOfTopHits;\n+    return this;\n+  }\n+\n+  /**\n+   * Return the max number of results to be returned.\n+   *\n+   * @return the top hits set with {@link #top(int)}.\n+   */\n+  public int getTop()\n+  {\n+    return this.topHits;\n+  }\n+\n+  /**\n+   * Will create a {@link QueryContext} with a query for numeric ranges, that is\n+   * values that have been indexed using {@link ValueContext#indexNumeric()}.\n+   * {@code from} (lower) and {@code to} (higher) bounds are inclusive.\n+   * It will match the type of numbers supplied to the type of values that\n+   * are indexed in the index, f.ex. long, int, float and double.\n+   * If both {@code from} and {@code to} is {@code null} then it will default\n+   * to int.\n+   *\n+   * @param key  the property key to query.\n+   * @param from the low end of the range (inclusive)\n+   * @param to   the high end of the range (inclusive)\n+   * @return a {@link QueryContext} to do numeric range queries with.\n+   */\n+  public static QueryContext numericRange(String key, Number from, Number to)\n+  {\n+    return numericRange(key, from, to, true, true);\n+  }\n+\n+  /**\n+   * Will create a {@link QueryContext} with a query for numeric ranges, that is\n+   * values that have been indexed using {@link ValueContext#indexNumeric()}.\n+   * It will match the type of numbers supplied to the type of values that\n+   * are indexed in the index, f.ex. long, int, float and double.\n+   * If both {@code from} and {@code to} is {@code null} then it will default\n+   * to int.\n+   *\n+   * @param key         the property key to query.\n+   * @param from        the low end of the range (inclusive)\n+   * @param to          the high end of the range (inclusive)\n+   * @param includeFrom whether or not {@code from} (the lower bound) is inclusive\n+   *                    or not.\n+   * @param includeTo   whether or not {@code to} (the higher bound) is inclusive\n+   *                    or not.\n+   * @return a {@link QueryContext} to do numeric range queries with.\n+   */\n+  public static QueryContext numericRange(String key, Number from, Number to,\n+                                          boolean includeFrom, boolean includeTo)\n+  {\n+    return new QueryContext(LuceneUtil.rangeQuery(key, from, to, includeFrom, includeTo));\n+  }\n }\n",
            "diff_size": 281
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/718/QueryContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/718/QueryContext.java\nindex 544eca5354e..9b3ca35a753 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/718/QueryContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/718/QueryContext.java\n@@ -92,7 +92,8 @@ public class QueryContext\n         {\n             sortFields[1 + i] = new SortedSetSortField( additionalKeys[i], false );\n         }\n-        return sort( new Sort( sortFields ) );\n+\n+return sort( new Sort( sortFields ) );\n     }\n \n     /**\n@@ -121,8 +122,8 @@ public class QueryContext\n             throw new IllegalStateException( \"Not a numeric range query\" );\n         }\n \n-        Number number = ((NumericRangeQuery)queryOrQueryObject).getMin();\n-        number = number != null ? number : ((NumericRangeQuery)queryOrQueryObject).getMax();\n+        Number number = ((NumericRangeQuery) queryOrQueryObject).getMin();\n+        number = number != null ? number : ((NumericRangeQuery) queryOrQueryObject).getMax();\n         SortField.Type fieldType = SortField.Type.INT;\n         if ( number instanceof Long )\n         {\n@@ -136,7 +137,8 @@ public class QueryContext\n         {\n             fieldType = SortField.Type.DOUBLE;\n         }\n-        sort( new Sort( new SortedNumericSortField( key, fieldType, reversed ) ) );\n+\n+sort( new Sort( new SortedNumericSortField( key, fieldType, reversed ) ) );\n         return this;\n     }\n \n@@ -271,4 +273,4 @@ public class QueryContext\n     {\n         return new QueryContext( LuceneUtil.rangeQuery( key, from, to, includeFrom, includeTo ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
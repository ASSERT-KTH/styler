{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2343",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "360",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "402",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "441",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "477",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "511",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "646",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "671",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "679",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "724",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "728",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "728",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "732",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "754",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2343/HttpCopier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2343/HttpCopier.java\nindex 3d117715ad7..2404973eacf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2343/HttpCopier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2343/HttpCopier.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.neo4j.pushtocloud;\n \n import org.apache.commons.compress.utils.IOUtils;\n@@ -63,760 +64,748 @@ import static org.neo4j.pushtocloud.PushToCloudCommand.ARG_BOLT_URI;\n \n public class HttpCopier implements PushToCloudCommand.Copier\n {\n-    static final int HTTP_RESUME_INCOMPLETE = 308;\n-    static final int HTTP_UNPROCESSABLE_ENTITY = 422;\n-    static final int HTTP_TOO_MANY_REQUESTS = 429;\n-    static final String ERROR_REASON_UNSUPPORTED_INDEXES = \"LegacyIndexes\";\n-    static final String ERROR_REASON_EXCEEDS_MAX_SIZE = \"ImportExceedsMaxSize\";\n-    private static final long POSITION_UPLOAD_COMPLETED = -1;\n-    private static final long MAXIMUM_RETRY_BACKOFF = SECONDS.toMillis( 64 );\n-\n-    private final OutsideWorld outsideWorld;\n-    private final Sleeper sleeper;\n-    private final ProgressListenerFactory progressListenerFactory;\n-\n-    HttpCopier( OutsideWorld outsideWorld )\n-    {\n-        this( outsideWorld, Thread::sleep, ( text, length ) -> ProgressMonitorFactory.textual( outsideWorld.outStream() ).singlePart( text, length ) );\n-    }\n-\n-    HttpCopier( OutsideWorld outsideWorld, Sleeper sleeper, ProgressListenerFactory progressListenerFactory )\n-    {\n-        this.outsideWorld = outsideWorld;\n-        this.sleeper = sleeper;\n-        this.progressListenerFactory = progressListenerFactory;\n-    }\n-\n-    /**\n-     * Do the actual transfer of the source (a Neo4j database dump) to the target.\n-     */\n-    @Override\n-    public void copy( boolean verbose, String consoleURL, String boltUri, Path source, boolean deleteSourceAfterImport, String bearerToken )\n-            throws CommandFailed\n-    {\n-        try\n-        {\n-            String bearerTokenHeader = \"Bearer \" + bearerToken;\n-            long crc32Sum = calculateCrc32HashOfFile( source );\n-            URL signedURL = initiateCopy( verbose, safeUrl( consoleURL + \"/import\" ), crc32Sum, source.toFile().length(), bearerTokenHeader );\n-            URL uploadLocation = initiateResumableUpload( verbose, signedURL );\n-            long sourceLength = outsideWorld.fileSystem().getFileSize( source.toFile() );\n-\n-            // Enter the resume:able upload loop\n-            long position = 0;\n-            int retries = 0;\n-            ThreadLocalRandom random = ThreadLocalRandom.current();\n-            ProgressTrackingOutputStream.Progress\n-                    uploadProgress = new ProgressTrackingOutputStream.Progress( progressListenerFactory.create( \"Upload\", sourceLength ), position );\n-            while ( !resumeUpload( verbose, source, boltUri, sourceLength, position, uploadLocation, uploadProgress ) )\n-            {\n-                position = getResumablePosition( verbose, sourceLength, uploadLocation );\n-                if ( position == POSITION_UPLOAD_COMPLETED )\n-                {\n-                    // This is somewhat unexpected, we didn't get an OK from the upload, but when we asked about how far the upload\n-                    // got it responded that it was fully uploaded. I'd guess we're fine here.\n-                    break;\n-                }\n-\n-                // Truncated exponential backoff\n-                if ( retries > 50 )\n-                {\n-                    throw new CommandFailed( \"Upload failed after numerous attempts. The upload can be resumed with this command: TODO\" );\n-                }\n-                long backoffFromRetryCount = SECONDS.toMillis( 1 << retries++ ) + random.nextInt( 1_000 );\n-                sleeper.sleep( min( backoffFromRetryCount, MAXIMUM_RETRY_BACKOFF ) );\n-            }\n-            uploadProgress.done();\n-\n-            triggerImportProtocol( verbose, safeUrl( consoleURL + \"/import/upload-complete\" ), boltUri, source, crc32Sum, bearerTokenHeader );\n-\n-            doStatusPolling( verbose, consoleURL, bearerToken, sourceLength );\n-\n-            if ( deleteSourceAfterImport )\n-            {\n-                source.toFile().delete();\n-            }\n-            else\n-            {\n-                outsideWorld.stdOutLine( String.format( \"It is safe to delete the dump file now: %s\", source.toFile().getAbsolutePath() ) );\n-            }\n-        }\n-        catch ( InterruptedException | IOException e )\n-        {\n-            throw new CommandFailed( e.getMessage(), e );\n-        }\n-    }\n-\n-    private void doStatusPolling( boolean verbose, String consoleURL, String bearerToken, long fileSize )\n-            throws IOException, InterruptedException, CommandFailed\n-    {\n-        outsideWorld.stdOutLine( \"We have received your export and it is currently being loaded into your Aura instance.\" );\n-        outsideWorld.stdOutLine( \"You can wait here, or abort this command and head over to the console to be notified of when your database is running.\" );\n-        String bearerTokenHeader = \"Bearer \" + bearerToken;\n-        ProgressTrackingOutputStream.Progress statusProgress =\n-                new ProgressTrackingOutputStream.Progress(\n-                        progressListenerFactory.create( \"Import progress (estimated)\", 100L ), 0 );\n-        boolean firstRunning = true;\n-        long importStarted = System.currentTimeMillis();\n-        double importTimeEstimateMinutes = 5 + (3 * bytesToGibibytes( fileSize ));\n-        long importTimeEstimateMillis = TimeUnit.SECONDS.toMillis( (long) (importTimeEstimateMinutes * 60) );\n-        long importStartedTimeout = importStarted + 90 * 1000; // timeout to switch from first running to loading = 1.5 minute\n-        debug( verbose, format(\n-                \"Rough guess for how long dump file import will take: %.0f minutes; file size is %.1f GB (%d bytes)\",\n-                importTimeEstimateMinutes, bytesToGibibytes( fileSize ), fileSize ) );\n-        while ( !statusProgress.isDone() )\n-        {\n-            StatusBody statusBody = getDatabaseStatus( verbose, safeUrl( consoleURL + \"/import/status\" ), bearerTokenHeader );\n-            switch ( statusBody.Status )\n-            {\n-                case \"running\":\n-                    // It could happen that the very first call of this method is so fast, that the database is still in state\n-                    // \"running\". So we need to check if this is the case and ignore the result in that case and only\n-                    // take this result as valid, once the status loading or restoring was seen before.\n-                    if ( !firstRunning )\n-                    {\n-                        statusProgress.rewindTo( 0 );\n-                        statusProgress.add( 100 );\n-                        statusProgress.done();\n-                    }\n-                    else\n-                    {\n-                        boolean passedStartImportTimeout = importStarted > importStartedTimeout;\n-                        if ( passedStartImportTimeout )\n-                        {\n-                            throw new CommandFailed( \"We're sorry, it couldn't be detected that the import was started, \" +\n-                                    \"please check the console for further details.\" );\n-                        }\n-                    }\n-                    break;\n-                case \"loading failed\":\n-                    throw formatCommandFailedError( statusBody.Error.getMessage(), statusBody.Error.getUrl() );\n-                default:\n-                    firstRunning = false;\n-                    long elapsed = System.currentTimeMillis() - importStarted;\n-                    statusProgress.rewindTo( 0 );\n-                    statusProgress.add( importStatusProgressEstimate( statusBody.Status, elapsed, importTimeEstimateMillis ) );\n-                    break;\n-            }\n-            sleeper.sleep( 2000 );\n-        }\n-        outsideWorld.stdOutLine( \"Your data was successfully pushed to Aura and is now running.\" );\n-        long importDurationMillis = System.currentTimeMillis() - importStarted;\n-        debug( verbose, format( \"Import took about %d minutes to complete excluding upload (%d ms)\",\n-                TimeUnit.MILLISECONDS.toMinutes( importDurationMillis ), importDurationMillis ) );\n-    }\n-\n-    int importStatusProgressEstimate( String databaseStatus, long elapsed, long importTimeEstimateMillis )\n-            throws CommandFailed\n-    {\n-        switch ( databaseStatus )\n-        {\n+  static final int HTTP_RESUME_INCOMPLETE = 308;\n+  static final int HTTP_UNPROCESSABLE_ENTITY = 422;\n+  static final int HTTP_TOO_MANY_REQUESTS = 429;\n+  static final String ERROR_REASON_UNSUPPORTED_INDEXES = \"LegacyIndexes\";\n+  static final String ERROR_REASON_EXCEEDS_MAX_SIZE = \"ImportExceedsMaxSize\";\n+  private static final long POSITION_UPLOAD_COMPLETED = -1;\n+  private static final long MAXIMUM_RETRY_BACKOFF = SECONDS.toMillis(64);\n+\n+  private final OutsideWorld outsideWorld;\n+  private final Sleeper sleeper;\n+  private final ProgressListenerFactory progressListenerFactory;\n+\n+  HttpCopier(OutsideWorld outsideWorld)\n+  {\n+    this(outsideWorld, Thread::sleep, (text, length) -> ProgressMonitorFactory.textual(outsideWorld.outStream()).singlePart(text, length));\n+  }\n+\n+  HttpCopier(OutsideWorld outsideWorld, Sleeper sleeper, ProgressListenerFactory progressListenerFactory)\n+  {\n+    this.outsideWorld = outsideWorld;\n+    this.sleeper = sleeper;\n+    this.progressListenerFactory = progressListenerFactory;\n+  }\n+\n+  /**\n+   * Do the actual transfer of the source (a Neo4j database dump) to the target.\n+   */\n+  @Override\n+  public void copy(boolean verbose, String consoleURL, String boltUri, Path source, boolean deleteSourceAfterImport, String bearerToken)\n+      throws CommandFailed\n+  {\n+    try\n+    {\n+      String bearerTokenHeader = \"Bearer \" + bearerToken;\n+      long crc32Sum = calculateCrc32HashOfFile(source);\n+      URL signedURL = initiateCopy(verbose, safeUrl(consoleURL + \"/import\"), crc32Sum, source.toFile().length(), bearerTokenHeader);\n+      URL uploadLocation = initiateResumableUpload(verbose, signedURL);\n+      long sourceLength = outsideWorld.fileSystem().getFileSize(source.toFile());\n+\n+      // Enter the resume:able upload loop\n+      long position = 0;\n+      int retries = 0;\n+      ThreadLocalRandom random = ThreadLocalRandom.current();\n+      ProgressTrackingOutputStream.Progress\n+          uploadProgress = new ProgressTrackingOutputStream.Progress(progressListenerFactory.create(\"Upload\", sourceLength), position);\n+      while (!resumeUpload(verbose, source, boltUri, sourceLength, position, uploadLocation, uploadProgress))\n+      {\n+        position = getResumablePosition(verbose, sourceLength, uploadLocation);\n+        if (position == POSITION_UPLOAD_COMPLETED)\n+        {\n+          // This is somewhat unexpected, we didn't get an OK from the upload, but when we asked about how far the upload\n+          // got it responded that it was fully uploaded. I'd guess we're fine here.\n+          break;\n+        }\n+\n+        // Truncated exponential backoff\n+        if (retries > 50)\n+        {\n+          throw new CommandFailed(\"Upload failed after numerous attempts. The upload can be resumed with this command: TODO\");\n+        }\n+        long backoffFromRetryCount = SECONDS.toMillis(1 << retries++) + random.nextInt(1_000);\n+        sleeper.sleep(min(backoffFromRetryCount, MAXIMUM_RETRY_BACKOFF));\n+      }\n+      uploadProgress.done();\n+\n+      triggerImportProtocol(verbose, safeUrl(consoleURL + \"/import/upload-complete\"), boltUri, source, crc32Sum, bearerTokenHeader);\n+\n+      doStatusPolling(verbose, consoleURL, bearerToken, sourceLength);\n+\n+      if (deleteSourceAfterImport)\n+      {\n+        source.toFile().delete();\n+      } else\n+      {\n+        outsideWorld.stdOutLine(String.format(\"It is safe to delete the dump file now: %s\", source.toFile().getAbsolutePath()));\n+      }\n+    } catch (InterruptedException | IOException e)\n+    {\n+      throw new CommandFailed(e.getMessage(), e);\n+    }\n+  }\n+\n+  private void doStatusPolling(boolean verbose, String consoleURL, String bearerToken, long fileSize)\n+      throws IOException, InterruptedException, CommandFailed\n+  {\n+    outsideWorld.stdOutLine(\"We have received your export and it is currently being loaded into your Aura instance.\");\n+    outsideWorld.stdOutLine(\"You can wait here, or abort this command and head over to the console to be notified of when your database is running.\");\n+    String bearerTokenHeader = \"Bearer \" + bearerToken;\n+    ProgressTrackingOutputStream.Progress statusProgress =\n+        new ProgressTrackingOutputStream.Progress(\n+            progressListenerFactory.create(\"Import progress (estimated)\", 100L), 0);\n+    boolean firstRunning = true;\n+    long importStarted = System.currentTimeMillis();\n+    double importTimeEstimateMinutes = 5 + (3 * bytesToGibibytes(fileSize));\n+    long importTimeEstimateMillis = TimeUnit.SECONDS.toMillis((long) (importTimeEstimateMinutes * 60));\n+    long importStartedTimeout = importStarted + 90 * 1000; // timeout to switch from first running to loading = 1.5 minute\n+    debug(verbose, format(\n+        \"Rough guess for how long dump file import will take: %.0f minutes; file size is %.1f GB (%d bytes)\",\n+        importTimeEstimateMinutes, bytesToGibibytes(fileSize), fileSize));\n+    while (!statusProgress.isDone())\n+    {\n+      StatusBody statusBody = getDatabaseStatus(verbose, safeUrl(consoleURL + \"/import/status\"), bearerTokenHeader);\n+      switch (statusBody.Status)\n+      {\n         case \"running\":\n-            return 0;\n-        case \"loading\":\n-            int loadProgressEstimation = (int) Math.min( 98, (elapsed * 98) / importTimeEstimateMillis );\n-            return 1 + loadProgressEstimation;\n-        default:\n-            throw new CommandFailed( String.format(\n-                    \"We're sorry, something has failed during the loading of your database. \"\n-                            + \"Please try again and if this problem persists, please open up a support case. Database status: %s\",\n-                    databaseStatus ) );\n-        }\n-    }\n-\n-    @Override\n-    public String authenticate( boolean verbose, String consoleUrl, String username, char[] password, boolean consentConfirmed ) throws CommandFailed\n-    {\n-        try\n-        {\n-            URL url = safeUrl( consoleUrl + \"/import/auth\" );\n-            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n-            try\n+          // It could happen that the very first call of this method is so fast, that the database is still in state\n+          // \"running\". So we need to check if this is the case and ignore the result in that case and only\n+          // take this result as valid, once the status loading or restoring was seen before.\n+          if (!firstRunning)\n+          {\n+            statusProgress.rewindTo(0);\n+            statusProgress.add(100);\n+            statusProgress.done();\n+          } else\n+          {\n+            boolean passedStartImportTimeout = importStarted > importStartedTimeout;\n+            if (passedStartImportTimeout)\n             {\n-                connection.setRequestMethod( \"POST\" );\n-                connection.setRequestProperty( \"Authorization\", \"Basic \" + base64Encode( username, password ) );\n-                connection.setRequestProperty( \"Accept\", \"application/json\" );\n-                connection.setRequestProperty( \"Confirmed\", String.valueOf( consentConfirmed ) );\n-                int responseCode = connection.getResponseCode();\n-                switch ( responseCode )\n-                {\n-                case HTTP_NOT_FOUND:\n-                    throw errorResponse( verbose, connection, \"We encountered a problem while contacting your Neo4j Aura instance, \" +\n-                            \"please check your Bolt URI\" );\n-                case HTTP_MOVED_PERM:\n-                    throw updatePluginErrorResponse( connection );\n-                case HTTP_UNAUTHORIZED:\n-                    throw errorResponse( verbose, connection, \"Invalid username/password credentials\" );\n-                case HTTP_FORBIDDEN:\n-                    throw errorResponse( verbose, connection, \"The credentials provided do not give administrative access to the target database\" );\n-                case HTTP_CONFLICT:\n-                    // the cloud target database has already been populated with data, and importing the dump file would overwrite it.\n-                    boolean consent =\n-                            askForBooleanConsent( \"The target database contains data. Overwrite it? \" +\n-                                    \"(Yes/No)\" );\n-                    if ( consent )\n-                    {\n-                        return authenticate( verbose, consoleUrl, username, password, true );\n-                    }\n-                    else\n-                    {\n-                        throw errorResponse( verbose, connection, \"No consent to overwrite database. Aborting\" );\n-                    }\n-                case HTTP_OK:\n-                    try ( InputStream responseData = connection.getInputStream() )\n-                    {\n-                        String json = new String( toByteArray( responseData ), UTF_8 );\n-                        return parseJsonUsingJacksonParser( json, TokenBody.class ).Token;\n-                    }\n-                default:\n-                    throw unexpectedResponse( verbose, connection, \"Authorization\" );\n-                }\n+              throw new CommandFailed(\"We're sorry, it couldn't be detected that the import was started, \" +\n+                  \"please check the console for further details.\");\n             }\n-            finally\n-            {\n-                connection.disconnect();\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new CommandFailed( e.getMessage(), e );\n-        }\n-    }\n-\n-    /**\n-     * Communication with Neo4j's cloud console, resulting in some signed URI to do the actual upload to.\n-     */\n-    private URL initiateCopy( boolean verbose, URL importURL, long crc32Sum, long fileSize, String bearerToken )\n-            throws IOException, CommandFailed\n-    {\n-        HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n-        try\n-        {\n-            // POST the request\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Type\", \"application/json\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setRequestProperty( \"Accept\", \"application/json\" );\n-            connection.setDoOutput( true );\n-            try ( OutputStream postData = connection.getOutputStream() )\n-            {\n-                postData.write( buildCrc32WithConsentJson( crc32Sum, fileSize ).getBytes( UTF_8 ) );\n-            }\n-\n-            // Read the response\n-            int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n-            {\n-            case HTTP_NOT_FOUND:\n-                // fallthrough\n-            case HTTP_MOVED_PERM:\n-                throw updatePluginErrorResponse( connection );\n-            case HTTP_UNAUTHORIZED:\n-                throw errorResponse( verbose, connection, \"The given authorization token is invalid or has expired\" );\n-            // Deprecated: the use of this status code for the purpose below should be replaced with HTTP_UNPROCESSABLE_ENTITY in a future release.\n-            case HTTP_NOT_ACCEPTABLE:\n-                throw insufficientSpaceErrorResponse( verbose, connection, fileSize );\n-            case HTTP_UNPROCESSABLE_ENTITY:\n-                throw validationFailureErrorResponse( verbose, connection, fileSize );\n-            case HTTP_ACCEPTED:\n-                // the import request was accepted, and the server has not seen this dump file, meaning the import request is a new operation.\n-                return safeUrl( extractSignedURIFromResponse( verbose, connection ) );\n-            default:\n-                throw unexpectedResponse( verbose, connection, \"Initiating upload target\" );\n-            }\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n-    }\n-\n-    /**\n-     * Makes initial contact with the signed URL we got back when talking to the Neo4j cloud console. This will create yet another URL\n-     * which will be used to upload the source to, potentially resumed if it gets interrupted in the middle.\n-     */\n-    private URL initiateResumableUpload( boolean verbose, URL signedURL ) throws IOException, CommandFailed\n-    {\n-        HttpURLConnection connection = (HttpURLConnection) signedURL.openConnection();\n-        try\n-        {\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Length\", \"0\" );\n-            connection.setFixedLengthStreamingMode( 0 );\n-            connection.setRequestProperty( \"x-goog-resumable\", \"start\" );\n-            // We don't want to have any Content-Type set really, but there's this issue with the standard HttpURLConnection\n-            // implementation where it defaults Content-Type to application/x-www-form-urlencoded for POSTs for some reason\n-            connection.setRequestProperty( \"Content-Type\", \"\" );\n-            connection.setDoOutput( true );\n-            int responseCode = connection.getResponseCode();\n-            if ( responseCode != HTTP_CREATED )\n-            {\n-                throw unexpectedResponse( verbose, connection, \"Initiating database upload\" );\n-            }\n-            return safeUrl( connection.getHeaderField( \"Location\" ) );\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n-    }\n-\n-    /**\n-     * Uploads source from the given position to the upload location.\n-     */\n-    private boolean resumeUpload( boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation,\n-            ProgressTrackingOutputStream.Progress uploadProgress )\n-            throws IOException, CommandFailed\n-    {\n-        HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n-        try\n-        {\n-            connection.setRequestMethod( \"PUT\" );\n-            long contentLength = sourceLength - position;\n-            connection.setRequestProperty( \"Content-Length\", String.valueOf( contentLength ) );\n-            connection.setFixedLengthStreamingMode( contentLength );\n-            if ( position > 0 )\n-            {\n-                // If we're not starting from the beginning we need to specify what range we're uploading in this format\n-                connection.setRequestProperty( \"Content-Range\", format( \"bytes %d-%d/%d\", position, sourceLength - 1, sourceLength ) );\n-            }\n-            connection.setDoOutput( true );\n-            uploadProgress.rewindTo( position );\n-            try ( InputStream sourceStream = new FileInputStream( source.toFile() );\n-                  OutputStream targetStream = connection.getOutputStream() )\n+          }\n+          break;\n+        case \"loading failed\":\n+          throw formatCommandFailedError(statusBody.Error.getMessage(), statusBody.Error.getUrl());\n+        default:\n+          firstRunning = false;\n+          long elapsed = System.currentTimeMillis() - importStarted;\n+          statusProgress.rewindTo(0);\n+          statusProgress.add(importStatusProgressEstimate(statusBody.Status, elapsed, importTimeEstimateMillis));\n+          break;\n+      }\n+      sleeper.sleep(2000);\n+    }\n+    outsideWorld.stdOutLine(\"Your data was successfully pushed to Aura and is now running.\");\n+    long importDurationMillis = System.currentTimeMillis() - importStarted;\n+    debug(verbose, format(\"Import took about %d minutes to complete excluding upload (%d ms)\",\n+        TimeUnit.MILLISECONDS.toMinutes(importDurationMillis), importDurationMillis));\n+  }\n+\n+  int importStatusProgressEstimate(String databaseStatus, long elapsed, long importTimeEstimateMillis)\n+      throws CommandFailed\n+  {\n+    switch (databaseStatus)\n+    {\n+      case \"running\":\n+        return 0;\n+      case \"loading\":\n+        int loadProgressEstimation = (int) Math.min(98, (elapsed * 98) / importTimeEstimateMillis);\n+        return 1 + loadProgressEstimation;\n+      default:\n+        throw new CommandFailed(String.format(\n+            \"We're sorry, something has failed during the loading of your database. \"\n+                + \"Please try again and if this problem persists, please open up a support case. Database status: %s\",\n+            databaseStatus));\n+    }\n+  }\n+\n+  @Override\n+  public String authenticate(boolean verbose, String consoleUrl, String username, char[] password, boolean consentConfirmed) throws CommandFailed\n+  {\n+    try\n+    {\n+      URL url = safeUrl(consoleUrl + \"/import/auth\");\n+      HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+      try\n+      {\n+        connection.setRequestMethod(\"POST\");\n+        connection.setRequestProperty(\"Authorization\", \"Basic \" + base64Encode(username, password));\n+        connection.setRequestProperty(\"Accept\", \"application/json\");\n+        connection.setRequestProperty(\"Confirmed\", String.valueOf(consentConfirmed));\n+        int responseCode = connection.getResponseCode();\n+        switch (responseCode)\n+        {\n+          case HTTP_NOT_FOUND:\n+            throw errorResponse(verbose, connection, \"We encountered a problem while contacting your Neo4j Aura instance, \" +\n+                \"please check your Bolt URI\");\n+          case HTTP_MOVED_PERM:\n+            throw updatePluginErrorResponse(connection);\n+          case HTTP_UNAUTHORIZED:\n+            throw errorResponse(verbose, connection, \"Invalid username/password credentials\");\n+          case HTTP_FORBIDDEN:\n+            throw errorResponse(verbose, connection, \"The credentials provided do not give administrative access to the target database\");\n+          case HTTP_CONFLICT:\n+            // the cloud target database has already been populated with data, and importing the dump file would overwrite it.\n+            boolean consent =\n+                askForBooleanConsent(\"The target database contains data. Overwrite it? \" +\n+                    \"(Yes/No)\");\n+            if (consent)\n             {\n-                safeSkip( sourceStream, position );\n-                IOUtils.copy( new BufferedInputStream( sourceStream ), new ProgressTrackingOutputStream( targetStream, uploadProgress ) );\n-            }\n-            int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n+              return authenticate(verbose, consoleUrl, username, password, true);\n+            } else\n             {\n-            case HTTP_OK:\n-                return true; // the file is now uploaded, all good\n-            case HTTP_INTERNAL_ERROR:\n-            case HTTP_UNAVAILABLE:\n-                debugErrorResponse( verbose, connection );\n-                return false;\n-            default:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n+              throw errorResponse(verbose, connection, \"No consent to overwrite database. Aborting\");\n             }\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n-    }\n-\n-    private void triggerImportProtocol( boolean verbose, URL importURL, String boltUri, Path source, long crc32Sum, String bearerToken )\n-            throws IOException, CommandFailed\n-    {\n-        HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n-        try\n-        {\n-            connection.setRequestMethod( \"POST\" );\n-            connection.setRequestProperty( \"Content-Type\", \"application/json\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setDoOutput( true );\n-            try ( OutputStream postData = connection.getOutputStream() )\n+          case HTTP_OK:\n+            try (InputStream responseData = connection.getInputStream())\n             {\n-                postData.write( buildCrc32WithConsentJson( crc32Sum, null ).getBytes( UTF_8 ) );\n+              String json = new String(toByteArray(responseData), UTF_8);\n+              return parseJsonUsingJacksonParser(json, TokenBody.class).Token;\n             }\n-\n-            int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n-            {\n-            case HTTP_NOT_FOUND:\n-                // fallthrough\n-            case HTTP_MOVED_PERM:\n-                throw updatePluginErrorResponse( connection );\n-            case HTTP_TOO_MANY_REQUESTS:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n-            case HTTP_CONFLICT:\n-                throw errorResponse( verbose, connection,\n-                        \"The target database contained data and consent to overwrite the data was not given. Aborting\" );\n-            case HTTP_OK:\n-                // All good, we managed to trigger the import protocol after our completed upload\n-                break;\n-            default:\n-                throw resumePossibleErrorResponse( connection, source, boltUri );\n-            }\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n-    }\n-\n-    private StatusBody getDatabaseStatus( boolean verbose, URL statusURL, String bearerToken )\n-            throws IOException, CommandFailed\n+          default:\n+            throw unexpectedResponse(verbose, connection, \"Authorization\");\n+        }\n+      } finally\n+      {\n+        connection.disconnect();\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new CommandFailed(e.getMessage(), e);\n+    }\n+  }\n+\n+  /**\n+   * Communication with Neo4j's cloud console, resulting in some signed URI to do the actual upload to.\n+   */\n+  private URL initiateCopy(boolean verbose, URL importURL, long crc32Sum, long fileSize, String bearerToken)\n+      throws IOException, CommandFailed\n+  {\n+    HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n+    try\n+    {\n+      // POST the request\n+      connection.setRequestMethod(\"POST\");\n+      connection.setRequestProperty(\"Content-Type\", \"application/json\");\n+      connection.setRequestProperty(\"Authorization\", bearerToken);\n+      connection.setRequestProperty(\"Accept\", \"application/json\");\n+      connection.setDoOutput(true);\n+      try (OutputStream postData = connection.getOutputStream())\n+      {\n+        postData.write(buildCrc32WithConsentJson(crc32Sum, fileSize).getBytes(UTF_8));\n+      }\n+\n+      // Read the response\n+      int responseCode = connection.getResponseCode();\n+      switch (responseCode)\n+      {\n+        case HTTP_NOT_FOUND:\n+          // fallthrough\n+        case HTTP_MOVED_PERM:\n+          throw updatePluginErrorResponse(connection);\n+        case HTTP_UNAUTHORIZED:\n+          throw errorResponse(verbose, connection, \"The given authorization token is invalid or has expired\");\n+          // Deprecated: the use of this status code for the purpose below should be replaced with HTTP_UNPROCESSABLE_ENTITY in a future release.\n+        case HTTP_NOT_ACCEPTABLE:\n+          throw insufficientSpaceErrorResponse(verbose, connection, fileSize);\n+        case HTTP_UNPROCESSABLE_ENTITY:\n+          throw validationFailureErrorResponse(verbose, connection, fileSize);\n+        case HTTP_ACCEPTED:\n+          // the import request was accepted, and the server has not seen this dump file, meaning the import request is a new operation.\n+          return safeUrl(extractSignedURIFromResponse(verbose, connection));\n+        default:\n+          throw unexpectedResponse(verbose, connection, \"Initiating upload target\");\n+      }\n+    } finally\n+    {\n+      connection.disconnect();\n+    }\n+  }\n+\n+  /**\n+   * Makes initial contact with the signed URL we got back when talking to the Neo4j cloud console. This will create yet another URL\n+   * which will be used to upload the source to, potentially resumed if it gets interrupted in the middle.\n+   */\n+  private URL initiateResumableUpload(boolean verbose, URL signedURL) throws IOException, CommandFailed\n+  {\n+    HttpURLConnection connection = (HttpURLConnection) signedURL.openConnection();\n+    try\n+    {\n+      connection.setRequestMethod(\"POST\");\n+      connection.setRequestProperty(\"Content-Length\", \"0\");\n+      connection.setFixedLengthStreamingMode(0);\n+      connection.setRequestProperty(\"x-goog-resumable\", \"start\");\n+      // We don't want to have any Content-Type set really, but there's this issue with the standard HttpURLConnection\n+      // implementation where it defaults Content-Type to application/x-www-form-urlencoded for POSTs for some reason\n+      connection.setRequestProperty(\"Content-Type\", \"\");\n+      connection.setDoOutput(true);\n+      int responseCode = connection.getResponseCode();\n+      if (responseCode != HTTP_CREATED)\n+      {\n+        throw unexpectedResponse(verbose, connection, \"Initiating database upload\");\n+      }\n+      return safeUrl(connection.getHeaderField(\"Location\"));\n+    } finally\n+    {\n+      connection.disconnect();\n+    }\n+  }\n+\n+  /**\n+   * Uploads source from the given position to the upload location.\n+   */\n+  private boolean resumeUpload(boolean verbose, Path source, String boltUri, long sourceLength, long position, URL uploadLocation,\n+                               ProgressTrackingOutputStream.Progress uploadProgress)\n+      throws IOException, CommandFailed\n+  {\n+    HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n+    try\n+    {\n+      connection.setRequestMethod(\"PUT\");\n+      long contentLength = sourceLength - position;\n+      connection.setRequestProperty(\"Content-Length\", String.valueOf(contentLength));\n+      connection.setFixedLengthStreamingMode(contentLength);\n+      if (position > 0)\n+      {\n+        // If we're not starting from the beginning we need to specify what range we're uploading in this format\n+        connection.setRequestProperty(\"Content-Range\", format(\"bytes %d-%d/%d\", position, sourceLength - 1, sourceLength));\n+      }\n+      connection.setDoOutput(true);\n+      uploadProgress.rewindTo(position);\n+      try (InputStream sourceStream = new FileInputStream(source.toFile());\n+           OutputStream targetStream = connection.getOutputStream())\n+      {\n+        safeSkip(sourceStream, position);\n+        IOUtils.copy(new BufferedInputStream(sourceStream), new ProgressTrackingOutputStream(targetStream, uploadProgress));\n+      }\n+      int responseCode = connection.getResponseCode();\n+      switch (responseCode)\n+      {\n+        case HTTP_OK:\n+          return true; // the file is now uploaded, all good\n+        case HTTP_INTERNAL_ERROR:\n+        case HTTP_UNAVAILABLE:\n+          debugErrorResponse(verbose, connection);\n+          return false;\n+        default:\n+          throw resumePossibleErrorResponse(connection, source, boltUri);\n+      }\n+    } finally\n+    {\n+      connection.disconnect();\n+    }\n+  }\n+\n+  private void triggerImportProtocol(boolean verbose, URL importURL, String boltUri, Path source, long crc32Sum, String bearerToken)\n+      throws IOException, CommandFailed\n+  {\n+    HttpURLConnection connection = (HttpURLConnection) importURL.openConnection();\n+    try\n+    {\n+      connection.setRequestMethod(\"POST\");\n+      connection.setRequestProperty(\"Content-Type\", \"application/json\");\n+      connection.setRequestProperty(\"Authorization\", bearerToken);\n+      connection.setDoOutput(true);\n+      try (OutputStream postData = connection.getOutputStream())\n+      {\n+        postData.write(buildCrc32WithConsentJson(crc32Sum, null).getBytes(UTF_8));\n+      }\n+\n+      int responseCode = connection.getResponseCode();\n+      switch (responseCode)\n+      {\n+        case HTTP_NOT_FOUND:\n+          // fallthrough\n+        case HTTP_MOVED_PERM:\n+          throw updatePluginErrorResponse(connection);\n+        case HTTP_TOO_MANY_REQUESTS:\n+          throw resumePossibleErrorResponse(connection, source, boltUri);\n+        case HTTP_CONFLICT:\n+          throw errorResponse(verbose, connection,\n+              \"The target database contained data and consent to overwrite the data was not given. Aborting\");\n+        case HTTP_OK:\n+          // All good, we managed to trigger the import protocol after our completed upload\n+          break;\n+        default:\n+          throw resumePossibleErrorResponse(connection, source, boltUri);\n+      }\n+    } finally\n+    {\n+      connection.disconnect();\n+    }\n+  }\n+\n+  private StatusBody getDatabaseStatus(boolean verbose, URL statusURL, String bearerToken)\n+      throws IOException, CommandFailed\n+  {\n+    HttpURLConnection connection = (HttpURLConnection) statusURL.openConnection();\n+    try\n+    {\n+      connection.setRequestMethod(\"GET\");\n+      connection.setRequestProperty(\"Authorization\", bearerToken);\n+      connection.setDoOutput(true);\n+\n+      int responseCode = connection.getResponseCode();\n+      switch (responseCode)\n+      {\n+        case HTTP_NOT_FOUND:\n+          // fallthrough\n+        case HTTP_MOVED_PERM:\n+          throw updatePluginErrorResponse(connection);\n+        case HTTP_OK:\n+          try (InputStream responseData = connection.getInputStream())\n+          {\n+            String json = new String(toByteArray(responseData), UTF_8);\n+            return parseJsonUsingJacksonParser(json, StatusBody.class);\n+          }\n+        default:\n+          throw unexpectedResponse(verbose, connection, \"Trigger import/restore after successful upload\");\n+      }\n+    } finally\n+    {\n+      connection.disconnect();\n+    }\n+  }\n+\n+  /**\n+   * Asks about how far the upload has gone so far, typically after being interrupted one way or another. The result of this method\n+   * can be fed into {@link #resumeUpload(boolean, Path, String, long, long, URL, ProgressTrackingOutputStream.Progress)} to resume an upload.\n+   */\n+  private long getResumablePosition(boolean verbose, long sourceLength, URL uploadLocation) throws IOException, CommandFailed\n+  {\n+    debug(verbose, \"Asking about resumable position for the upload\");\n+    HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n+    try\n+    {\n+      connection.setRequestMethod(\"PUT\");\n+      connection.setRequestProperty(\"Content-Length\", \"0\");\n+      connection.setFixedLengthStreamingMode(0);\n+      connection.setRequestProperty(\"Content-Range\", \"bytes */\" + sourceLength);\n+      connection.setDoOutput(true);\n+      int responseCode = connection.getResponseCode();\n+      switch (responseCode)\n+      {\n+        case HTTP_OK:\n+        case HTTP_CREATED:\n+          debug(verbose, \"Upload seems to be completed got \" + responseCode);\n+          return POSITION_UPLOAD_COMPLETED;\n+        case HTTP_RESUME_INCOMPLETE:\n+          String range = connection.getHeaderField(\"Range\");\n+          debug(verbose, \"Upload not completed got \" + range);\n+          long position = range == null ? 0 // No bytes have been received at all, so let's return position 0, i.e. from the beginning of the file\n+              : parseResumablePosition(range);\n+          debug(verbose, \"Parsed that as position \" + position);\n+          return position;\n+        default:\n+          throw unexpectedResponse(verbose, connection, \"Acquire resumable upload position\");\n+      }\n+    } finally\n     {\n-        HttpURLConnection connection = (HttpURLConnection) statusURL.openConnection();\n-        try\n-        {\n-            connection.setRequestMethod( \"GET\" );\n-            connection.setRequestProperty( \"Authorization\", bearerToken );\n-            connection.setDoOutput( true );\n-\n-            int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n-            {\n-                case HTTP_NOT_FOUND:\n-                    // fallthrough\n-                case HTTP_MOVED_PERM:\n-                    throw updatePluginErrorResponse( connection );\n-                case HTTP_OK:\n-                    try ( InputStream responseData = connection.getInputStream() )\n-                    {\n-                        String json = new String( toByteArray( responseData ), UTF_8 );\n-                        return parseJsonUsingJacksonParser( json, StatusBody.class );\n-                    }\n-                default:\n-                    throw unexpectedResponse( verbose, connection, \"Trigger import/restore after successful upload\" );\n-            }\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n+      connection.disconnect();\n     }\n+  }\n \n-    /**\n-     * Asks about how far the upload has gone so far, typically after being interrupted one way or another. The result of this method\n-     * can be fed into {@link #resumeUpload(boolean, Path, String, long, long, URL, ProgressTrackingOutputStream.Progress)} to resume an upload.\n-     */\n-    private long getResumablePosition( boolean verbose, long sourceLength, URL uploadLocation ) throws IOException, CommandFailed\n+  private static String buildCrc32WithConsentJson(long crc32Sum, Long fileSize)\n+  {\n+    String fileSizeString = \"\";\n+    if (fileSize != null)\n     {\n-        debug( verbose, \"Asking about resumable position for the upload\" );\n-        HttpURLConnection connection = (HttpURLConnection) uploadLocation.openConnection();\n-        try\n-        {\n-            connection.setRequestMethod( \"PUT\" );\n-            connection.setRequestProperty( \"Content-Length\", \"0\" );\n-            connection.setFixedLengthStreamingMode( 0 );\n-            connection.setRequestProperty( \"Content-Range\", \"bytes */\" + sourceLength );\n-            connection.setDoOutput( true );\n-            int responseCode = connection.getResponseCode();\n-            switch ( responseCode )\n-            {\n-            case HTTP_OK:\n-            case HTTP_CREATED:\n-                debug( verbose, \"Upload seems to be completed got \" + responseCode );\n-                return POSITION_UPLOAD_COMPLETED;\n-            case HTTP_RESUME_INCOMPLETE:\n-                String range = connection.getHeaderField( \"Range\" );\n-                debug( verbose, \"Upload not completed got \" + range );\n-                long position = range == null ? 0 // No bytes have been received at all, so let's return position 0, i.e. from the beginning of the file\n-                                              : parseResumablePosition( range );\n-                debug( verbose, \"Parsed that as position \" + position );\n-                return position;\n-            default:\n-                throw unexpectedResponse( verbose, connection, \"Acquire resumable upload position\" );\n-            }\n-        }\n-        finally\n-        {\n-            connection.disconnect();\n-        }\n+      fileSizeString = String.format(\", \\\"DumpSize\\\":%d\", fileSize);\n     }\n+    return String.format(\"{\\\"Crc32\\\":%d%s}\", crc32Sum, fileSizeString);\n+  }\n \n-    private static String buildCrc32WithConsentJson( long crc32Sum, Long fileSize )\n+  private static void safeSkip(InputStream sourceStream, long position) throws IOException\n+  {\n+    long toSkip = position;\n+    while (toSkip > 0)\n     {\n-        String fileSizeString = \"\";\n-        if ( fileSize != null )\n-        {\n-            fileSizeString = String.format(\", \\\"DumpSize\\\":%d\", fileSize);\n-        }\n-        return String.format( \"{\\\"Crc32\\\":%d%s}\", crc32Sum, fileSizeString );\n+      toSkip -= sourceStream.skip(position);\n     }\n+  }\n \n-    private static void safeSkip( InputStream sourceStream, long position ) throws IOException\n+  /**\n+   * Parses a response from asking about how far an upload has gone, i.e. how many bytes of the source file have been uploaded.\n+   * The range is in the format: \"bytes=x-y\" and since we always ask from 0 then we're interested in y, more specifically y+1\n+   * since x-y means that bytes in the range x-y have been received so we want to start sending from y+1.\n+   */\n+  private static long parseResumablePosition(String range) throws CommandFailed\n+  {\n+    int dashIndex = range.indexOf('-');\n+    if (!range.startsWith(\"bytes=\") || dashIndex == -1)\n     {\n-        long toSkip = position;\n-        while ( toSkip > 0 )\n-        {\n-            toSkip -= sourceStream.skip( position );\n-        }\n+      throw new CommandFailed(\"Unexpected response when asking where to resume upload from. got '\" + range + \"'\");\n     }\n+    return Long.parseLong(range.substring(dashIndex + 1)) + 1;\n+  }\n \n-    /**\n-     * Parses a response from asking about how far an upload has gone, i.e. how many bytes of the source file have been uploaded.\n-     * The range is in the format: \"bytes=x-y\" and since we always ask from 0 then we're interested in y, more specifically y+1\n-     * since x-y means that bytes in the range x-y have been received so we want to start sending from y+1.\n-     */\n-    private static long parseResumablePosition( String range ) throws CommandFailed\n+  private boolean askForBooleanConsent(String message)\n+  {\n+    while (true)\n     {\n-        int dashIndex = range.indexOf( '-' );\n-        if ( !range.startsWith( \"bytes=\" ) || dashIndex == -1 )\n+      String input = outsideWorld.promptLine(message);\n+      if (input != null)\n+      {\n+        input = input.toLowerCase();\n+        if (input.equals(\"yes\") || input.equals(\"y\") || input.equals(\"true\"))\n         {\n-            throw new CommandFailed( \"Unexpected response when asking where to resume upload from. got '\" + range + \"'\" );\n+          return true;\n         }\n-        return Long.parseLong( range.substring( dashIndex + 1 ) ) + 1;\n-    }\n-\n-    private boolean askForBooleanConsent( String message )\n-    {\n-        while ( true )\n+        if (input.equals(\"no\") || input.equals(\"n\") || input.equals(\"false\"))\n         {\n-            String input = outsideWorld.promptLine( message );\n-            if ( input != null )\n-            {\n-                input = input.toLowerCase();\n-                if ( input.equals( \"yes\" ) || input.equals( \"y\" ) || input.equals( \"true\" ) )\n-                {\n-                    return true;\n-                }\n-                if ( input.equals( \"no\" ) || input.equals( \"n\" ) || input.equals( \"false\" ) )\n-                {\n-                    return false;\n-                }\n-            }\n-            outsideWorld.stdOutLine( \"Sorry, I didn't understand your answer. Please reply with yes/y or no/n\" );\n+          return false;\n         }\n+      }\n+      outsideWorld.stdOutLine(\"Sorry, I didn't understand your answer. Please reply with yes/y or no/n\");\n     }\n+  }\n \n-    private static String base64Encode( String username, char[] password )\n-    {\n-        String plainToken = new StringBuilder( username ).append( \":\" ).append( password ).toString();\n-        return Base64.getEncoder().encodeToString( plainToken.getBytes() );\n-    }\n+  private static String base64Encode(String username, char[] password)\n+  {\n+    String plainToken = new StringBuilder(username).append(\":\").append(password).toString();\n+    return Base64.getEncoder().encodeToString(plainToken.getBytes());\n+  }\n \n-    private String extractSignedURIFromResponse( boolean verbose, HttpURLConnection connection ) throws IOException, CommandFailed\n+  private String extractSignedURIFromResponse(boolean verbose, HttpURLConnection connection) throws IOException, CommandFailed\n+  {\n+    try (InputStream responseData = connection.getInputStream())\n     {\n-        try ( InputStream responseData = connection.getInputStream() )\n-        {\n-            String json = new String( toByteArray( responseData ), UTF_8 );\n-            debug( verbose, \"Got json '\" + json + \"' back expecting to contain the signed URL\" );\n-            return parseJsonUsingJacksonParser( json, SignedURIBody.class ).SignedURI;\n-        }\n+      String json = new String(toByteArray(responseData), UTF_8);\n+      debug(verbose, \"Got json '\" + json + \"' back expecting to contain the signed URL\");\n+      return parseJsonUsingJacksonParser(json, SignedURIBody.class).SignedURI;\n     }\n+  }\n \n-    private void debug( boolean verbose, String string )\n+  private void debug(boolean verbose, String string)\n+  {\n+    if (verbose)\n     {\n-        if ( verbose )\n-        {\n-            outsideWorld.stdOutLine( string );\n-        }\n+      outsideWorld.stdOutLine(string);\n     }\n+  }\n \n-    private void debugErrorResponse( boolean verbose, HttpURLConnection connection ) throws IOException\n-    {\n-        debugResponse( verbose, connection, false );\n-    }\n+  private void debugErrorResponse(boolean verbose, HttpURLConnection connection) throws IOException\n+  {\n+    debugResponse(verbose, connection, false);\n+  }\n \n-    private void debugResponse( boolean verbose, HttpURLConnection connection, boolean successful ) throws IOException\n+  private void debugResponse(boolean verbose, HttpURLConnection connection, boolean successful) throws IOException\n+  {\n+    if (verbose)\n     {\n-        if ( verbose )\n-        {\n-            String responseString = \"not available\";\n-            try ( InputStream responseData = successful ? connection.getInputStream() : connection.getErrorStream() )\n-            {\n-                responseString = new String( toByteArray( responseData ), UTF_8 );\n-            }\n-            debugResponse( true, responseString, connection, successful );\n-        }\n+      String responseString = \"not available\";\n+      try (InputStream responseData = successful ? connection.getInputStream() : connection.getErrorStream())\n+      {\n+        responseString = new String(toByteArray(responseData), UTF_8);\n+      }\n+      debugResponse(true, responseString, connection, successful);\n     }\n+  }\n \n-    private void debugResponse( boolean verbose, String responseBody, HttpURLConnection connection, boolean successful )\n-            throws IOException\n-    {\n-        if ( verbose )\n-        {\n-            debug( true, \"=== Unexpected response ===\" );\n-            debug( true, \"Response message: \" + connection.getResponseMessage() );\n-            debug( true, \"Response headers:\" );\n-            connection.getHeaderFields().forEach( ( key, value1 ) ->\n-            {\n-                for ( String value : value1 )\n-                {\n-                    debug( true, \"  \" + key + \": \" + value );\n-                }\n-            } );\n-            debug( true, \"Error response data: \" + responseBody );\n-        }\n-    }\n+  private void debugResponse(boolean verbose, String responseBody, HttpURLConnection connection, boolean successful)\n+      throws IOException\n+  {\n+    if (verbose)\n+    {\n+      debug(true, \"=== Unexpected response ===\");\n+      debug(true, \"Response message: \" + connection.getResponseMessage());\n+      debug(true, \"Response headers:\");\n+      connection.getHeaderFields().forEach((key, value1) ->\n+      {\n+        for (String value : value1)\n+        {\n+          debug(true, \"  \" + key + \": \" + value);\n+        }\n+      });\n+      debug(true, \"Error response data: \" + responseBody);\n+    }\n+  }\n+\n+  private static long calculateCrc32HashOfFile(Path source) throws IOException\n+  {\n+    CRC32 crc = new CRC32();\n+    try (InputStream inputStream = new BufferedInputStream(new FileInputStream(source.toFile())))\n+    {\n+      int cnt;\n+      while ((cnt = inputStream.read()) != -1)\n+      {\n+        crc.update(cnt);\n+      }\n+    }\n+    return crc.getValue();\n+  }\n+\n+  private static URL safeUrl(String urlString)\n+  {\n+    try\n+    {\n+      return new URL(urlString);\n+    } catch (MalformedURLException e)\n+    {\n+      throw new RuntimeException(\"Malformed URL '\" + urlString + \"'\", e);\n+    }\n+  }\n+\n+  /**\n+   * Use the Jackson JSON parser because Neo4j Server depends on this library already and therefore already exists in the environment.\n+   * This means that this command can parse JSON w/o any additional external dependency and doesn't even need to depend on java 8,\n+   * where the Rhino script engine has built-in JSON parsing support.\n+   */\n+  private static <T> T parseJsonUsingJacksonParser(String json, Class<T> type) throws IOException\n+  {\n+    return new ObjectMapper().readValue(json, type);\n+  }\n+\n+  private CommandFailed errorResponse(boolean verbose, HttpURLConnection connection, String errorDescription) throws IOException\n+  {\n+    debugErrorResponse(verbose, connection);\n+    return new CommandFailed(errorDescription);\n+  }\n+\n+  private CommandFailed resumePossibleErrorResponse(HttpURLConnection connection, Path dump, String boltUri) throws IOException\n+  {\n+    debugErrorResponse(true, connection);\n+    return new CommandFailed(\"We encountered a problem while communicating to the Neo4j Aura system. \\n\" +\n+        \"You can re-try using the existing dump by running this command: \\n\" +\n+        String.format(\"neo4j-admin push-to-cloud --%s=%s --%s=%s\", ARG_DUMP, dump.toFile().getAbsolutePath(), ARG_BOLT_URI, boltUri));\n+  }\n+\n+  private CommandFailed updatePluginErrorResponse(HttpURLConnection connection) throws IOException\n+  {\n+    debugErrorResponse(true, connection);\n+    return new CommandFailed(\"We encountered a problem while communicating to the Neo4j Aura system. \" +\n+        \"Please check that you are using the latest version of the push-to-cloud plugin and upgrade if necessary. \" +\n+        \"If this problem persists after upgrading, please contact support and attach the logs shown below to your ticket in the support portal.\");\n+  }\n+\n+  private CommandFailed validationFailureErrorResponse(boolean verbose, HttpURLConnection connection, long fileSize)\n+      throws IOException\n+  {\n+    try (InputStream responseData = connection.getErrorStream())\n+    {\n+      String responseString = new String(toByteArray(responseData), UTF_8);\n+      debugResponse(verbose, responseString, connection, false);\n+      ErrorBody errorBody = parseJsonUsingJacksonParser(responseString, ErrorBody.class);\n+\n+      String message = errorBody.getMessage();\n+\n+      switch (errorBody.getReason())\n+      {\n+        case ERROR_REASON_EXCEEDS_MAX_SIZE:\n+          String trimmedMessage = StringUtils.removeEnd(message, \".\");\n+          message = format(\"%s. Minimum storage space required: %.1f GB\", trimmedMessage, bytesToGibibytes(fileSize));\n+          break;\n+        default:\n+          break; // No special treatment required\n+      }\n \n-    private static long calculateCrc32HashOfFile( Path source ) throws IOException\n-    {\n-        CRC32 crc = new CRC32();\n-        try ( InputStream inputStream = new BufferedInputStream( new FileInputStream( source.toFile() ) ) )\n-        {\n-            int cnt;\n-            while ( (cnt = inputStream.read()) != -1 )\n-            {\n-                crc.update( cnt );\n-            }\n-        }\n-        return crc.getValue();\n+      return formatCommandFailedError(message, errorBody.getUrl());\n     }\n+  }\n \n-    private static URL safeUrl( String urlString )\n-    {\n-        try\n-        {\n-            return new URL( urlString );\n-        }\n-        catch ( MalformedURLException e )\n-        {\n-            throw new RuntimeException( \"Malformed URL '\" + urlString + \"'\", e );\n-        }\n-    }\n+  private CommandFailed insufficientSpaceErrorResponse(boolean verbose, HttpURLConnection connection, long fileSize)\n+      throws IOException\n+  {\n+    debugErrorResponse(verbose, connection);\n+    return new CommandFailed(\n+        format(\"There is insufficient space in your Neo4j Aura instance to upload your data. \"\n+            + \"Please go to the Neo4j Aura Console to increase the size of your database \"\n+            + \"with at least %.1f GB of storage.\", bytesToGibibytes(fileSize)));\n+  }\n \n-    /**\n-     * Use the Jackson JSON parser because Neo4j Server depends on this library already and therefore already exists in the environment.\n-     * This means that this command can parse JSON w/o any additional external dependency and doesn't even need to depend on java 8,\n-     * where the Rhino script engine has built-in JSON parsing support.\n-     */\n-    private static <T> T parseJsonUsingJacksonParser( String json, Class<T> type ) throws IOException\n-    {\n-        return new ObjectMapper().readValue( json, type );\n-    }\n+  private CommandFailed unexpectedResponse(boolean verbose, HttpURLConnection connection, String requestDescription) throws IOException\n+  {\n+    return errorResponse(verbose, connection, format(\"Unexpected response code %d from request: %s\", connection.getResponseCode(), requestDescription));\n+  }\n \n-    private CommandFailed errorResponse( boolean verbose, HttpURLConnection connection, String errorDescription ) throws IOException\n+  private CommandFailed formatCommandFailedError(String message, String url)\n+  {\n+    if (StringUtils.isEmpty(url))\n     {\n-        debugErrorResponse( verbose, connection );\n-        return new CommandFailed( errorDescription );\n-    }\n-\n-    private CommandFailed resumePossibleErrorResponse( HttpURLConnection connection, Path dump, String boltUri ) throws IOException\n+      return new CommandFailed(message);\n+    } else\n     {\n-        debugErrorResponse( true, connection );\n-        return new CommandFailed( \"We encountered a problem while communicating to the Neo4j Aura system. \\n\" +\n-                \"You can re-try using the existing dump by running this command: \\n\" +\n-                String.format( \"neo4j-admin push-to-cloud --%s=%s --%s=%s\", ARG_DUMP, dump.toFile().getAbsolutePath(), ARG_BOLT_URI, boltUri ) );\n+      String trimmedMessage = StringUtils.removeEnd(message, \".\");\n+      return new CommandFailed(format(\"Error: %s. See: %s\", trimmedMessage, url));\n     }\n+  }\n \n-    private CommandFailed updatePluginErrorResponse( HttpURLConnection connection ) throws IOException\n-    {\n-        debugErrorResponse( true, connection );\n-        return new CommandFailed( \"We encountered a problem while communicating to the Neo4j Aura system. \" +\n-                \"Please check that you are using the latest version of the push-to-cloud plugin and upgrade if necessary. \" +\n-                \"If this problem persists after upgrading, please contact support and attach the logs shown below to your ticket in the support portal.\" );\n-    }\n+  private double bytesToGibibytes(long sizeInBytes)\n+  {\n+    return sizeInBytes / (double) (1024 * 1024 * 1024);\n+  }\n \n-    private CommandFailed validationFailureErrorResponse( boolean verbose, HttpURLConnection connection, long fileSize )\n-            throws IOException\n-    {\n-        try ( InputStream responseData = connection.getErrorStream() )\n-        {\n-            String responseString = new String( toByteArray( responseData ), UTF_8 );\n-            debugResponse( verbose, responseString, connection, false );\n-            ErrorBody errorBody = parseJsonUsingJacksonParser( responseString, ErrorBody.class );\n+  // Simple structs for mapping JSON to objects, used by the jackson parser which Neo4j happens to depend on anyway\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  private static class SignedURIBody\n+  {\n+    public String SignedURI;\n+  }\n \n-            String message = errorBody.getMessage();\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  private static class TokenBody\n+  {\n+    public String Token;\n+  }\n \n-            switch ( errorBody.getReason() )\n-            {\n-            case ERROR_REASON_EXCEEDS_MAX_SIZE:\n-                String trimmedMessage = StringUtils.removeEnd( message, \".\" );\n-                message = format( \"%s. Minimum storage space required: %.1f GB\", trimmedMessage, bytesToGibibytes( fileSize ) );\n-                break;\n-            default:\n-                break; // No special treatment required\n-            }\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  static class StatusBody\n+  {\n+    public String Status;\n+    public ErrorBody Error = new ErrorBody();\n+  }\n \n-            return formatCommandFailedError( message, errorBody.getUrl() );\n-        }\n-    }\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  static class ErrorBody\n+  {\n+    private static final String DEFAULT_MESSAGE =\n+        \"an unexpected problem ocurred, please contact customer support for assistance\";\n+    private static final String DEFAULT_REASON = \"UnknownError\";\n \n-    private CommandFailed insufficientSpaceErrorResponse( boolean verbose, HttpURLConnection connection, long fileSize )\n-            throws IOException\n-    {\n-        debugErrorResponse( verbose, connection );\n-        return new CommandFailed(\n-                format( \"There is insufficient space in your Neo4j Aura instance to upload your data. \"\n-                        + \"Please go to the Neo4j Aura Console to increase the size of your database \"\n-                        + \"with at least %.1f GB of storage.\", bytesToGibibytes( fileSize ) ) );\n-    }\n-\n-    private CommandFailed unexpectedResponse( boolean verbose, HttpURLConnection connection, String requestDescription ) throws IOException\n-    {\n-        return errorResponse( verbose, connection, format( \"Unexpected response code %d from request: %s\", connection.getResponseCode(), requestDescription ) );\n-    }\n-\n-    private CommandFailed formatCommandFailedError( String message, String url )\n-    {\n-        if ( StringUtils.isEmpty( url ) )\n-        {\n-            return new CommandFailed( message );\n-        }\n-        else\n-        {\n-            String trimmedMessage = StringUtils.removeEnd( message, \".\" );\n-            return new CommandFailed( format( \"Error: %s. See: %s\", trimmedMessage, url ) );\n-        }\n-    }\n+    private final String message;\n+    private final String reason;\n+    private final String url;\n \n-    private double bytesToGibibytes( long sizeInBytes )\n+    ErrorBody()\n     {\n-        return sizeInBytes / (double) (1024 * 1024 * 1024);\n+      this(null, null, null);\n     }\n \n-    // Simple structs for mapping JSON to objects, used by the jackson parser which Neo4j happens to depend on anyway\n-    @JsonIgnoreProperties( ignoreUnknown = true )\n-    private static class SignedURIBody\n+    @JsonCreator\n+    ErrorBody(@JsonProperty(\"Message\") String message, @JsonProperty(\"Reason\") String reason,\n+              @JsonProperty(\"Url\") String url)\n     {\n-        public String SignedURI;\n+      this.message = message;\n+      this.reason = reason;\n+      this.url = url;\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n-    private static class TokenBody\n+    public String getMessage()\n     {\n-        public String Token;\n+      return StringUtils.defaultIfBlank(this.message, DEFAULT_MESSAGE);\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n-    static class StatusBody\n+    public String getReason()\n     {\n-        public String Status;\n-        public ErrorBody Error = new ErrorBody();\n+      return StringUtils.defaultIfBlank(this.reason, DEFAULT_REASON);\n     }\n \n-    @JsonIgnoreProperties( ignoreUnknown = true )\n-    static class ErrorBody\n+    public String getUrl()\n     {\n-        private static final String DEFAULT_MESSAGE =\n-                \"an unexpected problem ocurred, please contact customer support for assistance\";\n-        private static final String DEFAULT_REASON = \"UnknownError\";\n-\n-        private final String message;\n-        private final String reason;\n-        private final String url;\n-\n-        ErrorBody()\n-        {\n-            this( null, null, null );\n-        }\n-\n-        @JsonCreator\n-        ErrorBody( @JsonProperty( \"Message\" ) String message, @JsonProperty( \"Reason\" ) String reason,\n-                @JsonProperty( \"Url\" ) String url )\n-        {\n-            this.message = message;\n-            this.reason = reason;\n-            this.url = url;\n-        }\n-\n-        public String getMessage()\n-        {\n-            return StringUtils.defaultIfBlank( this.message, DEFAULT_MESSAGE );\n-        }\n-        public String getReason()\n-        {\n-            return StringUtils.defaultIfBlank( this.reason, DEFAULT_REASON );\n-        }\n-        public String getUrl()\n-        {\n-            return this.url;\n-        }\n+      return this.url;\n     }\n+  }\n \n-    interface Sleeper\n-    {\n-        void sleep( long millis ) throws InterruptedException;\n-    }\n+  interface Sleeper\n+  {\n+    void sleep(long millis) throws InterruptedException;\n+  }\n \n-    public interface ProgressListenerFactory\n-    {\n-        ProgressListener create( String text, long length );\n-    }\n+  public interface ProgressListenerFactory\n+  {\n+    ProgressListener create(String text, long length);\n+  }\n }\n",
            "diff_size": 1023
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "328",
    "information": {
        "errors": [
            {
                "line": "43",
                "severity": "error",
                "message": "Indent must use tab characters",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tpublic void react(Worker context) throws Exception {\n\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n\n\t\tgetProgressReporter().setMax(includedEntities.size());\n\t\tImport imp = context.getStorage().getImport(bucket.getImp());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/328/ImportBucket.java\nindex 9440cb06a22..a78a17dde21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/328/ImportBucket.java\n@@ -40,7 +40,9 @@ public class ImportBucket extends WorkerMessage.Slow {\n \t@Override\n \tpublic void react(Worker context) throws Exception {\n \t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+\t\tbucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes\n+\n+\t\t) .mapToInt(a -> a.length).sum()));\n \n \t\tgetProgressReporter().setMax(includedEntities.size());\n \t\tImport imp = context.getStorage().getImport(bucket.getImp());\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/328/ImportBucket.java\nindex 9440cb06a22..b2a14f4cbc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/328/ImportBucket.java\n@@ -24,55 +24,58 @@ import lombok.Setter;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.io.FileUtils;\n \n-@CPSType(id=\"IMPORT_BIT\", base=NamespacedMessage.class)\n-@RequiredArgsConstructor(onConstructor_ = @JsonCreator) @Getter @Setter\n+@CPSType(id = \"IMPORT_BIT\", base = NamespacedMessage.class)\n+@RequiredArgsConstructor(onConstructor_ = @JsonCreator)\n+@Getter\n+@Setter\n @Slf4j\n public class ImportBucket extends WorkerMessage.Slow {\n-\t\n-\t@Nonnull @NotNull\n-\tprivate final BucketId bucket;\n-\t@NotEmpty\n-\tprivate IntArrayList includedEntities = new IntArrayList();\n-\t@NotNull\n-\tprivate byte[][] bytes;\n-\t\n \n-\t@Override\n-\tpublic void react(Worker context) throws Exception {\n-\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+    @Nonnull\n+    @NotNull\n+    private final BucketId bucket;\n+    @NotEmpty\n+    private IntArrayList includedEntities = new IntArrayList();\n+    @NotNull\n+    private byte[][] bytes;\n \n-\t\tgetProgressReporter().setMax(includedEntities.size());\n-\t\tImport imp = context.getStorage().getImport(bucket.getImp());\n \n-\t\tBlockFactory factory = imp.getBlockFactory();\n-\t\tBucket[] buckets = new Bucket[includedEntities.size()];\n-\t\t\n-\t\tfor(int index=0;index<includedEntities.size();index++) {\n-\t\t\tint entity = includedEntities.getInt(index);\n-\t\t\t\n-\t\t\ttry(ByteArrayInputStream input = new ByteArrayInputStream(bytes[index])) {\n-\t\t\t\tbuckets[index] = factory.readSingleValue(bucket.getBucket(), imp, input);\n-\t\t\t\tif(input.available() > 0) {\n-\t\t\t\t\tthrow new IllegalStateException(\"After reading the block of \"+entity+\" there are still \"+input.available()+\" bytes remaining in its content\");\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tgetProgressReporter().report(1);\n-\t\t}\n+    @Override\n+    public void react(Worker context) throws Exception {\n+        log.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n+            bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n \n-\t\tcontext.addBucket(factory.combine(includedEntities, buckets));\n-\t}\n-\t\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn\n-\t\t\t\"Importing \"\n-\t\t\t+ bytes.length\n-\t\t\t+ \" entities from \"\n-\t\t\t+ BinaryByteUnit.format(Arrays.stream(bytes).mapToInt(v->v.length).sum())\n-\t\t\t+ \" as \"\n-\t\t\t+ bucket.getImp().getTag()\n-\t\t\t+ \" into \"\n-\t\t\t+ bucket.getImp().getTable();\n-\t}\n+        getProgressReporter().setMax(includedEntities.size());\n+        Import imp = context.getStorage().getImport(bucket.getImp());\n+\n+        BlockFactory factory = imp.getBlockFactory();\n+        Bucket[] buckets = new Bucket[includedEntities.size()];\n+\n+        for (int index = 0; index < includedEntities.size(); index++) {\n+            int entity = includedEntities.getInt(index);\n+\n+            try (ByteArrayInputStream input = new ByteArrayInputStream(bytes[index])) {\n+                buckets[index] = factory.readSingleValue(bucket.getBucket(), imp, input);\n+                if (input.available() > 0) {\n+                    throw new IllegalStateException(\"After reading the block of \" + entity + \" there are still \" + input.available() + \" bytes remaining in its content\");\n+                }\n+            }\n+            getProgressReporter().report(1);\n+        }\n+\n+        context.addBucket(factory.combine(includedEntities, buckets));\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return\n+            \"Importing \"\n+                + bytes.length\n+                + \" entities from \"\n+                + BinaryByteUnit.format(Arrays.stream(bytes).mapToInt(v -> v.length).sum())\n+                + \" as \"\n+                + bucket.getImp().getTag()\n+                + \" into \"\n+                + bucket.getImp().getTable();\n+    }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/328/ImportBucket.java\nindex 9440cb06a22..23780410761 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/328/ImportBucket.java\n@@ -39,10 +39,8 @@ public class ImportBucket extends WorkerMessage.Slow {\n \n \t@Override\n \tpublic void react(Worker context) throws Exception {\n-\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n-\n-\t\tgetProgressReporter().setMax(includedEntities.size());\n+\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\", bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+getProgressReporter().setMax(includedEntities.size());\n \t\tImport imp = context.getStorage().getImport(bucket.getImp());\n \n \t\tBlockFactory factory = imp.getBlockFactory();\n@@ -75,4 +73,4 @@ public class ImportBucket extends WorkerMessage.Slow {\n \t\t\t+ \" into \"\n \t\t\t+ bucket.getImp().getTable();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/328/ImportBucket.java\nindex 9440cb06a22..01d084860be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/328/ImportBucket.java\n@@ -2,11 +2,9 @@ package com.bakdata.conquery.models.messages.namespaces.specific;\n \n import java.io.ByteArrayInputStream;\n import java.util.Arrays;\n-\n import javax.annotation.Nonnull;\n import javax.validation.constraints.NotEmpty;\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.datasets.Import;\n import com.bakdata.conquery.models.events.Bucket;\n@@ -24,55 +22,42 @@ import lombok.Setter;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.io.FileUtils;\n \n-@CPSType(id=\"IMPORT_BIT\", base=NamespacedMessage.class)\n-@RequiredArgsConstructor(onConstructor_ = @JsonCreator) @Getter @Setter\n-@Slf4j\n+@CPSType(id=\"IMPORT_BIT\", base= NamespacedMessage.class)\n+@RequiredArgsConstructor(onConstructor_=@JsonCreator)\n+@Getter @Setter @Slf4j\n public class ImportBucket extends WorkerMessage.Slow {\n-\t\n-\t@Nonnull @NotNull\n-\tprivate final BucketId bucket;\n-\t@NotEmpty\n-\tprivate IntArrayList includedEntities = new IntArrayList();\n-\t@NotNull\n-\tprivate byte[][] bytes;\n-\t\n-\n-\t@Override\n-\tpublic void react(Worker context) throws Exception {\n-\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n-\n-\t\tgetProgressReporter().setMax(includedEntities.size());\n-\t\tImport imp = context.getStorage().getImport(bucket.getImp());\n-\n-\t\tBlockFactory factory = imp.getBlockFactory();\n-\t\tBucket[] buckets = new Bucket[includedEntities.size()];\n-\t\t\n-\t\tfor(int index=0;index<includedEntities.size();index++) {\n-\t\t\tint entity = includedEntities.getInt(index);\n-\t\t\t\n-\t\t\ttry(ByteArrayInputStream input = new ByteArrayInputStream(bytes[index])) {\n-\t\t\t\tbuckets[index] = factory.readSingleValue(bucket.getBucket(), imp, input);\n-\t\t\t\tif(input.available() > 0) {\n-\t\t\t\t\tthrow new IllegalStateException(\"After reading the block of \"+entity+\" there are still \"+input.available()+\" bytes remaining in its content\");\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tgetProgressReporter().report(1);\n-\t\t}\n \n-\t\tcontext.addBucket(factory.combine(includedEntities, buckets));\n-\t}\n-\t\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn\n-\t\t\t\"Importing \"\n-\t\t\t+ bytes.length\n-\t\t\t+ \" entities from \"\n-\t\t\t+ BinaryByteUnit.format(Arrays.stream(bytes).mapToInt(v->v.length).sum())\n-\t\t\t+ \" as \"\n-\t\t\t+ bucket.getImp().getTag()\n-\t\t\t+ \" into \"\n-\t\t\t+ bucket.getImp().getTable();\n-\t}\n-}\n+ @Nonnull @NotNull\n+ private final BucketId bucket;\n+\n+ @NotEmpty\n+ private IntArrayList includedEntities = new IntArrayList();\n+\n+ @NotNull\n+ private byte[][] bytes;\n+\n+ @Override\n+ public void react(Worker context) throws Exception {\n+  log.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\", bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+  getProgressReporter().setMax(includedEntities.size());\n+  Import imp = context.getStorage().getImport(bucket.getImp());\n+  BlockFactory factory = imp.getBlockFactory();\n+  Bucket[] buckets = new Bucket[includedEntities.size()];\n+  for(int index = 0;index<includedEntities.size();index++) {\n+   int entity = includedEntities.getInt(index);\n+   try(ByteArrayInputStream input = new ByteArrayInputStream(bytes[index])) {\n+    buckets[index] = factory.readSingleValue(bucket.getBucket(), imp, input);\n+    if (input.available() > 0) {\n+     throw new IllegalStateException(\"After reading the block of \"+entity+\" there are still \"+input.available() +\" bytes remaining in its content\");\n+    }\n+   }\n+   getProgressReporter().report(1);\n+  }\n+  context.addBucket(factory.combine(includedEntities, buckets));\n+ }\n+\n+ @Override\n+ public String toString() {\n+  return \"Importing \"+bytes.length+\" entities from \"+BinaryByteUnit.format(Arrays.stream(bytes).mapToInt(v -> v.length).sum())+\" as \"+bucket.getImp().getTag()+\" into \"+bucket.getImp().getTable();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 70
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/328/ImportBucket.java\nindex 9440cb06a22..a78a17dde21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/328/ImportBucket.java\n@@ -40,7 +40,9 @@ public class ImportBucket extends WorkerMessage.Slow {\n \t@Override\n \tpublic void react(Worker context) throws Exception {\n \t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+\t\tbucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes\n+\n+\t\t) .mapToInt(a -> a.length).sum()));\n \n \t\tgetProgressReporter().setMax(includedEntities.size());\n \t\tImport imp = context.getStorage().getImport(bucket.getImp());\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "5",
                    "severity": "warning",
                    "message": "'mapToInt' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/328/ImportBucket.java\nindex 9440cb06a22..db7b120cb3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/328/ImportBucket.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/328/ImportBucket.java\n@@ -39,10 +39,10 @@ public class ImportBucket extends WorkerMessage.Slow {\n \n \t@Override\n \tpublic void react(Worker context) throws Exception {\n-\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",\n-\t\t\t\t  bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).mapToInt(a -> a.length).sum()));\n+\t\tlog.debug(\"Received Bucket[{}] containing {} Entities / {} Events ({})\",bucket, includedEntities.size(), bytes.length, FileUtils.byteCountToDisplaySize(Arrays.stream(bytes).\n+\tmapToInt(a -> a.length).sum()));\n \n-\t\tgetProgressReporter().setMax(includedEntities.size());\n+getProgressReporter().setMax(includedEntities.size());\n \t\tImport imp = context.getStorage().getImport(bucket.getImp());\n \n \t\tBlockFactory factory = imp.getBlockFactory();\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
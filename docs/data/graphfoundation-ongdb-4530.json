{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4530",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4530/SideSelectorPolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4530/SideSelectorPolicy.java\nindex f7c716fd6a9..31b8fe0da11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4530/SideSelectorPolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4530/SideSelectorPolicy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n /**\n@@ -24,19 +25,19 @@ package org.neo4j.graphdb.traversal;\n  */\n public interface SideSelectorPolicy\n {\n-    /**\n-     * Creates a new {@link SideSelector} given the {@code start}/{@code end}\n-     * {@link BranchSelector}s and an optional {@code maxDepth}.\n-     *\n-     * @param start the start side {@link BranchSelector} of this\n-     * bidirectional traversal.\n-     * @param end the end side {@link BranchSelector} of this\n-     * bidirectional traversal.\n-     * @param maxDepth an optional max depth the combined traversal depth must\n-     * be kept within. Optional in the sense that only some implementations\n-     * honors it.\n-     * @return a new {@link SideSelector} for {@code start} and {@code end}\n-     * {@link BranchSelector}s.\n-     */\n-    SideSelector create( BranchSelector start, BranchSelector end, int maxDepth );\n+  /**\n+   * Creates a new {@link SideSelector} given the {@code start}/{@code end}\n+   * {@link BranchSelector}s and an optional {@code maxDepth}.\n+   *\n+   * @param start    the start side {@link BranchSelector} of this\n+   *                 bidirectional traversal.\n+   * @param end      the end side {@link BranchSelector} of this\n+   *                 bidirectional traversal.\n+   * @param maxDepth an optional max depth the combined traversal depth must\n+   *                 be kept within. Optional in the sense that only some implementations\n+   *                 honors it.\n+   * @return a new {@link SideSelector} for {@code start} and {@code end}\n+   * {@link BranchSelector}s.\n+   */\n+  SideSelector create(BranchSelector start, BranchSelector end, int maxDepth);\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4530/SideSelectorPolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4530/SideSelectorPolicy.java\nindex f7c716fd6a9..fa0f4a1f3a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4530/SideSelectorPolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4530/SideSelectorPolicy.java\n@@ -39,4 +39,4 @@ public interface SideSelectorPolicy\n      * {@link BranchSelector}s.\n      */\n     SideSelector create( BranchSelector start, BranchSelector end, int maxDepth );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "580",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/580/PushPathTailPartitionParam.java\nindex fe749864841..e424e9d0f58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/580/PushPathTailPartitionParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.pushpathtail;\n \n import com.tencent.angel.PartitionKey;\n@@ -30,8 +31,8 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n \n \n   public PushPathTailPartitionParam(int matrixId, PartitionKey partKey,\n-      Long2LongOpenHashMap pathTail,\n-      long[] nodeIds, int startIndex, int endIndex) {\n+                                    Long2LongOpenHashMap pathTail,\n+                                    long[] nodeIds, int startIndex, int endIndex) {\n     super(matrixId, partKey, false);\n     this.keyIds = nodeIds;\n     this.startIdx = startIndex;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/580/PushPathTailPartitionParam.java\nindex fe749864841..83a0ef584d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/580/PushPathTailPartitionParam.java\n@@ -94,4 +94,4 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n     return len;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/580/PushPathTailPartitionParam.java\nindex fe749864841..3586c3a3e08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/580/PushPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/580/PushPathTailPartitionParam.java\n@@ -28,10 +28,10 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n   private int endIdx;\n   private Long2LongOpenHashMap pathTail;\n \n-\n-  public PushPathTailPartitionParam(int matrixId, PartitionKey partKey,\n-      Long2LongOpenHashMap pathTail,\n-      long[] nodeIds, int startIndex, int endIndex) {\n+  public PushPathTailPartitionParam(int matrixId,\n+                                    PartitionKey partKey,\n+                                    Long2LongOpenHashMap pathTail,\n+                                    long[] nodeIds, int startIndex, int endIndex) {\n     super(matrixId, partKey, false);\n     this.keyIds = nodeIds;\n     this.startIdx = startIndex;\n@@ -61,6 +61,7 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n   @Override\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n+\n     int size = endIdx - startIdx;\n     buf.writeInt(size);\n     // System.out.println(Thread.currentThread().getId() + \"\\t serialize -> \" + ());\n@@ -77,6 +78,7 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n     super.deserialize(buf);\n     this.startIdx = 0;\n     this.endIdx = buf.readInt();\n+\n     int size = endIdx - startIdx;\n     // System.out.println(Thread.currentThread().getId() + \"\\t deserialize -> \" + size);\n     pathTail = new Long2LongOpenHashMap(size);\n@@ -93,5 +95,4 @@ public class PushPathTailPartitionParam extends PartitionUpdateParam {\n     len += 16 * (endIdx - startIdx) + 4;\n     return len;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
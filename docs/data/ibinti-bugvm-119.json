{
    "project_name": "ibinti-bugvm",
    "error_id": "119",
    "information": {
        "errors": [
            {
                "line": "58",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 89).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * otherwise\n     */\n    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..5a9ca0ed1f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler/119/HttpRequestRetryHandler.java\n@@ -55,6 +55,4 @@ public interface HttpRequestRetryHandler {\n      * @return {@code true} if the method should be retried, {@code false}\n      * otherwise\n      */\n-    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n-\n-}\n+    boolean retryRequest(IOException exception, int executionCount, HttpContext context) ; }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..cfef194ecbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/119/HttpRequestRetryHandler.java\n@@ -43,18 +43,18 @@ import org.apache.http.protocol.HttpContext;\n  */\n public interface HttpRequestRetryHandler {\n \n-    /**\n-     * Determines if a method should be retried after an IOException\n-     * occurs during execution.\n-     *\n-     * @param exception the exception that occurred\n-     * @param executionCount the number of times this method has been\n-     * unsuccessfully executed\n-     * @param context the context for the request execution\n-     *\n-     * @return {@code true} if the method should be retried, {@code false}\n-     * otherwise\n-     */\n-    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n+  /**\n+   * Determines if a method should be retried after an IOException\n+   * occurs during execution.\n+   *\n+   * @param exception      the exception that occurred\n+   * @param executionCount the number of times this method has been\n+   *                       unsuccessfully executed\n+   * @param context        the context for the request execution\n+   * @return {@code true} if the method should be retried, {@code false}\n+   * otherwise\n+   */\n+  boolean retryRequest(IOException exception, int executionCount,\n+                       HttpContext context);\n \n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..7fdde41c62e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/119/HttpRequestRetryHandler.java\n@@ -57,4 +57,4 @@ public interface HttpRequestRetryHandler {\n      */\n     boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..d427dd6cf72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/119/HttpRequestRetryHandler.java\n@@ -28,7 +28,6 @@\n package org.apache.http.client;\n \n import java.io.IOException;\n-\n import org.apache.http.protocol.HttpContext;\n \n /**\n@@ -41,6 +40,8 @@ import org.apache.http.protocol.HttpContext;\n  *\n  * @since 4.0\n  */\n+\n+\n public interface HttpRequestRetryHandler {\n \n     /**\n@@ -55,6 +56,8 @@ public interface HttpRequestRetryHandler {\n      * @return {@code true} if the method should be retried, {@code false}\n      * otherwise\n      */\n-    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n \n-}\n+\n+    boolean retryRequest(IOException exception,\n+                         int executionCount, HttpContext context);\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "column": "89",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_random/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..669bdb2eb3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_random/119/HttpRequestRetryHandler.java\n@@ -55,6 +55,4 @@ public interface HttpRequestRetryHandler {\n      * @return {@code true} if the method should be retried, {@code false}\n      * otherwise\n      */\n-    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n-\n-}\n+    boolean retryRequest(IOException exception, int executionCount, HttpContext context);}\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/119/HttpRequestRetryHandler.java\nindex bf0403eeb6c..5a9ca0ed1f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/119/HttpRequestRetryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/119/HttpRequestRetryHandler.java\n@@ -55,6 +55,4 @@ public interface HttpRequestRetryHandler {\n      * @return {@code true} if the method should be retried, {@code false}\n      * otherwise\n      */\n-    boolean retryRequest(IOException exception, int executionCount, HttpContext context);\n-\n-}\n+    boolean retryRequest(IOException exception, int executionCount, HttpContext context) ; }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "zanata-zanata-platform",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "96",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    @JsonIgnore\n    public List<String> getContents() {\n        if(contents == null && content == null) {\n            return Collections.<String>emptyList();\n        }\n        return isPlural() ? contents : Lists.newArrayList(content);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/18/TranslationData.java\nindex cc1ccd2a7b4..d60d577905a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/18/TranslationData.java\n@@ -93,7 +93,7 @@ public class TranslationData implements Serializable {\n \n     @JsonIgnore\n     public List<String> getContents() {\n-        if(contents == null && content == null) {\n+        if (contents == null && content == null) {\n             return Collections.<String>emptyList();\n         }\n         return isPlural() ? contents : Lists.newArrayList(content);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/18/TranslationData.java\nindex cc1ccd2a7b4..eae791f9e00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/18/TranslationData.java\n@@ -21,147 +21,163 @@ import com.google.common.collect.Lists;\n  *\n  * @author Alex Eng <a href=\"mailto:aeng@redhat.com\">aeng@redhat.com</a>\n  */\n-@JsonPropertyOrder({ \"id\", \"revision\", \"status\", \"content\", \"contents\", \"plural\" })\n+@JsonPropertyOrder({\"id\", \"revision\", \"status\", \"content\", \"contents\", \"plural\"})\n @JsonIgnoreProperties(ignoreUnknown = true)\n @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)\n public class TranslationData implements Serializable {\n \n-    private static final long serialVersionUID = -8798154305879389711L;\n-    @NotNull\n-    private Integer id;\n+  private static final long serialVersionUID = -8798154305879389711L;\n+  @NotNull\n+  private Integer id;\n \n-    @NotNull\n-    private Integer revision;\n+  @NotNull\n+  private Integer revision;\n \n-    @JsonProperty(\"content\")\n-    private String content;\n+  @JsonProperty(\"content\")\n+  private String content;\n \n-    @JsonProperty(\"contents\")\n-    private List<String> contents;\n+  @JsonProperty(\"contents\")\n+  private List<String> contents;\n \n-    @NotNull\n-    private ContentState status = ContentState.New;\n+  @NotNull\n+  private ContentState status = ContentState.New;\n \n-    @JsonProperty(\"revisionComment\")\n-    private String revisionComment;\n+  @JsonProperty(\"revisionComment\")\n+  private String revisionComment;\n \n-    public TranslationData() {\n+  public TranslationData() {\n \n-    }\n+  }\n \n-    private boolean plural;\n+  private boolean plural;\n \n-    public Integer getId() {\n-        return id;\n-    }\n+  public Integer getId() {\n+    return id;\n+  }\n \n-    public void setId(Integer id) {\n-        this.id = id;\n-    }\n+  public void setId(Integer id) {\n+    this.id = id;\n+  }\n \n-    public Integer getRevision() {\n-        return revision;\n-    }\n+  public Integer getRevision() {\n+    return revision;\n+  }\n \n-    public void setRevision(Integer revision) {\n-        this.revision = revision;\n-    }\n+  public void setRevision(Integer revision) {\n+    this.revision = revision;\n+  }\n \n-    public ContentState getStatus() {\n-        return status;\n-    }\n+  public ContentState getStatus() {\n+    return status;\n+  }\n \n-    public void setStatus(ContentState status) {\n-        this.status = status;\n-    }\n+  public void setStatus(ContentState status) {\n+    this.status = status;\n+  }\n \n-    public boolean isPlural() {\n-        return plural;\n-    }\n+  public boolean isPlural() {\n+    return plural;\n+  }\n \n-    public void setPlural(boolean plural) {\n-        this.plural = plural;\n-    }\n+  public void setPlural(boolean plural) {\n+    this.plural = plural;\n+  }\n \n-    public String getRevisionComment() {\n-        return revisionComment;\n-    }\n+  public String getRevisionComment() {\n+    return revisionComment;\n+  }\n \n-    public void setRevisionComment(String comment) {\n-        this.revisionComment = comment;\n-    }\n+  public void setRevisionComment(String comment) {\n+    this.revisionComment = comment;\n+  }\n \n-    @JsonIgnore\n-    public List<String> getContents() {\n-        if(contents == null && content == null) {\n-            return Collections.<String>emptyList();\n-        }\n-        return isPlural() ? contents : Lists.newArrayList(content);\n+  @JsonIgnore\n+  public List<String> getContents() {\n+    if (contents == null && content == null) {\n+      return Collections.<String>emptyList();\n     }\n+    return isPlural() ? contents : Lists.newArrayList(content);\n+  }\n+\n+  @JsonIgnore\n+  public void setContents(String... contents) {\n+    setContents(Lists.newArrayList(contents));\n+  }\n \n-    @JsonIgnore\n-    public void setContents(String... contents) {\n-        setContents(Lists.newArrayList(contents));\n+  @JsonIgnore\n+  public void setContents(List<String> contents) {\n+    if (contents == null) {\n+      this.content = null;\n+      this.contents = null;\n+      return;\n     }\n \n-    @JsonIgnore\n-    public void setContents(List<String> contents) {\n-        if (contents == null) {\n-            this.content = null;\n-            this.contents = null;\n-            return;\n-        }\n-\n-        switch (contents.size()) {\n-            case 0:\n-                this.content = null;\n-                this.contents = null;\n-                break;\n-            case 1:\n-                this.content = contents.get(0);\n-                this.contents = null;\n-                break;\n-            default:\n-                this.content = null;\n-                this.contents = contents;\n-        }\n+    switch (contents.size()) {\n+    case 0:\n+      this.content = null;\n+      this.contents = null;\n+      break;\n+    case 1:\n+      this.content = contents.get(0);\n+      this.contents = null;\n+      break;\n+    default:\n+      this.content = null;\n+      this.contents = contents;\n     }\n+  }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (!(o instanceof TranslationData)) return false;\n-\n-        TranslationData that = (TranslationData) o;\n-\n-        if (plural != that.plural) return false;\n-        if (revisionComment != null ?\n-                !revisionComment.equals(that.revisionComment) :\n-                that.revisionComment != null)\n-            return false;\n-        if (content != null ? !content.equals(that.content) :\n-            that.content != null)\n-            return false;\n-        if (contents != null ? !contents.equals(that.contents) :\n-            that.contents != null) return false;\n-        if (id != null ? !id.equals(that.id) : that.id != null) return false;\n-        if (revision != null ? !revision.equals(that.revision) :\n-            that.revision != null) return false;\n-        if (status != that.status) return false;\n-\n-        return true;\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n     }\n+    if (!(o instanceof TranslationData)) {\n+      return false;\n+    }\n+\n+    TranslationData that = (TranslationData) o;\n \n-    @Override\n-    public int hashCode() {\n-        int result = id != null ? id.hashCode() : 0;\n-        result = 31 * result + (revision != null ? revision.hashCode() : 0);\n-        result = 31 * result +\n-                (revisionComment != null ? revisionComment.hashCode() : 0);\n-        result = 31 * result + (content != null ? content.hashCode() : 0);\n-        result = 31 * result + (contents != null ? contents.hashCode() : 0);\n-        result = 31 * result + (status != null ? status.hashCode() : 0);\n-        result = 31 * result + (plural ? 1 : 0);\n-        return result;\n+    if (plural != that.plural) {\n+      return false;\n+    }\n+    if (revisionComment != null ?\n+      !revisionComment.equals(that.revisionComment) :\n+      that.revisionComment != null) {\n+      return false;\n     }\n+    if (content != null ? !content.equals(that.content) :\n+      that.content != null) {\n+      return false;\n+    }\n+    if (contents != null ? !contents.equals(that.contents) :\n+      that.contents != null) {\n+      return false;\n+    }\n+    if (id != null ? !id.equals(that.id) : that.id != null) {\n+      return false;\n+    }\n+    if (revision != null ? !revision.equals(that.revision) :\n+      that.revision != null) {\n+      return false;\n+    }\n+    if (status != that.status) {\n+      return false;\n+    }\n+\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int result = id != null ? id.hashCode() : 0;\n+    result = 31 * result + (revision != null ? revision.hashCode() : 0);\n+    result = 31 * result +\n+      (revisionComment != null ? revisionComment.hashCode() : 0);\n+    result = 31 * result + (content != null ? content.hashCode() : 0);\n+    result = 31 * result + (contents != null ? contents.hashCode() : 0);\n+    result = 31 * result + (status != null ? status.hashCode() : 0);\n+    result = 31 * result + (plural ? 1 : 0);\n+    return result;\n+  }\n }\n",
            "diff_size": 161
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/18/TranslationData.java\nindex cc1ccd2a7b4..b3f621cc031 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/18/TranslationData.java\n@@ -93,7 +93,7 @@ public class TranslationData implements Serializable {\n \n     @JsonIgnore\n     public List<String> getContents() {\n-        if(contents == null && content == null) {\n+        if (contents == null && content == null) {\n             return Collections.<String>emptyList();\n         }\n         return isPlural() ? contents : Lists.newArrayList(content);\n@@ -124,7 +124,7 @@ public class TranslationData implements Serializable {\n             default:\n                 this.content = null;\n                 this.contents = contents;\n-        }\n+    }\n     }\n \n     @Override\n@@ -164,4 +164,4 @@ public class TranslationData implements Serializable {\n         result = 31 * result + (plural ? 1 : 0);\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/18/TranslationData.java\nindex cc1ccd2a7b4..cb759ee97ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/18/TranslationData.java\n@@ -3,16 +3,13 @@ package org.zanata.rest.editor.dto;\n import java.io.Serializable;\n import java.util.Collections;\n import java.util.List;\n-\n import javax.validation.constraints.NotNull;\n-\n import org.codehaus.jackson.annotate.JsonIgnore;\n import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n import org.codehaus.jackson.annotate.JsonProperty;\n import org.codehaus.jackson.annotate.JsonPropertyOrder;\n import org.codehaus.jackson.map.annotate.JsonSerialize;\n import org.zanata.common.ContentState;\n-\n import com.google.common.collect.Lists;\n \n /**\n@@ -21,36 +18,30 @@ import com.google.common.collect.Lists;\n  *\n  * @author Alex Eng <a href=\"mailto:aeng@redhat.com\">aeng@redhat.com</a>\n  */\n+\n+\n @JsonPropertyOrder({ \"id\", \"revision\", \"status\", \"content\", \"contents\", \"plural\" })\n @JsonIgnoreProperties(ignoreUnknown = true)\n @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)\n public class TranslationData implements Serializable {\n-\n     private static final long serialVersionUID = -8798154305879389711L;\n     @NotNull\n     private Integer id;\n-\n     @NotNull\n     private Integer revision;\n-\n     @JsonProperty(\"content\")\n     private String content;\n-\n     @JsonProperty(\"contents\")\n     private List<String> contents;\n-\n     @NotNull\n     private ContentState status = ContentState.New;\n-\n     @JsonProperty(\"revisionComment\")\n     private String revisionComment;\n \n     public TranslationData() {\n-\n     }\n \n     private boolean plural;\n-\n     public Integer getId() {\n         return id;\n     }\n@@ -93,8 +84,8 @@ public class TranslationData implements Serializable {\n \n     @JsonIgnore\n     public List<String> getContents() {\n-        if(contents == null && content == null) {\n-            return Collections.<String>emptyList();\n+        if (contents == null && content == null) {\n+            return Collections.<String> emptyList();\n         }\n         return isPlural() ? contents : Lists.newArrayList(content);\n     }\n@@ -111,7 +102,6 @@ public class TranslationData implements Serializable {\n             this.contents = null;\n             return;\n         }\n-\n         switch (contents.size()) {\n             case 0:\n                 this.content = null;\n@@ -124,31 +114,30 @@ public class TranslationData implements Serializable {\n             default:\n                 this.content = null;\n                 this.contents = contents;\n-        }\n+            }\n     }\n \n     @Override\n     public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (!(o instanceof TranslationData)) return false;\n-\n+        if (this == o)\n+            return true;\n+        if (!(o instanceof TranslationData))\n+            return false;\n         TranslationData that = (TranslationData) o;\n-\n-        if (plural != that.plural) return false;\n-        if (revisionComment != null ?\n-                !revisionComment.equals(that.revisionComment) :\n-                that.revisionComment != null)\n+        if (plural != that.plural)\n             return false;\n-        if (content != null ? !content.equals(that.content) :\n-            that.content != null)\n+        if (revisionComment != null ? !revisionComment.equals(that.revisionComment) : that.revisionComment != null)\n+            return false;\n+        if (content != null ? !content.equals(that.content) : that.content != null)\n+            return false;\n+        if (contents != null ? !contents.equals(that.contents) : that.contents != null)\n+            return false;\n+        if (id != null ? !id.equals(that.id) : that.id != null)\n+            return false;\n+        if (revision != null ? !revision.equals(that.revision) : that.revision != null)\n+            return false;\n+        if (status != that.status)\n             return false;\n-        if (contents != null ? !contents.equals(that.contents) :\n-            that.contents != null) return false;\n-        if (id != null ? !id.equals(that.id) : that.id != null) return false;\n-        if (revision != null ? !revision.equals(that.revision) :\n-            that.revision != null) return false;\n-        if (status != that.status) return false;\n-\n         return true;\n     }\n \n@@ -156,12 +145,11 @@ public class TranslationData implements Serializable {\n     public int hashCode() {\n         int result = id != null ? id.hashCode() : 0;\n         result = 31 * result + (revision != null ? revision.hashCode() : 0);\n-        result = 31 * result +\n-                (revisionComment != null ? revisionComment.hashCode() : 0);\n+        result = 31 * result + (revisionComment != null ? revisionComment.hashCode() : 0);\n         result = 31 * result + (content != null ? content.hashCode() : 0);\n         result = 31 * result + (contents != null ? contents.hashCode() : 0);\n         result = 31 * result + (status != null ? status.hashCode() : 0);\n         result = 31 * result + (plural ? 1 : 0);\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/18/TranslationData.java\nindex cc1ccd2a7b4..d60d577905a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/18/TranslationData.java\n@@ -93,7 +93,7 @@ public class TranslationData implements Serializable {\n \n     @JsonIgnore\n     public List<String> getContents() {\n-        if(contents == null && content == null) {\n+        if (contents == null && content == null) {\n             return Collections.<String>emptyList();\n         }\n         return isPlural() ? contents : Lists.newArrayList(content);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/18/TranslationData.java\nindex cc1ccd2a7b4..d60d577905a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/18/TranslationData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/18/TranslationData.java\n@@ -93,7 +93,7 @@ public class TranslationData implements Serializable {\n \n     @JsonIgnore\n     public List<String> getContents() {\n-        if(contents == null && content == null) {\n+        if (contents == null && content == null) {\n             return Collections.<String>emptyList();\n         }\n         return isPlural() ? contents : Lists.newArrayList(content);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
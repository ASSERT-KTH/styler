{
    "project_name": "graphfoundation-ongdb",
    "error_id": "255",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "103",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "248",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/255/DumpCountsStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/255/DumpCountsStore.java\nindex df75b97f849..0182dbaf9da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/255/DumpCountsStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/255/DumpCountsStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.dump;\n \n import java.io.File;\n@@ -61,225 +62,222 @@ import static org.neo4j.io.pagecache.impl.muninn.StandalonePageCacheFactory.crea\n  */\n public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownKey.Visitor\n {\n-    public static void main( String... args ) throws IOException\n+  public static void main(String... args) throws IOException\n+  {\n+    if (args.length != 1)\n     {\n-        if ( args.length != 1 )\n-        {\n-            System.err.println( \"Expecting exactly one argument describing the path to the store\" );\n-            System.exit( 1 );\n-        }\n-        try ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n-        {\n-            dumpCountsStore( fileSystem, new File( args[0] ), System.out );\n-        }\n+      System.err.println(\"Expecting exactly one argument describing the path to the store\");\n+      System.exit(1);\n+    }\n+    try (FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction())\n+    {\n+      dumpCountsStore(fileSystem, new File(args[0]), System.out);\n     }\n+  }\n \n-    public static void dumpCountsStore( FileSystemAbstraction fs, File path, PrintStream out ) throws IOException\n+  public static void dumpCountsStore(FileSystemAbstraction fs, File path, PrintStream out) throws IOException\n+  {\n+    try (PageCache pages = createPageCache(fs);\n+         Lifespan life = new Lifespan())\n     {\n-        try ( PageCache pages = createPageCache( fs );\n-              Lifespan life = new Lifespan() )\n-        {\n-            NullLogProvider logProvider = NullLogProvider.getInstance();\n-            Config config = Config.defaults();\n-            if ( fs.isDirectory( path ) )\n-            {\n-                StoreFactory factory = new StoreFactory( path, Config.defaults(), new DefaultIdGeneratorFactory( fs ),\n-                        pages, fs, logProvider, EmptyVersionContextSupplier.EMPTY );\n+      NullLogProvider logProvider = NullLogProvider.getInstance();\n+      Config config = Config.defaults();\n+      if (fs.isDirectory(path))\n+      {\n+        StoreFactory factory = new StoreFactory(path, Config.defaults(), new DefaultIdGeneratorFactory(fs),\n+            pages, fs, logProvider, EmptyVersionContextSupplier.EMPTY);\n \n-                NeoStores neoStores = factory.openAllNeoStores();\n-                SchemaStorage schemaStorage = new SchemaStorage( neoStores.getSchemaStore() );\n-                neoStores.getCounts().accept( new DumpCountsStore( out, neoStores, schemaStorage ) );\n-            }\n-            else\n-            {\n-                VisitableCountsTracker tracker = new VisitableCountsTracker(\n-                        logProvider, fs, pages, config, path );\n-                if ( fs.fileExists( path ) )\n-                {\n-                    tracker.visitFile( path, new DumpCountsStore( out ) );\n-                }\n-                else\n-                {\n-                    life.add( tracker ).accept( new DumpCountsStore( out ) );\n-                }\n-            }\n+        NeoStores neoStores = factory.openAllNeoStores();\n+        SchemaStorage schemaStorage = new SchemaStorage(neoStores.getSchemaStore());\n+        neoStores.getCounts().accept(new DumpCountsStore(out, neoStores, schemaStorage));\n+      } else\n+      {\n+        VisitableCountsTracker tracker = new VisitableCountsTracker(\n+            logProvider, fs, pages, config, path);\n+        if (fs.fileExists(path))\n+        {\n+          tracker.visitFile(path, new DumpCountsStore(out));\n+        } else\n+        {\n+          life.add(tracker).accept(new DumpCountsStore(out));\n         }\n+      }\n     }\n+  }\n \n-    DumpCountsStore( PrintStream out )\n-    {\n-        this( out, Collections.emptyMap(), Collections.emptyList(), Collections.emptyList(), Collections.emptyList() );\n-    }\n+  DumpCountsStore(PrintStream out)\n+  {\n+    this(out, Collections.emptyMap(), Collections.emptyList(), Collections.emptyList(), Collections.emptyList());\n+  }\n \n-    DumpCountsStore( PrintStream out, NeoStores neoStores, SchemaStorage schemaStorage )\n-    {\n-        this( out, getAllIndexesFrom( schemaStorage ),\n-              allTokensFrom( neoStores.getLabelTokenStore() ),\n-              allTokensFrom( neoStores.getRelationshipTypeTokenStore() ),\n-              allTokensFrom( neoStores.getPropertyKeyTokenStore() ) );\n-    }\n+  DumpCountsStore(PrintStream out, NeoStores neoStores, SchemaStorage schemaStorage)\n+  {\n+    this(out, getAllIndexesFrom(schemaStorage),\n+        allTokensFrom(neoStores.getLabelTokenStore()),\n+        allTokensFrom(neoStores.getRelationshipTypeTokenStore()),\n+        allTokensFrom(neoStores.getPropertyKeyTokenStore()));\n+  }\n \n-    private final PrintStream out;\n-    private final Map<Long,SchemaIndexDescriptor> indexes;\n-    private final List<Token> labels;\n-    private final List<RelationshipTypeToken> relationshipTypes;\n-    private final List<Token> propertyKeys;\n+  private final PrintStream out;\n+  private final Map<Long, SchemaIndexDescriptor> indexes;\n+  private final List<Token> labels;\n+  private final List<RelationshipTypeToken> relationshipTypes;\n+  private final List<Token> propertyKeys;\n \n-    private DumpCountsStore( PrintStream out, Map<Long,SchemaIndexDescriptor> indexes, List<Token> labels,\n-                             List<RelationshipTypeToken> relationshipTypes,\n-                             List<Token> propertyKeys )\n-    {\n-        this.out = out;\n-        this.indexes = indexes;\n-        this.labels = labels;\n-        this.relationshipTypes = relationshipTypes;\n-        this.propertyKeys = propertyKeys;\n-    }\n+  private DumpCountsStore(PrintStream out, Map<Long, SchemaIndexDescriptor> indexes, List<Token> labels,\n+                          List<RelationshipTypeToken> relationshipTypes,\n+                          List<Token> propertyKeys)\n+  {\n+    this.out = out;\n+    this.indexes = indexes;\n+    this.labels = labels;\n+    this.relationshipTypes = relationshipTypes;\n+    this.propertyKeys = propertyKeys;\n+  }\n \n-    @Override\n-    public void visitMetadata( File file, Headers headers, int entryCount )\n+  @Override\n+  public void visitMetadata(File file, Headers headers, int entryCount)\n+  {\n+    out.printf(\"Counts Store:\\t%s%n\", file);\n+    for (HeaderField<?> headerField : headers.fields())\n     {\n-        out.printf( \"Counts Store:\\t%s%n\", file );\n-        for ( HeaderField<?> headerField : headers.fields() )\n-        {\n-            out.printf( \"%s:\\t%s%n\", headerField.toString(), headers.get( headerField ) );\n-        }\n-        out.printf( \"\\tentries:\\t%d%n\", entryCount );\n-        out.println( \"Entries:\" );\n+      out.printf(\"%s:\\t%s%n\", headerField.toString(), headers.get(headerField));\n     }\n+    out.printf(\"\\tentries:\\t%d%n\", entryCount);\n+    out.println(\"Entries:\");\n+  }\n \n-    @Override\n-    public void visitNodeCount( int labelId, long count )\n-    {\n-        out.printf( \"\\tNode[(%s)]:\\t%d%n\", label( labelId ), count );\n-    }\n+  @Override\n+  public void visitNodeCount(int labelId, long count)\n+  {\n+    out.printf(\"\\tNode[(%s)]:\\t%d%n\", label(labelId), count);\n+  }\n \n-    @Override\n-    public void visitRelationshipCount( int startLabelId, int typeId, int endLabelId, long count )\n-    {\n-        out.printf( \"\\tRelationship[(%s)-%s->(%s)]:\\t%d%n\",\n-                    label( startLabelId ), relationshipType( typeId ), label( endLabelId ),\n-                    count );\n-    }\n+  @Override\n+  public void visitRelationshipCount(int startLabelId, int typeId, int endLabelId, long count)\n+  {\n+    out.printf(\"\\tRelationship[(%s)-%s->(%s)]:\\t%d%n\",\n+        label(startLabelId), relationshipType(typeId), label(endLabelId),\n+        count);\n+  }\n \n-    @Override\n-    public void visitIndexStatistics( long indexId, long updates, long size )\n-    {\n-        SchemaIndexDescriptor index = indexes.get( indexId );\n-        out.printf( \"\\tIndexStatistics[(%s {%s})]:\\tupdates=%d, size=%d%n\",\n-                label( index.schema().keyId() ), propertyKeys( index.schema().getPropertyIds() ), updates, size );\n-    }\n+  @Override\n+  public void visitIndexStatistics(long indexId, long updates, long size)\n+  {\n+    SchemaIndexDescriptor index = indexes.get(indexId);\n+    out.printf(\"\\tIndexStatistics[(%s {%s})]:\\tupdates=%d, size=%d%n\",\n+        label(index.schema().keyId()), propertyKeys(index.schema().getPropertyIds()), updates, size);\n+  }\n \n-    @Override\n-    public void visitIndexSample( long indexId, long unique, long size )\n+  @Override\n+  public void visitIndexSample(long indexId, long unique, long size)\n+  {\n+    SchemaIndexDescriptor index = indexes.get(indexId);\n+    out.printf(\"\\tIndexSample[(%s {%s})]:\\tunique=%d, size=%d%n\",\n+        label(index.schema().keyId()), propertyKeys(index.schema().getPropertyIds()), unique, size);\n+  }\n+\n+  @Override\n+  public boolean visitUnknownKey(ReadableBuffer key, ReadableBuffer value)\n+  {\n+    out.printf(\"\\t%s:\\t%s%n\", key, value);\n+    return true;\n+  }\n+\n+  private String label(int id)\n+  {\n+    if (id == StatementConstants.ANY_LABEL)\n     {\n-        SchemaIndexDescriptor index = indexes.get( indexId );\n-        out.printf( \"\\tIndexSample[(%s {%s})]:\\tunique=%d, size=%d%n\",\n-                label( index.schema().keyId() ), propertyKeys( index.schema().getPropertyIds() ), unique, size );\n+      return \"\";\n     }\n+    return token(new StringBuilder(), labels, \":\", \"label\", id).toString();\n+  }\n \n-    @Override\n-    public boolean visitUnknownKey( ReadableBuffer key, ReadableBuffer value )\n+  private String propertyKeys(int[] ids)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    for (int i = 0; i < ids.length; i++)\n     {\n-        out.printf( \"\\t%s:\\t%s%n\", key, value );\n-        return true;\n+      if (i > 0)\n+      {\n+        builder.append(\",\");\n+      }\n+      token(builder, propertyKeys, \"\", \"key\", ids[i]);\n     }\n+    return builder.toString();\n+  }\n \n-    private String label( int id )\n+  private String relationshipType(int id)\n+  {\n+    if (id == StatementConstants.ANY_RELATIONSHIP_TYPE)\n     {\n-        if ( id == StatementConstants.ANY_LABEL )\n-        {\n-            return \"\";\n-        }\n-        return token( new StringBuilder(), labels, \":\", \"label\", id ).toString();\n+      return \"\";\n     }\n+    return token(new StringBuilder().append('['), relationshipTypes, \":\", \"type\", id).append(']').toString();\n+  }\n \n-    private String propertyKeys( int[] ids )\n+  private static StringBuilder token(StringBuilder result, List<? extends Token> tokens, String pre, String handle, int id)\n+  {\n+    Token token = null;\n+    // search backwards for the token\n+    for (int i = (id < tokens.size()) ? id : tokens.size() - 1; i >= 0; i--)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        for ( int i = 0; i < ids.length; i++ )\n-        {\n-            if ( i > 0 )\n-            {\n-                builder.append( \",\" );\n-            }\n-            token( builder, propertyKeys, \"\", \"key\", ids[i] );\n-        }\n-        return builder.toString();\n+      token = tokens.get(i);\n+      if (token.id() == id)\n+      {\n+        break; // found\n+      }\n+      if (token.id() < id)\n+      {\n+        token = null; // not found\n+        break;\n+      }\n     }\n-\n-    private String relationshipType( int id )\n+    if (token != null)\n     {\n-        if ( id == StatementConstants.ANY_RELATIONSHIP_TYPE )\n-        {\n-            return \"\";\n-        }\n-        return token( new StringBuilder().append( '[' ), relationshipTypes, \":\", \"type\", id ).append( ']' ).toString();\n+      String name = token.name();\n+      result.append(pre).append(name)\n+          .append(\" [\").append(handle).append(\"Id=\").append(token.id()).append(']');\n+    } else\n+    {\n+      result.append(handle).append(\"Id=\").append(id);\n     }\n+    return result;\n+  }\n \n-    private static StringBuilder token( StringBuilder result, List<? extends Token> tokens, String pre, String handle, int id )\n+  private static <TOKEN extends Token> List<TOKEN> allTokensFrom(TokenStore<?, TOKEN> store)\n+  {\n+    try (TokenStore<?, TOKEN> tokens = store)\n     {\n-        Token token = null;\n-        // search backwards for the token\n-        for ( int i = (id < tokens.size()) ? id : tokens.size() - 1; i >= 0; i-- )\n-        {\n-            token = tokens.get(i);\n-            if ( token.id() == id )\n-            {\n-                break; // found\n-            }\n-            if ( token.id() < id )\n-            {\n-                token = null; // not found\n-                break;\n-            }\n-        }\n-        if ( token != null )\n-        {\n-            String name = token.name();\n-            result.append( pre ).append( name )\n-                  .append( \" [\" ).append( handle ).append( \"Id=\" ).append( token.id() ).append( ']' );\n-        }\n-        else\n-        {\n-            result.append( handle ).append( \"Id=\" ).append( id );\n-        }\n-        return result;\n+      return tokens.getTokens(Integer.MAX_VALUE);\n     }\n+  }\n \n-    private static <TOKEN extends Token> List<TOKEN> allTokensFrom( TokenStore<?, TOKEN> store )\n+  private static Map<Long, SchemaIndexDescriptor> getAllIndexesFrom(SchemaStorage storage)\n+  {\n+    HashMap<Long, SchemaIndexDescriptor> indexes = new HashMap<>();\n+    Iterator<IndexRule> indexRules = storage.indexesGetAll();\n+    while (indexRules.hasNext())\n     {\n-        try ( TokenStore<?, TOKEN> tokens = store )\n-        {\n-            return tokens.getTokens( Integer.MAX_VALUE );\n-        }\n+      IndexRule rule = indexRules.next();\n+      indexes.put(rule.getId(), rule.getIndexDescriptor());\n     }\n+    return indexes;\n+  }\n \n-    private static Map<Long,SchemaIndexDescriptor> getAllIndexesFrom( SchemaStorage storage )\n+  private static class VisitableCountsTracker extends CountsTracker\n+  {\n+\n+    VisitableCountsTracker(LogProvider logProvider, FileSystemAbstraction fs,\n+                           PageCache pages, Config config, File baseFile)\n     {\n-        HashMap<Long,SchemaIndexDescriptor> indexes = new HashMap<>();\n-        Iterator<IndexRule> indexRules = storage.indexesGetAll();\n-        while ( indexRules.hasNext() )\n-        {\n-            IndexRule rule = indexRules.next();\n-            indexes.put( rule.getId(), rule.getIndexDescriptor() );\n-        }\n-        return indexes;\n+      super(logProvider, fs, pages, config, baseFile, EmptyVersionContextSupplier.EMPTY);\n     }\n \n-    private static class VisitableCountsTracker extends CountsTracker\n+    @Override\n+    public void visitFile(File path, CountsVisitor visitor) throws IOException\n     {\n-\n-        VisitableCountsTracker( LogProvider logProvider, FileSystemAbstraction fs,\n-                PageCache pages, Config config, File baseFile )\n-        {\n-            super( logProvider, fs, pages, config, baseFile, EmptyVersionContextSupplier.EMPTY );\n-        }\n-\n-        @Override\n-        public void visitFile( File path, CountsVisitor visitor ) throws IOException\n-        {\n-            super.visitFile( path, visitor );\n-        }\n+      super.visitFile(path, visitor);\n     }\n+  }\n }\n",
            "diff_size": 244
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/255/DumpCountsStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/255/DumpCountsStore.java\nindex df75b97f849..8b0d2325e25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/255/DumpCountsStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/255/DumpCountsStore.java\n@@ -77,24 +77,22 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n     public static void dumpCountsStore( FileSystemAbstraction fs, File path, PrintStream out ) throws IOException\n     {\n         try ( PageCache pages = createPageCache( fs );\n-              Lifespan life = new Lifespan() )\n-        {\n+Lifespan life = new Lifespan() )\n+{\n             NullLogProvider logProvider = NullLogProvider.getInstance();\n             Config config = Config.defaults();\n             if ( fs.isDirectory( path ) )\n             {\n                 StoreFactory factory = new StoreFactory( path, Config.defaults(), new DefaultIdGeneratorFactory( fs ),\n                         pages, fs, logProvider, EmptyVersionContextSupplier.EMPTY );\n-\n-                NeoStores neoStores = factory.openAllNeoStores();\n+NeoStores neoStores = factory.openAllNeoStores();\n                 SchemaStorage schemaStorage = new SchemaStorage( neoStores.getSchemaStore() );\n                 neoStores.getCounts().accept( new DumpCountsStore( out, neoStores, schemaStorage ) );\n             }\n             else\n             {\n-                VisitableCountsTracker tracker = new VisitableCountsTracker(\n-                        logProvider, fs, pages, config, path );\n-                if ( fs.fileExists( path ) )\n+                VisitableCountsTracker tracker = new VisitableCountsTracker( logProvider, fs, pages, config, path );\n+if ( fs.fileExists( path ) )\n                 {\n                     tracker.visitFile( path, new DumpCountsStore( out ) );\n                 }\n@@ -113,10 +111,7 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n \n     DumpCountsStore( PrintStream out, NeoStores neoStores, SchemaStorage schemaStorage )\n     {\n-        this( out, getAllIndexesFrom( schemaStorage ),\n-              allTokensFrom( neoStores.getLabelTokenStore() ),\n-              allTokensFrom( neoStores.getRelationshipTypeTokenStore() ),\n-              allTokensFrom( neoStores.getPropertyKeyTokenStore() ) );\n+        this( out, getAllIndexesFrom( schemaStorage ), allTokensFrom( neoStores.getLabelTokenStore() ), allTokensFrom( neoStores.getRelationshipTypeTokenStore() ), allTokensFrom( neoStores.getPropertyKeyTokenStore() ) );\n     }\n \n     private final PrintStream out;\n@@ -125,10 +120,8 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n     private final List<RelationshipTypeToken> relationshipTypes;\n     private final List<Token> propertyKeys;\n \n-    private DumpCountsStore( PrintStream out, Map<Long,SchemaIndexDescriptor> indexes, List<Token> labels,\n-                             List<RelationshipTypeToken> relationshipTypes,\n-                             List<Token> propertyKeys )\n-    {\n+    private DumpCountsStore( PrintStream out, Map<Long,SchemaIndexDescriptor> indexes, List<Token> labels, List<RelationshipTypeToken> relationshipTypes, List<Token> propertyKeys )\n+{\n         this.out = out;\n         this.indexes = indexes;\n         this.labels = labels;\n@@ -157,9 +150,7 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n     @Override\n     public void visitRelationshipCount( int startLabelId, int typeId, int endLabelId, long count )\n     {\n-        out.printf( \"\\tRelationship[(%s)-%s->(%s)]:\\t%d%n\",\n-                    label( startLabelId ), relationshipType( typeId ), label( endLabelId ),\n-                    count );\n+        out.printf( \"\\tRelationship[(%s)-%s->(%s)]:\\t%d%n\", label( startLabelId ), relationshipType( typeId ), label( endLabelId ), count );\n     }\n \n     @Override\n@@ -191,7 +182,8 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n         {\n             return \"\";\n         }\n-        return token( new StringBuilder(), labels, \":\", \"label\", id ).toString();\n+\n+return token( new StringBuilder(), labels, \":\", \"label\", id ).toString();\n     }\n \n     private String propertyKeys( int[] ids )\n@@ -203,9 +195,11 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n             {\n                 builder.append( \",\" );\n             }\n-            token( builder, propertyKeys, \"\", \"key\", ids[i] );\n+\n+token( builder, propertyKeys, \"\", \"key\", ids[i] );\n         }\n-        return builder.toString();\n+\n+return builder.toString();\n     }\n \n     private String relationshipType( int id )\n@@ -214,21 +208,23 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n         {\n             return \"\";\n         }\n-        return token( new StringBuilder().append( '[' ), relationshipTypes, \":\", \"type\", id ).append( ']' ).toString();\n+\n+return token( new StringBuilder().append( '[' ), relationshipTypes, \":\", \"type\", id ).append( ']' ).toString();\n     }\n \n     private static StringBuilder token( StringBuilder result, List<? extends Token> tokens, String pre, String handle, int id )\n     {\n         Token token = null;\n         // search backwards for the token\n-        for ( int i = (id < tokens.size()) ? id : tokens.size() - 1; i >= 0; i-- )\n+        for ( int i = ( id < tokens.size()) ? id : tokens.size() - 1; i >= 0; i-- )\n         {\n             token = tokens.get(i);\n             if ( token.id() == id )\n             {\n                 break; // found\n             }\n-            if ( token.id() < id )\n+\n+if ( token.id() < id )\n             {\n                 token = null; // not found\n                 break;\n@@ -237,14 +233,14 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n         if ( token != null )\n         {\n             String name = token.name();\n-            result.append( pre ).append( name )\n-                  .append( \" [\" ).append( handle ).append( \"Id=\" ).append( token.id() ).append( ']' );\n-        }\n+            result.append( pre ).append( name ).append( \" [\" ).append( handle ).append( \"Id=\" ).append( token.id() ).append( ']' );\n+    }\n         else\n         {\n             result.append( handle ).append( \"Id=\" ).append( id );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     private static <TOKEN extends Token> List<TOKEN> allTokensFrom( TokenStore<?, TOKEN> store )\n@@ -264,13 +260,13 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n             IndexRule rule = indexRules.next();\n             indexes.put( rule.getId(), rule.getIndexDescriptor() );\n         }\n-        return indexes;\n+\n+return indexes;\n     }\n \n     private static class VisitableCountsTracker extends CountsTracker\n     {\n-\n-        VisitableCountsTracker( LogProvider logProvider, FileSystemAbstraction fs,\n+    VisitableCountsTracker( LogProvider logProvider, FileSystemAbstraction fs,\n                 PageCache pages, Config config, File baseFile )\n         {\n             super( logProvider, fs, pages, config, baseFile, EmptyVersionContextSupplier.EMPTY );\n@@ -282,4 +278,4 @@ public class DumpCountsStore implements CountsVisitor, MetadataVisitor, UnknownK\n             super.visitFile( path, visitor );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
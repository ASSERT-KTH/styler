{
    "project_name": "neo4j-neo4j",
    "error_id": "1713",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1713/DiagnosticsReportSources.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1713/DiagnosticsReportSources.java\nindex 0070f6665a0..b059adb7308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1713/DiagnosticsReportSources.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1713/DiagnosticsReportSources.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.diagnostics;\n \n import java.io.ByteArrayInputStream;\n@@ -44,33 +45,33 @@ public final class DiagnosticsReportSources\n      * Create a diagnostics source the will copy a file into the archive.\n      *\n      * @param destination final destination in archive.\n-     * @param fs filesystem abstraction to use.\n-     * @param source source file to archive\n+     * @param fs          filesystem abstraction to use.\n+     * @param source      source file to archive\n      * @return a diagnostics source consuming a file.\n      */\n-    public static DiagnosticsReportSource newDiagnosticsFile( String destination, FileSystemAbstraction fs, Path source )\n+    public static DiagnosticsReportSource newDiagnosticsFile(String destination, FileSystemAbstraction fs, Path source)\n     {\n-        return new DiagnosticsFileReportSource( destination, fs, source );\n+        return new DiagnosticsFileReportSource(destination, fs, source);\n     }\n \n     /**\n      * @param destinationFolder destination folder (including trailing '/') in archive.\n-     * @param fs filesystem abstraction to use.\n-     * @param file input log file, should be without rotation numbers.\n+     * @param fs                filesystem abstraction to use.\n+     * @param file              input log file, should be without rotation numbers.\n      * @return a list diagnostics sources consisting of the log file including all rotated away files.\n      */\n-    public static List<DiagnosticsReportSource> newDiagnosticsRotatingFile( String destinationFolder,\n-            FileSystemAbstraction fs, Path file )\n+    public static List<DiagnosticsReportSource> newDiagnosticsRotatingFile(String destinationFolder,\n+                                                                           FileSystemAbstraction fs, Path file)\n     {\n         List<DiagnosticsReportSource> files = new ArrayList<>();\n \n-        Path[] paths = fs.listFiles( file.getParent(), path -> path.getFileName().toString().startsWith( file.getFileName().toString() ) );\n+        Path[] paths = fs.listFiles(file.getParent(), path -> path.getFileName().toString().startsWith(file.getFileName().toString()));\n \n-        if ( paths != null )\n+        if (paths != null)\n         {\n-            for ( Path path : paths )\n+            for (Path path : paths)\n             {\n-                files.add( newDiagnosticsFile( destinationFolder + path.getFileName().toString(), fs, path ) );\n+                files.add(newDiagnosticsFile(destinationFolder + path.getFileName().toString(), fs, path));\n             }\n         }\n         return files;\n@@ -81,13 +82,13 @@ public final class DiagnosticsReportSources\n      * are opened with append option so this method can be used to accumulate messages from multiple source to a single\n      * file in the archive.\n      *\n-     * @param destination final destination in archive.\n+     * @param destination     final destination in archive.\n      * @param messageSupplier a string supplier with the final message.\n      * @return a diagnostics source consuming a string.\n      */\n-    public static DiagnosticsReportSource newDiagnosticsString( String destination, Supplier<String> messageSupplier )\n+    public static DiagnosticsReportSource newDiagnosticsString(String destination, Supplier<String> messageSupplier)\n     {\n-        return new DiagnosticsStringReportSource( destination, messageSupplier );\n+        return new DiagnosticsStringReportSource(destination, messageSupplier);\n     }\n \n     private static class DiagnosticsFileReportSource implements DiagnosticsReportSource\n@@ -96,7 +97,7 @@ public final class DiagnosticsReportSources\n         private final FileSystemAbstraction fs;\n         private final Path source;\n \n-        DiagnosticsFileReportSource( String destination, FileSystemAbstraction fs, Path source )\n+        DiagnosticsFileReportSource(String destination, FileSystemAbstraction fs, Path source)\n         {\n             this.destination = destination;\n             this.fs = fs;\n@@ -112,13 +113,13 @@ public final class DiagnosticsReportSources\n         @Override\n         public InputStream newInputStream() throws IOException\n         {\n-            return fs.openAsInputStream( source );\n+            return fs.openAsInputStream(source);\n         }\n \n         @Override\n         public long estimatedSize()\n         {\n-            return fs.getFileSize( source );\n+            return fs.getFileSize(source);\n         }\n     }\n \n@@ -127,7 +128,7 @@ public final class DiagnosticsReportSources\n         private final String destination;\n         private final Supplier<String> messageSupplier;\n \n-        private DiagnosticsStringReportSource( String destination, Supplier<String> messageSupplier )\n+        private DiagnosticsStringReportSource(String destination, Supplier<String> messageSupplier)\n         {\n             this.destination = destination;\n             this.messageSupplier = messageSupplier;\n@@ -143,7 +144,7 @@ public final class DiagnosticsReportSources\n         public InputStream newInputStream()\n         {\n             final String message = messageSupplier.get();\n-            return new ByteArrayInputStream( message.getBytes( StandardCharsets.UTF_8 ) );\n+            return new ByteArrayInputStream(message.getBytes(StandardCharsets.UTF_8));\n         }\n \n         @Override\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n    }\n\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/53/DCPEndpoint.java\nindex 020a7048d2d..edc44cebfbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/53/DCPEndpoint.java\n@@ -42,7 +42,7 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+                           super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/53/DCPEndpoint.java\nindex 020a7048d2d..6120e54d030 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/53/DCPEndpoint.java\n@@ -42,7 +42,8 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(),\n+            true);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/53/DCPEndpoint.java\nindex 020a7048d2d..ebcd8173066 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/53/DCPEndpoint.java\n@@ -35,14 +35,12 @@ import io.netty.channel.ChannelPipeline;\n public class DCPEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public DCPEndpoint(String hostname, String bucket, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n+    public DCPEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+    public DCPEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n@@ -54,4 +52,4 @@ public class DCPEndpoint extends AbstractEndpoint {\n             .addLast(new DCPConnectionHandler(environment()))\n             .addLast(new DCPHandler(this, responseBuffer(), false, true));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 255).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/53/DCPEndpoint.java\nindex 020a7048d2d..a9432f5abca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/53/DCPEndpoint.java\n@@ -31,27 +31,25 @@ import io.netty.channel.ChannelPipeline;\n  * @author Sergey Avseyev\n  * @since 1.1.0\n  */\n+\n+\n @Deprecated\n public class DCPEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public DCPEndpoint(String hostname, String bucket, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    public DCPEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    public DCPEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n     protected void customEndpointHandlers(ChannelPipeline pipeline) {\n-        pipeline\n-            .addLast(new BinaryMemcacheClientCodec())\n-            .addLast(new BinaryMemcacheObjectAggregator(Integer.MAX_VALUE))\n-            .addLast(new KeyValueAuthHandler(username(), password()))\n-            .addLast(new DCPConnectionHandler(environment()))\n-            .addLast(new DCPHandler(this, responseBuffer(), false, true));\n+        pipeline.addLast(new BinaryMemcacheClientCodec()).addLast(new BinaryMemcacheObjectAggregator(Integer.MAX_VALUE)).addLast(new KeyValueAuthHandler(username(), password())).addLast(new DCPConnectionHandler(environment())).addLast(new DCPHandler(this,\n+            responseBuffer(),\n+            false,\n+            true));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/53/DCPEndpoint.java\nindex 020a7048d2d..edc44cebfbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/53/DCPEndpoint.java\n@@ -42,7 +42,7 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+                           super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "column": "24",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/53/DCPEndpoint.java\nindex 020a7048d2d..eab95c421e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/53/DCPEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/53/DCPEndpoint.java\n@@ -42,7 +42,8 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+                           super(hostname, bucket,username, password, port\n+                       ,environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
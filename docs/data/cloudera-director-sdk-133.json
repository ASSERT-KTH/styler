{
    "project_name": "cloudera-director-sdk",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/133/TimeSeriesResponse.java\nindex 3fcf4672a33..2541695c0d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/133/TimeSeriesResponse.java\n@@ -28,7 +28,9 @@ public class TimeSeriesResponse {\n   private String timeSeriesQuery;\n   /* Warnings */\n   private List<String> warnings;\n-  public TimeSeriesResponse() { }\n+\n+  public TimeSeriesResponse() {\n+  }\n \n   private TimeSeriesResponse(List<TimeSeries> timeSeries, String timeSeriesQuery, List<String> warnings) {\n     this.timeSeries = timeSeries;\n@@ -73,14 +75,16 @@ public class TimeSeriesResponse {\n \n   public TimeSeriesResponseBuilder toBuilder() {\n     return builder()\n-      .timeSeries(timeSeries)\n-      .timeSeriesQuery(timeSeriesQuery)\n-      .warnings(warnings)\n-      ;\n+        .timeSeries(timeSeries)\n+        .timeSeriesQuery(timeSeriesQuery)\n+        .warnings(warnings)\n+        ;\n   }\n+\n   public List<TimeSeries> getTimeSeries() {\n     return timeSeries;\n   }\n+\n   public void setTimeSeries(List<TimeSeries> timeSeries) {\n     this.timeSeries = timeSeries;\n   }\n@@ -88,6 +92,7 @@ public class TimeSeriesResponse {\n   public String getTimeSeriesQuery() {\n     return timeSeriesQuery;\n   }\n+\n   public void setTimeSeriesQuery(String timeSeriesQuery) {\n     this.timeSeriesQuery = timeSeriesQuery;\n   }\n@@ -95,26 +100,37 @@ public class TimeSeriesResponse {\n   public List<String> getWarnings() {\n     return warnings;\n   }\n+\n   public void setWarnings(List<String> warnings) {\n     this.warnings = warnings;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     TimeSeriesResponse other = (TimeSeriesResponse) o; // NOPMD\n \n     if (timeSeries != null ?\n         !timeSeries.equals(other.timeSeries) :\n-        other.timeSeries != null) return false;\n+        other.timeSeries != null) {\n+      return false;\n+    }\n     if (timeSeriesQuery != null ?\n         !timeSeriesQuery.equals(other.timeSeriesQuery) :\n-        other.timeSeriesQuery != null) return false;\n+        other.timeSeriesQuery != null) {\n+      return false;\n+    }\n     if (warnings != null ?\n         !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n+        other.warnings != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -128,7 +144,7 @@ public class TimeSeriesResponse {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponse {\" + newLine);\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "101",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/133/TimeSeriesResponse.java\nindex 3fcf4672a33..c2c13499545 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/133/TimeSeriesResponse.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.latest.model;\n@@ -28,7 +13,8 @@ public class TimeSeriesResponse {\n   private String timeSeriesQuery;\n   /* Warnings */\n   private List<String> warnings;\n-  public TimeSeriesResponse() { }\n+\n+public TimeSeriesResponse() { }\n \n   private TimeSeriesResponse(List<TimeSeries> timeSeries, String timeSeriesQuery, List<String> warnings) {\n     this.timeSeries = timeSeries;\n@@ -47,7 +33,8 @@ public class TimeSeriesResponse {\n   }\n \n   public static class TimeSeriesResponseBuilder {\n-    private List<TimeSeries> timeSeries = new ArrayList<TimeSeries>();\n+\n+  private List<TimeSeries> timeSeries = new ArrayList<TimeSeries>();\n     private String timeSeriesQuery = null;\n     private List<String> warnings = new ArrayList<String>();\n \n@@ -72,11 +59,9 @@ public class TimeSeriesResponse {\n   }\n \n   public TimeSeriesResponseBuilder toBuilder() {\n-    return builder()\n-      .timeSeries(timeSeries)\n+    return builder().timeSeries(timeSeries)\n       .timeSeriesQuery(timeSeriesQuery)\n-      .warnings(warnings)\n-      ;\n+      .warnings(warnings);\n   }\n   public List<TimeSeries> getTimeSeries() {\n     return timeSeries;\n@@ -102,19 +87,18 @@ public class TimeSeriesResponse {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    TimeSeriesResponse other = (TimeSeriesResponse) o; // NOPMD\n-\n-    if (timeSeries != null ?\n-        !timeSeries.equals(other.timeSeries) :\n-        other.timeSeries != null) return false;\n-    if (timeSeriesQuery != null ?\n-        !timeSeriesQuery.equals(other.timeSeriesQuery) :\n-        other.timeSeriesQuery != null) return false;\n-    if (warnings != null ?\n-        !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    TimeSeriesResponse other = (TimeSeriesResponse) o;\n+\n+// NOPMD\n+\n+    if (timeSeries != null ?!timeSeries.equals(other.timeSeries) : other.timeSeries != null) return false;\n+\n+if (timeSeriesQuery != null ?!timeSeriesQuery.equals(other.timeSeriesQuery) : other.timeSeriesQuery != null) return false;\n+\n+if (warnings != null ?!warnings.equals(other.warnings) : other.warnings != null) return false;\n     return true;\n   }\n \n@@ -128,7 +112,7 @@ public class TimeSeriesResponse {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponse {\" + newLine);\n@@ -138,5 +122,4 @@ public class TimeSeriesResponse {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "37",
                    "column": "31",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "32",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "51",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "32",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "79",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "45",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "50",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "78",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "78",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/133/TimeSeriesResponse.java\nindex 3fcf4672a33..a25229981ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/133/TimeSeriesResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/133/TimeSeriesResponse.java\n@@ -21,34 +21,44 @@ package com.cloudera.director.client.latest.model;\n import java.util.ArrayList;\n import java.util.List;\n \n+\n public class TimeSeriesResponse {\n   /* Time series */\n+\n   private List<TimeSeries> timeSeries;\n   /* Time series query */\n+\n   private String timeSeriesQuery;\n   /* Warnings */\n+\n   private List<String> warnings;\n-  public TimeSeriesResponse() { }\n+\n+\n+  public TimeSeriesResponse() {}\n+\n \n   private TimeSeriesResponse(List<TimeSeries> timeSeries, String timeSeriesQuery, List<String> warnings) {\n-    this.timeSeries = timeSeries;\n-    this.timeSeriesQuery = timeSeriesQuery;\n-    this.warnings = warnings;\n-  }\n+                                                                                                         this.timeSeries = timeSeries;\n+                                                                                                         this.timeSeriesQuery = timeSeriesQuery;\n+                                                                                                         this.warnings = warnings;\n+                                }\n \n   private TimeSeriesResponse(TimeSeriesResponseBuilder builder) {\n-    this.timeSeries = builder.timeSeries;\n-    this.timeSeriesQuery = builder.timeSeriesQuery;\n-    this.warnings = builder.warnings;\n-  }\n+                                                                this.timeSeries = builder.timeSeries;\n+                                                                this.timeSeriesQuery = builder.timeSeriesQuery;\n+                                                                this.warnings = builder.warnings;\n+                                }\n \n   public static TimeSeriesResponseBuilder builder() {\n     return new TimeSeriesResponseBuilder();\n   }\n \n   public static class TimeSeriesResponseBuilder {\n+\n     private List<TimeSeries> timeSeries = new ArrayList<TimeSeries>();\n+\n     private String timeSeriesQuery = null;\n+\n     private List<String> warnings = new ArrayList<String>();\n \n     public TimeSeriesResponseBuilder timeSeries(List<TimeSeries> timeSeries) {\n@@ -75,12 +85,13 @@ public class TimeSeriesResponse {\n     return builder()\n       .timeSeries(timeSeries)\n       .timeSeriesQuery(timeSeriesQuery)\n-      .warnings(warnings)\n-      ;\n+      .warnings(warnings);\n   }\n+\n   public List<TimeSeries> getTimeSeries() {\n     return timeSeries;\n   }\n+\n   public void setTimeSeries(List<TimeSeries> timeSeries) {\n     this.timeSeries = timeSeries;\n   }\n@@ -88,6 +99,7 @@ public class TimeSeriesResponse {\n   public String getTimeSeriesQuery() {\n     return timeSeriesQuery;\n   }\n+\n   public void setTimeSeriesQuery(String timeSeriesQuery) {\n     this.timeSeriesQuery = timeSeriesQuery;\n   }\n@@ -95,48 +107,50 @@ public class TimeSeriesResponse {\n   public List<String> getWarnings() {\n     return warnings;\n   }\n+\n   public void setWarnings(List<String> warnings) {\n     this.warnings = warnings;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    TimeSeriesResponse other = (TimeSeriesResponse) o; // NOPMD\n-\n-    if (timeSeries != null ?\n-        !timeSeries.equals(other.timeSeries) :\n-        other.timeSeries != null) return false;\n-    if (timeSeriesQuery != null ?\n-        !timeSeriesQuery.equals(other.timeSeriesQuery) :\n-        other.timeSeriesQuery != null) return false;\n-    if (warnings != null ?\n-        !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    TimeSeriesResponse other = (TimeSeriesResponse)o; // NOPMD\n+\n+    if (timeSeries != null?!timeSeries.equals(other.timeSeries): other.timeSeries != null) return false;\n+    if (timeSeriesQuery != null?!timeSeriesQuery.equals(other.timeSeriesQuery): other.timeSeriesQuery != null) return false;\n+    if (warnings != null?!warnings.equals(other.warnings): other.warnings != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (timeSeries != null ? timeSeries.hashCode() : 0);\n-    result = 31 * result + (timeSeriesQuery != null ? timeSeriesQuery.hashCode() : 0);\n-    result = 31 * result + (warnings != null ? warnings.hashCode() : 0);\n+    result = 31*result + (timeSeries != null? timeSeries.hashCode():0);\n+    result = 31*result + (timeSeriesQuery != null? timeSeriesQuery.hashCode():0);\n+    result = 31*result + (warnings != null? warnings.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponse {\" + newLine);\n-    sb.append(\"  timeSeries: \").append(timeSeries).append(newLine);\n-    sb.append(\"  timeSeriesQuery: \").append(timeSeriesQuery).append(newLine);\n-    sb.append(\"  warnings: \").append(warnings).append(newLine);\n+    sb.append(\"  timeSeries: \")\n+      .append(timeSeries).append(newLine);\n+    sb.append(\"  timeSeriesQuery: \")\n+      .append(timeSeriesQuery).append(newLine);\n+    sb.append(\"  warnings: \")\n+      .append(warnings).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
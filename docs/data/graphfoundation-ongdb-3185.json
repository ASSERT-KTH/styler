{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3185",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3185/EigenvectorCentralityPower.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3185/EigenvectorCentralityPower.java\nindex cec9a174230..0f447d118af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3185/EigenvectorCentralityPower.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3185/EigenvectorCentralityPower.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.centrality;\n \n import java.util.Map;\n@@ -33,36 +34,37 @@ import org.neo4j.graphdb.Relationship;\n  * the two largest eigenvalues are u1 and u2, a small factor u2/u1 will give a\n  * faster convergence (i.e. faster computation). NOTE: Currently only works on\n  * Doubles.\n- * @complexity The {@link CostEvaluator} is called once for every relationship\n- *             in each iteration. Assuming this is done in constant time, the\n- *             total time complexity is O(i(n + m)) when i iterations are done.\n+ *\n  * @author Patrik Larsson\n  * @author Anton Persson\n+ * @complexity The {@link CostEvaluator} is called once for every relationship\n+ * in each iteration. Assuming this is done in constant time, the\n+ * total time complexity is O(i(n + m)) when i iterations are done.\n  */\n public class EigenvectorCentralityPower extends EigenvectorCentralityBase\n {\n-    /**\n-     * See {@link EigenvectorCentralityBase#EigenvectorCentralityBase(Direction, CostEvaluator, Set, Set, double)}\n-     */\n-    public EigenvectorCentralityPower( Direction relationDirection,\n-        CostEvaluator<Double> costEvaluator, Set<Node> nodeSet,\n-        Set<Relationship> relationshipSet, double precision )\n-    {\n-        super( relationDirection, costEvaluator, nodeSet, relationshipSet, precision );\n-    }\n+  /**\n+   * See {@link EigenvectorCentralityBase#EigenvectorCentralityBase(Direction, CostEvaluator, Set, Set, double)}\n+   */\n+  public EigenvectorCentralityPower(Direction relationDirection,\n+                                    CostEvaluator<Double> costEvaluator, Set<Node> nodeSet,\n+                                    Set<Relationship> relationshipSet, double precision)\n+  {\n+    super(relationDirection, costEvaluator, nodeSet, relationshipSet, precision);\n+  }\n \n-    @Override\n-    public int runInternalIteration()\n-    {\n+  @Override\n+  public int runInternalIteration()\n+  {\n \n-        incrementTotalIterations();\n+    incrementTotalIterations();\n \n-        Map<Node, Double> newValues = processRelationships();\n+    Map<Node, Double> newValues = processRelationships();\n \n-        normalize( newValues );\n+    normalize(newValues);\n \n-        values = newValues;\n+    values = newValues;\n \n-        return 1;\n-    }\n+    return 1;\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3185/EigenvectorCentralityPower.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3185/EigenvectorCentralityPower.java\nindex cec9a174230..543fd2ca9e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3185/EigenvectorCentralityPower.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3185/EigenvectorCentralityPower.java\n@@ -44,25 +44,21 @@ public class EigenvectorCentralityPower extends EigenvectorCentralityBase\n     /**\n      * See {@link EigenvectorCentralityBase#EigenvectorCentralityBase(Direction, CostEvaluator, Set, Set, double)}\n      */\n-    public EigenvectorCentralityPower( Direction relationDirection,\n-        CostEvaluator<Double> costEvaluator, Set<Node> nodeSet,\n-        Set<Relationship> relationshipSet, double precision )\n-    {\n+    public EigenvectorCentralityPower( Direction relationDirection, CostEvaluator<Double> costEvaluator, Set<Node> nodeSet, Set<Relationship> relationshipSet, double precision )\n+{\n         super( relationDirection, costEvaluator, nodeSet, relationshipSet, precision );\n     }\n \n     @Override\n     public int runInternalIteration()\n     {\n+    incrementTotalIterations();\n \n-        incrementTotalIterations();\n-\n-        Map<Node, Double> newValues = processRelationships();\n+        Map<Node,Double> newValues = processRelationships();\n \n         normalize( newValues );\n-\n-        values = newValues;\n+values = newValues;\n \n         return 1;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
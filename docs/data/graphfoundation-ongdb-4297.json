{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4297",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4297/ProcessRelationshipCountsDataStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4297/ProcessRelationshipCountsDataStep.java\nindex 7a6e1f86014..46a01b95a49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4297/ProcessRelationshipCountsDataStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4297/ProcessRelationshipCountsDataStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.Map;\n@@ -41,97 +42,96 @@ import static java.lang.Math.toIntExact;\n  */\n public class ProcessRelationshipCountsDataStep extends ProcessorStep<RelationshipRecord[]>\n {\n-    private final NodeLabelsCache cache;\n-    private final Map<Thread,RelationshipCountsProcessor> processors = new ConcurrentHashMap<>();\n-    private final int highLabelId;\n-    private final int highRelationshipTypeId;\n-    private final CountsAccessor.Updater countsUpdater;\n-    private final NumberArrayFactory cacheFactory;\n-    private final ProgressReporter progressMonitor;\n+  private final NodeLabelsCache cache;\n+  private final Map<Thread, RelationshipCountsProcessor> processors = new ConcurrentHashMap<>();\n+  private final int highLabelId;\n+  private final int highRelationshipTypeId;\n+  private final CountsAccessor.Updater countsUpdater;\n+  private final NumberArrayFactory cacheFactory;\n+  private final ProgressReporter progressMonitor;\n \n-    public ProcessRelationshipCountsDataStep( StageControl control, NodeLabelsCache cache, Configuration config, int\n-            highLabelId, int highRelationshipTypeId,\n-            CountsAccessor.Updater countsUpdater, NumberArrayFactory cacheFactory,\n-            ProgressReporter progressReporter )\n-    {\n-        super( control, \"COUNT\", config, numberOfProcessors( config, cache, highLabelId, highRelationshipTypeId ) );\n-        this.cache = cache;\n-        this.highLabelId = highLabelId;\n-        this.highRelationshipTypeId = highRelationshipTypeId;\n-        this.countsUpdater = countsUpdater;\n-        this.cacheFactory = cacheFactory;\n-        this.progressMonitor = progressReporter;\n-    }\n+  public ProcessRelationshipCountsDataStep(StageControl control, NodeLabelsCache cache, Configuration config, int\n+      highLabelId, int highRelationshipTypeId,\n+                                           CountsAccessor.Updater countsUpdater, NumberArrayFactory cacheFactory,\n+                                           ProgressReporter progressReporter)\n+  {\n+    super(control, \"COUNT\", config, numberOfProcessors(config, cache, highLabelId, highRelationshipTypeId));\n+    this.cache = cache;\n+    this.highLabelId = highLabelId;\n+    this.highRelationshipTypeId = highRelationshipTypeId;\n+    this.countsUpdater = countsUpdater;\n+    this.cacheFactory = cacheFactory;\n+    this.progressMonitor = progressReporter;\n+  }\n \n-    /**\n-     * Keeping all counts for all combinations of label/reltype can require a lot of memory if there are lots of those tokens.\n-     * Each processor will allocate such a data structure and so in extreme cases the number of processors will have to\n-     * be limited to not surpass the available memory limits.\n-     *\n-     * @param config {@link Configuration} holding things like max number of processors and max memory.\n-     * @param cache {@link NodeLabelsCache} which is the only other data structure occupying memory at this point.\n-     * @param highLabelId high label id for this store.\n-     * @param highRelationshipTypeId high relationship type id for this store.\n-     * @return number of processors suitable for this step. In most cases this will be 0, which is the typical value used\n-     * when just allowing the importer to grab up to {@link Configuration#maxNumberOfProcessors()}. The returned value\n-     * will at least be 1.\n-     */\n-    private static int numberOfProcessors( Configuration config, NodeLabelsCache cache, int highLabelId, int highRelationshipTypeId )\n-    {\n-        GatheringMemoryStatsVisitor memVisitor = new GatheringMemoryStatsVisitor();\n-        cache.acceptMemoryStatsVisitor( memVisitor );\n+  /**\n+   * Keeping all counts for all combinations of label/reltype can require a lot of memory if there are lots of those tokens.\n+   * Each processor will allocate such a data structure and so in extreme cases the number of processors will have to\n+   * be limited to not surpass the available memory limits.\n+   *\n+   * @param config                 {@link Configuration} holding things like max number of processors and max memory.\n+   * @param cache                  {@link NodeLabelsCache} which is the only other data structure occupying memory at this point.\n+   * @param highLabelId            high label id for this store.\n+   * @param highRelationshipTypeId high relationship type id for this store.\n+   * @return number of processors suitable for this step. In most cases this will be 0, which is the typical value used\n+   * when just allowing the importer to grab up to {@link Configuration#maxNumberOfProcessors()}. The returned value\n+   * will at least be 1.\n+   */\n+  private static int numberOfProcessors(Configuration config, NodeLabelsCache cache, int highLabelId, int highRelationshipTypeId)\n+  {\n+    GatheringMemoryStatsVisitor memVisitor = new GatheringMemoryStatsVisitor();\n+    cache.acceptMemoryStatsVisitor(memVisitor);\n \n-        long availableMem = config.maxMemoryUsage() - memVisitor.getTotalUsage();\n-        long threadMem = RelationshipCountsProcessor.calculateMemoryUsage( highLabelId, highRelationshipTypeId );\n-        long possibleThreads = availableMem / threadMem;\n-        return possibleThreads >= config.maxNumberOfProcessors() ? 0 : toIntExact( max( 1, possibleThreads ) );\n-    }\n+    long availableMem = config.maxMemoryUsage() - memVisitor.getTotalUsage();\n+    long threadMem = RelationshipCountsProcessor.calculateMemoryUsage(highLabelId, highRelationshipTypeId);\n+    long possibleThreads = availableMem / threadMem;\n+    return possibleThreads >= config.maxNumberOfProcessors() ? 0 : toIntExact(max(1, possibleThreads));\n+  }\n \n-    @Override\n-    protected void process( RelationshipRecord[] batch, BatchSender sender )\n+  @Override\n+  protected void process(RelationshipRecord[] batch, BatchSender sender)\n+  {\n+    RelationshipCountsProcessor processor = processor();\n+    for (RelationshipRecord record : batch)\n     {\n-        RelationshipCountsProcessor processor = processor();\n-        for ( RelationshipRecord record : batch )\n-        {\n-            if ( record.inUse() )\n-            {\n-                processor.process( record );\n-            }\n-        }\n-        progressMonitor.progress( batch.length );\n+      if (record.inUse())\n+      {\n+        processor.process(record);\n+      }\n     }\n+    progressMonitor.progress(batch.length);\n+  }\n \n-    private RelationshipCountsProcessor processor()\n+  private RelationshipCountsProcessor processor()\n+  {\n+    // This is OK since in this step implementation we use TaskExecutor which sticks to its threads deterministically.\n+    return processors.computeIfAbsent(Thread.currentThread(),\n+        k -> new RelationshipCountsProcessor(cache, highLabelId, highRelationshipTypeId, countsUpdater, cacheFactory));\n+  }\n+\n+  @Override\n+  protected void done()\n+  {\n+    super.done();\n+    RelationshipCountsProcessor all = null;\n+    for (RelationshipCountsProcessor processor : processors.values())\n     {\n-        // This is OK since in this step implementation we use TaskExecutor which sticks to its threads deterministically.\n-        return processors.computeIfAbsent( Thread.currentThread(),\n-                k -> new RelationshipCountsProcessor( cache, highLabelId, highRelationshipTypeId, countsUpdater, cacheFactory ) );\n+      if (all == null)\n+      {\n+        all = processor;\n+      } else\n+      {\n+        all.addCountsFrom(processor);\n+      }\n     }\n-\n-    @Override\n-    protected void done()\n+    if (all != null)\n     {\n-        super.done();\n-        RelationshipCountsProcessor all = null;\n-        for ( RelationshipCountsProcessor processor : processors.values() )\n-        {\n-            if ( all == null )\n-            {\n-                all = processor;\n-            }\n-            else\n-            {\n-                all.addCountsFrom( processor );\n-            }\n-        }\n-        if ( all != null )\n-        {\n-            all.done();\n-        }\n+      all.done();\n+    }\n \n-        for ( RelationshipCountsProcessor processor : processors.values() )\n-        {\n-            processor.close();\n-        }\n+    for (RelationshipCountsProcessor processor : processors.values())\n+    {\n+      processor.close();\n     }\n+  }\n }\n",
            "diff_size": 104
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4297/ProcessRelationshipCountsDataStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4297/ProcessRelationshipCountsDataStep.java\nindex 7a6e1f86014..faab74c214a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4297/ProcessRelationshipCountsDataStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4297/ProcessRelationshipCountsDataStep.java\n@@ -49,8 +49,7 @@ public class ProcessRelationshipCountsDataStep extends ProcessorStep<Relationshi\n     private final NumberArrayFactory cacheFactory;\n     private final ProgressReporter progressMonitor;\n \n-    public ProcessRelationshipCountsDataStep( StageControl control, NodeLabelsCache cache, Configuration config, int\n-            highLabelId, int highRelationshipTypeId,\n+    public ProcessRelationshipCountsDataStep( StageControl control, NodeLabelsCache cache, Configuration config, int highLabelId, int highRelationshipTypeId,\n             CountsAccessor.Updater countsUpdater, NumberArrayFactory cacheFactory,\n             ProgressReporter progressReporter )\n     {\n@@ -134,4 +133,4 @@ public class ProcessRelationshipCountsDataStep extends ProcessorStep<Relationshi\n             processor.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2191",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2191/SchemaRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2191/SchemaRecord.java\nindex c0eae6769e8..345c419e0e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2191/SchemaRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2191/SchemaRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.ArrayList;\n@@ -28,56 +29,56 @@ import static org.neo4j.kernel.impl.store.record.Record.NULL_REFERENCE;\n \n public class SchemaRecord extends AbstractBaseRecord implements Iterable<DynamicRecord>\n {\n-    private Collection<DynamicRecord> records;\n+  private Collection<DynamicRecord> records;\n \n-    public SchemaRecord( Collection<DynamicRecord> records )\n-    {\n-        super( -1 );\n-        initialize( records );\n-    }\n+  public SchemaRecord(Collection<DynamicRecord> records)\n+  {\n+    super(-1);\n+    initialize(records);\n+  }\n \n-    public SchemaRecord initialize( Collection<DynamicRecord> records )\n-    {\n-        initialize( true );\n-        Iterator<DynamicRecord> iterator = records.iterator();\n-        long id = iterator.hasNext() ? iterator.next().getId() : NULL_REFERENCE.intValue();\n-        setId( id );\n-        this.records = records;\n-        return this;\n-    }\n+  public SchemaRecord initialize(Collection<DynamicRecord> records)\n+  {\n+    initialize(true);\n+    Iterator<DynamicRecord> iterator = records.iterator();\n+    long id = iterator.hasNext() ? iterator.next().getId() : NULL_REFERENCE.intValue();\n+    setId(id);\n+    this.records = records;\n+    return this;\n+  }\n \n-    public void setDynamicRecords( Collection<DynamicRecord> records )\n-    {\n-        this.records.clear();\n-        this.records.addAll( records );\n-    }\n+  public void setDynamicRecords(Collection<DynamicRecord> records)\n+  {\n+    this.records.clear();\n+    this.records.addAll(records);\n+  }\n \n-    @Override\n-    public void clear()\n-    {\n-        super.clear();\n-        this.records = null;\n-    }\n+  @Override\n+  public void clear()\n+  {\n+    super.clear();\n+    this.records = null;\n+  }\n \n-    @Override\n-    public Iterator<DynamicRecord> iterator()\n-    {\n-        return records.iterator();\n-    }\n+  @Override\n+  public Iterator<DynamicRecord> iterator()\n+  {\n+    return records.iterator();\n+  }\n \n-    public int size()\n-    {\n-        return records.size();\n-    }\n+  public int size()\n+  {\n+    return records.size();\n+  }\n \n-    @Override\n-    public SchemaRecord clone()\n+  @Override\n+  public SchemaRecord clone()\n+  {\n+    List<DynamicRecord> list = new ArrayList<>(records.size());\n+    for (DynamicRecord record : records)\n     {\n-        List<DynamicRecord> list = new ArrayList<>( records.size() );\n-        for ( DynamicRecord record : records )\n-        {\n-            list.add( record.clone() );\n-        }\n-        return new SchemaRecord( list );\n+      list.add(record.clone());\n     }\n+    return new SchemaRecord(list);\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2191/SchemaRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2191/SchemaRecord.java\nindex c0eae6769e8..01eab0637ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2191/SchemaRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2191/SchemaRecord.java\n@@ -80,4 +80,4 @@ public class SchemaRecord extends AbstractBaseRecord implements Iterable<Dynamic\n         }\n         return new SchemaRecord( list );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
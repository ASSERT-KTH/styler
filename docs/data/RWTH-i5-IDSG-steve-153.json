{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "153",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n            if (params instanceof BootNotificationRequest) {\n                r = server.bootNotificationWithTransport((BootNotificationRequest) params, chargeBoxId, OcppProtocol.V_12_JSON);\n\n            } else if (params instanceof FirmwareStatusNotificationRequest) {\n                r = server.firmwareStatusNotification((FirmwareStatusNotificationRequest) params, chargeBoxId);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/153/Ocpp12WebSocketEndpoint.java\nindex 48153d76c6a..b356dceb830 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/153/Ocpp12WebSocketEndpoint.java\n@@ -34,57 +34,61 @@ import javax.annotation.PostConstruct;\n @Component\n public class Ocpp12WebSocketEndpoint extends AbstractWebSocketEndpoint {\n \n-    @Autowired private CentralSystemService12_SoapServer server;\n+  @Autowired\n+  private CentralSystemService12_SoapServer server;\n \n-    @Autowired private OutgoingPipeline outgoingPipeline;\n-    @Autowired private ObjectMapper mapper;\n-    @Autowired private FutureResponseContextStore futureResponseContextStore;\n+  @Autowired\n+  private OutgoingPipeline outgoingPipeline;\n+  @Autowired\n+  private ObjectMapper mapper;\n+  @Autowired\n+  private FutureResponseContextStore futureResponseContextStore;\n \n-    @PostConstruct\n-    public void init() {\n-        Deserializer deserializer = new Deserializer(mapper, futureResponseContextStore, Ocpp12TypeStore.INSTANCE);\n-        IncomingPipeline pipeline = new IncomingPipeline(deserializer, new Ocpp12CallHandler(server), outgoingPipeline);\n-        super.init(pipeline);\n-    }\n+  @PostConstruct\n+  public void init() {\n+    Deserializer deserializer = new Deserializer(mapper, futureResponseContextStore, Ocpp12TypeStore.INSTANCE);\n+    IncomingPipeline pipeline = new IncomingPipeline(deserializer, new Ocpp12CallHandler(server), outgoingPipeline);\n+    super.init(pipeline);\n+  }\n \n-    @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n-    private static class Ocpp12CallHandler extends AbstractCallHandler {\n+  @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n+  private static class Ocpp12CallHandler extends AbstractCallHandler {\n \n-        private final CentralSystemService12_SoapServer server;\n+    private final CentralSystemService12_SoapServer server;\n \n-        @Override\n-        protected ResponseType dispatch(RequestType params, String chargeBoxId) {\n-            ResponseType r = null;\n+    @Override\n+    protected ResponseType dispatch(RequestType params, String chargeBoxId) {\n+      ResponseType r = null;\n \n-            if (params instanceof BootNotificationRequest) {\n-                r = server.bootNotificationWithTransport((BootNotificationRequest) params, chargeBoxId, OcppProtocol.V_12_JSON);\n+      if (params instanceof BootNotificationRequest) {\n+        r = server.bootNotificationWithTransport((BootNotificationRequest) params, chargeBoxId, OcppProtocol.V_12_JSON);\n \n-            } else if (params instanceof FirmwareStatusNotificationRequest) {\n-                r = server.firmwareStatusNotification((FirmwareStatusNotificationRequest) params, chargeBoxId);\n+      } else if (params instanceof FirmwareStatusNotificationRequest) {\n+        r = server.firmwareStatusNotification((FirmwareStatusNotificationRequest) params, chargeBoxId);\n \n-            } else if (params instanceof StatusNotificationRequest) {\n-                r = server.statusNotification((StatusNotificationRequest) params, chargeBoxId);\n+      } else if (params instanceof StatusNotificationRequest) {\n+        r = server.statusNotification((StatusNotificationRequest) params, chargeBoxId);\n \n-            } else if (params instanceof MeterValuesRequest) {\n-                r = server.meterValues((MeterValuesRequest) params, chargeBoxId);\n+      } else if (params instanceof MeterValuesRequest) {\n+        r = server.meterValues((MeterValuesRequest) params, chargeBoxId);\n \n-            } else if (params instanceof DiagnosticsStatusNotificationRequest) {\n-                r = server.diagnosticsStatusNotification((DiagnosticsStatusNotificationRequest) params, chargeBoxId);\n+      } else if (params instanceof DiagnosticsStatusNotificationRequest) {\n+        r = server.diagnosticsStatusNotification((DiagnosticsStatusNotificationRequest) params, chargeBoxId);\n \n-            } else if (params instanceof StartTransactionRequest) {\n-                r = server.startTransaction((StartTransactionRequest) params, chargeBoxId);\n+      } else if (params instanceof StartTransactionRequest) {\n+        r = server.startTransaction((StartTransactionRequest) params, chargeBoxId);\n \n-            } else if (params instanceof StopTransactionRequest) {\n-                r = server.stopTransaction((StopTransactionRequest) params, chargeBoxId);\n+      } else if (params instanceof StopTransactionRequest) {\n+        r = server.stopTransaction((StopTransactionRequest) params, chargeBoxId);\n \n-            } else if (params instanceof HeartbeatRequest) {\n-                r = server.heartbeat((HeartbeatRequest) params, chargeBoxId);\n+      } else if (params instanceof HeartbeatRequest) {\n+        r = server.heartbeat((HeartbeatRequest) params, chargeBoxId);\n \n-            } else if (params instanceof AuthorizeRequest) {\n-                r = server.authorize((AuthorizeRequest) params, chargeBoxId);\n-            }\n+      } else if (params instanceof AuthorizeRequest) {\n+        r = server.authorize((AuthorizeRequest) params, chargeBoxId);\n+      }\n \n-            return r;\n-        }\n+      return r;\n     }\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/153/Ocpp12WebSocketEndpoint.java\nindex 48153d76c6a..7afc5504eb4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/153/Ocpp12WebSocketEndpoint.java\n@@ -87,4 +87,4 @@ public class Ocpp12WebSocketEndpoint extends AbstractWebSocketEndpoint {\n             return r;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/153/Ocpp12WebSocketEndpoint.java\nindex 48153d76c6a..65ae8be252e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/153/Ocpp12WebSocketEndpoint.java\n@@ -24,22 +24,21 @@ import ocpp.cs._2010._08.StatusNotificationRequest;\n import ocpp.cs._2010._08.StopTransactionRequest;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-\n import javax.annotation.PostConstruct;\n \n /**\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 12.03.2015\n  */\n+\n+\n @Component\n public class Ocpp12WebSocketEndpoint extends AbstractWebSocketEndpoint {\n \n     @Autowired private CentralSystemService12_SoapServer server;\n-\n     @Autowired private OutgoingPipeline outgoingPipeline;\n     @Autowired private ObjectMapper mapper;\n     @Autowired private FutureResponseContextStore futureResponseContextStore;\n-\n     @PostConstruct\n     public void init() {\n         Deserializer deserializer = new Deserializer(mapper, futureResponseContextStore, Ocpp12TypeStore.INSTANCE);\n@@ -49,42 +48,30 @@ public class Ocpp12WebSocketEndpoint extends AbstractWebSocketEndpoint {\n \n     @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n     private static class Ocpp12CallHandler extends AbstractCallHandler {\n-\n         private final CentralSystemService12_SoapServer server;\n-\n         @Override\n         protected ResponseType dispatch(RequestType params, String chargeBoxId) {\n             ResponseType r = null;\n-\n             if (params instanceof BootNotificationRequest) {\n                 r = server.bootNotificationWithTransport((BootNotificationRequest) params, chargeBoxId, OcppProtocol.V_12_JSON);\n-\n             } else if (params instanceof FirmwareStatusNotificationRequest) {\n                 r = server.firmwareStatusNotification((FirmwareStatusNotificationRequest) params, chargeBoxId);\n-\n             } else if (params instanceof StatusNotificationRequest) {\n-                r = server.statusNotification((StatusNotificationRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof MeterValuesRequest) {\n-                r = server.meterValues((MeterValuesRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof DiagnosticsStatusNotificationRequest) {\n-                r = server.diagnosticsStatusNotification((DiagnosticsStatusNotificationRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof StartTransactionRequest) {\n-                r = server.startTransaction((StartTransactionRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof StopTransactionRequest) {\n-                r = server.stopTransaction((StopTransactionRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof HeartbeatRequest) {\n-                r = server.heartbeat((HeartbeatRequest) params, chargeBoxId);\n-\n-            } else if (params instanceof AuthorizeRequest) {\n-                r = server.authorize((AuthorizeRequest) params, chargeBoxId);\n-            }\n-\n+                       r = server.statusNotification((StatusNotificationRequest) params, chargeBoxId);\n+                   } else if (params instanceof MeterValuesRequest) {\n+                       r = server.meterValues((MeterValuesRequest) params, chargeBoxId);\n+                   } else if (params instanceof DiagnosticsStatusNotificationRequest) {\n+                              r = server.diagnosticsStatusNotification((DiagnosticsStatusNotificationRequest) params, chargeBoxId);\n+                          } else if (params instanceof StartTransactionRequest) {\n+                              r = server.startTransaction((StartTransactionRequest) params, chargeBoxId);\n+                          } else if (params instanceof StopTransactionRequest) {\n+                                     r = server.stopTransaction((StopTransactionRequest) params, chargeBoxId);\n+                                 } else if (params instanceof HeartbeatRequest) {\n+                                     r = server.heartbeat((HeartbeatRequest) params, chargeBoxId);\n+                                 } else if (params instanceof AuthorizeRequest) {\n+                                            r = server.authorize((AuthorizeRequest) params, chargeBoxId);\n+                                        }\n             return r;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "60",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "84",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "60",
                    "column": "92",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/153/Ocpp12WebSocketEndpoint.java\nindex 48153d76c6a..24e0e3c8d65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/153/Ocpp12WebSocketEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/153/Ocpp12WebSocketEndpoint.java\n@@ -57,9 +57,10 @@ public class Ocpp12WebSocketEndpoint extends AbstractWebSocketEndpoint {\n             ResponseType r = null;\n \n             if (params instanceof BootNotificationRequest) {\n-                r = server.bootNotificationWithTransport((BootNotificationRequest) params, chargeBoxId, OcppProtocol.V_12_JSON);\n+                r = server .bootNotificationWithTransport((BootNotificationRequest )params ,\n+                    chargeBoxId , OcppProtocol.V_12_JSON);\n \n-            } else if (params instanceof FirmwareStatusNotificationRequest) {\n+             } else if (params instanceof FirmwareStatusNotificationRequest) {\n                 r = server.firmwareStatusNotification((FirmwareStatusNotificationRequest) params, chargeBoxId);\n \n             } else if (params instanceof StatusNotificationRequest) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
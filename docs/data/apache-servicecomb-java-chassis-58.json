{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "58",
    "information": {
        "errors": [
            {
                "line": "49",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n\n  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n\n  public static final StatusType CONSUMER_INNER_STATUS =\n      new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/58/ExceptionFactory.java\nindex 3fcc2a96959..f380a05a8a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/58/ExceptionFactory.java\n@@ -46,9 +46,10 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new\n+    ExceptionToProducerResponseConverters();\n \n-  public static final StatusType CONSUMER_INNER_STATUS =\n+   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/58/ExceptionFactory.java\nindex 3fcc2a96959..cf8e1384f15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/58/ExceptionFactory.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.invocation.exception;\n \n import java.lang.reflect.InvocationTargetException;\n@@ -46,7 +47,8 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters =\n+      new ExceptionToProducerResponseConverters();\n \n   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n@@ -55,7 +57,7 @@ public final class ExceptionFactory {\n   }\n \n   public static InvocationException create(StatusType status,\n-      Object exceptionOrErrorData) {\n+                                           Object exceptionOrErrorData) {\n     if (InvocationException.class.isInstance(exceptionOrErrorData)) {\n       return (InvocationException) exceptionOrErrorData;\n     }\n@@ -72,12 +74,12 @@ public final class ExceptionFactory {\n   }\n \n   protected static InvocationException doCreate(StatusType status,\n-      Object errorData) {\n+                                                Object errorData) {\n     return new InvocationException(status, errorData);\n   }\n \n   protected static InvocationException doCreate(int statusCode, String reasonPhrase, CommonExceptionData data,\n-      Throwable e) {\n+                                                Throwable e) {\n     return new InvocationException(statusCode, reasonPhrase, data, e);\n   }\n \n@@ -113,7 +115,7 @@ public final class ExceptionFactory {\n   // \u5219\u9700\u8981\u521b\u5efa\u65b0\u7684InvocationException\u5b9e\u4f8b\uff0c\u6b64\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528e.getMessage\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6d89\u53ca\u5173\u952e\u4fe1\u606f\u88ab\u4f20\u7ed9\u8fdc\u7aef\n   // \u65b0\u521b\u5efa\u7684InvocationException\uff0c\u4f1a\u4f7f\u7528errorMsg\u6765\u6784\u5efaCommonExceptionData\n   protected static InvocationException convertException(int statusCode, String reasonPhrase, Throwable e,\n-      String errorMsg) {\n+                                                        String errorMsg) {\n     e = unwrap(e);\n \n     if (InvocationException.class.isInstance(e)) {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/58/ExceptionFactory.java\nindex 3fcc2a96959..7f508bf5a9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/58/ExceptionFactory.java\n@@ -149,4 +149,4 @@ public final class ExceptionFactory {\n     }\n     return (T) throwable;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/58/ExceptionFactory.java\nindex 3fcc2a96959..64a17b8efa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/58/ExceptionFactory.java\n@@ -19,9 +19,7 @@ package org.apache.servicecomb.swagger.invocation.exception;\n import java.lang.reflect.InvocationTargetException;\n import java.util.concurrent.CompletionException;\n import java.util.concurrent.ExecutionException;\n-\n import javax.ws.rs.core.Response.StatusType;\n-\n import org.apache.servicecomb.swagger.invocation.Response;\n import org.apache.servicecomb.swagger.invocation.SwaggerInvocation;\n import org.apache.servicecomb.swagger.invocation.context.HttpStatus;\n@@ -36,30 +34,27 @@ public final class ExceptionFactory {\n \n   public static final String PRODUCER_INNER_REASON_PHRASE = \"Unexpected producer error, please check logs for details\";\n \n-  public static final StatusType PRODUCER_INNER_STATUS =\n-      new HttpStatus(PRODUCER_INNER_STATUS_CODE, PRODUCER_INNER_REASON_PHRASE);\n+  public static final StatusType PRODUCER_INNER_STATUS = new HttpStatus(PRODUCER_INNER_STATUS_CODE, PRODUCER_INNER_REASON_PHRASE);\n \n   // 420\u662fws.rs\u4e2d\u672a\u5b9a\u4e49\uff0c\u5728springmvc\u4e2d\u5b9a\u4e49\u4e3aMethod Failure\n   // \u5728\u6211\u4eec\u7684\u6d41\u7a0b\u4e2d\u4e0d\u53ef\u80fd\u7528\u5230\u8fd9\u4e2a\u9519\u8bef\u5b9a\u4e49\uff0c\u6240\u4ee5\u5c06\u4e4b\u8f6c\u4e49\u4e3acse\u7684consumer\u5185\u90e8\u9519\u8bef\n   //    private static final int CONSUMER_INNER_STATUS_CODE = 420;\n+\n   public static final int CONSUMER_INNER_STATUS_CODE = 490;\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n   private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n \n-  public static final StatusType CONSUMER_INNER_STATUS =\n-      new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n+  public static final StatusType CONSUMER_INNER_STATUS = new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n   }\n \n-  public static InvocationException create(StatusType status,\n-      Object exceptionOrErrorData) {\n+  public static InvocationException create(StatusType status, Object exceptionOrErrorData) {\n     if (InvocationException.class.isInstance(exceptionOrErrorData)) {\n       return (InvocationException) exceptionOrErrorData;\n     }\n-\n     return doCreate(status, exceptionOrErrorData);\n   }\n \n@@ -71,51 +66,42 @@ public final class ExceptionFactory {\n     return create(PRODUCER_INNER_STATUS, errorData);\n   }\n \n-  protected static InvocationException doCreate(StatusType status,\n-      Object errorData) {\n+  protected static InvocationException doCreate(StatusType status, Object errorData) {\n     return new InvocationException(status, errorData);\n   }\n \n-  protected static InvocationException doCreate(int statusCode, String reasonPhrase, CommonExceptionData data,\n-      Throwable e) {\n+  protected static InvocationException doCreate(int statusCode, String reasonPhrase, CommonExceptionData data, Throwable e) {\n     return new InvocationException(statusCode, reasonPhrase, data, e);\n   }\n \n   public static InvocationException convertConsumerException(Throwable e) {\n     return convertException(CONSUMER_INNER_STATUS_CODE,\n-        CONSUMER_INNER_REASON_PHRASE,\n-        e,\n-        CONSUMER_INNER_REASON_PHRASE);\n+CONSUMER_INNER_REASON_PHRASE,\n+e,\n+CONSUMER_INNER_REASON_PHRASE);\n   }\n \n   public static InvocationException convertConsumerException(Throwable e, String errorMsg) {\n-    return convertException(CONSUMER_INNER_STATUS_CODE,\n-        CONSUMER_INNER_REASON_PHRASE,\n-        e,\n-        errorMsg);\n+    return convertException(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE, e, errorMsg);\n   }\n \n   public static InvocationException convertProducerException(Throwable e) {\n     return convertException(PRODUCER_INNER_STATUS_CODE,\n-        PRODUCER_INNER_REASON_PHRASE,\n-        e,\n-        PRODUCER_INNER_REASON_PHRASE);\n+PRODUCER_INNER_REASON_PHRASE,\n+e,\n+PRODUCER_INNER_REASON_PHRASE);\n   }\n \n   public static InvocationException convertProducerException(Throwable e, String errorMsg) {\n-    return convertException(PRODUCER_INNER_STATUS_CODE,\n-        PRODUCER_INNER_REASON_PHRASE,\n-        e,\n-        errorMsg);\n+    return convertException(PRODUCER_INNER_STATUS_CODE, PRODUCER_INNER_REASON_PHRASE, e, errorMsg);\n   }\n \n   // \u5982\u679ce\u4e2d\u53d6\u4e0d\u51fa\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7684InvocationException\n   // \u5219\u9700\u8981\u521b\u5efa\u65b0\u7684InvocationException\u5b9e\u4f8b\uff0c\u6b64\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528e.getMessage\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6d89\u53ca\u5173\u952e\u4fe1\u606f\u88ab\u4f20\u7ed9\u8fdc\u7aef\n   // \u65b0\u521b\u5efa\u7684InvocationException\uff0c\u4f1a\u4f7f\u7528errorMsg\u6765\u6784\u5efaCommonExceptionData\n-  protected static InvocationException convertException(int statusCode, String reasonPhrase, Throwable e,\n-      String errorMsg) {\n-    e = unwrap(e);\n \n+  protected static InvocationException convertException(int statusCode, String reasonPhrase, Throwable e, String errorMsg) {\n+    e = unwrap(e);\n     if (InvocationException.class.isInstance(e)) {\n       return (InvocationException) e;\n     }\n@@ -141,12 +127,14 @@ public final class ExceptionFactory {\n     if (throwable instanceof InvocationTargetException) {\n       throwable = ((InvocationTargetException) throwable).getTargetException();\n     }\n+\n     if (throwable instanceof CompletionException) {\n       throwable = throwable.getCause();\n     }\n+\n     if (throwable instanceof ExecutionException) {\n       throwable = throwable.getCause();\n     }\n     return (T) throwable;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/58/ExceptionFactory.java\nindex 3fcc2a96959..f380a05a8a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/58/ExceptionFactory.java\n@@ -46,9 +46,10 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new\n+    ExceptionToProducerResponseConverters();\n \n-  public static final StatusType CONSUMER_INNER_STATUS =\n+   public static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "139",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/58/ExceptionFactory.java\nindex 3fcc2a96959..f573dc05689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/58/ExceptionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/58/ExceptionFactory.java\n@@ -46,9 +46,7 @@ public final class ExceptionFactory {\n \n   public static final String CONSUMER_INNER_REASON_PHRASE = \"Unexpected consumer error, please check logs for details\";\n \n-  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = new ExceptionToProducerResponseConverters();\n-\n-  public static final StatusType CONSUMER_INNER_STATUS =\n+  private static ExceptionToProducerResponseConverters exceptionToProducerResponseConverters = newExceptionToProducerResponseConverters();public static static final StatusType CONSUMER_INNER_STATUS =\n       new HttpStatus(CONSUMER_INNER_STATUS_CODE, CONSUMER_INNER_REASON_PHRASE);\n \n   private ExceptionFactory() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
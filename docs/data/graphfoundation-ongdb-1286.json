{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1286",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1286/DiagnosticsBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1286/DiagnosticsBean.java\nindex eb0983c544f..e4255d523e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1286/DiagnosticsBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1286/DiagnosticsBean.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management.impl;\n \n import java.io.StringWriter;\n@@ -37,74 +38,74 @@ import org.neo4j.kernel.info.DiagnosticsProvider;\n import org.neo4j.logging.FormattedLog;\n import org.neo4j.management.Diagnostics;\n \n-@Service.Implementation( ManagementBeanProvider.class )\n+@Service.Implementation(ManagementBeanProvider.class)\n public class DiagnosticsBean extends ManagementBeanProvider\n {\n-    public DiagnosticsBean()\n+  public DiagnosticsBean()\n+  {\n+    super(Diagnostics.class);\n+  }\n+\n+  @Override\n+  protected Neo4jMBean createMBean(ManagementData management) throws NotCompliantMBeanException\n+  {\n+    return new DiagnosticsImpl(management);\n+  }\n+\n+  private static class DiagnosticsImpl extends Neo4jMBean implements Diagnostics\n+  {\n+    private final DiagnosticsManager diagnostics;\n+    private Config config;\n+\n+    DiagnosticsImpl(ManagementData management) throws NotCompliantMBeanException\n     {\n-        super( Diagnostics.class );\n+      super(management);\n+      DependencyResolver resolver = management.getKernelData().graphDatabase().getDependencyResolver();\n+      config = resolver.resolveDependency(Config.class);\n+      this.diagnostics = resolver.resolveDependency(DiagnosticsManager.class);\n     }\n \n     @Override\n-    protected Neo4jMBean createMBean( ManagementData management ) throws NotCompliantMBeanException\n+    public void dumpToLog()\n     {\n-        return new DiagnosticsImpl( management );\n+      diagnostics.dumpAll();\n     }\n \n-    private static class DiagnosticsImpl extends Neo4jMBean implements Diagnostics\n+    @Override\n+    public List<String> getDiagnosticsProviders()\n     {\n-        private final DiagnosticsManager diagnostics;\n-        private Config config;\n-\n-        DiagnosticsImpl( ManagementData management ) throws NotCompliantMBeanException\n-        {\n-            super( management );\n-            DependencyResolver resolver = management.getKernelData().graphDatabase().getDependencyResolver();\n-            config = resolver.resolveDependency( Config.class );\n-            this.diagnostics = resolver.resolveDependency( DiagnosticsManager.class );\n-        }\n-\n-        @Override\n-        public void dumpToLog()\n-        {\n-            diagnostics.dumpAll();\n-        }\n-\n-        @Override\n-        public List<String> getDiagnosticsProviders()\n-        {\n-            List<String> result = new ArrayList<>();\n-            for ( DiagnosticsProvider provider : diagnostics )\n-            {\n-                result.add( provider.getDiagnosticsIdentifier() );\n-            }\n-            return result;\n-        }\n+      List<String> result = new ArrayList<>();\n+      for (DiagnosticsProvider provider : diagnostics)\n+      {\n+        result.add(provider.getDiagnosticsIdentifier());\n+      }\n+      return result;\n+    }\n \n-        @Override\n-        public void dumpToLog( String providerId )\n-        {\n-            diagnostics.dump( providerId );\n-        }\n+    @Override\n+    public void dumpToLog(String providerId)\n+    {\n+      diagnostics.dump(providerId);\n+    }\n \n-        @Override\n-        public String dumpAll(  )\n-        {\n-            StringWriter stringWriter = new StringWriter();\n-            ZoneId zoneId = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n-            FormattedLog.Builder logBuilder = FormattedLog.withZoneId( zoneId );\n-            diagnostics.dumpAll( logBuilder.toWriter( stringWriter ) );\n-            return stringWriter.toString();\n-        }\n+    @Override\n+    public String dumpAll()\n+    {\n+      StringWriter stringWriter = new StringWriter();\n+      ZoneId zoneId = config.get(GraphDatabaseSettings.db_timezone).getZoneId();\n+      FormattedLog.Builder logBuilder = FormattedLog.withZoneId(zoneId);\n+      diagnostics.dumpAll(logBuilder.toWriter(stringWriter));\n+      return stringWriter.toString();\n+    }\n \n-        @Override\n-        public String extract( String providerId )\n-        {\n-            StringWriter stringWriter = new StringWriter();\n-            ZoneId zoneId = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n-            FormattedLog.Builder logBuilder = FormattedLog.withZoneId( zoneId );\n-            diagnostics.extract( providerId, logBuilder.toWriter( stringWriter ) );\n-            return stringWriter.toString();\n-        }\n+    @Override\n+    public String extract(String providerId)\n+    {\n+      StringWriter stringWriter = new StringWriter();\n+      ZoneId zoneId = config.get(GraphDatabaseSettings.db_timezone).getZoneId();\n+      FormattedLog.Builder logBuilder = FormattedLog.withZoneId(zoneId);\n+      diagnostics.extract(providerId, logBuilder.toWriter(stringWriter));\n+      return stringWriter.toString();\n     }\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1286/DiagnosticsBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1286/DiagnosticsBean.java\nindex eb0983c544f..424c986ef4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1286/DiagnosticsBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1286/DiagnosticsBean.java\n@@ -78,7 +78,8 @@ public class DiagnosticsBean extends ManagementBeanProvider\n             {\n                 result.add( provider.getDiagnosticsIdentifier() );\n             }\n-            return result;\n+\n+return result;\n         }\n \n         @Override\n@@ -88,7 +89,7 @@ public class DiagnosticsBean extends ManagementBeanProvider\n         }\n \n         @Override\n-        public String dumpAll(  )\n+        public String dumpAll()\n         {\n             StringWriter stringWriter = new StringWriter();\n             ZoneId zoneId = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n@@ -107,4 +108,4 @@ public class DiagnosticsBean extends ManagementBeanProvider\n             return stringWriter.toString();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public Closure<T> rehydrate(Object delegate, Object owner, Object thisObject) {\n    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject), type);\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/122/JavaTypedClosure.java\nindex 5ef0df344ed..cbbbd48be3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/122/JavaTypedClosure.java\n@@ -36,7 +36,8 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> rehydrate(Object delegate, Object owner, Object thisObject) {\n-    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject), type);\n+    return new JavaTypedClosure<\n+  >(this.delegate.rehydrate(delegate, owner, thisObject), type);\n   }\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/122/JavaTypedClosure.java\nindex 5ef0df344ed..40785c0f485 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/122/JavaTypedClosure.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.tools.groovy;\n \n import groovy.lang.Closure;\n@@ -26,7 +27,8 @@ public class JavaTypedClosure<T> extends Closure<T> {\n   }\n \n   final Closure<T> delegate;\n-  @Getter final Class<? extends T> type;\n+  @Getter\n+  final Class<? extends T> type;\n \n   JavaTypedClosure(Closure<T> delegate, Class<? extends T> type) {\n     super(delegate.getOwner(), delegate.getThisObject());\n@@ -36,7 +38,8 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> rehydrate(Object delegate, Object owner, Object thisObject) {\n-    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject), type);\n+    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject),\n+        type);\n   }\n \n   @Override\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/122/JavaTypedClosure.java\nindex 5ef0df344ed..f1ee6ed5635 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/122/JavaTypedClosure.java\n@@ -71,8 +71,7 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> memoizeBetween(int protectedCacheSize, int maxCacheSize) {\n-    return new JavaTypedClosure<>(\n-        this.delegate.memoizeBetween(protectedCacheSize, maxCacheSize), type);\n+    return new JavaTypedClosure<>(this.delegate.memoizeBetween(protectedCacheSize, maxCacheSize), type);\n   }\n \n   @Override\n@@ -214,4 +213,4 @@ public class JavaTypedClosure<T> extends Closure<T> {\n   public void setResolveStrategy(int resolveStrategy) {\n     this.delegate.setResolveStrategy(resolveStrategy);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/122/JavaTypedClosure.java\nindex 5ef0df344ed..a2713bc03cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/122/JavaTypedClosure.java\n@@ -19,6 +19,8 @@ import groovy.lang.Closure;\n import lombok.Getter;\n \n /** A {@link Closure} that was created from java and is aware of its return type. */\n+\n+\n public class JavaTypedClosure<T> extends Closure<T> {\n \n   static <T> Closure<T> wrap(Closure<T> w, Class<? extends T> cls) {\n@@ -26,6 +28,7 @@ public class JavaTypedClosure<T> extends Closure<T> {\n   }\n \n   final Closure<T> delegate;\n+\n   @Getter final Class<? extends T> type;\n \n   JavaTypedClosure(Closure<T> delegate, Class<? extends T> type) {\n@@ -71,8 +74,7 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> memoizeBetween(int protectedCacheSize, int maxCacheSize) {\n-    return new JavaTypedClosure<>(\n-        this.delegate.memoizeBetween(protectedCacheSize, maxCacheSize), type);\n+    return new JavaTypedClosure<>(this.delegate.memoizeBetween(protectedCacheSize, maxCacheSize), type);\n   }\n \n   @Override\n@@ -214,4 +216,4 @@ public class JavaTypedClosure<T> extends Closure<T> {\n   public void setResolveStrategy(int resolveStrategy) {\n     this.delegate.setResolveStrategy(resolveStrategy);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/122/JavaTypedClosure.java\nindex 5ef0df344ed..cbbbd48be3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/122/JavaTypedClosure.java\n@@ -36,7 +36,8 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> rehydrate(Object delegate, Object owner, Object thisObject) {\n-    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject), type);\n+    return new JavaTypedClosure<\n+  >(this.delegate.rehydrate(delegate, owner, thisObject), type);\n   }\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "column": "95",
                    "severity": "error",
                    "message": "'}' at column 95 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "39",
                    "column": "96",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/122/JavaTypedClosure.java\nindex 5ef0df344ed..e2a8036068f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/122/JavaTypedClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/122/JavaTypedClosure.java\n@@ -36,10 +36,7 @@ public class JavaTypedClosure<T> extends Closure<T> {\n \n   @Override\n   public Closure<T> rehydrate(Object delegate, Object owner, Object thisObject) {\n-    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner, thisObject), type);\n-  }\n-\n-  @Override\n+    return new JavaTypedClosure<>(this.delegate.rehydrate(delegate, owner,thisObject),type ); }@Override\n   public Closure<T> dehydrate() {\n     return new JavaTypedClosure<>(this.delegate.dehydrate(), type);\n   }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
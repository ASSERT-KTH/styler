{
    "project_name": "graphfoundation-ongdb",
    "error_id": "610",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/610/Input.java\nindex d6b9b894cb9..c825950857a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/610/Input.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -36,83 +37,83 @@ import org.neo4j.values.storable.Value;\n  */\n public interface Input\n {\n-    interface Estimates\n-    {\n-        /**\n-         * @return estimated number of nodes for the entire input.\n-         */\n-        long numberOfNodes();\n-\n-        /**\n-         * @return estimated number of relationships for the entire input.\n-         */\n-        long numberOfRelationships();\n-\n-        /**\n-         * @return estimated number of node properties.\n-         */\n-        long numberOfNodeProperties();\n-\n-        /**\n-         * @return estimated number of relationship properties.\n-         */\n-        long numberOfRelationshipProperties();\n-\n-        /**\n-         * @return estimated size that the estimated number of node properties will require on disk.\n-         * This is a separate estimate since it depends on the type and size of the actual properties.\n-         */\n-        long sizeOfNodeProperties();\n-\n-        /**\n-         * @return estimated size that the estimated number of relationship properties will require on disk.\n-         * This is a separate estimate since it depends on the type and size of the actual properties.\n-         */\n-        long sizeOfRelationshipProperties();\n+  interface Estimates\n+  {\n+    /**\n+     * @return estimated number of nodes for the entire input.\n+     */\n+    long numberOfNodes();\n \n-        /**\n-         * @return estimated number of node labels. Examples:\n-         * <ul>\n-         * <li>2 nodes, 1 label each ==> 2</li>\n-         * <li>1 node, 2 labels each ==> 2</li>\n-         * <li>2 nodes, 2 labels each ==> 4</li>\n-         * </ul>\n-         */\n-        long numberOfNodeLabels();\n-    }\n+    /**\n+     * @return estimated number of relationships for the entire input.\n+     */\n+    long numberOfRelationships();\n \n     /**\n-     * Provides all node data for an import.\n-     *\n-     * @return an {@link InputIterator} which will provide all node data for the whole import.\n+     * @return estimated number of node properties.\n      */\n-    InputIterable nodes();\n+    long numberOfNodeProperties();\n \n     /**\n-     * Provides all relationship data for an import.\n-     *\n-     * @return an {@link InputIterator} which will provide all relationship data for the whole import.\n+     * @return estimated number of relationship properties.\n      */\n-    InputIterable relationships();\n+    long numberOfRelationshipProperties();\n \n     /**\n-     * @return {@link IdMapper} which will get populated by {@link NodeImporter}\n-     * and later queried by {@link RelationshipImporter}\n-     * to resolve potentially temporary input node ids to actual node ids in the database.\n-     * @param numberArrayFactory The factory for creating data-structures to use for caching internally in the IdMapper.\n+     * @return estimated size that the estimated number of node properties will require on disk.\n+     * This is a separate estimate since it depends on the type and size of the actual properties.\n      */\n-    IdMapper idMapper( NumberArrayFactory numberArrayFactory );\n+    long sizeOfNodeProperties();\n \n     /**\n-     * @return a {@link Collector} capable of writing bad relationships\n-     * and duplicate nodes to an output stream for later handling.\n+     * @return estimated size that the estimated number of relationship properties will require on disk.\n+     * This is a separate estimate since it depends on the type and size of the actual properties.\n      */\n-    Collector badCollector();\n+    long sizeOfRelationshipProperties();\n \n     /**\n-     * @param valueSizeCalculator for calculating property sizes on disk.\n-     * @return {@link Estimates} for this input w/o reading through it entirely.\n-     * @throws IOException on I/O error.\n+     * @return estimated number of node labels. Examples:\n+     * <ul>\n+     * <li>2 nodes, 1 label each ==> 2</li>\n+     * <li>1 node, 2 labels each ==> 2</li>\n+     * <li>2 nodes, 2 labels each ==> 4</li>\n+     * </ul>\n      */\n-    Estimates calculateEstimates( ToIntFunction<Value[]> valueSizeCalculator ) throws IOException;\n+    long numberOfNodeLabels();\n+  }\n+\n+  /**\n+   * Provides all node data for an import.\n+   *\n+   * @return an {@link InputIterator} which will provide all node data for the whole import.\n+   */\n+  InputIterable nodes();\n+\n+  /**\n+   * Provides all relationship data for an import.\n+   *\n+   * @return an {@link InputIterator} which will provide all relationship data for the whole import.\n+   */\n+  InputIterable relationships();\n+\n+  /**\n+   * @param numberArrayFactory The factory for creating data-structures to use for caching internally in the IdMapper.\n+   * @return {@link IdMapper} which will get populated by {@link NodeImporter}\n+   * and later queried by {@link RelationshipImporter}\n+   * to resolve potentially temporary input node ids to actual node ids in the database.\n+   */\n+  IdMapper idMapper(NumberArrayFactory numberArrayFactory);\n+\n+  /**\n+   * @return a {@link Collector} capable of writing bad relationships\n+   * and duplicate nodes to an output stream for later handling.\n+   */\n+  Collector badCollector();\n+\n+  /**\n+   * @param valueSizeCalculator for calculating property sizes on disk.\n+   * @return {@link Estimates} for this input w/o reading through it entirely.\n+   * @throws IOException on I/O error.\n+   */\n+  Estimates calculateEstimates(ToIntFunction<Value[]> valueSizeCalculator) throws IOException;\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/610/Input.java\nindex d6b9b894cb9..9294e3942fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/610/Input.java\n@@ -115,4 +115,4 @@ public interface Input\n      * @throws IOException on I/O error.\n      */\n     Estimates calculateEstimates( ToIntFunction<Value[]> valueSizeCalculator ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 285).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 516).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 755).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,024).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,372).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,741).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,899).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/610/Input.java\nindex d6b9b894cb9..9d4a3ba0c0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/610/Input.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/610/Input.java\n@@ -21,7 +21,6 @@ package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n import java.util.function.ToIntFunction;\n-\n import org.neo4j.unsafe.impl.batchimport.BatchImporter;\n import org.neo4j.unsafe.impl.batchimport.InputIterable;\n import org.neo4j.unsafe.impl.batchimport.InputIterator;\n@@ -34,6 +33,7 @@ import org.neo4j.values.storable.Value;\n /**\n  * Unifies all data input given to a {@link BatchImporter} to allow for more coherent implementations.\n  */\n+\n public interface Input\n {\n     interface Estimates\n@@ -41,34 +41,35 @@ public interface Input\n         /**\n          * @return estimated number of nodes for the entire input.\n          */\n-        long numberOfNodes();\n+        long numberOfNodes()\n+        ;\n \n         /**\n          * @return estimated number of relationships for the entire input.\n-         */\n-        long numberOfRelationships();\n+         */ long numberOfRelationships()\n+                                                                                                              ;\n \n         /**\n          * @return estimated number of node properties.\n-         */\n-        long numberOfNodeProperties();\n+         */ long numberOfNodeProperties()\n+                                                                                                                                                                                                 ;\n \n         /**\n          * @return estimated number of relationship properties.\n-         */\n-        long numberOfRelationshipProperties();\n+         */ long numberOfRelationshipProperties()\n+                                                                                                                                                                                                                                                                                            ;\n \n         /**\n          * @return estimated size that the estimated number of node properties will require on disk.\n          * This is a separate estimate since it depends on the type and size of the actual properties.\n-         */\n-        long sizeOfNodeProperties();\n+         */ long sizeOfNodeProperties()\nn \n         /**\n          * @return estimated size that the estimated number of relationship properties will require on disk.\n          * This is a separate estimate since it depends on the type and size of the actual properties.\n-         */\n-        long sizeOfRelationshipProperties();\n+         */ long sizeOfRelationshipProperties()\nn \n         /**\n          * @return estimated number of node labels. Examples:\n@@ -77,42 +78,40 @@ public interface Input\n          * <li>1 node, 2 labels each ==> 2</li>\n          * <li>2 nodes, 2 labels each ==> 4</li>\n          * </ul>\n-         */\n-        long numberOfNodeLabels();\n-    }\n+         */ long numberOfNodeLabels()\n}\n \n     /**\n      * Provides all node data for an import.\n      *\n      * @return an {@link InputIterator} which will provide all node data for the whole import.\n-     */\n-    InputIterable nodes();\n+     */ InputIterable nodes()\nn \n     /**\n      * Provides all relationship data for an import.\n      *\n      * @return an {@link InputIterator} which will provide all relationship data for the whole import.\n-     */\n-    InputIterable relationships();\n+     */ InputIterable relationships()\nn \n     /**\n      * @return {@link IdMapper} which will get populated by {@link NodeImporter}\n      * and later queried by {@link RelationshipImporter}\n      * to resolve potentially temporary input node ids to actual node ids in the database.\n      * @param numberArrayFactory The factory for creating data-structures to use for caching internally in the IdMapper.\n-     */\n-    IdMapper idMapper( NumberArrayFactory numberArrayFactory );\n+     */ IdMapper idMapper( NumberArrayFactory numberArrayFactory )\nn \n     /**\n      * @return a {@link Collector} capable of writing bad relationships\n      * and duplicate nodes to an output stream for later handling.\n-     */\n-    Collector badCollector();\n+     */ Collector badCollector()\nn \n     /**\n      * @param valueSizeCalculator for calculating property sizes on disk.\n      * @return {@link Estimates} for this input w/o reading through it entirely.\n      * @throws IOException on I/O error.\n-     */\n-    Estimates calculateEstimates( ToIntFunction<Value[]> valueSizeCalculator ) throws IOException;\n-}\n+     */ Estimates calculateEstimates( ToIntFunction<Value[]> valueSizeCalculator ) throws IOException ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
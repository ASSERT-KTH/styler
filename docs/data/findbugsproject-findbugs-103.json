{
    "project_name": "findbugsproject-findbugs",
    "error_id": "103",
    "information": {
        "errors": [
            {
                "line": "15",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n\n\tMyReporter(BugCollection bugs) {\n        this.bugs = bugs;\n    }\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/103/MyReporter.java\nindex a93050ee1ae..609f9e845ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/103/MyReporter.java\n@@ -10,9 +10,7 @@ import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n public class MyReporter extends TextUIBugReporter {\n     BugCollection bugs;\n-\n-\n-\tMyReporter(BugCollection bugs) {\n+    MyReporter(BugCollection bugs) {\n         this.bugs = bugs;\n     }\n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/103/MyReporter.java\nindex a93050ee1ae..355d9348c91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/103/MyReporter.java\n@@ -1,4 +1,5 @@\n package edu.umd.cs.findbugs.bluej;\n+\n import org.apache.bcel.classfile.JavaClass;\n \n import edu.umd.cs.findbugs.BugCollection;\n@@ -12,38 +13,42 @@ public class MyReporter extends TextUIBugReporter {\n     BugCollection bugs;\n \n \n-\tMyReporter(BugCollection bugs) {\n+    MyReporter(BugCollection bugs) {\n         this.bugs = bugs;\n     }\n+\n     @Override\n-\tprotected void doReportBug(BugInstance bugInstance) {\n+    protected void doReportBug(BugInstance bugInstance) {\n         BugPattern bugPattern = bugInstance.getBugPattern();\n         if (bugPattern.getCategory().equals(\"CORRECTNESS\")\n-                && ! bugPattern.getType().startsWith(\"DE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"HE_\")\n-                && ! bugPattern.getType().startsWith(\"SE_\")\n-            )\n+            && !bugPattern.getType().startsWith(\"DE_\")\n+            && !bugPattern.getType().startsWith(\"HE_\")\n+            && !bugPattern.getType().startsWith(\"SE_\")\n+        ) {\n             bugs.add(bugInstance);\n-\t\t\n+        }\n+\n     }\n \n     public void finish() {\n         // TODO Auto-generated method stub\n \n-\t}\n+    }\n \n     public void observeClass(JavaClass javaClass) {\n         // TODO Auto-generated method stub\n \n-\t}\n+    }\n+\n     public void observeClass(ClassDescriptor classDescriptor) {\n         // TODO Auto-generated method stub\n \n-\t}\n+    }\n+\n     @Override\n     public BugCollection getBugCollection() {\n         return bugs;\n-\t}\n+    }\n \n \n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/103/MyReporter.java\nindex a93050ee1ae..f1691ad3a11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/103/MyReporter.java\n@@ -1,49 +1,41 @@\n package edu.umd.cs.findbugs.bluej;\n-import org.apache.bcel.classfile.JavaClass;\n \n+import org.apache.bcel.classfile.JavaClass;\n import edu.umd.cs.findbugs.BugCollection;\n import edu.umd.cs.findbugs.BugInstance;\n import edu.umd.cs.findbugs.BugPattern;\n import edu.umd.cs.findbugs.TextUIBugReporter;\n import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n-\n public class MyReporter extends TextUIBugReporter {\n     BugCollection bugs;\n \n-\n-\tMyReporter(BugCollection bugs) {\n+    MyReporter(BugCollection bugs) {\n         this.bugs = bugs;\n     }\n+\n     @Override\n-\tprotected void doReportBug(BugInstance bugInstance) {\n+    protected void doReportBug(BugInstance bugInstance) {\n         BugPattern bugPattern = bugInstance.getBugPattern();\n-        if (bugPattern.getCategory().equals(\"CORRECTNESS\")\n-                && ! bugPattern.getType().startsWith(\"DE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"HE_\")\n-                && ! bugPattern.getType().startsWith(\"SE_\")\n-            )\n+        if (bugPattern.getCategory().equals(\"CORRECTNESS\") && !bugPattern.getType().startsWith(\"DE_\")\n+           && !bugPattern.getType().startsWith(\"HE_\") && !bugPattern.getType().startsWith(\"SE_\"))\n             bugs.add(bugInstance);\n-\t\t\n     }\n \n     public void finish() {\n         // TODO Auto-generated method stub\n-\n-\t}\n+    }\n \n     public void observeClass(JavaClass javaClass) {\n         // TODO Auto-generated method stub\n+    }\n \n-\t}\n     public void observeClass(ClassDescriptor classDescriptor) {\n         // TODO Auto-generated method stub\n+    }\n \n-\t}\n     @Override\n     public BugCollection getBugCollection() {\n         return bugs;\n-\t}\n-\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/103/MyReporter.java\nindex a93050ee1ae..609f9e845ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/103/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/103/MyReporter.java\n@@ -10,9 +10,7 @@ import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n public class MyReporter extends TextUIBugReporter {\n     BugCollection bugs;\n-\n-\n-\tMyReporter(BugCollection bugs) {\n+    MyReporter(BugCollection bugs) {\n         this.bugs = bugs;\n     }\n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
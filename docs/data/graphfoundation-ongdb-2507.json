{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2507",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "187",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2507/FilterConfigParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2507/FilterConfigParser.java\nindex 7d3e7a6f69e..166d54269e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2507/FilterConfigParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2507/FilterConfigParser.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.load_balancing.plugins.server_policies;\n \n import java.util.ArrayList;\n@@ -35,188 +36,184 @@ import static java.util.Collections.singletonList;\n \n public class FilterConfigParser\n {\n-    private FilterConfigParser()\n-    {\n-    }\n+  private FilterConfigParser()\n+  {\n+  }\n \n-    private static Filter<ServerInfo> filterFor( String filterName, String[] args ) throws InvalidFilterSpecification\n+  private static Filter<ServerInfo> filterFor(String filterName, String[] args) throws InvalidFilterSpecification\n+  {\n+    switch (filterName)\n     {\n-        switch ( filterName )\n+      case \"groups\":\n+        if (args.length < 1)\n+        {\n+          throw new InvalidFilterSpecification(\n+              format(\"Invalid number of arguments for filter '%s': %d\", filterName, args.length));\n+        }\n+        for (String group : args)\n+        {\n+          if (group.matches(\"\\\\W\"))\n+          {\n+            throw new InvalidFilterSpecification(\n+                format(\"Invalid group for filter '%s': '%s'\", filterName, group));\n+          }\n+        }\n+        return new AnyGroupFilter(args);\n+      case \"min\":\n+        if (args.length != 1)\n+        {\n+          throw new InvalidFilterSpecification(\n+              format(\"Invalid number of arguments for filter '%s': %d\", filterName, args.length));\n+        }\n+        int minCount;\n+        try\n+        {\n+          minCount = Integer.parseInt(args[0]);\n+        } catch (NumberFormatException e)\n         {\n-        case \"groups\":\n-            if ( args.length < 1 )\n-            {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n-            }\n-            for ( String group : args )\n-            {\n-                if ( group.matches( \"\\\\W\" ) )\n-                {\n-                    throw new InvalidFilterSpecification(\n-                            format( \"Invalid group for filter '%s': '%s'\", filterName, group ) );\n-                }\n-            }\n-            return new AnyGroupFilter( args );\n-        case \"min\":\n-            if ( args.length != 1 )\n-            {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n-            }\n-            int minCount;\n-            try\n-            {\n-                minCount = Integer.parseInt( args[0] );\n-            }\n-            catch ( NumberFormatException e )\n-            {\n-                throw new InvalidFilterSpecification( format( \"Invalid argument for filter '%s': '%s'\", filterName, args[0] ), e );\n-            }\n-            return new MinimumCountFilter<>( minCount );\n-        case \"all\":\n-            if ( args.length != 0 )\n-            {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n-            }\n-            return IdentityFilter.as();\n-        case \"halt\":\n-            if ( args.length != 0 )\n-            {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n-            }\n-            return HaltFilter.INSTANCE;\n-        default:\n-            throw new InvalidFilterSpecification( \"Unknown filter: \" + filterName );\n+          throw new InvalidFilterSpecification(format(\"Invalid argument for filter '%s': '%s'\", filterName, args[0]), e);\n         }\n+        return new MinimumCountFilter<>(minCount);\n+      case \"all\":\n+        if (args.length != 0)\n+        {\n+          throw new InvalidFilterSpecification(\n+              format(\"Invalid number of arguments for filter '%s': %d\", filterName, args.length));\n+        }\n+        return IdentityFilter.as();\n+      case \"halt\":\n+        if (args.length != 0)\n+        {\n+          throw new InvalidFilterSpecification(\n+              format(\"Invalid number of arguments for filter '%s': %d\", filterName, args.length));\n+        }\n+        return HaltFilter.INSTANCE;\n+      default:\n+        throw new InvalidFilterSpecification(\"Unknown filter: \" + filterName);\n+    }\n+  }\n+\n+  public static Filter<ServerInfo> parse(String filterConfig) throws InvalidFilterSpecification\n+  {\n+    if (filterConfig.length() == 0)\n+    {\n+      throw new InvalidFilterSpecification(\"Filter config is empty\");\n+    }\n+\n+    List<FilterChain<ServerInfo>> rules = new ArrayList<>();\n+    String[] ruleSpecs = filterConfig.split(\";\");\n+\n+    if (ruleSpecs.length == 0)\n+    {\n+      throw new InvalidFilterSpecification(\"No rules specified\");\n     }\n \n-    public static Filter<ServerInfo> parse( String filterConfig ) throws InvalidFilterSpecification\n+    boolean haltFilterEncountered = false;\n+    for (String ruleSpec : ruleSpecs)\n     {\n-        if ( filterConfig.length() == 0 )\n+      ruleSpec = ruleSpec.trim();\n+\n+      List<Filter<ServerInfo>> filterChain = new ArrayList<>();\n+      String[] filterSpecs = ruleSpec.split(\"->\");\n+      boolean allFilterEncountered = false;\n+      for (String filterSpec : filterSpecs)\n+      {\n+        filterSpec = filterSpec.trim();\n+\n+        String namePart;\n+        String argsPart;\n+        {\n+          String[] nameAndArgs = filterSpec.split(\"\\\\(\", 0);\n+\n+          if (nameAndArgs.length != 2)\n+          {\n+            throw new InvalidFilterSpecification(format(\"Syntax error filter specification: '%s'\", filterSpec));\n+          }\n+\n+          namePart = nameAndArgs[0].trim();\n+          argsPart = nameAndArgs[1].trim();\n+        }\n+\n+        if (!argsPart.endsWith(\")\"))\n+        {\n+          throw new InvalidFilterSpecification(format(\"No closing parenthesis: '%s'\", filterSpec));\n+        }\n+        argsPart = argsPart.substring(0, argsPart.length() - 1);\n+\n+        String filterName = namePart.trim();\n+        if (!filterName.matches(\"\\\\w+\"))\n         {\n-            throw new InvalidFilterSpecification( \"Filter config is empty\" );\n+          throw new InvalidFilterSpecification(format(\"Syntax error filter name: '%s'\", filterName));\n         }\n \n-        List<FilterChain<ServerInfo>> rules = new ArrayList<>();\n-        String[] ruleSpecs = filterConfig.split( \";\" );\n+        String[] nonEmptyArgs = Arrays.stream(\n+            argsPart.split(\",\"))\n+            .map(String::trim)\n+            .filter(s -> !s.isEmpty())\n+            .collect(Collectors.toList())\n+            .toArray(new String[0]);\n \n-        if ( ruleSpecs.length == 0 )\n+        for (String arg : nonEmptyArgs)\n         {\n-            throw new InvalidFilterSpecification( \"No rules specified\" );\n+          if (!arg.matches(\"[\\\\w-]+\"))\n+          {\n+            throw new InvalidFilterSpecification(format(\"Syntax error argument: '%s'\", arg));\n+          }\n         }\n \n-        boolean haltFilterEncountered = false;\n-        for ( String ruleSpec : ruleSpecs )\n+        if (haltFilterEncountered)\n         {\n-            ruleSpec = ruleSpec.trim();\n-\n-            List<Filter<ServerInfo>> filterChain = new ArrayList<>();\n-            String[] filterSpecs = ruleSpec.split( \"->\" );\n-            boolean allFilterEncountered = false;\n-            for ( String filterSpec : filterSpecs )\n-            {\n-                filterSpec = filterSpec.trim();\n-\n-                String namePart;\n-                String argsPart;\n-                {\n-                    String[] nameAndArgs = filterSpec.split( \"\\\\(\", 0 );\n-\n-                    if ( nameAndArgs.length != 2 )\n-                    {\n-                        throw new InvalidFilterSpecification( format( \"Syntax error filter specification: '%s'\", filterSpec ) );\n-                    }\n-\n-                    namePart = nameAndArgs[0].trim();\n-                    argsPart = nameAndArgs[1].trim();\n-                }\n-\n-                if ( !argsPart.endsWith( \")\" ) )\n-                {\n-                    throw new InvalidFilterSpecification( format( \"No closing parenthesis: '%s'\", filterSpec ) );\n-                }\n-                argsPart = argsPart.substring( 0, argsPart.length() - 1 );\n-\n-                String filterName = namePart.trim();\n-                if ( !filterName.matches( \"\\\\w+\" ) )\n-                {\n-                    throw new InvalidFilterSpecification( format( \"Syntax error filter name: '%s'\", filterName ) );\n-                }\n-\n-                String[] nonEmptyArgs = Arrays.stream(\n-                        argsPart.split( \",\" ) )\n-                        .map( String::trim )\n-                        .filter( s -> !s.isEmpty() )\n-                        .collect( Collectors.toList() )\n-                        .toArray( new String[0] );\n-\n-                for ( String arg : nonEmptyArgs )\n-                {\n-                    if ( !arg.matches( \"[\\\\w-]+\" ) )\n-                    {\n-                        throw new InvalidFilterSpecification( format( \"Syntax error argument: '%s'\", arg ) );\n-                    }\n-                }\n-\n-                if ( haltFilterEncountered )\n-                {\n-                    if ( filterChain.size() > 0 )\n-                    {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'halt' may not be followed by other filters: '%s'\", ruleSpec ) );\n-                    }\n-                    else\n-                    {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Rule 'halt' may not followed by other rules: '%s'\", filterConfig ) );\n-                    }\n-                }\n-\n-                Filter<ServerInfo> filter = filterFor( filterName, nonEmptyArgs );\n-\n-                if ( filter == HaltFilter.INSTANCE )\n-                {\n-                    if ( filterChain.size() != 0 )\n-                    {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'halt' must be the only filter in a rule: '%s'\", ruleSpec ) );\n-                    }\n-                    haltFilterEncountered = true;\n-                }\n-                else if ( filter == IdentityFilter.INSTANCE )\n-                {\n-                    /* The all() filter is implicit and unnecessary, but still allowed in the beginning of a rule for clarity\n-                     * and for allowing the actual rule consisting of only all() to be specified. */\n-\n-                    if ( allFilterEncountered || filterChain.size() != 0 )\n-                    {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'all' is implicit but allowed only first in a rule: '%s'\", ruleSpec ) );\n-                    }\n-\n-                    allFilterEncountered = true;\n-                }\n-                else\n-                {\n-                    filterChain.add( filter );\n-                }\n-            }\n-\n-            if ( filterChain.size() > 0 )\n-            {\n-                rules.add( new FilterChain<>( filterChain ) );\n-            }\n+          if (filterChain.size() > 0)\n+          {\n+            throw new InvalidFilterSpecification(\n+                format(\"Filter 'halt' may not be followed by other filters: '%s'\", ruleSpec));\n+          } else\n+          {\n+            throw new InvalidFilterSpecification(\n+                format(\"Rule 'halt' may not followed by other rules: '%s'\", filterConfig));\n+          }\n         }\n \n-        if ( !haltFilterEncountered )\n+        Filter<ServerInfo> filter = filterFor(filterName, nonEmptyArgs);\n+\n+        if (filter == HaltFilter.INSTANCE)\n+        {\n+          if (filterChain.size() != 0)\n+          {\n+            throw new InvalidFilterSpecification(\n+                format(\"Filter 'halt' must be the only filter in a rule: '%s'\", ruleSpec));\n+          }\n+          haltFilterEncountered = true;\n+        } else if (filter == IdentityFilter.INSTANCE)\n+        {\n+          /* The all() filter is implicit and unnecessary, but still allowed in the beginning of a rule for clarity\n+           * and for allowing the actual rule consisting of only all() to be specified. */\n+\n+          if (allFilterEncountered || filterChain.size() != 0)\n+          {\n+            throw new InvalidFilterSpecification(\n+                format(\"Filter 'all' is implicit but allowed only first in a rule: '%s'\", ruleSpec));\n+          }\n+\n+          allFilterEncountered = true;\n+        } else\n         {\n-            /* we implicitly add the all() rule to the end if there was no explicit halt() */\n-            rules.add( new FilterChain<>( singletonList( IdentityFilter.as() ) ) );\n+          filterChain.add(filter);\n         }\n+      }\n \n-        return new FirstValidRule<>( rules );\n+      if (filterChain.size() > 0)\n+      {\n+        rules.add(new FilterChain<>(filterChain));\n+      }\n     }\n+\n+    if (!haltFilterEncountered)\n+    {\n+      /* we implicitly add the all() rule to the end if there was no explicit halt() */\n+      rules.add(new FilterChain<>(singletonList(IdentityFilter.as())));\n+    }\n+\n+    return new FirstValidRule<>(rules);\n+  }\n }\n",
            "diff_size": 297
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2507/FilterConfigParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2507/FilterConfigParser.java\nindex 7d3e7a6f69e..0d479a741d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2507/FilterConfigParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2507/FilterConfigParser.java\n@@ -46,23 +46,20 @@ public class FilterConfigParser\n         case \"groups\":\n             if ( args.length < 1 )\n             {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n+                throw new InvalidFilterSpecification( format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n             }\n             for ( String group : args )\n             {\n                 if ( group.matches( \"\\\\W\" ) )\n                 {\n-                    throw new InvalidFilterSpecification(\n-                            format( \"Invalid group for filter '%s': '%s'\", filterName, group ) );\n-                }\n+                    throw new InvalidFilterSpecification( format( \"Invalid group for filter '%s': '%s'\", filterName, group ) );\n+    }\n             }\n             return new AnyGroupFilter( args );\n         case \"min\":\n             if ( args.length != 1 )\n             {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n+                throw new InvalidFilterSpecification( format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n             }\n             int minCount;\n             try\n@@ -77,17 +74,17 @@ public class FilterConfigParser\n         case \"all\":\n             if ( args.length != 0 )\n             {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n+                throw new InvalidFilterSpecification( format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n             }\n-            return IdentityFilter.as();\n+\n+return IdentityFilter.as();\n         case \"halt\":\n             if ( args.length != 0 )\n             {\n-                throw new InvalidFilterSpecification(\n-                        format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n+                throw new InvalidFilterSpecification( format( \"Invalid number of arguments for filter '%s': %d\", filterName, args.length ) );\n             }\n-            return HaltFilter.INSTANCE;\n+\n+return HaltFilter.INSTANCE;\n         default:\n             throw new InvalidFilterSpecification( \"Unknown filter: \" + filterName );\n         }\n@@ -102,8 +99,7 @@ public class FilterConfigParser\n \n         List<FilterChain<ServerInfo>> rules = new ArrayList<>();\n         String[] ruleSpecs = filterConfig.split( \";\" );\n-\n-        if ( ruleSpecs.length == 0 )\n+if ( ruleSpecs.length == 0 )\n         {\n             throw new InvalidFilterSpecification( \"No rules specified\" );\n         }\n@@ -124,8 +120,7 @@ public class FilterConfigParser\n                 String argsPart;\n                 {\n                     String[] nameAndArgs = filterSpec.split( \"\\\\(\", 0 );\n-\n-                    if ( nameAndArgs.length != 2 )\n+if ( nameAndArgs.length != 2 )\n                     {\n                         throw new InvalidFilterSpecification( format( \"Syntax error filter specification: '%s'\", filterSpec ) );\n                     }\n@@ -138,22 +133,16 @@ public class FilterConfigParser\n                 {\n                     throw new InvalidFilterSpecification( format( \"No closing parenthesis: '%s'\", filterSpec ) );\n                 }\n-                argsPart = argsPart.substring( 0, argsPart.length() - 1 );\n \n-                String filterName = namePart.trim();\n+argsPart = argsPart.substring( 0, argsPart.length() - 1 );\n+String filterName = namePart.trim();\n                 if ( !filterName.matches( \"\\\\w+\" ) )\n                 {\n                     throw new InvalidFilterSpecification( format( \"Syntax error filter name: '%s'\", filterName ) );\n                 }\n \n-                String[] nonEmptyArgs = Arrays.stream(\n-                        argsPart.split( \",\" ) )\n-                        .map( String::trim )\n-                        .filter( s -> !s.isEmpty() )\n-                        .collect( Collectors.toList() )\n-                        .toArray( new String[0] );\n-\n-                for ( String arg : nonEmptyArgs )\n+                String[] nonEmptyArgs = Arrays.stream( argsPart.split( \",\" ) ).map( String::trim ).filter( s -> !s.isEmpty() ).collect( Collectors.toList() ).toArray( new String[0] );\n+for ( String arg : nonEmptyArgs )\n                 {\n                     if ( !arg.matches( \"[\\\\w-]+\" ) )\n                     {\n@@ -165,26 +154,23 @@ public class FilterConfigParser\n                 {\n                     if ( filterChain.size() > 0 )\n                     {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'halt' may not be followed by other filters: '%s'\", ruleSpec ) );\n+                        throw new InvalidFilterSpecification( format( \"Filter 'halt' may not be followed by other filters: '%s'\", ruleSpec ) );\n                     }\n                     else\n                     {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Rule 'halt' may not followed by other rules: '%s'\", filterConfig ) );\n-                    }\n+                        throw new InvalidFilterSpecification( format( \"Rule 'halt' may not followed by other rules: '%s'\", filterConfig ) );\n+    }\n                 }\n \n                 Filter<ServerInfo> filter = filterFor( filterName, nonEmptyArgs );\n-\n-                if ( filter == HaltFilter.INSTANCE )\n+if ( filter == HaltFilter.INSTANCE )\n                 {\n                     if ( filterChain.size() != 0 )\n                     {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'halt' must be the only filter in a rule: '%s'\", ruleSpec ) );\n+                        throw new InvalidFilterSpecification( format( \"Filter 'halt' must be the only filter in a rule: '%s'\", ruleSpec ) );\n                     }\n-                    haltFilterEncountered = true;\n+\n+haltFilterEncountered = true;\n                 }\n                 else if ( filter == IdentityFilter.INSTANCE )\n                 {\n@@ -193,8 +179,7 @@ public class FilterConfigParser\n \n                     if ( allFilterEncountered || filterChain.size() != 0 )\n                     {\n-                        throw new InvalidFilterSpecification(\n-                                format( \"Filter 'all' is implicit but allowed only first in a rule: '%s'\", ruleSpec ) );\n+                        throw new InvalidFilterSpecification( format( \"Filter 'all' is implicit but allowed only first in a rule: '%s'\", ruleSpec ) );\n                     }\n \n                     allFilterEncountered = true;\n@@ -219,4 +204,4 @@ public class FilterConfigParser\n \n         return new FirstValidRule<>( rules );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
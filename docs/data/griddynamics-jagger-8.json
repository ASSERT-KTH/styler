{
    "project_name": "griddynamics-jagger",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "99",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        JLoadTest jLoadTest =\n                JLoadTest.builder(Id.of(\"lt_user_scenario_example\"), jTestDefinition, jLoadProfileInvocations, jTerminationCriteria)\n                        .withLimits(avgLatencyLimit, stdDevLatencyLimit, minDevLatencyLimit, maxLatencyLimit, percentile99LatencyLimit, successRateLimit, errorsLimit)\n                        .build();\n\n        JParallelTestsGroup jParallelTestsGroup =",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/8/UserScenarioJLoadScenarioProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/8/UserScenarioJLoadScenarioProvider.java\nindex 95e54081db3..27eaa148394 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/8/UserScenarioJLoadScenarioProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/8/UserScenarioJLoadScenarioProvider.java\n@@ -1,4 +1,6 @@\n-package ${package}.user.scenario.example;\n+package $\n+\n+{package}.user.scenario.example;\n \n import com.griddynamics.jagger.invoker.scenario.JHttpUserScenarioInvocationListener;\n import com.griddynamics.jagger.invoker.scenario.JHttpUserScenarioInvokerProvider;\n@@ -96,7 +98,8 @@ public class UserScenarioJLoadScenarioProvider {\n \n         JLoadTest jLoadTest =\n                 JLoadTest.builder(Id.of(\"lt_user_scenario_example\"), jTestDefinition, jLoadProfileInvocations, jTerminationCriteria)\n-                        .withLimits(avgLatencyLimit, stdDevLatencyLimit, minDevLatencyLimit, maxLatencyLimit, percentile99LatencyLimit, successRateLimit, errorsLimit)\n+                        .withLimits(avgLatencyLimit, stdDevLatencyLimit, minDevLatencyLimit, maxLatencyLimit, percentile99LatencyLimit,\n+                                successRateLimit, errorsLimit)\n                         .build();\n \n         JParallelTestsGroup jParallelTestsGroup =\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
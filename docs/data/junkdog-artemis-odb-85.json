{
    "project_name": "junkdog-artemis-odb",
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 135).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tprivate final ClassReader source;\n\n\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n\t\t\tsuper(Opcodes.ASM5);\n\t\t\tthis.target = target;\n\t\t\tthis.meta = meta;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/85/MethodTransplantAdapter.java\nindex eada6a47292..3186351e31d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/85/MethodTransplantAdapter.java\n@@ -60,8 +60,9 @@ public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n \t\tprivate final String methodDesc;\n \t\tprivate final ClassReader source;\n \n-\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n-\t\t\tsuper(Opcodes.ASM5);\n+\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc,\n+\t\tClassVisitor target, ClassMetadata meta) {\n+\t\t\t\tsuper(Opcodes.ASM5);\n \t\t\tthis.target = target;\n \t\t\tthis.meta = meta;\n \t\t\tthis.method = method;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/85/MethodTransplantAdapter.java\nindex eada6a47292..58175943072 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/85/MethodTransplantAdapter.java\n@@ -2,85 +2,88 @@ package com.artemis.weaver.transplant;\n \n import com.artemis.meta.ClassMetadata;\n import com.artemis.weaver.WeaverException;\n+\n import org.objectweb.asm.*;\n \n import java.io.IOException;\n import java.io.InputStream;\n \n public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n-\tprotected final ClassReader source;\n-\tprotected final String method;\n-\tprotected final String methodDesc;\n-\tprotected final ClassMetadata meta;\n+    protected final ClassReader source;\n+    protected final String method;\n+    protected final String methodDesc;\n+    protected final ClassMetadata meta;\n \n-\tpublic MethodTransplantAdapter(ClassReader source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n-\t\tsuper(ASM5, target);\n-\t\tthis.source = source;\n-\t\tthis.method = method;\n-\t\tthis.methodDesc = methodDesc;\n-\t\tthis.meta = meta;\n-\t}\n+    public MethodTransplantAdapter(ClassReader source,\n+                                   String method,\n+                                   String methodDesc,\n+                                   ClassVisitor target,\n+                                   ClassMetadata meta) {\n+        super(ASM5, target);\n+        this.source = source;\n+        this.method = method;\n+        this.methodDesc = methodDesc;\n+        this.meta = meta;\n+    }\n \n-\tpublic MethodTransplantAdapter(Class<?> source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n+    public MethodTransplantAdapter(Class<?> source,\n+                                   String method,\n+                                   String methodDesc,\n+                                   ClassVisitor target,\n+                                   ClassMetadata meta) {\n \n-\t\tthis(toClassReader(source), method, methodDesc, target, meta);\n-\t}\n+        this(toClassReader(source), method, methodDesc, target, meta);\n+    }\n \n-\t@Override\n-\tpublic void visitEnd() {\n-\t\tSourceTransplantVisitor visitor =\n-\t\t\tnew SourceTransplantVisitor(source, method, methodDesc, this, meta);\n+    @Override\n+    public void visitEnd() {\n+        SourceTransplantVisitor visitor =\n+                new SourceTransplantVisitor(source, method, methodDesc, this, meta);\n \n-\t\tsource.accept(visitor, 0);\n-\t\tsuper.visitEnd();\n-\t}\n+        source.accept(visitor, 0);\n+        super.visitEnd();\n+    }\n \n-\tprivate static ClassReader toClassReader(Class<?> klazz) {\n-\t\ttry {\n-\t\t\tString resourceName = \"/\" + klazz.getName().replace('.', '/') + \".class\";\n-\t\t\tInputStream classStream = klazz.getResourceAsStream(resourceName);\n-\t\t\treturn new ClassReader(classStream);\n-\t\t} catch (IOException e) {\n-\t\t\tthrow new WeaverException(\"Failed to create reader for \" + klazz, e);\n-\t\t}\n-\t}\n+    private static ClassReader toClassReader(Class<?> klazz) {\n+        try {\n+            String resourceName = \"/\" + klazz.getName().replace('.', '/') + \".class\";\n+            InputStream classStream = klazz.getResourceAsStream(resourceName);\n+            return new ClassReader(classStream);\n+        } catch (IOException e) {\n+            throw new WeaverException(\"Failed to create reader for \" + klazz, e);\n+        }\n+    }\n \n-\tstatic class SourceTransplantVisitor extends ClassVisitor {\n-\t\tprivate final ClassVisitor target;\n-\t\tprivate final ClassMetadata meta;\n-\t\tprivate final String method;\n-\t\tprivate final String methodDesc;\n-\t\tprivate final ClassReader source;\n+    static class SourceTransplantVisitor extends ClassVisitor {\n+        private final ClassVisitor target;\n+        private final ClassMetadata meta;\n+        private final String method;\n+        private final String methodDesc;\n+        private final ClassReader source;\n \n-\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n-\t\t\tsuper(Opcodes.ASM5);\n-\t\t\tthis.target = target;\n-\t\t\tthis.meta = meta;\n-\t\t\tthis.method = method;\n-\t\t\tthis.methodDesc = methodDesc;\n-\t\t\tthis.source = source;\n-\t\t}\n+        public SourceTransplantVisitor(ClassReader source, String method, String methodDesc,\n+                                       ClassVisitor target, ClassMetadata meta) {\n+            super(Opcodes.ASM5);\n+            this.target = target;\n+            this.meta = meta;\n+            this.method = method;\n+            this.methodDesc = methodDesc;\n+            this.source = source;\n+        }\n \n-\t\t@Override\n-\t\tpublic MethodVisitor visitMethod(int access,\n-\t\t                                 String name,\n-\t\t                                 String desc,\n-\t\t                                 String signature,\n-\t\t                                 String[] exceptions) {\n+        @Override\n+        public MethodVisitor visitMethod(int access,\n+                                         String name,\n+                                         String desc,\n+                                         String signature,\n+                                         String[] exceptions) {\n \n-\t\t\tif (!(method.equals(name) && methodDesc.equals(desc)))\n-\t\t\t\treturn null;\n+            if (!(method.equals(name) && methodDesc.equals(desc))) {\n+                return null;\n+            }\n \n-\t\t\tMethodVisitor mv = target.visitMethod(access, name, desc, signature, exceptions);\n-\t\t\treturn new MethodBodyTransplanter(source.getClassName(), meta, mv);\n-\t\t}\n-\t}\n+            MethodVisitor mv = target.visitMethod(access, name, desc, signature, exceptions);\n+            return new MethodBodyTransplanter(source.getClassName(), meta, mv);\n+        }\n+    }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/85/MethodTransplantAdapter.java\nindex eada6a47292..caa0634119c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/85/MethodTransplantAdapter.java\n@@ -13,25 +13,16 @@ public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n \tprotected final String methodDesc;\n \tprotected final ClassMetadata meta;\n \n-\tpublic MethodTransplantAdapter(ClassReader source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n-\t\tsuper(ASM5, target);\n+\tpublic MethodTransplantAdapter(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+\tsuper(ASM5, target);\n \t\tthis.source = source;\n \t\tthis.method = method;\n \t\tthis.methodDesc = methodDesc;\n \t\tthis.meta = meta;\n \t}\n \n-\tpublic MethodTransplantAdapter(Class<?> source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n-\n-\t\tthis(toClassReader(source), method, methodDesc, target, meta);\n+\tpublic MethodTransplantAdapter(Class<?> source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+\tthis(toClassReader(source), method, methodDesc, target, meta);\n \t}\n \n \t@Override\n@@ -70,17 +61,13 @@ public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n \t\t}\n \n \t\t@Override\n-\t\tpublic MethodVisitor visitMethod(int access,\n-\t\t                                 String name,\n-\t\t                                 String desc,\n-\t\t                                 String signature,\n+\t\tpublic MethodVisitor visitMethod(int access, String name, String desc, String signature,\n \t\t                                 String[] exceptions) {\n-\n-\t\t\tif (!(method.equals(name) && methodDesc.equals(desc)))\n+\tif (!(method.equals(name) && methodDesc.equals(desc)))\n \t\t\t\treturn null;\n \n \t\t\tMethodVisitor mv = target.visitMethod(access, name, desc, signature, exceptions);\n \t\t\treturn new MethodBodyTransplanter(source.getClassName(), meta, mv);\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/85/MethodTransplantAdapter.java\nindex eada6a47292..74326da59d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/85/MethodTransplantAdapter.java\n@@ -2,85 +2,77 @@ package com.artemis.weaver.transplant;\n \n import com.artemis.meta.ClassMetadata;\n import com.artemis.weaver.WeaverException;\n-import org.objectweb.asm.*;\n \n+import org.objectweb.asm.*;\n import java.io.IOException;\n import java.io.InputStream;\n \n public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n-\tprotected final ClassReader source;\n-\tprotected final String method;\n-\tprotected final String methodDesc;\n-\tprotected final ClassMetadata meta;\n-\n-\tpublic MethodTransplantAdapter(ClassReader source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n-\t\tsuper(ASM5, target);\n-\t\tthis.source = source;\n-\t\tthis.method = method;\n-\t\tthis.methodDesc = methodDesc;\n-\t\tthis.meta = meta;\n-\t}\n-\n-\tpublic MethodTransplantAdapter(Class<?> source,\n-\t                               String method,\n-\t                               String methodDesc,\n-\t                               ClassVisitor target,\n-\t                               ClassMetadata meta) {\n-\n-\t\tthis(toClassReader(source), method, methodDesc, target, meta);\n-\t}\n-\n-\t@Override\n-\tpublic void visitEnd() {\n-\t\tSourceTransplantVisitor visitor =\n-\t\t\tnew SourceTransplantVisitor(source, method, methodDesc, this, meta);\n-\n-\t\tsource.accept(visitor, 0);\n-\t\tsuper.visitEnd();\n-\t}\n-\n-\tprivate static ClassReader toClassReader(Class<?> klazz) {\n-\t\ttry {\n-\t\t\tString resourceName = \"/\" + klazz.getName().replace('.', '/') + \".class\";\n-\t\t\tInputStream classStream = klazz.getResourceAsStream(resourceName);\n-\t\t\treturn new ClassReader(classStream);\n-\t\t} catch (IOException e) {\n-\t\t\tthrow new WeaverException(\"Failed to create reader for \" + klazz, e);\n-\t\t}\n-\t}\n-\n-\tstatic class SourceTransplantVisitor extends ClassVisitor {\n-\t\tprivate final ClassVisitor target;\n-\t\tprivate final ClassMetadata meta;\n-\t\tprivate final String method;\n-\t\tprivate final String methodDesc;\n-\t\tprivate final ClassReader source;\n-\n-\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n-\t\t\tsuper(Opcodes.ASM5);\n-\t\t\tthis.target = target;\n-\t\t\tthis.meta = meta;\n-\t\t\tthis.method = method;\n-\t\t\tthis.methodDesc = methodDesc;\n-\t\t\tthis.source = source;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic MethodVisitor visitMethod(int access,\n-\t\t                                 String name,\n-\t\t                                 String desc,\n-\t\t                                 String signature,\n-\t\t                                 String[] exceptions) {\n-\n-\t\t\tif (!(method.equals(name) && methodDesc.equals(desc)))\n-\t\t\t\treturn null;\n-\n-\t\t\tMethodVisitor mv = target.visitMethod(access, name, desc, signature, exceptions);\n-\t\t\treturn new MethodBodyTransplanter(source.getClassName(), meta, mv);\n-\t\t}\n-\t}\n-}\n+ protected final ClassReader source;\n+\n+ protected final String method;\n+\n+ protected final String methodDesc;\n+\n+ protected final ClassMetadata meta;\n+\n+ public MethodTransplantAdapter(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+  super(ASM5, target);\n+  this.source = source;\n+  this.method = method;\n+  this.methodDesc = methodDesc;\n+  this.meta = meta;\n+ }\n+\n+ public MethodTransplantAdapter(Class<?> source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+  this(toClassReader(source), method, methodDesc, target, meta);\n+ }\n+\n+ @Override\n+ public void visitEnd() {\n+  SourceTransplantVisitor visitor = new SourceTransplantVisitor(source, method, methodDesc, this, meta);\n+  source.accept(visitor, 0);\n+  super.visitEnd();\n+ }\n+\n+ private static ClassReader toClassReader(Class<?> klazz) {\n+  try {\n+   String resourceName = \"/\" + klazz.getName().replace('.', '/') + \".class\";\n+   InputStream classStream = klazz.getResourceAsStream(resourceName);\n+   return new ClassReader(classStream);\n+  } catch (IOException e) {\n+   throw new WeaverException(\"Failed to create reader for \" + klazz, e);\n+  }\n+ }\n+\n+ static class SourceTransplantVisitor extends ClassVisitor {\n+  private final ClassVisitor target;\n+\n+  private final ClassMetadata meta;\n+\n+  private final String method;\n+\n+  private final String methodDesc;\n+\n+  private final ClassReader source;\n+\n+  public SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+   super(Opcodes.ASM5);\n+   this.target = target;\n+   this.meta = meta;\n+   this.method = method;\n+   this.methodDesc = methodDesc;\n+   this.source = source;\n+  }\n+\n+  @Override\n+  public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n+   if (!(method.equals(name) &&\n+   methodDesc.equals(desc)))\n+    return null;\n+\n+   MethodVisitor mv = target.visitMethod(access, name, desc, signature, exceptions);\n+   return new MethodBodyTransplanter(source.getClassName(), meta, mv);\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/85/MethodTransplantAdapter.java\nindex eada6a47292..3186351e31d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/85/MethodTransplantAdapter.java\n@@ -60,8 +60,9 @@ public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n \t\tprivate final String methodDesc;\n \t\tprivate final ClassReader source;\n \n-\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n-\t\t\tsuper(Opcodes.ASM5);\n+\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc,\n+\t\tClassVisitor target, ClassMetadata meta) {\n+\t\t\t\tsuper(Opcodes.ASM5);\n \t\t\tthis.target = target;\n \t\t\tthis.meta = meta;\n \t\t\tthis.method = method;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/85/MethodTransplantAdapter.java\nindex eada6a47292..19e7cb0fa8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/85/MethodTransplantAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/85/MethodTransplantAdapter.java\n@@ -59,9 +59,10 @@ public class MethodTransplantAdapter extends ClassVisitor implements Opcodes {\n \t\tprivate final String method;\n \t\tprivate final String methodDesc;\n \t\tprivate final ClassReader source;\n-\n-\t\tpublic SourceTransplantVisitor(ClassReader source, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n-\t\t\tsuper(Opcodes.ASM5);\n+\t\tpublic SourceTransplantVisitor (ClassReader\n+\t\tsource\n+\t\t, String method, String methodDesc, ClassVisitor target, ClassMetadata meta) {\n+\t\t\t\tsuper(Opcodes.ASM5);\n \t\t\tthis.target = target;\n \t\t\tthis.meta = meta;\n \t\t\tthis.method = method;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
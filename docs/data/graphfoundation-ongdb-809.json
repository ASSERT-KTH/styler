{
    "project_name": "graphfoundation-ongdb",
    "error_id": "809",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/809/DirectRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/809/DirectRecordAccess.java\nindex cd9752f9650..3e84a1f1e9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/809/DirectRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/809/DirectRecordAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.store;\n \n import java.util.Iterator;\n@@ -42,141 +43,141 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n \n public class DirectRecordAccess implements RecordAccess\n {\n-    final StoreAccess access;\n-    final CacheAccess cacheAccess;\n-\n-    public DirectRecordAccess( StoreAccess access, CacheAccess cacheAccess )\n-    {\n-        this.access = access;\n-        this.cacheAccess = cacheAccess;\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> schema( long id )\n-    {\n-        return referenceTo( access.getSchemaStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<NodeRecord> node( long id )\n-    {\n-        return referenceTo( access.getNodeStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipRecord> relationship( long id )\n-    {\n-        return referenceTo( access.getRelationshipStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipGroupRecord> relationshipGroup( long id )\n-    {\n-        return referenceTo( access.getRelationshipGroupStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<PropertyRecord> property( long id )\n-    {\n-        return referenceTo( access.getPropertyStore(), id );\n-    }\n-\n-    @Override\n-    public Iterator<PropertyRecord> rawPropertyChain( final long firstId )\n-    {\n-        return new PrefetchingIterator<PropertyRecord>()\n+  final StoreAccess access;\n+  final CacheAccess cacheAccess;\n+\n+  public DirectRecordAccess(StoreAccess access, CacheAccess cacheAccess)\n+  {\n+    this.access = access;\n+    this.cacheAccess = cacheAccess;\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> schema(long id)\n+  {\n+    return referenceTo(access.getSchemaStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<NodeRecord> node(long id)\n+  {\n+    return referenceTo(access.getNodeStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipRecord> relationship(long id)\n+  {\n+    return referenceTo(access.getRelationshipStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipGroupRecord> relationshipGroup(long id)\n+  {\n+    return referenceTo(access.getRelationshipGroupStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<PropertyRecord> property(long id)\n+  {\n+    return referenceTo(access.getPropertyStore(), id);\n+  }\n+\n+  @Override\n+  public Iterator<PropertyRecord> rawPropertyChain(final long firstId)\n+  {\n+    return new PrefetchingIterator<PropertyRecord>()\n+    {\n+      private long next = firstId;\n+\n+      @Override\n+      protected PropertyRecord fetchNextOrNull()\n+      {\n+        if (Record.NO_NEXT_PROPERTY.is(next))\n         {\n-            private long next = firstId;\n-\n-            @Override\n-            protected PropertyRecord fetchNextOrNull()\n-            {\n-                if ( Record.NO_NEXT_PROPERTY.is( next ) )\n-                {\n-                    return null;\n-                }\n-\n-                PropertyRecord record = referenceTo( access.getPropertyStore(), next ).record();\n-                next = record.getNextProp();\n-                return record;\n-            }\n-        };\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipTypeTokenRecord> relationshipType( int id )\n-    {\n-        return referenceTo( access.getRelationshipTypeTokenStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<PropertyKeyTokenRecord> propertyKey( int id )\n-    {\n-        return referenceTo( access.getPropertyKeyTokenStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> string( long id )\n-    {\n-        return referenceTo( access.getStringStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> array( long id )\n-    {\n-        return referenceTo( access.getArrayStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> relationshipTypeName( int id )\n-    {\n-        return referenceTo( access.getRelationshipTypeNameStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> nodeLabels( long id )\n-    {\n-        return referenceTo( access.getNodeDynamicLabelStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<LabelTokenRecord> label( int id )\n-    {\n-        return referenceTo( access.getLabelTokenStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> labelName( int id )\n-    {\n-        return referenceTo( access.getLabelNameStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> propertyKeyName( int id )\n-    {\n-        return referenceTo( access.getPropertyKeyNameStore(), id );\n-    }\n-\n-    @Override\n-    public RecordReference<NeoStoreRecord> graph()\n-    {\n-        return new DirectRecordReference<>( access.getRawNeoStores().getMetaDataStore().graphPropertyRecord(), this );\n-    }\n-\n-    @Override\n-    public boolean shouldCheck( long id, MultiPassStore store )\n-    {\n-        return true;\n-    }\n-\n-    <RECORD extends AbstractBaseRecord> DirectRecordReference<RECORD> referenceTo( RecordStore<RECORD> store, long id )\n-    {\n-        return new DirectRecordReference<>( store.getRecord( id, store.newRecord(), FORCE ), this );\n-    }\n-\n-    @Override\n-    public CacheAccess cacheAccess()\n-    {\n-        return cacheAccess;\n-    }\n+          return null;\n+        }\n+\n+        PropertyRecord record = referenceTo(access.getPropertyStore(), next).record();\n+        next = record.getNextProp();\n+        return record;\n+      }\n+    };\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipTypeTokenRecord> relationshipType(int id)\n+  {\n+    return referenceTo(access.getRelationshipTypeTokenStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<PropertyKeyTokenRecord> propertyKey(int id)\n+  {\n+    return referenceTo(access.getPropertyKeyTokenStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> string(long id)\n+  {\n+    return referenceTo(access.getStringStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> array(long id)\n+  {\n+    return referenceTo(access.getArrayStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> relationshipTypeName(int id)\n+  {\n+    return referenceTo(access.getRelationshipTypeNameStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> nodeLabels(long id)\n+  {\n+    return referenceTo(access.getNodeDynamicLabelStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<LabelTokenRecord> label(int id)\n+  {\n+    return referenceTo(access.getLabelTokenStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> labelName(int id)\n+  {\n+    return referenceTo(access.getLabelNameStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> propertyKeyName(int id)\n+  {\n+    return referenceTo(access.getPropertyKeyNameStore(), id);\n+  }\n+\n+  @Override\n+  public RecordReference<NeoStoreRecord> graph()\n+  {\n+    return new DirectRecordReference<>(access.getRawNeoStores().getMetaDataStore().graphPropertyRecord(), this);\n+  }\n+\n+  @Override\n+  public boolean shouldCheck(long id, MultiPassStore store)\n+  {\n+    return true;\n+  }\n+\n+  <RECORD extends AbstractBaseRecord> DirectRecordReference<RECORD> referenceTo(RecordStore<RECORD> store, long id)\n+  {\n+    return new DirectRecordReference<>(store.getRecord(id, store.newRecord(), FORCE), this);\n+  }\n+\n+  @Override\n+  public CacheAccess cacheAccess()\n+  {\n+    return cacheAccess;\n+  }\n }\n",
            "diff_size": 144
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/809/DirectRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/809/DirectRecordAccess.java\nindex cd9752f9650..d5c6774a71a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/809/DirectRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/809/DirectRecordAccess.java\n@@ -179,4 +179,4 @@ public class DirectRecordAccess implements RecordAccess\n     {\n         return cacheAccess;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
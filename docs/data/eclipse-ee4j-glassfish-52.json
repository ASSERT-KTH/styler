{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "121",
                "column": "33",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        initRequest();\n\n        initializeLogger();     // in case program options changed\n    }\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "121",
                    "column": "28",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/52/RestoreDomainCommand.java\nindex 75068c840af..fe74052cb64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/52/RestoreDomainCommand.java\n@@ -118,7 +118,7 @@ public final class RestoreDomainCommand extends BackupCommands {\n         setBackupDir(backupdir);\n         initRequest();\n \n-        initializeLogger();     // in case program options changed\n+        initializeLogger();// in case program options changed\n     }\n \n     /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "122",
                    "column": "33",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/52/RestoreDomainCommand.java\nindex 75068c840af..67c18b3841a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/52/RestoreDomainCommand.java\n@@ -49,20 +49,21 @@ public final class RestoreDomainCommand extends BackupCommands {\n     @Param(name = \"filename\", optional = true)\n     private String backupFilename;\n \n-    @Param(name= \"force\", optional = true, defaultValue = \"false\")\n+    @Param(name = \"force\", optional = true, defaultValue = \"false\")\n     private boolean force;\n \n-    @Param(name= \"description\", optional = true, obsolete = true)\n+    @Param(name = \"description\", optional = true, obsolete = true)\n     private String description;\n \n     private static final LocalStringsImpl strings =\n-            new LocalStringsImpl(BackupDomainCommand.class);\n+        new LocalStringsImpl(BackupDomainCommand.class);\n \n     /**\n+     *\n      */\n     @Override\n     protected void validate()\n-            throws CommandException, CommandValidationException {\n+        throws CommandException, CommandValidationException {\n \n         boolean domainExists = true;\n \n@@ -93,7 +94,7 @@ public final class RestoreDomainCommand extends BackupCommands {\n \n         if (domainExists && isRunning()) {\n             throw new CommandException(strings.get(\"DomainIsNotStopped\",\n-                                       domainName));\n+                domainName));\n         }\n \n         if (backupFilename != null) {\n@@ -122,10 +123,11 @@ public final class RestoreDomainCommand extends BackupCommands {\n     }\n \n     /**\n+     *\n      */\n     @Override\n     protected int executeCommand()\n-            throws CommandException {\n+        throws CommandException {\n         try {\n             RestoreManager mgr = new RestoreManager(request);\n             logger.info(mgr.restore());\n@@ -148,11 +150,11 @@ public final class RestoreDomainCommand extends BackupCommands {\n             }\n         }\n         boolean configonlybackup = false;\n-        if ((configonly != null) && ( Boolean.valueOf(configonly))) {\n+        if ((configonly != null) && (Boolean.valueOf(configonly))) {\n             configonlybackup = true;\n         }\n         request = new BackupRequest(domainDirParam, domainName, backupdir_f,\n-                                    backupConfig, backupFilename,configonlybackup);\n+            backupConfig, backupFilename, configonlybackup);\n         request.setTerse(programOpts.isTerse());\n         request.setVerbose(verbose);\n         request.setForce(force);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/52/RestoreDomainCommand.java\nindex 75068c840af..c803dcdbf3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/52/RestoreDomainCommand.java\n@@ -49,10 +49,10 @@ public final class RestoreDomainCommand extends BackupCommands {\n     @Param(name = \"filename\", optional = true)\n     private String backupFilename;\n \n-    @Param(name= \"force\", optional = true, defaultValue = \"false\")\n+    @Param(name=\"force\", optional = true, defaultValue = \"false\")\n     private boolean force;\n \n-    @Param(name= \"description\", optional = true, obsolete = true)\n+    @Param(name=\"description\", optional = true, obsolete = true)\n     private String description;\n \n     private static final LocalStringsImpl strings =\n@@ -92,9 +92,8 @@ public final class RestoreDomainCommand extends BackupCommands {\n         }\n \n         if (domainExists && isRunning()) {\n-            throw new CommandException(strings.get(\"DomainIsNotStopped\",\n-                                       domainName));\n-        }\n+            throw new CommandException(strings.get(\"DomainIsNotStopped\", domainName));\n+    }\n \n         if (backupFilename != null) {\n             File f = new File(backupFilename);\n@@ -118,7 +117,8 @@ public final class RestoreDomainCommand extends BackupCommands {\n         setBackupDir(backupdir);\n         initRequest();\n \n-        initializeLogger();     // in case program options changed\n+        initializeLogger();\n+// in case program options changed\n     }\n \n     /**\n@@ -151,9 +151,8 @@ public final class RestoreDomainCommand extends BackupCommands {\n         if ((configonly != null) && ( Boolean.valueOf(configonly))) {\n             configonlybackup = true;\n         }\n-        request = new BackupRequest(domainDirParam, domainName, backupdir_f,\n-                                    backupConfig, backupFilename,configonlybackup);\n-        request.setTerse(programOpts.isTerse());\n+        request = new BackupRequest(domainDirParam, domainName, backupdir_f, backupConfig, backupFilename,configonlybackup);\n+request.setTerse(programOpts.isTerse());\n         request.setVerbose(verbose);\n         request.setForce(force);\n     }\n@@ -163,4 +162,4 @@ public final class RestoreDomainCommand extends BackupCommands {\n         return super.toString() + \"\\n\" + ObjectAnalyzer.toString(this);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "123",
                    "column": "10",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 9, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/52/RestoreDomainCommand.java\nindex 75068c840af..af6bb481a2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/52/RestoreDomainCommand.java\n@@ -118,8 +118,9 @@ public final class RestoreDomainCommand extends BackupCommands {\n         setBackupDir(backupdir);\n         initRequest();\n \n-        initializeLogger();     // in case program options changed\n-    }\n+        initializeLogger();\n+    // in case program options changed\n+         }\n \n     /**\n      */\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "121",
                    "column": "28",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/52/RestoreDomainCommand.java\nindex 75068c840af..fe74052cb64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/52/RestoreDomainCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/52/RestoreDomainCommand.java\n@@ -118,7 +118,7 @@ public final class RestoreDomainCommand extends BackupCommands {\n         setBackupDir(backupdir);\n         initRequest();\n \n-        initializeLogger();     // in case program options changed\n+        initializeLogger();// in case program options changed\n     }\n \n     /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
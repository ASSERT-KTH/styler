{
    "project_name": "intuit-Tank",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "319",
                "column": "26",
                "severity": "warning",
                "message": "'?' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public abstract List<? extends JobNodeBean> getSubNodes();\n\n    public abstract boolean hasSubNodes();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/14/JobNodeBean.java\nindex cbced2386ee..601d710517e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/14/JobNodeBean.java\n@@ -316,7 +316,7 @@ public abstract class JobNodeBean implements Serializable {\n         return false;\n     }\n \n-    public abstract List<? extends JobNodeBean> getSubNodes();\n+    public abstract List< ? extends JobNodeBean> getSubNodes();\n \n     public abstract boolean hasSubNodes();\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "305",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/14/JobNodeBean.java\nindex cbced2386ee..da52cd13f1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/14/JobNodeBean.java\n@@ -30,334 +30,318 @@ import com.intuit.tank.vm.settings.AccessRight;\n \n public abstract class JobNodeBean implements Serializable {\n \n-    /**\n-     * \n-     */\n-    private static final long serialVersionUID = 1L;\n-    private String name;\n-    private String jobId;\n-    private String id;\n-    private String reportMode;\n-    private String status;\n-    private String region;\n-    private String activeUsers;\n-    private ValidationStatus numFailures;\n-    private List<UserDetail> userDetails = new ArrayList<UserDetail>();\n-    private String totalFails;\n-    private String totalUsers;\n-    private String startTime;\n-    private String endTime;\n-    private boolean hasRights = false;\n-    private Map<Date, List<UserDetail>> statusDetailMap;\n-    // private Map<Date, Map<String, TPSInfo>> tpsInfoMap;\n-    private int tps;\n-\n-    public abstract String getType();\n-\n-    public abstract void reCalculate();\n-\n-    /**\n-     * @return the hasRights\n-     */\n-    public boolean isHasRights() {\n-        return hasRights;\n-    }\n-\n-    public boolean isJobNode() {\n-        return false;\n-    }\n-\n-    /**\n-     * @return the tps\n-     */\n-    public int getTps() {\n-        if (JobStatus.Running.name().equalsIgnoreCase(status) || \"project\".equalsIgnoreCase(getType())) {\n-            return tps;\n-        }\n-        return 0;\n-    }\n-\n-    /**\n-     * @param tps\n-     *            the tps to set\n-     */\n-    public void setTps(int tps) {\n-        this.tps = tps;\n-    }\n-\n-    /**\n-     * @return the statusDetailMap\n-     */\n-    public Map<Date, List<UserDetail>> getStatusDetailMap() {\n-        return statusDetailMap;\n-    }\n-\n-    // /**\n-    // * @return the statusDetailMap\n-    // */\n-    // public Map<Date, Map<String, TPSInfo>> getTpsDetailMap() {\n-    // return tpsInfoMap;\n-    // }\n-    //\n-    // /**\n-    // * @param statusDetailMap\n-    // * the statusDetailMap to set\n-    // */\n-    // public void setTpsDetailMap(Map<Date, Map<String, TPSInfo>> tpsInfoMap) {\n-    // this.tpsInfoMap = tpsInfoMap;\n-    // }\n-    /**\n-     * @param statusDetailMap\n-     *            the statusDetailMap to set\n-     */\n-    public void setStatusDetailMap(Map<Date, List<UserDetail>> statusDetailMap) {\n-        this.statusDetailMap = statusDetailMap;\n-    }\n-\n-    /**\n-     * @param hasRights\n-     *            the hasRights to set\n-     */\n-    public void setHasRights(boolean hasRights) {\n-        this.hasRights = hasRights;\n-    }\n-\n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n-\n-    /**\n-     * @param name\n-     *            the name to set\n-     */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    /**\n-     * @return the jobId\n-     */\n-    public String getJobId() {\n-        return jobId;\n-    }\n-\n-    /**\n-     * @param jobId\n-     *            the jobId to set\n-     */\n-    public void setJobId(String jobId) {\n-        this.jobId = jobId;\n-    }\n-\n-    /**\n-     * @return the id\n-     */\n-    public String getId() {\n-        return id;\n-    }\n-\n-    /**\n-     * @param id\n-     *            the id to set\n-     */\n-    public void setId(String id) {\n-        this.id = id;\n-    }\n-\n-    /**\n-     * @return the reportMode\n-     */\n-    public String getReportMode() {\n-        return reportMode;\n-    }\n-\n-    /**\n-     * @param reportMode\n-     *            the reportMode to set\n-     */\n-    public void setReportMode(String reportMode) {\n-        this.reportMode = reportMode;\n-    }\n-\n-    /**\n-     * @return the status\n-     */\n-    public String getStatus() {\n-        return status;\n-    }\n-\n-    /**\n-     * @param status\n-     *            the status to set\n-     */\n-    public void setStatus(String status) {\n-        this.status = status;\n-    }\n-\n-    /**\n-     * @return the validation errors\n-     */\n-    public ValidationStatus getNumFailures() {\n-        return numFailures;\n-    }\n-\n-    /**\n-     * @param validationStatus\n-     * \n-     */\n-    public void setNumFailures(ValidationStatus fails) {\n-        this.numFailures = fails;\n-        this.totalFails = String.valueOf(numFailures.getTotal());\n-    }\n-\n-    /**\n-     * @return the userDetails\n-     */\n-    public List<UserDetail> getUserDetails() {\n-        return userDetails;\n-    }\n-\n-    /**\n-     * @param userDetails\n-     *            the userDetails to set\n-     */\n-    public void setUserDetails(List<UserDetail> userDetails) {\n-        this.userDetails = userDetails;\n-    }\n-\n-    public String getTotalFails() {\n-        return totalFails;\n-    }\n-\n-    /**\n-     * @return the region\n-     */\n-    public String getRegion() {\n-        return region;\n-    }\n-\n-    /**\n-     * @param region\n-     *            the region to set\n-     */\n-    public void setRegion(String region) {\n-        this.region = region;\n-    }\n-\n-    /**\n-     * @return the activeUsers\n-     */\n-    public String getActiveUsers() {\n-        return activeUsers;\n-    }\n-\n-    /**\n-     * @param activeUsers\n-     *            the activeUsers to set\n-     */\n-    public void setActiveUsers(String activeUsers) {\n-        this.activeUsers = activeUsers;\n-    }\n-\n-    /**\n-     * @return the totalUsers\n-     */\n-    public String getTotalUsers() {\n-        return totalUsers;\n-    }\n-\n-    /**\n-     * @param totalUsers\n-     *            the totalUsers to set\n-     */\n-    public void setTotalUsers(String totalUsers) {\n-        this.totalUsers = totalUsers;\n-    }\n-\n-    /**\n-     * @return the startTime\n-     */\n-    public String getStartTime() {\n-        return startTime;\n-    }\n-\n-    /**\n-     * @param startTime\n-     *            the startTime to set\n-     */\n-    public void setStartTime(String startTime) {\n-        this.startTime = startTime;\n-    }\n-\n-    /**\n-     * @return the endTime\n-     */\n-    public String getEndTime() {\n-        return endTime;\n-    }\n-\n-    /**\n-     * @param endTime\n-     *            the endTime to set\n-     */\n-    public void setEndTime(String endTime) {\n-        this.endTime = endTime;\n-    }\n-\n-    /**\n-     * if the node is deleteable\n-     * \n-     * @return\n-     */\n-    public boolean isDeleteable() {\n-        return false;\n-    }\n-\n-    public abstract List<? extends JobNodeBean> getSubNodes();\n-\n-    public abstract boolean hasSubNodes();\n-\n-    public abstract boolean isKillable();\n-\n-    public abstract boolean isStopable();\n-\n-    public abstract boolean isRunnable();\n-\n-    public abstract boolean isPausable();\n-\n-    public abstract boolean isRampPausable();\n-\n-    /**\n-     * \n-     * @{inheritDoc\n-     */\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder(29, 41).append(id).toHashCode();\n-    }\n-\n-    /**\n-     * \n-     * @{inheritDoc\n-     */\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null || !(obj instanceof JobNodeBean)) {\n-            return false;\n-        }\n-        try {\n-            JobNodeBean o = (JobNodeBean) obj;\n-            return new EqualsBuilder().append(this.id, o.id).isEquals();\n-        } catch (Exception ex) {\n-            return false;\n-        }\n-    }\n-\n-    public boolean canControlJob(Security security) {\n-        return this.hasRights || security.hasRight(AccessRight.CONTROL_JOB);\n-    }\n+  /**\n+   *\n+   */\n+  private static final long serialVersionUID = 1L;\n+  private String name;\n+  private String jobId;\n+  private String id;\n+  private String reportMode;\n+  private String status;\n+  private String region;\n+  private String activeUsers;\n+  private ValidationStatus numFailures;\n+  private List<UserDetail> userDetails = new ArrayList<UserDetail>();\n+  private String totalFails;\n+  private String totalUsers;\n+  private String startTime;\n+  private String endTime;\n+  private boolean hasRights = false;\n+  private Map<Date, List<UserDetail>> statusDetailMap;\n+  // private Map<Date, Map<String, TPSInfo>> tpsInfoMap;\n+  private int tps;\n+\n+  public abstract String getType();\n+\n+  public abstract void reCalculate();\n+\n+  /**\n+   * @return the hasRights\n+   */\n+  public boolean isHasRights() {\n+    return hasRights;\n+  }\n+\n+  public boolean isJobNode() {\n+    return false;\n+  }\n+\n+  /**\n+   * @return the tps\n+   */\n+  public int getTps() {\n+    if (JobStatus.Running.name().equalsIgnoreCase(status) || \"project\".equalsIgnoreCase(getType())) {\n+      return tps;\n+    }\n+    return 0;\n+  }\n+\n+  /**\n+   * @param tps the tps to set\n+   */\n+  public void setTps(int tps) {\n+    this.tps = tps;\n+  }\n+\n+  /**\n+   * @return the statusDetailMap\n+   */\n+  public Map<Date, List<UserDetail>> getStatusDetailMap() {\n+    return statusDetailMap;\n+  }\n+\n+  // /**\n+  // * @return the statusDetailMap\n+  // */\n+  // public Map<Date, Map<String, TPSInfo>> getTpsDetailMap() {\n+  // return tpsInfoMap;\n+  // }\n+  //\n+  // /**\n+  // * @param statusDetailMap\n+  // * the statusDetailMap to set\n+  // */\n+  // public void setTpsDetailMap(Map<Date, Map<String, TPSInfo>> tpsInfoMap) {\n+  // this.tpsInfoMap = tpsInfoMap;\n+  // }\n+\n+  /**\n+   * @param statusDetailMap the statusDetailMap to set\n+   */\n+  public void setStatusDetailMap(Map<Date, List<UserDetail>> statusDetailMap) {\n+    this.statusDetailMap = statusDetailMap;\n+  }\n+\n+  /**\n+   * @param hasRights the hasRights to set\n+   */\n+  public void setHasRights(boolean hasRights) {\n+    this.hasRights = hasRights;\n+  }\n+\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n+\n+  /**\n+   * @param name the name to set\n+   */\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  /**\n+   * @return the jobId\n+   */\n+  public String getJobId() {\n+    return jobId;\n+  }\n+\n+  /**\n+   * @param jobId the jobId to set\n+   */\n+  public void setJobId(String jobId) {\n+    this.jobId = jobId;\n+  }\n+\n+  /**\n+   * @return the id\n+   */\n+  public String getId() {\n+    return id;\n+  }\n+\n+  /**\n+   * @param id the id to set\n+   */\n+  public void setId(String id) {\n+    this.id = id;\n+  }\n+\n+  /**\n+   * @return the reportMode\n+   */\n+  public String getReportMode() {\n+    return reportMode;\n+  }\n+\n+  /**\n+   * @param reportMode the reportMode to set\n+   */\n+  public void setReportMode(String reportMode) {\n+    this.reportMode = reportMode;\n+  }\n+\n+  /**\n+   * @return the status\n+   */\n+  public String getStatus() {\n+    return status;\n+  }\n+\n+  /**\n+   * @param status the status to set\n+   */\n+  public void setStatus(String status) {\n+    this.status = status;\n+  }\n+\n+  /**\n+   * @return the validation errors\n+   */\n+  public ValidationStatus getNumFailures() {\n+    return numFailures;\n+  }\n+\n+  /**\n+   * @param validationStatus\n+   */\n+  public void setNumFailures(ValidationStatus fails) {\n+    this.numFailures = fails;\n+    this.totalFails = String.valueOf(numFailures.getTotal());\n+  }\n+\n+  /**\n+   * @return the userDetails\n+   */\n+  public List<UserDetail> getUserDetails() {\n+    return userDetails;\n+  }\n+\n+  /**\n+   * @param userDetails the userDetails to set\n+   */\n+  public void setUserDetails(List<UserDetail> userDetails) {\n+    this.userDetails = userDetails;\n+  }\n+\n+  public String getTotalFails() {\n+    return totalFails;\n+  }\n+\n+  /**\n+   * @return the region\n+   */\n+  public String getRegion() {\n+    return region;\n+  }\n+\n+  /**\n+   * @param region the region to set\n+   */\n+  public void setRegion(String region) {\n+    this.region = region;\n+  }\n+\n+  /**\n+   * @return the activeUsers\n+   */\n+  public String getActiveUsers() {\n+    return activeUsers;\n+  }\n+\n+  /**\n+   * @param activeUsers the activeUsers to set\n+   */\n+  public void setActiveUsers(String activeUsers) {\n+    this.activeUsers = activeUsers;\n+  }\n+\n+  /**\n+   * @return the totalUsers\n+   */\n+  public String getTotalUsers() {\n+    return totalUsers;\n+  }\n+\n+  /**\n+   * @param totalUsers the totalUsers to set\n+   */\n+  public void setTotalUsers(String totalUsers) {\n+    this.totalUsers = totalUsers;\n+  }\n+\n+  /**\n+   * @return the startTime\n+   */\n+  public String getStartTime() {\n+    return startTime;\n+  }\n+\n+  /**\n+   * @param startTime the startTime to set\n+   */\n+  public void setStartTime(String startTime) {\n+    this.startTime = startTime;\n+  }\n+\n+  /**\n+   * @return the endTime\n+   */\n+  public String getEndTime() {\n+    return endTime;\n+  }\n+\n+  /**\n+   * @param endTime the endTime to set\n+   */\n+  public void setEndTime(String endTime) {\n+    this.endTime = endTime;\n+  }\n+\n+  /**\n+   * if the node is deleteable\n+   *\n+   * @return\n+   */\n+  public boolean isDeleteable() {\n+    return false;\n+  }\n+\n+  public abstract List<? extends JobNodeBean> getSubNodes();\n+\n+  public abstract boolean hasSubNodes();\n+\n+  public abstract boolean isKillable();\n+\n+  public abstract boolean isStopable();\n+\n+  public abstract boolean isRunnable();\n+\n+  public abstract boolean isPausable();\n+\n+  public abstract boolean isRampPausable();\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(29, 41).append(id).toHashCode();\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (obj == null || !(obj instanceof JobNodeBean)) {\n+      return false;\n+    }\n+    try {\n+      JobNodeBean o = (JobNodeBean) obj;\n+      return new EqualsBuilder().append(this.id, o.id).isEquals();\n+    } catch (Exception ex) {\n+      return false;\n+    }\n+  }\n+\n+  public boolean canControlJob(Security security) {\n+    return this.hasRights || security.hasRight(AccessRight.CONTROL_JOB);\n+  }\n \n }\n",
            "diff_size": 329
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "319",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/14/JobNodeBean.java\nindex cbced2386ee..88e59b9a6f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/14/JobNodeBean.java\n@@ -360,4 +360,4 @@ public abstract class JobNodeBean implements Serializable {\n         return this.hasRights || security.hasRight(AccessRight.CONTROL_JOB);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "388",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/14/JobNodeBean.java\nindex cbced2386ee..5098c6c856a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/14/JobNodeBean.java\n@@ -13,26 +13,28 @@ package com.intuit.tank.job;\n  * #L%\n  */\n \n+\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n-\n import com.intuit.tank.api.model.v1.cloud.UserDetail;\n import com.intuit.tank.api.model.v1.cloud.ValidationStatus;\n import com.intuit.tank.auth.Security;\n import com.intuit.tank.vm.api.enumerated.JobStatus;\n import com.intuit.tank.vm.settings.AccessRight;\n \n+\n public abstract class JobNodeBean implements Serializable {\n \n     /**\n      * \n      */\n+\n     private static final long serialVersionUID = 1L;\n     private String name;\n     private String jobId;\n@@ -52,17 +54,22 @@ public abstract class JobNodeBean implements Serializable {\n     // private Map<Date, Map<String, TPSInfo>> tpsInfoMap;\n     private int tps;\n \n+\n     public abstract String getType();\n \n+\n     public abstract void reCalculate();\n \n     /**\n      * @return the hasRights\n      */\n+\n+\n     public boolean isHasRights() {\n         return hasRights;\n     }\n \n+\n     public boolean isJobNode() {\n         return false;\n     }\n@@ -70,6 +77,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the tps\n      */\n+\n+\n     public int getTps() {\n         if (JobStatus.Running.name().equalsIgnoreCase(status) || \"project\".equalsIgnoreCase(getType())) {\n             return tps;\n@@ -81,6 +90,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param tps\n      *            the tps to set\n      */\n+\n+\n     public void setTps(int tps) {\n         this.tps = tps;\n     }\n@@ -88,6 +99,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the statusDetailMap\n      */\n+\n+\n     public Map<Date, List<UserDetail>> getStatusDetailMap() {\n         return statusDetailMap;\n     }\n@@ -110,6 +123,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param statusDetailMap\n      *            the statusDetailMap to set\n      */\n+\n+\n     public void setStatusDetailMap(Map<Date, List<UserDetail>> statusDetailMap) {\n         this.statusDetailMap = statusDetailMap;\n     }\n@@ -118,6 +133,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param hasRights\n      *            the hasRights to set\n      */\n+\n+\n     public void setHasRights(boolean hasRights) {\n         this.hasRights = hasRights;\n     }\n@@ -125,6 +142,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -133,6 +152,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param name\n      *            the name to set\n      */\n+\n+\n     public void setName(String name) {\n         this.name = name;\n     }\n@@ -140,6 +161,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the jobId\n      */\n+\n+\n     public String getJobId() {\n         return jobId;\n     }\n@@ -148,6 +171,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param jobId\n      *            the jobId to set\n      */\n+\n+\n     public void setJobId(String jobId) {\n         this.jobId = jobId;\n     }\n@@ -155,6 +180,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the id\n      */\n+\n+\n     public String getId() {\n         return id;\n     }\n@@ -163,6 +190,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param id\n      *            the id to set\n      */\n+\n+\n     public void setId(String id) {\n         this.id = id;\n     }\n@@ -170,6 +199,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the reportMode\n      */\n+\n+\n     public String getReportMode() {\n         return reportMode;\n     }\n@@ -178,6 +209,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param reportMode\n      *            the reportMode to set\n      */\n+\n+\n     public void setReportMode(String reportMode) {\n         this.reportMode = reportMode;\n     }\n@@ -185,6 +218,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the status\n      */\n+\n+\n     public String getStatus() {\n         return status;\n     }\n@@ -193,6 +228,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param status\n      *            the status to set\n      */\n+\n+\n     public void setStatus(String status) {\n         this.status = status;\n     }\n@@ -200,6 +237,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the validation errors\n      */\n+\n+\n     public ValidationStatus getNumFailures() {\n         return numFailures;\n     }\n@@ -208,6 +247,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param validationStatus\n      * \n      */\n+\n+\n     public void setNumFailures(ValidationStatus fails) {\n         this.numFailures = fails;\n         this.totalFails = String.valueOf(numFailures.getTotal());\n@@ -216,6 +257,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the userDetails\n      */\n+\n+\n     public List<UserDetail> getUserDetails() {\n         return userDetails;\n     }\n@@ -224,10 +267,13 @@ public abstract class JobNodeBean implements Serializable {\n      * @param userDetails\n      *            the userDetails to set\n      */\n+\n+\n     public void setUserDetails(List<UserDetail> userDetails) {\n         this.userDetails = userDetails;\n     }\n \n+\n     public String getTotalFails() {\n         return totalFails;\n     }\n@@ -235,6 +281,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the region\n      */\n+\n+\n     public String getRegion() {\n         return region;\n     }\n@@ -243,6 +291,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param region\n      *            the region to set\n      */\n+\n+\n     public void setRegion(String region) {\n         this.region = region;\n     }\n@@ -250,6 +300,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the activeUsers\n      */\n+\n+\n     public String getActiveUsers() {\n         return activeUsers;\n     }\n@@ -258,6 +310,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param activeUsers\n      *            the activeUsers to set\n      */\n+\n+\n     public void setActiveUsers(String activeUsers) {\n         this.activeUsers = activeUsers;\n     }\n@@ -265,6 +319,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the totalUsers\n      */\n+\n+\n     public String getTotalUsers() {\n         return totalUsers;\n     }\n@@ -273,6 +329,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param totalUsers\n      *            the totalUsers to set\n      */\n+\n+\n     public void setTotalUsers(String totalUsers) {\n         this.totalUsers = totalUsers;\n     }\n@@ -280,6 +338,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the startTime\n      */\n+\n+\n     public String getStartTime() {\n         return startTime;\n     }\n@@ -288,6 +348,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param startTime\n      *            the startTime to set\n      */\n+\n+\n     public void setStartTime(String startTime) {\n         this.startTime = startTime;\n     }\n@@ -295,6 +357,8 @@ public abstract class JobNodeBean implements Serializable {\n     /**\n      * @return the endTime\n      */\n+\n+\n     public String getEndTime() {\n         return endTime;\n     }\n@@ -303,6 +367,8 @@ public abstract class JobNodeBean implements Serializable {\n      * @param endTime\n      *            the endTime to set\n      */\n+\n+\n     public void setEndTime(String endTime) {\n         this.endTime = endTime;\n     }\n@@ -312,28 +378,38 @@ public abstract class JobNodeBean implements Serializable {\n      * \n      * @return\n      */\n+\n+\n     public boolean isDeleteable() {\n         return false;\n     }\n \n+\n     public abstract List<? extends JobNodeBean> getSubNodes();\n \n+\n     public abstract boolean hasSubNodes();\n \n+\n     public abstract boolean isKillable();\n \n+\n     public abstract boolean isStopable();\n \n+\n     public abstract boolean isRunnable();\n \n+\n     public abstract boolean isPausable();\n \n+\n     public abstract boolean isRampPausable();\n \n     /**\n      * \n      * @{inheritDoc\n      */\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder(29, 41).append(id).toHashCode();\n@@ -343,6 +419,7 @@ public abstract class JobNodeBean implements Serializable {\n      * \n      * @{inheritDoc\n      */\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (obj == null || !(obj instanceof JobNodeBean)) {\n@@ -356,8 +433,9 @@ public abstract class JobNodeBean implements Serializable {\n         }\n     }\n \n+\n     public boolean canControlJob(Security security) {\n         return this.hasRights || security.hasRight(AccessRight.CONTROL_JOB);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 83
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/14/JobNodeBean.java\nindex cbced2386ee..601d710517e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/14/JobNodeBean.java\n@@ -316,7 +316,7 @@ public abstract class JobNodeBean implements Serializable {\n         return false;\n     }\n \n-    public abstract List<? extends JobNodeBean> getSubNodes();\n+    public abstract List< ? extends JobNodeBean> getSubNodes();\n \n     public abstract boolean hasSubNodes();\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/14/JobNodeBean.java\nindex cbced2386ee..601d710517e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/14/JobNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/14/JobNodeBean.java\n@@ -316,7 +316,7 @@ public abstract class JobNodeBean implements Serializable {\n         return false;\n     }\n \n-    public abstract List<? extends JobNodeBean> getSubNodes();\n+    public abstract List< ? extends JobNodeBean> getSubNodes();\n \n     public abstract boolean hasSubNodes();\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
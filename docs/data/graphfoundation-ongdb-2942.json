{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2942",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2942/LabelScanStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2942/LabelScanStore.java\nindex 7cc73d0a9de..a4979fd2263 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2942/LabelScanStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2942/LabelScanStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.labelscan;\n \n import java.io.File;\n@@ -34,166 +35,166 @@ import org.neo4j.storageengine.api.schema.LabelScanReader;\n  */\n public interface LabelScanStore extends Lifecycle\n {\n-    interface Monitor\n-    {\n-        Monitor EMPTY = new Monitor.Adaptor();\n-\n-        class Adaptor implements Monitor\n-        {\n-            @Override\n-            public void init()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void noIndex()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void notValidIndex()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void rebuilding()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void rebuilt( long roughNodeCount )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void recoveryCleanupRegistered()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void recoveryCleanupStarted()\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void recoveryCleanupFinished( long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void recoveryCleanupClosed()\n-            {   // empty\n-            }\n+  interface Monitor\n+  {\n+    Monitor EMPTY = new Monitor.Adaptor();\n \n-            @Override\n-            public void recoveryCleanupFailed( Throwable throwable )\n-            {   // empty\n-            }\n-        }\n-\n-        void init();\n-\n-        void noIndex();\n-\n-        void notValidIndex();\n-\n-        void rebuilding();\n-\n-        void rebuilt( long roughNodeCount );\n-\n-        void recoveryCleanupRegistered();\n-\n-        void recoveryCleanupStarted();\n-\n-        void recoveryCleanupFinished( long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis );\n-\n-        void recoveryCleanupClosed();\n-\n-        void recoveryCleanupFailed( Throwable throwable );\n+    class Adaptor implements Monitor\n+    {\n+      @Override\n+      public void init()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void noIndex()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void notValidIndex()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void rebuilding()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void rebuilt(long roughNodeCount)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void recoveryCleanupRegistered()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void recoveryCleanupStarted()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void recoveryCleanupFinished(long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void recoveryCleanupClosed()\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void recoveryCleanupFailed(Throwable throwable)\n+      {   // empty\n+      }\n     }\n \n-    /**\n-     * From the point a {@link LabelScanReader} is created till it's {@link LabelScanReader#close() closed} the\n-     * contents it returns cannot change, i.e. it honors repeatable reads.\n-     *\n-     * @return a {@link LabelScanReader} capable of retrieving nodes for labels.\n-     */\n-    LabelScanReader newReader();\n-\n-    /**\n-     * Acquire a writer for updating the store.\n-     *\n-     * @return {@link LabelScanWriter} which can modify the {@link LabelScanStore}.\n-     */\n-    LabelScanWriter newWriter();\n-\n-    /**\n-     * Forces all changes to disk. Called at certain points from within Neo4j for example when\n-     * rotating the logical log. After completion of this call there cannot be any essential state that\n-     * hasn't been forced to disk.\n-     *\n-     * @throws UnderlyingStorageException if there was a problem forcing the state to persistent storage.\n-     */\n-    void force( IOLimiter limiter ) throws UnderlyingStorageException;\n-\n-    /**\n-     * Acquire a reader for all {@link NodeLabelRange node label} ranges.\n-     *\n-     * @return the {@link AllEntriesLabelScanReader reader}.\n-     */\n-    AllEntriesLabelScanReader allNodeLabelRanges();\n-\n-    ResourceIterator<File> snapshotStoreFiles();\n-\n-    /**\n-     * @return {@code true} if there's no data at all in this label scan store, otherwise {@code false}.\n-     * @throws IOException on I/O error.\n-     */\n-    boolean isEmpty() throws IOException;\n-\n-    /**\n-     * Initializes the store. After this has been called recovery updates can be processed.\n-     */\n-    @Override\n-    void init() throws IOException;\n-\n-    /**\n-     * Starts the store. After this has been called updates can be processed.\n-     */\n-    @Override\n-    void start() throws IOException;\n-\n-    @Override\n-    void stop();\n-\n-    /**\n-     * Shuts down the store and all resources acquired by it.\n-     */\n-    @Override\n-    void shutdown() throws IOException;\n-\n-    /**\n-     * Drops any persistent storage backing this store.\n-     *\n-     * @throws IOException on I/O error.\n-     */\n-    void drop() throws IOException;\n-\n-    /**\n-     * @return whether or not this index is read-only.\n-     */\n-    boolean isReadOnly();\n-\n-    /**\n-     * @return whether or not there's an existing store present for this label scan store.\n-     * @throws IOException on I/O error checking the presence of a store.\n-     */\n-    boolean hasStore();\n-\n-    /**\n-     * Returns the path to label scan store, might be a directory or a file depending on the implementation.\n-     *\n-     * @return the directory or file where the label scan store is persisted.\n-     */\n-    File getLabelScanStoreFile();\n+    void init();\n+\n+    void noIndex();\n+\n+    void notValidIndex();\n+\n+    void rebuilding();\n+\n+    void rebuilt(long roughNodeCount);\n+\n+    void recoveryCleanupRegistered();\n+\n+    void recoveryCleanupStarted();\n+\n+    void recoveryCleanupFinished(long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis);\n+\n+    void recoveryCleanupClosed();\n+\n+    void recoveryCleanupFailed(Throwable throwable);\n+  }\n+\n+  /**\n+   * From the point a {@link LabelScanReader} is created till it's {@link LabelScanReader#close() closed} the\n+   * contents it returns cannot change, i.e. it honors repeatable reads.\n+   *\n+   * @return a {@link LabelScanReader} capable of retrieving nodes for labels.\n+   */\n+  LabelScanReader newReader();\n+\n+  /**\n+   * Acquire a writer for updating the store.\n+   *\n+   * @return {@link LabelScanWriter} which can modify the {@link LabelScanStore}.\n+   */\n+  LabelScanWriter newWriter();\n+\n+  /**\n+   * Forces all changes to disk. Called at certain points from within Neo4j for example when\n+   * rotating the logical log. After completion of this call there cannot be any essential state that\n+   * hasn't been forced to disk.\n+   *\n+   * @throws UnderlyingStorageException if there was a problem forcing the state to persistent storage.\n+   */\n+  void force(IOLimiter limiter) throws UnderlyingStorageException;\n+\n+  /**\n+   * Acquire a reader for all {@link NodeLabelRange node label} ranges.\n+   *\n+   * @return the {@link AllEntriesLabelScanReader reader}.\n+   */\n+  AllEntriesLabelScanReader allNodeLabelRanges();\n+\n+  ResourceIterator<File> snapshotStoreFiles();\n+\n+  /**\n+   * @return {@code true} if there's no data at all in this label scan store, otherwise {@code false}.\n+   * @throws IOException on I/O error.\n+   */\n+  boolean isEmpty() throws IOException;\n+\n+  /**\n+   * Initializes the store. After this has been called recovery updates can be processed.\n+   */\n+  @Override\n+  void init() throws IOException;\n+\n+  /**\n+   * Starts the store. After this has been called updates can be processed.\n+   */\n+  @Override\n+  void start() throws IOException;\n+\n+  @Override\n+  void stop();\n+\n+  /**\n+   * Shuts down the store and all resources acquired by it.\n+   */\n+  @Override\n+  void shutdown() throws IOException;\n+\n+  /**\n+   * Drops any persistent storage backing this store.\n+   *\n+   * @throws IOException on I/O error.\n+   */\n+  void drop() throws IOException;\n+\n+  /**\n+   * @return whether or not this index is read-only.\n+   */\n+  boolean isReadOnly();\n+\n+  /**\n+   * @return whether or not there's an existing store present for this label scan store.\n+   * @throws IOException on I/O error checking the presence of a store.\n+   */\n+  boolean hasStore();\n+\n+  /**\n+   * Returns the path to label scan store, might be a directory or a file depending on the implementation.\n+   *\n+   * @return the directory or file where the label scan store is persisted.\n+   */\n+  File getLabelScanStoreFile();\n }\n",
            "diff_size": 207
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2942/LabelScanStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2942/LabelScanStore.java\nindex 7cc73d0a9de..4ed481e05a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2942/LabelScanStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2942/LabelScanStore.java\n@@ -42,52 +42,62 @@ public interface LabelScanStore extends Lifecycle\n         {\n             @Override\n             public void init()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void noIndex()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void notValidIndex()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void rebuilding()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void rebuilt( long roughNodeCount )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void recoveryCleanupRegistered()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void recoveryCleanupStarted()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void recoveryCleanupFinished( long numberOfPagesVisited, long numberOfCleanedCrashPointers, long durationMillis )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void recoveryCleanupClosed()\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void recoveryCleanupFailed( Throwable throwable )\n-            {   // empty\n+            {\n+    // empty\n             }\n         }\n \n@@ -196,4 +206,4 @@ public interface LabelScanStore extends Lifecycle\n      * @return the directory or file where the label scan store is persisted.\n      */\n     File getLabelScanStoreFile();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
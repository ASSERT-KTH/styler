{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1684",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "207",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1684/TreePrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1684/TreePrinter.java\nindex 84beb2fd6ec..07a8c812d8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1684/TreePrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1684/TreePrinter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.apache.commons.lang3.tuple.Pair;\n@@ -46,252 +47,249 @@ import static org.neo4j.io.pagecache.tracing.PageCacheTracer.NULL;\n /**\n  * Utility class for printing a {@link GBPTree}, either whole or sub-tree.\n  *\n- * @param <KEY> type of keys in the tree.\n+ * @param <KEY>   type of keys in the tree.\n  * @param <VALUE> type of values in the tree.\n  */\n public class TreePrinter<KEY, VALUE>\n {\n-    private final TreeNode<KEY,VALUE> node;\n-    private final Layout<KEY,VALUE> layout;\n-    private final long stableGeneration;\n-    private final long unstableGeneration;\n+  private final TreeNode<KEY, VALUE> node;\n+  private final Layout<KEY, VALUE> layout;\n+  private final long stableGeneration;\n+  private final long unstableGeneration;\n \n-    TreePrinter( TreeNode<KEY,VALUE> node, Layout<KEY,VALUE> layout, long stableGeneration, long unstableGeneration )\n-    {\n-        this.node = node;\n-        this.layout = layout;\n-        this.stableGeneration = stableGeneration;\n-        this.unstableGeneration = unstableGeneration;\n-    }\n+  TreePrinter(TreeNode<KEY, VALUE> node, Layout<KEY, VALUE> layout, long stableGeneration, long unstableGeneration)\n+  {\n+    this.node = node;\n+    this.layout = layout;\n+    this.stableGeneration = stableGeneration;\n+    this.unstableGeneration = unstableGeneration;\n+  }\n \n-    /**\n-     * Prints the header, that is tree state and meta information, about the tree present in the given {@code file}.\n-     *\n-     * @param fs {@link FileSystemAbstraction} where the {@code file} exists.\n-     * @param file {@link File} containing the tree to print header for.\n-     * @param out {@link PrintStream} to print at.\n-     * @throws IOException on I/O error.\n-     */\n-    public static void printHeader( FileSystemAbstraction fs, File file, PrintStream out ) throws IOException\n+  /**\n+   * Prints the header, that is tree state and meta information, about the tree present in the given {@code file}.\n+   *\n+   * @param fs   {@link FileSystemAbstraction} where the {@code file} exists.\n+   * @param file {@link File} containing the tree to print header for.\n+   * @param out  {@link PrintStream} to print at.\n+   * @throws IOException on I/O error.\n+   */\n+  public static void printHeader(FileSystemAbstraction fs, File file, PrintStream out) throws IOException\n+  {\n+    SingleFilePageSwapperFactory swapper = new SingleFilePageSwapperFactory();\n+    swapper.open(fs, EMPTY);\n+    PageCursorTracerSupplier cursorTracerSupplier = PageCursorTracerSupplier.NULL;\n+    try (PageCache pageCache = new MuninnPageCache(swapper, 100, NULL, cursorTracerSupplier,\n+        EmptyVersionContextSupplier.EMPTY))\n     {\n-        SingleFilePageSwapperFactory swapper = new SingleFilePageSwapperFactory();\n-        swapper.open( fs, EMPTY );\n-        PageCursorTracerSupplier cursorTracerSupplier = PageCursorTracerSupplier.NULL;\n-        try ( PageCache pageCache = new MuninnPageCache( swapper, 100, NULL, cursorTracerSupplier,\n-                EmptyVersionContextSupplier.EMPTY ) )\n-        {\n-            printHeader( pageCache, file, out );\n-        }\n+      printHeader(pageCache, file, out);\n     }\n+  }\n \n-    /**\n-     * Prints the header, that is tree state and meta information, about the tree present in the given {@code file}.\n-     *\n-     * @param pageCache {@link PageCache} able to map tree contained in {@code file}.\n-     * @param file {@link File} containing the tree to print header for.\n-     * @param out {@link PrintStream} to print at.\n-     * @throws IOException on I/O error.\n-     */\n-    public static void printHeader( PageCache pageCache, File file, PrintStream out ) throws IOException\n+  /**\n+   * Prints the header, that is tree state and meta information, about the tree present in the given {@code file}.\n+   *\n+   * @param pageCache {@link PageCache} able to map tree contained in {@code file}.\n+   * @param file      {@link File} containing the tree to print header for.\n+   * @param out       {@link PrintStream} to print at.\n+   * @throws IOException on I/O error.\n+   */\n+  public static void printHeader(PageCache pageCache, File file, PrintStream out) throws IOException\n+  {\n+    try (PagedFile pagedFile = pageCache.map(file, pageCache.pageSize(), StandardOpenOption.READ))\n     {\n-        try ( PagedFile pagedFile = pageCache.map( file, pageCache.pageSize(), StandardOpenOption.READ ) )\n-        {\n-            try ( PageCursor cursor = pagedFile.io( IdSpace.STATE_PAGE_A, PagedFile.PF_SHARED_READ_LOCK ) )\n-            {\n-                // TODO add printing of meta information here when that abstraction has been merged.\n-                printTreeState( cursor, out );\n-            }\n-        }\n+      try (PageCursor cursor = pagedFile.io(IdSpace.STATE_PAGE_A, PagedFile.PF_SHARED_READ_LOCK))\n+      {\n+        // TODO add printing of meta information here when that abstraction has been merged.\n+        printTreeState(cursor, out);\n+      }\n     }\n+  }\n+\n+  private static void printTreeState(PageCursor cursor, PrintStream out) throws IOException\n+  {\n+    Pair<TreeState, TreeState> statePair = TreeStatePair.readStatePages(\n+        cursor, IdSpace.STATE_PAGE_A, IdSpace.STATE_PAGE_B);\n+    out.println(\"StateA: \" + statePair.getLeft());\n+    out.println(\"StateB: \" + statePair.getRight());\n+  }\n \n-    private static void printTreeState( PageCursor cursor, PrintStream out ) throws IOException\n+  /**\n+   * Prints a {@link GBPTree} in human readable form, very useful for debugging.\n+   * Let the passed in {@code cursor} point to the root or sub-tree (internal node) of what to print.\n+   * Will print sub-tree from that point. Leaves cursor at same page as when called. No guarantees on offset.\n+   *\n+   * @param cursor        {@link PageCursor} placed at root of tree or sub-tree.\n+   * @param writeCursor   Currently active {@link PageCursor write cursor} in tree.\n+   * @param out           target to print tree at.\n+   * @param printPosition whether or not to include positional (slot number) information.\n+   * @param printState    whether or not to also print state pages\n+   * @param printHeader   whether or not to also print header (type, generation, keyCount) of every node\n+   * @throws IOException on page cache access error.\n+   */\n+  void printTree(PageCursor cursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n+                 boolean printState, boolean printHeader) throws IOException\n+  {\n+    if (printState)\n     {\n-        Pair<TreeState,TreeState> statePair = TreeStatePair.readStatePages(\n-                cursor, IdSpace.STATE_PAGE_A, IdSpace.STATE_PAGE_B );\n-        out.println( \"StateA: \" + statePair.getLeft() );\n-        out.println( \"StateB: \" + statePair.getRight() );\n+      long currentPage = cursor.getCurrentPageId();\n+      printTreeState(cursor, out);\n+      TreeNode.goTo(cursor, \"back to tree node from reading state\", currentPage);\n     }\n+    assertOnTreeNode(select(cursor, writeCursor));\n \n-    /**\n-     * Prints a {@link GBPTree} in human readable form, very useful for debugging.\n-     * Let the passed in {@code cursor} point to the root or sub-tree (internal node) of what to print.\n-     * Will print sub-tree from that point. Leaves cursor at same page as when called. No guarantees on offset.\n-     *\n-     * @param cursor {@link PageCursor} placed at root of tree or sub-tree.\n-     * @param writeCursor Currently active {@link PageCursor write cursor} in tree.\n-     * @param out target to print tree at.\n-     * @param printPosition whether or not to include positional (slot number) information.\n-     * @param printState whether or not to also print state pages\n-     * @param printHeader whether or not to also print header (type, generation, keyCount) of every node\n-     * @throws IOException on page cache access error.\n-     */\n-    void printTree( PageCursor cursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n-            boolean printState, boolean printHeader ) throws IOException\n+    // Traverse the tree\n+    int level = 0;\n+    do\n     {\n-        if ( printState )\n-        {\n-            long currentPage = cursor.getCurrentPageId();\n-            printTreeState( cursor, out );\n-            TreeNode.goTo( cursor, \"back to tree node from reading state\", currentPage );\n-        }\n-        assertOnTreeNode( select( cursor, writeCursor ) );\n+      // One level at the time\n+      out.println(\"Level \" + level++);\n+      long leftmostSibling = cursor.getCurrentPageId();\n \n-        // Traverse the tree\n-        int level = 0;\n-        do\n-        {\n-            // One level at the time\n-            out.println( \"Level \" + level++ );\n-            long leftmostSibling = cursor.getCurrentPageId();\n+      // Go right through all siblings\n+      printLevel(cursor, writeCursor, out, printValues, printPosition, printHeader);\n \n-            // Go right through all siblings\n-            printLevel( cursor, writeCursor, out, printValues, printPosition, printHeader );\n+      // Then go back to the left-most node on this level\n+      TreeNode.goTo(cursor, \"back\", leftmostSibling);\n+    }\n+    // And continue down to next level if this level was an internal level\n+    while (goToLeftmostChild(cursor, writeCursor));\n+  }\n \n-            // Then go back to the left-most node on this level\n-            TreeNode.goTo( cursor, \"back\", leftmostSibling );\n-        }\n-        // And continue down to next level if this level was an internal level\n-        while ( goToLeftmostChild( cursor, writeCursor ) );\n+  void printTreeNode(PageCursor cursor, PrintStream out, boolean printValues, boolean printPosition,\n+                     boolean printHeader) throws IOException\n+  {\n+    boolean isLeaf;\n+    int keyCount;\n+    do\n+    {\n+      isLeaf = TreeNode.isLeaf(cursor);\n+      keyCount = TreeNode.keyCount(cursor);\n+      if (!node.reasonableKeyCount(keyCount))\n+      {\n+        cursor.setCursorException(\"Unexpected keyCount \" + keyCount);\n+      }\n     }\n+    while (cursor.shouldRetry());\n \n-    void printTreeNode( PageCursor cursor, PrintStream out, boolean printValues, boolean printPosition,\n-            boolean printHeader ) throws IOException\n+    if (printHeader)\n     {\n-        boolean isLeaf;\n-        int keyCount;\n-        do\n-        {\n-            isLeaf = TreeNode.isLeaf( cursor );\n-            keyCount = TreeNode.keyCount( cursor );\n-            if ( !node.reasonableKeyCount( keyCount ) )\n-            {\n-                cursor.setCursorException( \"Unexpected keyCount \" + keyCount );\n-            }\n-        }\n-        while ( cursor.shouldRetry() );\n+      //[TYPE][GEN][KEYCOUNT] ([RIGHTSIBLING][LEFTSIBLING][SUCCESSOR]))\n+      long generation = -1;\n+      do\n+      {\n+        generation = TreeNode.generation(cursor);\n \n-        if ( printHeader )\n+      }\n+      while (cursor.shouldRetry());\n+      String treeNodeType = isLeaf ? \"leaf\" : \"internal\";\n+      out.print(format(\"{%d,%s,generation=%d,keyCount=%d}\",\n+          cursor.getCurrentPageId(), treeNodeType, generation, keyCount));\n+    } else\n+    {\n+      out.print(\"{\" + cursor.getCurrentPageId() + \"} \");\n+    }\n+    KEY key = layout.newKey();\n+    VALUE value = layout.newValue();\n+    for (int i = 0; i < keyCount; i++)\n+    {\n+      long child = -1;\n+      do\n+      {\n+        node.keyAt(cursor, key, i, isLeaf ? LEAF : INTERNAL);\n+        if (isLeaf)\n         {\n-            //[TYPE][GEN][KEYCOUNT] ([RIGHTSIBLING][LEFTSIBLING][SUCCESSOR]))\n-            long generation = -1;\n-            do\n-            {\n-                generation = TreeNode.generation( cursor );\n-\n-            }\n-            while ( cursor.shouldRetry() );\n-            String treeNodeType = isLeaf ? \"leaf\" : \"internal\";\n-            out.print( format( \"{%d,%s,generation=%d,keyCount=%d}\",\n-                    cursor.getCurrentPageId(), treeNodeType, generation, keyCount ) );\n-        }\n-        else\n+          node.valueAt(cursor, value, i);\n+        } else\n         {\n-            out.print( \"{\" + cursor.getCurrentPageId() + \"} \" );\n+          child = pointer(node.childAt(cursor, i, stableGeneration, unstableGeneration));\n         }\n-        KEY key = layout.newKey();\n-        VALUE value = layout.newValue();\n-        for ( int i = 0; i < keyCount; i++ )\n-        {\n-            long child = -1;\n-            do\n-            {\n-                node.keyAt( cursor, key, i, isLeaf ? LEAF : INTERNAL );\n-                if ( isLeaf )\n-                {\n-                    node.valueAt( cursor, value, i );\n-                }\n-                else\n-                {\n-                    child = pointer( node.childAt( cursor, i, stableGeneration, unstableGeneration ) );\n-                }\n-            }\n-            while ( cursor.shouldRetry() );\n+      }\n+      while (cursor.shouldRetry());\n \n-            if ( printPosition )\n-            {\n-                out.print( \"#\" + i + \" \" );\n-            }\n+      if (printPosition)\n+      {\n+        out.print(\"#\" + i + \" \");\n+      }\n \n-            if ( isLeaf )\n-            {\n-                out.print( key );\n-                if ( printValues )\n-                {\n-                    out.print( \"=\" + value );\n-                }\n-            }\n-            else\n-            {\n-                out.print( \"/\" + child + \"\\\\ [\" + key + \"]\" );\n-            }\n-            out.print( \" \" );\n-        }\n-        if ( !isLeaf )\n+      if (isLeaf)\n+      {\n+        out.print(key);\n+        if (printValues)\n         {\n-            long child;\n-            do\n-            {\n-                child = pointer( node.childAt( cursor, keyCount, stableGeneration, unstableGeneration ) );\n-            }\n-            while ( cursor.shouldRetry() );\n-\n-            if ( printPosition )\n-            {\n-                out.print( \"#\" + keyCount + \" \" );\n-            }\n-            out.print( \"/\" + child + \"\\\\\" );\n+          out.print(\"=\" + value);\n         }\n-        out.println();\n+      } else\n+      {\n+        out.print(\"/\" + child + \"\\\\ [\" + key + \"]\");\n+      }\n+      out.print(\" \");\n     }\n-\n-    private boolean goToLeftmostChild( PageCursor readCursor, PageCursor writeCursor ) throws IOException\n+    if (!isLeaf)\n     {\n-        boolean isInternal;\n-        long leftmostSibling = -1;\n-        PageCursor cursor = select( readCursor, writeCursor );\n-        do\n-        {\n-            isInternal = TreeNode.isInternal( cursor );\n-            if ( isInternal )\n-            {\n-                leftmostSibling = node.childAt( cursor, 0, stableGeneration, unstableGeneration );\n-            }\n-        }\n-        while ( cursor.shouldRetry() );\n+      long child;\n+      do\n+      {\n+        child = pointer(node.childAt(cursor, keyCount, stableGeneration, unstableGeneration));\n+      }\n+      while (cursor.shouldRetry());\n \n-        if ( isInternal )\n-        {\n-            TreeNode.goTo( readCursor, \"child\", leftmostSibling );\n-        }\n-        return isInternal;\n+      if (printPosition)\n+      {\n+        out.print(\"#\" + keyCount + \" \");\n+      }\n+      out.print(\"/\" + child + \"\\\\\");\n     }\n+    out.println();\n+  }\n \n-    private void printLevel( PageCursor readCursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n-            boolean printHeader ) throws IOException\n+  private boolean goToLeftmostChild(PageCursor readCursor, PageCursor writeCursor) throws IOException\n+  {\n+    boolean isInternal;\n+    long leftmostSibling = -1;\n+    PageCursor cursor = select(readCursor, writeCursor);\n+    do\n     {\n-        long rightSibling = -1;\n-        do\n-        {\n-            PageCursor cursor = select( readCursor, writeCursor );\n-            printTreeNode( cursor, out, printValues, printPosition, printHeader );\n-\n-            do\n-            {\n-                rightSibling = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n-            }\n-            while ( cursor.shouldRetry() );\n+      isInternal = TreeNode.isInternal(cursor);\n+      if (isInternal)\n+      {\n+        leftmostSibling = node.childAt(cursor, 0, stableGeneration, unstableGeneration);\n+      }\n+    }\n+    while (cursor.shouldRetry());\n \n-            if ( TreeNode.isNode( rightSibling ) )\n-            {\n-                TreeNode.goTo( readCursor, \"right sibling\", rightSibling );\n-            }\n-        }\n-        while ( TreeNode.isNode( rightSibling ) );\n+    if (isInternal)\n+    {\n+      TreeNode.goTo(readCursor, \"child\", leftmostSibling);\n     }\n+    return isInternal;\n+  }\n \n-    private static PageCursor select( PageCursor readCursor, PageCursor writeCursor )\n+  private void printLevel(PageCursor readCursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n+                          boolean printHeader) throws IOException\n+  {\n+    long rightSibling = -1;\n+    do\n     {\n-        return writeCursor == null ? readCursor :\n-               readCursor.getCurrentPageId() == writeCursor.getCurrentPageId() ? writeCursor : readCursor;\n+      PageCursor cursor = select(readCursor, writeCursor);\n+      printTreeNode(cursor, out, printValues, printPosition, printHeader);\n+\n+      do\n+      {\n+        rightSibling = TreeNode.rightSibling(cursor, stableGeneration, unstableGeneration);\n+      }\n+      while (cursor.shouldRetry());\n+\n+      if (TreeNode.isNode(rightSibling))\n+      {\n+        TreeNode.goTo(readCursor, \"right sibling\", rightSibling);\n+      }\n     }\n+    while (TreeNode.isNode(rightSibling));\n+  }\n+\n+  private static PageCursor select(PageCursor readCursor, PageCursor writeCursor)\n+  {\n+    return writeCursor == null ? readCursor :\n+        readCursor.getCurrentPageId() == writeCursor.getCurrentPageId() ? writeCursor : readCursor;\n+  }\n }\n",
            "diff_size": 308
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1684/TreePrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1684/TreePrinter.java\nindex 84beb2fd6ec..531edf6a48c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1684/TreePrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1684/TreePrinter.java\n@@ -106,9 +106,8 @@ public class TreePrinter<KEY, VALUE>\n \n     private static void printTreeState( PageCursor cursor, PrintStream out ) throws IOException\n     {\n-        Pair<TreeState,TreeState> statePair = TreeStatePair.readStatePages(\n-                cursor, IdSpace.STATE_PAGE_A, IdSpace.STATE_PAGE_B );\n-        out.println( \"StateA: \" + statePair.getLeft() );\n+        Pair<TreeState,TreeState> statePair = TreeStatePair.readStatePages( cursor, IdSpace.STATE_PAGE_A, IdSpace.STATE_PAGE_B );\n+out.println( \"StateA: \" + statePair.getLeft() );\n         out.println( \"StateB: \" + statePair.getRight() );\n     }\n \n@@ -127,14 +126,15 @@ public class TreePrinter<KEY, VALUE>\n      */\n     void printTree( PageCursor cursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n             boolean printState, boolean printHeader ) throws IOException\n-    {\n+{\n         if ( printState )\n         {\n             long currentPage = cursor.getCurrentPageId();\n             printTreeState( cursor, out );\n             TreeNode.goTo( cursor, \"back to tree node from reading state\", currentPage );\n         }\n-        assertOnTreeNode( select( cursor, writeCursor ) );\n+\n+assertOnTreeNode( select( cursor, writeCursor ) );\n \n         // Traverse the tree\n         int level = 0;\n@@ -156,7 +156,7 @@ public class TreePrinter<KEY, VALUE>\n \n     void printTreeNode( PageCursor cursor, PrintStream out, boolean printValues, boolean printPosition,\n             boolean printHeader ) throws IOException\n-    {\n+{\n         boolean isLeaf;\n         int keyCount;\n         do\n@@ -169,16 +169,14 @@ public class TreePrinter<KEY, VALUE>\n             }\n         }\n         while ( cursor.shouldRetry() );\n-\n-        if ( printHeader )\n+if ( printHeader )\n         {\n             //[TYPE][GEN][KEYCOUNT] ([RIGHTSIBLING][LEFTSIBLING][SUCCESSOR]))\n             long generation = -1;\n             do\n             {\n                 generation = TreeNode.generation( cursor );\n-\n-            }\n+    }\n             while ( cursor.shouldRetry() );\n             String treeNodeType = isLeaf ? \"leaf\" : \"internal\";\n             out.print( format( \"{%d,%s,generation=%d,keyCount=%d}\",\n@@ -188,7 +186,8 @@ public class TreePrinter<KEY, VALUE>\n         {\n             out.print( \"{\" + cursor.getCurrentPageId() + \"} \" );\n         }\n-        KEY key = layout.newKey();\n+\n+KEY key = layout.newKey();\n         VALUE value = layout.newValue();\n         for ( int i = 0; i < keyCount; i++ )\n         {\n@@ -206,8 +205,7 @@ public class TreePrinter<KEY, VALUE>\n                 }\n             }\n             while ( cursor.shouldRetry() );\n-\n-            if ( printPosition )\n+if ( printPosition )\n             {\n                 out.print( \"#\" + i + \" \" );\n             }\n@@ -226,7 +224,8 @@ public class TreePrinter<KEY, VALUE>\n             }\n             out.print( \" \" );\n         }\n-        if ( !isLeaf )\n+\n+if ( !isLeaf )\n         {\n             long child;\n             do\n@@ -234,8 +233,7 @@ public class TreePrinter<KEY, VALUE>\n                 child = pointer( node.childAt( cursor, keyCount, stableGeneration, unstableGeneration ) );\n             }\n             while ( cursor.shouldRetry() );\n-\n-            if ( printPosition )\n+if ( printPosition )\n             {\n                 out.print( \"#\" + keyCount + \" \" );\n             }\n@@ -258,17 +256,17 @@ public class TreePrinter<KEY, VALUE>\n             }\n         }\n         while ( cursor.shouldRetry() );\n-\n-        if ( isInternal )\n+if ( isInternal )\n         {\n             TreeNode.goTo( readCursor, \"child\", leftmostSibling );\n         }\n-        return isInternal;\n+\n+return isInternal;\n     }\n \n     private void printLevel( PageCursor readCursor, PageCursor writeCursor, PrintStream out, boolean printValues, boolean printPosition,\n             boolean printHeader ) throws IOException\n-    {\n+{\n         long rightSibling = -1;\n         do\n         {\n@@ -280,8 +278,7 @@ public class TreePrinter<KEY, VALUE>\n                 rightSibling = TreeNode.rightSibling( cursor, stableGeneration, unstableGeneration );\n             }\n             while ( cursor.shouldRetry() );\n-\n-            if ( TreeNode.isNode( rightSibling ) )\n+if ( TreeNode.isNode( rightSibling ) )\n             {\n                 TreeNode.goTo( readCursor, \"right sibling\", rightSibling );\n             }\n@@ -291,7 +288,6 @@ public class TreePrinter<KEY, VALUE>\n \n     private static PageCursor select( PageCursor readCursor, PageCursor writeCursor )\n     {\n-        return writeCursor == null ? readCursor :\n-               readCursor.getCurrentPageId() == writeCursor.getCurrentPageId() ? writeCursor : readCursor;\n+        return writeCursor == null ? readCursor : readCursor.getCurrentPageId() == writeCursor.getCurrentPageId() ? writeCursor : readCursor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
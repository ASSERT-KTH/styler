{
    "project_name": "graphfoundation-ongdb",
    "error_id": "231",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/231/AbstractIndexPartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/231/AbstractIndexPartition.java\nindex 2bace39da2e..1ebcaf406e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/231/AbstractIndexPartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/231/AbstractIndexPartition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.partition;\n \n import org.apache.lucene.index.IndexWriter;\n@@ -36,53 +37,55 @@ import org.neo4j.graphdb.ResourceIterator;\n  */\n public abstract class AbstractIndexPartition implements Closeable\n {\n-    protected final Directory directory;\n-    protected final File partitionFolder;\n+  protected final Directory directory;\n+  protected final File partitionFolder;\n \n-    public AbstractIndexPartition( File partitionFolder, Directory directory )\n-    {\n-        this.partitionFolder = partitionFolder;\n-        this.directory = directory;\n-    }\n+  public AbstractIndexPartition(File partitionFolder, Directory directory)\n+  {\n+    this.partitionFolder = partitionFolder;\n+    this.directory = directory;\n+  }\n \n-    /**\n-     * Retrieve index partition directory\n-     * @return partition directory\n-     */\n-    public Directory getDirectory()\n-    {\n-        return directory;\n-    }\n+  /**\n+   * Retrieve index partition directory\n+   *\n+   * @return partition directory\n+   */\n+  public Directory getDirectory()\n+  {\n+    return directory;\n+  }\n \n-    /**\n-     * Retrieve index partition writer\n-     * @return partition writer\n-     */\n-    public abstract IndexWriter getIndexWriter();\n+  /**\n+   * Retrieve index partition writer\n+   *\n+   * @return partition writer\n+   */\n+  public abstract IndexWriter getIndexWriter();\n \n-    /**\n-     * Return searcher for requested partition.\n-     * There is no tracking of acquired searchers, so the expectation is that callers will call close on acquired\n-     * searchers to release resources.\n-     *\n-     * @return partition searcher\n-     * @throws IOException if exception happened during searcher acquisition\n-     */\n-    public abstract PartitionSearcher acquireSearcher() throws IOException;\n+  /**\n+   * Return searcher for requested partition.\n+   * There is no tracking of acquired searchers, so the expectation is that callers will call close on acquired\n+   * searchers to release resources.\n+   *\n+   * @return partition searcher\n+   * @throws IOException if exception happened during searcher acquisition\n+   */\n+  public abstract PartitionSearcher acquireSearcher() throws IOException;\n \n-    /**\n-     * Refresh partition to make newly inserted data visible for readers.\n-     *\n-     * @throws IOException if refreshing fails.\n-     */\n-    public abstract void maybeRefreshBlocking() throws IOException;\n+  /**\n+   * Refresh partition to make newly inserted data visible for readers.\n+   *\n+   * @throws IOException if refreshing fails.\n+   */\n+  public abstract void maybeRefreshBlocking() throws IOException;\n \n-    /**\n-     * Retrieve list of consistent Lucene index files for this partition.\n-     *\n-     * @return the iterator over index files.\n-     * @throws IOException if any IO operation fails.\n-     */\n-    public abstract ResourceIterator<File> snapshot() throws IOException;\n+  /**\n+   * Retrieve list of consistent Lucene index files for this partition.\n+   *\n+   * @return the iterator over index files.\n+   * @throws IOException if any IO operation fails.\n+   */\n+  public abstract ResourceIterator<File> snapshot() throws IOException;\n \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/231/AbstractIndexPartition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/231/AbstractIndexPartition.java\nindex 2bace39da2e..f3050e5e575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/231/AbstractIndexPartition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/231/AbstractIndexPartition.java\n@@ -84,5 +84,4 @@ public abstract class AbstractIndexPartition implements Closeable\n      * @throws IOException if any IO operation fails.\n      */\n     public abstract ResourceIterator<File> snapshot() throws IOException;\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
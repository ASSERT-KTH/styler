{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1014",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1014/StatUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1014/StatUtil.java\nindex 892acf5a959..ecfea520638 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1014/StatUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1014/StatUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.helper;\n \n import org.neo4j.logging.Log;\n@@ -24,144 +25,143 @@ import org.neo4j.logging.Log;\n import static java.lang.String.format;\n import static org.neo4j.logging.FormattedLogProvider.toOutputStream;\n \n-@SuppressWarnings( \"unused\" ) // for easy debugging, leave it\n+@SuppressWarnings(\"unused\") // for easy debugging, leave it\n public class StatUtil\n {\n-    public static class StatContext\n+  public static class StatContext\n+  {\n+    private static final int N_BUCKETS = 10; // values >= Math.pow( 10, N_BUCKETS-1 ) all go into the last bucket\n+\n+    private final String name;\n+    private final Log log;\n+    private final long printEvery;\n+    private final boolean clearAfterPrint;\n+    private BasicStats[] bucket = new BasicStats[N_BUCKETS];\n+    private long totalCount;\n+\n+    private StatContext(String name, Log log, long printEvery, boolean clearAfterPrint)\n     {\n-        private static final int N_BUCKETS = 10; // values >= Math.pow( 10, N_BUCKETS-1 ) all go into the last bucket\n-\n-        private final String name;\n-        private final Log log;\n-        private final long printEvery;\n-        private final boolean clearAfterPrint;\n-        private BasicStats[] bucket = new BasicStats[N_BUCKETS];\n-        private long totalCount;\n-\n-        private StatContext( String name, Log log, long printEvery, boolean clearAfterPrint )\n-        {\n-            this.name = name;\n-            this.log = log;\n-            this.printEvery = printEvery;\n-            this.clearAfterPrint = clearAfterPrint;\n-            clear();\n-        }\n-\n-        public synchronized void clear()\n-        {\n-            for ( int i = 0; i < N_BUCKETS; i++ )\n-            {\n-                bucket[i] = new BasicStats();\n-            }\n-            totalCount = 0;\n-        }\n+      this.name = name;\n+      this.log = log;\n+      this.printEvery = printEvery;\n+      this.clearAfterPrint = clearAfterPrint;\n+      clear();\n+    }\n \n-        public void collect( double value )\n-        {\n-            int bucketIndex = bucketFor( value );\n-\n-            synchronized ( this )\n-            {\n-                totalCount++;\n-                bucket[bucketIndex].collect( value );\n-\n-                if ( totalCount % printEvery == 0 )\n-                {\n-                    print();\n-                }\n-            }\n-        }\n+    public synchronized void clear()\n+    {\n+      for (int i = 0; i < N_BUCKETS; i++)\n+      {\n+        bucket[i] = new BasicStats();\n+      }\n+      totalCount = 0;\n+    }\n \n-        private int bucketFor( double value )\n-        {\n-            int bucketIndex;\n-            if ( value <= 0 )\n-            {\n-                // we do not have buckets for negative values, we assume user doesn't measure such things\n-                // however, if they do, it will all be collected in bucket 0\n-                bucketIndex = 0;\n-            }\n-            else\n-            {\n-                bucketIndex = (int) Math.log10( value );\n-                bucketIndex = Math.min( bucketIndex, N_BUCKETS - 1 );\n-            }\n-            return bucketIndex;\n-        }\n+    public void collect(double value)\n+    {\n+      int bucketIndex = bucketFor(value);\n \n-        public TimingContext time()\n-        {\n-            return new TimingContext( this );\n-        }\n+      synchronized (this)\n+      {\n+        totalCount++;\n+        bucket[bucketIndex].collect(value);\n \n-        public synchronized void print()\n+        if (totalCount % printEvery == 0)\n         {\n-            for ( BasicStats stats : bucket )\n-            {\n-                if ( stats.count > 0 )\n-                {\n-                    log.info( format( \"%s%s\", name, stats ) );\n-                }\n-            }\n-\n-            if ( clearAfterPrint )\n-            {\n-                clear();\n-            }\n+          print();\n         }\n+      }\n     }\n \n-    private StatUtil()\n+    private int bucketFor(double value)\n     {\n+      int bucketIndex;\n+      if (value <= 0)\n+      {\n+        // we do not have buckets for negative values, we assume user doesn't measure such things\n+        // however, if they do, it will all be collected in bucket 0\n+        bucketIndex = 0;\n+      } else\n+      {\n+        bucketIndex = (int) Math.log10(value);\n+        bucketIndex = Math.min(bucketIndex, N_BUCKETS - 1);\n+      }\n+      return bucketIndex;\n     }\n \n-    public static synchronized StatContext create( String name, long printEvery, boolean clearAfterPrint )\n+    public TimingContext time()\n     {\n-        return create( name, toOutputStream( System.out ).getLog( name ), printEvery, clearAfterPrint );\n+      return new TimingContext(this);\n     }\n \n-    public static synchronized StatContext create( String name, Log log, long printEvery, boolean clearAfterPrint )\n+    public synchronized void print()\n     {\n-        return new StatContext( name, log, printEvery, clearAfterPrint );\n+      for (BasicStats stats : bucket)\n+      {\n+        if (stats.count > 0)\n+        {\n+          log.info(format(\"%s%s\", name, stats));\n+        }\n+      }\n+\n+      if (clearAfterPrint)\n+      {\n+        clear();\n+      }\n     }\n+  }\n \n-    public static class TimingContext\n-    {\n-        private final StatContext context;\n-        private final long startTime = System.currentTimeMillis();\n+  private StatUtil()\n+  {\n+  }\n \n-        TimingContext( StatContext context )\n-        {\n-            this.context = context;\n-        }\n+  public static synchronized StatContext create(String name, long printEvery, boolean clearAfterPrint)\n+  {\n+    return create(name, toOutputStream(System.out).getLog(name), printEvery, clearAfterPrint);\n+  }\n \n-        public void end()\n-        {\n-            context.collect( System.currentTimeMillis() - startTime );\n-        }\n+  public static synchronized StatContext create(String name, Log log, long printEvery, boolean clearAfterPrint)\n+  {\n+    return new StatContext(name, log, printEvery, clearAfterPrint);\n+  }\n+\n+  public static class TimingContext\n+  {\n+    private final StatContext context;\n+    private final long startTime = System.currentTimeMillis();\n+\n+    TimingContext(StatContext context)\n+    {\n+      this.context = context;\n     }\n \n-    private static class BasicStats\n+    public void end()\n     {\n-        private Double min;\n-        private Double max;\n+      context.collect(System.currentTimeMillis() - startTime);\n+    }\n+  }\n \n-        private Double avg = 0.;\n-        private long count;\n+  private static class BasicStats\n+  {\n+    private Double min;\n+    private Double max;\n \n-        void collect( double val )\n-        {\n-            count++;\n-            avg = avg + (val - avg) / count;\n+    private Double avg = 0.;\n+    private long count;\n \n-            min = min == null ? val : Math.min( min, val );\n-            max = max == null ? val : Math.max( max, val );\n-        }\n+    void collect(double val)\n+    {\n+      count++;\n+      avg = avg + (val - avg) / count;\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"{min=%s, max=%s, avg=%s, count=%d}\", min, max, avg, count );\n-        }\n+      min = min == null ? val : Math.min(min, val);\n+      max = max == null ? val : Math.max(max, val);\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"{min=%s, max=%s, avg=%s, count=%d}\", min, max, avg, count);\n     }\n+  }\n }\n",
            "diff_size": 164
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "33",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1014/StatUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1014/StatUtil.java\nindex 892acf5a959..23c70ebca75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1014/StatUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1014/StatUtil.java\n@@ -53,7 +53,8 @@ public class StatUtil\n             {\n                 bucket[i] = new BasicStats();\n             }\n-            totalCount = 0;\n+\n+totalCount = 0;\n         }\n \n         public void collect( double value )\n@@ -64,8 +65,7 @@ public class StatUtil\n             {\n                 totalCount++;\n                 bucket[bucketIndex].collect( value );\n-\n-                if ( totalCount % printEvery == 0 )\n+if ( totalCount % printEvery == 0 )\n                 {\n                     print();\n                 }\n@@ -83,10 +83,11 @@ public class StatUtil\n             }\n             else\n             {\n-                bucketIndex = (int) Math.log10( value );\n+                bucketIndex = ( int) Math.log10( value );\n                 bucketIndex = Math.min( bucketIndex, N_BUCKETS - 1 );\n             }\n-            return bucketIndex;\n+\n+return bucketIndex;\n         }\n \n         public TimingContext time()\n@@ -98,7 +99,7 @@ public class StatUtil\n         {\n             for ( BasicStats stats : bucket )\n             {\n-                if ( stats.count > 0 )\n+                if ( stats.count> 0 )\n                 {\n                     log.info( format( \"%s%s\", name, stats ) );\n                 }\n@@ -152,7 +153,7 @@ public class StatUtil\n         void collect( double val )\n         {\n             count++;\n-            avg = avg + (val - avg) / count;\n+            avg = avg + ( val - avg) / count;\n \n             min = min == null ? val : Math.min( min, val );\n             max = max == null ? val : Math.max( max, val );\n@@ -164,4 +165,4 @@ public class StatUtil\n             return format( \"{min=%s, max=%s, avg=%s, count=%d}\", min, max, avg, count );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "twilio-twilio-java",
    "error_id": "739",
    "information": {
        "errors": [
            {
                "line": "153",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/739/SinkReader.java\nindex 112cb6cd38e..47c64e5b488 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/739/SinkReader.java\n@@ -150,7 +150,7 @@ public class SinkReader extends Reader<Sink> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/739/SinkReader.java\nindex 112cb6cd38e..a0b9fb5c179 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/739/SinkReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.events.v1;\n@@ -150,7 +150,7 @@ public class SinkReader extends Reader<Sink> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/739/SinkReader.java\nindex 112cb6cd38e..85da1330faf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/739/SinkReader.java\n@@ -23,6 +23,7 @@ import com.twilio.rest.Domains;\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class SinkReader extends Reader<Sink> {\n     private Boolean inUse;\n     private String status;\n@@ -34,6 +35,7 @@ public class SinkReader extends Reader<Sink> {\n      * @param inUse A boolean to return sinks used/not used by a subscription.\n      * @return this\n      */\n+\n     public SinkReader setInUse(final Boolean inUse) {\n         this.inUse = inUse;\n         return this;\n@@ -46,6 +48,8 @@ public class SinkReader extends Reader<Sink> {\n      * @param status A string to filter sinks by status.\n      * @return this\n      */\n+\n+\n     public SinkReader setStatus(final String status) {\n         this.status = status;\n         return this;\n@@ -57,6 +61,7 @@ public class SinkReader extends Reader<Sink> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sink ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Sink> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -68,14 +73,11 @@ public class SinkReader extends Reader<Sink> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sink ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Sink> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.EVENTS.toString(),\n-            \"/v1/Sinks\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.EVENTS.toString(), \"/v1/Sinks\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -88,14 +90,12 @@ public class SinkReader extends Reader<Sink> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Sink ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Sink> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Sink> getPage(final String targetUrl,\n+                              final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -106,13 +106,11 @@ public class SinkReader extends Reader<Sink> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Sink> nextPage(final Page<Sink> page,\n                                final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.EVENTS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.EVENTS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -123,13 +121,11 @@ public class SinkReader extends Reader<Sink> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Sink> previousPage(final Page<Sink> page,\n                                    final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.EVENTS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.EVENTS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -140,9 +136,11 @@ public class SinkReader extends Reader<Sink> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Sink> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Sink> pageForRequest(final TwilioRestClient client,\n+                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Sink read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -150,15 +148,11 @@ public class SinkReader extends Reader<Sink> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"sinks\",\n-            response.getContent(),\n-            Sink.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"sinks\", response.getContent(), Sink.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -166,6 +160,8 @@ public class SinkReader extends Reader<Sink> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (inUse != null) {\n             request.addQueryParam(\"InUse\", inUse.toString());\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/739/SinkReader.java\nindex 112cb6cd38e..47c64e5b488 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/739/SinkReader.java\n@@ -150,7 +150,7 @@ public class SinkReader extends Reader<Sink> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/739/SinkReader.java\nindex 112cb6cd38e..99236c17646 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/739/SinkReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/739/SinkReader.java\n@@ -150,7 +150,8 @@ public class SinkReader extends Reader<Sink> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "520",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/520/ContextFieldVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/520/ContextFieldVisitor.java\nindex 8e9cb42db7f..e5b501430ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/520/ContextFieldVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/520/ContextFieldVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.util.Arrays;\n@@ -49,109 +50,109 @@ import org.neo4j.tooling.procedure.messages.ContextFieldWarning;\n \n import static org.neo4j.tooling.procedure.CompilerOptions.IGNORE_CONTEXT_WARNINGS_OPTION;\n \n-class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n-    private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>(\n-            Arrays.asList( GraphDatabaseService.class.getName(), Log.class.getName(), TerminationGuard.class.getName(),\n-                    SecurityContext.class.getName(), ProcedureTransaction.class.getName() ) );\n-    private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>(\n-            Arrays.asList( GraphDatabaseAPI.class.getName(), KernelTransaction.class.getName(),\n-                    DependencyResolver.class.getName(), UserManager.class.getName(),\n-                    // the following classes are not in the compiler classpath\n-                    \"org.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\",\n-                    \"org.neo4j.server.security.enterprise.log.SecurityLog\" ) );\n-\n-    private final Elements elements;\n-    private final Types types;\n-    private final boolean ignoresWarnings;\n-\n-    ContextFieldVisitor( Types types, Elements elements, boolean ignoresWarnings )\n+  private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>(\n+      Arrays.asList(GraphDatabaseService.class.getName(), Log.class.getName(), TerminationGuard.class.getName(),\n+          SecurityContext.class.getName(), ProcedureTransaction.class.getName()));\n+  private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>(\n+      Arrays.asList(GraphDatabaseAPI.class.getName(), KernelTransaction.class.getName(),\n+          DependencyResolver.class.getName(), UserManager.class.getName(),\n+          // the following classes are not in the compiler classpath\n+          \"org.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\",\n+          \"org.neo4j.server.security.enterprise.log.SecurityLog\"));\n+\n+  private final Elements elements;\n+  private final Types types;\n+  private final boolean ignoresWarnings;\n+\n+  ContextFieldVisitor(Types types, Elements elements, boolean ignoresWarnings)\n+  {\n+    this.elements = elements;\n+    this.types = types;\n+    this.ignoresWarnings = ignoresWarnings;\n+  }\n+\n+  @Override\n+  public Stream<CompilationMessage> visitVariable(VariableElement field, Void ignored)\n+  {\n+    return Stream.concat(validateModifiers(field), validateInjectedTypes(field));\n+  }\n+\n+  private Stream<CompilationMessage> validateModifiers(VariableElement field)\n+  {\n+    if (!hasValidModifiers(field))\n     {\n-        this.elements = elements;\n-        this.types = types;\n-        this.ignoresWarnings = ignoresWarnings;\n+      return Stream.of(new ContextFieldError(field,\n+          \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n+          fieldFullName(field)));\n     }\n \n-    @Override\n-    public Stream<CompilationMessage> visitVariable( VariableElement field, Void ignored )\n-    {\n-        return Stream.concat( validateModifiers( field ), validateInjectedTypes( field ) );\n-    }\n+    return Stream.empty();\n+  }\n \n-    private Stream<CompilationMessage> validateModifiers( VariableElement field )\n+  private Stream<CompilationMessage> validateInjectedTypes(VariableElement field)\n+  {\n+    TypeMirror fieldType = field.asType();\n+    if (injectsAllowedType(fieldType))\n     {\n-        if ( !hasValidModifiers( field ) )\n-        {\n-            return Stream.of( new ContextFieldError( field,\n-                    \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n-                    fieldFullName( field ) ) );\n-        }\n-\n-        return Stream.empty();\n+      return Stream.empty();\n     }\n \n-    private Stream<CompilationMessage> validateInjectedTypes( VariableElement field )\n+    if (injectsRestrictedType(fieldType))\n     {\n-        TypeMirror fieldType = field.asType();\n-        if ( injectsAllowedType( fieldType ) )\n-        {\n-            return Stream.empty();\n-        }\n-\n-        if ( injectsRestrictedType( fieldType ) )\n-        {\n-            if ( ignoresWarnings )\n-            {\n-                return Stream.empty();\n-            }\n-\n-            return Stream.of( new ContextFieldWarning( field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" +\n-                    \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" +\n-                    \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n-                    Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                    IGNORE_CONTEXT_WARNINGS_OPTION ) );\n-        }\n-\n-        return Stream.of( new ContextFieldError( field,\n-                \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n-                Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                joinTypes( SUPPORTED_TYPES ) ) );\n-    }\n-\n-    private boolean injectsAllowedType( TypeMirror fieldType )\n-    {\n-        return matches( fieldType, SUPPORTED_TYPES );\n-    }\n-\n-    private boolean injectsRestrictedType( TypeMirror fieldType )\n-    {\n-        return matches( fieldType, RESTRICTED_TYPES );\n-    }\n-\n-    private boolean matches( TypeMirror fieldType, Set<String> typeNames )\n-    {\n-        return typeMirrors( typeNames ).anyMatch( t -> types.isSameType( t, fieldType ) );\n-    }\n-\n-    private boolean hasValidModifiers( VariableElement field )\n-    {\n-        Set<Modifier> modifiers = field.getModifiers();\n-        return modifiers.contains( Modifier.PUBLIC ) && !modifiers.contains( Modifier.STATIC ) &&\n-                !modifiers.contains( Modifier.FINAL );\n-    }\n-\n-    private Stream<TypeMirror> typeMirrors( Set<String> typeNames )\n-    {\n-        return typeNames.stream().map( elements::getTypeElement ).filter( Objects::nonNull ).map( Element::asType );\n-    }\n+      if (ignoresWarnings)\n+      {\n+        return Stream.empty();\n+      }\n \n-    private String fieldFullName( VariableElement field )\n-    {\n-        return String.format( \"%s#%s\", field.getEnclosingElement().getSimpleName(), field.getSimpleName() );\n+      return Stream.of(new ContextFieldWarning(field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" +\n+          \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" +\n+          \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n+          Context.class.getName(), fieldType.toString(), fieldFullName(field),\n+          IGNORE_CONTEXT_WARNINGS_OPTION));\n     }\n \n-    private static String joinTypes( Set<String> types )\n-    {\n-        return types.stream().collect( Collectors.joining( \">, <\", \"<\", \">\" ) );\n-    }\n+    return Stream.of(new ContextFieldError(field,\n+        \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n+        Context.class.getName(), fieldType.toString(), fieldFullName(field),\n+        joinTypes(SUPPORTED_TYPES)));\n+  }\n+\n+  private boolean injectsAllowedType(TypeMirror fieldType)\n+  {\n+    return matches(fieldType, SUPPORTED_TYPES);\n+  }\n+\n+  private boolean injectsRestrictedType(TypeMirror fieldType)\n+  {\n+    return matches(fieldType, RESTRICTED_TYPES);\n+  }\n+\n+  private boolean matches(TypeMirror fieldType, Set<String> typeNames)\n+  {\n+    return typeMirrors(typeNames).anyMatch(t -> types.isSameType(t, fieldType));\n+  }\n+\n+  private boolean hasValidModifiers(VariableElement field)\n+  {\n+    Set<Modifier> modifiers = field.getModifiers();\n+    return modifiers.contains(Modifier.PUBLIC) && !modifiers.contains(Modifier.STATIC) &&\n+        !modifiers.contains(Modifier.FINAL);\n+  }\n+\n+  private Stream<TypeMirror> typeMirrors(Set<String> typeNames)\n+  {\n+    return typeNames.stream().map(elements::getTypeElement).filter(Objects::nonNull).map(Element::asType);\n+  }\n+\n+  private String fieldFullName(VariableElement field)\n+  {\n+    return String.format(\"%s#%s\", field.getEnclosingElement().getSimpleName(), field.getSimpleName());\n+  }\n+\n+  private static String joinTypes(Set<String> types)\n+  {\n+    return types.stream().collect(Collectors.joining(\">, <\", \"<\", \">\"));\n+  }\n }\n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 331).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/520/ContextFieldVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/520/ContextFieldVisitor.java\nindex 8e9cb42db7f..1c41225f239 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/520/ContextFieldVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/520/ContextFieldVisitor.java\n@@ -51,17 +51,12 @@ import static org.neo4j.tooling.procedure.CompilerOptions.IGNORE_CONTEXT_WARNING\n \n class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n {\n-    private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>(\n-            Arrays.asList( GraphDatabaseService.class.getName(), Log.class.getName(), TerminationGuard.class.getName(),\n-                    SecurityContext.class.getName(), ProcedureTransaction.class.getName() ) );\n-    private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>(\n-            Arrays.asList( GraphDatabaseAPI.class.getName(), KernelTransaction.class.getName(),\n-                    DependencyResolver.class.getName(), UserManager.class.getName(),\n-                    // the following classes are not in the compiler classpath\n-                    \"org.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\",\n-                    \"org.neo4j.server.security.enterprise.log.SecurityLog\" ) );\n+    private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>( Arrays.asList( GraphDatabaseService.class.getName(), Log.class.getName(), TerminationGuard.class.getName(), SecurityContext.class.getName(), ProcedureTransaction.class.getName() ) );\n \n-    private final Elements elements;\n+private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>( Arrays.asList( GraphDatabaseAPI.class.getName(), KernelTransaction.class.getName(), DependencyResolver.class.getName(), UserManager.class.getName(),\n+                    // the following classes are not in the compiler classpath\n+                    \"org.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\", \"org.neo4j.server.security.enterprise.log.SecurityLog\" ) );\n+private final Elements elements;\n     private final Types types;\n     private final boolean ignoresWarnings;\n \n@@ -82,8 +77,7 @@ class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessag\n     {\n         if ( !hasValidModifiers( field ) )\n         {\n-            return Stream.of( new ContextFieldError( field,\n-                    \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n+            return Stream.of( new ContextFieldError( field, \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n                     fieldFullName( field ) ) );\n         }\n \n@@ -105,17 +99,12 @@ class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessag\n                 return Stream.empty();\n             }\n \n-            return Stream.of( new ContextFieldWarning( field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" +\n-                    \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" +\n-                    \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n-                    Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                    IGNORE_CONTEXT_WARNINGS_OPTION ) );\n+            return Stream.of( new ContextFieldWarning( field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" + \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" + \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n+                    Context.class.getName(), fieldType.toString(), fieldFullName( field ), IGNORE_CONTEXT_WARNINGS_OPTION ) );\n         }\n \n-        return Stream.of( new ContextFieldError( field,\n-                \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n-                Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                joinTypes( SUPPORTED_TYPES ) ) );\n+        return Stream.of( new ContextFieldError( field, \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n+                Context.class.getName(), fieldType.toString(), fieldFullName( field ), joinTypes( SUPPORTED_TYPES ) ) );\n     }\n \n     private boolean injectsAllowedType( TypeMirror fieldType )\n@@ -154,4 +143,4 @@ class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessag\n     {\n         return types.stream().collect( Collectors.joining( \">, <\", \"<\", \">\" ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "600",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/600/NodeProxyWrappingNodeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/600/NodeProxyWrappingNodeValue.java\nindex 3c9af484eae..1c895c13ed3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/600/NodeProxyWrappingNodeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/600/NodeProxyWrappingNodeValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.ArrayList;\n@@ -33,85 +34,84 @@ import org.neo4j.values.virtual.VirtualValues;\n \n public class NodeProxyWrappingNodeValue extends NodeValue\n {\n-    private final Node node;\n-    private volatile TextArray labels;\n-    private volatile MapValue properties;\n+  private final Node node;\n+  private volatile TextArray labels;\n+  private volatile MapValue properties;\n \n-    NodeProxyWrappingNodeValue( Node node )\n-    {\n-        super( node.getId() );\n-        this.node = node;\n-    }\n+  NodeProxyWrappingNodeValue(Node node)\n+  {\n+    super(node.getId());\n+    this.node = node;\n+  }\n \n-    public Node nodeProxy()\n-    {\n-        return node;\n-    }\n+  public Node nodeProxy()\n+  {\n+    return node;\n+  }\n \n-    @Override\n-    public <E extends Exception> void writeTo( AnyValueWriter<E> writer ) throws E\n+  @Override\n+  public <E extends Exception> void writeTo(AnyValueWriter<E> writer) throws E\n+  {\n+    TextArray l;\n+    MapValue p;\n+    try\n     {\n-        TextArray l;\n-        MapValue p;\n-        try\n-        {\n-            l = labels();\n-            p = properties();\n-        }\n-        catch ( NotFoundException e )\n-        {\n-            l = Values.stringArray();\n-            p = VirtualValues.EMPTY_MAP;\n-\n-        }\n+      l = labels();\n+      p = properties();\n+    } catch (NotFoundException e)\n+    {\n+      l = Values.stringArray();\n+      p = VirtualValues.EMPTY_MAP;\n \n-        if ( id() < 0 )\n-        {\n-            writer.writeVirtualNodeHack( node );\n-        }\n+    }\n \n-        writer.writeNode( node.getId(), l, p );\n+    if (id() < 0)\n+    {\n+      writer.writeVirtualNodeHack(node);\n     }\n \n-    @Override\n-    public TextArray labels()\n+    writer.writeNode(node.getId(), l, p);\n+  }\n+\n+  @Override\n+  public TextArray labels()\n+  {\n+    TextArray l = labels;\n+    if (l == null)\n     {\n-        TextArray l = labels;\n-        if ( l == null )\n+      synchronized (this)\n+      {\n+        l = labels;\n+        if (l == null)\n         {\n-            synchronized ( this )\n-            {\n-                l = labels;\n-                if ( l == null )\n-                {\n-                    ArrayList<String> ls = new ArrayList<>();\n-                    for ( Label label : node.getLabels() )\n-                    {\n-                        ls.add( label.name() );\n-                    }\n-                    l = labels = Values.stringArray( ls.toArray( new String[ls.size()] ) );\n+          ArrayList<String> ls = new ArrayList<>();\n+          for (Label label : node.getLabels())\n+          {\n+            ls.add(label.name());\n+          }\n+          l = labels = Values.stringArray(ls.toArray(new String[ls.size()]));\n \n-                }\n-            }\n         }\n-        return l;\n+      }\n     }\n+    return l;\n+  }\n \n-    @Override\n-    public MapValue properties()\n+  @Override\n+  public MapValue properties()\n+  {\n+    MapValue m = properties;\n+    if (m == null)\n     {\n-        MapValue m = properties;\n-        if ( m == null )\n+      synchronized (this)\n+      {\n+        m = properties;\n+        if (m == null)\n         {\n-            synchronized ( this )\n-            {\n-                m = properties;\n-                if ( m == null )\n-                {\n-                    m = properties = ValueUtils.asMapValue( node.getAllProperties() );\n-                }\n-            }\n+          m = properties = ValueUtils.asMapValue(node.getAllProperties());\n         }\n-        return m;\n+      }\n     }\n+    return m;\n+  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/600/NodeProxyWrappingNodeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/600/NodeProxyWrappingNodeValue.java\nindex 3c9af484eae..f31edab8277 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/600/NodeProxyWrappingNodeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/600/NodeProxyWrappingNodeValue.java\n@@ -62,8 +62,7 @@ public class NodeProxyWrappingNodeValue extends NodeValue\n         {\n             l = Values.stringArray();\n             p = VirtualValues.EMPTY_MAP;\n-\n-        }\n+    }\n \n         if ( id() < 0 )\n         {\n@@ -89,9 +88,9 @@ public class NodeProxyWrappingNodeValue extends NodeValue\n                     {\n                         ls.add( label.name() );\n                     }\n-                    l = labels = Values.stringArray( ls.toArray( new String[ls.size()] ) );\n \n-                }\n+l = labels = Values.stringArray( ls.toArray( new String[ls.size()] ) );\n+    }\n             }\n         }\n         return l;\n@@ -114,4 +113,4 @@ public class NodeProxyWrappingNodeValue extends NodeValue\n         }\n         return m;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2141",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2141/ExecutorBoltSchedulerProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2141/ExecutorBoltSchedulerProvider.java\nindex d3f5500594b..d67a92334f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2141/ExecutorBoltSchedulerProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2141/ExecutorBoltSchedulerProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime.scheduling;\n \n import java.util.concurrent.ExecutorService;\n@@ -45,30 +46,30 @@ public class ExecutorBoltSchedulerProvider extends LifecycleAdapter implements B\n \n     private ExecutorService forkJoinThreadPool;\n \n-    public ExecutorBoltSchedulerProvider( Config config, ExecutorFactory executorFactory, JobScheduler scheduler,\n-            LogService logService )\n+    public ExecutorBoltSchedulerProvider(Config config, ExecutorFactory executorFactory, JobScheduler scheduler,\n+                                         LogService logService)\n     {\n         this.config = config;\n         this.executorFactory = executorFactory;\n         this.scheduler = scheduler;\n         this.logService = logService;\n-        this.internalLog = logService.getInternalLog( getClass() );\n+        this.internalLog = logService.getInternalLog(getClass());\n     }\n \n     @Override\n     public void init()\n     {\n-        scheduler.setThreadFactory( Group.BOLT_WORKER, NettyThreadFactory::new );\n-        if ( config.get( BoltConnector.enabled ) )\n+        scheduler.setThreadFactory(Group.BOLT_WORKER, NettyThreadFactory::new);\n+        if (config.get(BoltConnector.enabled))\n         {\n-            checkState( forkJoinThreadPool == null, \"ForkJoinPool already initialized, this should only be done once.\" );\n+            checkState(forkJoinThreadPool == null, \"ForkJoinPool already initialized, this should only be done once.\");\n             forkJoinThreadPool = new ForkJoinPool();\n             this.boltScheduler =\n-                    new ExecutorBoltScheduler( BoltConnector.NAME, executorFactory, scheduler, logService, config.get( BoltConnector.thread_pool_min_size ),\n-                            config.get( BoltConnector.thread_pool_max_size ), config.get( BoltConnector.thread_pool_keep_alive ),\n-                            config.get( BoltConnectorInternalSettings.unsupported_thread_pool_queue_size ), forkJoinThreadPool,\n-                            config.get( BoltConnector.thread_pool_shutdown_wait_time ),\n-                            config.get( BoltConnectorInternalSettings.connection_keep_alive_scheduling_interval ) );\n+              new ExecutorBoltScheduler(BoltConnector.NAME, executorFactory, scheduler, logService, config.get(BoltConnector.thread_pool_min_size),\n+                config.get(BoltConnector.thread_pool_max_size), config.get(BoltConnector.thread_pool_keep_alive),\n+                config.get(BoltConnectorInternalSettings.unsupported_thread_pool_queue_size), forkJoinThreadPool,\n+                config.get(BoltConnector.thread_pool_shutdown_wait_time),\n+                config.get(BoltConnectorInternalSettings.connection_keep_alive_scheduling_interval));\n             this.boltScheduler.init();\n         }\n     }\n@@ -76,7 +77,7 @@ public class ExecutorBoltSchedulerProvider extends LifecycleAdapter implements B\n     @Override\n     public void start()\n     {\n-        if ( boltScheduler != null )\n+        if (boltScheduler != null)\n         {\n             boltScheduler.start();\n         }\n@@ -85,7 +86,7 @@ public class ExecutorBoltSchedulerProvider extends LifecycleAdapter implements B\n     @Override\n     public void stop()\n     {\n-        if ( boltScheduler != null )\n+        if (boltScheduler != null)\n         {\n             boltScheduler.stop();\n         }\n@@ -94,20 +95,19 @@ public class ExecutorBoltSchedulerProvider extends LifecycleAdapter implements B\n     @Override\n     public void shutdown()\n     {\n-        if ( boltScheduler != null )\n+        if (boltScheduler != null)\n         {\n             try\n             {\n                 boltScheduler.shutdown();\n-            }\n-            catch ( Throwable t )\n+            } catch (Throwable t)\n             {\n-                internalLog.warn( String.format( \"An unexpected error occurred while shutting down BoltScheduler [%s]\", boltScheduler.connector() ), t );\n+                internalLog.warn(String.format(\"An unexpected error occurred while shutting down BoltScheduler [%s]\", boltScheduler.connector()), t);\n             }\n             boltScheduler = null;\n         }\n \n-        if ( forkJoinThreadPool != null )\n+        if (forkJoinThreadPool != null)\n         {\n             forkJoinThreadPool.shutdown();\n             forkJoinThreadPool = null;\n@@ -115,13 +115,13 @@ public class ExecutorBoltSchedulerProvider extends LifecycleAdapter implements B\n     }\n \n     @Override\n-    public BoltScheduler get( BoltChannel channel )\n+    public BoltScheduler get(BoltChannel channel)\n     {\n-        if ( boltScheduler == null )\n+        if (boltScheduler == null)\n         {\n             throw new IllegalArgumentException(\n-                    String.format( \"Provided channel instance [local: %s, remote: %s] is not bound to any known bolt listen addresses.\",\n-                            channel.serverAddress(), channel.clientAddress() ) );\n+              String.format(\"Provided channel instance [local: %s, remote: %s] is not bound to any known bolt listen addresses.\",\n+                channel.serverAddress(), channel.clientAddress()));\n         }\n \n         return boltScheduler;\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
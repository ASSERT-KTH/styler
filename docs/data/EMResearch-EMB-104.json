{
    "project_name": "EMResearch-EMB",
    "error_id": "104",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public MorfologikIrishSpellerRule(ResourceBundle messages,\n                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n    super(messages, language, userConfig, altLanguages);\n    super.ignoreWordsWithLength = 1;\n    setCategory(Categories.TYPOS.getCategory(messages));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/104/MorfologikIrishSpellerRule.java\nindex 94bd3e083f5..5c009c82b5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/104/MorfologikIrishSpellerRule.java\n@@ -38,8 +38,9 @@ public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n   private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n \n   public MorfologikIrishSpellerRule(ResourceBundle messages,\n-                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n-    super(messages, language, userConfig, altLanguages);\n+          Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n+\n+      super(messages, language, userConfig, altLanguages);\n     super.ignoreWordsWithLength = 1;\n     setCategory(Categories.TYPOS.getCategory(messages));\n     addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/104/MorfologikIrishSpellerRule.java\nindex 94bd3e083f5..32cb2f3cc7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/104/MorfologikIrishSpellerRule.java\n@@ -1,6 +1,6 @@\n-/* LanguageTool, a natural language style checker \n+/* LanguageTool, a natural language style checker\n  * Copyright (C) 2012 Marcin Mi\u0142kowski (http://www.languagetool.org)\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -33,44 +33,45 @@ import org.languagetool.tagging.ga.Utils;\n \n public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n \n-  private static final String RESOURCE_FILENAME = \"/ga/hunspell/ga_IE.dict\";\n+    private static final String RESOURCE_FILENAME = \"/ga/hunspell/ga_IE.dict\";\n \n-  private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n+    private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n \n-  public MorfologikIrishSpellerRule(ResourceBundle messages,\n-                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n-    super(messages, language, userConfig, altLanguages);\n-    super.ignoreWordsWithLength = 1;\n-    setCategory(Categories.TYPOS.getCategory(messages));\n-    addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n-                   Example.fixed(\"T\u00e1 <marker>bot\u00fan</marker> san abairt seo.\"));\n-    // this.setIgnoreTaggedWords();\n-  }\n+    public MorfologikIrishSpellerRule(ResourceBundle messages,\n+                                      Language language, UserConfig userConfig, List<Language> altLanguages)\n+        throws IOException {\n+        super(messages, language, userConfig, altLanguages);\n+        super.ignoreWordsWithLength = 1;\n+        setCategory(Categories.TYPOS.getCategory(messages));\n+        addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n+            Example.fixed(\"T\u00e1 <marker>bot\u00fan</marker> san abairt seo.\"));\n+        // this.setIgnoreTaggedWords();\n+    }\n \n-  @Override\n-  public String getFileName() {\n-    return RESOURCE_FILENAME;\n-  }\n+    @Override\n+    public String getFileName() {\n+        return RESOURCE_FILENAME;\n+    }\n \n-  @Override\n-  public String getId() {\n-    return \"MORFOLOGIK_RULE_GA_IE\";\n-  }\n+    @Override\n+    public String getId() {\n+        return \"MORFOLOGIK_RULE_GA_IE\";\n+    }\n \n-  @Override\n-  public Pattern tokenizingPattern() {\n-    return IRISH_TOKENIZING_CHARS;\n-  }\n+    @Override\n+    public Pattern tokenizingPattern() {\n+        return IRISH_TOKENIZING_CHARS;\n+    }\n \n-  @Override\n-  public boolean isMisspelled(String word) throws IOException {\n-    String checkWord = word;\n-    if (Utils.isAllMathsChars(word)) {\n-      checkWord = Utils.simplifyMathematical(word);\n-    } else if (Utils.isAllHalfWidthChars(word)) {\n-      checkWord = Utils.halfwidthLatinToLatin(word);\n+    @Override\n+    public boolean isMisspelled(String word) throws IOException {\n+        String checkWord = word;\n+        if (Utils.isAllMathsChars(word)) {\n+            checkWord = Utils.simplifyMathematical(word);\n+        } else if (Utils.isAllHalfWidthChars(word)) {\n+            checkWord = Utils.halfwidthLatinToLatin(word);\n+        }\n+        return super.isMisspelled(checkWord);\n     }\n-    return super.isMisspelled(checkWord);\n-  }\n \n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/104/MorfologikIrishSpellerRule.java\nindex 94bd3e083f5..e41d0d739b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/104/MorfologikIrishSpellerRule.java\n@@ -37,14 +37,12 @@ public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n \n   private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n \n-  public MorfologikIrishSpellerRule(ResourceBundle messages,\n-                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n-    super(messages, language, userConfig, altLanguages);\n+  public MorfologikIrishSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n+  super(messages, language, userConfig, altLanguages);\n     super.ignoreWordsWithLength = 1;\n     setCategory(Categories.TYPOS.getCategory(messages));\n     addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n-                   Example.fixed(\"T\u00e1 <marker>bot\u00fan</marker> san abairt seo.\"));\n-    // this.setIgnoreTaggedWords();\n+                   Example.fixed(\"T\u00e1 <marker>bot\u00fan</marker> san abairt seo.\"));  // this.setIgnoreTaggedWords();\n   }\n \n   @Override\n@@ -73,4 +71,4 @@ public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n     return super.isMisspelled(checkWord);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/104/MorfologikIrishSpellerRule.java\nindex 94bd3e083f5..154b15677dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/104/MorfologikIrishSpellerRule.java\n@@ -23,7 +23,6 @@ import java.io.IOException;\n import java.util.List;\n import java.util.ResourceBundle;\n import java.util.regex.Pattern;\n-\n import org.languagetool.Language;\n import org.languagetool.UserConfig;\n import org.languagetool.rules.Categories;\n@@ -31,46 +30,44 @@ import org.languagetool.rules.Example;\n import org.languagetool.rules.spelling.morfologik.MorfologikSpellerRule;\n import org.languagetool.tagging.ga.Utils;\n \n-public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n \n-  private static final String RESOURCE_FILENAME = \"/ga/hunspell/ga_IE.dict\";\n+public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n \n-  private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n+    private static final String RESOURCE_FILENAME = \"/ga/hunspell/ga_IE.dict\";\n+    private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n \n-  public MorfologikIrishSpellerRule(ResourceBundle messages,\n-                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n+    public MorfologikIrishSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n     super(messages, language, userConfig, altLanguages);\n     super.ignoreWordsWithLength = 1;\n     setCategory(Categories.TYPOS.getCategory(messages));\n     addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n                    Example.fixed(\"T\u00e1 <marker>bot\u00fan</marker> san abairt seo.\"));\n     // this.setIgnoreTaggedWords();\n-  }\n-\n-  @Override\n-  public String getFileName() {\n-    return RESOURCE_FILENAME;\n-  }\n+    }\n \n-  @Override\n-  public String getId() {\n-    return \"MORFOLOGIK_RULE_GA_IE\";\n-  }\n+    @Override\n+    public String getFileName() {\n+        return RESOURCE_FILENAME;\n+    }\n \n-  @Override\n-  public Pattern tokenizingPattern() {\n-    return IRISH_TOKENIZING_CHARS;\n-  }\n+    @Override\n+    public String getId() {\n+        return \"MORFOLOGIK_RULE_GA_IE\";\n+    }\n \n-  @Override\n-  public boolean isMisspelled(String word) throws IOException {\n-    String checkWord = word;\n-    if (Utils.isAllMathsChars(word)) {\n-      checkWord = Utils.simplifyMathematical(word);\n-    } else if (Utils.isAllHalfWidthChars(word)) {\n-      checkWord = Utils.halfwidthLatinToLatin(word);\n+    @Override\n+    public Pattern tokenizingPattern() {\n+        return IRISH_TOKENIZING_CHARS;\n     }\n-    return super.isMisspelled(checkWord);\n-  }\n \n-}\n+    @Override\n+    public boolean isMisspelled(String word) throws IOException {\n+        String checkWord = word;\n+        if (Utils.isAllMathsChars(word)) {\n+            checkWord = Utils.simplifyMathematical(word);\n+        } else if (Utils.isAllHalfWidthChars(word)) {\n+          checkWord = Utils.halfwidthLatinToLatin(word);\n+        }\n+        return super.isMisspelled(checkWord);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/104/MorfologikIrishSpellerRule.java\nindex 94bd3e083f5..5c009c82b5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/104/MorfologikIrishSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/104/MorfologikIrishSpellerRule.java\n@@ -38,8 +38,9 @@ public final class MorfologikIrishSpellerRule extends MorfologikSpellerRule {\n   private static final Pattern IRISH_TOKENIZING_CHARS = Pattern.compile(\"-\");\n \n   public MorfologikIrishSpellerRule(ResourceBundle messages,\n-                                     Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n-    super(messages, language, userConfig, altLanguages);\n+          Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n+\n+      super(messages, language, userConfig, altLanguages);\n     super.ignoreWordsWithLength = 1;\n     setCategory(Categories.TYPOS.getCategory(messages));\n     addExamplePair(Example.wrong(\"T\u00e1 <marker>botun</marker> san abairt seo.\"),\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "392",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/392/TransactionLogInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/392/TransactionLogInitializer.java\nindex 1465e474087..0e0ffc416a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/392/TransactionLogInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/392/TransactionLogInitializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.io.IOException;\n@@ -68,28 +69,28 @@ public class TransactionLogInitializer\n \n     /**\n      * Get a {@link LogFilesInitializer} implementation, suitable for e.g. passing to a batch importer.\n+     *\n      * @return A {@link LogFilesInitializer} instance.\n      */\n     public static LogFilesInitializer getLogFilesInitializer()\n     {\n-        return ( databaseLayout, store, fileSystem, checkpointReason ) ->\n+        return (databaseLayout, store, fileSystem, checkpointReason) ->\n         {\n             try\n             {\n                 TransactionLogInitializer initializer = new TransactionLogInitializer(\n-                        fileSystem, store, StorageEngineFactory.selectStorageEngine().commandReaderFactory(),\n-                        PageCacheTracer.NULL );\n-                initializer.initializeEmptyLogFile( databaseLayout, databaseLayout.getTransactionLogsDirectory(), checkpointReason );\n-            }\n-            catch ( IOException e )\n+                  fileSystem, store, StorageEngineFactory.selectStorageEngine().commandReaderFactory(),\n+                  PageCacheTracer.NULL);\n+                initializer.initializeEmptyLogFile(databaseLayout, databaseLayout.getTransactionLogsDirectory(), checkpointReason);\n+            } catch (IOException e)\n             {\n-                throw new UnderlyingStorageException( \"Fail to create empty transaction log file.\", e );\n+                throw new UnderlyingStorageException(\"Fail to create empty transaction log file.\", e);\n             }\n         };\n     }\n \n-    public TransactionLogInitializer( FileSystemAbstraction fs, MetadataProvider store, CommandReaderFactory commandReaderFactory,\n-                                      PageCacheTracer tracer )\n+    public TransactionLogInitializer(FileSystemAbstraction fs, MetadataProvider store, CommandReaderFactory commandReaderFactory,\n+                                     PageCacheTracer tracer)\n     {\n         this.fs = fs;\n         this.store = store;\n@@ -100,12 +101,12 @@ public class TransactionLogInitializer\n     /**\n      * Create new empty log files in the given transaction logs directory, for a database that doesn't have any already.\n      */\n-    public void initializeEmptyLogFile( DatabaseLayout layout, Path transactionLogsDirectory, String checkpointReason ) throws IOException\n+    public void initializeEmptyLogFile(DatabaseLayout layout, Path transactionLogsDirectory, String checkpointReason) throws IOException\n     {\n-        try ( LogFilesSpan span = buildLogFiles( layout, transactionLogsDirectory ) )\n+        try (LogFilesSpan span = buildLogFiles(layout, transactionLogsDirectory))\n         {\n             LogFiles logFiles = span.getLogFiles();\n-            appendEmptyTransactionAndCheckPoint( logFiles, checkpointReason );\n+            appendEmptyTransactionAndCheckPoint(logFiles, checkpointReason);\n         }\n     }\n \n@@ -113,71 +114,71 @@ public class TransactionLogInitializer\n      * Make sure that any existing log files in the given transaction logs directory are initialised.\n      * This is done when we migrate 3.x stores into a 4.x world.\n      */\n-    public void initializeExistingLogFiles( DatabaseLayout layout, Path transactionLogsDirectory, String checkpointReason ) throws Exception\n+    public void initializeExistingLogFiles(DatabaseLayout layout, Path transactionLogsDirectory, String checkpointReason) throws Exception\n     {\n-        try ( LogFilesSpan span = buildLogFiles( layout, transactionLogsDirectory ) )\n+        try (LogFilesSpan span = buildLogFiles(layout, transactionLogsDirectory))\n         {\n             LogFiles logFiles = span.getLogFiles();\n             LogFile logFile = logFiles.getLogFile();\n-            LogHeader logHeader = logFile.extractHeader( logFile.getLowestLogVersion() );\n-            VersionAwareLogEntryReader entryReader = new VersionAwareLogEntryReader( commandReaderFactory, false );\n-            try ( var readableChannel = logFile.getReader( logHeader.getStartPosition() );\n-                  var cursor = new LogEntryCursor( entryReader, readableChannel ) )\n+            LogHeader logHeader = logFile.extractHeader(logFile.getLowestLogVersion());\n+            VersionAwareLogEntryReader entryReader = new VersionAwareLogEntryReader(commandReaderFactory, false);\n+            try (var readableChannel = logFile.getReader(logHeader.getStartPosition());\n+                 var cursor = new LogEntryCursor(entryReader, readableChannel))\n             {\n-                while ( cursor.next() )\n+                while (cursor.next())\n                 {\n                     LogEntry entry = cursor.get();\n-                    if ( entry.getType() == LogEntryTypeCodes.TX_COMMIT )\n+                    if (entry.getType() == LogEntryTypeCodes.TX_COMMIT)\n                     {\n                         // The log files already contain a transaction, so we can only append checkpoint for the end of the log files.\n-                        appendCheckpoint( logFiles, checkpointReason, logFile.getTransactionLogWriter().getCurrentPosition() );\n+                        appendCheckpoint(logFiles, checkpointReason, logFile.getTransactionLogWriter().getCurrentPosition());\n                         return;\n                     }\n                 }\n             }\n \n-            appendEmptyTransactionAndCheckPoint( logFiles, checkpointReason );\n+            appendEmptyTransactionAndCheckPoint(logFiles, checkpointReason);\n         }\n     }\n \n-    private LogFilesSpan buildLogFiles( DatabaseLayout layout, Path transactionLogsDirectory ) throws IOException\n+    private LogFilesSpan buildLogFiles(DatabaseLayout layout, Path transactionLogsDirectory) throws IOException\n     {\n-        LogFiles logFiles = LogFilesBuilder.builder( layout, fs )\n-                                           .withLogVersionRepository( store )\n-                                           .withTransactionIdStore( store )\n-                                           .withStoreId( store.getStoreId() )\n-                                           .withLogsDirectory( transactionLogsDirectory )\n-                                           .withCommandReaderFactory( commandReaderFactory )\n-                                           .withDatabaseHealth( new DatabaseHealth( PanicEventGenerator.NO_OP, NullLog.getInstance() ) )\n-                                           .build();\n-        return new LogFilesSpan( new Lifespan( logFiles ), logFiles );\n+        LogFiles logFiles = LogFilesBuilder.builder(layout, fs)\n+          .withLogVersionRepository(store)\n+          .withTransactionIdStore(store)\n+          .withStoreId(store.getStoreId())\n+          .withLogsDirectory(transactionLogsDirectory)\n+          .withCommandReaderFactory(commandReaderFactory)\n+          .withDatabaseHealth(new DatabaseHealth(PanicEventGenerator.NO_OP, NullLog.getInstance()))\n+          .build();\n+        return new LogFilesSpan(new Lifespan(logFiles), logFiles);\n     }\n \n-    private void appendEmptyTransactionAndCheckPoint( LogFiles logFiles, String reason ) throws IOException\n+    private void appendEmptyTransactionAndCheckPoint(LogFiles logFiles, String reason) throws IOException\n     {\n         TransactionId committedTx = store.getLastCommittedTransaction();\n         long timestamp = committedTx.commitTimestamp();\n         long transactionId = committedTx.transactionId();\n         TransactionLogWriter transactionLogWriter = logFiles.getLogFile().getTransactionLogWriter();\n-        PhysicalTransactionRepresentation emptyTx = emptyTransaction( timestamp );\n-        int checksum = transactionLogWriter.append( emptyTx, BASE_TX_ID, BASE_TX_CHECKSUM );\n+        PhysicalTransactionRepresentation emptyTx = emptyTransaction(timestamp);\n+        int checksum = transactionLogWriter.append(emptyTx, BASE_TX_ID, BASE_TX_CHECKSUM);\n         LogPosition position = transactionLogWriter.getCurrentPosition();\n-        appendCheckpoint( logFiles, reason, position );\n-        try ( PageCursorTracer cursorTracer = tracer.createPageCursorTracer( LOGS_UPGRADER_TRACER_TAG ) )\n+        appendCheckpoint(logFiles, reason, position);\n+        try (PageCursorTracer cursorTracer = tracer.createPageCursorTracer(LOGS_UPGRADER_TRACER_TAG))\n         {\n             store.setLastCommittedAndClosedTransactionId(\n-                    transactionId, checksum, timestamp, position.getByteOffset(), position.getLogVersion(), cursorTracer );\n+              transactionId, checksum, timestamp, position.getByteOffset(), position.getLogVersion(), cursorTracer);\n         }\n     }\n \n-    private PhysicalTransactionRepresentation emptyTransaction( long timestamp )\n+    private PhysicalTransactionRepresentation emptyTransaction(long timestamp)\n     {\n-        return new PhysicalTransactionRepresentation( Collections.emptyList(), EMPTY_BYTE_ARRAY, timestamp, BASE_TX_ID, timestamp, NO_LEASE, ANONYMOUS );\n+        return new PhysicalTransactionRepresentation(Collections.emptyList(), EMPTY_BYTE_ARRAY, timestamp, BASE_TX_ID, timestamp, NO_LEASE, ANONYMOUS);\n     }\n \n-    private void appendCheckpoint( LogFiles logFiles, String reason, LogPosition position ) throws IOException\n+    private void appendCheckpoint(LogFiles logFiles, String reason, LogPosition position) throws IOException\n     {\n         var checkpointAppender = logFiles.getCheckpointFile().getCheckpointAppender();\n-        checkpointAppender.checkPoint( LogCheckPointEvent.NULL, position, Instant.now(), reason );\n+        checkpointAppender.checkPoint(LogCheckPointEvent.NULL, position, Instant.now(), reason);\n     }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
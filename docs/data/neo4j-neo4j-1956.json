{
    "project_name": "neo4j-neo4j",
    "error_id": "1956",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1956/ProcedureSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1956/ProcedureSignature.java\nindex 8608b41cbeb..0d5f4b8de74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1956/ProcedureSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1956/ProcedureSignature.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.procs;\n \n import java.util.ArrayList;\n@@ -35,7 +36,7 @@ import static java.util.Collections.unmodifiableList;\n  */\n public class ProcedureSignature\n {\n-    public static final List<FieldSignature> VOID = unmodifiableList( new ArrayList<>() );\n+    public static final List<FieldSignature> VOID = unmodifiableList(new ArrayList<>());\n \n     private final QualifiedName name;\n     private final List<FieldSignature> inputSignature;\n@@ -53,24 +54,24 @@ public class ProcedureSignature\n     private final boolean allowExpiredCredentials;\n \n     public ProcedureSignature(\n-            QualifiedName name,\n-            List<FieldSignature> inputSignature,\n-            List<FieldSignature> outputSignature,\n-            Mode mode,\n-            boolean admin,\n-            String deprecated,\n-            String[] allowed,\n-            String description,\n-            String warning,\n-            boolean eager,\n-            boolean caseInsensitive,\n-            boolean systemProcedure,\n-            boolean internal,\n-            boolean allowExpiredCredentials )\n+      QualifiedName name,\n+      List<FieldSignature> inputSignature,\n+      List<FieldSignature> outputSignature,\n+      Mode mode,\n+      boolean admin,\n+      String deprecated,\n+      String[] allowed,\n+      String description,\n+      String warning,\n+      boolean eager,\n+      boolean caseInsensitive,\n+      boolean systemProcedure,\n+      boolean internal,\n+      boolean allowExpiredCredentials)\n     {\n         this.name = name;\n-        this.inputSignature = unmodifiableList( inputSignature );\n-        this.outputSignature = outputSignature == VOID ? outputSignature : unmodifiableList( outputSignature );\n+        this.inputSignature = unmodifiableList(inputSignature);\n+        this.outputSignature = outputSignature == VOID ? outputSignature : unmodifiableList(outputSignature);\n         this.mode = mode;\n         this.admin = admin;\n         this.deprecated = deprecated;\n@@ -101,7 +102,7 @@ public class ProcedureSignature\n \n     public Optional<String> deprecated()\n     {\n-        return Optional.ofNullable( deprecated );\n+        return Optional.ofNullable(deprecated);\n     }\n \n     public String[] allowed()\n@@ -131,12 +132,12 @@ public class ProcedureSignature\n \n     public Optional<String> description()\n     {\n-        return Optional.ofNullable( description );\n+        return Optional.ofNullable(description);\n     }\n \n     public Optional<String> warning()\n     {\n-        return Optional.ofNullable( warning );\n+        return Optional.ofNullable(warning);\n     }\n \n     public boolean eager()\n@@ -160,20 +161,20 @@ public class ProcedureSignature\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n \n         ProcedureSignature that = (ProcedureSignature) o;\n-        return name.equals( that.name ) && inputSignature.equals( that.inputSignature ) &&\n-                outputSignature.equals( that.outputSignature ) && isVoid() == that.isVoid();\n+        return name.equals(that.name) && inputSignature.equals(that.inputSignature) &&\n+          outputSignature.equals(that.outputSignature) && isVoid() == that.isVoid();\n     }\n \n     @Override\n@@ -185,15 +186,14 @@ public class ProcedureSignature\n     @Override\n     public String toString()\n     {\n-        String strInSig = inputSignature == null ? \"...\" : Iterables.toString( inputSignature, \", \" );\n-        if ( isVoid() )\n+        String strInSig = inputSignature == null ? \"...\" : Iterables.toString(inputSignature, \", \");\n+        if (isVoid())\n         {\n-            return String.format( \"%s(%s) :: VOID\", name, strInSig );\n-        }\n-        else\n+            return String.format(\"%s(%s) :: VOID\", name, strInSig);\n+        } else\n         {\n-            String strOutSig = outputSignature == null ? \"...\" : Iterables.toString( outputSignature, \", \" );\n-            return String.format( \"%s(%s) :: (%s)\", name, strInSig, strOutSig );\n+            String strOutSig = outputSignature == null ? \"...\" : Iterables.toString(outputSignature, \", \");\n+            return String.format(\"%s(%s) :: (%s)\", name, strInSig, strOutSig);\n         }\n     }\n \n@@ -213,74 +213,78 @@ public class ProcedureSignature\n         private boolean internal;\n         private boolean allowExpiredCredentials;\n \n-        public Builder( String[] namespace, String name )\n+        public Builder(String[] namespace, String name)\n         {\n-            this.name = new QualifiedName( namespace, name );\n+            this.name = new QualifiedName(namespace, name);\n         }\n \n-        public Builder mode( Mode mode )\n+        public Builder mode(Mode mode)\n         {\n             this.mode = mode;\n             return this;\n         }\n \n-        public Builder description( String description )\n+        public Builder description(String description)\n         {\n             this.description = description;\n             return this;\n         }\n \n-        public Builder deprecatedBy( String deprecated )\n+        public Builder deprecatedBy(String deprecated)\n         {\n             this.deprecated = deprecated;\n             return this;\n         }\n \n-        /** Define an input field */\n-        public Builder in( String name, Neo4jTypes.AnyType type )\n+        /**\n+         * Define an input field\n+         */\n+        public Builder in(String name, Neo4jTypes.AnyType type)\n         {\n-            inputSignature.add( FieldSignature.inputField( name, type ) );\n+            inputSignature.add(FieldSignature.inputField(name, type));\n             return this;\n         }\n \n-        public Builder in( String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue )\n+        public Builder in(String name, Neo4jTypes.AnyType type, DefaultParameterValue defaultValue)\n         {\n-            inputSignature.add( FieldSignature.inputField( name, type, defaultValue ) );\n+            inputSignature.add(FieldSignature.inputField(name, type, defaultValue));\n             return this;\n         }\n \n-        /** Define an output field */\n-        public Builder out( String name, Neo4jTypes.AnyType type )\n+        /**\n+         * Define an output field\n+         */\n+        public Builder out(String name, Neo4jTypes.AnyType type)\n         {\n-            outputSignature.add( FieldSignature.outputField( name, type ) );\n+            outputSignature.add(FieldSignature.outputField(name, type));\n             return this;\n         }\n \n-        public Builder out( List<FieldSignature> fields )\n+        public Builder out(List<FieldSignature> fields)\n         {\n             outputSignature = fields;\n             return this;\n         }\n \n-        public Builder allowed( String[] allowed )\n+        public Builder allowed(String[] allowed)\n         {\n             this.allowed = allowed;\n             return this;\n         }\n \n-        public Builder admin( boolean admin )\n+        public Builder admin(boolean admin)\n         {\n             this.admin = admin;\n             return this;\n         }\n \n-        public Builder warning( String warning )\n+        public Builder warning(String warning)\n         {\n             this.warning = warning;\n             return this;\n         }\n \n-        public Builder eager( boolean eager )\n+        public Builder eager(boolean eager)\n         {\n             this.eager = eager;\n             return this;\n@@ -306,31 +310,31 @@ public class ProcedureSignature\n \n         public ProcedureSignature build()\n         {\n-            return new ProcedureSignature( name, inputSignature, outputSignature, mode, admin, deprecated, allowed,\n-                                           description, warning, eager, false, systemProcedure, internal, allowExpiredCredentials );\n+            return new ProcedureSignature(name, inputSignature, outputSignature, mode, admin, deprecated, allowed,\n+              description, warning, eager, false, systemProcedure, internal, allowExpiredCredentials);\n         }\n     }\n \n-    public static Builder procedureSignature( String... namespaceAndName )\n+    public static Builder procedureSignature(String... namespaceAndName)\n     {\n         String[] namespace = namespaceAndName.length > 1 ?\n-                             Arrays.copyOf( namespaceAndName, namespaceAndName.length - 1 ) : new String[0];\n+          Arrays.copyOf(namespaceAndName, namespaceAndName.length - 1) : new String[0];\n         String name = namespaceAndName[namespaceAndName.length - 1];\n-        return procedureSignature( namespace, name );\n+        return procedureSignature(namespace, name);\n     }\n \n-    public static Builder procedureSignature( QualifiedName name )\n+    public static Builder procedureSignature(QualifiedName name)\n     {\n-        return new Builder( name.namespace(), name.name() );\n+        return new Builder(name.namespace(), name.name());\n     }\n \n-    public static Builder procedureSignature( String[] namespace, String name )\n+    public static Builder procedureSignature(String[] namespace, String name)\n     {\n-        return new Builder( namespace, name );\n+        return new Builder(namespace, name);\n     }\n \n-    public static QualifiedName procedureName( String... namespaceAndName )\n+    public static QualifiedName procedureName(String... namespaceAndName)\n     {\n-        return procedureSignature( namespaceAndName ).build().name();\n+        return procedureSignature(namespaceAndName).build().name();\n     }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "309",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1956/ProcedureSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1956/ProcedureSignature.java\nindex 8608b41cbeb..b684f8c5fae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1956/ProcedureSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1956/ProcedureSignature.java\n@@ -306,9 +306,8 @@ public class ProcedureSignature\n \n         public ProcedureSignature build()\n         {\n-            return new ProcedureSignature( name, inputSignature, outputSignature, mode, admin, deprecated, allowed,\n-                                           description, warning, eager, false, systemProcedure, internal, allowExpiredCredentials );\n-        }\n+            return new ProcedureSignature( name, inputSignature, outputSignature, mode, admin, deprecated, allowed, description, warning, eager, false, systemProcedure, internal, allowExpiredCredentials );\n+    }\n     }\n \n     public static Builder procedureSignature( String... namespaceAndName )\n@@ -333,4 +332,4 @@ public class ProcedureSignature\n     {\n         return procedureSignature( namespaceAndName ).build().name();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
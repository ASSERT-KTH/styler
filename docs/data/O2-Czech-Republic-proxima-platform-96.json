{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "96",
    "information": {
        "errors": [
            {
                "line": "61",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public T deserialize(ByteBuffer buffer, int start, int len) throws IOException {\n    return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/96/AvroSerializer.java\nindex ad8d90f0e27..68ba1265338 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/96/AvroSerializer.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.scheme.avro;\n \n import java.io.ByteArrayOutputStream;\n@@ -58,6 +59,7 @@ public class AvroSerializer<T extends GenericContainer> {\n   }\n \n   public T deserialize(ByteBuffer buffer, int start, int len) throws IOException {\n-    return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n+    return reader\n+        .read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/96/AvroSerializer.java\nindex ad8d90f0e27..30878fc01ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/96/AvroSerializer.java\n@@ -32,6 +32,7 @@ import org.apache.avro.specific.SpecificDatumWriter;\n  * @param <T> SpecificAvroRecord - expected class\n  */\n public class AvroSerializer<T extends GenericContainer> {\n+\n   private final SpecificDatumWriter<T> writer;\n   private final SpecificDatumReader<T> reader;\n \n@@ -60,4 +61,4 @@ public class AvroSerializer<T extends GenericContainer> {\n   public T deserialize(ByteBuffer buffer, int start, int len) throws IOException {\n     return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/96/AvroSerializer.java\nindex ad8d90f0e27..62a578c4513 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/96/AvroSerializer.java\n@@ -31,7 +31,10 @@ import org.apache.avro.specific.SpecificDatumWriter;\n  *\n  * @param <T> SpecificAvroRecord - expected class\n  */\n+\n+\n public class AvroSerializer<T extends GenericContainer> {\n+\n   private final SpecificDatumWriter<T> writer;\n   private final SpecificDatumReader<T> reader;\n \n@@ -60,4 +63,4 @@ public class AvroSerializer<T extends GenericContainer> {\n   public T deserialize(ByteBuffer buffer, int start, int len) throws IOException {\n     return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/96/AvroSerializer.java\nindex ad8d90f0e27..fa7829d8cb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/96/AvroSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/96/AvroSerializer.java\n@@ -58,6 +58,7 @@ public class AvroSerializer<T extends GenericContainer> {\n   }\n \n   public T deserialize(ByteBuffer buffer, int start, int len) throws IOException {\n-    return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array(), start, len, null));\n+    return reader.read(null, DecoderFactory.get().binaryDecoder(buffer.array()\n+    ,start, len, null));\n   }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
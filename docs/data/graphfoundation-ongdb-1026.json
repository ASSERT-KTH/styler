{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1026",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1026/BackgroundThreadExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1026/BackgroundThreadExecutor.java\nindex a7f7c8069dc..7d973bb8546 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1026/BackgroundThreadExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1026/BackgroundThreadExecutor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import java.util.concurrent.Executor;\n@@ -24,27 +25,27 @@ import java.util.concurrent.Executors;\n \n /**\n  * An executor for the background threads for the page caches.\n- *\n+ * <p>\n  * This is similar to an unbounded cached thread pool, except it uses daemon threads.\n- *\n+ * <p>\n  * There are only one of these (it's a singleton) to facilitate reusing the threads of closed page caches.\n  * This is useful for making tests run faster.\n  */\n final class BackgroundThreadExecutor implements Executor\n {\n-    static final BackgroundThreadExecutor INSTANCE = new BackgroundThreadExecutor();\n+  static final BackgroundThreadExecutor INSTANCE = new BackgroundThreadExecutor();\n \n-    private final Executor executor;\n+  private final Executor executor;\n \n-    private BackgroundThreadExecutor()\n-    {\n-        executor = Executors.newCachedThreadPool( new DaemonThreadFactory() );\n-    }\n+  private BackgroundThreadExecutor()\n+  {\n+    executor = Executors.newCachedThreadPool(new DaemonThreadFactory());\n+  }\n \n-    @Override\n-    public void execute( Runnable command )\n-    {\n-        executor.execute( command );\n-    }\n+  @Override\n+  public void execute(Runnable command)\n+  {\n+    executor.execute(command);\n+  }\n \n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1026/BackgroundThreadExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1026/BackgroundThreadExecutor.java\nindex a7f7c8069dc..c7f6edbe60f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1026/BackgroundThreadExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1026/BackgroundThreadExecutor.java\n@@ -46,5 +46,4 @@ final class BackgroundThreadExecutor implements Executor\n     {\n         executor.execute( command );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            .createAccessor(\n                operator,\n                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n  }\n\n  @Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..8c2be111eab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/20/PubSubDataAccessorTest.java\n@@ -53,7 +53,8 @@ public class PubSubDataAccessorTest {\n         new PubSubDataAccessorFactory()\n             .createAccessor(\n                 operator,\n-                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n+                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(),cfg()\n+                ));\n   }\n \n   @Test\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..1ddcb6ed9e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/20/PubSubDataAccessorTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.io.pubsub;\n \n import static org.junit.Assert.assertEquals;\n@@ -53,7 +54,8 @@ public class PubSubDataAccessorTest {\n         new PubSubDataAccessorFactory()\n             .createAccessor(\n                 operator,\n-                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n+                TestUtils\n+                    .createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n   }\n \n   @Test\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..aa43d428597 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/20/PubSubDataAccessorTest.java\n@@ -38,12 +38,10 @@ import org.junit.Test;\n \n /** Test suite for {@link PubSubDataAccessor}. */\n public class PubSubDataAccessorTest {\n-\n   final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n-  final EntityDescriptor gateway =\n-      repo.findEntity(\"gateway\")\n+  final EntityDescriptor gateway = repo.findEntity(\"gateway\")\n           .orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n-  BeamDataOperator operator;\n+    BeamDataOperator operator;\n   DataAccessor accessor;\n \n   @Before\n@@ -59,8 +57,7 @@ public class PubSubDataAccessorTest {\n   @Test\n   public void testCoderAndType() {\n     Pipeline pipeline = Pipeline.create();\n-    PCollection<StreamElement> input =\n-        accessor.createStream(\"name\", pipeline, Position.NEWEST, false, true, 1);\n+    PCollection<StreamElement> input = accessor.createStream(\"name\", pipeline, Position.NEWEST, false, true, 1);\n     assertEquals(TypeDescriptor.of(StreamElement.class), input.getTypeDescriptor());\n     assertEquals(StreamElementCoder.of(repo), input.getCoder());\n   }\n@@ -68,8 +65,7 @@ public class PubSubDataAccessorTest {\n   @Test\n   public void testCoderAndTypeProcessingTime() {\n     Pipeline pipeline = Pipeline.create();\n-    PCollection<StreamElement> input =\n-        accessor.createStream(\"name\", pipeline, Position.NEWEST, false, false, 1);\n+    PCollection<StreamElement> input = accessor.createStream(\"name\", pipeline, Position.NEWEST, false, false, 1);\n     assertEquals(TypeDescriptor.of(StreamElement.class), input.getTypeDescriptor());\n     assertEquals(StreamElementCoder.of(repo), input.getCoder());\n   }\n@@ -85,4 +81,4 @@ public class PubSubDataAccessorTest {\n   private Map<String, Object> cfg() {\n     return Collections.emptyMap();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..fa78ce3f31e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/20/PubSubDataAccessorTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.beam.io.pubsub;\n \n import static org.junit.Assert.assertEquals;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.beam.core.BeamDataOperator;\n import cz.o2.proxima.beam.core.DataAccessor;\n@@ -37,30 +36,26 @@ import org.junit.Before;\n import org.junit.Test;\n \n /** Test suite for {@link PubSubDataAccessor}. */\n+\n+\n public class PubSubDataAccessorTest {\n \n   final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n-  final EntityDescriptor gateway =\n-      repo.findEntity(\"gateway\")\n-          .orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n+\n+  final EntityDescriptor gateway = repo.findEntity(\"gateway\").orElseThrow(() -> new IllegalArgumentException(\"Missing entity gateway\"));\n   BeamDataOperator operator;\n   DataAccessor accessor;\n \n   @Before\n   public void setUp() {\n     operator = repo.getOrCreateOperator(BeamDataOperator.class);\n-    accessor =\n-        new PubSubDataAccessorFactory()\n-            .createAccessor(\n-                operator,\n-                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n+    accessor = new PubSubDataAccessorFactory().createAccessor(operator, TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n   }\n \n   @Test\n   public void testCoderAndType() {\n     Pipeline pipeline = Pipeline.create();\n-    PCollection<StreamElement> input =\n-        accessor.createStream(\"name\", pipeline, Position.NEWEST, false, true, 1);\n+    PCollection<StreamElement> input = accessor.createStream(\"name\", pipeline, Position.NEWEST, false, true, 1);\n     assertEquals(TypeDescriptor.of(StreamElement.class), input.getTypeDescriptor());\n     assertEquals(StreamElementCoder.of(repo), input.getCoder());\n   }\n@@ -68,8 +63,7 @@ public class PubSubDataAccessorTest {\n   @Test\n   public void testCoderAndTypeProcessingTime() {\n     Pipeline pipeline = Pipeline.create();\n-    PCollection<StreamElement> input =\n-        accessor.createStream(\"name\", pipeline, Position.NEWEST, false, false, 1);\n+    PCollection<StreamElement> input = accessor.createStream(\"name\", pipeline, Position.NEWEST, false, false, 1);\n     assertEquals(TypeDescriptor.of(StreamElement.class), input.getTypeDescriptor());\n     assertEquals(StreamElementCoder.of(repo), input.getCoder());\n   }\n@@ -85,4 +79,4 @@ public class PubSubDataAccessorTest {\n   private Map<String, Object> cfg() {\n     return Collections.emptyMap();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "column": "96",
                    "severity": "error",
                    "message": "'}' at column 96 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "96",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..912e8bd68fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/20/PubSubDataAccessorTest.java\n@@ -53,10 +53,7 @@ public class PubSubDataAccessorTest {\n         new PubSubDataAccessorFactory()\n             .createAccessor(\n                 operator,\n-                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n-  }\n-\n-  @Test\n+                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));} @Test\n   public void testCoderAndType() {\n     Pipeline pipeline = Pipeline.create();\n     PCollection<StreamElement> input =\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/20/PubSubDataAccessorTest.java\nindex c6d3cb39992..8c2be111eab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/20/PubSubDataAccessorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/20/PubSubDataAccessorTest.java\n@@ -53,7 +53,8 @@ public class PubSubDataAccessorTest {\n         new PubSubDataAccessorFactory()\n             .createAccessor(\n                 operator,\n-                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(), cfg()));\n+                TestUtils.createTestFamily(gateway, uri(), gateway.getAllAttributes(),cfg()\n+                ));\n   }\n \n   @Test\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
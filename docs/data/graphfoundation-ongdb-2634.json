{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2634",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2634/ReplicatedTokenRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2634/ReplicatedTokenRequest.java\nindex 0f4e07da235..e206bbfc9ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2634/ReplicatedTokenRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2634/ReplicatedTokenRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.token;\n \n import java.util.Arrays;\n@@ -28,77 +29,77 @@ import org.neo4j.causalclustering.core.state.machines.tx.CoreReplicatedContent;\n \n public class ReplicatedTokenRequest implements CoreReplicatedContent\n {\n-    private final TokenType type;\n-    private final String tokenName;\n-    private final byte[] commandBytes;\n+  private final TokenType type;\n+  private final String tokenName;\n+  private final byte[] commandBytes;\n \n-    public ReplicatedTokenRequest( TokenType type, String tokenName, byte[] commandBytes )\n-    {\n-        this.type = type;\n-        this.tokenName = tokenName;\n-        this.commandBytes = commandBytes;\n-    }\n+  public ReplicatedTokenRequest(TokenType type, String tokenName, byte[] commandBytes)\n+  {\n+    this.type = type;\n+    this.tokenName = tokenName;\n+    this.commandBytes = commandBytes;\n+  }\n \n-    public TokenType type()\n-    {\n-        return type;\n-    }\n+  public TokenType type()\n+  {\n+    return type;\n+  }\n \n-    String tokenName()\n-    {\n-        return tokenName;\n-    }\n+  String tokenName()\n+  {\n+    return tokenName;\n+  }\n \n-    byte[] commandBytes()\n-    {\n-        return commandBytes;\n-    }\n+  byte[] commandBytes()\n+  {\n+    return commandBytes;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        ReplicatedTokenRequest that = (ReplicatedTokenRequest) o;\n-\n-        if ( type != that.type )\n-        {\n-            return false;\n-        }\n-        if ( !tokenName.equals( that.tokenName ) )\n-        {\n-            return false;\n-        }\n-        return Arrays.equals( commandBytes, that.commandBytes );\n-\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = type.hashCode();\n-        result = 31 * result + tokenName.hashCode();\n-        result = 31 * result + Arrays.hashCode( commandBytes );\n-        return result;\n+      return false;\n     }\n \n-    @Override\n-    public String toString()\n+    ReplicatedTokenRequest that = (ReplicatedTokenRequest) o;\n+\n+    if (type != that.type)\n     {\n-        return String.format( \"ReplicatedTokenRequest{type='%s', name='%s'}\",\n-                type, tokenName );\n+      return false;\n     }\n-\n-    @Override\n-    public void dispatch( CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback )\n+    if (!tokenName.equals(that.tokenName))\n     {\n-        commandDispatcher.dispatch( this, commandIndex, callback );\n+      return false;\n     }\n+    return Arrays.equals(commandBytes, that.commandBytes);\n+\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = type.hashCode();\n+    result = 31 * result + tokenName.hashCode();\n+    result = 31 * result + Arrays.hashCode(commandBytes);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"ReplicatedTokenRequest{type='%s', name='%s'}\",\n+        type, tokenName);\n+  }\n+\n+  @Override\n+  public void dispatch(CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback)\n+  {\n+    commandDispatcher.dispatch(this, commandIndex, callback);\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2634/ReplicatedTokenRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2634/ReplicatedTokenRequest.java\nindex 0f4e07da235..b6d1da4cb9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2634/ReplicatedTokenRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2634/ReplicatedTokenRequest.java\n@@ -61,7 +61,8 @@ public class ReplicatedTokenRequest implements CoreReplicatedContent\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -72,12 +73,13 @@ public class ReplicatedTokenRequest implements CoreReplicatedContent\n         {\n             return false;\n         }\n-        if ( !tokenName.equals( that.tokenName ) )\n+\n+if ( !tokenName.equals( that.tokenName ) )\n         {\n             return false;\n         }\n-        return Arrays.equals( commandBytes, that.commandBytes );\n \n+return Arrays.equals( commandBytes, that.commandBytes );\n     }\n \n     @Override\n@@ -101,4 +103,4 @@ public class ReplicatedTokenRequest implements CoreReplicatedContent\n     {\n         commandDispatcher.dispatch( this, commandIndex, callback );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
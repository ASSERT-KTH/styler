{
    "project_name": "graphfoundation-ongdb",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/40/ClientConnectorAddresses.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/40/ClientConnectorAddresses.java\nindex 6100e7b0ca7..62f563671c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/40/ClientConnectorAddresses.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/40/ClientConnectorAddresses.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.net.URI;\n@@ -40,147 +41,146 @@ import static org.neo4j.causalclustering.discovery.ClientConnectorAddresses.Sche\n \n public class ClientConnectorAddresses implements Iterable<ClientConnectorAddresses.ConnectorUri>\n {\n-    private final List<ConnectorUri> connectorUris;\n+  private final List<ConnectorUri> connectorUris;\n \n-    public ClientConnectorAddresses( List<ConnectorUri> connectorUris )\n-    {\n-        this.connectorUris = connectorUris;\n-    }\n+  public ClientConnectorAddresses(List<ConnectorUri> connectorUris)\n+  {\n+    this.connectorUris = connectorUris;\n+  }\n+\n+  static ClientConnectorAddresses extractFromConfig(Config config)\n+  {\n+    List<ConnectorUri> connectorUris = new ArrayList<>();\n+\n+    List<BoltConnector> boltConnectors = config.enabledBoltConnectors();\n \n-    static ClientConnectorAddresses extractFromConfig( Config config )\n+    if (boltConnectors.isEmpty())\n     {\n-        List<ConnectorUri> connectorUris = new ArrayList<>();\n+      throw new IllegalArgumentException(\"A Bolt connector must be configured to run a cluster\");\n+    }\n \n-        List<BoltConnector> boltConnectors = config.enabledBoltConnectors();\n+    boltConnectors\n+        .forEach(c -> connectorUris.add(new ConnectorUri(bolt, config.get(c.advertised_address))));\n \n-        if ( boltConnectors.isEmpty() )\n-        {\n-            throw new IllegalArgumentException( \"A Bolt connector must be configured to run a cluster\" );\n-        }\n+    config.enabledHttpConnectors()\n+        .forEach(c -> connectorUris.add(new ConnectorUri(Encryption.NONE.equals(c.encryptionLevel()) ?\n+            http : https, config.get(c.advertised_address))));\n \n-        boltConnectors\n-                .forEach( c -> connectorUris.add( new ConnectorUri( bolt, config.get( c.advertised_address ) ) ) );\n+    return new ClientConnectorAddresses(connectorUris);\n+  }\n \n-        config.enabledHttpConnectors()\n-                .forEach( c -> connectorUris.add( new ConnectorUri( Encryption.NONE.equals(c.encryptionLevel() ) ?\n-                        http : https, config.get( c.advertised_address ) ) ) );\n+  public AdvertisedSocketAddress boltAddress()\n+  {\n+    return connectorUris.stream().filter(connectorUri -> connectorUri.scheme == bolt).findFirst().orElseThrow(\n+        () -> new IllegalArgumentException(\"A Bolt connector must be configured to run a cluster\"))\n+        .socketAddress;\n+  }\n \n-        return new ClientConnectorAddresses( connectorUris );\n-    }\n+  public List<URI> uriList()\n+  {\n+    return connectorUris.stream().map(ConnectorUri::toUri).collect(Collectors.toList());\n+  }\n \n-    public AdvertisedSocketAddress boltAddress()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return connectorUris.stream().filter( connectorUri -> connectorUri.scheme == bolt ).findFirst().orElseThrow(\n-                () -> new IllegalArgumentException( \"A Bolt connector must be configured to run a cluster\" ) )\n-                .socketAddress;\n+      return true;\n     }\n-\n-    public List<URI> uriList()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return connectorUris.stream().map( ConnectorUri::toUri ).collect( Collectors.toList() );\n+      return false;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    ClientConnectorAddresses that = (ClientConnectorAddresses) o;\n+    return Objects.equals(connectorUris, that.connectorUris);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(connectorUris);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return connectorUris.stream().map(ConnectorUri::toString).collect(Collectors.joining(\",\"));\n+  }\n+\n+  static ClientConnectorAddresses fromString(String value)\n+  {\n+    return new ClientConnectorAddresses(Stream.of(value.split(\",\"))\n+        .map(ConnectorUri::fromString).collect(Collectors.toList()));\n+  }\n+\n+  @Override\n+  public Iterator<ConnectorUri> iterator()\n+  {\n+    return connectorUris.iterator();\n+  }\n+\n+  public enum Scheme\n+  {\n+    bolt, http, https\n+  }\n+\n+  public static class ConnectorUri\n+  {\n+    private final Scheme scheme;\n+    private final AdvertisedSocketAddress socketAddress;\n+\n+    public ConnectorUri(Scheme scheme, AdvertisedSocketAddress socketAddress)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        ClientConnectorAddresses that = (ClientConnectorAddresses) o;\n-        return Objects.equals( connectorUris, that.connectorUris );\n+      this.scheme = scheme;\n+      this.socketAddress = socketAddress;\n     }\n \n-    @Override\n-    public int hashCode()\n+    private URI toUri()\n     {\n-        return Objects.hash( connectorUris );\n+      try\n+      {\n+        return new URI(scheme.name().toLowerCase(), null, socketAddress.getHostname(), socketAddress.getPort(),\n+            null, null, null);\n+      } catch (URISyntaxException e)\n+      {\n+        throw new IllegalArgumentException(e);\n+      }\n     }\n \n     @Override\n     public String toString()\n     {\n-        return connectorUris.stream().map( ConnectorUri::toString ).collect( Collectors.joining( \",\" ) );\n+      return toUri().toString();\n     }\n \n-    static ClientConnectorAddresses fromString( String value )\n+    private static ConnectorUri fromString(String string)\n     {\n-        return new ClientConnectorAddresses( Stream.of( value.split( \",\" ) )\n-                .map( ConnectorUri::fromString ).collect( Collectors.toList() ) );\n+      URI uri = URI.create(string);\n+      AdvertisedSocketAddress advertisedSocketAddress = SocketAddressParser.socketAddress(uri.getAuthority(), AdvertisedSocketAddress::new);\n+      return new ConnectorUri(Scheme.valueOf(uri.getScheme()), advertisedSocketAddress);\n     }\n \n     @Override\n-    public Iterator<ConnectorUri> iterator()\n-    {\n-        return connectorUris.iterator();\n-    }\n-\n-    public enum Scheme\n+    public boolean equals(Object o)\n     {\n-        bolt, http, https\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ConnectorUri that = (ConnectorUri) o;\n+      return scheme == that.scheme &&\n+          Objects.equals(socketAddress, that.socketAddress);\n     }\n \n-    public static class ConnectorUri\n+    @Override\n+    public int hashCode()\n     {\n-        private final Scheme scheme;\n-        private final AdvertisedSocketAddress socketAddress;\n-\n-        public ConnectorUri( Scheme scheme, AdvertisedSocketAddress socketAddress )\n-        {\n-            this.scheme = scheme;\n-            this.socketAddress = socketAddress;\n-        }\n-\n-        private URI toUri()\n-        {\n-            try\n-            {\n-                return new URI( scheme.name().toLowerCase(), null, socketAddress.getHostname(), socketAddress.getPort(),\n-                        null, null, null );\n-            }\n-            catch ( URISyntaxException e )\n-            {\n-                throw new IllegalArgumentException( e );\n-            }\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return toUri().toString();\n-        }\n-\n-        private static ConnectorUri fromString( String string )\n-        {\n-            URI uri = URI.create( string );\n-            AdvertisedSocketAddress advertisedSocketAddress = SocketAddressParser.socketAddress( uri.getAuthority(), AdvertisedSocketAddress::new );\n-            return new ConnectorUri( Scheme.valueOf( uri.getScheme() ), advertisedSocketAddress );\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ConnectorUri that = (ConnectorUri) o;\n-            return scheme == that.scheme &&\n-                    Objects.equals( socketAddress, that.socketAddress );\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( scheme, socketAddress );\n-        }\n+      return Objects.hash(scheme, socketAddress);\n     }\n+  }\n }\n",
            "diff_size": 183
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "column": "42",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/40/ClientConnectorAddresses.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/40/ClientConnectorAddresses.java\nindex 6100e7b0ca7..68240196f4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/40/ClientConnectorAddresses.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/40/ClientConnectorAddresses.java\n@@ -52,27 +52,19 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n         List<ConnectorUri> connectorUris = new ArrayList<>();\n \n         List<BoltConnector> boltConnectors = config.enabledBoltConnectors();\n-\n-        if ( boltConnectors.isEmpty() )\n+if ( boltConnectors.isEmpty() )\n         {\n             throw new IllegalArgumentException( \"A Bolt connector must be configured to run a cluster\" );\n         }\n \n-        boltConnectors\n-                .forEach( c -> connectorUris.add( new ConnectorUri( bolt, config.get( c.advertised_address ) ) ) );\n-\n-        config.enabledHttpConnectors()\n-                .forEach( c -> connectorUris.add( new ConnectorUri( Encryption.NONE.equals(c.encryptionLevel() ) ?\n-                        http : https, config.get( c.advertised_address ) ) ) );\n-\n-        return new ClientConnectorAddresses( connectorUris );\n+        boltConnectors.forEach( c -> connectorUris.add( new ConnectorUri( bolt, config.get( c.advertised_address ) ) ) );\n+config.enabledHttpConnectors().forEach( c -> connectorUris.add( new ConnectorUri( Encryption.NONE.equals(c.encryptionLevel() ) ? http : https, config.get( c.advertised_address ) ) ) );\n+return new ClientConnectorAddresses( connectorUris );\n     }\n \n     public AdvertisedSocketAddress boltAddress()\n     {\n-        return connectorUris.stream().filter( connectorUri -> connectorUri.scheme == bolt ).findFirst().orElseThrow(\n-                () -> new IllegalArgumentException( \"A Bolt connector must be configured to run a cluster\" ) )\n-                .socketAddress;\n+        return connectorUris.stream().filter( connectorUri -> connectorUri.scheme == bolt ).findFirst().orElseThrow(() -> new IllegalArgumentException( \"A Bolt connector must be configured to run a cluster\" ) ).socketAddress;\n     }\n \n     public List<URI> uriList()\n@@ -87,11 +79,13 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        ClientConnectorAddresses that = (ClientConnectorAddresses) o;\n+\n+ClientConnectorAddresses that = (ClientConnectorAddresses) o;\n         return Objects.equals( connectorUris, that.connectorUris );\n     }\n \n@@ -109,8 +103,7 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n \n     static ClientConnectorAddresses fromString( String value )\n     {\n-        return new ClientConnectorAddresses( Stream.of( value.split( \",\" ) )\n-                .map( ConnectorUri::fromString ).collect( Collectors.toList() ) );\n+        return new ClientConnectorAddresses( Stream.of( value.split( \",\" ) ).map( ConnectorUri::fromString ).collect( Collectors.toList() ) );\n     }\n \n     @Override\n@@ -139,9 +132,8 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n         {\n             try\n             {\n-                return new URI( scheme.name().toLowerCase(), null, socketAddress.getHostname(), socketAddress.getPort(),\n-                        null, null, null );\n-            }\n+                return new URI( scheme.name().toLowerCase(), null, socketAddress.getHostname(), socketAddress.getPort(), null, null, null );\n+    }\n             catch ( URISyntaxException e )\n             {\n                 throw new IllegalArgumentException( e );\n@@ -168,13 +160,14 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            ConnectorUri that = (ConnectorUri) o;\n-            return scheme == that.scheme &&\n-                    Objects.equals( socketAddress, that.socketAddress );\n+\n+ConnectorUri that = (ConnectorUri) o;\n+            return scheme == that.scheme &&Objects.equals( socketAddress, that.socketAddress );\n         }\n \n         @Override\n@@ -183,4 +176,4 @@ public class ClientConnectorAddresses implements Iterable<ClientConnectorAddress\n             return Objects.hash( scheme, socketAddress );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
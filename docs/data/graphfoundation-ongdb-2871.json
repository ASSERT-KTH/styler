{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2871",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2871/ActiveState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2871/ActiveState.java\nindex 9e991bfd583..ac8dd50a4f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2871/ActiveState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2871/ActiveState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.io.File;\n@@ -28,87 +29,87 @@ import org.neo4j.io.pagecache.tracing.cursor.context.VersionContextSupplier;\n \n public abstract class ActiveState<Key> extends ProgressiveState<Key>\n {\n-    public interface Factory\n-    {\n-        <Key> ActiveState<Key> open( ReadableState<Key> store, File file, VersionContextSupplier versionContextSupplier );\n-    }\n-\n-    protected final ReadableState<Key> store;\n-    protected final VersionContextSupplier versionContextSupplier;\n-\n-    public ActiveState( ReadableState<Key> store, VersionContextSupplier versionContextSupplier )\n-    {\n-        this.store = store;\n-        this.versionContextSupplier = versionContextSupplier;\n-    }\n-\n-    @Override\n-    protected final KeyFormat<Key> keyFormat()\n-    {\n-        return store.keyFormat();\n-    }\n-\n-    @Override\n-    final String stateName()\n-    {\n-        return \"active\";\n-    }\n-\n-    @Override\n-    protected abstract long storedVersion();\n-\n-    @Override\n-    final RotationState.Rotation<Key> prepareRotation( long version )\n-    {\n-        version = Math.max( version, version() );\n-        return new RotationState.Rotation<>( this, prototype( version ), version );\n-    }\n-\n-    @Override\n-    final Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n-    {\n-        return Optional.of( updater( version, lock ) );\n-    }\n-\n-    protected abstract EntryUpdater<Key> updater( long version, Lock lock );\n-\n-    @Override\n-    final EntryUpdater<Key> resetter( Lock lock, Runnable closeAction )\n+  public interface Factory\n+  {\n+    <Key> ActiveState<Key> open(ReadableState<Key> store, File file, VersionContextSupplier versionContextSupplier);\n+  }\n+\n+  protected final ReadableState<Key> store;\n+  protected final VersionContextSupplier versionContextSupplier;\n+\n+  public ActiveState(ReadableState<Key> store, VersionContextSupplier versionContextSupplier)\n+  {\n+    this.store = store;\n+    this.versionContextSupplier = versionContextSupplier;\n+  }\n+\n+  @Override\n+  protected final KeyFormat<Key> keyFormat()\n+  {\n+    return store.keyFormat();\n+  }\n+\n+  @Override\n+  final String stateName()\n+  {\n+    return \"active\";\n+  }\n+\n+  @Override\n+  protected abstract long storedVersion();\n+\n+  @Override\n+  final RotationState.Rotation<Key> prepareRotation(long version)\n+  {\n+    version = Math.max(version, version());\n+    return new RotationState.Rotation<>(this, prototype(version), version);\n+  }\n+\n+  @Override\n+  final Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n+  {\n+    return Optional.of(updater(version, lock));\n+  }\n+\n+  protected abstract EntryUpdater<Key> updater(long version, Lock lock);\n+\n+  @Override\n+  final EntryUpdater<Key> resetter(Lock lock, Runnable closeAction)\n+  {\n+    if (hasChanges())\n     {\n-        if ( hasChanges() )\n-        {\n-            throw new IllegalStateException( \"Cannot reset while there are changes.\" );\n-        }\n-        return resettingUpdater( lock, closeAction );\n+      throw new IllegalStateException(\"Cannot reset while there are changes.\");\n     }\n+    return resettingUpdater(lock, closeAction);\n+  }\n \n-    @Override\n-    final ProgressiveState<Key> stop() throws IOException\n-    {\n-        close();\n-        return new DeadState.Stopped<>( keyFormat(), factory(), versionContextSupplier );\n-    }\n+  @Override\n+  final ProgressiveState<Key> stop() throws IOException\n+  {\n+    close();\n+    return new DeadState.Stopped<>(keyFormat(), factory(), versionContextSupplier);\n+  }\n \n-    @Override\n-    protected final Headers headers()\n-    {\n-        return store.headers();\n-    }\n+  @Override\n+  protected final Headers headers()\n+  {\n+    return store.headers();\n+  }\n \n-    @Override\n-    protected final int storedEntryCount()\n-    {\n-        return store.storedEntryCount();\n-    }\n+  @Override\n+  protected final int storedEntryCount()\n+  {\n+    return store.storedEntryCount();\n+  }\n \n-    protected abstract EntryUpdater<Key> resettingUpdater( Lock lock, Runnable closeAction );\n+  protected abstract EntryUpdater<Key> resettingUpdater(Lock lock, Runnable closeAction);\n \n-    @Override\n-    protected abstract boolean hasChanges();\n+  @Override\n+  protected abstract boolean hasChanges();\n \n-    protected abstract PrototypeState<Key> prototype( long version );\n+  protected abstract PrototypeState<Key> prototype(long version);\n \n-    protected abstract Factory factory();\n+  protected abstract Factory factory();\n \n-    protected abstract long applied();\n+  protected abstract long applied();\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2871/ActiveState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2871/ActiveState.java\nindex 9e991bfd583..c32bc32ef6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2871/ActiveState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2871/ActiveState.java\n@@ -79,7 +79,8 @@ public abstract class ActiveState<Key> extends ProgressiveState<Key>\n         {\n             throw new IllegalStateException( \"Cannot reset while there are changes.\" );\n         }\n-        return resettingUpdater( lock, closeAction );\n+\n+return resettingUpdater( lock, closeAction );\n     }\n \n     @Override\n@@ -111,4 +112,4 @@ public abstract class ActiveState<Key> extends ProgressiveState<Key>\n     protected abstract Factory factory();\n \n     protected abstract long applied();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
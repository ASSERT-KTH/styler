{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "277",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        // https://stackoverflow.com/a/20418809\n        try {\n            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n                NetworkInterface iface = ifaces.nextElement();\n                for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n                    InetAddress inetAddr = inetAddrs.nextElement();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/4/JettyServer.java\nindex 0b47a098132..b5966b00c9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/4/JettyServer.java\n@@ -274,8 +274,9 @@ public class JettyServer {\n \n         // https://stackoverflow.com/a/20418809\n         try {\n-            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n-                NetworkInterface iface = ifaces.nextElement();\n+            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces();\n+            ifaces.hasMoreElements();) {\n+                 NetworkInterface iface = ifaces.nextElement();\n                 for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n                     InetAddress inetAddr = inetAddrs.nextElement();\n                     if (!inetAddr.isLoopbackAddress() && (inetAddr instanceof Inet4Address)) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "278",
                    "column": "118",
                    "severity": "error",
                    "message": "';' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
                },
                {
                    "line": "280",
                    "column": "106",
                    "severity": "error",
                    "message": "';' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/4/JettyServer.java\nindex 0b47a098132..633a931aa9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/4/JettyServer.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve;\n \n import de.rwth.idsg.steve.web.dto.EndpointInfo;\n@@ -59,243 +60,243 @@ import static de.rwth.idsg.steve.SteveConfiguration.CONFIG;\n @Slf4j\n public class JettyServer {\n \n-    private Server server;\n-\n-    private static final int MIN_THREADS = 4;\n-    private static final int MAX_THREADS = 50;\n-\n-    private static final long STOP_TIMEOUT = TimeUnit.SECONDS.toMillis(5);\n-    private static final long IDLE_TIMEOUT = TimeUnit.MINUTES.toMillis(1);\n-\n-    /**\n-     * A fully configured Jetty Server instance\n-     */\n-    private void prepare() {\n-\n-        // === jetty.xml ===\n-        // Setup Threadpool\n-        QueuedThreadPool threadPool = new QueuedThreadPool();\n-        threadPool.setMinThreads(MIN_THREADS);\n-        threadPool.setMaxThreads(MAX_THREADS);\n-\n-        // Server\n-        server = new Server(threadPool);\n-\n-        // Scheduler\n-        server.addBean(new ScheduledExecutorScheduler());\n-\n-        // HTTP Configuration\n-        HttpConfiguration httpConfig = new HttpConfiguration();\n-        httpConfig.setSecureScheme(HttpScheme.HTTPS.asString());\n-        httpConfig.setSecurePort(CONFIG.getJetty().getHttpsPort());\n-        httpConfig.setOutputBufferSize(32768);\n-        httpConfig.setRequestHeaderSize(8192);\n-        httpConfig.setResponseHeaderSize(8192);\n-        httpConfig.setSendServerVersion(false);\n-        httpConfig.setSendDateHeader(false);\n-        httpConfig.setSendXPoweredBy(false);\n-\n-        // Extra options\n-        server.setDumpAfterStart(false);\n-        server.setDumpBeforeStop(false);\n-        server.setStopAtShutdown(true);\n-        server.setStopTimeout(STOP_TIMEOUT);\n-\n-        if (CONFIG.getJetty().isHttpEnabled()) {\n-            server.addConnector(httpConnector(httpConfig));\n-        }\n-\n-        if (CONFIG.getJetty().isHttpsEnabled()) {\n-            server.addConnector(httpsConnector(httpConfig));\n-        }\n-\n-        SteveAppContext steveAppContext = new SteveAppContext();\n-        server.setHandler(steveAppContext.getHandlers());\n+  private Server server;\n+\n+  private static final int MIN_THREADS = 4;\n+  private static final int MAX_THREADS = 50;\n+\n+  private static final long STOP_TIMEOUT = TimeUnit.SECONDS.toMillis(5);\n+  private static final long IDLE_TIMEOUT = TimeUnit.MINUTES.toMillis(1);\n+\n+  /**\n+   * A fully configured Jetty Server instance\n+   */\n+  private void prepare() {\n+\n+    // === jetty.xml ===\n+    // Setup Threadpool\n+    QueuedThreadPool threadPool = new QueuedThreadPool();\n+    threadPool.setMinThreads(MIN_THREADS);\n+    threadPool.setMaxThreads(MAX_THREADS);\n+\n+    // Server\n+    server = new Server(threadPool);\n+\n+    // Scheduler\n+    server.addBean(new ScheduledExecutorScheduler());\n+\n+    // HTTP Configuration\n+    HttpConfiguration httpConfig = new HttpConfiguration();\n+    httpConfig.setSecureScheme(HttpScheme.HTTPS.asString());\n+    httpConfig.setSecurePort(CONFIG.getJetty().getHttpsPort());\n+    httpConfig.setOutputBufferSize(32768);\n+    httpConfig.setRequestHeaderSize(8192);\n+    httpConfig.setResponseHeaderSize(8192);\n+    httpConfig.setSendServerVersion(false);\n+    httpConfig.setSendDateHeader(false);\n+    httpConfig.setSendXPoweredBy(false);\n+\n+    // Extra options\n+    server.setDumpAfterStart(false);\n+    server.setDumpBeforeStop(false);\n+    server.setStopAtShutdown(true);\n+    server.setStopTimeout(STOP_TIMEOUT);\n+\n+    if (CONFIG.getJetty().isHttpEnabled()) {\n+      server.addConnector(httpConnector(httpConfig));\n     }\n \n-    private ServerConnector httpConnector(HttpConfiguration httpConfig) {\n-        // === jetty-http.xml ===\n-        ServerConnector http = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n-        http.setHost(CONFIG.getJetty().getServerHost());\n-        http.setPort(CONFIG.getJetty().getHttpPort());\n-        http.setIdleTimeout(IDLE_TIMEOUT);\n-        return http;\n+    if (CONFIG.getJetty().isHttpsEnabled()) {\n+      server.addConnector(httpsConnector(httpConfig));\n     }\n \n-    private ServerConnector httpsConnector(HttpConfiguration httpConfig) {\n-        // === jetty-https.xml ===\n-        // SSL Context Factory\n-        SslContextFactory sslContextFactory = new SslContextFactory();\n-        sslContextFactory.setKeyStorePath(CONFIG.getJetty().getKeyStorePath());\n-        sslContextFactory.setKeyStorePassword(CONFIG.getJetty().getKeyStorePassword());\n-        sslContextFactory.setKeyManagerPassword(CONFIG.getJetty().getKeyStorePassword());\n-        sslContextFactory.setExcludeCipherSuites(\n-                \"SSL_RSA_WITH_DES_CBC_SHA\",\n-                \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",\n-                \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n-                \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n-                \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n-                \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n-                \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\");\n-\n-        // SSL HTTP Configuration\n-        HttpConfiguration httpsConfig = new HttpConfiguration(httpConfig);\n-        httpsConfig.addCustomizer(new SecureRequestCustomizer());\n-\n-        // SSL Connector\n-        ServerConnector https = new ServerConnector(server,\n-                new SslConnectionFactory(sslContextFactory, HttpVersion.HTTP_1_1.asString()),\n-                new HttpConnectionFactory(httpsConfig));\n-        https.setHost(CONFIG.getJetty().getServerHost());\n-        https.setPort(CONFIG.getJetty().getHttpsPort());\n-        https.setIdleTimeout(IDLE_TIMEOUT);\n-        return https;\n+    SteveAppContext steveAppContext = new SteveAppContext();\n+    server.setHandler(steveAppContext.getHandlers());\n+  }\n+\n+  private ServerConnector httpConnector(HttpConfiguration httpConfig) {\n+    // === jetty-http.xml ===\n+    ServerConnector http = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n+    http.setHost(CONFIG.getJetty().getServerHost());\n+    http.setPort(CONFIG.getJetty().getHttpPort());\n+    http.setIdleTimeout(IDLE_TIMEOUT);\n+    return http;\n+  }\n+\n+  private ServerConnector httpsConnector(HttpConfiguration httpConfig) {\n+    // === jetty-https.xml ===\n+    // SSL Context Factory\n+    SslContextFactory sslContextFactory = new SslContextFactory();\n+    sslContextFactory.setKeyStorePath(CONFIG.getJetty().getKeyStorePath());\n+    sslContextFactory.setKeyStorePassword(CONFIG.getJetty().getKeyStorePassword());\n+    sslContextFactory.setKeyManagerPassword(CONFIG.getJetty().getKeyStorePassword());\n+    sslContextFactory.setExcludeCipherSuites(\n+      \"SSL_RSA_WITH_DES_CBC_SHA\",\n+      \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",\n+      \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n+      \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n+      \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+      \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+      \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\");\n+\n+    // SSL HTTP Configuration\n+    HttpConfiguration httpsConfig = new HttpConfiguration(httpConfig);\n+    httpsConfig.addCustomizer(new SecureRequestCustomizer());\n+\n+    // SSL Connector\n+    ServerConnector https = new ServerConnector(server,\n+      new SslConnectionFactory(sslContextFactory, HttpVersion.HTTP_1_1.asString()),\n+      new HttpConnectionFactory(httpsConfig));\n+    https.setHost(CONFIG.getJetty().getServerHost());\n+    https.setPort(CONFIG.getJetty().getHttpsPort());\n+    https.setIdleTimeout(IDLE_TIMEOUT);\n+    return https;\n+  }\n+\n+  /**\n+   * Starts the Jetty Server instance\n+   */\n+  public void start() throws Exception {\n+    prepare();\n+\n+    if (server != null) {\n+      server.start();\n+      populateEndpointInfo();\n     }\n-\n-    /**\n-     * Starts the Jetty Server instance\n-     */\n-    public void start() throws Exception {\n-        prepare();\n-\n-        if (server != null) {\n-            server.start();\n-            populateEndpointInfo();\n-        }\n+  }\n+\n+  /**\n+   * Join the server thread with the current thread\n+   */\n+  public void join() throws Exception {\n+    if (server != null) {\n+      server.join();\n     }\n+  }\n \n-    /**\n-     * Join the server thread with the current thread\n-     */\n-    public void join() throws Exception {\n-        if (server != null) {\n-            server.join();\n-        }\n+  public void stop() throws Exception {\n+    if (server != null) {\n+      server.stop();\n     }\n+  }\n \n-    public void stop() throws Exception {\n-        if (server != null) {\n-            server.stop();\n-        }\n-    }\n+  public boolean isStarted() {\n+    return server != null && server.isStarted();\n+  }\n \n-    public boolean isStarted() {\n-        return server != null && server.isStarted();\n-    }\n+  public void populateEndpointInfo() {\n+    List<String> list = getConnectorPathList();\n \n-    public void populateEndpointInfo() {\n-        List<String> list = getConnectorPathList();\n+    EndpointInfo info = EndpointInfo.INSTANCE;\n \n-        EndpointInfo info = EndpointInfo.INSTANCE;\n+    info.getWebInterface().setData(buildList(list, false));\n+    info.getOcppSoap().setData(buildList(list, false));\n+    info.getOcppWebSocket().setData(buildList(list, true));\n+  }\n \n-        info.getWebInterface().setData(buildList(list, false));\n-        info.getOcppSoap().setData(buildList(list, false));\n-        info.getOcppWebSocket().setData(buildList(list, true));\n+  private List<String> getConnectorPathList() {\n+    if (server == null) {\n+      return Collections.emptyList();\n     }\n \n-    private List<String> getConnectorPathList() {\n-        if (server == null) {\n-            return Collections.emptyList();\n-        }\n+    return Arrays.stream(server.getConnectors())\n+      .map(JettyServer::getConnectorPath)\n+      .flatMap(Collection::stream)\n+      .collect(Collectors.toList());\n+  }\n+\n+  private static List<String> getConnectorPath(Connector c) {\n+    ServerConnector sc = (ServerConnector) c;\n \n-        return Arrays.stream(server.getConnectors())\n-                     .map(JettyServer::getConnectorPath)\n-                     .flatMap(Collection::stream)\n-                     .collect(Collectors.toList());\n+    final String prefix;\n+    if (sc.getDefaultConnectionFactory() instanceof SslConnectionFactory) {\n+      prefix = \"https\";\n+    } else {\n+      prefix = \"http\";\n     }\n \n-    private static List<String> getConnectorPath(Connector c) {\n-        ServerConnector sc = (ServerConnector) c;\n+    Set<String> ips = new HashSet<>();\n+    String host = sc.getHost();\n+    if (host == null || host.equals(\"0.0.0.0\")) {\n+      ips.addAll(getPossibleIpAddresses());\n+    } else {\n+      ips.add(host);\n+    }\n \n-        final String prefix;\n-        if (sc.getDefaultConnectionFactory() instanceof SslConnectionFactory) {\n-            prefix = \"https\";\n-        } else {\n-            prefix = \"http\";\n-        }\n+    String layout = \"%s://%s:%d\" + CONFIG.getContextPath();\n \n-        Set<String> ips = new HashSet<>();\n-        String host = sc.getHost();\n-        if (host == null || host.equals(\"0.0.0.0\")) {\n-            ips.addAll(getPossibleIpAddresses());\n-        } else {\n-            ips.add(host);\n-        }\n+    return ips.stream()\n+      .map(k -> String.format(layout, prefix, k, sc.getPort()))\n+      .collect(Collectors.toList());\n+  }\n \n-        String layout = \"%s://%s:%d\" + CONFIG.getContextPath();\n+  private List<String> buildList(List<String> list, boolean replaceHttp) {\n+    return list.stream()\n+      .map(s -> getElementPrefix(s, replaceHttp))\n+      .collect(Collectors.toList());\n+  }\n \n-        return ips.stream()\n-                  .map(k -> String.format(layout, prefix, k, sc.getPort()))\n-                  .collect(Collectors.toList());\n+  private String getElementPrefix(String str, boolean replaceHttp) {\n+    if (replaceHttp) {\n+      return str.replaceFirst(\"http\", \"ws\");\n+    } else {\n+      return str;\n     }\n-\n-    private List<String> buildList(List<String> list, boolean replaceHttp) {\n-        return list.stream()\n-                   .map(s -> getElementPrefix(s, replaceHttp))\n-                   .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * Uses different APIs to find out the IP of this machine.\n+   */\n+  private static List<String> getPossibleIpAddresses() {\n+    final String host = \"treibhaus.informatik.rwth-aachen.de\";\n+    final List<String> ips = new ArrayList<>();\n+\n+    try {\n+      ips.add(InetAddress.getLocalHost().getHostAddress());\n+    } catch (Exception e) {\n+      // fail silently\n     }\n \n-    private String getElementPrefix(String str, boolean replaceHttp) {\n-        if (replaceHttp) {\n-            return str.replaceFirst(\"http\", \"ws\");\n-        } else {\n-            return str;\n-        }\n+    try {\n+      Socket socket = new Socket();\n+      socket.connect(new InetSocketAddress(host, 80));\n+      ips.add(socket.getLocalAddress().getHostAddress());\n+    } catch (Exception e) {\n+      // fail silently\n     }\n \n-    /**\n-     * Uses different APIs to find out the IP of this machine.\n-     */\n-    private static List<String> getPossibleIpAddresses() {\n-        final String host = \"treibhaus.informatik.rwth-aachen.de\";\n-        final List<String> ips = new ArrayList<>();\n-\n-        try {\n-            ips.add(InetAddress.getLocalHost().getHostAddress());\n-        } catch (Exception e) {\n-            // fail silently\n-        }\n-\n-        try {\n-            Socket socket = new Socket();\n-            socket.connect(new InetSocketAddress(host, 80));\n-            ips.add(socket.getLocalAddress().getHostAddress());\n-        } catch (Exception e) {\n-            // fail silently\n-        }\n-\n-        // https://stackoverflow.com/a/38342964\n-        try (DatagramSocket socket = new DatagramSocket()) {\n-            socket.connect(InetAddress.getByName(\"8.8.8.8\"), 10002);\n-            ips.add(socket.getLocalAddress().getHostAddress());\n-        } catch (Exception e) {\n-            // fail silently\n-        }\n+    // https://stackoverflow.com/a/38342964\n+    try (DatagramSocket socket = new DatagramSocket()) {\n+      socket.connect(InetAddress.getByName(\"8.8.8.8\"), 10002);\n+      ips.add(socket.getLocalAddress().getHostAddress());\n+    } catch (Exception e) {\n+      // fail silently\n+    }\n \n-        // https://stackoverflow.com/a/20418809\n-        try {\n-            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n-                NetworkInterface iface = ifaces.nextElement();\n-                for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n-                    InetAddress inetAddr = inetAddrs.nextElement();\n-                    if (!inetAddr.isLoopbackAddress() && (inetAddr instanceof Inet4Address)) {\n-                        ips.add(inetAddr.getHostAddress());\n-                    }\n-                }\n-            }\n-\n-        } catch (Exception e) {\n-            // fail silently\n+    // https://stackoverflow.com/a/20418809\n+    try {\n+      for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements(); ) {\n+        NetworkInterface iface = ifaces.nextElement();\n+        for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements(); ) {\n+          InetAddress inetAddr = inetAddrs.nextElement();\n+          if (!inetAddr.isLoopbackAddress() && (inetAddr instanceof Inet4Address)) {\n+            ips.add(inetAddr.getHostAddress());\n+          }\n         }\n+      }\n \n-        ips.removeIf(\"0.0.0.0\"::equals);\n+    } catch (Exception e) {\n+      // fail silently\n+    }\n \n-        if (ips.isEmpty()) {\n-            // Well, we failed to read from system, fall back to main.properties.\n-            // Better than nothing\n-            ips.add(CONFIG.getJetty().getServerHost());\n-        }\n+    ips.removeIf(\"0.0.0.0\"::equals);\n \n-        return ips;\n+    if (ips.isEmpty()) {\n+      // Well, we failed to read from system, fall back to main.properties.\n+      // Better than nothing\n+      ips.add(CONFIG.getJetty().getServerHost());\n     }\n+\n+    return ips;\n+  }\n }\n",
            "diff_size": 269
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/4/JettyServer.java\nindex 0b47a098132..b3f0afbc23b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/4/JettyServer.java\n@@ -15,8 +15,7 @@\n  *\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n- */\n-package de.rwth.idsg.steve;\n+ */package de.rwth.idsg.steve;\n \n import de.rwth.idsg.steve.web.dto.EndpointInfo;\n import lombok.extern.slf4j.Slf4j;\n@@ -199,7 +198,7 @@ public class JettyServer {\n         }\n \n         return Arrays.stream(server.getConnectors())\n-                     .map(JettyServer::getConnectorPath)\n+.map(JettyServer::getConnectorPath)\n                      .flatMap(Collection::stream)\n                      .collect(Collectors.toList());\n     }\n@@ -274,9 +273,11 @@ public class JettyServer {\n \n         // https://stackoverflow.com/a/20418809\n         try {\n-            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n+            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces();\n+ifaces.hasMoreElements();) {\n                 NetworkInterface iface = ifaces.nextElement();\n-                for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n+                for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses();\n+inetAddrs.hasMoreElements();) {\n                     InetAddress inetAddr = inetAddrs.nextElement();\n                     if (!inetAddr.isLoopbackAddress() && (inetAddr instanceof Inet4Address)) {\n                         ips.add(inetAddr.getHostAddress());\n@@ -298,4 +299,4 @@ public class JettyServer {\n \n         return ips;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/4/JettyServer.java\nindex 0b47a098132..b5966b00c9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/4/JettyServer.java\n@@ -274,8 +274,9 @@ public class JettyServer {\n \n         // https://stackoverflow.com/a/20418809\n         try {\n-            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n-                NetworkInterface iface = ifaces.nextElement();\n+            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces();\n+            ifaces.hasMoreElements();) {\n+                 NetworkInterface iface = ifaces.nextElement();\n                 for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n                     InetAddress inetAddr = inetAddrs.nextElement();\n                     if (!inetAddr.isLoopbackAddress() && (inetAddr instanceof Inet4Address)) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "277",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "54",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "277",
                    "column": "54",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "278",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/4/JettyServer.java\nindex 0b47a098132..b8b13df0ffc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/4/JettyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/4/JettyServer.java\n@@ -274,7 +274,8 @@ public class JettyServer {\n \n         // https://stackoverflow.com/a/20418809\n         try {\n-            for (Enumeration<NetworkInterface> ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {\n+            for ( Enumeration<NetworkInterface>ifaces=NetworkInterface .\n+                getNetworkInterfaces (); ifaces.hasMoreElements();) {\n                 NetworkInterface iface = ifaces.nextElement();\n                 for (Enumeration<InetAddress> inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {\n                     InetAddress inetAddr = inetAddrs.nextElement();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff",
        "styler_three_grams"
    ]
}
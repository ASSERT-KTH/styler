{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3040",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "352",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "384",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "394",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "420",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "457",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "549",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3040/StartClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3040/StartClient.java\nindex a2a30b041d0..a454cd5fa52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3040/StartClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3040/StartClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -56,515 +57,501 @@ import static org.neo4j.io.fs.FileUtils.newBufferedFileReader;\n  */\n public class StartClient\n {\n-    private AtomicBoolean hasBeenShutdown = new AtomicBoolean();\n-\n-    /**\n-     * Prints the version and edition of neo4j and exits.\n-     */\n-    public static final String ARG_VERSION = \"version\";\n-\n-    /**\n-     * The path to the local (this JVM) {@link GraphDatabaseService} to\n-     * start and connect to.\n-     */\n-    public static final String ARG_PATH = \"path\";\n-\n-    /**\n-     * Whether or not the shell client should be readonly.\n-     */\n-    public static final String ARG_READONLY = \"readonly\";\n-\n-    /**\n-     * The host (ip or name) to connect remotely to.\n-     */\n-    public static final String ARG_HOST = \"host\";\n-\n-    /**\n-     * The port to connect remotely on. A server must have been started\n-     * on that port.\n-     */\n-    public static final String ARG_PORT = \"port\";\n-\n-    /**\n-     * The RMI name to use.\n-     */\n-    public static final String ARG_NAME = \"name\";\n-\n-    /**\n-     * The PID (process ID) to connect to.\n-     */\n-    public static final String ARG_PID = \"pid\";\n-\n-    /**\n-     * Commands (a line can contain more than one command, with &amp;&amp; in between)\n-     * to execute when the shell client has been connected.\n-     */\n-    public static final String ARG_COMMAND = \"c\";\n-\n-    /**\n-     * File a file with shell commands to execute when the shell client has\n-     * been connected.\n-     */\n-    public static final String ARG_FILE = \"file\";\n-\n-    /**\n-     * Special character used to request reading from stdin rather than a file.\n-     * Uses the dash character, which is a common way to specify this.\n-     */\n-    public static final String ARG_FILE_STDIN = \"-\";\n-\n-    /**\n-     * Configuration file to load and use if a local {@link GraphDatabaseService}\n-     * is started in this JVM.\n-     */\n-    public static final String ARG_CONFIG = \"config\";\n-\n-    private final GraphDatabaseFactory factory;\n-    private final PrintStream out;\n-    private final PrintStream err;\n-\n-    // Visible for testing\n-    StartClient( PrintStream out, PrintStream err )\n-    {\n-        this.factory = loadEditionDatabaseFactory();\n-        this.out = out;\n-        this.err = err;\n-    }\n-\n-    /**\n-     * Starts a shell client. Remote or local depending on the arguments.\n-     *\n-     * @param arguments the arguments from the command line. Can contain\n-     * information about whether to start a local\n-     * {@link GraphDatabaseShellServer} or connect to an already running\n-     * {@link GraphDatabaseService}.\n-     */\n-    public static void main( String[] arguments )\n-    {\n-        InterruptSignalHandler signalHandler = InterruptSignalHandler.getHandler();\n-        try\n-        {\n-            new StartClient( System.out, System.err ).start( arguments, signalHandler );\n-        }\n-        catch ( ShellExecutionFailureException e )\n-        {\n-            e.dumpMessage( System.out, System.err );\n-            System.exit( 1 );\n-        }\n+  private AtomicBoolean hasBeenShutdown = new AtomicBoolean();\n+\n+  /**\n+   * Prints the version and edition of neo4j and exits.\n+   */\n+  public static final String ARG_VERSION = \"version\";\n+\n+  /**\n+   * The path to the local (this JVM) {@link GraphDatabaseService} to\n+   * start and connect to.\n+   */\n+  public static final String ARG_PATH = \"path\";\n+\n+  /**\n+   * Whether or not the shell client should be readonly.\n+   */\n+  public static final String ARG_READONLY = \"readonly\";\n+\n+  /**\n+   * The host (ip or name) to connect remotely to.\n+   */\n+  public static final String ARG_HOST = \"host\";\n+\n+  /**\n+   * The port to connect remotely on. A server must have been started\n+   * on that port.\n+   */\n+  public static final String ARG_PORT = \"port\";\n+\n+  /**\n+   * The RMI name to use.\n+   */\n+  public static final String ARG_NAME = \"name\";\n+\n+  /**\n+   * The PID (process ID) to connect to.\n+   */\n+  public static final String ARG_PID = \"pid\";\n+\n+  /**\n+   * Commands (a line can contain more than one command, with &amp;&amp; in between)\n+   * to execute when the shell client has been connected.\n+   */\n+  public static final String ARG_COMMAND = \"c\";\n+\n+  /**\n+   * File a file with shell commands to execute when the shell client has\n+   * been connected.\n+   */\n+  public static final String ARG_FILE = \"file\";\n+\n+  /**\n+   * Special character used to request reading from stdin rather than a file.\n+   * Uses the dash character, which is a common way to specify this.\n+   */\n+  public static final String ARG_FILE_STDIN = \"-\";\n+\n+  /**\n+   * Configuration file to load and use if a local {@link GraphDatabaseService}\n+   * is started in this JVM.\n+   */\n+  public static final String ARG_CONFIG = \"config\";\n+\n+  private final GraphDatabaseFactory factory;\n+  private final PrintStream out;\n+  private final PrintStream err;\n+\n+  // Visible for testing\n+  StartClient(PrintStream out, PrintStream err)\n+  {\n+    this.factory = loadEditionDatabaseFactory();\n+    this.out = out;\n+    this.err = err;\n+  }\n+\n+  /**\n+   * Starts a shell client. Remote or local depending on the arguments.\n+   *\n+   * @param arguments the arguments from the command line. Can contain\n+   *                  information about whether to start a local\n+   *                  {@link GraphDatabaseShellServer} or connect to an already running\n+   *                  {@link GraphDatabaseService}.\n+   */\n+  public static void main(String[] arguments)\n+  {\n+    InterruptSignalHandler signalHandler = InterruptSignalHandler.getHandler();\n+    try\n+    {\n+      new StartClient(System.out, System.err).start(arguments, signalHandler);\n+    } catch (ShellExecutionFailureException e)\n+    {\n+      e.dumpMessage(System.out, System.err);\n+      System.exit(1);\n     }\n+  }\n \n-    private static GraphDatabaseFactory loadEditionDatabaseFactory()\n+  private static GraphDatabaseFactory loadEditionDatabaseFactory()\n+  {\n+    GraphDatabaseFactory factory;\n+    try\n     {\n-        GraphDatabaseFactory factory;\n-        try\n-        {\n-            factory = (GraphDatabaseFactory) Class.forName( \"org.neo4j.graphdb.factory.EnterpriseGraphDatabaseFactory\" )\n-                    .newInstance();\n-        }\n-        catch ( Exception e )\n-        {\n-            factory = new GraphDatabaseFactory();\n-        }\n-        return factory;\n+      factory = (GraphDatabaseFactory) Class.forName(\"org.neo4j.graphdb.factory.EnterpriseGraphDatabaseFactory\")\n+          .newInstance();\n+    } catch (Exception e)\n+    {\n+      factory = new GraphDatabaseFactory();\n     }\n-\n-    // visible for testing\n-    void start( String[] arguments, CtrlCHandler signalHandler )\n+    return factory;\n+  }\n+\n+  // visible for testing\n+  void start(String[] arguments, CtrlCHandler signalHandler)\n+  {\n+    Args args = Args.withFlags(ARG_READONLY).parse(arguments);\n+    if (args.has(\"?\") || args.has(\"h\") || args.has(\"help\") || args.has(\"usage\"))\n     {\n-        Args args = Args.withFlags( ARG_READONLY ).parse( arguments );\n-        if ( args.has( \"?\" ) || args.has( \"h\" ) || args.has( \"help\" ) || args.has( \"usage\" ) )\n-        {\n-            printUsage( out );\n-            return;\n-        }\n+      printUsage(out);\n+      return;\n+    }\n \n-        String path = args.get( ARG_PATH, null );\n-        String host = args.get( ARG_HOST, null );\n-        String port = args.get( ARG_PORT, null );\n-        String name = args.get( ARG_NAME, null );\n-        String pid = args.get( ARG_PID, null );\n-        boolean version = args.getBoolean( ARG_VERSION, false, true );\n+    String path = args.get(ARG_PATH, null);\n+    String host = args.get(ARG_HOST, null);\n+    String port = args.get(ARG_PORT, null);\n+    String name = args.get(ARG_NAME, null);\n+    String pid = args.get(ARG_PID, null);\n+    boolean version = args.getBoolean(ARG_VERSION, false, true);\n \n-        if ( version )\n-        {\n-            String edition = StringUtils.capitalize( factory.getEdition().toLowerCase() );\n-            out.printf( \"Neo4j %s, version %s\", edition, Version.getNeo4jVersion() );\n-        }\n-        else if ( (path != null && (port != null || name != null || host != null || pid != null))\n-             || (pid != null && host != null) )\n-        {\n-            err.println( \"You have supplied both \" +\n-                         ARG_PATH + \" as well as \" + ARG_HOST + \"/\" + ARG_PORT + \"/\" + ARG_NAME + \". \" +\n-                         \"You should either supply only \" + ARG_PATH +\n-                         \" or \" + ARG_HOST + \"/\" + ARG_PORT + \"/\" + ARG_NAME + \" so that either a local or \" +\n-                         \"remote shell client can be started\" );\n-        }\n-        // Local\n-        else if ( path != null )\n-        {\n-            try\n-            {\n-                checkNeo4jDependency();\n-            }\n-            catch ( ShellException e )\n-            {\n-                throw new ShellExecutionFailureException( e, args );\n-            }\n-            startLocal( args, signalHandler );\n-        }\n-        // Remote\n-        else\n-        {\n-            String readonly = args.get( ARG_READONLY, null );\n-            if ( readonly != null )\n-            {\n-                err.println( \"Warning: -\" + ARG_READONLY + \" is ignored unless you connect with -\" + ARG_PATH + \"!\" );\n-            }\n-\n-            // Start server on the supplied process\n-            if ( pid != null )\n-            {\n-                startServer( pid, args );\n-            }\n-            startRemote( args, signalHandler );\n-        }\n+    if (version)\n+    {\n+      String edition = StringUtils.capitalize(factory.getEdition().toLowerCase());\n+      out.printf(\"Neo4j %s, version %s\", edition, Version.getNeo4jVersion());\n+    } else if ((path != null && (port != null || name != null || host != null || pid != null))\n+        || (pid != null && host != null))\n+    {\n+      err.println(\"You have supplied both \" +\n+          ARG_PATH + \" as well as \" + ARG_HOST + \"/\" + ARG_PORT + \"/\" + ARG_NAME + \". \" +\n+          \"You should either supply only \" + ARG_PATH +\n+          \" or \" + ARG_HOST + \"/\" + ARG_PORT + \"/\" + ARG_NAME + \" so that either a local or \" +\n+          \"remote shell client can be started\");\n+    }\n+    // Local\n+    else if (path != null)\n+    {\n+      try\n+      {\n+        checkNeo4jDependency();\n+      } catch (ShellException e)\n+      {\n+        throw new ShellExecutionFailureException(e, args);\n+      }\n+      startLocal(args, signalHandler);\n     }\n+    // Remote\n+    else\n+    {\n+      String readonly = args.get(ARG_READONLY, null);\n+      if (readonly != null)\n+      {\n+        err.println(\"Warning: -\" + ARG_READONLY + \" is ignored unless you connect with -\" + ARG_PATH + \"!\");\n+      }\n+\n+      // Start server on the supplied process\n+      if (pid != null)\n+      {\n+        startServer(pid, args);\n+      }\n+      startRemote(args, signalHandler);\n+    }\n+  }\n \n-    private static final Method attachMethod;\n-    private static final Method loadMethod;\n+  private static final Method attachMethod;\n+  private static final Method loadMethod;\n \n-    static\n+  static\n+  {\n+    Method attach;\n+    Method load;\n+    try\n     {\n-        Method attach;\n-        Method load;\n-        try\n-        {\n-            Class<?> vmClass = Class.forName( \"com.sun.tools.attach.VirtualMachine\" );\n-            attach = vmClass.getMethod( \"attach\", String.class );\n-            load = vmClass.getMethod( \"loadAgent\", String.class, String.class );\n-        }\n-        catch ( Exception e )\n-        {\n-            attach = load = null;\n-        }\n-        attachMethod = attach;\n-        loadMethod = load;\n+      Class<?> vmClass = Class.forName(\"com.sun.tools.attach.VirtualMachine\");\n+      attach = vmClass.getMethod(\"attach\", String.class);\n+      load = vmClass.getMethod(\"loadAgent\", String.class, String.class);\n+    } catch (Exception e)\n+    {\n+      attach = load = null;\n     }\n+    attachMethod = attach;\n+    loadMethod = load;\n+  }\n \n-    private static void checkNeo4jDependency() throws ShellException\n+  private static void checkNeo4jDependency() throws ShellException\n+  {\n+    try\n     {\n-        try\n-        {\n-            Class.forName( \"org.neo4j.graphdb.GraphDatabaseService\" );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellException( \"Neo4j not found on the classpath\" );\n-        }\n+      Class.forName(\"org.neo4j.graphdb.GraphDatabaseService\");\n+    } catch (Exception e)\n+    {\n+      throw new ShellException(\"Neo4j not found on the classpath\");\n     }\n+  }\n \n-    private void startLocal( Args args, CtrlCHandler signalHandler )\n+  private void startLocal(Args args, CtrlCHandler signalHandler)\n+  {\n+    String path = args.get(ARG_PATH, null);\n+    if (path == null)\n     {\n-        String path = args.get( ARG_PATH, null );\n-        if ( path == null )\n-        {\n-            err.println( \"ERROR: To start a local Neo4j service and a \" +\n-                         \"shell client on top of that you need to supply a path to a \" +\n-                         \"Neo4j store or just a new path where a new store will \" +\n-                         \"be created if it doesn't exist. -\" + ARG_PATH +\n-                         \" /my/path/here\" );\n-            return;\n-        }\n-\n-        try\n-        {\n-            boolean readOnly = args.getBoolean( ARG_READONLY, false, true );\n-            tryStartLocalServerAndClient( new File( path ), readOnly, args, signalHandler );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellExecutionFailureException( e, args );\n-        }\n+      err.println(\"ERROR: To start a local Neo4j service and a \" +\n+          \"shell client on top of that you need to supply a path to a \" +\n+          \"Neo4j store or just a new path where a new store will \" +\n+          \"be created if it doesn't exist. -\" + ARG_PATH +\n+          \" /my/path/here\");\n+      return;\n     }\n \n-    private void tryStartLocalServerAndClient( File path, boolean readOnly, Args args, CtrlCHandler signalHandler )\n-            throws Exception\n+    try\n+    {\n+      boolean readOnly = args.getBoolean(ARG_READONLY, false, true);\n+      tryStartLocalServerAndClient(new File(path), readOnly, args, signalHandler);\n+    } catch (Exception e)\n     {\n-        String configFile = args.get( ARG_CONFIG, null );\n-        final GraphDatabaseShellServer server = getGraphDatabaseShellServer( path, readOnly, configFile );\n-        Runtime.getRuntime().addShutdownHook( new Thread( () -> shutdownIfNecessary( server ) ) );\n+      throw new ShellExecutionFailureException(e, args);\n+    }\n+  }\n \n-        if ( !isCommandLine( args ) )\n-        {\n-            out.println( \"NOTE: Local Neo4j graph database service at '\" + path + \"'\" );\n-        }\n-        ShellClient client = ShellLobby.newClient( server, getSessionVariablesFromArgs( args ),\n-                new SystemOutput( out ), signalHandler );\n-        grabPromptOrJustExecuteCommand( client, args );\n+  private void tryStartLocalServerAndClient(File path, boolean readOnly, Args args, CtrlCHandler signalHandler)\n+      throws Exception\n+  {\n+    String configFile = args.get(ARG_CONFIG, null);\n+    final GraphDatabaseShellServer server = getGraphDatabaseShellServer(path, readOnly, configFile);\n+    Runtime.getRuntime().addShutdownHook(new Thread(() -> shutdownIfNecessary(server)));\n \n-        shutdownIfNecessary( server );\n+    if (!isCommandLine(args))\n+    {\n+      out.println(\"NOTE: Local Neo4j graph database service at '\" + path + \"'\");\n     }\n-\n-    protected GraphDatabaseShellServer getGraphDatabaseShellServer( File path, boolean readOnly, String configFile )\n-            throws RemoteException\n+    ShellClient client = ShellLobby.newClient(server, getSessionVariablesFromArgs(args),\n+        new SystemOutput(out), signalHandler);\n+    grabPromptOrJustExecuteCommand(client, args);\n+\n+    shutdownIfNecessary(server);\n+  }\n+\n+  protected GraphDatabaseShellServer getGraphDatabaseShellServer(File path, boolean readOnly, String configFile)\n+      throws RemoteException\n+  {\n+    return new GraphDatabaseShellServer(factory, path, readOnly, configFile);\n+  }\n+\n+  private void shutdownIfNecessary(ShellServer server)\n+  {\n+    try\n+    {\n+      if (hasBeenShutdown.compareAndSet(false, true))\n+      {\n+        server.shutdown();\n+      }\n+    } catch (RemoteException e)\n     {\n-        return new GraphDatabaseShellServer( factory, path, readOnly, configFile );\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private void shutdownIfNecessary( ShellServer server )\n+  private void startServer(String pid, Args args)\n+  {\n+    String port = args.get(\"port\", Integer.toString(SimpleAppServer.DEFAULT_PORT));\n+    String name = args.get(\"name\", SimpleAppServer.DEFAULT_NAME);\n+    try\n     {\n-        try\n-        {\n-            if ( hasBeenShutdown.compareAndSet( false, true ) )\n-            {\n-                server.shutdown();\n-            }\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      String jarfile = new File(\n+          getClass().getProtectionDomain().getCodeSource().getLocation().toURI()).getAbsolutePath();\n+      Object vm = attachMethod.invoke(null, pid);\n+      loadMethod.invoke(vm, jarfile, new ShellBootstrap(Integer.parseInt(port), name).serialize());\n+    } catch (Exception e)\n+    {\n+      throw new ShellExecutionFailureException(e, args);\n     }\n+  }\n \n-    private void startServer( String pid, Args args )\n+  private void startRemote(Args args, CtrlCHandler signalHandler)\n+  {\n+    try\n     {\n-        String port = args.get( \"port\", Integer.toString( SimpleAppServer.DEFAULT_PORT ) );\n-        String name = args.get( \"name\", SimpleAppServer.DEFAULT_NAME );\n-        try\n-        {\n-            String jarfile = new File(\n-                    getClass().getProtectionDomain().getCodeSource().getLocation().toURI() ).getAbsolutePath();\n-            Object vm = attachMethod.invoke( null, pid );\n-            loadMethod.invoke( vm, jarfile, new ShellBootstrap( Integer.parseInt( port ), name ).serialize() );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellExecutionFailureException( e, args );\n-        }\n+      String host = args.get(ARG_HOST, \"localhost\");\n+      int port = args.getNumber(ARG_PORT, SimpleAppServer.DEFAULT_PORT).intValue();\n+      String name = args.get(ARG_NAME, SimpleAppServer.DEFAULT_NAME);\n+      ShellClient client = ShellLobby.newClient(RmiLocation.location(host, port, name),\n+          getSessionVariablesFromArgs(args), signalHandler);\n+      if (!isCommandLine(args))\n+      {\n+        out.println(\"NOTE: Remote Neo4j graph database service '\" + name + \"' at port \" + port);\n+      }\n+      grabPromptOrJustExecuteCommand(client, args);\n+    } catch (Exception e)\n+    {\n+      throw new ShellExecutionFailureException(e, args);\n     }\n-\n-    private void startRemote( Args args, CtrlCHandler signalHandler )\n+  }\n+\n+  private static boolean isCommandLine(Args args)\n+  {\n+    return args.get(ARG_COMMAND, null) != null ||\n+        args.get(ARG_FILE, null) != null;\n+  }\n+\n+  private void grabPromptOrJustExecuteCommand(ShellClient client, Args args) throws Exception\n+  {\n+    String command = args.get(ARG_COMMAND, null);\n+    if (command != null)\n     {\n-        try\n-        {\n-            String host = args.get( ARG_HOST, \"localhost\" );\n-            int port = args.getNumber( ARG_PORT, SimpleAppServer.DEFAULT_PORT ).intValue();\n-            String name = args.get( ARG_NAME, SimpleAppServer.DEFAULT_NAME );\n-            ShellClient client = ShellLobby.newClient( RmiLocation.location( host, port, name ),\n-                    getSessionVariablesFromArgs( args ), signalHandler );\n-            if ( !isCommandLine( args ) )\n-            {\n-                out.println( \"NOTE: Remote Neo4j graph database service '\" + name + \"' at port \" + port );\n-            }\n-            grabPromptOrJustExecuteCommand( client, args );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new ShellExecutionFailureException( e, args );\n-        }\n+      client.evaluate(command);\n+      client.shutdown();\n+      return;\n     }\n-\n-    private static boolean isCommandLine( Args args )\n+    String fileName = args.get(ARG_FILE, null);\n+    if (fileName != null)\n     {\n-        return args.get( ARG_COMMAND, null ) != null ||\n-               args.get( ARG_FILE, null ) != null;\n+      BufferedReader reader = null;\n+      try\n+      {\n+        if (fileName.equals(ARG_FILE_STDIN))\n+        {\n+          reader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));\n+        } else\n+        {\n+          File file = new File(fileName);\n+          if (!file.exists())\n+          {\n+            throw new ShellException(\"File to execute \" + \"does not exist: \" + fileName);\n+          }\n+          reader = newBufferedFileReader(file, StandardCharsets.UTF_8);\n+        }\n+        executeCommandStream(client, reader);\n+      } finally\n+      {\n+        if (reader != null)\n+        {\n+          reader.close();\n+        }\n+      }\n+      return;\n     }\n+    client.grabPrompt();\n+  }\n \n-    private void grabPromptOrJustExecuteCommand( ShellClient client, Args args ) throws Exception\n+  private void executeCommandStream(ShellClient client, BufferedReader reader) throws IOException,\n+      ShellException\n+  {\n+    try\n     {\n-        String command = args.get( ARG_COMMAND, null );\n-        if ( command != null )\n-        {\n-            client.evaluate( command );\n-            client.shutdown();\n-            return;\n-        }\n-        String fileName = args.get( ARG_FILE, null );\n-        if ( fileName != null )\n-        {\n-            BufferedReader reader = null;\n-            try\n-            {\n-                if ( fileName.equals( ARG_FILE_STDIN ) )\n-                {\n-                    reader = new BufferedReader( new InputStreamReader( System.in, StandardCharsets.UTF_8 ) );\n-                }\n-                else\n-                {\n-                    File file = new File( fileName );\n-                    if ( !file.exists() )\n-                    {\n-                        throw new ShellException( \"File to execute \" + \"does not exist: \" + fileName );\n-                    }\n-                    reader = newBufferedFileReader( file, StandardCharsets.UTF_8 );\n-                }\n-                executeCommandStream( client, reader );\n-            }\n-            finally\n-            {\n-                if ( reader != null )\n-                {\n-                    reader.close();\n-                }\n-            }\n-            return;\n-        }\n-        client.grabPrompt();\n+      for (String line; (line = reader.readLine()) != null; )\n+      {\n+        client.evaluate(line);\n+      }\n+    } finally\n+    {\n+      client.shutdown();\n+      reader.close();\n     }\n+  }\n \n-    private void executeCommandStream( ShellClient client, BufferedReader reader ) throws IOException,\n-            ShellException\n+  static Map<String, Serializable> getSessionVariablesFromArgs(Args args)\n+  {\n+    String profile = args.get(\"profile\", null);\n+    Map<String, Serializable> session = new HashMap<>();\n+    if (profile != null)\n     {\n-        try\n-        {\n-            for ( String line; (line = reader.readLine()) != null; )\n-            {\n-                client.evaluate( line );\n-            }\n-        }\n-        finally\n-        {\n-            client.shutdown();\n-            reader.close();\n-        }\n+      applyProfileFile(new File(profile), session);\n     }\n \n-    static Map<String,Serializable> getSessionVariablesFromArgs( Args args )\n+    for (Map.Entry<String, String> entry : args.asMap().entrySet())\n     {\n-        String profile = args.get( \"profile\", null );\n-        Map<String,Serializable> session = new HashMap<>();\n-        if ( profile != null )\n-        {\n-            applyProfileFile( new File( profile ), session );\n-        }\n-\n-        for ( Map.Entry<String,String> entry : args.asMap().entrySet() )\n-        {\n-            String key = entry.getKey();\n-            if ( key.startsWith( \"D\" ) )\n-            {\n-                key = key.substring( 1 );\n-                session.put( key, entry.getValue() );\n-            }\n-        }\n-        if ( isCommandLine( args ) )\n-        {\n-            session.put( \"quiet\", true );\n-        }\n-        return session;\n+      String key = entry.getKey();\n+      if (key.startsWith(\"D\"))\n+      {\n+        key = key.substring(1);\n+        session.put(key, entry.getValue());\n+      }\n     }\n-\n-    private static void applyProfileFile( File file, Map<String,Serializable> session )\n+    if (isCommandLine(args))\n     {\n-        try ( FileInputStream fis = new FileInputStream( file ) )\n-        {\n-            Properties properties = new Properties();\n-            properties.load( fis );\n-            for ( Object key : properties.keySet() )\n-            {\n-                String stringKey = (String) key;\n-                String value = properties.getProperty( stringKey );\n-                session.put( stringKey, value );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new IllegalArgumentException( \"Couldn't find profile '\" +\n-                                                file.getAbsolutePath() + \"'\" );\n-        }\n+      session.put(\"quiet\", true);\n     }\n+    return session;\n+  }\n \n-    private static int longestString( String... strings )\n+  private static void applyProfileFile(File file, Map<String, Serializable> session)\n+  {\n+    try (FileInputStream fis = new FileInputStream(file))\n     {\n-        int length = 0;\n-        for ( String string : strings )\n-        {\n-            if ( string.length() > length )\n-            {\n-                length = string.length();\n-            }\n-        }\n-        return length;\n+      Properties properties = new Properties();\n+      properties.load(fis);\n+      for (Object key : properties.keySet())\n+      {\n+        String stringKey = (String) key;\n+        String value = properties.getProperty(stringKey);\n+        session.put(stringKey, value);\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new IllegalArgumentException(\"Couldn't find profile '\" +\n+          file.getAbsolutePath() + \"'\");\n     }\n+  }\n \n-    private static void printUsage( PrintStream out )\n-    {\n-        int port = SimpleAppServer.DEFAULT_PORT;\n-        String name = SimpleAppServer.DEFAULT_NAME;\n-        int longestArgLength = longestString( ARG_FILE, ARG_COMMAND,\n-                ARG_CONFIG,\n-                ARG_HOST, ARG_NAME,\n-                ARG_PATH, ARG_PID, ARG_PORT, ARG_READONLY );\n-        out.println(\n-                padArg( ARG_HOST, longestArgLength ) + \"Domain name or IP of host to connect to (default: localhost)\" +\n-                \"\\n\" +\n-                padArg( ARG_PORT, longestArgLength ) + \"Port of host to connect to (default: \" +\n-                SimpleAppServer.DEFAULT_PORT + \")\\n\" +\n-                padArg( ARG_NAME, longestArgLength ) + \"RMI name, i.e. rmi://<host>:<port>/<name> (default: \"\n-                + SimpleAppServer.DEFAULT_NAME + \")\\n\" +\n-                padArg( ARG_PID, longestArgLength ) + \"Process ID to connect to\\n\" +\n-                padArg( ARG_COMMAND, longestArgLength ) + \"Command line to execute. After executing it the \" +\n-                \"shell exits\\n\" +\n-                padArg( ARG_FILE, longestArgLength ) + \"File containing commands to execute, or '-' to read \" +\n-                \"from stdin. After executing it the shell exits\\n\" +\n-                padArg( ARG_READONLY, longestArgLength ) + \"Connect in readonly mode (only for connecting \" +\n-                \"with -\" + ARG_PATH + \")\\n\" +\n-                padArg( ARG_PATH, longestArgLength ) + \"Points to a neo4j db path so that a local server can \" +\n-                \"be started there\\n\" +\n-                padArg( ARG_CONFIG, longestArgLength ) + \"Points to a config file when starting a local \" +\n-                \"server\\n\\n\" +\n-\n-                \"Example arguments for remote:\\n\" +\n-                \"\\t-\" + ARG_PORT + \" \" + port + \"\\n\" +\n-                \"\\t-\" + ARG_HOST + \" \" + \"192.168.1.234\" + \" -\" + ARG_PORT + \" \" + port + \" -\" + ARG_NAME + \"\" +\n-                \" \" + name + \"\\n\" +\n-                \"\\t-\" + ARG_HOST + \" \" + \"localhost\" + \" -\" + ARG_READONLY + \"\\n\" +\n-                \"\\t...or no arguments for default values\\n\" +\n-                \"Example arguments for local:\\n\" +\n-                \"\\t-\" + ARG_PATH + \" /path/to/db\" + \"\\n\" +\n-                \"\\t-\" + ARG_PATH + \" /path/to/db -\" + ARG_CONFIG + \" /path/to/neo4j.config\" + \"\\n\" +\n-                \"\\t-\" + ARG_PATH + \" /path/to/db -\" + ARG_READONLY\n-        );\n+  private static int longestString(String... strings)\n+  {\n+    int length = 0;\n+    for (String string : strings)\n+    {\n+      if (string.length() > length)\n+      {\n+        length = string.length();\n+      }\n     }\n-\n-    private static String padArg( String arg, int length )\n+    return length;\n+  }\n+\n+  private static void printUsage(PrintStream out)\n+  {\n+    int port = SimpleAppServer.DEFAULT_PORT;\n+    String name = SimpleAppServer.DEFAULT_NAME;\n+    int longestArgLength = longestString(ARG_FILE, ARG_COMMAND,\n+        ARG_CONFIG,\n+        ARG_HOST, ARG_NAME,\n+        ARG_PATH, ARG_PID, ARG_PORT, ARG_READONLY);\n+    out.println(\n+        padArg(ARG_HOST, longestArgLength) + \"Domain name or IP of host to connect to (default: localhost)\" +\n+            \"\\n\" +\n+            padArg(ARG_PORT, longestArgLength) + \"Port of host to connect to (default: \" +\n+            SimpleAppServer.DEFAULT_PORT + \")\\n\" +\n+            padArg(ARG_NAME, longestArgLength) + \"RMI name, i.e. rmi://<host>:<port>/<name> (default: \"\n+            + SimpleAppServer.DEFAULT_NAME + \")\\n\" +\n+            padArg(ARG_PID, longestArgLength) + \"Process ID to connect to\\n\" +\n+            padArg(ARG_COMMAND, longestArgLength) + \"Command line to execute. After executing it the \" +\n+            \"shell exits\\n\" +\n+            padArg(ARG_FILE, longestArgLength) + \"File containing commands to execute, or '-' to read \" +\n+            \"from stdin. After executing it the shell exits\\n\" +\n+            padArg(ARG_READONLY, longestArgLength) + \"Connect in readonly mode (only for connecting \" +\n+            \"with -\" + ARG_PATH + \")\\n\" +\n+            padArg(ARG_PATH, longestArgLength) + \"Points to a neo4j db path so that a local server can \" +\n+            \"be started there\\n\" +\n+            padArg(ARG_CONFIG, longestArgLength) + \"Points to a config file when starting a local \" +\n+            \"server\\n\\n\" +\n+\n+            \"Example arguments for remote:\\n\" +\n+            \"\\t-\" + ARG_PORT + \" \" + port + \"\\n\" +\n+            \"\\t-\" + ARG_HOST + \" \" + \"192.168.1.234\" + \" -\" + ARG_PORT + \" \" + port + \" -\" + ARG_NAME + \"\" +\n+            \" \" + name + \"\\n\" +\n+            \"\\t-\" + ARG_HOST + \" \" + \"localhost\" + \" -\" + ARG_READONLY + \"\\n\" +\n+            \"\\t...or no arguments for default values\\n\" +\n+            \"Example arguments for local:\\n\" +\n+            \"\\t-\" + ARG_PATH + \" /path/to/db\" + \"\\n\" +\n+            \"\\t-\" + ARG_PATH + \" /path/to/db -\" + ARG_CONFIG + \" /path/to/neo4j.config\" + \"\\n\" +\n+            \"\\t-\" + ARG_PATH + \" /path/to/db -\" + ARG_READONLY\n+    );\n+  }\n+\n+  private static String padArg(String arg, int length)\n+  {\n+    return \" -\" + pad(arg, length) + \"  \";\n+  }\n+\n+  private static String pad(String string, int length)\n+  {\n+    // Rather inefficient\n+    while (string.length() < length)\n     {\n-        return \" -\" + pad( arg, length ) + \"  \";\n+      string = string + \" \";\n     }\n+    return string;\n+  }\n \n-    private static String pad( String string, int length )\n+  private static class ShellExecutionFailureException extends RuntimeException\n+  {\n+    private final Throwable cause;\n+    private final Args args;\n+\n+    ShellExecutionFailureException(Throwable cause, Args args)\n     {\n-        // Rather inefficient\n-        while ( string.length() < length )\n-        {\n-            string = string + \" \";\n-        }\n-        return string;\n+      super(cause);\n+      this.cause = cause;\n+      this.args = args;\n     }\n \n-    private static class ShellExecutionFailureException extends RuntimeException\n+    private void dumpMessage(PrintStream out, PrintStream err)\n     {\n-        private final Throwable cause;\n-        private final Args args;\n-\n-        ShellExecutionFailureException( Throwable cause, Args args )\n-        {\n-            super( cause );\n-            this.cause = cause;\n-            this.args = args;\n-        }\n-\n-        private void dumpMessage( PrintStream out, PrintStream err )\n-        {\n-            String message = cause.getCause() instanceof ConnectException ?\n-                             \"Connection refused\" : cause.getMessage();\n-            err.println( \"ERROR (-v for expanded information):\\n\\t\" + message );\n-            if ( args.has( \"v\" ) )\n-            {\n-                cause.printStackTrace( err );\n-            }\n-            err.println();\n-            printUsage( out );\n-        }\n+      String message = cause.getCause() instanceof ConnectException ?\n+          \"Connection refused\" : cause.getMessage();\n+      err.println(\"ERROR (-v for expanded information):\\n\\t\" + message);\n+      if (args.has(\"v\"))\n+      {\n+        cause.printStackTrace(err);\n+      }\n+      err.println();\n+      printUsage(out);\n     }\n+  }\n }\n",
            "diff_size": 631
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
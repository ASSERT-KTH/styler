{
    "project_name": "neo4j-neo4j",
    "error_id": "2300",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "89",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2300/QueryExecutionType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2300/QueryExecutionType.java\nindex f58811df732..76fbd7d137d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2300/QueryExecutionType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2300/QueryExecutionType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import org.neo4j.annotations.api.PublicApi;\n@@ -57,28 +58,37 @@ public final class QueryExecutionType\n      */\n     public enum QueryType\n     {\n-        /** A read-only query, that does not change any data, but only produces a result. */\n+        /**\n+         * A read-only query, that does not change any data, but only produces a result.\n+         */\n         READ_ONLY,\n-        /** A read/write query, that creates or updates data, and also produces a result. */\n+        /**\n+         * A read/write query, that creates or updates data, and also produces a result.\n+         */\n         READ_WRITE,\n-        /** A write-only query, that creates or updates data, but does not yield any rows in the result. */\n+        /**\n+         * A write-only query, that creates or updates data, but does not yield any rows in the result.\n+         */\n         WRITE,\n         /**\n          * A schema changing query, that updates the schema but neither changes any data nor yields any rows in the\n          * result.\n          */\n         SCHEMA_WRITE,\n-         /** A database management query */\n-        DBMS,;\n+        /**\n+         * A database management query\n+         */\n+        DBMS,\n+        ;\n         private final QueryExecutionType query;\n         private final QueryExecutionType profiled;\n         private final QueryExecutionType explained;\n \n         QueryType()\n         {\n-            this.query = new QueryExecutionType( Execution.QUERY, this );\n-            this.profiled = new QueryExecutionType( Execution.PROFILE, this );\n-            this.explained = new QueryExecutionType( Execution.EXPLAIN, this );\n+            this.query = new QueryExecutionType(Execution.QUERY, this);\n+            this.profiled = new QueryExecutionType(Execution.PROFILE, this);\n+            this.explained = new QueryExecutionType(Execution.EXPLAIN, this);\n         }\n     }\n \n@@ -88,9 +98,9 @@ public final class QueryExecutionType\n      * @param type the type of query executed.\n      * @return The instance that signifies normal execution of the supplied {@link QueryType}.\n      */\n-    public static QueryExecutionType query( QueryType type )\n+    public static QueryExecutionType query(QueryType type)\n     {\n-        return requireNonNull( type, \"QueryType\" ).query;\n+        return requireNonNull(type, \"QueryType\").query;\n     }\n \n     /**\n@@ -99,9 +109,9 @@ public final class QueryExecutionType\n      * @param type the type of query executed.\n      * @return The instance that signifies profiled execution of the supplied {@link QueryType}.\n      */\n-    public static QueryExecutionType profiled( QueryType type )\n+    public static QueryExecutionType profiled(QueryType type)\n     {\n-        return requireNonNull( type, \"QueryType\" ).profiled;\n+        return requireNonNull(type, \"QueryType\").profiled;\n     }\n \n     /**\n@@ -110,9 +120,9 @@ public final class QueryExecutionType\n      * @param type the type of query executed.\n      * @return The instance that signifies explaining the plan of the supplied {@link QueryType}.\n      */\n-    public static QueryExecutionType explained( QueryType type )\n+    public static QueryExecutionType explained(QueryType type)\n     {\n-        return requireNonNull( type, \"QueryType\" ).explained;\n+        return requireNonNull(type, \"QueryType\").explained;\n     }\n \n     /**\n@@ -128,7 +138,7 @@ public final class QueryExecutionType\n     /**\n      * Signifies whether results from this execution\n      * {@linkplain ExecutionPlanDescription#getProfilerStatistics() contains profiling information}.\n-     *\n+     * <p>\n      * This is {@code true} for queries executed with the\n      * <a href=\"https://neo4j.com/docs/developer-manual/current/cypher/execution-plans/\">{@code PROFILE}</a> directive.\n      *\n@@ -142,7 +152,7 @@ public final class QueryExecutionType\n     /**\n      * Signifies whether the supplied query contained a directive that asked for a\n      * {@linkplain ExecutionPlanDescription description of the execution plan}.\n-     *\n+     * <p>\n      * This is {@code true} for queries executed with either the\n      * <a href=\"https://neo4j.com/docs/developer-manual/current/cypher/execution-plans/\">{@code EXPLAIN} or {@code PROFILE} directives</a>.\n      *\n@@ -166,7 +176,7 @@ public final class QueryExecutionType\n \n     /**\n      * Signifies that the execution of the query could produce a result.\n-     *\n+     * <p>\n      * This is an important distinction from the result being empty.\n      *\n      * @return {@code true} if the execution would yield rows in the result set.\n@@ -178,7 +188,7 @@ public final class QueryExecutionType\n \n     /**\n      * Signifies that the execution of the query could perform changes to the data.\n-     *\n+     * <p>\n      * {@link Result}{@link Result#getQueryStatistics() .getQueryStatistics()}{@link QueryStatistics#containsUpdates()\n      * .containsUpdates()} signifies whether the query actually performed any updates.\n      *\n@@ -202,7 +212,7 @@ public final class QueryExecutionType\n     private final Execution execution;\n     private final QueryType type;\n \n-    private QueryExecutionType( Execution execution, QueryType type )\n+    private QueryExecutionType(Execution execution, QueryType type)\n     {\n         this.execution = execution;\n         this.type = type;\n@@ -211,23 +221,24 @@ public final class QueryExecutionType\n     @Override\n     public String toString()\n     {\n-        return execution.toString( type );\n+        return execution.toString(type);\n     }\n \n     private enum Execution\n     {\n         QUERY\n-                {\n-                    @Override\n-                    String toString( QueryType type )\n-                    {\n-                        return type.name();\n-                    }\n-                },\n+          {\n+              @Override\n+              String toString(QueryType type)\n+              {\n+                  return type.name();\n+              }\n+          },\n         PROFILE,\n-        EXPLAIN,;\n+        EXPLAIN,\n+        ;\n \n-        String toString( QueryType type )\n+        String toString(QueryType type)\n         {\n             return name() + \":\" + type.name();\n         }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2300/QueryExecutionType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2300/QueryExecutionType.java\nindex f58811df732..2e51aba7e39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2300/QueryExecutionType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2300/QueryExecutionType.java\n@@ -232,4 +232,4 @@ public final class QueryExecutionType\n             return name() + \":\" + type.name();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
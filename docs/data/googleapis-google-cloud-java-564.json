{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "564",
    "information": {
        "errors": [
            {
                "line": "42",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import java.util.concurrent.Callable;\n\nfinal class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n\n  private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/564/StorageServiceImpl.java\nindex 50c7bb039c7..b27acd2ec59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/564/StorageServiceImpl.java\n@@ -39,7 +39,8 @@ import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions>\n+    implements StorageService {\n \n   private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n \n@@ -317,12 +318,13 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options) {\n+                                              Iterable<? extends Option> options) {\n     return optionMap(generation, metaGeneration, options, false);\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options, boolean useAsSource) {\n+                                              Iterable<? extends Option> options,\n+                                              boolean useAsSource) {\n     Map<StorageRpc.Option, Object> temp = Maps.newEnumMap(StorageRpc.Option.class);\n     for (Option option : options) {\n       Object prev = temp.put(option.rpcOption(), option.value());\n@@ -358,7 +360,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   }\n \n   private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Option... options) {\n+                                              Option... options) {\n     return optionMap(generation, metaGeneration, Arrays.asList(options));\n   }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "270",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "277",
                    "column": "65",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "295",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "334",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "335",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "336",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "343",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "344",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "345",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/564/StorageServiceImpl.java\nindex 50c7bb039c7..4c935911cfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/564/StorageServiceImpl.java\n@@ -54,7 +54,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     public RetryResult beforeEval(Exception exception) {\n       if (exception instanceof StorageServiceException) {\n         boolean retriable = ((StorageServiceException) exception).retryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+        return retriable\n+    ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n       }\n       return null;\n     }\n@@ -76,8 +77,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket create(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.create(bucketPb, optionsMap);\n@@ -101,8 +101,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket get(Bucket bucket, BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.get(bucketPb, optionsMap);\n@@ -125,8 +124,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public ListResult<Bucket> list(BucketListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n+    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n           @Override\n           public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n             return storageRpc.list(optionsMap);\n@@ -144,8 +142,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public ListResult<Blob> list(final String bucket, BlobListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<StorageObject>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<StorageObject>>>() {\n+    Tuple<String, Iterable<StorageObject>> result = runWithRetries(new Callable<Tuple<String, Iterable<StorageObject>>>() {\n           @Override\n           public Tuple<String, Iterable<StorageObject>> call() {\n             return storageRpc.list(bucket, optionsMap);\n@@ -164,8 +161,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket update(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override\n           public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.patch(bucketPb, optionsMap);\n@@ -234,7 +230,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     copyRequest.sourceOptions();\n     final Map<StorageRpc.Option, ?> sourceOptions = optionMap(copyRequest.source().generation(),\n         copyRequest.source().metageneration(), copyRequest.sourceOptions(), true);\n-    final StorageObject target = copyRequest.target().toPb();\n+final StorageObject target = copyRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(copyRequest.target().generation(),\n         copyRequest.target().metageneration(), copyRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n@@ -264,21 +260,21 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toDelete().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n-      toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n+      toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(blob.toPb(), optionsMap));\n     }\n     List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate =\n         Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n     for (Map.Entry<Blob, BlobTargetOption[]> entry : batchRequest.toUpdate().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n-      toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n+      toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(blob.toPb(), optionsMap));\n     }\n     List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet =\n         Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toGet().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n-      toGet.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n+      toGet.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>> of(blob.toPb(), optionsMap));\n     }\n     // todo: populate deletes, updates and gets (the latter 2 needs to be sent to RPC)\n     // todo: change example to use multi-update and multi-get\n@@ -296,8 +292,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n \n     List<BatchResponse.Result<Blob>> updates = new LinkedList<>();\n     List<BatchResponse.Result<Blob>> gets = new LinkedList<>();\n-\n-    return new BatchResponse(deletes, updates, gets);\n+return new BatchResponse(deletes, updates, gets);\n   }\n \n   @Override\n@@ -336,22 +331,18 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     if (value != null) {\n       checkArgument(generation != null, \"missing generation value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH\n-            : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n-      } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n+  } else {\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n       }\n     }\n     value = (Boolean) temp.remove(StorageRpc.Option.IF_METAGENERATION_MATCH);\n     if (value != null) {\n       checkArgument(metaGeneration != null, \"missing metaGeneration value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n-      } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n+  } else {\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n       }\n     }\n     return ImmutableMap.copyOf(temp);\n@@ -369,4 +360,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   private Map<StorageRpc.Option, ?> optionMap(Blob blob, Option... options) {\n     return optionMap(blob.generation(), blob.metageneration(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'object def' child has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 67, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 85, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 87, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 85, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 83, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 28, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 56, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 52, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 28, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "209",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'composeRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'copyRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'copyRequest' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "310",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "314",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "328",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "329",
                    "severity": "warning",
                    "message": "'generation' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "331",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "332",
                    "severity": "warning",
                    "message": "'generation' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "339",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "340",
                    "severity": "warning",
                    "message": "'metaGeneration' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "342",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "343",
                    "severity": "warning",
                    "message": "'metaGeneration' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "349",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/564/StorageServiceImpl.java\nindex 50c7bb039c7..dc9ba82dc70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/564/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/564/StorageServiceImpl.java\n@@ -32,36 +32,34 @@ import com.google.gcloud.ExceptionHandler.Interceptor;\n import com.google.gcloud.RetryParams;\n import com.google.gcloud.spi.StorageRpc;\n import com.google.gcloud.spi.StorageRpc.Tuple;\n-\n import java.util.Arrays;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n \n+\n final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n   private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n \n-    private static final long serialVersionUID = -7758580330857881124L;\n-\n-    @Override\n-    public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n-      return null;\n-    }\n-\n-    @Override\n-    public RetryResult beforeEval(Exception exception) {\n-      if (exception instanceof StorageServiceException) {\n-        boolean retriable = ((StorageServiceException) exception).retryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n-      }\n-      return null;\n-    }\n-  };\n-  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder()\n-      .abortOn(RuntimeException.class).interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n-\n+                                                                     private static final long serialVersionUID = -7758580330857881124L;\n+\n+                                                                     @Override\n+                                                                     public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n+                                                                       return null;\n+                                                                     }\n+\n+                                                                     @Override\n+                                                                     public RetryResult beforeEval(Exception exception) {\n+                                                                       if (exception instanceof StorageServiceException) {\n+                                                                         boolean retriable = ((StorageServiceException) exception).retryable();\n+                                                                         return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+                                                                       }\n+                                                                       return null;\n+                                                                     }\n+                                                                   };\n+  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder().abortOn(RuntimeException.class).interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n   private final StorageRpc storageRpc;\n   private final RetryParams retryParams;\n \n@@ -76,13 +74,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Bucket create(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.create(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.create(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -90,24 +87,23 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject blobPb = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.create(blobPb, content, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.create(blobPb, content, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Bucket get(Bucket bucket, BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.get(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.get(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -115,62 +111,57 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject storedObject = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.get(storedObject, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.get(storedObject, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public ListResult<Bucket> list(BucketListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n-          @Override\n-          public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n-            return storageRpc.list(optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER);\n-    return new ListResult<>(result.x(), Iterables.transform(result.y(),\n-        new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n-          @Override\n-          public Bucket apply(com.google.api.services.storage.model.Bucket bucketPb) {\n-            return Bucket.fromPb(bucketPb);\n-          }\n-        }));\n+    Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> result = runWithRetries(new Callable<Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>>>() {\n+                                                                                     @Override\n+                                                                                     public Tuple<String, Iterable<com.google.api.services.storage.model.Bucket>> call() {\n+                                                                                       return storageRpc.list(optionsMap);\n+                                                                                     }\n+                                                                                   }, retryParams, EXCEPTION_HANDLER);\n+    return new ListResult<>(result.x(), Iterables.transform(result.y(), new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n+                              @Override\n+                              public Bucket apply(com.google.api.services.storage.model.Bucket bucketPb) {\n+                                return Bucket.fromPb(bucketPb);\n+                              }\n+                            }));\n   }\n \n   @Override\n   public ListResult<Blob> list(final String bucket, BlobListOption... options) {\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(null, null, options);\n-    Tuple<String, Iterable<StorageObject>> result = runWithRetries(\n-        new Callable<Tuple<String, Iterable<StorageObject>>>() {\n-          @Override\n-          public Tuple<String, Iterable<StorageObject>> call() {\n-            return storageRpc.list(bucket, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER);\n-    return new ListResult<>(result.x(), Iterables.transform(result.y(),\n-        new Function<StorageObject, Blob>() {\n-          @Override\n-          public Blob apply(StorageObject storageObject) {\n-            return Blob.fromPb(storageObject);\n-          }\n-        }));\n+    Tuple<String, Iterable<StorageObject>> result = runWithRetries(new Callable<Tuple<String, Iterable<StorageObject>>>() {\n+                                                      @Override\n+                                                      public Tuple<String, Iterable<StorageObject>> call() {\n+                                                        return storageRpc.list(bucket, optionsMap);\n+                                                      }\n+                                                    }, retryParams, EXCEPTION_HANDLER);\n+    return new ListResult<>(result.x(), Iterables.transform(result.y(), new Function<StorageObject, Blob>() {\n+                              @Override\n+                              public Blob apply(StorageObject storageObject) {\n+                                return Blob.fromPb(storageObject);\n+                              }\n+                            }));\n   }\n \n   @Override\n   public Bucket update(Bucket bucket, BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(bucket, options);\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override\n-          public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.patch(bucketPb, optionsMap);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.patch(bucketPb, optionsMap);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -178,11 +169,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject storageObject = blob.toPb();\n     final Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, options);\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.patch(storageObject, optionsMap);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.patch(storageObject, optionsMap);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -194,7 +185,9 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       public Boolean call() {\n         return storageRpc.delete(bucketPb, optionsMap);\n       }\n-    }, retryParams, EXCEPTION_HANDLER);\n+    },\n+      retryParams,\n+        EXCEPTION_HANDLER);\n   }\n \n   @Override\n@@ -211,21 +204,20 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n \n   @Override\n   public Blob compose(final ComposeRequest composeRequest) {\n-    final List<StorageObject> sources =\n-        Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n+    final List<StorageObject> sources = Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n     for (ComposeRequest.SourceBlob sourceBlob : composeRequest.sourceBlobs()) {\n-      sources.add(Blob.builder(composeRequest.target().bucket(), sourceBlob.name())\n-          .generation(sourceBlob.generation()).build().toPb());\n+      sources.add(Blob.builder(composeRequest.target().bucket(), sourceBlob.name()).generation(sourceBlob.generation()).build().toPb());\n     }\n     final StorageObject target = composeRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(composeRequest.target().generation(),\n-        composeRequest.target().metageneration(), composeRequest.targetOptions());\n+      composeRequest.target().metageneration(),\n+        composeRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.compose(sources, target, targetOptions);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.compose(sources, target, targetOptions);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -233,16 +225,19 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject source = copyRequest.source().toPb();\n     copyRequest.sourceOptions();\n     final Map<StorageRpc.Option, ?> sourceOptions = optionMap(copyRequest.source().generation(),\n-        copyRequest.source().metageneration(), copyRequest.sourceOptions(), true);\n+      copyRequest.source().metageneration(),\n+        copyRequest.sourceOptions(),\n+          true);\n     final StorageObject target = copyRequest.target().toPb();\n     final Map<StorageRpc.Option, ?> targetOptions = optionMap(copyRequest.target().generation(),\n-        copyRequest.target().metageneration(), copyRequest.targetOptions());\n+      copyRequest.target().metageneration(),\n+        copyRequest.targetOptions());\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override\n-      public StorageObject call() {\n-        return storageRpc.copy(source, sourceOptions, target, targetOptions);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.copy(source, sourceOptions, target, targetOptions);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -254,27 +249,26 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       public byte[] call() {\n         return storageRpc.load(storageObject, optionsMap);\n       }\n-    }, retryParams, EXCEPTION_HANDLER);\n+    },\n+      retryParams,\n+        EXCEPTION_HANDLER);\n   }\n \n   @Override\n   public BatchResponse apply(BatchRequest batchRequest) {\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toDelete =\n-        Lists.newArrayListWithCapacity(batchRequest.toDelete().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toDelete = Lists.newArrayListWithCapacity(batchRequest.toDelete().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toDelete().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       toDelete.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n     }\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate =\n-        Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toUpdate = Lists.newArrayListWithCapacity(batchRequest.toUpdate().size());\n     for (Map.Entry<Blob, BlobTargetOption[]> entry : batchRequest.toUpdate().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n       toUpdate.add(Tuple.<StorageObject, Map<StorageRpc.Option, ?>>of(blob.toPb(), optionsMap));\n     }\n-    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet =\n-        Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n+    List<Tuple<StorageObject, Map<StorageRpc.Option, ?>>> toGet = Lists.newArrayListWithCapacity(batchRequest.toGet().size());\n     for (Map.Entry<Blob, BlobSourceOption[]> entry : batchRequest.toGet().entrySet()) {\n       Blob blob = entry.getKey();\n       Map<StorageRpc.Option, ?> optionsMap = optionMap(blob, entry.getValue());\n@@ -282,8 +276,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     }\n     // todo: populate deletes, updates and gets (the latter 2 needs to be sent to RPC)\n     // todo: change example to use multi-update and multi-get\n-    StorageRpc.BatchResponse response =\n-        storageRpc.batch(new StorageRpc.BatchRequest(toDelete, toUpdate, toGet));\n+    StorageRpc.BatchResponse response = storageRpc.batch(new StorageRpc.BatchRequest(toDelete, toUpdate, toGet));\n     List<BatchResponse.Result<Boolean>> deletes = new LinkedList<>();\n     for (Blob blob : batchRequest.toDelete().keySet()) {\n       Tuple<Boolean, StorageServiceException> result = response.deletes.get(blob);\n@@ -293,10 +286,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n         deletes.add(new BatchResponse.Result<Boolean>(result.y()));\n       }\n     }\n-\n     List<BatchResponse.Result<Blob>> updates = new LinkedList<>();\n     List<BatchResponse.Result<Blob>> gets = new LinkedList<>();\n-\n     return new BatchResponse(deletes, updates, gets);\n   }\n \n@@ -316,13 +307,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     return storageRpc.writer(blob.toPb(), optionsMap);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Iterable<? extends Option> options) {\n     return optionMap(generation, metaGeneration, options, false);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Iterable<? extends Option> options, boolean useAsSource) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Iterable<? extends Option> options, boolean useAsSource) {\n     Map<StorageRpc.Option, Object> temp = Maps.newEnumMap(StorageRpc.Option.class);\n     for (Option option : options) {\n       Object prev = temp.put(option.rpcOption(), option.value());\n@@ -336,29 +325,28 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     if (value != null) {\n       checkArgument(generation != null, \"missing generation value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH\n-            : StorageRpc.Option.IF_GENERATION_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_MATCH : StorageRpc.Option.IF_GENERATION_MATCH,\n+          generation);\n       } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_GENERATION_NOT_MATCH, generation);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_GENERATION_NOT_MATCH : StorageRpc.Option.IF_GENERATION_NOT_MATCH,\n+          generation);\n       }\n     }\n     value = (Boolean) temp.remove(StorageRpc.Option.IF_METAGENERATION_MATCH);\n     if (value != null) {\n       checkArgument(metaGeneration != null, \"missing metaGeneration value\");\n       if (value) {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_MATCH : StorageRpc.Option.IF_METAGENERATION_MATCH,\n+          metaGeneration);\n       } else {\n-        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH\n-            : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH, metaGeneration);\n+        temp.put(useAsSource ? StorageRpc.Option.IF_SOURCE_METAGENERATION_NOT_MATCH : StorageRpc.Option.IF_METAGENERATION_NOT_MATCH,\n+          metaGeneration);\n       }\n     }\n     return ImmutableMap.copyOf(temp);\n   }\n \n-  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration,\n-      Option... options) {\n+  private Map<StorageRpc.Option, ?> optionMap(Long generation, Long metaGeneration, Option... options) {\n     return optionMap(generation, metaGeneration, Arrays.asList(options));\n   }\n \n@@ -369,4 +357,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   private Map<StorageRpc.Option, ?> optionMap(Blob blob, Option... options) {\n     return optionMap(blob.generation(), blob.metageneration(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 137
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
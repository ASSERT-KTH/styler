{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4548",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4548/MapWrappingWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4548/MapWrappingWriter.java\nindex e29fe0d3a22..df17967a915 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4548/MapWrappingWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4548/MapWrappingWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr.formats;\n \n import java.util.ArrayList;\n@@ -29,50 +30,50 @@ import org.neo4j.server.rest.repr.MappingWriter;\n \n public class MapWrappingWriter extends MappingWriter\n {\n-    final Map<String, Object> data;\n-    final boolean interactive;\n+  final Map<String, Object> data;\n+  final boolean interactive;\n \n-    public MapWrappingWriter( Map<String, Object> data )\n-    {\n-        this( data, false );\n-    }\n+  public MapWrappingWriter(Map<String, Object> data)\n+  {\n+    this(data, false);\n+  }\n \n-    public MapWrappingWriter( Map<String, Object> data, boolean interactive )\n-    {\n-        this.data = data;\n-        this.interactive = interactive;\n-    }\n+  public MapWrappingWriter(Map<String, Object> data, boolean interactive)\n+  {\n+    this.data = data;\n+    this.interactive = interactive;\n+  }\n \n-    @Override\n-    protected final boolean isInteractive()\n-    {\n-        return interactive;\n-    }\n+  @Override\n+  protected final boolean isInteractive()\n+  {\n+    return interactive;\n+  }\n \n-    @Override\n-    protected ListWriter newList( String type, String key )\n-    {\n-        List<Object> list = new ArrayList<>();\n-        data.put( key, list );\n-        return new ListWrappingWriter( list, interactive );\n-    }\n+  @Override\n+  protected ListWriter newList(String type, String key)\n+  {\n+    List<Object> list = new ArrayList<>();\n+    data.put(key, list);\n+    return new ListWrappingWriter(list, interactive);\n+  }\n \n-    @Override\n-    protected MappingWriter newMapping( String type, String key )\n-    {\n-        Map<String, Object> map = new HashMap<>();\n-        data.put( key, map );\n-        return new MapWrappingWriter( map, interactive );\n-    }\n+  @Override\n+  protected MappingWriter newMapping(String type, String key)\n+  {\n+    Map<String, Object> map = new HashMap<>();\n+    data.put(key, map);\n+    return new MapWrappingWriter(map, interactive);\n+  }\n \n-    @Override\n-    protected void writeValue( String type, String key, Object value )\n-    {\n-        data.put( key, value );\n-    }\n+  @Override\n+  protected void writeValue(String type, String key, Object value)\n+  {\n+    data.put(key, value);\n+  }\n \n-    @Override\n-    protected void done()\n-    {\n-    }\n+  @Override\n+  protected void done()\n+  {\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4548/MapWrappingWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4548/MapWrappingWriter.java\nindex e29fe0d3a22..7e9851c7d6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4548/MapWrappingWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4548/MapWrappingWriter.java\n@@ -29,15 +29,15 @@ import org.neo4j.server.rest.repr.MappingWriter;\n \n public class MapWrappingWriter extends MappingWriter\n {\n-    final Map<String, Object> data;\n+    final Map<String,Object> data;\n     final boolean interactive;\n \n-    public MapWrappingWriter( Map<String, Object> data )\n+    public MapWrappingWriter( Map<String,Object> data )\n     {\n         this( data, false );\n     }\n \n-    public MapWrappingWriter( Map<String, Object> data, boolean interactive )\n+    public MapWrappingWriter( Map<String,Object> data, boolean interactive )\n     {\n         this.data = data;\n         this.interactive = interactive;\n@@ -60,7 +60,7 @@ public class MapWrappingWriter extends MappingWriter\n     @Override\n     protected MappingWriter newMapping( String type, String key )\n     {\n-        Map<String, Object> map = new HashMap<>();\n+        Map<String,Object> map = new HashMap<>();\n         data.put( key, map );\n         return new MapWrappingWriter( map, interactive );\n     }\n@@ -75,4 +75,4 @@ public class MapWrappingWriter extends MappingWriter\n     protected void done()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
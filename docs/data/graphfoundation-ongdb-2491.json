{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2491",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "108",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2491/ExceptionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2491/ExceptionRepresentation.java\nindex e65e321d00e..7cb59d68042 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2491/ExceptionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2491/ExceptionRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.ArrayList;\n@@ -32,124 +33,125 @@ import org.neo4j.server.rest.transactional.error.Neo4jError;\n \n public class ExceptionRepresentation extends MappingRepresentation\n {\n-    private final List<Neo4jError> errors = new LinkedList<>();\n-    private boolean includeLegacyRepresentation;\n+  private final List<Neo4jError> errors = new LinkedList<>();\n+  private boolean includeLegacyRepresentation;\n \n-    public ExceptionRepresentation( Throwable exception )\n-    {\n-        this( exception, true );\n-    }\n-    public ExceptionRepresentation( Throwable exception, boolean includeLegacyRepresentation )\n+  public ExceptionRepresentation(Throwable exception)\n+  {\n+    this(exception, true);\n+  }\n+\n+  public ExceptionRepresentation(Throwable exception, boolean includeLegacyRepresentation)\n+  {\n+    super(RepresentationType.EXCEPTION);\n+    this.errors.add(new Neo4jError(statusCode(exception), exception));\n+    this.includeLegacyRepresentation = includeLegacyRepresentation;\n+  }\n+\n+  public ExceptionRepresentation(Neo4jError... errors)\n+  {\n+    super(RepresentationType.EXCEPTION);\n+    this.errors.addAll(Arrays.asList(errors));\n+  }\n+\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    // For legacy reasons, this actually serializes into two separate formats - the old format, which simply\n+    // serializes a single exception, and the new format which serializes multiple errors and provides simple\n+    // status codes.\n+    if (includeLegacyRepresentation)\n     {\n-        super( RepresentationType.EXCEPTION );\n-        this.errors.add( new Neo4jError( statusCode( exception ), exception ) );\n-        this.includeLegacyRepresentation = includeLegacyRepresentation;\n+      renderWithLegacyFormat(errors.get(0).cause(), serializer);\n     }\n \n-    public ExceptionRepresentation( Neo4jError ... errors )\n+    renderWithStatusCodeFormat(serializer);\n+  }\n+\n+  private void renderWithStatusCodeFormat(MappingSerializer serializer)\n+  {\n+    serializer.putList(\"errors\", ErrorEntryRepresentation.list(errors));\n+  }\n+\n+  private void renderWithLegacyFormat(Throwable exception, MappingSerializer serializer)\n+  {\n+    String message = exception.getMessage();\n+    if (message != null)\n     {\n-        super( RepresentationType.EXCEPTION );\n-        this.errors.addAll( Arrays.asList( errors ) );\n+      serializer.putString(\"message\", message);\n     }\n-\n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n+    serializer.putString(\"exception\", exception.getClass().getSimpleName());\n+    serializer.putString(\"fullname\", exception.getClass().getName());\n+    StackTraceElement[] trace = exception.getStackTrace();\n+    if (trace != null)\n     {\n-        // For legacy reasons, this actually serializes into two separate formats - the old format, which simply\n-        // serializes a single exception, and the new format which serializes multiple errors and provides simple\n-        // status codes.\n-        if ( includeLegacyRepresentation )\n+      Collection<String> lines = new ArrayList<>(trace.length);\n+      for (StackTraceElement element : trace)\n+      {\n+        if (element.toString().matches(\".*(jetty|jersey|sun\\\\.reflect|mortbay|javax\\\\.servlet).*\"))\n         {\n-            renderWithLegacyFormat( errors.get( 0 ).cause(), serializer );\n+          continue;\n         }\n-\n-        renderWithStatusCodeFormat( serializer );\n+        lines.add(element.toString());\n+      }\n+      serializer.putList(\"stackTrace\", ListRepresentation.string(lines));\n     }\n \n-    private void renderWithStatusCodeFormat( MappingSerializer serializer )\n+    Throwable cause = exception.getCause();\n+    if (cause != null)\n     {\n-        serializer.putList( \"errors\", ErrorEntryRepresentation.list( errors ) );\n+      serializer.putMapping(\"cause\", new ExceptionRepresentation(cause));\n     }\n+  }\n \n-    private void renderWithLegacyFormat( Throwable exception, MappingSerializer serializer )\n-    {\n-        String message = exception.getMessage();\n-        if ( message != null )\n-        {\n-            serializer.putString( \"message\", message );\n-        }\n-        serializer.putString( \"exception\", exception.getClass().getSimpleName() );\n-        serializer.putString( \"fullname\", exception.getClass().getName() );\n-        StackTraceElement[] trace = exception.getStackTrace();\n-        if ( trace != null )\n-        {\n-            Collection<String> lines = new ArrayList<>( trace.length );\n-            for ( StackTraceElement element : trace )\n-            {\n-                if ( element.toString().matches( \".*(jetty|jersey|sun\\\\.reflect|mortbay|javax\\\\.servlet).*\" ) )\n-                {\n-                    continue;\n-                }\n-                lines.add( element.toString() );\n-            }\n-            serializer.putList( \"stackTrace\", ListRepresentation.string( lines ) );\n-        }\n+  private static class ErrorEntryRepresentation extends MappingRepresentation\n+  {\n+    private final Neo4jError error;\n \n-        Throwable cause = exception.getCause();\n-        if ( cause != null )\n-        {\n-            serializer.putMapping( \"cause\", new ExceptionRepresentation( cause ) );\n-        }\n+    ErrorEntryRepresentation(Neo4jError error)\n+    {\n+      super(\"error-entry\");\n+      this.error = error;\n     }\n \n-    private static class ErrorEntryRepresentation extends MappingRepresentation\n+    @Override\n+    protected void serialize(MappingSerializer serializer)\n     {\n-        private final Neo4jError error;\n-\n-        ErrorEntryRepresentation( Neo4jError error )\n-        {\n-            super( \"error-entry\" );\n-            this.error = error;\n-        }\n+      serializer.putString(\"code\", error.status().code().serialize());\n+      serializer.putString(\"message\", error.getMessage());\n+      if (error.shouldSerializeStackTrace())\n+      {\n+        serializer.putString(\"stackTrace\", error.getStackTraceAsString());\n+      }\n+    }\n \n+    public static ListRepresentation list(Collection<Neo4jError> errors)\n+    {\n+      return new ListRepresentation(\"error-list\", new IterableWrapper<ErrorEntryRepresentation, Neo4jError>(errors)\n+      {\n         @Override\n-        protected void serialize( MappingSerializer serializer )\n+        protected ErrorEntryRepresentation underlyingObjectToObject(Neo4jError error)\n         {\n-            serializer.putString( \"code\", error.status().code().serialize() );\n-            serializer.putString( \"message\", error.getMessage() );\n-            if ( error.shouldSerializeStackTrace() )\n-            {\n-                serializer.putString( \"stackTrace\", error.getStackTraceAsString() );\n-            }\n-        }\n-\n-        public static ListRepresentation list( Collection<Neo4jError> errors )\n-        {\n-            return new ListRepresentation( \"error-list\", new IterableWrapper<ErrorEntryRepresentation, Neo4jError>( errors )\n-            {\n-                @Override\n-                protected ErrorEntryRepresentation underlyingObjectToObject( Neo4jError error )\n-                {\n-                    return new ErrorEntryRepresentation( error );\n-                }\n-            } );\n+          return new ErrorEntryRepresentation(error);\n         }\n+      });\n     }\n+  }\n \n-    private static Status statusCode( Throwable current )\n+  private static Status statusCode(Throwable current)\n+  {\n+    while (current != null)\n     {\n-        while ( current != null )\n-        {\n-            if ( current instanceof Status.HasStatus )\n-            {\n-                return ((Status.HasStatus) current).status();\n-            }\n-            if ( current instanceof ConstraintViolationException )\n-            {\n-                return Status.Schema.ConstraintValidationFailed;\n-            }\n-            current = current.getCause();\n-        }\n-        return Status.General.UnknownError;\n+      if (current instanceof Status.HasStatus)\n+      {\n+        return ((Status.HasStatus) current).status();\n+      }\n+      if (current instanceof ConstraintViolationException)\n+      {\n+        return Status.Schema.ConstraintValidationFailed;\n+      }\n+      current = current.getCause();\n     }\n+    return Status.General.UnknownError;\n+  }\n }\n",
            "diff_size": 141
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2491/ExceptionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2491/ExceptionRepresentation.java\nindex e65e321d00e..5144f3a3c72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2491/ExceptionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2491/ExceptionRepresentation.java\n@@ -39,7 +39,8 @@ public class ExceptionRepresentation extends MappingRepresentation\n     {\n         this( exception, true );\n     }\n-    public ExceptionRepresentation( Throwable exception, boolean includeLegacyRepresentation )\n+\n+public ExceptionRepresentation( Throwable exception, boolean includeLegacyRepresentation )\n     {\n         super( RepresentationType.EXCEPTION );\n         this.errors.add( new Neo4jError( statusCode( exception ), exception ) );\n@@ -144,12 +145,15 @@ public class ExceptionRepresentation extends MappingRepresentation\n             {\n                 return ((Status.HasStatus) current).status();\n             }\n-            if ( current instanceof ConstraintViolationException )\n+\n+if ( current instanceof ConstraintViolationException )\n             {\n                 return Status.Schema.ConstraintValidationFailed;\n             }\n-            current = current.getCause();\n+\n+current = current.getCause();\n         }\n-        return Status.General.UnknownError;\n+\n+return Status.General.UnknownError;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
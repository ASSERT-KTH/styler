{
    "project_name": "neo4j-neo4j",
    "error_id": "1011",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1011/BasicLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1011/BasicLoginContext.java\nindex 6b1903024b4..6452b7b6212 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1011/BasicLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1011/BasicLoginContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import org.neo4j.graphdb.security.AuthorizationViolationException;\n@@ -39,20 +40,20 @@ public class BasicLoginContext implements LoginContext\n     private final BasicAuthSubject authSubject;\n     private AccessMode accessMode;\n \n-    public BasicLoginContext( User user, AuthenticationResult authenticationResult )\n+    public BasicLoginContext(User user, AuthenticationResult authenticationResult)\n     {\n-        this.authSubject = new BasicAuthSubject( user, authenticationResult );\n+        this.authSubject = new BasicAuthSubject(user, authenticationResult);\n \n-        switch ( authenticationResult )\n+        switch (authenticationResult)\n         {\n-        case SUCCESS:\n-            accessMode = AccessMode.Static.FULL;\n-            break;\n-        case PASSWORD_CHANGE_REQUIRED:\n-            accessMode = AccessMode.Static.CREDENTIALS_EXPIRED;\n-            break;\n-        default:\n-            accessMode = AccessMode.Static.ACCESS;\n+            case SUCCESS:\n+                accessMode = AccessMode.Static.FULL;\n+                break;\n+            case PASSWORD_CHANGE_REQUIRED:\n+                accessMode = AccessMode.Static.CREDENTIALS_EXPIRED;\n+                break;\n+            default:\n+                accessMode = AccessMode.Static.ACCESS;\n         }\n     }\n \n@@ -61,7 +62,7 @@ public class BasicLoginContext implements LoginContext\n         private User user;\n         private AuthenticationResult authenticationResult;\n \n-        BasicAuthSubject( User user, AuthenticationResult authenticationResult )\n+        BasicAuthSubject(User user, AuthenticationResult authenticationResult)\n         {\n             this.user = user;\n             this.authenticationResult = authenticationResult;\n@@ -76,7 +77,7 @@ public class BasicLoginContext implements LoginContext\n         @Override\n         public void setPasswordChangeNoLongerRequired()\n         {\n-            if ( authenticationResult == PASSWORD_CHANGE_REQUIRED )\n+            if (authenticationResult == PASSWORD_CHANGE_REQUIRED)\n             {\n                 authenticationResult = SUCCESS;\n                 accessMode = AccessMode.Static.FULL;\n@@ -90,9 +91,9 @@ public class BasicLoginContext implements LoginContext\n         }\n \n         @Override\n-        public boolean hasUsername( String username )\n+        public boolean hasUsername(String username)\n         {\n-            return username().equals( username );\n+            return username().equals(username);\n         }\n     }\n \n@@ -103,16 +104,15 @@ public class BasicLoginContext implements LoginContext\n     }\n \n     @Override\n-    public SecurityContext authorize( IdLookup idLookup, String dbName )\n+    public SecurityContext authorize(IdLookup idLookup, String dbName)\n     {\n-        if ( authSubject.authenticationResult.equals( FAILURE ) || authSubject.authenticationResult.equals( TOO_MANY_ATTEMPTS ) )\n+        if (authSubject.authenticationResult.equals(FAILURE) || authSubject.authenticationResult.equals(TOO_MANY_ATTEMPTS))\n         {\n-            throw new AuthorizationViolationException( AuthorizationViolationException.PERMISSION_DENIED, Status.Security.Unauthorized );\n-        }\n-        else if ( !dbName.equals( SYSTEM_DATABASE_NAME ) && authSubject.authenticationResult.equals( PASSWORD_CHANGE_REQUIRED ) )\n+            throw new AuthorizationViolationException(AuthorizationViolationException.PERMISSION_DENIED, Status.Security.Unauthorized);\n+        } else if (!dbName.equals(SYSTEM_DATABASE_NAME) && authSubject.authenticationResult.equals(PASSWORD_CHANGE_REQUIRED))\n         {\n-            throw AccessMode.Static.CREDENTIALS_EXPIRED.onViolation( AuthorizationViolationException.PERMISSION_DENIED );\n+            throw AccessMode.Static.CREDENTIALS_EXPIRED.onViolation(AuthorizationViolationException.PERMISSION_DENIED);\n         }\n-        return new SecurityContext( authSubject, accessMode );\n+        return new SecurityContext(authSubject, accessMode);\n     }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
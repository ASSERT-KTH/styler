{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3780",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3780/UsageDataKeys.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3780/UsageDataKeys.java\nindex 7cc513d515e..23ef76e5d49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3780/UsageDataKeys.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3780/UsageDataKeys.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.udc;\n \n import java.util.function.Supplier;\n@@ -36,48 +37,60 @@ import static org.neo4j.udc.UsageDataKey.key;\n  */\n public class UsageDataKeys\n {\n-    /** Edition of Neo4j running, eg 'community' or 'enterprise' */\n-    public static final UsageDataKey<Edition> edition = key( \"neo4j.edition\", Edition.unknown );\n+  /**\n+   * Edition of Neo4j running, eg 'community' or 'enterprise'\n+   */\n+  public static final UsageDataKey<Edition> edition = key(\"neo4j.edition\", Edition.unknown);\n \n-    /** Version of Neo4j running, eg. 1.2.3-RC1 */\n-    public static final UsageDataKey<String> version = key( \"neo4j.version\", \"N/A\" );\n+  /**\n+   * Version of Neo4j running, eg. 1.2.3-RC1\n+   */\n+  public static final UsageDataKey<String> version = key(\"neo4j.version\", \"N/A\");\n \n-    /** Revision of Neo4j running, a link back to source control revision ids. */\n-    public static final UsageDataKey<String> revision = key( \"neo4j.revision\", \"N/A\" );\n+  /**\n+   * Revision of Neo4j running, a link back to source control revision ids.\n+   */\n+  public static final UsageDataKey<String> revision = key(\"neo4j.revision\", \"N/A\");\n \n-    /** Operational mode of the database */\n-    public static final UsageDataKey<OperationalMode> operationalMode = key( \"neo4j.opMode\", OperationalMode.unknown );\n+  /**\n+   * Operational mode of the database\n+   */\n+  public static final UsageDataKey<OperationalMode> operationalMode = key(\"neo4j.opMode\", OperationalMode.unknown);\n \n-    /** Self-reported names of clients connecting to us. */\n-    public static final UsageDataKey<RecentK<String>> clientNames = key( \"neo4j.clientNames\",\n-            (Supplier<RecentK<String>>) () -> new RecentK<>( 10 ) );\n+  /**\n+   * Self-reported names of clients connecting to us.\n+   */\n+  public static final UsageDataKey<RecentK<String>> clientNames = key(\"neo4j.clientNames\",\n+      (Supplier<RecentK<String>>) () -> new RecentK<>(10));\n \n-    /** Cluster server ID */\n-    public static final UsageDataKey<String> serverId = key( \"neo4j.serverId\" );\n+  /**\n+   * Cluster server ID\n+   */\n+  public static final UsageDataKey<String> serverId = key(\"neo4j.serverId\");\n \n-    public interface Features\n-    {\n-        // Note: The indexes used here is how we track which feature a flag\n-        //       refers to. Be very careful about re-using indexes so features\n-        //       don't get confused.\n-        Key http_cypher_endpoint = new Key( 0 );\n-        Key http_tx_endpoint = new Key( 1 );\n-        Key http_batch_endpoint = new Key( 2 );\n+  public interface Features\n+  {\n+    // Note: The indexes used here is how we track which feature a flag\n+    //       refers to. Be very careful about re-using indexes so features\n+    //       don't get confused.\n+    Key http_cypher_endpoint = new Key(0);\n+    Key http_tx_endpoint = new Key(1);\n+    Key http_batch_endpoint = new Key(2);\n \n-        Key bolt = new Key( 3 );\n-    }\n+    Key bolt = new Key(3);\n+  }\n \n-    private UsageDataKeys()\n-    {\n-    }\n+  private UsageDataKeys()\n+  {\n+  }\n \n-    /**\n-     * Tracks features in use, including decay such that features that are not\n-     * used for a while are marked as no longer in use.\n-     *\n-     * Decay is handled by an external mechanism invoking a 'sweep' method on this\n-     * DecayingFlags instance. See usages of this field to find where that happens.\n-     */\n-    public static final UsageDataKey<DecayingFlags> features = key( \"neo4j.features\",\n-            (Supplier<DecayingFlags>) () -> new DecayingFlags( 7/*days*/ ) );\n+  /**\n+   * Tracks features in use, including decay such that features that are not\n+   * used for a while are marked as no longer in use.\n+   * <p>\n+   * Decay is handled by an external mechanism invoking a 'sweep' method on this\n+   * DecayingFlags instance. See usages of this field to find where that happens.\n+   */\n+  public static final UsageDataKey<DecayingFlags> features = key(\"neo4j.features\",\n+      (Supplier<DecayingFlags>) () -> new DecayingFlags(7/*days*/));\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3780/UsageDataKeys.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3780/UsageDataKeys.java\nindex 7cc513d515e..e85212e8572 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3780/UsageDataKeys.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3780/UsageDataKeys.java\n@@ -49,10 +49,9 @@ public class UsageDataKeys\n     public static final UsageDataKey<OperationalMode> operationalMode = key( \"neo4j.opMode\", OperationalMode.unknown );\n \n     /** Self-reported names of clients connecting to us. */\n-    public static final UsageDataKey<RecentK<String>> clientNames = key( \"neo4j.clientNames\",\n-            (Supplier<RecentK<String>>) () -> new RecentK<>( 10 ) );\n+    public static final UsageDataKey<RecentK<String>> clientNames = key( \"neo4j.clientNames\", (Supplier<RecentK<String>>) () -> new RecentK<>( 10 ) );\n \n-    /** Cluster server ID */\n+/** Cluster server ID */\n     public static final UsageDataKey<String> serverId = key( \"neo4j.serverId\" );\n \n     public interface Features\n@@ -63,8 +62,7 @@ public class UsageDataKeys\n         Key http_cypher_endpoint = new Key( 0 );\n         Key http_tx_endpoint = new Key( 1 );\n         Key http_batch_endpoint = new Key( 2 );\n-\n-        Key bolt = new Key( 3 );\n+Key bolt = new Key( 3 );\n     }\n \n     private UsageDataKeys()\n@@ -78,6 +76,5 @@ public class UsageDataKeys\n      * Decay is handled by an external mechanism invoking a 'sweep' method on this\n      * DecayingFlags instance. See usages of this field to find where that happens.\n      */\n-    public static final UsageDataKey<DecayingFlags> features = key( \"neo4j.features\",\n-            (Supplier<DecayingFlags>) () -> new DecayingFlags( 7/*days*/ ) );\n-}\n+    public static final UsageDataKey<DecayingFlags> features = key( \"neo4j.features\", (Supplier<DecayingFlags>) () -> new DecayingFlags( 7/*days*/ ) );\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
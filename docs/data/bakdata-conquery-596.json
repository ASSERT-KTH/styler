{
    "project_name": "bakdata-conquery",
    "error_id": "596",
    "information": {
        "errors": [
            {
                "line": "86",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n\t\t\t}\n\t\t}catch (Exception e) {\n\t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n\t\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/596/QueryToCSVRenderer.java\nindex b6afd225098..321df54d05d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/596/QueryToCSVRenderer.java\n@@ -83,7 +83,8 @@ public class QueryToCSVRenderer {\n \t\t\tfor(int i=0;i<infos.size();i++) {\n \t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n \t\t\t}\n-\t\t}catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n \t\t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/596/QueryToCSVRenderer.java\nindex b6afd225098..bad01e05ae3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/596/QueryToCSVRenderer.java\n@@ -24,69 +24,69 @@ import org.apache.commons.lang3.tuple.Pair;\n @UtilityClass\n public class QueryToCSVRenderer {\n \n-\tprivate static final IdMappingConfig ID_MAPPING = ConqueryConfig.getInstance().getIdMapping();\n-\tprivate static final Collection<String> HEADER = Arrays.asList(ID_MAPPING.getPrintIdFields());\n-\t\n-\tpublic static Stream<String> toCSV(PrintSettings cfg, ManagedQuery query) {\n-\t\treturn toCSV(cfg, List.of(query));\n-\t}\n-\t\n-\tpublic static Stream<String> toCSV(PrintSettings cfg, Collection<ManagedQuery> queries) {\n-\t\tif (queries.stream()\n-\t\t\t.anyMatch(q -> q.getState() != ExecutionState.DONE)) {\n-\t\t\tthrow new IllegalArgumentException(\"Can only create a CSV from a successfully finished Query \" + queries.iterator().next().getId());\n-\t\t}\n+    private static final IdMappingConfig ID_MAPPING = ConqueryConfig.getInstance().getIdMapping();\n+    private static final Collection<String> HEADER = Arrays.asList(ID_MAPPING.getPrintIdFields());\n \n-\t\tResultInfoCollector infos = queries.iterator().next().collectResultInfos();\n-\t\t\n-\t\t//build header\n-\t\tCsvWriter writer = CsvIo.createWriter();\n-\t\twriter.addStringValues(HEADER);\n-\t\tfor(ResultInfo info : infos.getInfos()) {\n-\t\t\twriter.addValue(info.getUniqueName(cfg));\n-\t\t}\n-\t\t\n-\t\treturn Stream.concat(\n-\t\t\tStream.of(writer.writeValuesToString()),\n-\t\t\tqueries\n-\t\t\t\t.stream()\n-\t\t\t\t.flatMap(\n-\t\t\t\t\tq -> createCSVBody(\n-\t\t\t\t\t\twriter,\n-\t\t\t\t\t\tcfg,\n-\t\t\t\t\t\tq.collectResultInfos(),\n-\t\t\t\t\t\tq\n-\t\t\t\t\t))\n-\t\t);\n-\t}\n+    public static Stream<String> toCSV(PrintSettings cfg, ManagedQuery query) {\n+        return toCSV(cfg, List.of(query));\n+    }\n \n-\tprivate static Stream<String> createCSVBody(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, ManagedQuery query) {\n-\t\treturn query.getResults()\n-\t\t\t\t\t.stream()\n-\t\t\t\t\t.map(result -> Pair.of(cfg.getIdMapper().map(result), result))\n-\t\t\t\t\t.sorted(Comparator.comparing(Pair::getKey))\n-\t\t\t\t\t.flatMap(res -> createCSVLine(writer, cfg, infos, res));\n-\t}\n+    public static Stream<String> toCSV(PrintSettings cfg, Collection<ManagedQuery> queries) {\n+        if (queries.stream()\n+            .anyMatch(q -> q.getState() != ExecutionState.DONE)) {\n+            throw new IllegalArgumentException(\"Can only create a CSV from a successfully finished Query \" + queries.iterator().next().getId());\n+        }\n \n-\t\n-\tprivate static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n-\t\treturn idResult\n-\t\t\t.getValue()\n-\t\t\t.streamValues()\n-\t\t\t.map(result -> print(writer, cfg, idResult.getKey(), infos, result));\n-\t}\n-\t\n-\tpublic static String print(CsvWriter writer, PrintSettings cfg, ExternalEntityId entity, ResultInfoCollector infos, Object[] value) {\n-\t\tList<String> result = new ArrayList<>(entity.getExternalId().length + value.length);\n-\t\tresult.addAll(Arrays.asList(entity.getExternalId()));\n-\t\ttry {\n-\t\t\tfor(int i=0;i<infos.size();i++) {\n-\t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n-\t\t\t}\n-\t\t}catch (Exception e) {\n-\t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n-\t\t}\n+        ResultInfoCollector infos = queries.iterator().next().collectResultInfos();\n \n-\t\treturn writer.writeRowToString(result);\n-\t}\n+        //build header\n+        CsvWriter writer = CsvIo.createWriter();\n+        writer.addStringValues(HEADER);\n+        for (ResultInfo info : infos.getInfos()) {\n+            writer.addValue(info.getUniqueName(cfg));\n+        }\n+\n+        return Stream.concat(\n+            Stream.of(writer.writeValuesToString()),\n+            queries\n+                .stream()\n+                .flatMap(\n+                    q -> createCSVBody(\n+                        writer,\n+                        cfg,\n+                        q.collectResultInfos(),\n+                        q\n+                    ))\n+        );\n+    }\n+\n+    private static Stream<String> createCSVBody(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, ManagedQuery query) {\n+        return query.getResults()\n+            .stream()\n+            .map(result -> Pair.of(cfg.getIdMapper().map(result), result))\n+            .sorted(Comparator.comparing(Pair::getKey))\n+            .flatMap(res -> createCSVLine(writer, cfg, infos, res));\n+    }\n+\n+\n+    private static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n+        return idResult\n+            .getValue()\n+            .streamValues()\n+            .map(result -> print(writer, cfg, idResult.getKey(), infos, result));\n+    }\n+\n+    public static String print(CsvWriter writer, PrintSettings cfg, ExternalEntityId entity, ResultInfoCollector infos, Object[] value) {\n+        List<String> result = new ArrayList<>(entity.getExternalId().length + value.length);\n+        result.addAll(Arrays.asList(entity.getExternalId()));\n+        try {\n+            for (int i = 0; i < infos.size(); i++) {\n+                result.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n+            }\n+        } catch (Exception e) {\n+            throw new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n+        }\n+\n+        return writer.writeRowToString(result);\n+    }\n }\n",
            "diff_size": 109
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/596/QueryToCSVRenderer.java\nindex b6afd225098..472fc146a3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/596/QueryToCSVRenderer.java\n@@ -46,8 +46,7 @@ public class QueryToCSVRenderer {\n \t\t\twriter.addValue(info.getUniqueName(cfg));\n \t\t}\n \t\t\n-\t\treturn Stream.concat(\n-\t\t\tStream.of(writer.writeValuesToString()),\n+\t\treturn Stream.concat(Stream.of(writer.writeValuesToString()),\n \t\t\tqueries\n \t\t\t\t.stream()\n \t\t\t\t.flatMap(\n@@ -56,20 +55,17 @@ public class QueryToCSVRenderer {\n \t\t\t\t\t\tcfg,\n \t\t\t\t\t\tq.collectResultInfos(),\n \t\t\t\t\t\tq\n-\t\t\t\t\t))\n-\t\t);\n+\t\t\t\t\t)));\n \t}\n \n \tprivate static Stream<String> createCSVBody(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, ManagedQuery query) {\n-\t\treturn query.getResults()\n-\t\t\t\t\t.stream()\n+\t\treturn query.getResults().stream()\n \t\t\t\t\t.map(result -> Pair.of(cfg.getIdMapper().map(result), result))\n \t\t\t\t\t.sorted(Comparator.comparing(Pair::getKey))\n \t\t\t\t\t.flatMap(res -> createCSVLine(writer, cfg, infos, res));\n \t}\n \n-\t\n-\tprivate static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n+private static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n \t\treturn idResult\n \t\t\t.getValue()\n \t\t\t.streamValues()\n@@ -83,10 +79,11 @@ public class QueryToCSVRenderer {\n \t\t\tfor(int i=0;i<infos.size();i++) {\n \t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n \t\t\t}\n-\t\t}catch (Exception e) {\n+\t\t}\n+catch (Exception e) {\n \t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n \t\t}\n \n \t\treturn writer.writeRowToString(result);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/596/QueryToCSVRenderer.java\nindex b6afd225098..2452bdecd8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/596/QueryToCSVRenderer.java\n@@ -6,7 +6,6 @@ import java.util.Collection;\n import java.util.Comparator;\n import java.util.List;\n import java.util.stream.Stream;\n-\n import com.bakdata.conquery.io.csv.CsvIo;\n import com.bakdata.conquery.models.config.ConqueryConfig;\n import com.bakdata.conquery.models.execution.ExecutionState;\n@@ -24,69 +23,51 @@ import org.apache.commons.lang3.tuple.Pair;\n @UtilityClass\n public class QueryToCSVRenderer {\n \n-\tprivate static final IdMappingConfig ID_MAPPING = ConqueryConfig.getInstance().getIdMapping();\n-\tprivate static final Collection<String> HEADER = Arrays.asList(ID_MAPPING.getPrintIdFields());\n-\t\n-\tpublic static Stream<String> toCSV(PrintSettings cfg, ManagedQuery query) {\n-\t\treturn toCSV(cfg, List.of(query));\n-\t}\n-\t\n-\tpublic static Stream<String> toCSV(PrintSettings cfg, Collection<ManagedQuery> queries) {\n-\t\tif (queries.stream()\n-\t\t\t.anyMatch(q -> q.getState() != ExecutionState.DONE)) {\n-\t\t\tthrow new IllegalArgumentException(\"Can only create a CSV from a successfully finished Query \" + queries.iterator().next().getId());\n-\t\t}\n+ private static final IdMappingConfig ID_MAPPING = ConqueryConfig.getInstance().getIdMapping();\n+ private static final Collection<String> HEADER = Arrays.asList(ID_MAPPING.getPrintIdFields());\n+\n+ public static Stream<String> toCSV(PrintSettings cfg, ManagedQuery query) {\n+  return toCSV(cfg, List.of(query));\n+ }\n+\n+ public static Stream<String> toCSV(PrintSettings cfg, Collection<ManagedQuery> queries) {\n+  if (queries.stream().anyMatch(q -> q.getState() != ExecutionState.DONE)) {\n+   throw new IllegalArgumentException(\"Can only create a CSV from a successfully finished Query \"+queries.iterator().next().getId());\n+  }\n \n-\t\tResultInfoCollector infos = queries.iterator().next().collectResultInfos();\n-\t\t\n-\t\t//build header\n-\t\tCsvWriter writer = CsvIo.createWriter();\n-\t\twriter.addStringValues(HEADER);\n-\t\tfor(ResultInfo info : infos.getInfos()) {\n-\t\t\twriter.addValue(info.getUniqueName(cfg));\n-\t\t}\n-\t\t\n-\t\treturn Stream.concat(\n-\t\t\tStream.of(writer.writeValuesToString()),\n-\t\t\tqueries\n-\t\t\t\t.stream()\n-\t\t\t\t.flatMap(\n-\t\t\t\t\tq -> createCSVBody(\n-\t\t\t\t\t\twriter,\n-\t\t\t\t\t\tcfg,\n-\t\t\t\t\t\tq.collectResultInfos(),\n-\t\t\t\t\t\tq\n-\t\t\t\t\t))\n-\t\t);\n-\t}\n+  ResultInfoCollector infos = queries.iterator().next().collectResultInfos();\n+  \n+  //build header\n+  CsvWriter writer = CsvIo.createWriter();\n+  writer.addStringValues(HEADER);\n+  for(ResultInfo info :infos.getInfos()) {\n+   writer.addValue(info.getUniqueName(cfg));\n+  }\n+  return Stream.concat(Stream.of(writer.writeValuesToString()), queries.stream().flatMap(q -> createCSVBody(writer, cfg, q.collectResultInfos(), q)));\n+ }\n \n-\tprivate static Stream<String> createCSVBody(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, ManagedQuery query) {\n-\t\treturn query.getResults()\n-\t\t\t\t\t.stream()\n-\t\t\t\t\t.map(result -> Pair.of(cfg.getIdMapper().map(result), result))\n-\t\t\t\t\t.sorted(Comparator.comparing(Pair::getKey))\n-\t\t\t\t\t.flatMap(res -> createCSVLine(writer, cfg, infos, res));\n-\t}\n+ private static Stream<String> createCSVBody(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, ManagedQuery query) {\n+  return query.getResults().stream().map(result -> Pair.of(cfg.getIdMapper().map(result), result)).sorted(Comparator.comparing(Pair::getKey)).flatMap(res -> createCSVLine(writer, cfg, infos, res));\n+ }\n \n-\t\n-\tprivate static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n-\t\treturn idResult\n-\t\t\t.getValue()\n-\t\t\t.streamValues()\n-\t\t\t.map(result -> print(writer, cfg, idResult.getKey(), infos, result));\n-\t}\n-\t\n-\tpublic static String print(CsvWriter writer, PrintSettings cfg, ExternalEntityId entity, ResultInfoCollector infos, Object[] value) {\n-\t\tList<String> result = new ArrayList<>(entity.getExternalId().length + value.length);\n-\t\tresult.addAll(Arrays.asList(entity.getExternalId()));\n-\t\ttry {\n-\t\t\tfor(int i=0;i<infos.size();i++) {\n-\t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n-\t\t\t}\n-\t\t}catch (Exception e) {\n-\t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n-\t\t}\n+ private static Stream<String> createCSVLine(CsvWriter writer, PrintSettings cfg, ResultInfoCollector infos, Pair<ExternalEntityId, EntityResult> idResult) {\n+  return idResult.getValue().streamValues().map(result -> print(writer, cfg, idResult.getKey(), infos, result));\n+ }\n \n-\t\treturn writer.writeRowToString(result);\n-\t}\n-}\n+ public static String print(CsvWriter writer, PrintSettings cfg, ExternalEntityId entity, ResultInfoCollector infos, Object[] value) {\n+  List<String> result = new ArrayList<>(entity.getExternalId().length+value.length);\n+  result.addAll(Arrays.asList(entity.getExternalId()));\n+  try {\n+   for(int i = 0;i<infos.size();i++) {\n+    result.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n+   }\n+  }\n+  catch (Exception e) {\n+   throw new IllegalStateException(\n+          \"Unable to print line \" +Arrays.deepToString(value)+\" with result infos \"+infos.getInfos(),\n+          e\n+         );\n+  }\n+  return writer.writeRowToString(result);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 77
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/596/QueryToCSVRenderer.java\nindex b6afd225098..321df54d05d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/596/QueryToCSVRenderer.java\n@@ -83,7 +83,8 @@ public class QueryToCSVRenderer {\n \t\t\tfor(int i=0;i<infos.size();i++) {\n \t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n \t\t\t}\n-\t\t}catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n \t\t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/596/QueryToCSVRenderer.java\nindex b6afd225098..321df54d05d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/596/QueryToCSVRenderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/596/QueryToCSVRenderer.java\n@@ -83,7 +83,8 @@ public class QueryToCSVRenderer {\n \t\t\tfor(int i=0;i<infos.size();i++) {\n \t\t\t\tresult.add(infos.getInfos().get(i).getType().printNullable(cfg, value[i]));\n \t\t\t}\n-\t\t}catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tthrow new IllegalStateException(\"Unable to print line \" + Arrays.deepToString(value) + \" with result infos \" + infos.getInfos(), e);\n \t\t}\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "apache-ignite-3",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "46",
                "column": "9",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "         */\n        ENTRY_TYPE_CONFIGURATION(3),\n        ;\n\n        public final int getNumber() {\n            return value;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/17/EnumOutter.java\nindex ebfdc98ee5a..ab569ad17d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/17/EnumOutter.java\n@@ -42,8 +42,7 @@ public final class EnumOutter {\n         /**\n          * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n          */\n-        ENTRY_TYPE_CONFIGURATION(3),\n-        ;\n+        ENTRY_TYPE_CONFIGURATION(3),;\n \n         public final int getNumber() {\n             return value;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "46",
                    "column": "5",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/17/EnumOutter.java\nindex ebfdc98ee5a..164d0a9be53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/17/EnumOutter.java\n@@ -20,131 +20,131 @@\n package org.apache.ignite.raft.jraft.entity;\n \n public final class EnumOutter {\n-    private EnumOutter() {\n-    }\n+  private EnumOutter() {\n+  }\n \n+  /**\n+   * Protobuf enum {@code jraft.EntryType}\n+   */\n+  public enum EntryType {\n+    /**\n+     * <code>ENTRY_TYPE_UNKNOWN = 0;</code>\n+     */\n+    ENTRY_TYPE_UNKNOWN(0),\n+    /**\n+     * <code>ENTRY_TYPE_NO_OP = 1;</code>\n+     */\n+    ENTRY_TYPE_NO_OP(1),\n+    /**\n+     * <code>ENTRY_TYPE_DATA = 2;</code>\n+     */\n+    ENTRY_TYPE_DATA(2),\n     /**\n-     * Protobuf enum {@code jraft.EntryType}\n+     * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n      */\n-    public enum EntryType {\n-        /**\n-         * <code>ENTRY_TYPE_UNKNOWN = 0;</code>\n-         */\n-        ENTRY_TYPE_UNKNOWN(0),\n-        /**\n-         * <code>ENTRY_TYPE_NO_OP = 1;</code>\n-         */\n-        ENTRY_TYPE_NO_OP(1),\n-        /**\n-         * <code>ENTRY_TYPE_DATA = 2;</code>\n-         */\n-        ENTRY_TYPE_DATA(2),\n-        /**\n-         * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n-         */\n-        ENTRY_TYPE_CONFIGURATION(3),\n-        ;\n+    ENTRY_TYPE_CONFIGURATION(3),\n+    ;\n \n-        public final int getNumber() {\n-            return value;\n-        }\n+    public final int getNumber() {\n+      return value;\n+    }\n \n-        /**\n-         * @deprecated Use {@link #forNumber(int)} instead.\n-         */\n-        @Deprecated\n-        public static EntryType valueOf(int value) {\n-            return forNumber(value);\n-        }\n+    /**\n+     * @deprecated Use {@link #forNumber(int)} instead.\n+     */\n+    @Deprecated\n+    public static EntryType valueOf(int value) {\n+      return forNumber(value);\n+    }\n \n-        public static EntryType forNumber(int value) {\n-            switch (value) {\n-                case 0:\n-                    return ENTRY_TYPE_UNKNOWN;\n-                case 1:\n-                    return ENTRY_TYPE_NO_OP;\n-                case 2:\n-                    return ENTRY_TYPE_DATA;\n-                case 3:\n-                    return ENTRY_TYPE_CONFIGURATION;\n-                default:\n-                    return null;\n-            }\n-        }\n+    public static EntryType forNumber(int value) {\n+      switch (value) {\n+        case 0:\n+          return ENTRY_TYPE_UNKNOWN;\n+        case 1:\n+          return ENTRY_TYPE_NO_OP;\n+        case 2:\n+          return ENTRY_TYPE_DATA;\n+        case 3:\n+          return ENTRY_TYPE_CONFIGURATION;\n+        default:\n+          return null;\n+      }\n+    }\n \n-        private final int value;\n+    private final int value;\n \n-        private EntryType(int value) {\n-            this.value = value;\n-        }\n+    private EntryType(int value) {\n+      this.value = value;\n     }\n+  }\n \n+  /**\n+   * Protobuf enum {@code jraft.ErrorType}\n+   */\n+  public enum ErrorType {\n+    /**\n+     * <code>ERROR_TYPE_NONE = 0;</code>\n+     */\n+    ERROR_TYPE_NONE(0),\n     /**\n-     * Protobuf enum {@code jraft.ErrorType}\n+     * <code>ERROR_TYPE_LOG = 1;</code>\n      */\n-    public enum ErrorType {\n-        /**\n-         * <code>ERROR_TYPE_NONE = 0;</code>\n-         */\n-        ERROR_TYPE_NONE(0),\n-        /**\n-         * <code>ERROR_TYPE_LOG = 1;</code>\n-         */\n-        ERROR_TYPE_LOG(1),\n-        /**\n-         * <code>ERROR_TYPE_STABLE = 2;</code>\n-         */\n-        ERROR_TYPE_STABLE(2),\n-        /**\n-         * <code>ERROR_TYPE_SNAPSHOT = 3;</code>\n-         */\n-        ERROR_TYPE_SNAPSHOT(3),\n-        /**\n-         * <code>ERROR_TYPE_STATE_MACHINE = 4;</code>\n-         */\n-        ERROR_TYPE_STATE_MACHINE(4),\n-        /**\n-         * <code>ERROR_TYPE_META = 5;</code>\n-         */\n-        ERROR_TYPE_META(5);\n+    ERROR_TYPE_LOG(1),\n+    /**\n+     * <code>ERROR_TYPE_STABLE = 2;</code>\n+     */\n+    ERROR_TYPE_STABLE(2),\n+    /**\n+     * <code>ERROR_TYPE_SNAPSHOT = 3;</code>\n+     */\n+    ERROR_TYPE_SNAPSHOT(3),\n+    /**\n+     * <code>ERROR_TYPE_STATE_MACHINE = 4;</code>\n+     */\n+    ERROR_TYPE_STATE_MACHINE(4),\n+    /**\n+     * <code>ERROR_TYPE_META = 5;</code>\n+     */\n+    ERROR_TYPE_META(5);\n \n-        public final int getNumber() {\n-            return value;\n-        }\n+    public final int getNumber() {\n+      return value;\n+    }\n \n-        /**\n-         * @deprecated Use {@link #forNumber(int)} instead.\n-         */\n-        @Deprecated\n-        public static ErrorType valueOf(int value) {\n-            return forNumber(value);\n-        }\n+    /**\n+     * @deprecated Use {@link #forNumber(int)} instead.\n+     */\n+    @Deprecated\n+    public static ErrorType valueOf(int value) {\n+      return forNumber(value);\n+    }\n \n-        public static ErrorType forNumber(int value) {\n-            switch (value) {\n-                case 0:\n-                    return ERROR_TYPE_NONE;\n-                case 1:\n-                    return ERROR_TYPE_LOG;\n-                case 2:\n-                    return ERROR_TYPE_STABLE;\n-                case 3:\n-                    return ERROR_TYPE_SNAPSHOT;\n-                case 4:\n-                    return ERROR_TYPE_STATE_MACHINE;\n-                case 5:\n-                    return ERROR_TYPE_META;\n-                default:\n-                    return null;\n-            }\n-        }\n+    public static ErrorType forNumber(int value) {\n+      switch (value) {\n+        case 0:\n+          return ERROR_TYPE_NONE;\n+        case 1:\n+          return ERROR_TYPE_LOG;\n+        case 2:\n+          return ERROR_TYPE_STABLE;\n+        case 3:\n+          return ERROR_TYPE_SNAPSHOT;\n+        case 4:\n+          return ERROR_TYPE_STATE_MACHINE;\n+        case 5:\n+          return ERROR_TYPE_META;\n+        default:\n+          return null;\n+      }\n+    }\n \n-        private static final ErrorType[] VALUES = values();\n+    private static final ErrorType[] VALUES = values();\n \n-        private final int value;\n+    private final int value;\n \n-        private ErrorType(int value) {\n-            this.value = value;\n-        }\n+    private ErrorType(int value) {\n+      this.value = value;\n     }\n+  }\n }\n",
            "diff_size": 134
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/17/EnumOutter.java\nindex ebfdc98ee5a..96bfe4742cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/17/EnumOutter.java\n@@ -147,4 +147,4 @@ public final class EnumOutter {\n             this.value = value;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "column": "5",
                    "severity": "error",
                    "message": "'ENUM_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "column": "41",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/17/EnumOutter.java\nindex ebfdc98ee5a..1d67fe2e517 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/17/EnumOutter.java\n@@ -19,31 +19,32 @@\n \n package org.apache.ignite.raft.jraft.entity;\n \n+\n public final class EnumOutter {\n+\n     private EnumOutter() {\n     }\n \n     /**\n      * Protobuf enum {@code jraft.EntryType}\n      */\n-    public enum EntryType {\n+\n+\n+    public enum EntryType\n+    {\n         /**\n          * <code>ENTRY_TYPE_UNKNOWN = 0;</code>\n          */\n         ENTRY_TYPE_UNKNOWN(0),\n         /**\n          * <code>ENTRY_TYPE_NO_OP = 1;</code>\n-         */\n-        ENTRY_TYPE_NO_OP(1),\n+         */ ENTRY_TYPE_NO_OP(1),\n         /**\n          * <code>ENTRY_TYPE_DATA = 2;</code>\n-         */\n-        ENTRY_TYPE_DATA(2),\n+         */ ENTRY_TYPE_DATA(2),\n         /**\n          * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n-         */\n-        ENTRY_TYPE_CONFIGURATION(3),\n-        ;\n+         */ ENTRY_TYPE_CONFIGURATION(3) ,;\n \n         public final int getNumber() {\n             return value;\n@@ -52,8 +53,8 @@ public final class EnumOutter {\n         /**\n          * @deprecated Use {@link #forNumber(int)} instead.\n          */\n-        @Deprecated\n-        public static EntryType valueOf(int value) {\n+\n+        @Deprecated public static EntryType valueOf(int value) {\n             return forNumber(value);\n         }\n \n@@ -67,11 +68,13 @@ public final class EnumOutter {\n                     return ENTRY_TYPE_DATA;\n                 case 3:\n                     return ENTRY_TYPE_CONFIGURATION;\n+\n                 default:\n                     return null;\n             }\n         }\n \n+\n         private final int value;\n \n         private EntryType(int value) {\n@@ -82,6 +85,7 @@ public final class EnumOutter {\n     /**\n      * Protobuf enum {@code jraft.ErrorType}\n      */\n+\n     public enum ErrorType {\n         /**\n          * <code>ERROR_TYPE_NONE = 0;</code>\n@@ -115,8 +119,8 @@ public final class EnumOutter {\n         /**\n          * @deprecated Use {@link #forNumber(int)} instead.\n          */\n-        @Deprecated\n-        public static ErrorType valueOf(int value) {\n+\n+        @Deprecated public static ErrorType valueOf(int value) {\n             return forNumber(value);\n         }\n \n@@ -134,17 +138,18 @@ public final class EnumOutter {\n                     return ERROR_TYPE_STATE_MACHINE;\n                 case 5:\n                     return ERROR_TYPE_META;\n+\n                 default:\n                     return null;\n             }\n         }\n \n-        private static final ErrorType[] VALUES = values();\n \n+        private static final ErrorType[] VALUES = values();\n         private final int value;\n \n         private ErrorType(int value) {\n             this.value = value;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/17/EnumOutter.java\nindex ebfdc98ee5a..ab569ad17d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/17/EnumOutter.java\n@@ -42,8 +42,7 @@ public final class EnumOutter {\n         /**\n          * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n          */\n-        ENTRY_TYPE_CONFIGURATION(3),\n-        ;\n+        ENTRY_TYPE_CONFIGURATION(3),;\n \n         public final int getNumber() {\n             return value;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/17/EnumOutter.java\nindex ebfdc98ee5a..ab569ad17d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/17/EnumOutter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/17/EnumOutter.java\n@@ -42,8 +42,7 @@ public final class EnumOutter {\n         /**\n          * <code>ENTRY_TYPE_CONFIGURATION = 3;</code>\n          */\n-        ENTRY_TYPE_CONFIGURATION(3),\n-        ;\n+        ENTRY_TYPE_CONFIGURATION(3),;\n \n         public final int getNumber() {\n             return value;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
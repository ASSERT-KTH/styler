{
    "project_name": "graphfoundation-ongdb",
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/59/AbstractLockService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/59/AbstractLockService.java\nindex 8c39b721e53..810cd12368b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/59/AbstractLockService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/59/AbstractLockService.java\n@@ -17,11 +17,12 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n /**\n  * Abstract implementation to keep all the boiler-plate code separate from actual locking logic.\n- *\n+ * <p>\n  * Diagram of how classes inter-relate:\n  * <pre>\n  * ({@link LockService}) --------[returns]--------> ({@link Lock})\n@@ -46,142 +47,140 @@ package org.neo4j.kernel.impl.locking;\n  */\n abstract class AbstractLockService<HANDLE> implements LockService\n {\n+  @Override\n+  public Lock acquireNodeLock(long nodeId, LockType type)\n+  {\n+    return lock(new LockedNode(nodeId));\n+  }\n+\n+  @Override\n+  public Lock acquireRelationshipLock(long relationshipId, LockType type)\n+  {\n+    return lock(new LockedRelationship(relationshipId));\n+  }\n+\n+  private Lock lock(LockedEntity key)\n+  {\n+    return new LockReference(key, acquire(key));\n+  }\n+\n+  protected abstract HANDLE acquire(LockedEntity key);\n+\n+  protected abstract void release(LockedEntity key, HANDLE handle);\n+\n+  protected abstract static class LockedEntity\n+  {\n+    private LockedEntity()\n+    {\n+      // all instances defined in this class\n+    }\n+\n+    @Override\n+    public final String toString()\n+    {\n+      StringBuilder repr = new StringBuilder(getClass().getSimpleName()).append('[');\n+      toString(repr);\n+      return repr.append(']').toString();\n+    }\n+\n+    abstract void toString(StringBuilder repr);\n+\n     @Override\n-    public Lock acquireNodeLock( long nodeId, LockType type )\n+    public abstract int hashCode();\n+\n+    @Override\n+    public abstract boolean equals(Object obj);\n+  }\n+\n+  private class LockReference extends Lock\n+  {\n+    private final LockedEntity key;\n+    private HANDLE handle;\n+\n+    LockReference(LockedEntity key, HANDLE handle)\n     {\n-        return lock( new LockedNode( nodeId ) );\n+      this.key = key;\n+      this.handle = handle;\n     }\n \n     @Override\n-    public Lock acquireRelationshipLock( long relationshipId, LockType type )\n+    public String toString()\n     {\n-        return lock( new LockedRelationship( relationshipId ) );\n+      StringBuilder repr = new StringBuilder(key.getClass().getSimpleName()).append('[');\n+      key.toString(repr);\n+      if (handle != null)\n+      {\n+        repr.append(\"; HELD_BY=\").append(handle);\n+      } else\n+      {\n+        repr.append(\"; RELEASED\");\n+      }\n+      return repr.append(']').toString();\n     }\n \n-    private Lock lock( LockedEntity key )\n+    @Override\n+    public void release()\n     {\n-        return new LockReference( key, acquire( key ) );\n+      if (handle == null)\n+      {\n+        return;\n+      }\n+      try\n+      {\n+        AbstractLockService.this.release(key, handle);\n+      } finally\n+      {\n+        handle = null;\n+      }\n     }\n+  }\n \n-    protected abstract HANDLE acquire( LockedEntity key );\n+  static class LockedPropertyContainer extends LockedEntity\n+  {\n+    private final long id;\n \n-    protected abstract void release( LockedEntity key, HANDLE handle );\n+    LockedPropertyContainer(long id)\n+    {\n+      this.id = id;\n+    }\n \n-    protected abstract static class LockedEntity\n+    @Override\n+    void toString(StringBuilder repr)\n     {\n-        private LockedEntity()\n-        {\n-            // all instances defined in this class\n-        }\n-\n-        @Override\n-        public final String toString()\n-        {\n-            StringBuilder repr = new StringBuilder( getClass().getSimpleName() ).append( '[' );\n-            toString( repr );\n-            return repr.append( ']' ).toString();\n-        }\n-\n-        abstract void toString( StringBuilder repr );\n-\n-        @Override\n-        public abstract int hashCode();\n-\n-        @Override\n-        public abstract boolean equals( Object obj );\n+      repr.append(\"id=\").append(id);\n     }\n \n-    private class LockReference extends Lock\n+    @Override\n+    public int hashCode()\n     {\n-        private final LockedEntity key;\n-        private HANDLE handle;\n-\n-        LockReference( LockedEntity key, HANDLE handle )\n-        {\n-            this.key = key;\n-            this.handle = handle;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            StringBuilder repr = new StringBuilder( key.getClass().getSimpleName() ).append( '[' );\n-            key.toString( repr );\n-            if ( handle != null )\n-            {\n-                repr.append( \"; HELD_BY=\" ).append( handle );\n-            }\n-            else\n-            {\n-                repr.append( \"; RELEASED\" );\n-            }\n-            return repr.append( ']' ).toString();\n-        }\n-\n-        @Override\n-        public void release()\n-        {\n-            if ( handle == null )\n-            {\n-                return;\n-            }\n-            try\n-            {\n-                AbstractLockService.this.release( key, handle );\n-            }\n-            finally\n-            {\n-                handle = null;\n-            }\n-        }\n+      return (int) (id ^ (id >>> 32));\n     }\n \n-    static class LockedPropertyContainer extends LockedEntity\n+    @Override\n+    public boolean equals(Object obj)\n     {\n-        private final long id;\n-\n-        LockedPropertyContainer( long id )\n-        {\n-            this.id = id;\n-        }\n-\n-        @Override\n-        void toString( StringBuilder repr )\n-        {\n-            repr.append( \"id=\" ).append( id );\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return (int) (id ^ (id >>> 32));\n-        }\n-\n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            if ( obj != null && obj.getClass().equals( getClass() ) )\n-            {\n-                LockedPropertyContainer that = (LockedPropertyContainer) obj;\n-                return this.id == that.id;\n-            }\n-            return false;\n-        }\n+      if (obj != null && obj.getClass().equals(getClass()))\n+      {\n+        LockedPropertyContainer that = (LockedPropertyContainer) obj;\n+        return this.id == that.id;\n+      }\n+      return false;\n     }\n+  }\n \n-    static final class LockedNode extends LockedPropertyContainer\n+  static final class LockedNode extends LockedPropertyContainer\n+  {\n+    LockedNode(long nodeId)\n     {\n-        LockedNode( long nodeId )\n-        {\n-            super( nodeId );\n-        }\n+      super(nodeId);\n     }\n+  }\n \n-    static final class LockedRelationship extends LockedPropertyContainer\n+  static final class LockedRelationship extends LockedPropertyContainer\n+  {\n+    LockedRelationship(long relationshipId)\n     {\n-        LockedRelationship( long relationshipId )\n-        {\n-            super( relationshipId );\n-        }\n+      super(relationshipId);\n     }\n+  }\n }\n",
            "diff_size": 199
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/59/AbstractLockService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/59/AbstractLockService.java\nindex 8c39b721e53..13cec5bb6dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/59/AbstractLockService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/59/AbstractLockService.java\n@@ -115,7 +115,8 @@ abstract class AbstractLockService<HANDLE> implements LockService\n             {\n                 repr.append( \"; RELEASED\" );\n             }\n-            return repr.append( ']' ).toString();\n+\n+return repr.append( ']' ).toString();\n         }\n \n         @Override\n@@ -125,7 +126,8 @@ abstract class AbstractLockService<HANDLE> implements LockService\n             {\n                 return;\n             }\n-            try\n+\n+try\n             {\n                 AbstractLockService.this.release( key, handle );\n             }\n@@ -154,7 +156,7 @@ abstract class AbstractLockService<HANDLE> implements LockService\n         @Override\n         public int hashCode()\n         {\n-            return (int) (id ^ (id >>> 32));\n+            return ( int) ( id ^ ( id >>> 32 ));\n         }\n \n         @Override\n@@ -184,4 +186,4 @@ abstract class AbstractLockService<HANDLE> implements LockService\n             super( relationshipId );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
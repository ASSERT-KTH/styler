{
    "project_name": "EMResearch-EMB",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 155).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class MorfologikAsturianSpellerRule extends MorfologikSpellerRule {\n\n  public MorfologikAsturianSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n    super(messages, language, userConfig, altLanguages);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/47/MorfologikAsturianSpellerRule.java\nindex a808eff4d75..9965222dd26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/47/MorfologikAsturianSpellerRule.java\n@@ -1,6 +1,6 @@\n /* LanguageTool, a natural language style checker\n  * Copyright (C) 2014 Daniel Naber (http://www.danielnaber.de)\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.language.rules.ast;\n \n import org.languagetool.Language;\n@@ -31,18 +32,19 @@ import java.util.ResourceBundle;\n  */\n public class MorfologikAsturianSpellerRule extends MorfologikSpellerRule {\n \n-  public MorfologikAsturianSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n-    super(messages, language, userConfig, altLanguages);\n-  }\n+    public MorfologikAsturianSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig,\n+                                         List<Language> altLanguages) throws IOException {\n+        super(messages, language, userConfig, altLanguages);\n+    }\n \n-  @Override\n-  public String getFileName() {\n-    return \"/ast/hunspell/ast_ES.dict\";\n-  }\n+    @Override\n+    public String getFileName() {\n+        return \"/ast/hunspell/ast_ES.dict\";\n+    }\n \n-  @Override\n-  public final String getId() {\n-    return \"MORFOLOGIK_RULE_AST\";\n-  }\n+    @Override\n+    public final String getId() {\n+        return \"MORFOLOGIK_RULE_AST\";\n+    }\n \n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/47/MorfologikAsturianSpellerRule.java\nindex a808eff4d75..b65997ce6d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/47/MorfologikAsturianSpellerRule.java\n@@ -45,4 +45,4 @@ public class MorfologikAsturianSpellerRule extends MorfologikSpellerRule {\n     return \"MORFOLOGIK_RULE_AST\";\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/47/MorfologikAsturianSpellerRule.java\nindex a808eff4d75..26b84c8392e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/47/MorfologikAsturianSpellerRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/47/MorfologikAsturianSpellerRule.java\n@@ -21,7 +21,6 @@ package org.languagetool.language.rules.ast;\n import org.languagetool.Language;\n import org.languagetool.UserConfig;\n import org.languagetool.rules.spelling.morfologik.MorfologikSpellerRule;\n-\n import java.io.IOException;\n import java.util.List;\n import java.util.ResourceBundle;\n@@ -29,20 +28,20 @@ import java.util.ResourceBundle;\n /**\n  * @since 2.8\n  */\n-public class MorfologikAsturianSpellerRule extends MorfologikSpellerRule {\n \n-  public MorfologikAsturianSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n+\n+public class MorfologikAsturianSpellerRule extends MorfologikSpellerRule {\n+    public MorfologikAsturianSpellerRule(ResourceBundle messages, Language language, UserConfig userConfig, List<Language> altLanguages) throws IOException {\n     super(messages, language, userConfig, altLanguages);\n-  }\n+    }\n \n-  @Override\n-  public String getFileName() {\n-    return \"/ast/hunspell/ast_ES.dict\";\n-  }\n+    @Override\n+    public String getFileName() {\n+        return \"/ast/hunspell/ast_ES.dict\";\n+    }\n \n-  @Override\n-  public final String getId() {\n+    @Override\n+    public final String getId() {\n     return \"MORFOLOGIK_RULE_AST\";\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
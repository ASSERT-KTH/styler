{
    "project_name": "bakdata-conquery",
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "103",
                "column": "1",
                "severity": "warning",
                "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 105.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "\t\t}\n// TODO use keycloak lib\n//\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n\t\t\n\t\tUserId userId = new UserId(username);\n\t\tUser user = storage.getUser(userId);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..3360f23b06a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -101,8 +101,7 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \t\t}\n // TODO use keycloak lib\n //\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n+UserId userId = new UserId(username);\n \t\tUser user = storage.getUser(userId);\n \t\t// try to construct a new User if none could be found in the storage\n \t\tif (user == null) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 104.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..3829c0b967d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -53,115 +53,113 @@ import org.keycloak.authorization.client.AuthzClient;\n @RequiredArgsConstructor\n public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthenticationRealm implements AuthApiUnprotectedResourceProvider, AuthAdminUnprotectedResourceProvider, UsernamePasswordChecker {\n \n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\t\n-\tprivate final MasterMetaStorage storage;\n-\tprivate final OIDCResourceOwnerPasswordCredeantialRealmFactory config;\n-\t\n-\tprivate ClientAuthentication clientAuthentication;\n-\tprivate AuthzClient authzClient;\n-\t\n-\t@Override\n-\tprotected void onInit() {\n-\t\tsuper.onInit();\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t\tthis.setAuthenticationTokenClass(TOKEN_CLASS);\n-\t\tthis.clientAuthentication = new ClientSecretBasic(new ClientID(config.getResource()), new Secret((String)config.getCredentials().get(\"secret\")));\n-\t\t\n-\t\tauthzClient = AuthzClient.create(config);\n-\t}\n-\t\n-\t@Override\n-\t@SneakyThrows\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\ttoken.getCredentials();\n-\t\t\n-\t\tURI tokenIntrospectEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token/introspect\").toURI();\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(tokenIntrospectEndpoint , clientAuthentication, new TypelessAccessToken((String) token.getCredentials()));\n-\t\t\n-\t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n-\t\t\n-\t\tif (response instanceof TokenIntrospectionErrorResponse) {\n-\t\t\tlog.error(((TokenIntrospectionErrorResponse) response).getErrorObject().toString());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tTokenIntrospectionSuccessResponse successResponse = (TokenIntrospectionSuccessResponse) response;\n-\n-\t\tString username = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tusername = successResponse.getStringParameter(\"preferred_username\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n+    private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+\n+    private final MasterMetaStorage storage;\n+    private final OIDCResourceOwnerPasswordCredeantialRealmFactory config;\n+\n+    private ClientAuthentication clientAuthentication;\n+    private AuthzClient authzClient;\n+\n+    @Override\n+    protected void onInit() {\n+        super.onInit();\n+        this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+        this.setAuthenticationTokenClass(TOKEN_CLASS);\n+        this.clientAuthentication = new ClientSecretBasic(new ClientID(config.getResource()), new Secret((String) config.getCredentials().get(\"secret\")));\n+\n+        authzClient = AuthzClient.create(config);\n+    }\n+\n+    @Override\n+    @SneakyThrows\n+    protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        token.getCredentials();\n+\n+        URI tokenIntrospectEndpoint = new URL(new URL(config.getAuthServerUrl()), \"realms/EVA/protocol/openid-connect/token/introspect\").toURI();\n+        TokenIntrospectionRequest request = new TokenIntrospectionRequest(tokenIntrospectEndpoint, clientAuthentication, new TypelessAccessToken((String) token.getCredentials()));\n+\n+        TokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n+\n+        if (response instanceof TokenIntrospectionErrorResponse) {\n+            log.error(((TokenIntrospectionErrorResponse) response).getErrorObject().toString());\n+            throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+        } else if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n+            log.error(\"Unknown token response {}.\", response.getClass().getName());\n+            throw new IllegalStateException(\"Unknown token response. See log.\");\n+        }\n+\n+        TokenIntrospectionSuccessResponse successResponse = (TokenIntrospectionSuccessResponse) response;\n+\n+        String username = successResponse.getUsername();\n+        if (StringUtils.isBlank(username)) {\n+            username = successResponse.getStringParameter(\"preferred_username\");\n+        }\n+        if (StringUtils.isBlank(username)) {\n+            throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+        }\n // TODO use keycloak lib\n //\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n-\t\tUser user = storage.getUser(userId);\n-\t\t// try to construct a new User if none could be found in the storage\n-\t\tif (user == null) {\n-\t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n-\t\t\tstorage.addUser(user);\n-\t\t\tlog.info(\n-\t\t\t\t\"Created new user: {}\",\n-\t\t\t\tuser);\n-\t\t}\n-\n-\t\treturn new ConqueryAuthenticationInfo(user.getId(), token, this);\n-\t}\n-\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n-\t\n-\t@Override\n-\tpublic void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t\tjerseyConfig.register(LoginResource.class);\n-\t}\n-\n-\t@Override\n-\tpublic void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t}\n-\n-\t@Override\n-\t@SneakyThrows\n-\tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n-\t\tSecret passwordSecret = new Secret(new String(password));\n-\n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n-\t\t\t\t\n-\t\tURI tokenEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token\").toURI();\n-\n-\t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (response instanceof TokenErrorResponse) {\n-\t\t\tlog.error(((TokenErrorResponse) response).getErrorObject().toString());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof AccessTokenResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tAccessTokenResponse successResponse = (AccessTokenResponse) response;\n-\n-\t\t// Get the access token, the server may also return a refresh token\n-\t\tAccessToken accessToken = successResponse.getTokens().getAccessToken();\n-\t\tRefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n-\t\treturn accessToken.getValue();\n-\t}\n+\n+        UserId userId = new UserId(username);\n+        User user = storage.getUser(userId);\n+        // try to construct a new User if none could be found in the storage\n+        if (user == null) {\n+            String userLabel = successResponse.getStringParameter(\"name\");\n+            user = new User(username, userLabel != null ? userLabel : username);\n+            storage.addUser(user);\n+            log.info(\n+                \"Created new user: {}\",\n+                user);\n+        }\n+\n+        return new ConqueryAuthenticationInfo(user.getId(), token, this);\n+    }\n+\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext request) {\n+        return TokenHandler.extractToken(request);\n+    }\n+\n+    @Override\n+    public void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+        jerseyConfig.register(new TokenResource(this));\n+        jerseyConfig.register(LoginResource.class);\n+    }\n+\n+    @Override\n+    public void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+        jerseyConfig.register(new TokenResource(this));\n+    }\n+\n+    @Override\n+    @SneakyThrows\n+    public String checkCredentialsAndCreateJWT(String username, char[] password) {\n+        Secret passwordSecret = new Secret(new String(password));\n+\n+        AuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+\n+        URI tokenEndpoint = new URL(new URL(config.getAuthServerUrl()), \"realms/EVA/protocol/openid-connect/token\").toURI();\n+\n+        TokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n+\n+\n+        TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+\n+        if (response instanceof TokenErrorResponse) {\n+            log.error(((TokenErrorResponse) response).getErrorObject().toString());\n+            throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+        } else if (!(response instanceof AccessTokenResponse)) {\n+            log.error(\"Unknown token response {}.\", response.getClass().getName());\n+            throw new IllegalStateException(\"Unknown token response. See log.\");\n+        }\n+\n+        AccessTokenResponse successResponse = (AccessTokenResponse) response;\n+\n+        // Get the access token, the server may also return a refresh token\n+        AccessToken accessToken = successResponse.getTokens().getAccessToken();\n+        RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n+        return accessToken.getValue();\n+    }\n \n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "1",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..298002dae2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -76,8 +76,8 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\ttoken.getCredentials();\n \t\t\n-\t\tURI tokenIntrospectEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token/introspect\").toURI();\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(tokenIntrospectEndpoint , clientAuthentication, new TypelessAccessToken((String) token.getCredentials()));\n+\t\tURI tokenIntrospectEndpoint = new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token/introspect\").toURI();\n+\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(tokenIntrospectEndpoint, clientAuthentication, new TypelessAccessToken((String) token.getCredentials()));\n \t\t\n \t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n \t\t\n@@ -99,15 +99,14 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \t\tif(StringUtils.isBlank(username)) {\n \t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n \t\t}\n-// TODO use keycloak lib\n-//\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n+\n+// \n+UserId userId = new UserId(username);\n \t\tUser user = storage.getUser(userId);\n \t\t// try to construct a new User if none could be found in the storage\n \t\tif (user == null) {\n \t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n+\t\t\tuser = new User(username, userLabel != null ? userLabel : username);\n \t\t\tstorage.addUser(user);\n \t\t\tlog.info(\n \t\t\t\t\"Created new user: {}\",\n@@ -138,16 +137,12 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n \t\tSecret passwordSecret = new Secret(new String(password));\n \n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+\t\tAuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n \t\t\t\t\n-\t\tURI tokenEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token\").toURI();\n-\n-\t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (response instanceof TokenErrorResponse) {\n+\t\tURI tokenEndpoint = new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token\").toURI();\n+TokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n+TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+if (response instanceof TokenErrorResponse) {\n \t\t\tlog.error(((TokenErrorResponse) response).getErrorObject().toString());\n \t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n \t\t}\n@@ -164,4 +159,4 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \t\treturn accessToken.getValue();\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "4",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "4",
                    "severity": "warning",
                    "message": "'new' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 102.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..8ac424cce98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -2,9 +2,7 @@ package com.bakdata.conquery.models.auth.oidc.passwordflow;\n \n import java.net.URI;\n import java.net.URL;\n-\n import javax.ws.rs.container.ContainerRequestContext;\n-\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationInfo;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationRealm;\n@@ -47,121 +45,112 @@ import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationToken;\n import org.keycloak.authorization.client.AuthzClient;\n \n-@Slf4j\n-@Getter\n-@Setter\n-@RequiredArgsConstructor\n+@Slf4j @Getter @Setter @RequiredArgsConstructor\n public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthenticationRealm implements AuthApiUnprotectedResourceProvider, AuthAdminUnprotectedResourceProvider, UsernamePasswordChecker {\n \n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\t\n-\tprivate final MasterMetaStorage storage;\n-\tprivate final OIDCResourceOwnerPasswordCredeantialRealmFactory config;\n-\t\n-\tprivate ClientAuthentication clientAuthentication;\n-\tprivate AuthzClient authzClient;\n-\t\n-\t@Override\n-\tprotected void onInit() {\n-\t\tsuper.onInit();\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t\tthis.setAuthenticationTokenClass(TOKEN_CLASS);\n-\t\tthis.clientAuthentication = new ClientSecretBasic(new ClientID(config.getResource()), new Secret((String)config.getCredentials().get(\"secret\")));\n-\t\t\n-\t\tauthzClient = AuthzClient.create(config);\n-\t}\n-\t\n-\t@Override\n-\t@SneakyThrows\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\ttoken.getCredentials();\n-\t\t\n-\t\tURI tokenIntrospectEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token/introspect\").toURI();\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(tokenIntrospectEndpoint , clientAuthentication, new TypelessAccessToken((String) token.getCredentials()));\n-\t\t\n-\t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n-\t\t\n-\t\tif (response instanceof TokenIntrospectionErrorResponse) {\n-\t\t\tlog.error(((TokenIntrospectionErrorResponse) response).getErrorObject().toString());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tTokenIntrospectionSuccessResponse successResponse = (TokenIntrospectionSuccessResponse) response;\n-\n-\t\tString username = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tusername = successResponse.getStringParameter(\"preferred_username\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n+ private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+ private final MasterMetaStorage storage;\n+ private final OIDCResourceOwnerPasswordCredeantialRealmFactory config;\n+ private ClientAuthentication clientAuthentication;\n+ private AuthzClient authzClient;\n+\n+ @Override\n+ protected void onInit() {\n+  super.onInit();\n+  this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+  this.setAuthenticationTokenClass(TOKEN_CLASS);\n+  this.clientAuthentication = new ClientSecretBasic(\n+   new ClientID(config.getResource()),\n+   new Secret((String)config.getCredentials().get(\"secret\"))\n+                              );\n+  authzClient = AuthzClient.create(config);\n+ }\n+\n+ @Override @SneakyThrows\n+ protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+  token.getCredentials();\n+  URI tokenIntrospectEndpoint = new URL(\n+                                 new URL(config.getAuthServerUrl()),\n+                                 \"realms/EVA/protocol/openid-connect/token/introspect\"\n+                                ).toURI();\n+  TokenIntrospectionRequest request = new TokenIntrospectionRequest(\n+                                       tokenIntrospectEndpoint,\n+                                       clientAuthentication,\n+                                       new TypelessAccessToken((String)token.getCredentials())\n+                                      );\n+  TokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n+  if(response instanceof TokenIntrospectionErrorResponse) {\n+   log.error(((TokenIntrospectionErrorResponse)response).getErrorObject().toString());\n+   throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+  }\n+  else if(!(response instanceof TokenIntrospectionSuccessResponse)) {\n+        log.error(\"Unknown token response {}.\", response.getClass().getName());\n+        throw new IllegalStateException(\"Unknown token response. See log.\");\n+       }\n+\n+  TokenIntrospectionSuccessResponse successResponse = (TokenIntrospectionSuccessResponse)response;\n+  String username = successResponse.getUsername();\n+  if (StringUtils.isBlank(username)) {\n+   username = successResponse.getStringParameter(\"preferred_username\");\n+  }\n+  if (StringUtils.isBlank(username)) {\n+   throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+  }\n // TODO use keycloak lib\n-//\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n-\t\tUser user = storage.getUser(userId);\n-\t\t// try to construct a new User if none could be found in the storage\n-\t\tif (user == null) {\n-\t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n-\t\t\tstorage.addUser(user);\n-\t\t\tlog.info(\n-\t\t\t\t\"Created new user: {}\",\n-\t\t\t\tuser);\n-\t\t}\n-\n-\t\treturn new ConqueryAuthenticationInfo(user.getId(), token, this);\n-\t}\n-\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n-\t\n-\t@Override\n-\tpublic void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t\tjerseyConfig.register(LoginResource.class);\n-\t}\n-\n-\t@Override\n-\tpublic void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t}\n-\n-\t@Override\n-\t@SneakyThrows\n-\tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n-\t\tSecret passwordSecret = new Secret(new String(password));\n-\n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n-\t\t\t\t\n-\t\tURI tokenEndpoint =  new URL(new URL(config.getAuthServerUrl()),\"realms/EVA/protocol/openid-connect/token\").toURI();\n-\n-\t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (response instanceof TokenErrorResponse) {\n-\t\t\tlog.error(((TokenErrorResponse) response).getErrorObject().toString());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof AccessTokenResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tAccessTokenResponse successResponse = (AccessTokenResponse) response;\n-\n-\t\t// Get the access token, the server may also return a refresh token\n-\t\tAccessToken accessToken = successResponse.getTokens().getAccessToken();\n-\t\tRefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n-\t\treturn accessToken.getValue();\n-\t}\n-\n-}\n+//  AuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n+\n+  UserId userId = new UserId(username);\n+  User user = storage.getUser(userId);\n+  // try to construct a new User if none could be found in the storage\n+  if (user == null) {\n+   String userLabel = successResponse.getStringParameter(\"name\");\n+   user = new User(username, userLabel != null ? userLabel : username);\n+   storage.addUser(user);\n+   log.info(\"Created new user: {}\", user);\n+  }\n+  return new ConqueryAuthenticationInfo(user.getId(), token, this);\n+ }\n+\n+ @Override\n+ public AuthenticationToken extractToken(ContainerRequestContext request) {\n+  return TokenHandler.extractToken(request);\n+ }\n+\n+ @Override\n+ public void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+  jerseyConfig.register(new TokenResource(this));\n+  jerseyConfig.register(LoginResource.class);\n+ }\n+\n+ @Override\n+ public void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+  jerseyConfig.register(new TokenResource(this));\n+ }\n+\n+ @Override @SneakyThrows\n+ public String checkCredentialsAndCreateJWT(String username, char[] password) {\n+  Secret passwordSecret = new Secret(new String(password));\n+  AuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+  URI tokenEndpoint = new URL(\n+                       new URL(config.getAuthServerUrl()),\n+                       \"realms/EVA/protocol/openid-connect/token\"\n+                      ).toURI();\n+  TokenRequest tokenRequest = new TokenRequest(tokenEndpoint, clientAuthentication, grant, Scope.parse(\"openid\"));\n+  TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+  if(response instanceof TokenErrorResponse) {\n+   log.error(((TokenErrorResponse)response).getErrorObject().toString());\n+   throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+  }\n+  else if(!(response instanceof AccessTokenResponse)) {\n+        log.error(\"Unknown token response {}.\", response.getClass().getName());\n+        throw new IllegalStateException(\"Unknown token response. See log.\");\n+       }\n+\n+  AccessTokenResponse successResponse = (AccessTokenResponse)response;\n+\n+  // Get the access token, the server may also return a refresh token\n+  AccessToken accessToken = successResponse.getTokens().getAccessToken();\n+  RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n+  return accessToken.getValue();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 119
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..3360f23b06a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -101,8 +101,7 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \t\t}\n // TODO use keycloak lib\n //\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n+UserId userId = new UserId(username);\n \t\tUser user = storage.getUser(userId);\n \t\t// try to construct a new User if none could be found in the storage\n \t\tif (user == null) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/69/OIDCResourceOwnerPasswordCredeantialRealm.java\nindex 699509f6884..3360f23b06a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/69/OIDCResourceOwnerPasswordCredeantialRealm.java\n@@ -101,8 +101,7 @@ public class OIDCResourceOwnerPasswordCredeantialRealm extends ConqueryAuthentic\n \t\t}\n // TODO use keycloak lib\n //\t\tAuthorizationResponse authzResponse = authzClient.authorization((String)token.getCredentials()).authorize();\n-\t\t\n-\t\tUserId userId = new UserId(username);\n+UserId userId = new UserId(username);\n \t\tUser user = storage.getUser(userId);\n \t\t// try to construct a new User if none could be found in the storage\n \t\tif (user == null) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
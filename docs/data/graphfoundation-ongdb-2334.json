{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2334",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2334/DataImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2334/DataImporter.java\nindex 9f3a39bada0..3249a1419c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2334/DataImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2334/DataImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.io.IOException;\n@@ -55,7 +56,7 @@ import static org.neo4j.unsafe.impl.batchimport.stats.Stats.longStat;\n /**\n  * Imports data from {@link Input} into a store. Only linkage between property records is done, not between nodes/relationships\n  * or any other types of records.\n- *\n+ * <p>\n  * Main design goal here is low garbage and letting multiple threads import with as little as possible shared between threads.\n  * So importing consists of instantiating an input source reader, optimal number of threads and letting each thread:\n  * <ol>\n@@ -67,227 +68,226 @@ import static org.neo4j.unsafe.impl.batchimport.stats.Stats.longStat;\n  */\n public class DataImporter\n {\n-    public static final String NODE_IMPORT_NAME = \"Nodes\";\n-    public static final String RELATIONSHIP_IMPORT_NAME = \"Relationships\";\n-\n-    public static class Monitor\n-    {\n-        private final LongAdder nodes = new LongAdder();\n-        private final LongAdder relationships = new LongAdder();\n-        private final LongAdder properties = new LongAdder();\n+  public static final String NODE_IMPORT_NAME = \"Nodes\";\n+  public static final String RELATIONSHIP_IMPORT_NAME = \"Relationships\";\n \n-        public void nodesImported( long nodes )\n-        {\n-            this.nodes.add( nodes );\n-        }\n+  public static class Monitor\n+  {\n+    private final LongAdder nodes = new LongAdder();\n+    private final LongAdder relationships = new LongAdder();\n+    private final LongAdder properties = new LongAdder();\n \n-        public void nodesRemoved( long nodes )\n-        {\n-            this.nodes.add( -nodes );\n-        }\n+    public void nodesImported(long nodes)\n+    {\n+      this.nodes.add(nodes);\n+    }\n \n-        public void relationshipsImported( long relationships )\n-        {\n-            this.relationships.add( relationships );\n-        }\n+    public void nodesRemoved(long nodes)\n+    {\n+      this.nodes.add(-nodes);\n+    }\n \n-        public void propertiesImported( long properties )\n-        {\n-            this.properties.add( properties );\n-        }\n+    public void relationshipsImported(long relationships)\n+    {\n+      this.relationships.add(relationships);\n+    }\n \n-        public void propertiesRemoved( long properties )\n-        {\n-            this.properties.add( -properties );\n-        }\n+    public void propertiesImported(long properties)\n+    {\n+      this.properties.add(properties);\n+    }\n \n-        public long nodesImported()\n-        {\n-            return this.nodes.sum();\n-        }\n+    public void propertiesRemoved(long properties)\n+    {\n+      this.properties.add(-properties);\n+    }\n \n-        public long propertiesImported()\n-        {\n-            return this.properties.sum();\n-        }\n+    public long nodesImported()\n+    {\n+      return this.nodes.sum();\n+    }\n \n-        public long relationshipsImported()\n-        {\n-            return this.relationships.sum();\n-        }\n+    public long propertiesImported()\n+    {\n+      return this.properties.sum();\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"Imported:%n  %d nodes%n  %d relationships%n  %d properties\",\n-                    nodes.sum(), relationships.sum(), properties.sum() );\n-        }\n+    public long relationshipsImported()\n+    {\n+      return this.relationships.sum();\n     }\n \n-    private static long importData( String title, int numRunners, InputIterable data, BatchingNeoStores stores,\n-            Supplier<EntityImporter> visitors, ExecutionMonitor executionMonitor, StatsProvider memoryStatsProvider )\n-            throws IOException\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"Imported:%n  %d nodes%n  %d relationships%n  %d properties\",\n+          nodes.sum(), relationships.sum(), properties.sum());\n+    }\n+  }\n+\n+  private static long importData(String title, int numRunners, InputIterable data, BatchingNeoStores stores,\n+                                 Supplier<EntityImporter> visitors, ExecutionMonitor executionMonitor, StatsProvider memoryStatsProvider)\n+      throws IOException\n+  {\n+    LongAdder roughEntityCountProgress = new LongAdder();\n+    ExecutorService pool = Executors.newFixedThreadPool(numRunners,\n+        new NamedThreadFactory(title + \"Importer\"));\n+    IoMonitor writeMonitor = new IoMonitor(stores.getIoTracer());\n+    ControllableStep step = new ControllableStep(title, roughEntityCountProgress, Configuration.DEFAULT,\n+        writeMonitor, memoryStatsProvider);\n+    StageExecution execution = new StageExecution(title, null, Configuration.DEFAULT, Collections.singletonList(step), 0);\n+    long startTime = currentTimeMillis();\n+    try (InputIterator dataIterator = data.iterator())\n     {\n-        LongAdder roughEntityCountProgress = new LongAdder();\n-        ExecutorService pool = Executors.newFixedThreadPool( numRunners,\n-                new NamedThreadFactory( title + \"Importer\" ) );\n-        IoMonitor writeMonitor = new IoMonitor( stores.getIoTracer() );\n-        ControllableStep step = new ControllableStep( title, roughEntityCountProgress, Configuration.DEFAULT,\n-                writeMonitor, memoryStatsProvider );\n-        StageExecution execution = new StageExecution( title, null, Configuration.DEFAULT, Collections.singletonList( step ), 0 );\n-        long startTime = currentTimeMillis();\n-        try ( InputIterator dataIterator = data.iterator() )\n+      for (int i = 0; i < numRunners; i++)\n+      {\n+        pool.submit(new ExhaustingEntityImporterRunnable(\n+            execution, dataIterator, visitors.get(), roughEntityCountProgress));\n+      }\n+      pool.shutdown();\n+\n+      executionMonitor.start(execution);\n+      long nextWait = 0;\n+      try\n+      {\n+        while (!pool.awaitTermination(nextWait, TimeUnit.MILLISECONDS))\n         {\n-            for ( int i = 0; i < numRunners; i++ )\n-            {\n-                pool.submit( new ExhaustingEntityImporterRunnable(\n-                        execution, dataIterator, visitors.get(), roughEntityCountProgress ) );\n-            }\n-            pool.shutdown();\n-\n-            executionMonitor.start( execution );\n-            long nextWait = 0;\n-            try\n-            {\n-                while ( !pool.awaitTermination( nextWait, TimeUnit.MILLISECONDS ) )\n-                {\n-                    executionMonitor.check( execution );\n-                    nextWait = executionMonitor.nextCheckTime() - currentTimeMillis();\n-                }\n-            }\n-            catch ( InterruptedException e )\n-            {\n-                Thread.currentThread().interrupt();\n-                throw new IOException( e );\n-            }\n+          executionMonitor.check(execution);\n+          nextWait = executionMonitor.nextCheckTime() - currentTimeMillis();\n         }\n+      } catch (InterruptedException e)\n+      {\n+        Thread.currentThread().interrupt();\n+        throw new IOException(e);\n+      }\n+    }\n \n-        execution.assertHealthy();\n-        step.markAsCompleted();\n-        writeMonitor.stop();\n-        executionMonitor.end( execution, currentTimeMillis() - startTime );\n-        execution.assertHealthy();\n+    execution.assertHealthy();\n+    step.markAsCompleted();\n+    writeMonitor.stop();\n+    executionMonitor.end(execution, currentTimeMillis() - startTime);\n+    execution.assertHealthy();\n+\n+    return roughEntityCountProgress.sum();\n+  }\n+\n+  public static void importNodes(int numRunners, Input input, BatchingNeoStores stores, IdMapper idMapper,\n+                                 ExecutionMonitor executionMonitor, Monitor monitor)\n+      throws IOException\n+  {\n+    Supplier<EntityImporter> importers = () -> new NodeImporter(stores, idMapper, monitor);\n+    importData(NODE_IMPORT_NAME, numRunners, input.nodes(), stores, importers, executionMonitor,\n+        new MemoryUsageStatsProvider(stores, idMapper));\n+  }\n+\n+  public static DataStatistics importRelationships(int numRunners, Input input,\n+                                                   BatchingNeoStores stores, IdMapper idMapper, Collector badCollector, ExecutionMonitor executionMonitor,\n+                                                   Monitor monitor, boolean validateRelationshipData)\n+      throws IOException\n+  {\n+    DataStatistics typeDistribution = new DataStatistics(monitor.nodes.sum(), monitor.properties.sum(), new RelationshipTypeCount[0]);\n+    Supplier<EntityImporter> importers = () -> new RelationshipImporter(stores, idMapper, typeDistribution, monitor,\n+        badCollector, validateRelationshipData, stores.usesDoubleRelationshipRecordUnits());\n+    importData(RELATIONSHIP_IMPORT_NAME, numRunners, input.relationships(), stores, importers, executionMonitor,\n+        new MemoryUsageStatsProvider(stores, idMapper));\n+    return typeDistribution;\n+  }\n+\n+  /**\n+   * Here simply to be able to fit into the ExecutionMonitor thing\n+   */\n+  private static class ControllableStep implements Step<Void>, StatsProvider\n+  {\n+    private final String name;\n+    private final LongAdder progress;\n+    private final int batchSize;\n+    private final Key[] keys = new Key[] {Keys.done_batches, Keys.avg_processing_time};\n+    private final Collection<StatsProvider> statsProviders = new ArrayList<>();\n+\n+    private volatile boolean completed;\n+\n+    ControllableStep(String name, LongAdder progress, Configuration config, StatsProvider... additionalStatsProviders)\n+    {\n+      this.name = name;\n+      this.progress = progress;\n+      this.batchSize = config.batchSize(); // just to be able to report correctly\n \n-        return roughEntityCountProgress.sum();\n+      statsProviders.add(this);\n+      statsProviders.addAll(Arrays.asList(additionalStatsProviders));\n     }\n \n-    public static void importNodes( int numRunners, Input input, BatchingNeoStores stores, IdMapper idMapper,\n-            ExecutionMonitor executionMonitor, Monitor monitor )\n-                    throws IOException\n+    void markAsCompleted()\n     {\n-        Supplier<EntityImporter> importers = () -> new NodeImporter( stores, idMapper, monitor );\n-        importData( NODE_IMPORT_NAME, numRunners, input.nodes(), stores, importers, executionMonitor,\n-                new MemoryUsageStatsProvider( stores, idMapper ) );\n+      this.completed = true;\n     }\n \n-    public static DataStatistics importRelationships( int numRunners, Input input,\n-            BatchingNeoStores stores, IdMapper idMapper, Collector badCollector, ExecutionMonitor executionMonitor,\n-            Monitor monitor, boolean validateRelationshipData )\n-                    throws IOException\n+    @Override\n+    public void receivePanic(Throwable cause)\n     {\n-        DataStatistics typeDistribution = new DataStatistics( monitor.nodes.sum(), monitor.properties.sum(), new RelationshipTypeCount[0] );\n-        Supplier<EntityImporter> importers = () -> new RelationshipImporter( stores, idMapper, typeDistribution, monitor,\n-                badCollector, validateRelationshipData, stores.usesDoubleRelationshipRecordUnits() );\n-        importData( RELATIONSHIP_IMPORT_NAME, numRunners, input.relationships(), stores, importers, executionMonitor,\n-                new MemoryUsageStatsProvider( stores, idMapper ) );\n-        return typeDistribution;\n     }\n \n-    /**\n-     * Here simply to be able to fit into the ExecutionMonitor thing\n-     */\n-    private static class ControllableStep implements Step<Void>, StatsProvider\n+    @Override\n+    public void start(int orderingGuarantees)\n     {\n-        private final String name;\n-        private final LongAdder progress;\n-        private final int batchSize;\n-        private final Key[] keys = new Key[] {Keys.done_batches, Keys.avg_processing_time};\n-        private final Collection<StatsProvider> statsProviders = new ArrayList<>();\n-\n-        private volatile boolean completed;\n-\n-        ControllableStep( String name, LongAdder progress, Configuration config, StatsProvider... additionalStatsProviders )\n-        {\n-            this.name = name;\n-            this.progress = progress;\n-            this.batchSize = config.batchSize(); // just to be able to report correctly\n-\n-            statsProviders.add( this );\n-            statsProviders.addAll( Arrays.asList( additionalStatsProviders ) );\n-        }\n-\n-        void markAsCompleted()\n-        {\n-            this.completed = true;\n-        }\n-\n-        @Override\n-        public void receivePanic( Throwable cause )\n-        {\n-        }\n-\n-        @Override\n-        public void start( int orderingGuarantees )\n-        {\n-        }\n+    }\n \n-        @Override\n-        public String name()\n-        {\n-            return name;\n-        }\n+    @Override\n+    public String name()\n+    {\n+      return name;\n+    }\n \n-        @Override\n-        public long receive( long ticket, Void batch )\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long receive(long ticket, Void batch)\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public StepStats stats()\n-        {\n-            return new StepStats( name, completed, statsProviders );\n-        }\n+    @Override\n+    public StepStats stats()\n+    {\n+      return new StepStats(name, completed, statsProviders);\n+    }\n \n-        @Override\n-        public void endOfUpstream()\n-        {\n-        }\n+    @Override\n+    public void endOfUpstream()\n+    {\n+    }\n \n-        @Override\n-        public boolean isCompleted()\n-        {\n-            return completed;\n-        }\n+    @Override\n+    public boolean isCompleted()\n+    {\n+      return completed;\n+    }\n \n-        @Override\n-        public void setDownstream( Step<?> downstreamStep )\n-        {\n-        }\n+    @Override\n+    public void setDownstream(Step<?> downstreamStep)\n+    {\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-        }\n+    @Override\n+    public void close()\n+    {\n+    }\n \n-        @Override\n-        public Stat stat( Key key )\n-        {\n-            if ( key == Keys.done_batches )\n-            {\n-                return longStat( progress.sum() / batchSize );\n-            }\n-            if ( key == Keys.avg_processing_time )\n-            {\n-                return longStat( 10 );\n-            }\n-            return null;\n-        }\n+    @Override\n+    public Stat stat(Key key)\n+    {\n+      if (key == Keys.done_batches)\n+      {\n+        return longStat(progress.sum() / batchSize);\n+      }\n+      if (key == Keys.avg_processing_time)\n+      {\n+        return longStat(10);\n+      }\n+      return null;\n+    }\n \n-        @Override\n-        public Key[] keys()\n-        {\n-            return keys;\n-        }\n+    @Override\n+    public Key[] keys()\n+    {\n+      return keys;\n     }\n+  }\n }\n",
            "diff_size": 264
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2334/DataImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2334/DataImporter.java\nindex 9f3a39bada0..f17ea4cbe4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2334/DataImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2334/DataImporter.java\n@@ -68,7 +68,8 @@ import static org.neo4j.unsafe.impl.batchimport.stats.Stats.longStat;\n public class DataImporter\n {\n     public static final String NODE_IMPORT_NAME = \"Nodes\";\n-    public static final String RELATIONSHIP_IMPORT_NAME = \"Relationships\";\n+\n+public static final String RELATIONSHIP_IMPORT_NAME = \"Relationships\";\n \n     public static class Monitor\n     {\n@@ -121,31 +122,26 @@ public class DataImporter\n         {\n             return format( \"Imported:%n  %d nodes%n  %d relationships%n  %d properties\",\n                     nodes.sum(), relationships.sum(), properties.sum() );\n-        }\n+    }\n     }\n \n-    private static long importData( String title, int numRunners, InputIterable data, BatchingNeoStores stores,\n-            Supplier<EntityImporter> visitors, ExecutionMonitor executionMonitor, StatsProvider memoryStatsProvider )\n-            throws IOException\n-    {\n+    private static long importData( String title, int numRunners, InputIterable data, BatchingNeoStores stores, Supplier<EntityImporter> visitors, ExecutionMonitor executionMonitor, StatsProvider memoryStatsProvider ) throws IOException\n+{\n         LongAdder roughEntityCountProgress = new LongAdder();\n-        ExecutorService pool = Executors.newFixedThreadPool( numRunners,\n-                new NamedThreadFactory( title + \"Importer\" ) );\n-        IoMonitor writeMonitor = new IoMonitor( stores.getIoTracer() );\n+        ExecutorService pool = Executors.newFixedThreadPool( numRunners, new NamedThreadFactory( title + \"Importer\" ) );\n+IoMonitor writeMonitor = new IoMonitor( stores.getIoTracer() );\n         ControllableStep step = new ControllableStep( title, roughEntityCountProgress, Configuration.DEFAULT,\n                 writeMonitor, memoryStatsProvider );\n-        StageExecution execution = new StageExecution( title, null, Configuration.DEFAULT, Collections.singletonList( step ), 0 );\n+StageExecution execution = new StageExecution( title, null, Configuration.DEFAULT, Collections.singletonList( step ), 0 );\n         long startTime = currentTimeMillis();\n         try ( InputIterator dataIterator = data.iterator() )\n         {\n             for ( int i = 0; i < numRunners; i++ )\n             {\n-                pool.submit( new ExhaustingEntityImporterRunnable(\n-                        execution, dataIterator, visitors.get(), roughEntityCountProgress ) );\n+                pool.submit( new ExhaustingEntityImporterRunnable( execution, dataIterator, visitors.get(), roughEntityCountProgress ) );\n             }\n             pool.shutdown();\n-\n-            executionMonitor.start( execution );\n+executionMonitor.start( execution );\n             long nextWait = 0;\n             try\n             {\n@@ -167,30 +163,25 @@ public class DataImporter\n         writeMonitor.stop();\n         executionMonitor.end( execution, currentTimeMillis() - startTime );\n         execution.assertHealthy();\n-\n-        return roughEntityCountProgress.sum();\n+return roughEntityCountProgress.sum();\n     }\n \n     public static void importNodes( int numRunners, Input input, BatchingNeoStores stores, IdMapper idMapper,\n-            ExecutionMonitor executionMonitor, Monitor monitor )\n-                    throws IOException\n-    {\n+            ExecutionMonitor executionMonitor, Monitor monitor ) throws IOException\n+{\n         Supplier<EntityImporter> importers = () -> new NodeImporter( stores, idMapper, monitor );\n-        importData( NODE_IMPORT_NAME, numRunners, input.nodes(), stores, importers, executionMonitor,\n-                new MemoryUsageStatsProvider( stores, idMapper ) );\n+        importData( NODE_IMPORT_NAME, numRunners, input.nodes(), stores, importers, executionMonitor, new MemoryUsageStatsProvider( stores, idMapper ) );\n     }\n \n     public static DataStatistics importRelationships( int numRunners, Input input,\n             BatchingNeoStores stores, IdMapper idMapper, Collector badCollector, ExecutionMonitor executionMonitor,\n-            Monitor monitor, boolean validateRelationshipData )\n-                    throws IOException\n-    {\n+            Monitor monitor, boolean validateRelationshipData ) throws IOException\n+{\n         DataStatistics typeDistribution = new DataStatistics( monitor.nodes.sum(), monitor.properties.sum(), new RelationshipTypeCount[0] );\n         Supplier<EntityImporter> importers = () -> new RelationshipImporter( stores, idMapper, typeDistribution, monitor,\n                 badCollector, validateRelationshipData, stores.usesDoubleRelationshipRecordUnits() );\n-        importData( RELATIONSHIP_IMPORT_NAME, numRunners, input.relationships(), stores, importers, executionMonitor,\n-                new MemoryUsageStatsProvider( stores, idMapper ) );\n-        return typeDistribution;\n+importData( RELATIONSHIP_IMPORT_NAME, numRunners, input.relationships(), stores, importers, executionMonitor, new MemoryUsageStatsProvider( stores, idMapper ) );\n+return typeDistribution;\n     }\n \n     /**\n@@ -201,7 +192,7 @@ public class DataImporter\n         private final String name;\n         private final LongAdder progress;\n         private final int batchSize;\n-        private final Key[] keys = new Key[] {Keys.done_batches, Keys.avg_processing_time};\n+        private final Key[] keys = new Key[]{Keys.done_batches, Keys.avg_processing_time};\n         private final Collection<StatsProvider> statsProviders = new ArrayList<>();\n \n         private volatile boolean completed;\n@@ -277,7 +268,8 @@ public class DataImporter\n             {\n                 return longStat( progress.sum() / batchSize );\n             }\n-            if ( key == Keys.avg_processing_time )\n+\n+if ( key == Keys.avg_processing_time )\n             {\n                 return longStat( 10 );\n             }\n@@ -290,4 +282,4 @@ public class DataImporter\n             return keys;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
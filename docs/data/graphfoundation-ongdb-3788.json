{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3788",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3788/FileSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3788/FileSender.java\nindex 362d034e0df..5a7bb59e2f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3788/FileSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3788/FileSender.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import io.netty.buffer.ByteBufAllocator;\n@@ -36,162 +37,155 @@ import static org.neo4j.causalclustering.catchup.storecopy.FileSender.State.PRE_\n \n class FileSender implements ChunkedInput<FileChunk>\n {\n-    private final StoreResource resource;\n-    private final ByteBuffer byteBuffer;\n-\n-    private ReadableByteChannel channel;\n-    private byte[] nextBytes;\n-    private State state = PRE_INIT;\n-\n-    FileSender( StoreResource resource )\n+  private final StoreResource resource;\n+  private final ByteBuffer byteBuffer;\n+\n+  private ReadableByteChannel channel;\n+  private byte[] nextBytes;\n+  private State state = PRE_INIT;\n+\n+  FileSender(StoreResource resource)\n+  {\n+    this.resource = resource;\n+    this.byteBuffer = ByteBuffer.allocateDirect(MAX_SIZE);\n+  }\n+\n+  @Override\n+  public boolean isEndOfInput()\n+  {\n+    return state == FINISHED;\n+  }\n+\n+  @Override\n+  public void close() throws Exception\n+  {\n+    if (channel != null)\n     {\n-        this.resource = resource;\n-        this.byteBuffer = ByteBuffer.allocateDirect( MAX_SIZE );\n+      channel.close();\n+      channel = null;\n     }\n+  }\n \n-    @Override\n-    public boolean isEndOfInput()\n+  @Override\n+  public FileChunk readChunk(ByteBufAllocator allocator) throws Exception\n+  {\n+    if (state == FINISHED)\n     {\n-        return state == FINISHED;\n-    }\n-\n-    @Override\n-    public void close() throws Exception\n+      return null;\n+    } else if (state == PRE_INIT)\n     {\n-        if ( channel != null )\n-        {\n-            channel.close();\n-            channel = null;\n-        }\n+      channel = resource.open();\n+      nextBytes = prefetch();\n+      if (nextBytes == null)\n+      {\n+        state = FINISHED;\n+        return FileChunk.create(new byte[0], true);\n+      } else\n+      {\n+        state = nextBytes.length < MAX_SIZE ? LAST_PENDING : FULL_PENDING;\n+      }\n     }\n \n-    @Override\n-    public FileChunk readChunk( ByteBufAllocator allocator ) throws Exception\n+    if (state == FULL_PENDING)\n     {\n-        if ( state == FINISHED )\n-        {\n-            return null;\n-        }\n-        else if ( state == PRE_INIT )\n-        {\n-            channel = resource.open();\n-            nextBytes = prefetch();\n-            if ( nextBytes == null )\n-            {\n-                state = FINISHED;\n-                return FileChunk.create( new byte[0], true );\n-            }\n-            else\n-            {\n-                state = nextBytes.length < MAX_SIZE ? LAST_PENDING : FULL_PENDING;\n-            }\n-        }\n-\n-        if ( state == FULL_PENDING )\n-        {\n-            byte[] toSend = nextBytes;\n-            nextBytes = prefetch();\n-            if ( nextBytes == null )\n-            {\n-                state = FINISHED;\n-                return FileChunk.create( toSend, true );\n-            }\n-            else if ( nextBytes.length < MAX_SIZE )\n-            {\n-                state = LAST_PENDING;\n-                return FileChunk.create( toSend, false );\n-            }\n-            else\n-            {\n-                return FileChunk.create( toSend, false );\n-            }\n-        }\n-        else if ( state == LAST_PENDING )\n-        {\n-            state = FINISHED;\n-            return FileChunk.create( nextBytes, true );\n-        }\n-        else\n-        {\n-            throw new IllegalStateException();\n-        }\n-    }\n-\n-    @Override\n-    public FileChunk readChunk( ChannelHandlerContext ctx ) throws Exception\n+      byte[] toSend = nextBytes;\n+      nextBytes = prefetch();\n+      if (nextBytes == null)\n+      {\n+        state = FINISHED;\n+        return FileChunk.create(toSend, true);\n+      } else if (nextBytes.length < MAX_SIZE)\n+      {\n+        state = LAST_PENDING;\n+        return FileChunk.create(toSend, false);\n+      } else\n+      {\n+        return FileChunk.create(toSend, false);\n+      }\n+    } else if (state == LAST_PENDING)\n     {\n-        return readChunk( ctx.alloc() );\n-    }\n-\n-    @Override\n-    public long length()\n+      state = FINISHED;\n+      return FileChunk.create(nextBytes, true);\n+    } else\n     {\n-        return -1;\n+      throw new IllegalStateException();\n     }\n-\n-    @Override\n-    public long progress()\n-    {\n-        return 0;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n+  }\n+\n+  @Override\n+  public FileChunk readChunk(ChannelHandlerContext ctx) throws Exception\n+  {\n+    return readChunk(ctx.alloc());\n+  }\n+\n+  @Override\n+  public long length()\n+  {\n+    return -1;\n+  }\n+\n+  @Override\n+  public long progress()\n+  {\n+    return 0;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        FileSender that = (FileSender) o;\n-        return Objects.equals( resource, that.resource );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( resource );\n+      return false;\n     }\n-\n-    private byte[] prefetch() throws IOException\n+    FileSender that = (FileSender) o;\n+    return Objects.equals(resource, that.resource);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(resource);\n+  }\n+\n+  private byte[] prefetch() throws IOException\n+  {\n+    do\n     {\n-        do\n-        {\n-            int bytesRead = channel.read( byteBuffer );\n-            if ( bytesRead == -1 )\n-            {\n-                break;\n-            }\n-        }\n-        while ( byteBuffer.hasRemaining() );\n-\n-        if ( byteBuffer.position() > 0 )\n-        {\n-            return createByteArray( byteBuffer );\n-        }\n-        else\n-        {\n-            return null;\n-        }\n+      int bytesRead = channel.read(byteBuffer);\n+      if (bytesRead == -1)\n+      {\n+        break;\n+      }\n     }\n+    while (byteBuffer.hasRemaining());\n \n-    private byte[] createByteArray( ByteBuffer buffer )\n+    if (byteBuffer.position() > 0)\n     {\n-        buffer.flip();\n-        byte[] bytes = new byte[buffer.limit()];\n-        buffer.get( bytes );\n-        buffer.clear();\n-        return bytes;\n-    }\n-\n-    enum State\n+      return createByteArray(byteBuffer);\n+    } else\n     {\n-        PRE_INIT,\n-        FULL_PENDING,\n-        LAST_PENDING,\n-        FINISHED\n+      return null;\n     }\n+  }\n+\n+  private byte[] createByteArray(ByteBuffer buffer)\n+  {\n+    buffer.flip();\n+    byte[] bytes = new byte[buffer.limit()];\n+    buffer.get(bytes);\n+    buffer.clear();\n+    return bytes;\n+  }\n+\n+  enum State\n+  {\n+    PRE_INIT,\n+    FULL_PENDING,\n+    LAST_PENDING,\n+    FINISHED\n+  }\n }\n",
            "diff_size": 206
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3788/FileSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3788/FileSender.java\nindex 362d034e0df..519819b2039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3788/FileSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3788/FileSender.java\n@@ -142,11 +142,13 @@ class FileSender implements ChunkedInput<FileChunk>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        FileSender that = (FileSender) o;\n+\n+FileSender that = (FileSender) o;\n         return Objects.equals( resource, that.resource );\n     }\n \n@@ -167,8 +169,7 @@ class FileSender implements ChunkedInput<FileChunk>\n             }\n         }\n         while ( byteBuffer.hasRemaining() );\n-\n-        if ( byteBuffer.position() > 0 )\n+if ( byteBuffer.position() > 0 )\n         {\n             return createByteArray( byteBuffer );\n         }\n@@ -189,9 +190,7 @@ class FileSender implements ChunkedInput<FileChunk>\n \n     enum State\n     {\n-        PRE_INIT,\n-        FULL_PENDING,\n-        LAST_PENDING,\n+        PRE_INIT, FULL_PENDING, LAST_PENDING,\n         FINISHED\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
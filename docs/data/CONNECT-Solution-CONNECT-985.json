{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "985",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n\nimport gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\nimport gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.response.EntityDocSubmissionDeferredResponseSecured;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..56529c73b84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..088193cdaee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -40,184 +41,190 @@ import gov.hhs.fha.nhinc.docsubmission.outbound.deferred.response.OutboundDocSub\n  */\n public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferredRespWebServicesMXBean {\n \n-    /** The Constant NHIN_DS_BEAN_NAME. */\n-    private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredResponse\";\n-\n-    /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredResponseUnsecured\";\n-\n-    /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredResponseSecured\";\n-\n-    private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredResponse;\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n-     */\n-    @Override\n-    public boolean isInboundPassthru() {\n-        boolean isPassthru = false;\n-        NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n-     */\n-    @Override\n-    public boolean isOutboundPassthru() {\n-        boolean isPassthru = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n+  /**\n+   * The Constant NHIN_DS_BEAN_NAME.\n+   */\n+  private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredResponse\";\n+\n+  /**\n+   * The Constant ENTITY_UNSECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredResponseUnsecured\";\n+\n+  /**\n+   * The Constant ENTITY_SECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredResponseSecured\";\n+\n+  private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredResponse;\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n+   */\n+  @Override\n+  public boolean isInboundPassthru() {\n+    boolean isPassthru = false;\n+    NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredResponse outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n-     */\n-    @Override\n-    public boolean isInboundStandard() {\n-        boolean isStandard = false;\n-        NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n-     */\n-    @Override\n-    public boolean isOutboundStandard() {\n-        boolean isStandard = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n+   */\n+  @Override\n+  public boolean isOutboundPassthru() {\n+    boolean isPassthru = false;\n+    EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n-     */\n-    @Override\n-    protected String getNhinBeanName() {\n-        return NHIN_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntityUnsecuredBeanName() {\n-        return ENTITY_UNSECURED_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntitySecuredBeanName() {\n-        return ENTITY_SECURED_DS_BEAN_NAME;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n+   */\n+  @Override\n+  public boolean isInboundStandard() {\n+    boolean isStandard = false;\n+    NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredResponse outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionResponse(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionResponse(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n-    }\n-\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n-    }\n-\n-    @Override\n-    public serviceEnum getServiceName() {\n-        return serviceName;\n+    return isStandard;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n+   */\n+  @Override\n+  public boolean isOutboundStandard() {\n+    boolean isStandard = false;\n+    EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n+    return isStandard;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n+   */\n+  @Override\n+  protected String getNhinBeanName() {\n+    return NHIN_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntityUnsecuredBeanName() {\n+    return ENTITY_UNSECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntitySecuredBeanName() {\n+    return ENTITY_SECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n+        getStandardInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionResponse(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n+        getPassthroughInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionResponse(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n+    EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n+  }\n+\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n+    EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n+  }\n+\n+  @Override\n+  public serviceEnum getServiceName() {\n+    return serviceName;\n+  }\n }\n",
            "diff_size": 283
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..57a84b4a95e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -75,9 +76,9 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -108,9 +109,9 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n@@ -153,13 +154,10 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionResponse(inboundDS);\n+        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class, getStandardInboundBeanName());\n+nhinDS.setInboundDocSubmissionResponse(inboundDS);\n     }\n \n     /*\n@@ -168,13 +166,10 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionResponse(inboundDS);\n+        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class, getPassthroughInboundBeanName());\n+nhinDS.setInboundDocSubmissionResponse(inboundDS);\n     }\n \n     /*\n@@ -183,36 +178,29 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n+\n+EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n     }\n \n-\n-    /*\n+/*\n      * (non-Javadoc)\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n+\n+EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n     }\n \n@@ -220,4 +208,4 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n     public serviceEnum getServiceName() {\n         return serviceName;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..e263d1efe92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -38,9 +38,13 @@ import gov.hhs.fha.nhinc.docsubmission.outbound.deferred.response.OutboundDocSub\n  *\n  * @author msw\n  */\n-public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferredRespWebServicesMXBean {\n+\n+\n+public class DocumentSubmissionDefResponse11WebServices extends\n+    AbstractDSDeferredRespWebServicesMXBean {\n \n     /** The Constant NHIN_DS_BEAN_NAME. */\n+\n     private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredResponse\";\n \n     /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n@@ -48,7 +52,6 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n \n     /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n     private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredResponseSecured\";\n-\n     private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredResponse;\n \n     /*\n@@ -56,6 +59,8 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isInboundPassthru() {\n         boolean isPassthru = false;\n@@ -72,11 +77,12 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -89,6 +95,8 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isInboundStandard() {\n         boolean isStandard = false;\n@@ -105,11 +113,12 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredResponseUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredResponse outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n@@ -122,6 +131,8 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n      */\n+\n+\n     @Override\n     protected String getNhinBeanName() {\n         return NHIN_DS_BEAN_NAME;\n@@ -132,6 +143,8 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntityUnsecuredBeanName() {\n         return ENTITY_UNSECURED_DS_BEAN_NAME;\n@@ -142,6 +155,8 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntitySecuredBeanName() {\n         return ENTITY_SECURED_DS_BEAN_NAME;\n@@ -152,13 +167,12 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getStandardInboundBeanName());\n-\n+        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class, getStandardInboundBeanName());\n         nhinDS.setInboundDocSubmissionResponse(inboundDS);\n     }\n \n@@ -167,13 +181,12 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRResponse nhinDS = retrieveBean(NhinXDRResponse.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class,\n-                getPassthroughInboundBeanName());\n-\n+        InboundDocSubmissionDeferredResponse inboundDS = retrieveBean(InboundDocSubmissionDeferredResponse.class, getPassthroughInboundBeanName());\n         nhinDS.setInboundDocSubmissionResponse(inboundDS);\n     }\n \n@@ -182,16 +195,13 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(OutboundDocSubmissionDeferredResponse.class, getStandardOutboundBeanName());\n+        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n     }\n@@ -202,22 +212,21 @@ public class DocumentSubmissionDefResponse11WebServices extends AbstractDSDeferr\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredResponse outboundDS = retrieveBean(OutboundDocSubmissionDeferredResponse.class, getPassthroughOutboundBeanName());\n+        EntityDocSubmissionDeferredResponseUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredResponseUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredResponseSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredResponseSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionResponse(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionResponse(outboundDS);\n     }\n \n+\n     @Override\n     public serviceEnum getServiceName() {\n         return serviceName;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..889d3bbf2d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n-\n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.response.EntityDocSubmissionDeferredResponseSecured;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.response.EntityDocSubmissionDeferredResponseUnsecured;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/985/DocumentSubmissionDefResponse11WebServices.java\nindex 9db1adf324b..56529c73b84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/985/DocumentSubmissionDefResponse11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/985/DocumentSubmissionDefResponse11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
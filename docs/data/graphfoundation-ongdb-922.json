{
    "project_name": "graphfoundation-ongdb",
    "error_id": "922",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/922/HazelcastClientConnector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/922/HazelcastClientConnector.java\nindex 01f646e42db..19d296c7f62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/922/HazelcastClientConnector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/922/HazelcastClientConnector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import com.hazelcast.client.HazelcastClient;\n@@ -31,39 +32,39 @@ import org.neo4j.logging.LogProvider;\n \n public class HazelcastClientConnector implements HazelcastConnector\n {\n-    private final Config config;\n-    private final LogProvider logProvider;\n-    private final HostnameResolver hostnameResolver;\n+  private final Config config;\n+  private final LogProvider logProvider;\n+  private final HostnameResolver hostnameResolver;\n \n-    public HazelcastClientConnector( Config config, LogProvider logProvider, HostnameResolver hostnameResolver )\n-    {\n-        this.config = config;\n-        this.logProvider = logProvider;\n-        this.hostnameResolver = hostnameResolver;\n-    }\n+  public HazelcastClientConnector(Config config, LogProvider logProvider, HostnameResolver hostnameResolver)\n+  {\n+    this.config = config;\n+    this.logProvider = logProvider;\n+    this.hostnameResolver = hostnameResolver;\n+  }\n \n-    @Override\n-    public HazelcastInstance connectToHazelcast()\n-    {\n-        ClientConfig clientConfig = new ClientConfig();\n+  @Override\n+  public HazelcastInstance connectToHazelcast()\n+  {\n+    ClientConfig clientConfig = new ClientConfig();\n \n-        ClientNetworkConfig networkConfig = clientConfig.getNetworkConfig();\n+    ClientNetworkConfig networkConfig = clientConfig.getNetworkConfig();\n \n-        for ( AdvertisedSocketAddress address : config.get( CausalClusteringSettings.initial_discovery_members ) )\n-        {\n-            for ( AdvertisedSocketAddress advertisedSocketAddress : hostnameResolver.resolve( address ) )\n-            {\n-                networkConfig.addAddress( advertisedSocketAddress.toString() );\n-            }\n-        }\n+    for (AdvertisedSocketAddress address : config.get(CausalClusteringSettings.initial_discovery_members))\n+    {\n+      for (AdvertisedSocketAddress advertisedSocketAddress : hostnameResolver.resolve(address))\n+      {\n+        networkConfig.addAddress(advertisedSocketAddress.toString());\n+      }\n+    }\n \n-        additionalConfig( networkConfig, logProvider );\n+    additionalConfig(networkConfig, logProvider);\n \n-        return HazelcastClient.newHazelcastClient( clientConfig );\n-    }\n+    return HazelcastClient.newHazelcastClient(clientConfig);\n+  }\n \n-    protected void additionalConfig( ClientNetworkConfig networkConfig, LogProvider logProvider )\n-    {\n+  protected void additionalConfig(ClientNetworkConfig networkConfig, LogProvider logProvider)\n+  {\n \n-    }\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/922/HazelcastClientConnector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/922/HazelcastClientConnector.java\nindex 01f646e42db..002d8298eca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/922/HazelcastClientConnector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/922/HazelcastClientConnector.java\n@@ -46,10 +46,8 @@ public class HazelcastClientConnector implements HazelcastConnector\n     public HazelcastInstance connectToHazelcast()\n     {\n         ClientConfig clientConfig = new ClientConfig();\n-\n-        ClientNetworkConfig networkConfig = clientConfig.getNetworkConfig();\n-\n-        for ( AdvertisedSocketAddress address : config.get( CausalClusteringSettings.initial_discovery_members ) )\n+ClientNetworkConfig networkConfig = clientConfig.getNetworkConfig();\n+for ( AdvertisedSocketAddress address : config.get( CausalClusteringSettings.initial_discovery_members ) )\n         {\n             for ( AdvertisedSocketAddress advertisedSocketAddress : hostnameResolver.resolve( address ) )\n             {\n@@ -58,12 +56,10 @@ public class HazelcastClientConnector implements HazelcastConnector\n         }\n \n         additionalConfig( networkConfig, logProvider );\n-\n-        return HazelcastClient.newHazelcastClient( clientConfig );\n+return HazelcastClient.newHazelcastClient( clientConfig );\n     }\n \n     protected void additionalConfig( ClientNetworkConfig networkConfig, LogProvider logProvider )\n     {\n-\n-    }\n }\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "410",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " *\n * @hibernate.class table=\"BPEL_EVENT\"\n * @hibernate.query name=\"SELECT_EVENT_IDS_BY_INSTANCES\" query=\"select id from HBpelEvent as e where e.instance in (:instances)\"\n */\npublic class HBpelEvent extends HObject {\n    public static final String SELECT_EVENT_IDS_BY_INSTANCES = \"SELECT_EVENT_IDS_BY_INSTANCES\";",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/410/HBpelEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/410/HBpelEvent.java\nindex 07f3f44c28a..1876548ad0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/410/HBpelEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/410/HBpelEvent.java\n@@ -30,109 +30,107 @@ import java.sql.Timestamp;\n  * @hibernate.query name=\"SELECT_EVENT_IDS_BY_INSTANCES\" query=\"select id from HBpelEvent as e where e.instance in (:instances)\"\n  */\n public class HBpelEvent extends HObject {\n-    public static final String SELECT_EVENT_IDS_BY_INSTANCES = \"SELECT_EVENT_IDS_BY_INSTANCES\";\n-\n-    private Timestamp _tstamp;\n-    private String _type;\n-    private String _detail;\n-\n-    private HProcess _process;\n-    private HProcessInstance _instance;\n-    private byte[] _data;\n-\n-    /** Scope identifier, possibly null. */\n-    private Long _scopeId;\n-\n-    /**\n-     * @hibernate.many-to-one column=\"IID\" foreign-key=\"none\"\n-     */\n-    public HProcessInstance getInstance() {\n-        return _instance;\n-    }\n-\n-    public void setInstance(HProcessInstance instance) {\n-        _instance = instance;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"PID\" foreign-key=\"none\"\n-     */\n-    public HProcess getProcess() {\n-        return _process;\n-    }\n-\n-    public void setProcess(HProcess process) {\n-        _process = process;\n-    }\n-\n-    /**\n-     * @hibernate.property\n-     *        column=\"TSTAMP\"\n-     */\n-    public Timestamp getTstamp() {\n-        return _tstamp;\n-    }\n-\n-    public void setTstamp(Timestamp tstamp) {\n-        _tstamp = tstamp;\n-    }\n-\n-    /**\n-     * @hibernate.property\n-     *        column=\"TYPE\"\n-     */\n-    public String getType() {\n-        return _type;\n-    }\n-\n-    public void setType(String type) {\n-        _type = type;\n-    }\n-\n-    /**\n-     * TODO Check 32000 is enough for details\n-     */\n-    /**\n-     * @hibernate.property\n-     *    column=\"DETAIL\"\n-     *    type=\"text\"\n-     *    length=\"32000\"\n-     */\n-    public String getDetail() {\n-        return _detail;\n-    }\n-\n-    public void setDetail(String detail) {\n-        _detail = detail;\n-    }\n-\n-\n-    /**\n-     * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n-     *\n-     * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n-     */\n-    public byte[] getData() {\n-        return _data;\n-    }\n-\n-    public void setData(byte[] data) {\n-        _data = data;\n-    }\n-\n-    /**\n-     * Get the scope identifier of the scope associated with this event.\n-     * Note, that this is not implemented as a many-to-one relationship\n-     * because when scopes are deleted from the database we do not want\n-     * their events to suffer the same fate.\n-     * @hibernate.property\n-     *        column=\"SID\"\n-     */\n-    public Long getScopeId() {\n-        return _scopeId;\n-    }\n-\n-    public void setScopeId(Long scopeId) {\n-        _scopeId = scopeId;\n-    }\n+  public static final String SELECT_EVENT_IDS_BY_INSTANCES = \"SELECT_EVENT_IDS_BY_INSTANCES\";\n+\n+  private Timestamp _tstamp;\n+  private String _type;\n+  private String _detail;\n+\n+  private HProcess _process;\n+  private HProcessInstance _instance;\n+  private byte[] _data;\n+\n+  /**\n+   * Scope identifier, possibly null.\n+   */\n+  private Long _scopeId;\n+\n+  /**\n+   * @hibernate.many-to-one column=\"IID\" foreign-key=\"none\"\n+   */\n+  public HProcessInstance getInstance() {\n+    return _instance;\n+  }\n+\n+  public void setInstance(HProcessInstance instance) {\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"PID\" foreign-key=\"none\"\n+   */\n+  public HProcess getProcess() {\n+    return _process;\n+  }\n+\n+  public void setProcess(HProcess process) {\n+    _process = process;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"TSTAMP\"\n+   */\n+  public Timestamp getTstamp() {\n+    return _tstamp;\n+  }\n+\n+  public void setTstamp(Timestamp tstamp) {\n+    _tstamp = tstamp;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"TYPE\"\n+   */\n+  public String getType() {\n+    return _type;\n+  }\n+\n+  public void setType(String type) {\n+    _type = type;\n+  }\n+\n+  /**\n+   * TODO Check 32000 is enough for details\n+   */\n+  /**\n+   * @hibernate.property column=\"DETAIL\"\n+   * type=\"text\"\n+   * length=\"32000\"\n+   */\n+  public String getDetail() {\n+    return _detail;\n+  }\n+\n+  public void setDetail(String detail) {\n+    _detail = detail;\n+  }\n+\n+\n+  /**\n+   * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n+   * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n+   */\n+  public byte[] getData() {\n+    return _data;\n+  }\n+\n+  public void setData(byte[] data) {\n+    _data = data;\n+  }\n+\n+  /**\n+   * Get the scope identifier of the scope associated with this event.\n+   * Note, that this is not implemented as a many-to-one relationship\n+   * because when scopes are deleted from the database we do not want\n+   * their events to suffer the same fate.\n+   *\n+   * @hibernate.property column=\"SID\"\n+   */\n+  public Long getScopeId() {\n+    return _scopeId;\n+  }\n+\n+  public void setScopeId(Long scopeId) {\n+    _scopeId = scopeId;\n+  }\n }\n",
            "diff_size": 105
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/410/HBpelEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/410/HBpelEvent.java\nindex 07f3f44c28a..751baffacbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/410/HBpelEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/410/HBpelEvent.java\n@@ -135,4 +135,4 @@ public class HBpelEvent extends HObject {\n     public void setScopeId(Long scopeId) {\n         _scopeId = scopeId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
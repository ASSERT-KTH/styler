{
    "project_name": "graphfoundation-ongdb",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/45/ImmutableRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/45/ImmutableRecord.java\nindex d46b8c1b0bd..5fc93384bfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/45/ImmutableRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/45/ImmutableRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.runtime.spi;\n \n import java.util.Arrays;\n@@ -26,46 +27,46 @@ import org.neo4j.values.AnyValue;\n \n public class ImmutableRecord implements QueryResult.Record\n {\n-    private final AnyValue[] fields;\n+  private final AnyValue[] fields;\n \n-    public ImmutableRecord( AnyValue[] fields )\n-    {\n-        this.fields = fields;\n-    }\n+  public ImmutableRecord(AnyValue[] fields)\n+  {\n+    this.fields = fields;\n+  }\n \n-    @Override\n-    public AnyValue[] fields()\n-    {\n-        return fields;\n-    }\n+  @Override\n+  public AnyValue[] fields()\n+  {\n+    return fields;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || !(o instanceof QueryResult.Record) )\n-        {\n-            return false;\n-        }\n-\n-        QueryResult.Record that = (QueryResult.Record) o;\n-        return Arrays.equals( fields, that.fields() );\n+      return true;\n     }\n-\n-    @Override\n-    public String toString()\n+    if (o == null || !(o instanceof QueryResult.Record))\n     {\n-        return \"ImmutableRecord{\" +\n-                \"fields=\" + Arrays.toString( fields ) +\n-                '}';\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return Arrays.hashCode( fields );\n-    }\n+    QueryResult.Record that = (QueryResult.Record) o;\n+    return Arrays.equals(fields, that.fields());\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"ImmutableRecord{\" +\n+        \"fields=\" + Arrays.toString(fields) +\n+        '}';\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Arrays.hashCode(fields);\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/45/ImmutableRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/45/ImmutableRecord.java\nindex d46b8c1b0bd..c4d6b55e9bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/45/ImmutableRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/45/ImmutableRecord.java\n@@ -46,7 +46,8 @@ public class ImmutableRecord implements QueryResult.Record\n         {\n             return true;\n         }\n-        if ( o == null || !(o instanceof QueryResult.Record) )\n+\n+if ( o == null || !( o instanceof QueryResult.Record) )\n         {\n             return false;\n         }\n@@ -58,9 +59,7 @@ public class ImmutableRecord implements QueryResult.Record\n     @Override\n     public String toString()\n     {\n-        return \"ImmutableRecord{\" +\n-                \"fields=\" + Arrays.toString( fields ) +\n-                '}';\n+        return \"ImmutableRecord{\" + \"fields=\" + Arrays.toString( fields ) + '}';\n     }\n \n     @Override\n@@ -68,4 +67,4 @@ public class ImmutableRecord implements QueryResult.Record\n     {\n         return Arrays.hashCode( fields );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
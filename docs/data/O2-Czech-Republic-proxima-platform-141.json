{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Test\n  public void testDroppingUntilCharacter() {\n    ProxyTransform transform = ElementWiseProxyTransform.droppingUntilCharacter('$', \"myPrefix$\");\n    assertEquals(\"myPrefix$attr.1\", transform.asElementWise().fromProxy(\"attr.1\"));\n    assertEquals(\"attr.1\", transform.asElementWise().toProxy(\"myPrefix$attr.1\"));\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/141/ElementWiseProxyTransformTest.java\nindex 77647ee2a33..4d8cbcefaa2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/141/ElementWiseProxyTransformTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.transform;\n \n import static org.junit.Assert.assertEquals;\n@@ -38,7 +39,8 @@ public class ElementWiseProxyTransformTest {\n \n   @Test\n   public void testDroppingUntilCharacter() {\n-    ProxyTransform transform = ElementWiseProxyTransform.droppingUntilCharacter('$', \"myPrefix$\");\n+    ProxyTransform transform =\n+        ElementWiseProxyTransform.droppingUntilCharacter('$', \"myPrefix$\");\n     assertEquals(\"myPrefix$attr.1\", transform.asElementWise().fromProxy(\"attr.1\"));\n     assertEquals(\"attr.1\", transform.asElementWise().toProxy(\"myPrefix$attr.1\"));\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/141/ElementWiseProxyTransformTest.java\nindex 77647ee2a33..4adfb11459a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/141/ElementWiseProxyTransformTest.java\n@@ -45,11 +45,11 @@ public class ElementWiseProxyTransformTest {\n \n   @Test\n   public void testComposite() {\n-    ElementWiseProxyTransform transform =\n-        ElementWiseProxyTransform.composite(\n+    ElementWiseProxyTransform transform = ElementWiseProxyTransform.composite(\n             ElementWiseProxyTransform.droppingUntilCharacter('$', \"prefix$\"),\n             ElementWiseProxyTransform.renaming(\"proxy\", \"raw\"));\n-    assertEquals(\"proxy.1\", transform.asElementWise().toProxy(\"prefix$raw.1\"));\n+\n+assertEquals(\"proxy.1\", transform.asElementWise().toProxy(\"prefix$raw.1\"));\n     assertEquals(\"prefix$raw.1\", transform.asElementWise().fromProxy(\"proxy.1\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/141/ElementWiseProxyTransformTest.java\nindex 77647ee2a33..21c587618b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/141/ElementWiseProxyTransformTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/141/ElementWiseProxyTransformTest.java\n@@ -16,10 +16,11 @@\n package cz.o2.proxima.transform;\n \n import static org.junit.Assert.assertEquals;\n-\n import org.junit.Test;\n \n /** Test {@link ElementWiseProxyTransform}. */\n+\n+\n public class ElementWiseProxyTransformTest {\n \n   @Test\n@@ -45,11 +46,9 @@ public class ElementWiseProxyTransformTest {\n \n   @Test\n   public void testComposite() {\n-    ElementWiseProxyTransform transform =\n-        ElementWiseProxyTransform.composite(\n-            ElementWiseProxyTransform.droppingUntilCharacter('$', \"prefix$\"),\n-            ElementWiseProxyTransform.renaming(\"proxy\", \"raw\"));\n+    ElementWiseProxyTransform transform = ElementWiseProxyTransform.composite(ElementWiseProxyTransform.droppingUntilCharacter('$', \"prefix$\"),\n+                                                                              ElementWiseProxyTransform.renaming(\"proxy\", \"raw\"));\n     assertEquals(\"proxy.1\", transform.asElementWise().toProxy(\"prefix$raw.1\"));\n     assertEquals(\"prefix$raw.1\", transform.asElementWise().fromProxy(\"proxy.1\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3473",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3473/PropertyKeyTokenRecordFormat.java\nindex de7cdc79dbc..5a88b7b34f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3473/PropertyKeyTokenRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -24,29 +25,29 @@ import org.neo4j.kernel.impl.store.record.PropertyKeyTokenRecord;\n \n public class PropertyKeyTokenRecordFormat extends TokenRecordFormat<PropertyKeyTokenRecord>\n {\n-    public PropertyKeyTokenRecordFormat()\n-    {\n-        super( BASE_RECORD_SIZE + 4/*prop count field*/, StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS );\n-    }\n+  public PropertyKeyTokenRecordFormat()\n+  {\n+    super(BASE_RECORD_SIZE + 4/*prop count field*/, StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS);\n+  }\n \n-    @Override\n-    public PropertyKeyTokenRecord newRecord()\n-    {\n-        return new PropertyKeyTokenRecord( -1 );\n-    }\n+  @Override\n+  public PropertyKeyTokenRecord newRecord()\n+  {\n+    return new PropertyKeyTokenRecord(-1);\n+  }\n \n-    @Override\n-    protected void readRecordData( PageCursor cursor, PropertyKeyTokenRecord record, boolean inUse )\n-    {\n-        int propertyCount = cursor.getInt();\n-        int nameId = cursor.getInt();\n-        record.initialize( inUse, nameId, propertyCount );\n-    }\n+  @Override\n+  protected void readRecordData(PageCursor cursor, PropertyKeyTokenRecord record, boolean inUse)\n+  {\n+    int propertyCount = cursor.getInt();\n+    int nameId = cursor.getInt();\n+    record.initialize(inUse, nameId, propertyCount);\n+  }\n \n-    @Override\n-    protected void writeRecordData( PropertyKeyTokenRecord record, PageCursor cursor )\n-    {\n-        cursor.putInt( record.getPropertyCount() );\n-        cursor.putInt( record.getNameId() );\n-    }\n+  @Override\n+  protected void writeRecordData(PropertyKeyTokenRecord record, PageCursor cursor)\n+  {\n+    cursor.putInt(record.getPropertyCount());\n+    cursor.putInt(record.getNameId());\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3473/PropertyKeyTokenRecordFormat.java\nindex de7cdc79dbc..fb65045657d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3473/PropertyKeyTokenRecordFormat.java\n@@ -49,4 +49,4 @@ public class PropertyKeyTokenRecordFormat extends TokenRecordFormat<PropertyKeyT\n         cursor.putInt( record.getPropertyCount() );\n         cursor.putInt( record.getNameId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3473/PropertyKeyTokenRecordFormat.java\nindex de7cdc79dbc..de6e07a167d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3473/PropertyKeyTokenRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3473/PropertyKeyTokenRecordFormat.java\n@@ -32,7 +32,7 @@ public class PropertyKeyTokenRecordFormat extends TokenRecordFormat<PropertyKeyT\n     @Override\n     public PropertyKeyTokenRecord newRecord()\n     {\n-        return new PropertyKeyTokenRecord( -1 );\n+        return new PropertyKeyTokenRecord( - 1 );\n     }\n \n     @Override\n@@ -49,4 +49,4 @@ public class PropertyKeyTokenRecordFormat extends TokenRecordFormat<PropertyKeyT\n         cursor.putInt( record.getPropertyCount() );\n         cursor.putInt( record.getNameId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
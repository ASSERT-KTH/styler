{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3189",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "121",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "236",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "312",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "354",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "364",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3189/DumpStore.java\nindex 933fb51f06c..9d07100a7e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3189/DumpStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.dump;\n \n import java.io.File;\n@@ -56,329 +57,324 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n \n /**\n  * Tool to dump content of specified store into readable format for further analysis.\n+ *\n  * @param <RECORD> type of record to dump\n- * @param <STORE> type of store to dump\n+ * @param <STORE>  type of store to dump\n  */\n public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordStore<RECORD>>\n {\n-    private static class IdRange\n-    {\n-        private final long startId;\n-        private final long endId;\n-\n-        IdRange( long startId, long endId )\n-        {\n-            this.startId = startId;\n-            this.endId = endId;\n-        }\n-\n-        static IdRange parse( String idString )\n-        {\n-            if ( idString.contains( \"-\" ) )\n-            {\n-                String[] parts = idString.split( \"-\" );\n-                return new IdRange( parseLong( parts[0] ), parseLong( parts[1] ) );\n-            }\n-\n-            long id = parseLong( idString );\n-            return new IdRange( id, id + 1 );\n-        }\n-    }\n+  private static class IdRange\n+  {\n+    private final long startId;\n+    private final long endId;\n \n-    public static void main( String... args ) throws Exception\n+    IdRange(long startId, long endId)\n     {\n-        if ( args == null || args.length == 0 )\n-        {\n-            System.err.println( \"SYNTAX: [file[:id[,id]*]]+\" );\n-            System.err.println( \"where 'id' can be single id or range like: lowId-highId\" );\n-            return;\n-        }\n-\n-        try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = createPageCache( fs ) )\n-        {\n-            final DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory( fs );\n-            Function<File,StoreFactory> createStoreFactory = file -> new StoreFactory( file.getParentFile(),\n-                    Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY );\n-\n-            for ( String arg : args )\n-            {\n-                dumpFile( createStoreFactory, arg );\n-            }\n-        }\n+      this.startId = startId;\n+      this.endId = endId;\n     }\n \n-    private static void dumpFile( Function<File, StoreFactory> createStoreFactory, String fileName ) throws Exception\n+    static IdRange parse(String idString)\n     {\n-        File file = new File( fileName );\n-        IdRange[] ids = null; // null means all possible ids\n-\n-        if ( file.isFile() )\n-        {\n-                /* If file exists, even with : in its path, then accept it straight off. */\n-        }\n-        else if ( !file.isDirectory() && file.getName().indexOf( ':' ) != -1 )\n-        {\n-                /* Now we know that it is not a directory either, and that the last component\n-                   of the path contains a colon, thus it is very likely an attempt to use the\n-                   id-specifying syntax. */\n-\n-            int idStart = fileName.lastIndexOf( ':' );\n-\n-            String[] idStrings = fileName.substring( idStart + 1 ).split( \",\" );\n-            ids = new IdRange[idStrings.length];\n-            for ( int i = 0; i < ids.length; i++ )\n-            {\n-                ids[i] = IdRange.parse( idStrings[i] );\n-            }\n-            file = new File( fileName.substring( 0, idStart ) );\n-\n-            if ( !file.isFile() )\n-            {\n-                throw new IllegalArgumentException( \"No such file: \" + fileName );\n-            }\n-        }\n-        StoreType storeType = StoreType.typeOf( file.getName() ).orElseThrow(\n-                () -> new IllegalArgumentException( \"Not a store file: \" + fileName ) );\n-        try ( NeoStores neoStores = createStoreFactory.apply( file ).openNeoStores( storeType ) )\n-        {\n-            switch ( storeType )\n-            {\n-            case META_DATA:\n-                dumpMetaDataStore( neoStores );\n-                break;\n-            case NODE:\n-                dumpNodeStore( neoStores, ids );\n-                break;\n-            case RELATIONSHIP:\n-                dumpRelationshipStore( neoStores, ids );\n-                break;\n-            case PROPERTY:\n-                dumpPropertyStore( neoStores, ids );\n-                break;\n-            case SCHEMA:\n-                dumpSchemaStore( neoStores, ids );\n-                break;\n-            case PROPERTY_KEY_TOKEN:\n-                dumpPropertyKeys( neoStores, ids );\n-                break;\n-            case LABEL_TOKEN:\n-                dumpLabels( neoStores, ids );\n-                break;\n-            case RELATIONSHIP_TYPE_TOKEN:\n-                dumpRelationshipTypes( neoStores, ids );\n-                break;\n-            case RELATIONSHIP_GROUP:\n-                dumpRelationshipGroups( neoStores, ids );\n-                break;\n-            default:\n-                throw new IllegalArgumentException( \"Unsupported store type: \" + storeType );\n-            }\n-        }\n+      if (idString.contains(\"-\"))\n+      {\n+        String[] parts = idString.split(\"-\");\n+        return new IdRange(parseLong(parts[0]), parseLong(parts[1]));\n+      }\n+\n+      long id = parseLong(idString);\n+      return new IdRange(id, id + 1);\n     }\n+  }\n \n-    private static void dumpMetaDataStore( NeoStores neoStores )\n+  public static void main(String... args) throws Exception\n+  {\n+    if (args == null || args.length == 0)\n     {\n-        neoStores.getMetaDataStore().logRecords( new PrintStreamLogger( System.out ) );\n+      System.err.println(\"SYNTAX: [file[:id[,id]*]]+\");\n+      System.err.println(\"where 'id' can be single id or range like: lowId-highId\");\n+      return;\n     }\n \n-    private static LogProvider logProvider()\n+    try (DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n+         PageCache pageCache = createPageCache(fs))\n     {\n-        return Boolean.getBoolean( \"logger\" ) ? FormattedLogProvider.toOutputStream( System.out ) : NullLogProvider.getInstance();\n+      final DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory(fs);\n+      Function<File, StoreFactory> createStoreFactory = file -> new StoreFactory(file.getParentFile(),\n+          Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY);\n+\n+      for (String arg : args)\n+      {\n+        dumpFile(createStoreFactory, arg);\n+      }\n     }\n+  }\n \n-    private static <R extends AbstractBaseRecord, S extends RecordStore<R>> void dump(\n-            IdRange[] ids, S store ) throws Exception\n-    {\n-        new DumpStore<R,S>( System.out ).dump( store, ids );\n-    }\n+  private static void dumpFile(Function<File, StoreFactory> createStoreFactory, String fileName) throws Exception\n+  {\n+    File file = new File(fileName);\n+    IdRange[] ids = null; // null means all possible ids\n \n-    private static void dumpPropertyKeys( NeoStores neoStores, IdRange[] ids ) throws Exception\n+    if (file.isFile())\n     {\n-        dumpTokens( neoStores.getPropertyKeyTokenStore(), ids );\n-    }\n-\n-    private static void dumpLabels( NeoStores neoStores, IdRange[] ids ) throws Exception\n+      /* If file exists, even with : in its path, then accept it straight off. */\n+    } else if (!file.isDirectory() && file.getName().indexOf(':') != -1)\n     {\n-        dumpTokens( neoStores.getLabelTokenStore(), ids );\n-    }\n+                /* Now we know that it is not a directory either, and that the last component\n+                   of the path contains a colon, thus it is very likely an attempt to use the\n+                   id-specifying syntax. */\n \n-    private static void dumpRelationshipTypes( NeoStores neoStores, IdRange[] ids ) throws Exception\n-    {\n-        dumpTokens( neoStores.getRelationshipTypeTokenStore(), ids );\n-    }\n+      int idStart = fileName.lastIndexOf(':');\n \n-    private static <R extends TokenRecord, T extends Token> void dumpTokens(\n-            final TokenStore<R, T> store, IdRange[] ids ) throws Exception\n-    {\n-        try\n-        {\n-            new DumpStore<R, TokenStore<R, T>>( System.out )\n-            {\n-                @Override\n-                protected Object transform( R record )\n-                {\n-                    if ( record.inUse() )\n-                    {\n-                        store.ensureHeavy( record );\n-                        return record.getId() + \": \\\"\" + store.getStringFor( record ) + \"\\\": \" + record;\n-                    }\n-                    return null;\n-                }\n-            }.dump( store, ids );\n-        }\n-        finally\n-        {\n-            store.close();\n-        }\n-    }\n+      String[] idStrings = fileName.substring(idStart + 1).split(\",\");\n+      ids = new IdRange[idStrings.length];\n+      for (int i = 0; i < ids.length; i++)\n+      {\n+        ids[i] = IdRange.parse(idStrings[i]);\n+      }\n+      file = new File(fileName.substring(0, idStart));\n \n-    private static void dumpRelationshipGroups( NeoStores neoStores, IdRange[] ids ) throws Exception\n-    {\n-        dump( ids, neoStores.getRelationshipGroupStore() );\n+      if (!file.isFile())\n+      {\n+        throw new IllegalArgumentException(\"No such file: \" + fileName);\n+      }\n     }\n-\n-    private static void dumpRelationshipStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n+    StoreType storeType = StoreType.typeOf(file.getName()).orElseThrow(\n+        () -> new IllegalArgumentException(\"Not a store file: \" + fileName));\n+    try (NeoStores neoStores = createStoreFactory.apply(file).openNeoStores(storeType))\n     {\n-        dump( ids, neoStores.getRelationshipStore() );\n+      switch (storeType)\n+      {\n+        case META_DATA:\n+          dumpMetaDataStore(neoStores);\n+          break;\n+        case NODE:\n+          dumpNodeStore(neoStores, ids);\n+          break;\n+        case RELATIONSHIP:\n+          dumpRelationshipStore(neoStores, ids);\n+          break;\n+        case PROPERTY:\n+          dumpPropertyStore(neoStores, ids);\n+          break;\n+        case SCHEMA:\n+          dumpSchemaStore(neoStores, ids);\n+          break;\n+        case PROPERTY_KEY_TOKEN:\n+          dumpPropertyKeys(neoStores, ids);\n+          break;\n+        case LABEL_TOKEN:\n+          dumpLabels(neoStores, ids);\n+          break;\n+        case RELATIONSHIP_TYPE_TOKEN:\n+          dumpRelationshipTypes(neoStores, ids);\n+          break;\n+        case RELATIONSHIP_GROUP:\n+          dumpRelationshipGroups(neoStores, ids);\n+          break;\n+        default:\n+          throw new IllegalArgumentException(\"Unsupported store type: \" + storeType);\n+      }\n     }\n-\n-    private static void dumpPropertyStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n+  }\n+\n+  private static void dumpMetaDataStore(NeoStores neoStores)\n+  {\n+    neoStores.getMetaDataStore().logRecords(new PrintStreamLogger(System.out));\n+  }\n+\n+  private static LogProvider logProvider()\n+  {\n+    return Boolean.getBoolean(\"logger\") ? FormattedLogProvider.toOutputStream(System.out) : NullLogProvider.getInstance();\n+  }\n+\n+  private static <R extends AbstractBaseRecord, S extends RecordStore<R>> void dump(\n+      IdRange[] ids, S store) throws Exception\n+  {\n+    new DumpStore<R, S>(System.out).dump(store, ids);\n+  }\n+\n+  private static void dumpPropertyKeys(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dumpTokens(neoStores.getPropertyKeyTokenStore(), ids);\n+  }\n+\n+  private static void dumpLabels(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dumpTokens(neoStores.getLabelTokenStore(), ids);\n+  }\n+\n+  private static void dumpRelationshipTypes(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dumpTokens(neoStores.getRelationshipTypeTokenStore(), ids);\n+  }\n+\n+  private static <R extends TokenRecord, T extends Token> void dumpTokens(\n+      final TokenStore<R, T> store, IdRange[] ids) throws Exception\n+  {\n+    try\n     {\n-        dump( ids, neoStores.getPropertyStore() );\n-    }\n-\n-    private static void dumpSchemaStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n-    {\n-        try ( SchemaStore store = neoStores.getSchemaStore() )\n+      new DumpStore<R, TokenStore<R, T>>(System.out)\n+      {\n+        @Override\n+        protected Object transform(R record)\n         {\n-            final SchemaStorage storage = new SchemaStorage( store );\n-            new DumpStore<DynamicRecord,SchemaStore>( System.out )\n-            {\n-                @Override\n-                protected Object transform( DynamicRecord record ) throws Exception\n-                {\n-                    return record.inUse() && record.isStartRecord()\n-                           ? storage.loadSingleSchemaRule( record.getId() )\n-                           : null;\n-                }\n-            }.dump( store, ids );\n+          if (record.inUse())\n+          {\n+            store.ensureHeavy(record);\n+            return record.getId() + \": \\\"\" + store.getStringFor(record) + \"\\\": \" + record;\n+          }\n+          return null;\n         }\n+      }.dump(store, ids);\n+    } finally\n+    {\n+      store.close();\n     }\n-\n-    private static void dumpNodeStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n+  }\n+\n+  private static void dumpRelationshipGroups(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dump(ids, neoStores.getRelationshipGroupStore());\n+  }\n+\n+  private static void dumpRelationshipStore(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dump(ids, neoStores.getRelationshipStore());\n+  }\n+\n+  private static void dumpPropertyStore(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    dump(ids, neoStores.getPropertyStore());\n+  }\n+\n+  private static void dumpSchemaStore(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    try (SchemaStore store = neoStores.getSchemaStore())\n     {\n-        new DumpStore<NodeRecord,NodeStore>( System.out )\n+      final SchemaStorage storage = new SchemaStorage(store);\n+      new DumpStore<DynamicRecord, SchemaStore>(System.out)\n+      {\n+        @Override\n+        protected Object transform(DynamicRecord record) throws Exception\n         {\n-            @Override\n-            protected Object transform( NodeRecord record )\n-            {\n-                return record.inUse() ? record : \"\";\n-            }\n-        }.dump( neoStores.getNodeStore(), ids );\n+          return record.inUse() && record.isStartRecord()\n+              ? storage.loadSingleSchemaRule(record.getId())\n+              : null;\n+        }\n+      }.dump(store, ids);\n     }\n+  }\n \n-    private final PrintStream out;\n-    private final HexPrinter printer;\n-\n-    protected DumpStore( PrintStream out )\n+  private static void dumpNodeStore(NeoStores neoStores, IdRange[] ids) throws Exception\n+  {\n+    new DumpStore<NodeRecord, NodeStore>(System.out)\n     {\n-        this.out = out;\n-        this.printer = new HexPrinter( out ).withBytesGroupingFormat( 16, 4, \"  \" ).withLineNumberDigits( 8 );\n-    }\n-\n-    public final void dump( STORE store, IdRange[] ids ) throws Exception\n+      @Override\n+      protected Object transform(NodeRecord record)\n+      {\n+        return record.inUse() ? record : \"\";\n+      }\n+    }.dump(neoStores.getNodeStore(), ids);\n+  }\n+\n+  private final PrintStream out;\n+  private final HexPrinter printer;\n+\n+  protected DumpStore(PrintStream out)\n+  {\n+    this.out = out;\n+    this.printer = new HexPrinter(out).withBytesGroupingFormat(16, 4, \"  \").withLineNumberDigits(8);\n+  }\n+\n+  public final void dump(STORE store, IdRange[] ids) throws Exception\n+  {\n+    int size = store.getRecordSize();\n+    long highId = store.getHighId();\n+    out.println(\"store.getRecordSize() = \" + size);\n+    out.println(\"store.getHighId() = \" + highId);\n+    out.println(\"<dump>\");\n+    long used = 0;\n+\n+    if (ids == null)\n     {\n-        int size = store.getRecordSize();\n-        long highId = store.getHighId();\n-        out.println( \"store.getRecordSize() = \" + size );\n-        out.println( \"store.getHighId() = \" + highId );\n-        out.println( \"<dump>\" );\n-        long used = 0;\n-\n-        if ( ids == null )\n-        {\n-            for ( long id = 0; id < highId; id++ )\n-            {\n-                boolean inUse = dumpRecord( store, size, id );\n-\n-                if ( inUse )\n-                {\n-                    used++;\n-                }\n-            }\n-        }\n-        else\n+      for (long id = 0; id < highId; id++)\n+      {\n+        boolean inUse = dumpRecord(store, size, id);\n+\n+        if (inUse)\n         {\n-            for ( IdRange range : ids )\n-            {\n-                for ( long id = range.startId; id < range.endId; id++ )\n-                {\n-                    dumpRecord( store, size, id );\n-                }\n-            }\n+          used++;\n         }\n-        out.println( \"</dump>\" );\n-\n-        if ( ids == null )\n+      }\n+    } else\n+    {\n+      for (IdRange range : ids)\n+      {\n+        for (long id = range.startId; id < range.endId; id++)\n         {\n-            out.printf( \"used = %s / highId = %s (%.2f%%)%n\", used, highId, used * 100.0 / highId );\n+          dumpRecord(store, size, id);\n         }\n+      }\n     }\n+    out.println(\"</dump>\");\n \n-    private boolean dumpRecord( STORE store, int size, long id ) throws Exception\n+    if (ids == null)\n     {\n-        RECORD record = store.getRecord( id, store.newRecord(), FORCE );\n-        Object transform = transform( record );\n-        if ( transform != null )\n-        {\n-            if ( !\"\".equals( transform ) )\n-            {\n-                out.println( transform );\n-            }\n-        }\n-        else\n-        {\n-            out.print( record );\n-            // TODO Hmm, please don't do this\n-            byte[] rawRecord = ((CommonAbstractStore)store).getRawRecordData( id );\n-            dumpHex( record, ByteBuffer.wrap( rawRecord ), id, size );\n-        }\n-        return record.inUse();\n+      out.printf(\"used = %s / highId = %s (%.2f%%)%n\", used, highId, used * 100.0 / highId);\n     }\n+  }\n \n-    void dumpHex( RECORD record, ByteBuffer buffer, long id, int size )\n+  private boolean dumpRecord(STORE store, int size, long id) throws Exception\n+  {\n+    RECORD record = store.getRecord(id, store.newRecord(), FORCE);\n+    Object transform = transform(record);\n+    if (transform != null)\n     {\n-        printer.withLineNumberOffset( id * size );\n-        if ( record.inUse() )\n-        {\n-            printer.append( buffer );\n-        }\n-        else if ( allZero( buffer ) )\n-        {\n-            out.printf( \": all zeros @ 0x%x - 0x%x\", id * size, (id + 1) * size );\n-        }\n-        else\n-        {\n-            printer.append( buffer );\n-        }\n-        out.printf( \"%n\" );\n+      if (!\"\".equals(transform))\n+      {\n+        out.println(transform);\n+      }\n+    } else\n+    {\n+      out.print(record);\n+      // TODO Hmm, please don't do this\n+      byte[] rawRecord = ((CommonAbstractStore) store).getRawRecordData(id);\n+      dumpHex(record, ByteBuffer.wrap(rawRecord), id, size);\n     }\n+    return record.inUse();\n+  }\n \n-    private boolean allZero( ByteBuffer buffer )\n+  void dumpHex(RECORD record, ByteBuffer buffer, long id, int size)\n+  {\n+    printer.withLineNumberOffset(id * size);\n+    if (record.inUse())\n     {\n-        for ( int i = 0; i < buffer.limit(); i++ )\n-        {\n-            if ( buffer.get( i ) != 0 )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      printer.append(buffer);\n+    } else if (allZero(buffer))\n+    {\n+      out.printf(\": all zeros @ 0x%x - 0x%x\", id * size, (id + 1) * size);\n+    } else\n+    {\n+      printer.append(buffer);\n     }\n+    out.printf(\"%n\");\n+  }\n \n-    protected Object transform( RECORD record ) throws Exception\n+  private boolean allZero(ByteBuffer buffer)\n+  {\n+    for (int i = 0; i < buffer.limit(); i++)\n     {\n-        return record.inUse() ? record : null;\n+      if (buffer.get(i) != 0)\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n+\n+  protected Object transform(RECORD record) throws Exception\n+  {\n+    return record.inUse() ? record : null;\n+  }\n }\n",
            "diff_size": 435
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3189/DumpStore.java\nindex 933fb51f06c..303128efb5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3189/DumpStore.java\n@@ -95,35 +95,31 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         }\n \n         try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = createPageCache( fs ) )\n-        {\n+PageCache pageCache = createPageCache( fs ) )\n+{\n             final DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory( fs );\n-            Function<File,StoreFactory> createStoreFactory = file -> new StoreFactory( file.getParentFile(),\n-                    Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY );\n-\n-            for ( String arg : args )\n+            Function<File,StoreFactory> createStoreFactory = file -> new StoreFactory( file.getParentFile(), Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY );\n+for ( String arg : args )\n             {\n                 dumpFile( createStoreFactory, arg );\n             }\n         }\n     }\n \n-    private static void dumpFile( Function<File, StoreFactory> createStoreFactory, String fileName ) throws Exception\n+    private static void dumpFile( Function<File,StoreFactory> createStoreFactory, String fileName ) throws Exception\n     {\n         File file = new File( fileName );\n         IdRange[] ids = null; // null means all possible ids\n \n         if ( file.isFile() )\n         {\n-                /* If file exists, even with : in its path, then accept it straight off. */\n-        }\n+    /* If file exists, even with : in its path, then accept it straight off. */\n+}\n         else if ( !file.isDirectory() && file.getName().indexOf( ':' ) != -1 )\n         {\n-                /* Now we know that it is not a directory either, and that the last component\n+    /* Now we know that it is not a directory either, and that the last component\n                    of the path contains a colon, thus it is very likely an attempt to use the\n-                   id-specifying syntax. */\n-\n-            int idStart = fileName.lastIndexOf( ':' );\n+                   id-specifying syntax. */ int idStart = fileName.lastIndexOf( ':' );\n \n             String[] idStrings = fileName.substring( idStart + 1 ).split( \",\" );\n             ids = new IdRange[idStrings.length];\n@@ -131,16 +127,16 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n             {\n                 ids[i] = IdRange.parse( idStrings[i] );\n             }\n-            file = new File( fileName.substring( 0, idStart ) );\n \n-            if ( !file.isFile() )\n+file = new File( fileName.substring( 0, idStart ) );\n+if ( !file.isFile() )\n             {\n                 throw new IllegalArgumentException( \"No such file: \" + fileName );\n             }\n         }\n-        StoreType storeType = StoreType.typeOf( file.getName() ).orElseThrow(\n-                () -> new IllegalArgumentException( \"Not a store file: \" + fileName ) );\n-        try ( NeoStores neoStores = createStoreFactory.apply( file ).openNeoStores( storeType ) )\n+        StoreType storeType = StoreType.typeOf( file.getName() ).orElseThrow(() -> new IllegalArgumentException( \"Not a store file: \" + fileName ) );\n+\n+try ( NeoStores neoStores = createStoreFactory.apply( file ).openNeoStores( storeType ) )\n         {\n             switch ( storeType )\n             {\n@@ -187,9 +183,8 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         return Boolean.getBoolean( \"logger\" ) ? FormattedLogProvider.toOutputStream( System.out ) : NullLogProvider.getInstance();\n     }\n \n-    private static <R extends AbstractBaseRecord, S extends RecordStore<R>> void dump(\n-            IdRange[] ids, S store ) throws Exception\n-    {\n+    private static <R extends AbstractBaseRecord, S extends RecordStore<R>> void dump( IdRange[] ids, S store ) throws Exception\n+{\n         new DumpStore<R,S>( System.out ).dump( store, ids );\n     }\n \n@@ -208,9 +203,8 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         dumpTokens( neoStores.getRelationshipTypeTokenStore(), ids );\n     }\n \n-    private static <R extends TokenRecord, T extends Token> void dumpTokens(\n-            final TokenStore<R, T> store, IdRange[] ids ) throws Exception\n-    {\n+    private static <R extends TokenRecord, T extends Token> void dumpTokens( final TokenStore<R,T> store, IdRange[] ids ) throws Exception\n+{\n         try\n         {\n             new DumpStore<R, TokenStore<R, T>>( System.out )\n@@ -258,10 +252,8 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n                 @Override\n                 protected Object transform( DynamicRecord record ) throws Exception\n                 {\n-                    return record.inUse() && record.isStartRecord()\n-                           ? storage.loadSingleSchemaRule( record.getId() )\n-                           : null;\n-                }\n+                    return record.inUse() && record.isStartRecord() ? storage.loadSingleSchemaRule( record.getId() ) : null;\n+    }\n             }.dump( store, ids );\n         }\n     }\n@@ -301,8 +293,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n             for ( long id = 0; id < highId; id++ )\n             {\n                 boolean inUse = dumpRecord( store, size, id );\n-\n-                if ( inUse )\n+if ( inUse )\n                 {\n                     used++;\n                 }\n@@ -319,8 +310,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n             }\n         }\n         out.println( \"</dump>\" );\n-\n-        if ( ids == null )\n+if ( ids == null )\n         {\n             out.printf( \"used = %s / highId = %s (%.2f%%)%n\", used, highId, used * 100.0 / highId );\n         }\n@@ -341,10 +331,11 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         {\n             out.print( record );\n             // TODO Hmm, please don't do this\n-            byte[] rawRecord = ((CommonAbstractStore)store).getRawRecordData( id );\n+            byte[] rawRecord = ((CommonAbstractStore) store).getRawRecordData( id );\n             dumpHex( record, ByteBuffer.wrap( rawRecord ), id, size );\n         }\n-        return record.inUse();\n+\n+return record.inUse();\n     }\n \n     void dumpHex( RECORD record, ByteBuffer buffer, long id, int size )\n@@ -356,7 +347,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         }\n         else if ( allZero( buffer ) )\n         {\n-            out.printf( \": all zeros @ 0x%x - 0x%x\", id * size, (id + 1) * size );\n+            out.printf( \": all zeros @ 0x%x - 0x%x\", id * size, (id + 1 ) * size );\n         }\n         else\n         {\n@@ -381,4 +372,4 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n     {\n         return record.inUse() ? record : null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'try' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "34",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "139",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "188",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "206",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "249",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "27",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "257",
                    "column": "30",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "265",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "305",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "305",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "81",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "317",
                    "column": "88",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "345",
                    "column": "41",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "353",
                    "column": "56",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "353",
                    "column": "73",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3189/DumpStore.java\nindex 933fb51f06c..2859fa2d557 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3189/DumpStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3189/DumpStore.java\n@@ -23,7 +23,6 @@ import java.io.File;\n import java.io.PrintStream;\n import java.nio.ByteBuffer;\n import java.util.function.Function;\n-\n import org.neo4j.io.fs.DefaultFileSystemAbstraction;\n import org.neo4j.io.pagecache.PageCache;\n import org.neo4j.io.pagecache.tracing.cursor.context.EmptyVersionContextSupplier;\n@@ -48,10 +47,10 @@ import org.neo4j.logging.LogProvider;\n import org.neo4j.logging.NullLogProvider;\n import org.neo4j.logging.PrintStreamLogger;\n import org.neo4j.storageengine.api.Token;\n-\n import static java.lang.Long.parseLong;\n \n import static org.neo4j.io.pagecache.impl.muninn.StandalonePageCacheFactory.createPageCache;\n+\n import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n \n /**\n@@ -59,7 +58,8 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n  * @param <RECORD> type of record to dump\n  * @param <STORE> type of store to dump\n  */\n-public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordStore<RECORD>>\n+\n+public class DumpStore < RECORD extends AbstractBaseRecord, STORE extends RecordStore<RECORD>>\n {\n     private static class IdRange\n     {\n@@ -77,7 +77,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n             if ( idString.contains( \"-\" ) )\n             {\n                 String[] parts = idString.split( \"-\" );\n-                return new IdRange( parseLong( parts[0] ), parseLong( parts[1] ) );\n+                return new IdRange( parseLong( parts[ 0] ), parseLong( parts[ 1] ) );\n             }\n \n             long id = parseLong( idString );\n@@ -87,60 +87,56 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n \n     public static void main( String... args ) throws Exception\n     {\n-        if ( args == null || args.length == 0 )\n+        if ( args == null|| args.length == 0 )\n         {\n             System.err.println( \"SYNTAX: [file[:id[,id]*]]+\" );\n             System.err.println( \"where 'id' can be single id or range like: lowId-highId\" );\n             return;\n         }\n \n-        try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = createPageCache( fs ) )\n+        try( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction(); PageCache pageCache = createPageCache( fs ))\n         {\n             final DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory( fs );\n-            Function<File,StoreFactory> createStoreFactory = file -> new StoreFactory( file.getParentFile(),\n-                    Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY );\n-\n-            for ( String arg : args )\n+            Function<File,StoreFactory> createStoreFactory = file -> new StoreFactory( file.getParentFile(), Config.defaults(), idGeneratorFactory, pageCache, fs, logProvider(), EmptyVersionContextSupplier.EMPTY );\n+            for( String arg : args)\n             {\n                 dumpFile( createStoreFactory, arg );\n             }\n         }\n     }\n \n-    private static void dumpFile( Function<File, StoreFactory> createStoreFactory, String fileName ) throws Exception\n+    private static void dumpFile( Function<File,StoreFactory> createStoreFactory, String fileName ) throws Exception\n     {\n         File file = new File( fileName );\n         IdRange[] ids = null; // null means all possible ids\n-\n         if ( file.isFile() )\n         {\n                 /* If file exists, even with : in its path, then accept it straight off. */\n         }\n-        else if ( !file.isDirectory() && file.getName().indexOf( ':' ) != -1 )\n+        else\n+        if ( ! file.isDirectory()&& file.getName().indexOf( ':' ) != - 1 )\n         {\n                 /* Now we know that it is not a directory either, and that the last component\n                    of the path contains a colon, thus it is very likely an attempt to use the\n                    id-specifying syntax. */\n-\n             int idStart = fileName.lastIndexOf( ':' );\n-\n             String[] idStrings = fileName.substring( idStart + 1 ).split( \",\" );\n             ids = new IdRange[idStrings.length];\n             for ( int i = 0; i < ids.length; i++ )\n             {\n-                ids[i] = IdRange.parse( idStrings[i] );\n+                ids[i] = IdRange.parse( idStrings[ i] );\n             }\n-            file = new File( fileName.substring( 0, idStart ) );\n \n-            if ( !file.isFile() )\n+            file = new File( fileName.substring( 0, idStart ) );\n+            if ( ! file.isFile() )\n             {\n                 throw new IllegalArgumentException( \"No such file: \" + fileName );\n             }\n         }\n-        StoreType storeType = StoreType.typeOf( file.getName() ).orElseThrow(\n-                () -> new IllegalArgumentException( \"Not a store file: \" + fileName ) );\n-        try ( NeoStores neoStores = createStoreFactory.apply( file ).openNeoStores( storeType ) )\n+\n+        StoreType storeType = StoreType.typeOf( file.getName() ).orElseThrow( () -> new IllegalArgumentException( \"Not a store file: \" + fileName ) );\n+        try\n+        ( NeoStores neoStores = createStoreFactory.apply( file ).openNeoStores( storeType ))\n         {\n             switch ( storeType )\n             {\n@@ -187,10 +183,9 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         return Boolean.getBoolean( \"logger\" ) ? FormattedLogProvider.toOutputStream( System.out ) : NullLogProvider.getInstance();\n     }\n \n-    private static <R extends AbstractBaseRecord, S extends RecordStore<R>> void dump(\n-            IdRange[] ids, S store ) throws Exception\n+    private static < R extends AbstractBaseRecord, S extends RecordStore<R>> void dump( IdRange[] ids, S store ) throws Exception\n     {\n-        new DumpStore<R,S>( System.out ).dump( store, ids );\n+        new DumpStore <R,S>( System.out ).dump( store, ids );\n     }\n \n     private static void dumpPropertyKeys( NeoStores neoStores, IdRange[] ids ) throws Exception\n@@ -208,24 +203,24 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         dumpTokens( neoStores.getRelationshipTypeTokenStore(), ids );\n     }\n \n-    private static <R extends TokenRecord, T extends Token> void dumpTokens(\n-            final TokenStore<R, T> store, IdRange[] ids ) throws Exception\n+    private static < R extends TokenRecord, T extends Token> void dumpTokens( final TokenStore<R,T> store, IdRange[] ids ) throws Exception\n     {\n         try\n         {\n-            new DumpStore<R, TokenStore<R, T>>( System.out )\n-            {\n-                @Override\n-                protected Object transform( R record )\n-                {\n-                    if ( record.inUse() )\n-                    {\n-                        store.ensureHeavy( record );\n-                        return record.getId() + \": \\\"\" + store.getStringFor( record ) + \"\\\": \" + record;\n-                    }\n-                    return null;\n-                }\n-            }.dump( store, ids );\n+            new DumpStore <R,TokenStore<R,T>>( System.out )\n+{\n+    @Override\n+    protected Object transform( R record )\n+    {\n+        if ( record.inUse() )\n+        {\n+            store.ensureHeavy( record );\n+            return record.getId() + \": \\\"\" + store.getStringFor( record ) + \"\\\": \" + record;\n+        }\n+\n+        return null;\n+    }\n+}.dump( store, ids );\n         }\n         finally\n         {\n@@ -250,32 +245,31 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n \n     private static void dumpSchemaStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n     {\n-        try ( SchemaStore store = neoStores.getSchemaStore() )\n+        try\n+            ( SchemaStore store = neoStores.getSchemaStore())\n         {\n             final SchemaStorage storage = new SchemaStorage( store );\n-            new DumpStore<DynamicRecord,SchemaStore>( System.out )\n-            {\n-                @Override\n-                protected Object transform( DynamicRecord record ) throws Exception\n-                {\n-                    return record.inUse() && record.isStartRecord()\n-                           ? storage.loadSingleSchemaRule( record.getId() )\n-                           : null;\n-                }\n-            }.dump( store, ids );\n+            new DumpStore <DynamicRecord,SchemaStore>( System.out )\n+{\n+    @Override\n+    protected Object transform( DynamicRecord record ) throws Exception\n+    {\n+        return record.inUse()&& record.isStartRecord() ? storage.loadSingleSchemaRule( record.getId() ) : null;\n+    }\n+}.dump( store, ids );\n         }\n     }\n \n     private static void dumpNodeStore( NeoStores neoStores, IdRange[] ids ) throws Exception\n     {\n-        new DumpStore<NodeRecord,NodeStore>( System.out )\n-        {\n-            @Override\n-            protected Object transform( NodeRecord record )\n-            {\n-                return record.inUse() ? record : \"\";\n-            }\n-        }.dump( neoStores.getNodeStore(), ids );\n+        new DumpStore <NodeRecord,NodeStore>( System.out )\n+{\n+    @Override\n+    protected Object transform( NodeRecord record )\n+    {\n+        return record.inUse() ? record : \"\";\n+    }\n+}.dump( neoStores.getNodeStore(), ids );\n     }\n \n     private final PrintStream out;\n@@ -295,13 +289,11 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         out.println( \"store.getHighId() = \" + highId );\n         out.println( \"<dump>\" );\n         long used = 0;\n-\n         if ( ids == null )\n         {\n             for ( long id = 0; id < highId; id++ )\n             {\n                 boolean inUse = dumpRecord( store, size, id );\n-\n                 if ( inUse )\n                 {\n                     used++;\n@@ -310,7 +302,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         }\n         else\n         {\n-            for ( IdRange range : ids )\n+            for( IdRange range : ids)\n             {\n                 for ( long id = range.startId; id < range.endId; id++ )\n                 {\n@@ -318,11 +310,11 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n                 }\n             }\n         }\n-        out.println( \"</dump>\" );\n \n+        out.println( \"</dump>\" );\n         if ( ids == null )\n         {\n-            out.printf( \"used = %s / highId = %s (%.2f%%)%n\", used, highId, used * 100.0 / highId );\n+            out.printf( \"used = %s / highId = %s (%.2f%%)%n\", used, highId, used* 100.0/ highId );\n         }\n     }\n \n@@ -332,7 +324,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         Object transform = transform( record );\n         if ( transform != null )\n         {\n-            if ( !\"\".equals( transform ) )\n+            if ( ! \"\".equals( transform ) )\n             {\n                 out.println( transform );\n             }\n@@ -341,27 +333,30 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n         {\n             out.print( record );\n             // TODO Hmm, please don't do this\n-            byte[] rawRecord = ((CommonAbstractStore)store).getRawRecordData( id );\n+            byte[] rawRecord = ((CommonAbstractStore) store).getRawRecordData( id );\n             dumpHex( record, ByteBuffer.wrap( rawRecord ), id, size );\n         }\n+\n         return record.inUse();\n     }\n \n     void dumpHex( RECORD record, ByteBuffer buffer, long id, int size )\n     {\n-        printer.withLineNumberOffset( id * size );\n+        printer.withLineNumberOffset( id* size );\n         if ( record.inUse() )\n         {\n             printer.append( buffer );\n         }\n-        else if ( allZero( buffer ) )\n-        {\n-            out.printf( \": all zeros @ 0x%x - 0x%x\", id * size, (id + 1) * size );\n-        }\n         else\n+        if ( allZero( buffer ) )\n         {\n-            printer.append( buffer );\n+            out.printf( \": all zeros @ 0x%x - 0x%x\", id* size, ( id + 1)* size );\n         }\n+        else\n+            {\n+                printer.append( buffer );\n+            }\n+\n         out.printf( \"%n\" );\n     }\n \n@@ -374,6 +369,7 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n                 return false;\n             }\n         }\n+\n         return true;\n     }\n \n@@ -381,4 +377,4 @@ public class DumpStore<RECORD extends AbstractBaseRecord, STORE extends RecordSt\n     {\n         return record.inUse() ? record : null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 89
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
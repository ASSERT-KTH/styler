{
    "project_name": "Activiti-Activiti",
    "error_id": "396",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..1c818f3d971 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/396/ExecutionQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..a3ca5e5ac12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/396/ExecutionQueryProperty.java\n@@ -25,33 +25,31 @@ import org.activiti.engine.runtime.ExecutionQuery;\n \n /**\n  * Contains the possible properties that can be used in a {@link ExecutionQuery} .\n- *\n-\n  */\n public class ExecutionQueryProperty implements QueryProperty {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  private static final Map<String, ExecutionQueryProperty> properties = new HashMap<String, ExecutionQueryProperty>();\n+    private static final Map<String, ExecutionQueryProperty> properties = new HashMap<String, ExecutionQueryProperty>();\n \n-  public static final ExecutionQueryProperty PROCESS_INSTANCE_ID = new ExecutionQueryProperty(\"RES.ID_\");\n-  public static final ExecutionQueryProperty PROCESS_DEFINITION_KEY = new ExecutionQueryProperty(\"ProcessDefinitionKey\");\n-  public static final ExecutionQueryProperty PROCESS_DEFINITION_ID = new ExecutionQueryProperty(\"ProcessDefinitionId\");\n-  public static final ExecutionQueryProperty TENANT_ID = new ExecutionQueryProperty(\"RES.TENANT_ID_\");\n+    public static final ExecutionQueryProperty PROCESS_INSTANCE_ID = new ExecutionQueryProperty(\"RES.ID_\");\n+    public static final ExecutionQueryProperty PROCESS_DEFINITION_KEY = new ExecutionQueryProperty(\"ProcessDefinitionKey\");\n+    public static final ExecutionQueryProperty PROCESS_DEFINITION_ID = new ExecutionQueryProperty(\"ProcessDefinitionId\");\n+    public static final ExecutionQueryProperty TENANT_ID = new ExecutionQueryProperty(\"RES.TENANT_ID_\");\n \n-  private String name;\n+    private String name;\n \n-  public ExecutionQueryProperty(String name) {\n-    this.name = name;\n-    properties.put(name, this);\n-  }\n+    public ExecutionQueryProperty(String name) {\n+        this.name = name;\n+        properties.put(name, this);\n+    }\n \n-  public String getName() {\n-    return name;\n-  }\n+    public String getName() {\n+        return name;\n+    }\n \n-  public static ExecutionQueryProperty findByName(String propertyName) {\n-    return properties.get(propertyName);\n-  }\n+    public static ExecutionQueryProperty findByName(String propertyName) {\n+        return properties.get(propertyName);\n+    }\n \n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..479c7072e71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/396/ExecutionQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n@@ -54,4 +53,4 @@ public class ExecutionQueryProperty implements QueryProperty {\n     return properties.get(propertyName);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..34a464348e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/396/ExecutionQueryProperty.java\n@@ -19,7 +19,6 @@ package org.activiti.engine.impl;\n \n import java.util.HashMap;\n import java.util.Map;\n-\n import org.activiti.engine.query.QueryProperty;\n import org.activiti.engine.runtime.ExecutionQuery;\n \n@@ -28,12 +27,13 @@ import org.activiti.engine.runtime.ExecutionQuery;\n  *\n \n  */\n+\n+\n public class ExecutionQueryProperty implements QueryProperty {\n \n   private static final long serialVersionUID = 1L;\n \n   private static final Map<String, ExecutionQueryProperty> properties = new HashMap<String, ExecutionQueryProperty>();\n-\n   public static final ExecutionQueryProperty PROCESS_INSTANCE_ID = new ExecutionQueryProperty(\"RES.ID_\");\n   public static final ExecutionQueryProperty PROCESS_DEFINITION_KEY = new ExecutionQueryProperty(\"ProcessDefinitionKey\");\n   public static final ExecutionQueryProperty PROCESS_DEFINITION_ID = new ExecutionQueryProperty(\"ProcessDefinitionId\");\n@@ -54,4 +54,4 @@ public class ExecutionQueryProperty implements QueryProperty {\n     return properties.get(propertyName);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..1c818f3d971 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/396/ExecutionQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/396/ExecutionQueryProperty.java\nindex 1061cec4cfe..1c818f3d971 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/396/ExecutionQueryProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/396/ExecutionQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "958",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/958/PrometheusOutput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/958/PrometheusOutput.java\nindex a3fd1fcdb2e..f67d96f04b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/958/PrometheusOutput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/958/PrometheusOutput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.output;\n \n import com.codahale.metrics.Counter;\n@@ -42,70 +43,70 @@ import org.neo4j.logging.Log;\n  */\n public class PrometheusOutput implements Lifecycle, EventReporter\n {\n-    private final HostnamePort hostnamePort;\n-    private final MetricRegistry registry;\n-    private final Log logger;\n+  private final HostnamePort hostnamePort;\n+  private final MetricRegistry registry;\n+  private final Log logger;\n \n-    private HTTPServer server;\n-    private Map<String,Object> registeredEvents = new ConcurrentHashMap<>();\n-    private final MetricRegistry eventRegistry;\n+  private HTTPServer server;\n+  private Map<String, Object> registeredEvents = new ConcurrentHashMap<>();\n+  private final MetricRegistry eventRegistry;\n \n-    public PrometheusOutput( HostnamePort hostnamePort, MetricRegistry registry, Log logger )\n-    {\n-        this.hostnamePort = hostnamePort;\n-        this.registry = registry;\n-        this.logger = logger;\n-        eventRegistry = new MetricRegistry();\n-    }\n+  public PrometheusOutput(HostnamePort hostnamePort, MetricRegistry registry, Log logger)\n+  {\n+    this.hostnamePort = hostnamePort;\n+    this.registry = registry;\n+    this.logger = logger;\n+    eventRegistry = new MetricRegistry();\n+  }\n \n-    @Override\n-    public void init()\n-    {\n-        // Setup prometheus collector\n-        CollectorRegistry.defaultRegistry.register( new DropwizardExports( registry ) );\n+  @Override\n+  public void init()\n+  {\n+    // Setup prometheus collector\n+    CollectorRegistry.defaultRegistry.register(new DropwizardExports(registry));\n \n-        // We have to have a separate registry to not pollute the default one\n-        CollectorRegistry.defaultRegistry.register( new DropwizardExports( eventRegistry ) );\n-    }\n+    // We have to have a separate registry to not pollute the default one\n+    CollectorRegistry.defaultRegistry.register(new DropwizardExports(eventRegistry));\n+  }\n \n-    @Override\n-    public void start() throws Throwable\n+  @Override\n+  public void start() throws Throwable\n+  {\n+    if (server == null)\n     {\n-        if ( server == null )\n-        {\n-            server = new HTTPServer( hostnamePort.getHost(), hostnamePort.getPort(), true );\n-            logger.info( \"Started publishing Prometheus metrics at http://\" + hostnamePort + \"/metrics\" );\n-        }\n+      server = new HTTPServer(hostnamePort.getHost(), hostnamePort.getPort(), true);\n+      logger.info(\"Started publishing Prometheus metrics at http://\" + hostnamePort + \"/metrics\");\n     }\n+  }\n \n-    @Override\n-    public void stop()\n+  @Override\n+  public void stop()\n+  {\n+    if (server != null)\n     {\n-        if ( server != null )\n-        {\n-            server.stop();\n-            server = null;\n-            logger.info( \"Stopped Prometheus endpoint at http://\" + hostnamePort + \"/metrics\" );\n-        }\n+      server.stop();\n+      server = null;\n+      logger.info(\"Stopped Prometheus endpoint at http://\" + hostnamePort + \"/metrics\");\n     }\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-        this.stop();\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+    this.stop();\n+  }\n \n-    @Override\n-    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n+  @Override\n+  public void report(SortedMap<String, Gauge> gauges, SortedMap<String, Counter> counters,\n+                     SortedMap<String, Histogram> histograms, SortedMap<String, Meter> meters, SortedMap<String, Timer> timers)\n+  {\n+    // Prometheus does not support events, just output the latest event that occurred\n+    String metricKey = gauges.firstKey();\n+    if (!registeredEvents.containsKey(metricKey))\n     {\n-        // Prometheus does not support events, just output the latest event that occurred\n-        String metricKey = gauges.firstKey();\n-        if ( !registeredEvents.containsKey( metricKey ) )\n-        {\n-            eventRegistry.register( metricKey, (Gauge) () -> registeredEvents.get( metricKey ) );\n-        }\n-\n-        registeredEvents.put( metricKey, gauges.get( metricKey ).getValue() );\n+      eventRegistry.register(metricKey, (Gauge) () -> registeredEvents.get(metricKey));\n     }\n+\n+    registeredEvents.put(metricKey, gauges.get(metricKey).getValue());\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/958/PrometheusOutput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/958/PrometheusOutput.java\nindex a3fd1fcdb2e..06e910b2241 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/958/PrometheusOutput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/958/PrometheusOutput.java\n@@ -96,8 +96,7 @@ public class PrometheusOutput implements Lifecycle, EventReporter\n     }\n \n     @Override\n-    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n+    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters, SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n     {\n         // Prometheus does not support events, just output the latest event that occurred\n         String metricKey = gauges.firstKey();\n@@ -108,4 +107,4 @@ public class PrometheusOutput implements Lifecycle, EventReporter\n \n         registeredEvents.put( metricKey, gauges.get( metricKey ).getValue() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
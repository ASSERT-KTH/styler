{
    "project_name": "apache-metron",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 113).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * Format will have the format &lt;output-path&gt;/pcap-data-&lt;filename-prefix&gt;+&lt;partition-num&gt;.pcap\n   * The filename prefix is pluggable, but in most cases it will be provided via the PcapConfig\n   * as a formatted timestamp + uuid. A final sample format will look as follows:\n   * /base/output/path/pcap-data-201807181911-09855b4ae3204dee8b63760d65198da3+0001.pcap",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/39/PcapCliFinalizer.java\nindex c912e58ff16..45e83bd5edf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/39/PcapCliFinalizer.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -41,7 +41,7 @@ public class PcapCliFinalizer extends PcapFinalizer {\n \n   @Override\n   protected void write(PcapResultsWriter resultsWriter, Configuration hadoopConfig,\n-      List<byte[]> data, Path outputPath) throws IOException {\n+                       List<byte[]> data, Path outputPath) throws IOException {\n     resultsWriter.writeLocal(data, outputPath.toString());\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/39/PcapCliFinalizer.java\nindex c912e58ff16..b317666b11b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/39/PcapCliFinalizer.java\n@@ -40,9 +40,8 @@ public class PcapCliFinalizer extends PcapFinalizer {\n   private static final String PCAP_CLI_FILENAME_FORMAT = \"pcap-data-%s+%04d.pcap\";\n \n   @Override\n-  protected void write(PcapResultsWriter resultsWriter, Configuration hadoopConfig,\n-      List<byte[]> data, Path outputPath) throws IOException {\n-    resultsWriter.writeLocal(data, outputPath.toString());\n+  protected void write(PcapResultsWriter resultsWriter, Configuration hadoopConfig, List<byte[]> data, Path outputPath) throws IOException {\n+  resultsWriter.writeLocal(data, outputPath.toString());\n   }\n \n   @Override\n@@ -51,4 +50,4 @@ public class PcapCliFinalizer extends PcapFinalizer {\n     return new Path(String.format(PCAP_CLI_FILENAME_FORMAT, prefix, partition));\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/39/PcapCliFinalizer.java\nindex c912e58ff16..d4b91f60bea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/39/PcapCliFinalizer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/39/PcapCliFinalizer.java\n@@ -29,6 +29,7 @@ import org.apache.metron.pcap.writer.PcapResultsWriter;\n /**\n  * Write to local FS.\n  */\n+\n public class PcapCliFinalizer extends PcapFinalizer {\n \n   /**\n@@ -37,11 +38,10 @@ public class PcapCliFinalizer extends PcapFinalizer {\n    * as a formatted timestamp + uuid. A final sample format will look as follows:\n    * /base/output/path/pcap-data-201807181911-09855b4ae3204dee8b63760d65198da3+0001.pcap\n    */\n-  private static final String PCAP_CLI_FILENAME_FORMAT = \"pcap-data-%s+%04d.pcap\";\n \n+  private static final String PCAP_CLI_FILENAME_FORMAT = \"pcap-data-%s+%04d.pcap\";\n   @Override\n-  protected void write(PcapResultsWriter resultsWriter, Configuration hadoopConfig,\n-      List<byte[]> data, Path outputPath) throws IOException {\n+  protected void write(PcapResultsWriter resultsWriter, Configuration hadoopConfig, List<byte[]> data, Path outputPath) throws IOException {\n     resultsWriter.writeLocal(data, outputPath.toString());\n   }\n \n@@ -50,5 +50,4 @@ public class PcapCliFinalizer extends PcapFinalizer {\n     String prefix = PcapOptions.FINAL_FILENAME_PREFIX.get(config, String.class);\n     return new Path(String.format(PCAP_CLI_FILENAME_FORMAT, prefix, partition));\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
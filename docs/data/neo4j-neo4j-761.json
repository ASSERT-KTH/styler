{
    "project_name": "neo4j-neo4j",
    "error_id": "761",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/761/BufferedIdController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/761/BufferedIdController.java\nindex 010c99ccdc9..84b22c8f7a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/761/BufferedIdController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/761/BufferedIdController.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.id;\n \n import java.util.function.Supplier;\n@@ -33,6 +34,7 @@ import static java.util.concurrent.TimeUnit.SECONDS;\n /**\n  * Storage id controller that provide buffering possibilities to be able so safely free and reuse ids.\n  * Allows perform clear and maintenance operations over currently buffered set of ids.\n+ *\n  * @see BufferingIdGeneratorFactory\n  */\n public class BufferedIdController extends LifecycleAdapter implements IdController\n@@ -44,8 +46,8 @@ public class BufferedIdController extends LifecycleAdapter implements IdControll\n     private final String databaseName;\n     private JobHandle<?> jobHandle;\n \n-    public BufferedIdController( BufferingIdGeneratorFactory bufferingIdGeneratorFactory, JobScheduler scheduler, PageCacheTracer pageCacheTracer,\n-            String databaseName )\n+    public BufferedIdController(BufferingIdGeneratorFactory bufferingIdGeneratorFactory, JobScheduler scheduler, PageCacheTracer pageCacheTracer,\n+                                String databaseName)\n     {\n         this.bufferingIdGeneratorFactory = bufferingIdGeneratorFactory;\n         this.scheduler = scheduler;\n@@ -56,14 +58,14 @@ public class BufferedIdController extends LifecycleAdapter implements IdControll\n     @Override\n     public void start()\n     {\n-        var monitoringParams = JobMonitoringParams.systemJob( databaseName, \"ID generator maintenance\" );\n-        jobHandle = scheduler.scheduleRecurring( Group.STORAGE_MAINTENANCE, monitoringParams, () -> maintenance( false ), 1, SECONDS );\n+        var monitoringParams = JobMonitoringParams.systemJob(databaseName, \"ID generator maintenance\");\n+        jobHandle = scheduler.scheduleRecurring(Group.STORAGE_MAINTENANCE, monitoringParams, () -> maintenance(false), 1, SECONDS);\n     }\n \n     @Override\n     public void stop()\n     {\n-        if ( jobHandle != null )\n+        if (jobHandle != null)\n         {\n             jobHandle.cancel();\n             jobHandle = null;\n@@ -77,17 +79,17 @@ public class BufferedIdController extends LifecycleAdapter implements IdControll\n     }\n \n     @Override\n-    public void maintenance( boolean awaitOngoing )\n+    public void maintenance(boolean awaitOngoing)\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( BUFFERED_ID_CONTROLLER ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(BUFFERED_ID_CONTROLLER))\n         {\n-            bufferingIdGeneratorFactory.maintenance( awaitOngoing, cursorTracer );\n+            bufferingIdGeneratorFactory.maintenance(awaitOngoing, cursorTracer);\n         }\n     }\n \n     @Override\n-    public void initialize( Supplier<ConditionSnapshot> conditionSnapshotSupplier )\n+    public void initialize(Supplier<ConditionSnapshot> conditionSnapshotSupplier)\n     {\n-        bufferingIdGeneratorFactory.initialize( conditionSnapshotSupplier );\n+        bufferingIdGeneratorFactory.initialize(conditionSnapshotSupplier);\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
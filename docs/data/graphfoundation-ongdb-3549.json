{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3549",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3549/Capability.java\nindex bac50912dfb..0449443f81a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3549/Capability.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format;\n \n import static org.neo4j.helpers.ArrayUtil.contains;\n@@ -27,73 +28,73 @@ import static org.neo4j.helpers.ArrayUtil.contains;\n  */\n public enum Capability\n {\n-    /**\n-     * Store has schema support\n-     */\n-    SCHEMA( CapabilityType.STORE ),\n+  /**\n+   * Store has schema support\n+   */\n+  SCHEMA(CapabilityType.STORE),\n \n-    /**\n-     * Store has dense node support\n-     */\n-    DENSE_NODES( CapabilityType.FORMAT, CapabilityType.STORE ),\n+  /**\n+   * Store has dense node support\n+   */\n+  DENSE_NODES(CapabilityType.FORMAT, CapabilityType.STORE),\n \n-    /**\n-     * 3 bytes relationship type support\n-     */\n-    RELATIONSHIP_TYPE_3BYTES( CapabilityType.FORMAT, CapabilityType.STORE ),\n+  /**\n+   * 3 bytes relationship type support\n+   */\n+  RELATIONSHIP_TYPE_3BYTES(CapabilityType.FORMAT, CapabilityType.STORE),\n \n-    /**\n-     * Lucene version 3.x\n-     */\n-    LUCENE_3( CapabilityType.INDEX ),\n+  /**\n+   * Lucene version 3.x\n+   */\n+  LUCENE_3(CapabilityType.INDEX),\n \n-    /**\n-     * Lucene version 5.x\n-     */\n-    LUCENE_5( CapabilityType.INDEX ),\n+  /**\n+   * Lucene version 5.x\n+   */\n+  LUCENE_5(CapabilityType.INDEX),\n \n-    /**\n-     * Point Geometries are an addition to the format, not a change\n-     */\n-    POINT_PROPERTIES( true, CapabilityType.STORE ),\n+  /**\n+   * Point Geometries are an addition to the format, not a change\n+   */\n+  POINT_PROPERTIES(true, CapabilityType.STORE),\n \n-    /**\n-     * Temporal types are an addition to the format, not a change\n-     */\n-    TEMPORAL_PROPERTIES( true, CapabilityType.STORE ),\n+  /**\n+   * Temporal types are an addition to the format, not a change\n+   */\n+  TEMPORAL_PROPERTIES(true, CapabilityType.STORE),\n \n-    /**\n-     * Records can spill over into secondary units (another record with a header saying it's a secondary unit to another record).\n-     */\n-    SECONDARY_RECORD_UNITS( CapabilityType.FORMAT );\n+  /**\n+   * Records can spill over into secondary units (another record with a header saying it's a secondary unit to another record).\n+   */\n+  SECONDARY_RECORD_UNITS(CapabilityType.FORMAT);\n \n-    private final CapabilityType[] types;\n-    private boolean additive;\n+  private final CapabilityType[] types;\n+  private boolean additive;\n \n-    Capability( CapabilityType... types )\n-    {\n-        this( false, types );\n-    }\n+  Capability(CapabilityType... types)\n+  {\n+    this(false, types);\n+  }\n \n-    Capability( boolean additive, CapabilityType... types )\n-    {\n-        this.additive = additive;\n-        this.types = types;\n-    }\n+  Capability(boolean additive, CapabilityType... types)\n+  {\n+    this.additive = additive;\n+    this.types = types;\n+  }\n \n-    public boolean isType( CapabilityType type )\n-    {\n-        return contains( types, type );\n-    }\n+  public boolean isType(CapabilityType type)\n+  {\n+    return contains(types, type);\n+  }\n \n-    /**\n-     * Whether or not this capability is additive. A capability is additive if data regarding this capability will not change\n-     * any existing store and therefore not require migration of existing data.\n-     *\n-     * @return whether or not this capability is additive.\n-     */\n-    public boolean isAdditive()\n-    {\n-        return additive;\n-    }\n+  /**\n+   * Whether or not this capability is additive. A capability is additive if data regarding this capability will not change\n+   * any existing store and therefore not require migration of existing data.\n+   *\n+   * @return whether or not this capability is additive.\n+   */\n+  public boolean isAdditive()\n+  {\n+    return additive;\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3549/Capability.java\nindex bac50912dfb..ad931eb5ca5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3549/Capability.java\n@@ -96,4 +96,4 @@ public enum Capability\n     {\n         return additive;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3549/Capability.java\nindex bac50912dfb..7bddfb965f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3549/Capability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3549/Capability.java\n@@ -25,66 +25,59 @@ import static org.neo4j.helpers.ArrayUtil.contains;\n  * A collection of high level capabilities a store can have, should not be more granular than necessary\n  * for differentiating different version from one another.\n  */\n+\n public enum Capability\n {\n     /**\n      * Store has schema support\n-     */\n-    SCHEMA( CapabilityType.STORE ),\n+     */ SCHEMA( CapabilityType.STORE),\n \n     /**\n      * Store has dense node support\n-     */\n-    DENSE_NODES( CapabilityType.FORMAT, CapabilityType.STORE ),\n+     */ DENSE_NODES( CapabilityType.FORMAT, CapabilityType.STORE ),\n \n     /**\n      * 3 bytes relationship type support\n-     */\n-    RELATIONSHIP_TYPE_3BYTES( CapabilityType.FORMAT, CapabilityType.STORE ),\n+     */ RELATIONSHIP_TYPE_3BYTES( CapabilityType.FORMAT, CapabilityType.STORE ),\n \n     /**\n      * Lucene version 3.x\n-     */\n-    LUCENE_3( CapabilityType.INDEX ),\n+     */ LUCENE_3( CapabilityType.INDEX),\n \n     /**\n      * Lucene version 5.x\n-     */\n-    LUCENE_5( CapabilityType.INDEX ),\n+     */ LUCENE_5( CapabilityType.INDEX),\n \n     /**\n      * Point Geometries are an addition to the format, not a change\n-     */\n-    POINT_PROPERTIES( true, CapabilityType.STORE ),\n+     */ POINT_PROPERTIES( true, CapabilityType.STORE ),\n \n     /**\n      * Temporal types are an addition to the format, not a change\n-     */\n-    TEMPORAL_PROPERTIES( true, CapabilityType.STORE ),\n+     */ TEMPORAL_PROPERTIES( true, CapabilityType.STORE ),\n \n     /**\n      * Records can spill over into secondary units (another record with a header saying it's a secondary unit to another record).\n-     */\n-    SECONDARY_RECORD_UNITS( CapabilityType.FORMAT );\n+     */ SECONDARY_RECORD_UNITS( CapabilityType.FORMAT)\n+                                                  ;\n+                                                      private final CapabilityType[] types;\n+                                                      private boolean additive;\n \n-    private final CapabilityType[] types;\n-    private boolean additive;\n+                                                      Capability( CapabilityType... types )\n+                                                      {\n+                                                          this( false, types );\n+                                                      }\n \n-    Capability( CapabilityType... types )\n-    {\n-        this( false, types );\n-    }\n+                                                      Capability( boolean additive, CapabilityType... types )\n+                                                      {\n+                                                          this.additive = additive;\n+                                                          this.types = types;\n+                                                      }\n \n-    Capability( boolean additive, CapabilityType... types )\n-    {\n-        this.additive = additive;\n-        this.types = types;\n-    }\n-\n-    public boolean isType( CapabilityType type )\n-    {\n-        return contains( types, type );\n-    }\n+                                                      public boolean isType( CapabilityType type )\n+                                                      {\n+                                                          return contains( types, type );\n+                                                      }\n \n     /**\n      * Whether or not this capability is additive. A capability is additive if data regarding this capability will not change\n@@ -92,8 +85,10 @@ public enum Capability\n      *\n      * @return whether or not this capability is additive.\n      */\n-    public boolean isAdditive()\n-    {\n-        return additive;\n-    }\n-}\n+\n+                                                      public boolean isAdditive()\n+                                                      {\n+                                                          return additive;\n+                                                      }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
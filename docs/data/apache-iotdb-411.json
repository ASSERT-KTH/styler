{
    "project_name": "apache-iotdb",
    "error_id": "411",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.query.reader.chunk.metadata;\n\nimport org.apache.iotdb.db.engine.modification.Modification;\nimport org.apache.iotdb.db.engine.storagegroup.TsFileResource;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/411/DiskChunkMetadataLoader.java\nindex 32293ea4a84..33a325509a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/411/DiskChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.modification.Modification;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/411/DiskChunkMetadataLoader.java\nindex 32293ea4a84..783c2871369 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/411/DiskChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.modification.Modification;\n@@ -64,8 +65,8 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n     chunkMetadataList.removeIf(\n         chunkMetaData ->\n             (filter != null\n-                    && !filter.satisfyStartEndTime(\n-                        chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n+                && !filter.satisfyStartEndTime(\n+                chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n                 || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n \n     // For chunkMetadata from old TsFile, do not set version\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'List' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'TsFileResource' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'PartialPath' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'\"Modifications size is {} for file Path: {} \"' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'pathModifications' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'resource' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 32, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 32, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 30, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/411/DiskChunkMetadataLoader.java\nindex 32293ea4a84..4630f35f583 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/411/DiskChunkMetadataLoader.java\n@@ -28,10 +28,8 @@ import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.ITimeSeriesMetadata;\n import org.apache.iotdb.tsfile.read.controller.IChunkMetadataLoader;\n import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.List;\n \n public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n@@ -41,11 +39,9 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n   private final QueryContext context;\n   // time filter or value filter, only used to check time range\n   private final Filter filter;\n-\n   private static final Logger DEBUG_LOGGER = LoggerFactory.getLogger(\"QUERY_DEBUG\");\n \n-  public DiskChunkMetadataLoader(\n-      TsFileResource resource, PartialPath seriesPath, QueryContext context, Filter filter) {\n+  public DiskChunkMetadataLoader(TsFileResource resource, PartialPath seriesPath, QueryContext context, Filter filter) {\n     this.resource = resource;\n     this.seriesPath = seriesPath;\n     this.context = context;\n@@ -55,18 +51,12 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n   @Override\n   public List<IChunkMetadata> loadChunkMetadataList(ITimeSeriesMetadata timeseriesMetadata) {\n     List<IChunkMetadata> chunkMetadataList = timeseriesMetadata.getChunkMetadataList();\n-\n     setDiskChunkLoader(chunkMetadataList, resource, seriesPath, context);\n \n     /*\n      * remove not satisfied ChunkMetaData\n      */\n-    chunkMetadataList.removeIf(\n-        chunkMetaData ->\n-            (filter != null\n-                    && !filter.satisfyStartEndTime(\n-                        chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n-                || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n+    chunkMetadataList.removeIf(chunkMetaData -> (filter != null && !filter.satisfyStartEndTime(chunkMetaData.getStartTime(), chunkMetaData.getEndTime())) || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n \n     // For chunkMetadata from old TsFile, do not set version\n     for (IChunkMetadata metadata : chunkMetadataList) {\n@@ -74,12 +64,10 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n         metadata.setVersion(resource.getVersion());\n       }\n     }\n-\n     if (context.isDebug()) {\n       DEBUG_LOGGER.info(\"After removed by filter Chunk meta data list is: \");\n       chunkMetadataList.forEach(c -> DEBUG_LOGGER.info(c.toString()));\n     }\n-\n     return chunkMetadataList;\n   }\n \n@@ -89,25 +77,20 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n   }\n \n   public static void setDiskChunkLoader(\n-      List<IChunkMetadata> chunkMetadataList,\n-      TsFileResource resource,\n-      PartialPath seriesPath,\n-      QueryContext context) {\n-    List<Modification> pathModifications =\n-        context.getPathModifications(resource.getModFile(), seriesPath);\n-\n+    List<IChunkMetadata> chunkMetadataList,\n+    TsFileResource resource,\n+    PartialPath seriesPath, QueryContext context) {\n+    List<Modification> pathModifications = context.getPathModifications(resource.getModFile(), seriesPath);\n     if (context.isDebug()) {\n       DEBUG_LOGGER.info(\n-          \"Modifications size is {} for file Path: {} \",\n-          pathModifications.size(),\n-          resource.getTsFilePath());\n+         \"Modifications size is {} for file Path: {} \",\n+         pathModifications.size(),\n+         resource.getTsFilePath());\n       pathModifications.forEach(c -> DEBUG_LOGGER.info(c.toString()));\n     }\n-\n     if (!pathModifications.isEmpty()) {\n       QueryUtils.modifyChunkMetaData(chunkMetadataList, pathModifications);\n     }\n-\n     if (context.isDebug()) {\n       DEBUG_LOGGER.info(\"After modification Chunk meta data list is: \");\n       chunkMetadataList.forEach(c -> DEBUG_LOGGER.info(c.toString()));\n@@ -115,13 +98,12 @@ public class DiskChunkMetadataLoader implements IChunkMetadataLoader {\n \n     // it is ok, even if it is not thread safe, because the cost of creating a DiskChunkLoader is\n     // very cheap.\n-    chunkMetadataList.forEach(\n-        chunkMetadata -> {\n-          if (chunkMetadata.needSetChunkLoader()) {\n-            chunkMetadata.setFilePath(resource.getTsFilePath());\n-            chunkMetadata.setClosed(resource.isClosed());\n-            chunkMetadata.setChunkLoader(new DiskChunkLoader(context.isDebug()));\n-          }\n-        });\n+    chunkMetadataList.forEach(chunkMetadata -> {\n+                                if (chunkMetadata.needSetChunkLoader()) {\n+                                  chunkMetadata.setFilePath(resource.getTsFilePath());\n+                                  chunkMetadata.setClosed(resource.isClosed());\n+                                  chunkMetadata.setChunkLoader(new DiskChunkLoader(context.isDebug()));\n+                                }\n+                              });\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/411/DiskChunkMetadataLoader.java\nindex 32293ea4a84..33a325509a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/411/DiskChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.modification.Modification;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/411/DiskChunkMetadataLoader.java\nindex 32293ea4a84..33a325509a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/411/DiskChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/411/DiskChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.modification.Modification;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
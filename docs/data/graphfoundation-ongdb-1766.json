{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1766",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1766/TransactionBackupServiceProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1766/TransactionBackupServiceProvider.java\nindex 8336ee6051b..1510cdf5113 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1766/TransactionBackupServiceProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1766/TransactionBackupServiceProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core;\n \n import io.netty.channel.ChannelInboundHandler;\n@@ -39,50 +40,50 @@ import org.neo4j.logging.LogProvider;\n \n public class TransactionBackupServiceProvider\n {\n-    private final LogProvider logProvider;\n-    private final LogProvider userLogProvider;\n-    private final TransactionBackupServiceAddressResolver transactionBackupServiceAddressResolver;\n-    private final ChannelInboundHandler parentHandler;\n-    private final ApplicationSupportedProtocols catchupProtocols;\n-    private final Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n-    private final NettyPipelineBuilderFactory serverPipelineBuilderFactory;\n-    private final CatchupServerHandler catchupServerHandler;\n+  private final LogProvider logProvider;\n+  private final LogProvider userLogProvider;\n+  private final TransactionBackupServiceAddressResolver transactionBackupServiceAddressResolver;\n+  private final ChannelInboundHandler parentHandler;\n+  private final ApplicationSupportedProtocols catchupProtocols;\n+  private final Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n+  private final NettyPipelineBuilderFactory serverPipelineBuilderFactory;\n+  private final CatchupServerHandler catchupServerHandler;\n \n-    public TransactionBackupServiceProvider( LogProvider logProvider, LogProvider userLogProvider, ApplicationSupportedProtocols catchupProtocols,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, NettyPipelineBuilderFactory serverPipelineBuilderFactory,\n-            CatchupServerHandler catchupServerHandler,\n-            ChannelInboundHandler parentHandler )\n-    {\n-        this.logProvider = logProvider;\n-        this.userLogProvider = userLogProvider;\n-        this.parentHandler = parentHandler;\n-        this.catchupProtocols = catchupProtocols;\n-        this.supportedModifierProtocols = supportedModifierProtocols;\n-        this.serverPipelineBuilderFactory = serverPipelineBuilderFactory;\n-        this.catchupServerHandler = catchupServerHandler;\n-        this.transactionBackupServiceAddressResolver = new TransactionBackupServiceAddressResolver();\n-    }\n+  public TransactionBackupServiceProvider(LogProvider logProvider, LogProvider userLogProvider, ApplicationSupportedProtocols catchupProtocols,\n+                                          Collection<ModifierSupportedProtocols> supportedModifierProtocols,\n+                                          NettyPipelineBuilderFactory serverPipelineBuilderFactory,\n+                                          CatchupServerHandler catchupServerHandler,\n+                                          ChannelInboundHandler parentHandler)\n+  {\n+    this.logProvider = logProvider;\n+    this.userLogProvider = userLogProvider;\n+    this.parentHandler = parentHandler;\n+    this.catchupProtocols = catchupProtocols;\n+    this.supportedModifierProtocols = supportedModifierProtocols;\n+    this.serverPipelineBuilderFactory = serverPipelineBuilderFactory;\n+    this.catchupServerHandler = catchupServerHandler;\n+    this.transactionBackupServiceAddressResolver = new TransactionBackupServiceAddressResolver();\n+  }\n \n-    public Optional<Server> resolveIfBackupEnabled( Config config )\n+  public Optional<Server> resolveIfBackupEnabled(Config config)\n+  {\n+    if (config.get(OnlineBackupSettings.online_backup_enabled))\n+    {\n+      ListenSocketAddress backupAddress = transactionBackupServiceAddressResolver.backupAddressForTxProtocol(config);\n+      logProvider.getLog(TransactionBackupServiceProvider.class).info(\"Binding backup service on address %s\", backupAddress);\n+      return Optional.of(new CatchupServerBuilder(catchupServerHandler)\n+          .serverHandler(parentHandler)\n+          .catchupProtocols(catchupProtocols)\n+          .modifierProtocols(supportedModifierProtocols)\n+          .pipelineBuilder(serverPipelineBuilderFactory)\n+          .userLogProvider(userLogProvider)\n+          .debugLogProvider(logProvider)\n+          .listenAddress(backupAddress)\n+          .serverName(\"backup-server\")\n+          .build());\n+    } else\n     {\n-        if ( config.get( OnlineBackupSettings.online_backup_enabled ) )\n-        {\n-            ListenSocketAddress backupAddress = transactionBackupServiceAddressResolver.backupAddressForTxProtocol( config );\n-            logProvider.getLog( TransactionBackupServiceProvider.class ).info( \"Binding backup service on address %s\", backupAddress );\n-            return Optional.of( new CatchupServerBuilder( catchupServerHandler )\n-                    .serverHandler( parentHandler )\n-                    .catchupProtocols( catchupProtocols )\n-                    .modifierProtocols( supportedModifierProtocols )\n-                    .pipelineBuilder( serverPipelineBuilderFactory )\n-                    .userLogProvider( userLogProvider )\n-                    .debugLogProvider( logProvider )\n-                    .listenAddress( backupAddress )\n-                    .serverName( \"backup-server\" )\n-                    .build());\n-        }\n-        else\n-        {\n-            return Optional.empty();\n-        }\n+      return Optional.empty();\n     }\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 271).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1766/TransactionBackupServiceProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1766/TransactionBackupServiceProvider.java\nindex 8336ee6051b..71da871577c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1766/TransactionBackupServiceProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1766/TransactionBackupServiceProvider.java\n@@ -48,8 +48,7 @@ public class TransactionBackupServiceProvider\n     private final NettyPipelineBuilderFactory serverPipelineBuilderFactory;\n     private final CatchupServerHandler catchupServerHandler;\n \n-    public TransactionBackupServiceProvider( LogProvider logProvider, LogProvider userLogProvider, ApplicationSupportedProtocols catchupProtocols,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, NettyPipelineBuilderFactory serverPipelineBuilderFactory,\n+    public TransactionBackupServiceProvider( LogProvider logProvider, LogProvider userLogProvider, ApplicationSupportedProtocols catchupProtocols, Collection<ModifierSupportedProtocols> supportedModifierProtocols, NettyPipelineBuilderFactory serverPipelineBuilderFactory,\n             CatchupServerHandler catchupServerHandler,\n             ChannelInboundHandler parentHandler )\n     {\n@@ -69,20 +68,18 @@ public class TransactionBackupServiceProvider\n         {\n             ListenSocketAddress backupAddress = transactionBackupServiceAddressResolver.backupAddressForTxProtocol( config );\n             logProvider.getLog( TransactionBackupServiceProvider.class ).info( \"Binding backup service on address %s\", backupAddress );\n-            return Optional.of( new CatchupServerBuilder( catchupServerHandler )\n-                    .serverHandler( parentHandler )\n+            return Optional.of( new CatchupServerBuilder( catchupServerHandler ).serverHandler( parentHandler )\n                     .catchupProtocols( catchupProtocols )\n                     .modifierProtocols( supportedModifierProtocols )\n                     .pipelineBuilder( serverPipelineBuilderFactory )\n                     .userLogProvider( userLogProvider )\n                     .debugLogProvider( logProvider )\n                     .listenAddress( backupAddress )\n-                    .serverName( \"backup-server\" )\n-                    .build());\n+                    .serverName( \"backup-server\" ).build() );\n         }\n         else\n         {\n             return Optional.empty();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
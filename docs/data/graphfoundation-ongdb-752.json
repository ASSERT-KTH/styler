{
    "project_name": "graphfoundation-ongdb",
    "error_id": "752",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/752/RotationTimerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/752/RotationTimerFactory.java\nindex 725ff6fb9af..13dfde35b49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/752/RotationTimerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/752/RotationTimerFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.util.concurrent.TimeUnit;\n@@ -25,43 +26,43 @@ import org.neo4j.time.SystemNanoClock;\n \n public class RotationTimerFactory\n {\n-    private SystemNanoClock clock;\n-    private long timeoutMillis;\n+  private SystemNanoClock clock;\n+  private long timeoutMillis;\n+\n+  public RotationTimerFactory(SystemNanoClock clock, long timeoutMillis)\n+  {\n+    this.clock = clock;\n+    this.timeoutMillis = timeoutMillis;\n+  }\n+\n+  public RotationTimer createTimer()\n+  {\n+    long startTimeNanos = clock.nanos();\n+    long timeoutNanos = TimeUnit.MILLISECONDS.toNanos(timeoutMillis);\n+    return new RotationTimer(startTimeNanos, startTimeNanos + timeoutNanos);\n+  }\n \n-    public RotationTimerFactory( SystemNanoClock clock, long timeoutMillis )\n+  class RotationTimer\n+  {\n+    private long startTimeNanos;\n+    private long deadlineNanos;\n+\n+    RotationTimer(long startTimeNanos, long deadlineNanos)\n     {\n-        this.clock = clock;\n-        this.timeoutMillis = timeoutMillis;\n+      this.startTimeNanos = startTimeNanos;\n+      this.deadlineNanos = deadlineNanos;\n     }\n \n-    public RotationTimer createTimer()\n+    public boolean isTimedOut()\n     {\n-        long startTimeNanos = clock.nanos();\n-        long timeoutNanos = TimeUnit.MILLISECONDS.toNanos( timeoutMillis );\n-        return new RotationTimer( startTimeNanos, startTimeNanos + timeoutNanos );\n+      return clock.nanos() > deadlineNanos;\n     }\n \n-    class RotationTimer\n+    public long getElapsedTimeMillis()\n     {\n-        private long startTimeNanos;\n-        private long deadlineNanos;\n-\n-        RotationTimer( long startTimeNanos, long deadlineNanos )\n-        {\n-            this.startTimeNanos = startTimeNanos;\n-            this.deadlineNanos = deadlineNanos;\n-        }\n-\n-        public boolean isTimedOut()\n-        {\n-            return clock.nanos() > deadlineNanos;\n-        }\n-\n-        public long getElapsedTimeMillis()\n-        {\n-            long elapsedNanos = clock.nanos() - startTimeNanos;\n-            return TimeUnit.NANOSECONDS.toMillis( elapsedNanos );\n-        }\n-\n+      long elapsedNanos = clock.nanos() - startTimeNanos;\n+      return TimeUnit.NANOSECONDS.toMillis(elapsedNanos);\n     }\n+\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/752/RotationTimerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/752/RotationTimerFactory.java\nindex 725ff6fb9af..bced8bb2644 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/752/RotationTimerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/752/RotationTimerFactory.java\n@@ -62,6 +62,5 @@ public class RotationTimerFactory\n             long elapsedNanos = clock.nanos() - startTimeNanos;\n             return TimeUnit.NANOSECONDS.toMillis( elapsedNanos );\n         }\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1759",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1759/CommunityDiscoverableURIs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1759/CommunityDiscoverableURIs.java\nindex 452f2557a2c..0269f212987 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1759/CommunityDiscoverableURIs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1759/CommunityDiscoverableURIs.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.discovery;\n \n import org.neo4j.configuration.Config;\n@@ -32,18 +33,18 @@ public class CommunityDiscoverableURIs\n     /**\n      * URIs exposed at the root HTTP endpoint, to help clients discover the rest of the service.\n      */\n-    public static DiscoverableURIs communityDiscoverableURIs( Config config, ConnectorPortRegister portRegister )\n+    public static DiscoverableURIs communityDiscoverableURIs(Config config, ConnectorPortRegister portRegister)\n     {\n-        return communityDiscoverableURIsBuilder( config, portRegister ).build();\n+        return communityDiscoverableURIsBuilder(config, portRegister).build();\n     }\n \n-    public static DiscoverableURIs.Builder communityDiscoverableURIsBuilder( Config config, ConnectorPortRegister portRegister )\n+    public static DiscoverableURIs.Builder communityDiscoverableURIsBuilder(Config config, ConnectorPortRegister portRegister)\n     {\n         var builder = new DiscoverableURIs.Builder();\n-        if ( config.get( ServerSettings.http_enabled_modules ).contains( ConfigurableServerModules.TRANSACTIONAL_ENDPOINTS ) )\n+        if (config.get(ServerSettings.http_enabled_modules).contains(ConfigurableServerModules.TRANSACTIONAL_ENDPOINTS))\n         {\n-            builder = builder.addEndpoint( CypherResource.NAME, absoluteDatabaseTransactionPath( config ) );\n+            builder = builder.addEndpoint(CypherResource.NAME, absoluteDatabaseTransactionPath(config));\n         }\n-        return builder.addBoltEndpoint( config, portRegister );\n+        return builder.addBoltEndpoint(config, portRegister);\n     }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1408",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1408/StorageSchemaReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1408/StorageSchemaReader.java\nindex e58ece9ee97..1356c9d421e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1408/StorageSchemaReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1408/StorageSchemaReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.util.Iterator;\n@@ -30,17 +31,19 @@ public interface StorageSchemaReader\n \n     /**\n      * Get the index with the given name.\n+     *\n      * @param name name of index to find.\n      * @return {@link IndexDescriptor} associated with the given {@code name}.\n      */\n-    IndexDescriptor indexGetForName( String name );\n+    IndexDescriptor indexGetForName(String name);\n \n     /**\n      * Get the constraint with the given name.\n+     *\n      * @param name name of the constraint to find.\n      * @return {@link ConstraintDescriptor} associated with the given {@code name}.\n      */\n-    ConstraintDescriptor constraintGetForName( String name );\n+    ConstraintDescriptor constraintGetForName(String name);\n \n     /**\n      * Looks for a stored index by given {@code descriptor}\n@@ -48,19 +51,19 @@ public interface StorageSchemaReader\n      * @param descriptor a description of the index.\n      * @return iterator of matching {@link IndexDescriptor}s.\n      */\n-    Iterator<IndexDescriptor> indexGetForSchema( SchemaDescriptor descriptor );\n+    Iterator<IndexDescriptor> indexGetForSchema(SchemaDescriptor descriptor);\n \n     /**\n      * @param labelId label to list indexes for.\n      * @return {@link IndexDescriptor} associated with the given {@code labelId}.\n      */\n-    Iterator<IndexDescriptor> indexesGetForLabel( int labelId );\n+    Iterator<IndexDescriptor> indexesGetForLabel(int labelId);\n \n     /**\n      * @param relationshipType relationship type to list indexes for.\n      * @return {@link IndexDescriptor} associated with the given {@code relationshipType}.\n      */\n-    Iterator<IndexDescriptor> indexesGetForRelationshipType( int relationshipType );\n+    Iterator<IndexDescriptor> indexesGetForRelationshipType(int relationshipType);\n \n     /**\n      * @return all {@link IndexDescriptor} in storage.\n@@ -71,13 +74,13 @@ public interface StorageSchemaReader\n      * @param labelId label token id.\n      * @return node property constraints associated with the label token id.\n      */\n-    Iterator<ConstraintDescriptor> constraintsGetForLabel( int labelId );\n+    Iterator<ConstraintDescriptor> constraintsGetForLabel(int labelId);\n \n     /**\n      * @param typeId relationship type token id .\n      * @return relationship property constraints associated with the relationship type token id.\n      */\n-    Iterator<ConstraintDescriptor> constraintsGetForRelationshipType( int typeId );\n+    Iterator<ConstraintDescriptor> constraintsGetForRelationshipType(int typeId);\n \n     /**\n      * @return all stored property constraints.\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
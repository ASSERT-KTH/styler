{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3893",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "319",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3893/PaxosClusterMemberEvents.java\nindex f5a8a5700c5..a7e70e4d85d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3893/PaxosClusterMemberEvents.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.member.paxos;\n \n import java.io.IOException;\n@@ -64,293 +65,290 @@ import static org.neo4j.helpers.collection.Iterables.filter;\n  */\n public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n {\n-    private Cluster cluster;\n-    private AtomicBroadcast atomicBroadcast;\n-    private Log log;\n-    protected AtomicBroadcastSerializer serializer;\n-    protected final Listeners<ClusterMemberListener> listeners = new Listeners<>();\n-    private ClusterMembersSnapshot clusterMembersSnapshot;\n-    private ClusterListener.Adapter clusterListener;\n-    private Snapshot snapshot;\n-    private AtomicBroadcastListener atomicBroadcastListener;\n-    private ExecutorService executor;\n-    private final Predicate<ClusterMembersSnapshot> snapshotValidator;\n-    private final Heartbeat heartbeat;\n-    private HeartbeatListenerImpl heartbeatListener;\n-    private ObjectInputStreamFactory lenientObjectInputStream;\n-    private ObjectOutputStreamFactory lenientObjectOutputStream;\n-    private final NamedThreadFactory.Monitor namedThreadFactoryMonitor;\n-\n-    public PaxosClusterMemberEvents( final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat,\n-                                    AtomicBroadcast atomicBroadcast, LogProvider logProvider,\n-                                    Predicate<ClusterMembersSnapshot> validator,\n-                                    BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                                    Iterable<MemberIsAvailable>> snapshotFilter,\n-                                    ObjectInputStreamFactory lenientObjectInputStream,\n-                                    ObjectOutputStreamFactory lenientObjectOutputStream,\n-                                    NamedThreadFactory.Monitor namedThreadFactoryMonitor )\n+  private Cluster cluster;\n+  private AtomicBroadcast atomicBroadcast;\n+  private Log log;\n+  protected AtomicBroadcastSerializer serializer;\n+  protected final Listeners<ClusterMemberListener> listeners = new Listeners<>();\n+  private ClusterMembersSnapshot clusterMembersSnapshot;\n+  private ClusterListener.Adapter clusterListener;\n+  private Snapshot snapshot;\n+  private AtomicBroadcastListener atomicBroadcastListener;\n+  private ExecutorService executor;\n+  private final Predicate<ClusterMembersSnapshot> snapshotValidator;\n+  private final Heartbeat heartbeat;\n+  private HeartbeatListenerImpl heartbeatListener;\n+  private ObjectInputStreamFactory lenientObjectInputStream;\n+  private ObjectOutputStreamFactory lenientObjectOutputStream;\n+  private final NamedThreadFactory.Monitor namedThreadFactoryMonitor;\n+\n+  public PaxosClusterMemberEvents(final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat,\n+                                  AtomicBroadcast atomicBroadcast, LogProvider logProvider,\n+                                  Predicate<ClusterMembersSnapshot> validator,\n+                                  BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n+                                      Iterable<MemberIsAvailable>> snapshotFilter,\n+                                  ObjectInputStreamFactory lenientObjectInputStream,\n+                                  ObjectOutputStreamFactory lenientObjectOutputStream,\n+                                  NamedThreadFactory.Monitor namedThreadFactoryMonitor)\n+  {\n+    this.snapshot = snapshot;\n+    this.cluster = cluster;\n+    this.heartbeat = heartbeat;\n+    this.atomicBroadcast = atomicBroadcast;\n+    this.lenientObjectInputStream = lenientObjectInputStream;\n+    this.lenientObjectOutputStream = lenientObjectOutputStream;\n+    this.namedThreadFactoryMonitor = namedThreadFactoryMonitor;\n+    this.log = logProvider.getLog(getClass());\n+\n+    clusterListener = new ClusterListenerImpl();\n+\n+    atomicBroadcastListener = new AtomicBroadcastListenerImpl();\n+\n+    this.snapshotValidator = validator;\n+\n+    clusterMembersSnapshot = new ClusterMembersSnapshot(snapshotFilter);\n+  }\n+\n+  @Override\n+  public void addClusterMemberListener(ClusterMemberListener listener)\n+  {\n+    listeners.add(listener);\n+  }\n+\n+  @Override\n+  public void removeClusterMemberListener(ClusterMemberListener listener)\n+  {\n+    listeners.remove(listener);\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    serializer = new AtomicBroadcastSerializer(lenientObjectInputStream, lenientObjectOutputStream);\n+\n+    cluster.addClusterListener(clusterListener);\n+\n+    atomicBroadcast.addAtomicBroadcastListener(atomicBroadcastListener);\n+\n+    snapshot.setSnapshotProvider(new HighAvailabilitySnapshotProvider());\n+\n+    heartbeat.addHeartbeatListener(heartbeatListener = new HeartbeatListenerImpl());\n+\n+    executor = Executors.newSingleThreadExecutor(\n+        new NamedThreadFactory(\"Paxos event notification\", namedThreadFactoryMonitor));\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    snapshot.setSnapshotProvider(null);\n+\n+    if (executor != null)\n     {\n-        this.snapshot = snapshot;\n-        this.cluster = cluster;\n-        this.heartbeat = heartbeat;\n-        this.atomicBroadcast = atomicBroadcast;\n-        this.lenientObjectInputStream = lenientObjectInputStream;\n-        this.lenientObjectOutputStream = lenientObjectOutputStream;\n-        this.namedThreadFactoryMonitor = namedThreadFactoryMonitor;\n-        this.log = logProvider.getLog( getClass() );\n-\n-        clusterListener = new ClusterListenerImpl();\n+      executor.shutdown();\n+      executor = null;\n+    }\n \n-        atomicBroadcastListener = new AtomicBroadcastListenerImpl();\n+    cluster.removeClusterListener(clusterListener);\n \n-        this.snapshotValidator = validator;\n+    atomicBroadcast.removeAtomicBroadcastListener(atomicBroadcastListener);\n \n-        clusterMembersSnapshot = new ClusterMembersSnapshot( snapshotFilter );\n-    }\n+    heartbeat.removeHeartbeatListener(heartbeatListener);\n+  }\n \n+  private class HighAvailabilitySnapshotProvider implements SnapshotProvider\n+  {\n     @Override\n-    public void addClusterMemberListener( ClusterMemberListener listener )\n+    public void getState(ObjectOutputStream output) throws IOException\n     {\n-        listeners.add( listener );\n+      output.writeObject(clusterMembersSnapshot);\n     }\n \n     @Override\n-    public void removeClusterMemberListener( ClusterMemberListener listener )\n+    public void setState(ObjectInputStream input) throws IOException, ClassNotFoundException\n     {\n-        listeners.remove( listener );\n+      clusterMembersSnapshot = ClusterMembersSnapshot.class.cast(input.readObject());\n+\n+      if (!snapshotValidator.test(clusterMembersSnapshot))\n+      {\n+        executor.submit(() -> cluster.leave());\n+      } else\n+      {\n+        // Send current availability events to listeners\n+        listeners.notify(executor, listener ->\n+        {\n+          for (MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers())\n+          {\n+            listener.memberIsAvailable(memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n+                memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId());\n+          }\n+        });\n+      }\n     }\n+  }\n \n+  public static class UniqueRoleFilter\n+      implements BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>>\n+  {\n     @Override\n-    public void init()\n+    public Iterable<MemberIsAvailable> apply(final Iterable<MemberIsAvailable> previousSnapshot,\n+                                             final MemberIsAvailable newMessage)\n     {\n-        serializer = new AtomicBroadcastSerializer( lenientObjectInputStream, lenientObjectOutputStream );\n-\n-        cluster.addClusterListener( clusterListener );\n-\n-        atomicBroadcast.addAtomicBroadcastListener( atomicBroadcastListener );\n+      return Iterables.append(newMessage, Iterables.filter(item ->\n+          in(newMessage.getInstanceId()).negate().test(item.getInstanceId()), previousSnapshot));\n+    }\n+  }\n \n-        snapshot.setSnapshotProvider( new HighAvailabilitySnapshotProvider() );\n+  public static class ClusterMembersSnapshot\n+      implements Serializable\n+  {\n+    private static final long serialVersionUID = -4638991834604077187L;\n \n-        heartbeat.addHeartbeatListener( heartbeatListener = new HeartbeatListenerImpl() );\n+    private BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> nextSnapshotFunction;\n \n-        executor = Executors.newSingleThreadExecutor(\n-                new NamedThreadFactory( \"Paxos event notification\", namedThreadFactoryMonitor ) );\n-    }\n+    private Iterable<MemberIsAvailable> availableMembers = new ArrayList<>();\n \n-    @Override\n-    public void start()\n+    public ClusterMembersSnapshot(BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n+        Iterable<MemberIsAvailable>> nextSnapshotFunction)\n     {\n+      this.nextSnapshotFunction = nextSnapshotFunction;\n     }\n \n-    @Override\n-    public void stop()\n+    public void availableMember(MemberIsAvailable memberIsAvailable)\n     {\n+      availableMembers = asList(nextSnapshotFunction.apply(availableMembers, memberIsAvailable));\n     }\n \n-    @Override\n-    public void shutdown()\n+    public void unavailableMember(final InstanceId member)\n     {\n-        snapshot.setSnapshotProvider( null );\n-\n-        if ( executor != null )\n-        {\n-            executor.shutdown();\n-            executor = null;\n-        }\n-\n-        cluster.removeClusterListener( clusterListener );\n-\n-        atomicBroadcast.removeAtomicBroadcastListener( atomicBroadcastListener );\n-\n-        heartbeat.removeHeartbeatListener( heartbeatListener );\n+      availableMembers = asList(filter(item -> !item.getInstanceId().equals(member), availableMembers));\n     }\n \n-    private class HighAvailabilitySnapshotProvider implements SnapshotProvider\n+    public void unavailableMember(final URI member, final InstanceId id, final String role)\n     {\n-        @Override\n-        public void getState( ObjectOutputStream output ) throws IOException\n-        {\n-            output.writeObject( clusterMembersSnapshot );\n-        }\n+      availableMembers = asList(filter(item ->\n+      {\n+        boolean matchByUriOrId = item.getClusterUri().equals(member) || item.getInstanceId().equals(id);\n+        boolean matchByRole = item.getRole().equals(role);\n \n-        @Override\n-        public void setState( ObjectInputStream input ) throws IOException, ClassNotFoundException\n-        {\n-            clusterMembersSnapshot = ClusterMembersSnapshot.class.cast( input.readObject() );\n-\n-            if ( !snapshotValidator.test( clusterMembersSnapshot ) )\n-            {\n-                executor.submit( () -> cluster.leave() );\n-            }\n-            else\n-            {\n-                // Send current availability events to listeners\n-                listeners.notify( executor, listener ->\n-                {\n-                    for ( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers() )\n-                    {\n-                        listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                                memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() );\n-                    }\n-                } );\n-            }\n-        }\n+        return !(matchByUriOrId && matchByRole);\n+      }, availableMembers));\n     }\n \n-    public static class UniqueRoleFilter\n-            implements BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n+    public Iterable<MemberIsAvailable> getCurrentAvailableMembers()\n     {\n-        @Override\n-        public Iterable<MemberIsAvailable> apply( final Iterable<MemberIsAvailable> previousSnapshot,\n-                                                  final MemberIsAvailable newMessage )\n-        {\n-            return Iterables.append( newMessage, Iterables.filter( item ->\n-                    in( newMessage.getInstanceId() ).negate().test( item.getInstanceId() ), previousSnapshot ) );\n-        }\n+      return availableMembers;\n     }\n \n-    public static class ClusterMembersSnapshot\n-            implements Serializable\n+    public Iterable<MemberIsAvailable> getCurrentAvailable(final InstanceId memberId)\n     {\n-        private static final long serialVersionUID = -4638991834604077187L;\n-\n-        private BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> nextSnapshotFunction;\n+      return asList(Iterables.filter(item -> item.getInstanceId().equals(memberId), availableMembers));\n+    }\n \n-        private Iterable<MemberIsAvailable> availableMembers = new ArrayList<>();\n+  }\n \n-        public ClusterMembersSnapshot( BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                Iterable<MemberIsAvailable>> nextSnapshotFunction )\n-        {\n-            this.nextSnapshotFunction = nextSnapshotFunction;\n-        }\n+  private class ClusterListenerImpl extends ClusterListener.Adapter\n+  {\n+    @Override\n+    public void enteredCluster(ClusterConfiguration clusterConfiguration)\n+    {\n+      // Catch up with elections\n+      for (Map.Entry<String, InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet())\n+      {\n+        elected(memberRoles.getKey(), memberRoles.getValue(),\n+            clusterConfiguration.getUriForId(memberRoles.getValue()));\n+      }\n+    }\n \n-        public void availableMember( MemberIsAvailable memberIsAvailable )\n-        {\n-            availableMembers = asList( nextSnapshotFunction.apply( availableMembers, memberIsAvailable ) );\n-        }\n+    @Override\n+    public void elected(String role, InstanceId instanceId, URI electedMember)\n+    {\n+      if (role.equals(ClusterConfiguration.COORDINATOR))\n+      {\n+        // Use the cluster coordinator as master for HA\n+        listeners.notify(listener -> listener.coordinatorIsElected(instanceId));\n+      }\n+    }\n \n-        public void unavailableMember( final InstanceId member )\n+    @Override\n+    public void leftCluster(InstanceId instanceId, URI member)\n+    {\n+      // Notify unavailability of members\n+      listeners.notify(listener ->\n+      {\n+        for (MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailable(instanceId))\n         {\n-            availableMembers = asList( filter( item -> !item.getInstanceId().equals( member ), availableMembers ) );\n+          listener.memberIsUnavailable(memberIsAvailable.getRole(), instanceId);\n         }\n+      });\n \n-        public void unavailableMember( final URI member, final InstanceId id, final String role )\n-        {\n-            availableMembers = asList( filter( item ->\n-            {\n-                boolean matchByUriOrId = item.getClusterUri().equals( member ) || item.getInstanceId().equals( id );\n-                boolean matchByRole = item.getRole().equals( role );\n-\n-                return !(matchByUriOrId && matchByRole);\n-            }, availableMembers ) );\n-        }\n+      clusterMembersSnapshot.unavailableMember(instanceId);\n+    }\n+  }\n \n-        public Iterable<MemberIsAvailable> getCurrentAvailableMembers()\n+  private class AtomicBroadcastListenerImpl implements AtomicBroadcastListener\n+  {\n+    @Override\n+    public void receive(Payload payload)\n+    {\n+      try\n+      {\n+        Object value = serializer.receive(payload);\n+        if (value instanceof MemberIsAvailable)\n         {\n-            return availableMembers;\n-        }\n+          final MemberIsAvailable memberIsAvailable = (MemberIsAvailable) value;\n \n-        public Iterable<MemberIsAvailable> getCurrentAvailable( final InstanceId memberId )\n-        {\n-            return asList( Iterables.filter( item -> item.getInstanceId().equals( memberId ), availableMembers ) );\n-        }\n+          // Update snapshot\n+          clusterMembersSnapshot.availableMember(memberIsAvailable);\n \n-    }\n+          log.info(\"Snapshot:\" + clusterMembersSnapshot.getCurrentAvailableMembers());\n \n-    private class ClusterListenerImpl extends ClusterListener.Adapter\n-    {\n-        @Override\n-        public void enteredCluster( ClusterConfiguration clusterConfiguration )\n+          listeners.notify(listener -> listener.memberIsAvailable(\n+              memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n+              memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId()));\n+        } else if (value instanceof MemberIsUnavailable)\n         {\n-            // Catch up with elections\n-            for ( Map.Entry<String, InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet() )\n-            {\n-                elected( memberRoles.getKey(), memberRoles.getValue(),\n-                        clusterConfiguration.getUriForId( memberRoles.getValue() ) );\n-            }\n-        }\n+          final MemberIsUnavailable memberIsUnavailable = (MemberIsUnavailable) value;\n \n-        @Override\n-        public void elected( String role, InstanceId instanceId, URI electedMember )\n-        {\n-            if ( role.equals( ClusterConfiguration.COORDINATOR ) )\n-            {\n-                // Use the cluster coordinator as master for HA\n-                listeners.notify( listener -> listener.coordinatorIsElected( instanceId ) );\n-            }\n-        }\n+          // Update snapshot\n+          clusterMembersSnapshot.unavailableMember(\n+              memberIsUnavailable.getClusterUri(),\n+              memberIsUnavailable.getInstanceId(),\n+              memberIsUnavailable.getRole());\n \n-        @Override\n-        public void leftCluster( InstanceId instanceId, URI member )\n-        {\n-            // Notify unavailability of members\n-            listeners.notify( listener ->\n-            {\n-                for ( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailable( instanceId ) )\n-                {\n-                    listener.memberIsUnavailable( memberIsAvailable.getRole(), instanceId );\n-                }\n-            } );\n-\n-            clusterMembersSnapshot.unavailableMember( instanceId );\n+          listeners.notify(listener -> listener.memberIsUnavailable(memberIsUnavailable.getRole(),\n+              memberIsUnavailable.getInstanceId()));\n         }\n+      } catch (Throwable t)\n+      {\n+        log.error(String.format(\"Could not handle cluster member available message: %s (%d)\",\n+            Base64.getEncoder().encodeToString(payload.getBuf()), payload.getLen()), t);\n+      }\n     }\n+  }\n \n-    private class AtomicBroadcastListenerImpl implements AtomicBroadcastListener\n+  private class HeartbeatListenerImpl implements HeartbeatListener\n+  {\n+    @Override\n+    public void failed(InstanceId server)\n     {\n-        @Override\n-        public void receive( Payload payload )\n-        {\n-            try\n-            {\n-                Object value = serializer.receive( payload );\n-                if ( value instanceof MemberIsAvailable )\n-                {\n-                    final MemberIsAvailable memberIsAvailable = (MemberIsAvailable) value;\n-\n-                    // Update snapshot\n-                    clusterMembersSnapshot.availableMember( memberIsAvailable );\n-\n-                    log.info( \"Snapshot:\" + clusterMembersSnapshot.getCurrentAvailableMembers() );\n-\n-                    listeners.notify( listener -> listener.memberIsAvailable(\n-                            memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                            memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() ) );\n-                }\n-                else if ( value instanceof MemberIsUnavailable )\n-                {\n-                    final MemberIsUnavailable memberIsUnavailable = (MemberIsUnavailable) value;\n-\n-                    // Update snapshot\n-                    clusterMembersSnapshot.unavailableMember(\n-                            memberIsUnavailable.getClusterUri(),\n-                            memberIsUnavailable.getInstanceId(),\n-                            memberIsUnavailable.getRole() );\n-\n-                    listeners.notify( listener -> listener.memberIsUnavailable( memberIsUnavailable.getRole(),\n-                            memberIsUnavailable.getInstanceId() ) );\n-                }\n-            }\n-            catch ( Throwable t )\n-            {\n-                log.error( String.format( \"Could not handle cluster member available message: %s (%d)\",\n-                        Base64.getEncoder().encodeToString( payload.getBuf() ), payload.getLen() ), t );\n-            }\n-        }\n+      listeners.notify(listener -> listener.memberIsFailed(server));\n     }\n \n-    private class HeartbeatListenerImpl implements HeartbeatListener\n+    @Override\n+    public void alive(InstanceId server)\n     {\n-        @Override\n-        public void failed( InstanceId server )\n-        {\n-            listeners.notify( listener -> listener.memberIsFailed( server ) );\n-        }\n-\n-        @Override\n-        public void alive( InstanceId server )\n-        {\n-            listeners.notify( listener -> listener.memberIsAlive( server ) );\n-        }\n+      listeners.notify(listener -> listener.memberIsAlive(server));\n     }\n+  }\n }\n",
            "diff_size": 361
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 306).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3893/PaxosClusterMemberEvents.java\nindex f5a8a5700c5..242f29c2f1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3893/PaxosClusterMemberEvents.java\n@@ -81,15 +81,11 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     private ObjectOutputStreamFactory lenientObjectOutputStream;\n     private final NamedThreadFactory.Monitor namedThreadFactoryMonitor;\n \n-    public PaxosClusterMemberEvents( final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat,\n-                                    AtomicBroadcast atomicBroadcast, LogProvider logProvider,\n-                                    Predicate<ClusterMembersSnapshot> validator,\n-                                    BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                                    Iterable<MemberIsAvailable>> snapshotFilter,\n+    public PaxosClusterMemberEvents( final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat, AtomicBroadcast atomicBroadcast, LogProvider logProvider, Predicate<ClusterMembersSnapshot> validator, BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> snapshotFilter,\n                                     ObjectInputStreamFactory lenientObjectInputStream,\n                                     ObjectOutputStreamFactory lenientObjectOutputStream,\n                                     NamedThreadFactory.Monitor namedThreadFactoryMonitor )\n-    {\n+{\n         this.snapshot = snapshot;\n         this.cluster = cluster;\n         this.heartbeat = heartbeat;\n@@ -98,12 +94,10 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         this.lenientObjectOutputStream = lenientObjectOutputStream;\n         this.namedThreadFactoryMonitor = namedThreadFactoryMonitor;\n         this.log = logProvider.getLog( getClass() );\n-\n-        clusterListener = new ClusterListenerImpl();\n+clusterListener = new ClusterListenerImpl();\n \n         atomicBroadcastListener = new AtomicBroadcastListenerImpl();\n-\n-        this.snapshotValidator = validator;\n+this.snapshotValidator = validator;\n \n         clusterMembersSnapshot = new ClusterMembersSnapshot( snapshotFilter );\n     }\n@@ -124,17 +118,11 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     public void init()\n     {\n         serializer = new AtomicBroadcastSerializer( lenientObjectInputStream, lenientObjectOutputStream );\n-\n-        cluster.addClusterListener( clusterListener );\n-\n-        atomicBroadcast.addAtomicBroadcastListener( atomicBroadcastListener );\n-\n-        snapshot.setSnapshotProvider( new HighAvailabilitySnapshotProvider() );\n-\n-        heartbeat.addHeartbeatListener( heartbeatListener = new HeartbeatListenerImpl() );\n-\n-        executor = Executors.newSingleThreadExecutor(\n-                new NamedThreadFactory( \"Paxos event notification\", namedThreadFactoryMonitor ) );\n+cluster.addClusterListener( clusterListener );\n+atomicBroadcast.addAtomicBroadcastListener( atomicBroadcastListener );\n+snapshot.setSnapshotProvider( new HighAvailabilitySnapshotProvider() );\n+heartbeat.addHeartbeatListener( heartbeatListener = new HeartbeatListenerImpl() );\n+executor = Executors.newSingleThreadExecutor( new NamedThreadFactory( \"Paxos event notification\", namedThreadFactoryMonitor ) );\n     }\n \n     @Override\n@@ -151,18 +139,15 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     public void shutdown()\n     {\n         snapshot.setSnapshotProvider( null );\n-\n-        if ( executor != null )\n+if ( executor != null )\n         {\n             executor.shutdown();\n             executor = null;\n         }\n \n         cluster.removeClusterListener( clusterListener );\n-\n-        atomicBroadcast.removeAtomicBroadcastListener( atomicBroadcastListener );\n-\n-        heartbeat.removeHeartbeatListener( heartbeatListener );\n+atomicBroadcast.removeAtomicBroadcastListener( atomicBroadcastListener );\n+heartbeat.removeHeartbeatListener( heartbeatListener );\n     }\n \n     private class HighAvailabilitySnapshotProvider implements SnapshotProvider\n@@ -177,8 +162,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         public void setState( ObjectInputStream input ) throws IOException, ClassNotFoundException\n         {\n             clusterMembersSnapshot = ClusterMembersSnapshot.class.cast( input.readObject() );\n-\n-            if ( !snapshotValidator.test( clusterMembersSnapshot ) )\n+if ( !snapshotValidator.test( clusterMembersSnapshot ) )\n             {\n                 executor.submit( () -> cluster.leave() );\n             }\n@@ -189,37 +173,31 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n                 {\n                     for ( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers() )\n                     {\n-                        listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                                memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() );\n-                    }\n+                        listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(), memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() );\n+    }\n                 } );\n             }\n         }\n     }\n \n-    public static class UniqueRoleFilter\n-            implements BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n+    public static class UniqueRoleFilter implements BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n     {\n         @Override\n-        public Iterable<MemberIsAvailable> apply( final Iterable<MemberIsAvailable> previousSnapshot,\n-                                                  final MemberIsAvailable newMessage )\n-        {\n-            return Iterables.append( newMessage, Iterables.filter( item ->\n-                    in( newMessage.getInstanceId() ).negate().test( item.getInstanceId() ), previousSnapshot ) );\n-        }\n+        public Iterable<MemberIsAvailable> apply( final Iterable<MemberIsAvailable> previousSnapshot, final MemberIsAvailable newMessage )\n+{\n+            return Iterables.append( newMessage, Iterables.filter( item -> in( newMessage.getInstanceId() ).negate().test( item.getInstanceId() ), previousSnapshot ) );\n+    }\n     }\n \n-    public static class ClusterMembersSnapshot\n-            implements Serializable\n-    {\n+    public static class ClusterMembersSnapshot implements Serializable\n+{\n         private static final long serialVersionUID = -4638991834604077187L;\n \n         private BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> nextSnapshotFunction;\n \n         private Iterable<MemberIsAvailable> availableMembers = new ArrayList<>();\n \n-        public ClusterMembersSnapshot( BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                Iterable<MemberIsAvailable>> nextSnapshotFunction )\n+        public ClusterMembersSnapshot( BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> nextSnapshotFunction )\n         {\n             this.nextSnapshotFunction = nextSnapshotFunction;\n         }\n@@ -240,8 +218,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n             {\n                 boolean matchByUriOrId = item.getClusterUri().equals( member ) || item.getInstanceId().equals( id );\n                 boolean matchByRole = item.getRole().equals( role );\n-\n-                return !(matchByUriOrId && matchByRole);\n+return !( matchByUriOrId && matchByRole);\n             }, availableMembers ) );\n         }\n \n@@ -254,7 +231,6 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         {\n             return asList( Iterables.filter( item -> item.getInstanceId().equals( memberId ), availableMembers ) );\n         }\n-\n     }\n \n     private class ClusterListenerImpl extends ClusterListener.Adapter\n@@ -263,11 +239,10 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         public void enteredCluster( ClusterConfiguration clusterConfiguration )\n         {\n             // Catch up with elections\n-            for ( Map.Entry<String, InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet() )\n+            for ( Map.Entry<String,InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet() )\n             {\n-                elected( memberRoles.getKey(), memberRoles.getValue(),\n-                        clusterConfiguration.getUriForId( memberRoles.getValue() ) );\n-            }\n+                elected( memberRoles.getKey(), memberRoles.getValue(), clusterConfiguration.getUriForId( memberRoles.getValue() ) );\n+    }\n         }\n \n         @Override\n@@ -291,8 +266,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n                     listener.memberIsUnavailable( memberIsAvailable.getRole(), instanceId );\n                 }\n             } );\n-\n-            clusterMembersSnapshot.unavailableMember( instanceId );\n+clusterMembersSnapshot.unavailableMember( instanceId );\n         }\n     }\n \n@@ -310,32 +284,23 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n \n                     // Update snapshot\n                     clusterMembersSnapshot.availableMember( memberIsAvailable );\n-\n-                    log.info( \"Snapshot:\" + clusterMembersSnapshot.getCurrentAvailableMembers() );\n-\n-                    listeners.notify( listener -> listener.memberIsAvailable(\n-                            memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                            memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() ) );\n+log.info( \"Snapshot:\" + clusterMembersSnapshot.getCurrentAvailableMembers() );\n+listeners.notify( listener -> listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(), memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() ) );\n                 }\n                 else if ( value instanceof MemberIsUnavailable )\n                 {\n                     final MemberIsUnavailable memberIsUnavailable = (MemberIsUnavailable) value;\n \n                     // Update snapshot\n-                    clusterMembersSnapshot.unavailableMember(\n-                            memberIsUnavailable.getClusterUri(),\n-                            memberIsUnavailable.getInstanceId(),\n-                            memberIsUnavailable.getRole() );\n-\n-                    listeners.notify( listener -> listener.memberIsUnavailable( memberIsUnavailable.getRole(),\n-                            memberIsUnavailable.getInstanceId() ) );\n-                }\n+                    clusterMembersSnapshot.unavailableMember( memberIsUnavailable.getClusterUri(), memberIsUnavailable.getInstanceId(), memberIsUnavailable.getRole() );\n+listeners.notify( listener -> listener.memberIsUnavailable( memberIsUnavailable.getRole(), memberIsUnavailable.getInstanceId() ) );\n+    }\n             }\n             catch ( Throwable t )\n             {\n                 log.error( String.format( \"Could not handle cluster member available message: %s (%d)\",\n                         Base64.getEncoder().encodeToString( payload.getBuf() ), payload.getLen() ), t );\n-            }\n+    }\n         }\n     }\n \n@@ -353,4 +318,4 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n             listeners.notify( listener -> listener.memberIsAlive( server ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 70
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 463).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "column": "49",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "column": "114",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "216",
                    "column": "77",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "237",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "260",
                    "column": "35",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3893/PaxosClusterMemberEvents.java\nindex f5a8a5700c5..92e6cf593b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3893/PaxosClusterMemberEvents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3893/PaxosClusterMemberEvents.java\n@@ -31,7 +31,6 @@ import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.function.BiFunction;\n import java.util.function.Predicate;\n-\n import org.neo4j.cluster.InstanceId;\n import org.neo4j.cluster.member.ClusterMemberEvents;\n import org.neo4j.cluster.member.ClusterMemberListener;\n@@ -54,14 +53,16 @@ import org.neo4j.helpers.collection.Iterables;\n import org.neo4j.kernel.lifecycle.Lifecycle;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n-\n import static org.neo4j.function.Predicates.in;\n+\n import static org.neo4j.helpers.collection.Iterables.asList;\n+\n import static org.neo4j.helpers.collection.Iterables.filter;\n \n /**\n  * Paxos based implementation of {@link org.neo4j.cluster.member.ClusterMemberEvents}\n  */\n+\n public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n {\n     private Cluster cluster;\n@@ -81,14 +82,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     private ObjectOutputStreamFactory lenientObjectOutputStream;\n     private final NamedThreadFactory.Monitor namedThreadFactoryMonitor;\n \n-    public PaxosClusterMemberEvents( final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat,\n-                                    AtomicBroadcast atomicBroadcast, LogProvider logProvider,\n-                                    Predicate<ClusterMembersSnapshot> validator,\n-                                    BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                                    Iterable<MemberIsAvailable>> snapshotFilter,\n-                                    ObjectInputStreamFactory lenientObjectInputStream,\n-                                    ObjectOutputStreamFactory lenientObjectOutputStream,\n-                                    NamedThreadFactory.Monitor namedThreadFactoryMonitor )\n+    public PaxosClusterMemberEvents( final Snapshot snapshot, Cluster cluster, Heartbeat heartbeat, AtomicBroadcast atomicBroadcast, LogProvider logProvider, Predicate<ClusterMembersSnapshot> validator, BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>> snapshotFilter, ObjectInputStreamFactory lenientObjectInputStream, ObjectOutputStreamFactory lenientObjectOutputStream, NamedThreadFactory.Monitor namedThreadFactoryMonitor )\n     {\n         this.snapshot = snapshot;\n         this.cluster = cluster;\n@@ -98,13 +92,9 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         this.lenientObjectOutputStream = lenientObjectOutputStream;\n         this.namedThreadFactoryMonitor = namedThreadFactoryMonitor;\n         this.log = logProvider.getLog( getClass() );\n-\n         clusterListener = new ClusterListenerImpl();\n-\n         atomicBroadcastListener = new AtomicBroadcastListenerImpl();\n-\n         this.snapshotValidator = validator;\n-\n         clusterMembersSnapshot = new ClusterMembersSnapshot( snapshotFilter );\n     }\n \n@@ -124,17 +114,11 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     public void init()\n     {\n         serializer = new AtomicBroadcastSerializer( lenientObjectInputStream, lenientObjectOutputStream );\n-\n         cluster.addClusterListener( clusterListener );\n-\n         atomicBroadcast.addAtomicBroadcastListener( atomicBroadcastListener );\n-\n         snapshot.setSnapshotProvider( new HighAvailabilitySnapshotProvider() );\n-\n         heartbeat.addHeartbeatListener( heartbeatListener = new HeartbeatListenerImpl() );\n-\n-        executor = Executors.newSingleThreadExecutor(\n-                new NamedThreadFactory( \"Paxos event notification\", namedThreadFactoryMonitor ) );\n+        executor = Executors.newSingleThreadExecutor( new NamedThreadFactory( \"Paxos event notification\", namedThreadFactoryMonitor ) );\n     }\n \n     @Override\n@@ -151,7 +135,6 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n     public void shutdown()\n     {\n         snapshot.setSnapshotProvider( null );\n-\n         if ( executor != null )\n         {\n             executor.shutdown();\n@@ -159,9 +142,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         }\n \n         cluster.removeClusterListener( clusterListener );\n-\n         atomicBroadcast.removeAtomicBroadcastListener( atomicBroadcastListener );\n-\n         heartbeat.removeHeartbeatListener( heartbeatListener );\n     }\n \n@@ -177,8 +158,7 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         public void setState( ObjectInputStream input ) throws IOException, ClassNotFoundException\n         {\n             clusterMembersSnapshot = ClusterMembersSnapshot.class.cast( input.readObject() );\n-\n-            if ( !snapshotValidator.test( clusterMembersSnapshot ) )\n+            if ( ! snapshotValidator.test( clusterMembersSnapshot ) )\n             {\n                 executor.submit( () -> cluster.leave() );\n             }\n@@ -186,40 +166,33 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n             {\n                 // Send current availability events to listeners\n                 listeners.notify( executor, listener ->\n-                {\n-                    for ( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers() )\n-                    {\n-                        listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                                memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() );\n-                    }\n-                } );\n+                                            {\n+                                                for( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers()\n+                                                )\n+                                                {\n+                                                    listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(), memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() );\n+                                                }\n+                                            } );\n             }\n         }\n     }\n \n-    public static class UniqueRoleFilter\n-            implements BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n+    public static class UniqueRoleFilter implements BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n     {\n         @Override\n-        public Iterable<MemberIsAvailable> apply( final Iterable<MemberIsAvailable> previousSnapshot,\n-                                                  final MemberIsAvailable newMessage )\n+        public Iterable<MemberIsAvailable> apply( final Iterable<MemberIsAvailable> previousSnapshot, final MemberIsAvailable newMessage )\n         {\n-            return Iterables.append( newMessage, Iterables.filter( item ->\n-                    in( newMessage.getInstanceId() ).negate().test( item.getInstanceId() ), previousSnapshot ) );\n+            return Iterables.append( newMessage, Iterables.filter( item -> in( newMessage.getInstanceId() ).negate().test( item.getInstanceId() ), previousSnapshot ) );\n         }\n     }\n \n-    public static class ClusterMembersSnapshot\n-            implements Serializable\n+    public static class ClusterMembersSnapshot implements Serializable\n     {\n-        private static final long serialVersionUID = -4638991834604077187L;\n-\n-        private BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>> nextSnapshotFunction;\n-\n+        private static final long serialVersionUID = - 4638991834604077187L;\n+        private BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>> nextSnapshotFunction;\n         private Iterable<MemberIsAvailable> availableMembers = new ArrayList<>();\n \n-        public ClusterMembersSnapshot( BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable,\n-                Iterable<MemberIsAvailable>> nextSnapshotFunction )\n+        public ClusterMembersSnapshot( BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>> nextSnapshotFunction )\n         {\n             this.nextSnapshotFunction = nextSnapshotFunction;\n         }\n@@ -231,18 +204,17 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n \n         public void unavailableMember( final InstanceId member )\n         {\n-            availableMembers = asList( filter( item -> !item.getInstanceId().equals( member ), availableMembers ) );\n+            availableMembers = asList( filter( item -> ! item.getInstanceId().equals( member ), availableMembers ) );\n         }\n \n         public void unavailableMember( final URI member, final InstanceId id, final String role )\n         {\n             availableMembers = asList( filter( item ->\n-            {\n-                boolean matchByUriOrId = item.getClusterUri().equals( member ) || item.getInstanceId().equals( id );\n-                boolean matchByRole = item.getRole().equals( role );\n-\n-                return !(matchByUriOrId && matchByRole);\n-            }, availableMembers ) );\n+                                               {\n+                                                   boolean matchByUriOrId = item.getClusterUri().equals( member )|| item.getInstanceId().equals( id );\n+                                                   boolean matchByRole = item.getRole().equals( role );\n+                                                   return ! ( matchByUriOrId&& matchByRole);\n+                                               }, availableMembers ) );\n         }\n \n         public Iterable<MemberIsAvailable> getCurrentAvailableMembers()\n@@ -254,7 +226,6 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         {\n             return asList( Iterables.filter( item -> item.getInstanceId().equals( memberId ), availableMembers ) );\n         }\n-\n     }\n \n     private class ClusterListenerImpl extends ClusterListener.Adapter\n@@ -263,10 +234,10 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         public void enteredCluster( ClusterConfiguration clusterConfiguration )\n         {\n             // Catch up with elections\n-            for ( Map.Entry<String, InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet() )\n+            for( Map.Entry<String,InstanceId> memberRoles : clusterConfiguration.getRoles().entrySet()\n+            )\n             {\n-                elected( memberRoles.getKey(), memberRoles.getValue(),\n-                        clusterConfiguration.getUriForId( memberRoles.getValue() ) );\n+                elected( memberRoles.getKey(), memberRoles.getValue(), clusterConfiguration.getUriForId( memberRoles.getValue() ) );\n             }\n         }\n \n@@ -285,13 +256,13 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n         {\n             // Notify unavailability of members\n             listeners.notify( listener ->\n-            {\n-                for ( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailable( instanceId ) )\n-                {\n-                    listener.memberIsUnavailable( memberIsAvailable.getRole(), instanceId );\n-                }\n-            } );\n-\n+                              {\n+                                  for( MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailable( instanceId )\n+                                  )\n+                                  {\n+                                      listener.memberIsUnavailable( memberIsAvailable.getRole(), instanceId );\n+                                  }\n+                              } );\n             clusterMembersSnapshot.unavailableMember( instanceId );\n         }\n     }\n@@ -310,31 +281,22 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n \n                     // Update snapshot\n                     clusterMembersSnapshot.availableMember( memberIsAvailable );\n-\n                     log.info( \"Snapshot:\" + clusterMembersSnapshot.getCurrentAvailableMembers() );\n-\n-                    listeners.notify( listener -> listener.memberIsAvailable(\n-                            memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(),\n-                            memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() ) );\n+                    listeners.notify( listener -> listener.memberIsAvailable( memberIsAvailable.getRole(), memberIsAvailable.getInstanceId(), memberIsAvailable.getRoleUri(), memberIsAvailable.getStoreId() ) );\n                 }\n-                else if ( value instanceof MemberIsUnavailable )\n+                else\n+                if ( value instanceof MemberIsUnavailable )\n                 {\n                     final MemberIsUnavailable memberIsUnavailable = (MemberIsUnavailable) value;\n \n                     // Update snapshot\n-                    clusterMembersSnapshot.unavailableMember(\n-                            memberIsUnavailable.getClusterUri(),\n-                            memberIsUnavailable.getInstanceId(),\n-                            memberIsUnavailable.getRole() );\n-\n-                    listeners.notify( listener -> listener.memberIsUnavailable( memberIsUnavailable.getRole(),\n-                            memberIsUnavailable.getInstanceId() ) );\n+                    clusterMembersSnapshot.unavailableMember( memberIsUnavailable.getClusterUri(), memberIsUnavailable.getInstanceId(), memberIsUnavailable.getRole() );\n+                    listeners.notify( listener -> listener.memberIsUnavailable( memberIsUnavailable.getRole(), memberIsUnavailable.getInstanceId() ) );\n                 }\n             }\n             catch ( Throwable t )\n             {\n-                log.error( String.format( \"Could not handle cluster member available message: %s (%d)\",\n-                        Base64.getEncoder().encodeToString( payload.getBuf() ), payload.getLen() ), t );\n+                log.error( String.format( \"Could not handle cluster member available message: %s (%d)\", Base64.getEncoder().encodeToString( payload.getBuf() ), payload.getLen() ), t );\n             }\n         }\n     }\n@@ -353,4 +315,4 @@ public class PaxosClusterMemberEvents implements ClusterMemberEvents, Lifecycle\n             listeners.notify( listener -> listener.memberIsAlive( server ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 86
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2900",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2900/ProcessFailureException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2900/ProcessFailureException.java\nindex 99949a52436..c638e3b6c8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2900/ProcessFailureException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2900/ProcessFailureException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import java.io.PrintStream;\n@@ -30,79 +31,79 @@ import java.util.List;\n @Deprecated\n public class ProcessFailureException extends Exception\n {\n-    public static final class Entry implements Serializable\n-    {\n-        private final String part;\n-        private final Throwable failure;\n-\n-        public Entry( String part, Throwable failure )\n-        {\n-            this.part = part;\n-            this.failure = failure;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"In '\" + part + \"': \" + failure;\n-        }\n-    }\n-\n-    private final Entry[] causes;\n+  public static final class Entry implements Serializable\n+  {\n+    private final String part;\n+    private final Throwable failure;\n \n-    public ProcessFailureException( List<Entry> causes )\n+    public Entry(String part, Throwable failure)\n     {\n-        super( \"Monitored process failed\" + message( causes ), cause( causes ) );\n-        this.causes = causes.toArray( new Entry[0] );\n+      this.part = part;\n+      this.failure = failure;\n     }\n \n-    private static String message( List<Entry> causes )\n+    @Override\n+    public String toString()\n     {\n-        if ( causes.isEmpty() )\n-        {\n-            return \".\";\n-        }\n-        if ( causes.size() == 1 )\n-        {\n-            return \" in '\" + causes.get( 0 ).part + \"'.\";\n-        }\n-        StringBuilder result = new StringBuilder( \":\" );\n-        for ( Entry entry : causes )\n-        {\n-            result.append( \"\\n\\t\" ).append( entry );\n-        }\n-        return result.toString();\n+      return \"In '\" + part + \"': \" + failure;\n     }\n+  }\n+\n+  private final Entry[] causes;\n \n-    @SuppressWarnings( \"ThrowableResultOfMethodCallIgnored\" )\n-    private static Throwable cause( List<Entry> causes )\n+  public ProcessFailureException(List<Entry> causes)\n+  {\n+    super(\"Monitored process failed\" + message(causes), cause(causes));\n+    this.causes = causes.toArray(new Entry[0]);\n+  }\n+\n+  private static String message(List<Entry> causes)\n+  {\n+    if (causes.isEmpty())\n     {\n-        return causes.size() >= 1 ? causes.get( 0 ).failure : null;\n+      return \".\";\n     }\n-\n-    @Override\n-    public void printStackTrace( PrintStream s )\n+    if (causes.size() == 1)\n     {\n-        super.printStackTrace( s );\n-        printAllCauses( new PrintWriter( s, true ) );\n+      return \" in '\" + causes.get(0).part + \"'.\";\n     }\n-\n-    @Override\n-    public void printStackTrace( PrintWriter s )\n+    StringBuilder result = new StringBuilder(\":\");\n+    for (Entry entry : causes)\n     {\n-        super.printStackTrace( s );\n-        printAllCauses( s );\n+      result.append(\"\\n\\t\").append(entry);\n     }\n+    return result.toString();\n+  }\n+\n+  @SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\")\n+  private static Throwable cause(List<Entry> causes)\n+  {\n+    return causes.size() >= 1 ? causes.get(0).failure : null;\n+  }\n+\n+  @Override\n+  public void printStackTrace(PrintStream s)\n+  {\n+    super.printStackTrace(s);\n+    printAllCauses(new PrintWriter(s, true));\n+  }\n+\n+  @Override\n+  public void printStackTrace(PrintWriter s)\n+  {\n+    super.printStackTrace(s);\n+    printAllCauses(s);\n+  }\n \n-    public void printAllCauses( PrintWriter writer )\n+  public void printAllCauses(PrintWriter writer)\n+  {\n+    if (getCause() == null)\n     {\n-        if ( getCause() == null )\n-        {\n-            for ( Entry entry : causes )\n-            {\n-                entry.failure.printStackTrace( writer );\n-            }\n-            writer.flush();\n-        }\n+      for (Entry entry : causes)\n+      {\n+        entry.failure.printStackTrace(writer);\n+      }\n+      writer.flush();\n     }\n+  }\n }\n",
            "diff_size": 96
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2900/ProcessFailureException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2900/ProcessFailureException.java\nindex 99949a52436..af4961b7d19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2900/ProcessFailureException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2900/ProcessFailureException.java\n@@ -62,16 +62,19 @@ public class ProcessFailureException extends Exception\n         {\n             return \".\";\n         }\n-        if ( causes.size() == 1 )\n+\n+if ( causes.size() == 1 )\n         {\n             return \" in '\" + causes.get( 0 ).part + \"'.\";\n         }\n-        StringBuilder result = new StringBuilder( \":\" );\n+\n+StringBuilder result = new StringBuilder( \":\" );\n         for ( Entry entry : causes )\n         {\n             result.append( \"\\n\\t\" ).append( entry );\n         }\n-        return result.toString();\n+\n+return result.toString();\n     }\n \n     @SuppressWarnings( \"ThrowableResultOfMethodCallIgnored\" )\n@@ -105,4 +108,4 @@ public class ProcessFailureException extends Exception\n             writer.flush();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1079",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientlocationquery.outbound;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1079/PassthroughOutboundPatientLocationQuery.java\nindex 4ff9ab75331..6dd08a29333 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1079/PassthroughOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -32,18 +33,17 @@ import gov.hhs.fha.nhinc.common.nhinccommonentity.RespondingGatewayPatientLocati\n import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n \n /**\n- *\n  * @author tjafri\n  */\n public class PassthroughOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n-    @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n-        //Step 1: audit request\n-        //Step 2 a: process request, if needed\n-        //Step 2 b: send request to Nhin\n-        //Step 3: return the response\n-        return new RespondingGatewayPatientLocationQueryResponseType();\n-    }\n+  @Override\n+  public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n+      PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    //Step 1: audit request\n+    //Step 2 a: process request, if needed\n+    //Step 2 b: send request to Nhin\n+    //Step 3: return the response\n+    return new RespondingGatewayPatientLocationQueryResponseType();\n+  }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1079/PassthroughOutboundPatientLocationQuery.java\nindex 4ff9ab75331..009e5df150a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1079/PassthroughOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -38,12 +39,11 @@ import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n public class PassthroughOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n     @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n         //Step 1: audit request\n         //Step 2 a: process request, if needed\n         //Step 2 b: send request to Nhin\n         //Step 3: return the response\n         return new RespondingGatewayPatientLocationQueryResponseType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1079/PassthroughOutboundPatientLocationQuery.java\nindex 4ff9ab75331..ac57de5d57c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1079/PassthroughOutboundPatientLocationQuery.java\n@@ -35,15 +35,18 @@ import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n  *\n  * @author tjafri\n  */\n+\n+\n public class PassthroughOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n+\n     @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(PatientLocationQueryRequestType request,\n+        AssertionType assertion, NhinTargetCommunitiesType target) {\n         //Step 1: audit request\n         //Step 2 a: process request, if needed\n         //Step 2 b: send request to Nhin\n         //Step 3: return the response\n         return new RespondingGatewayPatientLocationQueryResponseType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "9",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1079/PassthroughOutboundPatientLocationQuery.java\nindex 4ff9ab75331..c19d9258d95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1079/PassthroughOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1079/PassthroughOutboundPatientLocationQuery.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n+\n+package gov.hhs.fha.nhinc.patientlocationquery.\n+\n+outbound ;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "junkdog-artemis-odb",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 114).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tfor (FieldDescriptor fd : meta.fields()) {\n\t\t\t\n\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n\t\t\tList<MethodNode> methods = cn.methods;\n\t\t\tfor (MethodNode method : methods) {\n\t\t\t\tmethodTransformer.transform(method);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..bfb390b6b61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/61/FieldToStructTransformer.java\n@@ -35,8 +35,8 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \t\tList<FieldDescriptor> toPack = instanceFields(meta);\n \t\t\n \t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n+\n+FieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n \t\t\tList<MethodNode> methods = cn.methods;\n \t\t\tfor (MethodNode method : methods) {\n \t\t\t\tmethodTransformer.transform(method);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..317330f0e05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/61/FieldToStructTransformer.java\n@@ -21,50 +21,52 @@ import com.artemis.transformer.ClassTransformer;\n \n public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \n-\tprivate final ClassMetadata meta;\n-\n-\tpublic FieldToStructTransformer(ClassMetadata meta) {\n-\t\tthis.meta = meta;\n-\t}\n-\t\n-\t@Override @SuppressWarnings(\"unchecked\")\n-\tpublic ClassNode transform(ClassReader cr) {\n-\t\tClassNode cn = new ClassNode(ASM4);\n-\t\tcr.accept(cn,  ClassReader.EXPAND_FRAMES);\n-\t\t\n-\t\tList<FieldDescriptor> toPack = instanceFields(meta);\n-\t\t\n-\t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n-\t\t\tList<MethodNode> methods = cn.methods;\n-\t\t\tfor (MethodNode method : methods) {\n-\t\t\t\tmethodTransformer.transform(method);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif (!GlobalConfiguration.ideFriendlyPacking) {\n-\t\t\tremoveFields(cn, getFieldNames(toPack));\n-\t\t}\n-\t\t\n-\t\treturn cn;\n-\t}\n-\n-\t@SuppressWarnings(\"unchecked\")\n-\tprivate static void removeFields(ClassNode cn, List<String> names) {\n-\t\tfor (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext() ;) {\n-\t\t\tFieldNode next = it.next();\n-\t\t\tif (names.contains(next.name)) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate static List<String> getFieldNames(List<FieldDescriptor> toPack) {\n-\t\tList<String> names = new ArrayList<String>();\n-\t\tfor (FieldDescriptor fd : toPack) {\n-\t\t\tnames.add(fd.name);\n-\t\t}\n-\t\treturn names;\n-\t}\n+    private final ClassMetadata meta;\n+\n+    public FieldToStructTransformer(ClassMetadata meta) {\n+        this.meta = meta;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public ClassNode transform(ClassReader cr) {\n+        ClassNode cn = new ClassNode(ASM4);\n+        cr.accept(cn, ClassReader.EXPAND_FRAMES);\n+\n+        List<FieldDescriptor> toPack = instanceFields(meta);\n+\n+        for (FieldDescriptor fd : meta.fields()) {\n+\n+            FieldToStructMethodTransformer methodTransformer =\n+                    new FieldToStructMethodTransformer(null, meta, fd);\n+            List<MethodNode> methods = cn.methods;\n+            for (MethodNode method : methods) {\n+                methodTransformer.transform(method);\n+            }\n+        }\n+\n+        if (!GlobalConfiguration.ideFriendlyPacking) {\n+            removeFields(cn, getFieldNames(toPack));\n+        }\n+\n+        return cn;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static void removeFields(ClassNode cn, List<String> names) {\n+        for (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext(); ) {\n+            FieldNode next = it.next();\n+            if (names.contains(next.name)) {\n+                it.remove();\n+            }\n+        }\n+    }\n+\n+    private static List<String> getFieldNames(List<FieldDescriptor> toPack) {\n+        List<String> names = new ArrayList<String>();\n+        for (FieldDescriptor fd : toPack) {\n+            names.add(fd.name);\n+        }\n+        return names;\n+    }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..97a373c7244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/61/FieldToStructTransformer.java\n@@ -1,4 +1,3 @@\n-\n package com.artemis.weaver.packed;\n \n \n@@ -27,17 +26,17 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \t\tthis.meta = meta;\n \t}\n \t\n-\t@Override @SuppressWarnings(\"unchecked\")\n+\t@Override\n+@SuppressWarnings(\"unchecked\")\n \tpublic ClassNode transform(ClassReader cr) {\n \t\tClassNode cn = new ClassNode(ASM4);\n-\t\tcr.accept(cn,  ClassReader.EXPAND_FRAMES);\n+\t\tcr.accept(cn, ClassReader.EXPAND_FRAMES);\n \t\t\n \t\tList<FieldDescriptor> toPack = instanceFields(meta);\n \t\t\n \t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n-\t\t\tList<MethodNode> methods = cn.methods;\n+\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n+List<MethodNode> methods = cn.methods;\n \t\t\tfor (MethodNode method : methods) {\n \t\t\t\tmethodTransformer.transform(method);\n \t\t\t}\n@@ -52,7 +51,7 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \n \t@SuppressWarnings(\"unchecked\")\n \tprivate static void removeFields(ClassNode cn, List<String> names) {\n-\t\tfor (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext() ;) {\n+\t\tfor (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext(); ) {\n \t\t\tFieldNode next = it.next();\n \t\t\tif (names.contains(next.name)) {\n \t\t\t\tit.remove();\n@@ -67,4 +66,4 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \t\t}\n \t\treturn names;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..81f1d34110b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/61/FieldToStructTransformer.java\n@@ -1,70 +1,66 @@\n \n package com.artemis.weaver.packed;\n \n-\n import static com.artemis.meta.ClassMetadataUtil.instanceFields;\n \n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n-\n import org.objectweb.asm.ClassReader;\n import org.objectweb.asm.Opcodes;\n import org.objectweb.asm.tree.ClassNode;\n import org.objectweb.asm.tree.FieldNode;\n import org.objectweb.asm.tree.MethodNode;\n-\n import com.artemis.meta.ClassMetadata;\n import com.artemis.meta.ClassMetadata.GlobalConfiguration;\n import com.artemis.meta.FieldDescriptor;\n import com.artemis.transformer.ClassTransformer;\n \n public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n+ private final ClassMetadata meta;\n+\n+ public FieldToStructTransformer(ClassMetadata meta) {\n+  this.meta = meta;\n+ }\n+\n+ @Override\n+ @SuppressWarnings(\"unchecked\")\n+ public ClassNode transform(ClassReader cr) {\n+  ClassNode cn = new ClassNode(ASM4);\n+  cr.accept(cn, ClassReader.EXPAND_FRAMES);\n+\n+  List<FieldDescriptor> toPack = instanceFields(meta);\n+  for (FieldDescriptor fd : meta.fields()) {\n+   FieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n+   List<MethodNode> methods = cn.methods;\n+   for (MethodNode method : methods) {\n+    methodTransformer.transform(method);\n+   }\n+  }\n+\n+  if (!GlobalConfiguration.ideFriendlyPacking) {\n+   removeFields(cn, getFieldNames(toPack));\n+  }\n \n-\tprivate final ClassMetadata meta;\n+  return cn;\n+ }\n \n-\tpublic FieldToStructTransformer(ClassMetadata meta) {\n-\t\tthis.meta = meta;\n-\t}\n-\t\n-\t@Override @SuppressWarnings(\"unchecked\")\n-\tpublic ClassNode transform(ClassReader cr) {\n-\t\tClassNode cn = new ClassNode(ASM4);\n-\t\tcr.accept(cn,  ClassReader.EXPAND_FRAMES);\n-\t\t\n-\t\tList<FieldDescriptor> toPack = instanceFields(meta);\n-\t\t\n-\t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n-\t\t\tList<MethodNode> methods = cn.methods;\n-\t\t\tfor (MethodNode method : methods) {\n-\t\t\t\tmethodTransformer.transform(method);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif (!GlobalConfiguration.ideFriendlyPacking) {\n-\t\t\tremoveFields(cn, getFieldNames(toPack));\n-\t\t}\n-\t\t\n-\t\treturn cn;\n-\t}\n+ @SuppressWarnings(\"unchecked\")\n+ private static void removeFields(ClassNode cn, List<String> names) {\n+  for (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext(); ) {\n+   FieldNode next = it.next();\n+   if (names.contains(next.name)) {\n+    it.remove();\n+   }\n+  }\n+ }\n \n-\t@SuppressWarnings(\"unchecked\")\n-\tprivate static void removeFields(ClassNode cn, List<String> names) {\n-\t\tfor (Iterator<FieldNode> it = cn.fields.iterator(); it.hasNext() ;) {\n-\t\t\tFieldNode next = it.next();\n-\t\t\tif (names.contains(next.name)) {\n-\t\t\t\tit.remove();\n-\t\t\t}\n-\t\t}\n-\t}\n+ private static List<String> getFieldNames(List<FieldDescriptor> toPack) {\n+  List<String> names = new ArrayList<String>();\n+  for (FieldDescriptor fd : toPack) {\n+   names.add(fd.name);\n+  }\n \n-\tprivate static List<String> getFieldNames(List<FieldDescriptor> toPack) {\n-\t\tList<String> names = new ArrayList<String>();\n-\t\tfor (FieldDescriptor fd : toPack) {\n-\t\t\tnames.add(fd.name);\n-\t\t}\n-\t\treturn names;\n-\t}\n-}\n+  return names;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..bfb390b6b61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/61/FieldToStructTransformer.java\n@@ -35,8 +35,8 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \t\tList<FieldDescriptor> toPack = instanceFields(meta);\n \t\t\n \t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n+\n+FieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n \t\t\tList<MethodNode> methods = cn.methods;\n \t\t\tfor (MethodNode method : methods) {\n \t\t\t\tmethodTransformer.transform(method);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/61/FieldToStructTransformer.java\nindex 0c125bf3ef2..3c637c6998c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/61/FieldToStructTransformer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/61/FieldToStructTransformer.java\n@@ -34,10 +34,9 @@ public class FieldToStructTransformer implements ClassTransformer, Opcodes {\n \t\t\n \t\tList<FieldDescriptor> toPack = instanceFields(meta);\n \t\t\n-\t\tfor (FieldDescriptor fd : meta.fields()) {\n-\t\t\t\n-\t\t\tFieldToStructMethodTransformer methodTransformer = new FieldToStructMethodTransformer(null, meta, fd);\n-\t\t\tList<MethodNode> methods = cn.methods;\n+\t\tfor (FieldDescriptor fd : meta.fields()) {FieldToStructMethodTransformermethodTransformer=newFieldToStructMethodTransformer( null, meta,fd\n+\t\t) ;\n+\t\tList<MethodNode<MethodNode> methods = cn.methods;\n \t\t\tfor (MethodNode method : methods) {\n \t\t\t\tmethodTransformer.transform(method);\n \t\t\t}\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
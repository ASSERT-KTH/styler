{
    "project_name": "graphfoundation-ongdb",
    "error_id": "735",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/735/ReverseTransactionCursorLoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/735/ReverseTransactionCursorLoggingMonitor.java\nindex 3fc92631dab..ad5ce2d88c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/735/ReverseTransactionCursorLoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/735/ReverseTransactionCursorLoggingMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.reverse;\n \n import org.neo4j.logging.Log;\n@@ -25,19 +26,19 @@ import static java.lang.String.format;\n \n public class ReverseTransactionCursorLoggingMonitor implements ReversedTransactionCursorMonitor\n {\n-    private final Log log;\n+  private final Log log;\n \n-    public ReverseTransactionCursorLoggingMonitor( Log log )\n-    {\n-        this.log = log;\n-    }\n+  public ReverseTransactionCursorLoggingMonitor(Log log)\n+  {\n+    this.log = log;\n+  }\n \n-    @Override\n-    public void transactionalLogRecordReadFailure( long[] transactionOffsets, int transactionIndex, long logVersion )\n-    {\n-        log.warn( transactionIndex > 0 ?\n-               format( \"Fail to read transaction log version %d. Last valid transaction start offset is: %d.\",\n-                       logVersion, transactionOffsets[transactionIndex - 1] ) :\n-               format( \"Fail to read first transaction of log version %d.\", logVersion) );\n-    }\n+  @Override\n+  public void transactionalLogRecordReadFailure(long[] transactionOffsets, int transactionIndex, long logVersion)\n+  {\n+    log.warn(transactionIndex > 0 ?\n+        format(\"Fail to read transaction log version %d. Last valid transaction start offset is: %d.\",\n+            logVersion, transactionOffsets[transactionIndex - 1]) :\n+        format(\"Fail to read first transaction of log version %d.\", logVersion));\n+  }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/735/ReverseTransactionCursorLoggingMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/735/ReverseTransactionCursorLoggingMonitor.java\nindex 3fc92631dab..5df0dda6fa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/735/ReverseTransactionCursorLoggingMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/735/ReverseTransactionCursorLoggingMonitor.java\n@@ -35,9 +35,7 @@ public class ReverseTransactionCursorLoggingMonitor implements ReversedTransacti\n     @Override\n     public void transactionalLogRecordReadFailure( long[] transactionOffsets, int transactionIndex, long logVersion )\n     {\n-        log.warn( transactionIndex > 0 ?\n-               format( \"Fail to read transaction log version %d. Last valid transaction start offset is: %d.\",\n-                       logVersion, transactionOffsets[transactionIndex - 1] ) :\n-               format( \"Fail to read first transaction of log version %d.\", logVersion) );\n+        log.warn( transactionIndex > 0 ? format( \"Fail to read transaction log version %d. Last valid transaction start offset is: %d.\",\n+                       logVersion, transactionOffsets[transactionIndex - 1] ) : format( \"Fail to read first transaction of log version %d.\", logVersion) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
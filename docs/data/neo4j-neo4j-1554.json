{
    "project_name": "neo4j-neo4j",
    "error_id": "1554",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1554/DatabaseEventListeners.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1554/DatabaseEventListeners.java\nindex cfb7b3f5851..d48f0171299 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1554/DatabaseEventListeners.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1554/DatabaseEventListeners.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.monitoring;\n \n import java.util.List;\n@@ -36,80 +37,79 @@ public class DatabaseEventListeners\n     private final List<InternalDatabaseEventListener> internalDatabaseEventListeners = new CopyOnWriteArrayList<>();\n     private final Log log;\n \n-    public DatabaseEventListeners( Log log )\n+    public DatabaseEventListeners(Log log)\n     {\n         this.log = log;\n     }\n \n-    public void registerDatabaseEventListener( InternalDatabaseEventListener listener )\n+    public void registerDatabaseEventListener(InternalDatabaseEventListener listener)\n     {\n-        addListener( listener, internalDatabaseEventListeners );\n+        addListener(listener, internalDatabaseEventListeners);\n     }\n \n-    public void unregisterDatabaseEventListener( InternalDatabaseEventListener listener )\n+    public void unregisterDatabaseEventListener(InternalDatabaseEventListener listener)\n     {\n-        removeListener( listener, internalDatabaseEventListeners );\n+        removeListener(listener, internalDatabaseEventListeners);\n     }\n \n-    public void registerDatabaseEventListener( DatabaseEventListener listener )\n+    public void registerDatabaseEventListener(DatabaseEventListener listener)\n     {\n-        addListener( listener, databaseEventListeners );\n+        addListener(listener, databaseEventListeners);\n     }\n \n-    public void unregisterDatabaseEventListener( DatabaseEventListener listener )\n+    public void unregisterDatabaseEventListener(DatabaseEventListener listener)\n     {\n-        removeListener( listener, databaseEventListeners );\n+        removeListener(listener, databaseEventListeners);\n     }\n \n-    private <T> void addListener( T listener, List<T> listeners )\n+    private <T> void addListener(T listener, List<T> listeners)\n     {\n-        if ( listeners.contains( listener ) )\n+        if (listeners.contains(listener))\n         {\n             return;\n         }\n-        listeners.add( listener );\n+        listeners.add(listener);\n     }\n \n-    private <T> void removeListener( T listener, List<T> listeners )\n+    private <T> void removeListener(T listener, List<T> listeners)\n     {\n-        if ( !listeners.remove( listener ) )\n+        if (!listeners.remove(listener))\n         {\n-            throw new IllegalStateException( \"Database listener `\" + listener + \"` is not registered.\" );\n+            throw new IllegalStateException(\"Database listener `\" + listener + \"` is not registered.\");\n         }\n     }\n \n-    public void databaseStart( NamedDatabaseId databaseId )\n+    public void databaseStart(NamedDatabaseId databaseId)\n     {\n-        var event = new StartDatabaseEvent( databaseId );\n-        notifyEventListeners( handler -> handler.databaseStart( event ), databaseEventListeners );\n-        notifyEventListeners( handler -> handler.databaseStart( event ), internalDatabaseEventListeners );\n+        var event = new StartDatabaseEvent(databaseId);\n+        notifyEventListeners(handler -> handler.databaseStart(event), databaseEventListeners);\n+        notifyEventListeners(handler -> handler.databaseStart(event), internalDatabaseEventListeners);\n     }\n \n-    public void databaseShutdown( NamedDatabaseId databaseId )\n+    public void databaseShutdown(NamedDatabaseId databaseId)\n     {\n-        var event = new StopDatabaseEvent( databaseId );\n-        notifyEventListeners( handler -> handler.databaseShutdown( event ), databaseEventListeners );\n-        notifyEventListeners( handler -> handler.databaseShutdown( event ), internalDatabaseEventListeners );\n+        var event = new StopDatabaseEvent(databaseId);\n+        notifyEventListeners(handler -> handler.databaseShutdown(event), databaseEventListeners);\n+        notifyEventListeners(handler -> handler.databaseShutdown(event), internalDatabaseEventListeners);\n     }\n \n-    void databasePanic( NamedDatabaseId databaseId, Throwable causeOfPanic )\n+    void databasePanic(NamedDatabaseId databaseId, Throwable causeOfPanic)\n     {\n-        var event = new PanicDatabaseEvent( databaseId, causeOfPanic );\n-        notifyEventListeners( handler -> handler.databasePanic( event ), databaseEventListeners );\n-        notifyEventListeners( handler -> handler.databasePanic( event ), internalDatabaseEventListeners );\n+        var event = new PanicDatabaseEvent(databaseId, causeOfPanic);\n+        notifyEventListeners(handler -> handler.databasePanic(event), databaseEventListeners);\n+        notifyEventListeners(handler -> handler.databasePanic(event), internalDatabaseEventListeners);\n     }\n \n-    private <T> void notifyEventListeners( Consumer<T> consumer, List<T> listeners )\n+    private <T> void notifyEventListeners(Consumer<T> consumer, List<T> listeners)\n     {\n-        for ( var listener : listeners )\n+        for (var listener : listeners)\n         {\n             try\n             {\n-                consumer.accept( listener );\n-            }\n-            catch ( Throwable e )\n+                consumer.accept(listener);\n+            } catch (Throwable e)\n             {\n-                log.error( \"Error while handling database event by listener: \" + listener, e );\n+                log.error(\"Error while handling database event by listener: \" + listener, e);\n             }\n         }\n     }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
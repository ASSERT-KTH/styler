{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4113",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "10",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4113/PathRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4113/PathRepresentation.java\nindex a22422d464a..4f5516e61f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4113/PathRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4113/PathRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.ArrayList;\n@@ -28,102 +29,101 @@ import org.neo4j.graphdb.Relationship;\n import org.neo4j.helpers.collection.IterableWrapper;\n \n public class PathRepresentation<P extends Path> extends ObjectRepresentation // implements\n-                                                                             // ExtensibleRepresentation\n+    // ExtensibleRepresentation\n {\n-    private final P path;\n+  private final P path;\n \n-    public PathRepresentation( P path )\n-    {\n-        super( RepresentationType.PATH );\n-        this.path = path;\n-    }\n+  public PathRepresentation(P path)\n+  {\n+    super(RepresentationType.PATH);\n+    this.path = path;\n+  }\n \n-    protected P getPath()\n-    {\n-        return path;\n-    }\n+  protected P getPath()\n+  {\n+    return path;\n+  }\n \n-    @Mapping( \"start\" )\n-    public ValueRepresentation startNode()\n-    {\n-        return ValueRepresentation.uri( NodeRepresentation.path( path.startNode() ) );\n-    }\n+  @Mapping(\"start\")\n+  public ValueRepresentation startNode()\n+  {\n+    return ValueRepresentation.uri(NodeRepresentation.path(path.startNode()));\n+  }\n \n-    @Mapping( \"end\" )\n-    public ValueRepresentation endNode()\n-    {\n-        return ValueRepresentation.uri( NodeRepresentation.path( path.endNode() ) );\n-    }\n+  @Mapping(\"end\")\n+  public ValueRepresentation endNode()\n+  {\n+    return ValueRepresentation.uri(NodeRepresentation.path(path.endNode()));\n+  }\n \n-    @Mapping( \"length\" )\n-    public ValueRepresentation length()\n-    {\n-        return ValueRepresentation.number( path.length() );\n-    }\n+  @Mapping(\"length\")\n+  public ValueRepresentation length()\n+  {\n+    return ValueRepresentation.number(path.length());\n+  }\n \n-    @Mapping( \"nodes\" )\n-    public ListRepresentation nodes()\n-    {\n-        return new ListRepresentation( RepresentationType.NODE,\n-                new IterableWrapper<Representation, Node>( path.nodes() )\n-                {\n-                    @Override\n-                    protected Representation underlyingObjectToObject( Node node )\n-                    {\n-                        return ValueRepresentation.uri( NodeRepresentation.path( node ) );\n-                    }\n-                } );\n-    }\n+  @Mapping(\"nodes\")\n+  public ListRepresentation nodes()\n+  {\n+    return new ListRepresentation(RepresentationType.NODE,\n+        new IterableWrapper<Representation, Node>(path.nodes())\n+        {\n+          @Override\n+          protected Representation underlyingObjectToObject(Node node)\n+          {\n+            return ValueRepresentation.uri(NodeRepresentation.path(node));\n+          }\n+        });\n+  }\n \n-    @Mapping( \"relationships\" )\n-    public ListRepresentation relationships()\n-    {\n-        return new ListRepresentation( RepresentationType.RELATIONSHIP,\n-                new IterableWrapper<Representation, Relationship>( path.relationships() )\n-                {\n-                    @Override\n-                    protected Representation underlyingObjectToObject( Relationship node )\n-                    {\n-                        return ValueRepresentation.uri( RelationshipRepresentation.path( node ) );\n-                    }\n-                } );\n-    }\n+  @Mapping(\"relationships\")\n+  public ListRepresentation relationships()\n+  {\n+    return new ListRepresentation(RepresentationType.RELATIONSHIP,\n+        new IterableWrapper<Representation, Relationship>(path.relationships())\n+        {\n+          @Override\n+          protected Representation underlyingObjectToObject(Relationship node)\n+          {\n+            return ValueRepresentation.uri(RelationshipRepresentation.path(node));\n+          }\n+        });\n+  }\n \n-    @Mapping( \"directions\" )\n-    public ListRepresentation directions()\n-    {\n-        ArrayList<String> directionStrings = new ArrayList<>();\n+  @Mapping(\"directions\")\n+  public ListRepresentation directions()\n+  {\n+    ArrayList<String> directionStrings = new ArrayList<>();\n \n-        Iterator<Node> nodeIterator = path.nodes().iterator();\n-        Iterator<Relationship> relationshipIterator = path.relationships().iterator();\n+    Iterator<Node> nodeIterator = path.nodes().iterator();\n+    Iterator<Relationship> relationshipIterator = path.relationships().iterator();\n \n-        Relationship rel;\n-        Node startNode;\n-        Node endNode = nodeIterator.next();\n+    Relationship rel;\n+    Node startNode;\n+    Node endNode = nodeIterator.next();\n \n-        while ( relationshipIterator.hasNext() )\n-        {\n-            rel = relationshipIterator.next();\n-            startNode = endNode;\n-            endNode = nodeIterator.next();\n-            if ( rel.getStartNode().equals(startNode) && rel.getEndNode().equals(endNode) )\n-            {\n-                directionStrings.add( \"->\" );\n-            }\n-            else\n-            {\n-                directionStrings.add( \"<-\" );\n-            }\n-        }\n-\n-        return new ListRepresentation( RepresentationType.STRING,\n-                new IterableWrapper<Representation, String>( directionStrings )\n-                {\n-                    @Override\n-                    protected Representation underlyingObjectToObject( String directionString )\n-                    {\n-                        return ValueRepresentation.string(directionString);\n-                    }\n-                } );\n+    while (relationshipIterator.hasNext())\n+    {\n+      rel = relationshipIterator.next();\n+      startNode = endNode;\n+      endNode = nodeIterator.next();\n+      if (rel.getStartNode().equals(startNode) && rel.getEndNode().equals(endNode))\n+      {\n+        directionStrings.add(\"->\");\n+      } else\n+      {\n+        directionStrings.add(\"<-\");\n+      }\n     }\n+\n+    return new ListRepresentation(RepresentationType.STRING,\n+        new IterableWrapper<Representation, String>(directionStrings)\n+        {\n+          @Override\n+          protected Representation underlyingObjectToObject(String directionString)\n+          {\n+            return ValueRepresentation.string(directionString);\n+          }\n+        });\n+  }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2213",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2213/JmxAttributeRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2213/JmxAttributeRepresentation.java\nindex aa1abd87577..dc2ae47e258 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2213/JmxAttributeRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2213/JmxAttributeRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.management.repr;\n \n import java.lang.management.ManagementFactory;\n@@ -33,71 +34,70 @@ import org.neo4j.server.rest.repr.ValueRepresentation;\n public class JmxAttributeRepresentation extends ObjectRepresentation\n {\n \n-    protected ObjectName objectName;\n-    protected MBeanAttributeInfo attrInfo;\n-    protected MBeanServer jmxServer = ManagementFactory.getPlatformMBeanServer();\n-    private static final RepresentationDispatcher REPRESENTATION_DISPATCHER = new JmxAttributeRepresentationDispatcher();\n+  protected ObjectName objectName;\n+  protected MBeanAttributeInfo attrInfo;\n+  protected MBeanServer jmxServer = ManagementFactory.getPlatformMBeanServer();\n+  private static final RepresentationDispatcher REPRESENTATION_DISPATCHER = new JmxAttributeRepresentationDispatcher();\n \n-    public JmxAttributeRepresentation( ObjectName objectName, MBeanAttributeInfo attrInfo )\n-    {\n-        super( \"jmxAttribute\" );\n-        this.objectName = objectName;\n-        this.attrInfo = attrInfo;\n-    }\n+  public JmxAttributeRepresentation(ObjectName objectName, MBeanAttributeInfo attrInfo)\n+  {\n+    super(\"jmxAttribute\");\n+    this.objectName = objectName;\n+    this.attrInfo = attrInfo;\n+  }\n \n-    @Mapping( \"name\" )\n-    public ValueRepresentation getName()\n-    {\n-        return ValueRepresentation.string( attrInfo.getName() );\n-    }\n+  @Mapping(\"name\")\n+  public ValueRepresentation getName()\n+  {\n+    return ValueRepresentation.string(attrInfo.getName());\n+  }\n \n-    @Mapping( \"description\" )\n-    public ValueRepresentation getDescription()\n-    {\n-        return ValueRepresentation.string( attrInfo.getDescription() );\n-    }\n+  @Mapping(\"description\")\n+  public ValueRepresentation getDescription()\n+  {\n+    return ValueRepresentation.string(attrInfo.getDescription());\n+  }\n \n-    @Mapping( \"type\" )\n-    public ValueRepresentation getType()\n-    {\n-        return ValueRepresentation.string( attrInfo.getType() );\n-    }\n+  @Mapping(\"type\")\n+  public ValueRepresentation getType()\n+  {\n+    return ValueRepresentation.string(attrInfo.getType());\n+  }\n \n-    @Mapping( \"isReadable\" )\n-    public ValueRepresentation isReadable()\n-    {\n-        return bool( attrInfo.isReadable() );\n-    }\n+  @Mapping(\"isReadable\")\n+  public ValueRepresentation isReadable()\n+  {\n+    return bool(attrInfo.isReadable());\n+  }\n \n-    @Mapping( \"isWriteable\" )\n-    public ValueRepresentation isWriteable()\n-    {\n-        return bool( attrInfo.isWritable() );\n-    }\n+  @Mapping(\"isWriteable\")\n+  public ValueRepresentation isWriteable()\n+  {\n+    return bool(attrInfo.isWritable());\n+  }\n \n-    @Mapping( \"isIs\" )\n-    public ValueRepresentation isIs()\n-    {\n-        return bool( attrInfo.isIs() );\n-    }\n+  @Mapping(\"isIs\")\n+  public ValueRepresentation isIs()\n+  {\n+    return bool(attrInfo.isIs());\n+  }\n \n-    private ValueRepresentation bool( Boolean value )\n-    {\n-        return ValueRepresentation.string( value ? \"true\" : \"false \" );\n-    }\n+  private ValueRepresentation bool(Boolean value)\n+  {\n+    return ValueRepresentation.string(value ? \"true\" : \"false \");\n+  }\n \n-    @Mapping( \"value\" )\n-    public Representation getValue()\n+  @Mapping(\"value\")\n+  public Representation getValue()\n+  {\n+    try\n+    {\n+      Object value = jmxServer.getAttribute(objectName, attrInfo.getName());\n+      return REPRESENTATION_DISPATCHER.dispatch(value, \"\");\n+    } catch (Exception e)\n     {\n-        try\n-        {\n-            Object value = jmxServer.getAttribute( objectName, attrInfo.getName() );\n-            return REPRESENTATION_DISPATCHER.dispatch( value, \"\" );\n-        }\n-        catch ( Exception e )\n-        {\n-            return ValueRepresentation.string( \"N/A\" );\n-        }\n+      return ValueRepresentation.string(\"N/A\");\n     }\n+  }\n \n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2213/JmxAttributeRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2213/JmxAttributeRepresentation.java\nindex aa1abd87577..bd3afc2b920 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2213/JmxAttributeRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2213/JmxAttributeRepresentation.java\n@@ -32,8 +32,7 @@ import org.neo4j.server.rest.repr.ValueRepresentation;\n \n public class JmxAttributeRepresentation extends ObjectRepresentation\n {\n-\n-    protected ObjectName objectName;\n+protected ObjectName objectName;\n     protected MBeanAttributeInfo attrInfo;\n     protected MBeanServer jmxServer = ManagementFactory.getPlatformMBeanServer();\n     private static final RepresentationDispatcher REPRESENTATION_DISPATCHER = new JmxAttributeRepresentationDispatcher();\n@@ -99,5 +98,4 @@ public class JmxAttributeRepresentation extends ObjectRepresentation\n             return ValueRepresentation.string( \"N/A\" );\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
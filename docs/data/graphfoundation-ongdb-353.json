{
    "project_name": "graphfoundation-ongdb",
    "error_id": "353",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/353/ChannelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/353/ChannelContext.java\nindex e718fa7c7ef..8856b590da1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/353/ChannelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/353/ChannelContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -28,35 +29,35 @@ import static java.util.Objects.requireNonNull;\n \n public class ChannelContext\n {\n-    private final Channel channel;\n-    private final ChannelBuffer output;\n-    private final ByteBuffer input;\n-\n-    public ChannelContext( Channel channel, ChannelBuffer output, ByteBuffer input )\n-    {\n-        this.channel = requireNonNull( channel );\n-        this.output = requireNonNull( output );\n-        this.input = requireNonNull( input );\n-    }\n-\n-    public Channel channel()\n-    {\n-        return channel;\n-    }\n-\n-    public ChannelBuffer output()\n-    {\n-        return output;\n-    }\n-\n-    public ByteBuffer input()\n-    {\n-        return input;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"ChannelContext{channel=\" + channel + \", output=\" + output + \", input=\" + input + \"}\";\n-    }\n+  private final Channel channel;\n+  private final ChannelBuffer output;\n+  private final ByteBuffer input;\n+\n+  public ChannelContext(Channel channel, ChannelBuffer output, ByteBuffer input)\n+  {\n+    this.channel = requireNonNull(channel);\n+    this.output = requireNonNull(output);\n+    this.input = requireNonNull(input);\n+  }\n+\n+  public Channel channel()\n+  {\n+    return channel;\n+  }\n+\n+  public ChannelBuffer output()\n+  {\n+    return output;\n+  }\n+\n+  public ByteBuffer input()\n+  {\n+    return input;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"ChannelContext{channel=\" + channel + \", output=\" + output + \", input=\" + input + \"}\";\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/353/ChannelContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/353/ChannelContext.java\nindex e718fa7c7ef..3fa308d7c58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/353/ChannelContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/353/ChannelContext.java\n@@ -59,4 +59,4 @@ public class ChannelContext\n     {\n         return \"ChannelContext{channel=\" + channel + \", output=\" + output + \", input=\" + input + \"}\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
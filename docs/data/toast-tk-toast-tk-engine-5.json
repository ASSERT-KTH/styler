{
    "project_name": "toast-tk-toast-tk-engine",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "info",
                "message": "La ligne correspond au motif ill\u00e9gal 'more than one blank line'.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "\tprotected boolean isError;\n\t\n\tprotected boolean isFatal;\n\n\n\tpublic TestResult() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler/5/TestResult.java\nindex 96d4e5935f4..485266cbd58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler/5/TestResult.java\n@@ -17,9 +17,8 @@ public class TestResult implements ITestResult{\n \tprotected boolean isFailure;\r\n \r\n \tprotected boolean isError;\r\n-\t\r\n-\tprotected boolean isFatal;\r\n \r\n+\tprotected boolean isFatal;\r\n \r\n \tpublic TestResult() {\r\n \t\tthis(\"OK\");\r\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "21",
                    "severity": "info",
                    "message": "La ligne correspond au motif ill\u00e9gal 'more than one blank line'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/intellij/5/TestResult.java\nindex 96d4e5935f4..7f3ceeeaeed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/intellij/5/TestResult.java\n@@ -2,123 +2,123 @@ package com.synaptix.toast.core.report;\n \r\n import com.synaptix.toast.dao.domain.api.test.ITestResult;\r\n \r\n-public class TestResult implements ITestResult{\r\n-\r\n-\tprotected String message;\r\n-\r\n-\tprotected String contextualTestSentence;\r\n-\r\n-\tprotected String screenShot;\r\n-\r\n-\tprotected ResultKind resultKind;\r\n-\r\n-\tprotected boolean isSuccess;\r\n-\r\n-\tprotected boolean isFailure;\r\n-\r\n-\tprotected boolean isError;\r\n-\t\r\n-\tprotected boolean isFatal;\r\n-\r\n-\r\n-\tpublic TestResult() {\r\n-\t\tthis(\"OK\");\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\r\n-\t * \r\n-\t * @param failureMessage\r\n-\t */\r\n-\tpublic TestResult(final String message) {\r\n-\t\tthis.message = message;\r\n-\t}\r\n-\r\n-\tpublic TestResult(\r\n-\t\tfinal String message,\r\n-\t\tfinal String img\r\n-\t) {\r\n-\t\tthis.message = message;\r\n-\t\tthis.setScreenShot(img);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getMessage() {\r\n-\t\treturn message;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setMessage(final String message) {\r\n-\t\tthis.message = message;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setResultKind(final ResultKind resultKind) {\r\n-\t\tthis.resultKind = resultKind;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setContextualTestSentence(final String contextualTestSentence) {\r\n-\t\tthis.contextualTestSentence = contextualTestSentence;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getContextualTestSentence() {\r\n-\t\treturn contextualTestSentence;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getScreenShot() {\r\n-\t\treturn screenShot;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setScreenShot(final String screenShot) {\r\n-\t\tthis.screenShot = screenShot;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isSuccess() {\r\n-\t\treturn isSuccess;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isFailure() {\r\n-\t\treturn isFailure;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isError() {\r\n-\t\treturn isError;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isFatal() {\r\n-\t\treturn ResultKind.FATAL.equals(resultKind);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ResultKind getResultKind() {\r\n-\t\treturn resultKind;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsSuccess(final boolean isSuccess) {\r\n-\t\tthis.isSuccess = isSuccess;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsFailure(final boolean isFailure) {\r\n-\t\tthis.isFailure = isFailure;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsError(final boolean isError) {\r\n-\t\tthis.isError = isError;\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void setIsFatal(boolean isFatal) {\r\n-\t\tthis.isFatal = isFatal;\r\n-\t}\r\n+public class TestResult implements ITestResult {\r\n+\r\n+    protected String message;\r\n+\r\n+    protected String contextualTestSentence;\r\n+\r\n+    protected String screenShot;\r\n+\r\n+    protected ResultKind resultKind;\r\n+\r\n+    protected boolean isSuccess;\r\n+\r\n+    protected boolean isFailure;\r\n+\r\n+    protected boolean isError;\r\n+\r\n+    protected boolean isFatal;\r\n+\r\n+\r\n+    public TestResult() {\r\n+        this(\"OK\");\r\n+    }\r\n+\r\n+    /**\r\n+     * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\r\n+     *\r\n+     * @param failureMessage\r\n+     */\r\n+    public TestResult(final String message) {\r\n+        this.message = message;\r\n+    }\r\n+\r\n+    public TestResult(\r\n+        final String message,\r\n+        final String img\r\n+    ) {\r\n+        this.message = message;\r\n+        this.setScreenShot(img);\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getMessage() {\r\n+        return message;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setMessage(final String message) {\r\n+        this.message = message;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setResultKind(final ResultKind resultKind) {\r\n+        this.resultKind = resultKind;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setContextualTestSentence(final String contextualTestSentence) {\r\n+        this.contextualTestSentence = contextualTestSentence;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getContextualTestSentence() {\r\n+        return contextualTestSentence;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getScreenShot() {\r\n+        return screenShot;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setScreenShot(final String screenShot) {\r\n+        this.screenShot = screenShot;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isSuccess() {\r\n+        return isSuccess;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isFailure() {\r\n+        return isFailure;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isError() {\r\n+        return isError;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isFatal() {\r\n+        return ResultKind.FATAL.equals(resultKind);\r\n+    }\r\n+\r\n+    @Override\r\n+    public ResultKind getResultKind() {\r\n+        return resultKind;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setIsSuccess(final boolean isSuccess) {\r\n+        this.isSuccess = isSuccess;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setIsFailure(final boolean isFailure) {\r\n+        this.isFailure = isFailure;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setIsError(final boolean isError) {\r\n+        this.isError = isError;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setIsFatal(boolean isFatal) {\r\n+        this.isFatal = isFatal;\r\n+    }\r\n }\n\\ No newline at end of file\n",
            "diff_size": 119
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/codebuff/5/TestResult.java\nindex 96d4e5935f4..31ac63f3bd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/codebuff/5/TestResult.java\n@@ -1,124 +1,132 @@\n-package com.synaptix.toast.core.report;\r\n-\r\n-import com.synaptix.toast.dao.domain.api.test.ITestResult;\r\n-\r\n-public class TestResult implements ITestResult{\r\n-\r\n-\tprotected String message;\r\n-\r\n-\tprotected String contextualTestSentence;\r\n-\r\n-\tprotected String screenShot;\r\n-\r\n-\tprotected ResultKind resultKind;\r\n-\r\n-\tprotected boolean isSuccess;\r\n-\r\n-\tprotected boolean isFailure;\r\n-\r\n-\tprotected boolean isError;\r\n-\t\r\n-\tprotected boolean isFatal;\r\n-\r\n-\r\n-\tpublic TestResult() {\r\n-\t\tthis(\"OK\");\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\r\n-\t * \r\n-\t * @param failureMessage\r\n-\t */\r\n-\tpublic TestResult(final String message) {\r\n-\t\tthis.message = message;\r\n-\t}\r\n-\r\n-\tpublic TestResult(\r\n-\t\tfinal String message,\r\n-\t\tfinal String img\r\n-\t) {\r\n-\t\tthis.message = message;\r\n-\t\tthis.setScreenShot(img);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getMessage() {\r\n-\t\treturn message;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setMessage(final String message) {\r\n-\t\tthis.message = message;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setResultKind(final ResultKind resultKind) {\r\n-\t\tthis.resultKind = resultKind;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setContextualTestSentence(final String contextualTestSentence) {\r\n-\t\tthis.contextualTestSentence = contextualTestSentence;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getContextualTestSentence() {\r\n-\t\treturn contextualTestSentence;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic String getScreenShot() {\r\n-\t\treturn screenShot;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setScreenShot(final String screenShot) {\r\n-\t\tthis.screenShot = screenShot;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isSuccess() {\r\n-\t\treturn isSuccess;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isFailure() {\r\n-\t\treturn isFailure;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isError() {\r\n-\t\treturn isError;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic boolean isFatal() {\r\n-\t\treturn ResultKind.FATAL.equals(resultKind);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ResultKind getResultKind() {\r\n-\t\treturn resultKind;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsSuccess(final boolean isSuccess) {\r\n-\t\tthis.isSuccess = isSuccess;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsFailure(final boolean isFailure) {\r\n-\t\tthis.isFailure = isFailure;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void setIsError(final boolean isError) {\r\n-\t\tthis.isError = isError;\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void setIsFatal(boolean isFatal) {\r\n-\t\tthis.isFatal = isFatal;\r\n-\t}\r\n+package com.synaptix.toast.core.report;\n+\n+import com.synaptix.toast.dao.domain.api.test.ITestResult;\n+\n+public class TestResult implements ITestResult {\n+\n+ protected String message;\n+\n+ protected String contextualTestSentence;\n+\n+ protected String screenShot;\n+\n+ protected ResultKind resultKind;\n+\n+ protected boolean isSuccess;\n+\n+ protected boolean isFailure;\n+\n+ protected boolean isError;\n+\n+ protected boolean isFatal;\n+\n+ public TestResult() {\n+  this(\"OK\");\n+ }\r\n+\r\n+ /**\r\n+  * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\r\n+  * \r\n+  * @param failureMessage\r\n+  */\n+\n+ public TestResult(\n+  final String message) {\n+  this.message = message;\n+ }\n+\n+ public TestResult(\n+  final String message,\n+  final String img) {\n+  this.message = message;\n+  this.setScreenShot(img);\n+ }\n+\n+ @Override\n+ public String getMessage() {\n+  return message;\n+ }\n+\n+ @Override\n+ public void setMessage(\n+  final String message) {\n+  this.message = message;\n+ }\n+\n+ @Override\n+ public void setResultKind(\n+  final ResultKind resultKind) {\n+  this.resultKind = resultKind;\n+ }\n+\n+ @Override\n+ public void setContextualTestSentence(\n+  final String contextualTestSentence) {\n+  this.contextualTestSentence = contextualTestSentence;\n+ }\n+\n+ @Override\n+ public String getContextualTestSentence() {\n+  return contextualTestSentence;\n+ }\n+\n+ @Override\n+ public String getScreenShot() {\n+  return screenShot;\n+ }\n+\n+ @Override\n+ public void setScreenShot(\n+  final String screenShot) {\n+  this.screenShot = screenShot;\n+ }\n+\n+ @Override\n+ public boolean isSuccess() {\n+  return isSuccess;\n+ }\n+\n+ @Override\n+ public boolean isFailure() {\n+  return isFailure;\n+ }\n+\n+ @Override\n+ public boolean isError() {\n+  return isError;\n+ }\n+\n+ @Override\n+ public boolean isFatal() {\n+  return ResultKind.FATAL.equals(resultKind);\n+ }\n+\n+ @Override\n+ public ResultKind getResultKind() {\n+  return resultKind;\n+ }\n+\n+ @Override\n+ public void setIsSuccess(\n+  final boolean isSuccess) {\n+  this.isSuccess = isSuccess;\n+ }\n+\n+ @Override\n+ public void setIsFailure(\n+  final boolean isFailure) {\n+  this.isFailure = isFailure;\n+ }\n+\n+ @Override\n+ public void setIsError(\n+  final boolean isError) {\n+  this.isError = isError;\n+ }\n+\n+ @Override\n+ public void setIsFatal(\n+  boolean isFatal) {\n+  this.isFatal = isFatal;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 131
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler_random/5/TestResult.java\nindex 96d4e5935f4..485266cbd58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler_random/5/TestResult.java\n@@ -17,9 +17,8 @@ public class TestResult implements ITestResult{\n \tprotected boolean isFailure;\r\n \r\n \tprotected boolean isError;\r\n-\t\r\n-\tprotected boolean isFatal;\r\n \r\n+\tprotected boolean isFatal;\r\n \r\n \tpublic TestResult() {\r\n \t\tthis(\"OK\");\r\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler_three_grams/5/TestResult.java\nindex 96d4e5935f4..485266cbd58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/errored/1/5/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/toast-tk-toast-tk-engine/styler_three_grams/5/TestResult.java\n@@ -17,9 +17,8 @@ public class TestResult implements ITestResult{\n \tprotected boolean isFailure;\r\n \r\n \tprotected boolean isError;\r\n-\t\r\n-\tprotected boolean isFatal;\r\n \r\n+\tprotected boolean isFatal;\r\n \r\n \tpublic TestResult() {\r\n \t\tthis(\"OK\");\r\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize"
    ]
}
{
    "project_name": "DaGeRe-peass",
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "46",
                "column": "85",
                "severity": "error",
                "message": "'+' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n         final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n         FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n         valueReadingFile.setExecutable(true);\n      } catch (IOException e) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/61/CauseSearchFolders.java\nindex ac70e8f44ee..1d55e6496ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/61/CauseSearchFolders.java\n@@ -43,7 +43,7 @@ public class CauseSearchFolders extends PeassFolders {\n          clearRcaFile.setExecutable(true);\n \n          final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n+         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n          FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n          valueReadingFile.setExecutable(true);\n       } catch (IOException e) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/61/CauseSearchFolders.java\nindex ac70e8f44ee..6c16d65debd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/61/CauseSearchFolders.java\n@@ -10,78 +10,78 @@ import de.dagere.peass.dependency.analysis.data.TestCase;\n \n public class CauseSearchFolders extends PeassFolders {\n \n-   private final File levelFolder;\n-   private final File archivedFolder;\n-   private final File treeFolder;\n-   private final File treeCacheFolder;\n-\n-   public CauseSearchFolders(final File folder) {\n-      super(folder);\n-      final File rcaFolder = new File(peassFolder, \"rca\");\n-      levelFolder = new File(rcaFolder, \"level\");\n-      levelFolder.mkdir();\n-      archivedFolder = new File(rcaFolder, \"archived\");\n-      archivedFolder.mkdir();\n-      treeFolder = new File(rcaFolder, \"tree\");\n-      treeFolder.mkdir();\n-      treeCacheFolder = new File(rcaFolder, \"treeCache\");\n-      treeCacheFolder.mkdir();\n-\n-      copyScripts();\n-   }\n-\n-   private void copyScripts() {\n-      try {\n-         final URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n-         final File getProgressFile = new File(peassFolder, \"getProgress.sh\");\n-         FileUtils.copyURLToFile(getProgressScript, getProgressFile);\n-         getProgressFile.setExecutable(true);\n-\n-         final URL clearRcaScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/clearRCA.sh\");\n-         final File clearRcaFile = new File(peassFolder, \"clearRCA.sh\");\n-         FileUtils.copyURLToFile(clearRcaScript, clearRcaFile);\n-         clearRcaFile.setExecutable(true);\n-\n-         final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n-         FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n-         valueReadingFile.setExecutable(true);\n-      } catch (IOException e) {\n-         e.printStackTrace();\n-      }\n-\n-   }\n-\n-   @Override\n-   public File getDetailResultFolder() {\n-      return levelFolder;\n-   }\n-\n-   public File getArchiveResultFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n-      if (!folder.exists()) {\n-         folder.mkdirs();\n-      }\n-      return folder;\n-   }\n-\n-   public File getArchivedFolder() {\n-      return archivedFolder;\n-   }\n-\n-   public File getRcaTreeFolder() {\n-      return treeFolder;\n-   }\n-\n-   public File getRcaTreeFolder(final String version, final TestCase testcase) {\n-      final File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n-      return treeDataFolder;\n-   }\n-\n-   public File getTreeCacheFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+  private final File levelFolder;\n+  private final File archivedFolder;\n+  private final File treeFolder;\n+  private final File treeCacheFolder;\n+\n+  public CauseSearchFolders(final File folder) {\n+    super(folder);\n+    final File rcaFolder = new File(peassFolder, \"rca\");\n+    levelFolder = new File(rcaFolder, \"level\");\n+    levelFolder.mkdir();\n+    archivedFolder = new File(rcaFolder, \"archived\");\n+    archivedFolder.mkdir();\n+    treeFolder = new File(rcaFolder, \"tree\");\n+    treeFolder.mkdir();\n+    treeCacheFolder = new File(rcaFolder, \"treeCache\");\n+    treeCacheFolder.mkdir();\n+\n+    copyScripts();\n+  }\n+\n+  private void copyScripts() {\n+    try {\n+      final URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n+      final File getProgressFile = new File(peassFolder, \"getProgress.sh\");\n+      FileUtils.copyURLToFile(getProgressScript, getProgressFile);\n+      getProgressFile.setExecutable(true);\n+\n+      final URL clearRcaScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/clearRCA.sh\");\n+      final File clearRcaFile = new File(peassFolder, \"clearRCA.sh\");\n+      FileUtils.copyURLToFile(clearRcaScript, clearRcaFile);\n+      clearRcaFile.setExecutable(true);\n+\n+      final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n+      final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n+      FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n+      valueReadingFile.setExecutable(true);\n+    } catch (IOException e) {\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  @Override\n+  public File getDetailResultFolder() {\n+    return levelFolder;\n+  }\n+\n+  public File getArchiveResultFolder(final String version, final TestCase testcase) {\n+    final File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+    if (!folder.exists()) {\n       folder.mkdirs();\n-      return folder;\n-   }\n+    }\n+    return folder;\n+  }\n+\n+  public File getArchivedFolder() {\n+    return archivedFolder;\n+  }\n+\n+  public File getRcaTreeFolder() {\n+    return treeFolder;\n+  }\n+\n+  public File getRcaTreeFolder(final String version, final TestCase testcase) {\n+    final File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n+    return treeDataFolder;\n+  }\n+\n+  public File getTreeCacheFolder(final String version, final TestCase testcase) {\n+    final File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+    folder.mkdirs();\n+    return folder;\n+  }\n \n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/61/CauseSearchFolders.java\nindex ac70e8f44ee..ed8a96667ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/61/CauseSearchFolders.java\n@@ -9,14 +9,13 @@ import org.apache.commons.io.FileUtils;\n import de.dagere.peass.dependency.analysis.data.TestCase;\n \n public class CauseSearchFolders extends PeassFolders {\n-\n-   private final File levelFolder;\n+\tprivate final File levelFolder;\n    private final File archivedFolder;\n    private final File treeFolder;\n    private final File treeCacheFolder;\n \n    public CauseSearchFolders(final File folder) {\n-      super(folder);\n+\tsuper(folder);\n       final File rcaFolder = new File(peassFolder, \"rca\");\n       levelFolder = new File(rcaFolder, \"level\");\n       levelFolder.mkdir();\n@@ -28,11 +27,11 @@ public class CauseSearchFolders extends PeassFolders {\n       treeCacheFolder.mkdir();\n \n       copyScripts();\n-   }\n+\t}\n \n    private void copyScripts() {\n-      try {\n-         final URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n+\ttry {\n+\tfinal URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n          final File getProgressFile = new File(peassFolder, \"getProgress.sh\");\n          FileUtils.copyURLToFile(getProgressScript, getProgressFile);\n          getProgressFile.setExecutable(true);\n@@ -43,45 +42,43 @@ public class CauseSearchFolders extends PeassFolders {\n          clearRcaFile.setExecutable(true);\n \n          final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n+         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n          FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n          valueReadingFile.setExecutable(true);\n-      } catch (IOException e) {\n-         e.printStackTrace();\n-      }\n-\n-   }\n+\t} catch (IOException e) {\n+\te.printStackTrace();\n+\t}\n+\t}\n \n    @Override\n    public File getDetailResultFolder() {\n-      return levelFolder;\n-   }\n+\treturn levelFolder;\n+\t}\n \n    public File getArchiveResultFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+\tfinal File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n       if (!folder.exists()) {\n-         folder.mkdirs();\n-      }\n+\tfolder.mkdirs();\n+\t}\n       return folder;\n-   }\n+\t}\n \n    public File getArchivedFolder() {\n-      return archivedFolder;\n-   }\n+\treturn archivedFolder;\n+\t}\n \n    public File getRcaTreeFolder() {\n-      return treeFolder;\n-   }\n+\treturn treeFolder;\n+\t}\n \n    public File getRcaTreeFolder(final String version, final TestCase testcase) {\n-      final File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n+\tfinal File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n       return treeDataFolder;\n-   }\n+\t}\n \n    public File getTreeCacheFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+\tfinal File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n       folder.mkdirs();\n       return folder;\n-   }\n-\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/61/CauseSearchFolders.java\nindex ac70e8f44ee..7bf26a7df7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/61/CauseSearchFolders.java\n@@ -3,85 +3,80 @@ package de.dagere.peass.dependency;\n import java.io.File;\n import java.io.IOException;\n import java.net.URL;\n-\n import org.apache.commons.io.FileUtils;\n-\n import de.dagere.peass.dependency.analysis.data.TestCase;\n \n-public class CauseSearchFolders extends PeassFolders {\n-\n-   private final File levelFolder;\n-   private final File archivedFolder;\n-   private final File treeFolder;\n-   private final File treeCacheFolder;\n-\n-   public CauseSearchFolders(final File folder) {\n-      super(folder);\n-      final File rcaFolder = new File(peassFolder, \"rca\");\n-      levelFolder = new File(rcaFolder, \"level\");\n-      levelFolder.mkdir();\n-      archivedFolder = new File(rcaFolder, \"archived\");\n-      archivedFolder.mkdir();\n-      treeFolder = new File(rcaFolder, \"tree\");\n-      treeFolder.mkdir();\n-      treeCacheFolder = new File(rcaFolder, \"treeCache\");\n-      treeCacheFolder.mkdir();\n-\n-      copyScripts();\n-   }\n-\n-   private void copyScripts() {\n-      try {\n-         final URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n-         final File getProgressFile = new File(peassFolder, \"getProgress.sh\");\n-         FileUtils.copyURLToFile(getProgressScript, getProgressFile);\n-         getProgressFile.setExecutable(true);\n-\n-         final URL clearRcaScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/clearRCA.sh\");\n-         final File clearRcaFile = new File(peassFolder, \"clearRCA.sh\");\n-         FileUtils.copyURLToFile(clearRcaScript, clearRcaFile);\n-         clearRcaFile.setExecutable(true);\n-\n-         final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n-         FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n-         valueReadingFile.setExecutable(true);\n-      } catch (IOException e) {\n-         e.printStackTrace();\n-      }\n \n-   }\n-\n-   @Override\n-   public File getDetailResultFolder() {\n-      return levelFolder;\n-   }\n-\n-   public File getArchiveResultFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n-      if (!folder.exists()) {\n-         folder.mkdirs();\n-      }\n-      return folder;\n-   }\n-\n-   public File getArchivedFolder() {\n-      return archivedFolder;\n-   }\n-\n-   public File getRcaTreeFolder() {\n-      return treeFolder;\n-   }\n-\n-   public File getRcaTreeFolder(final String version, final TestCase testcase) {\n-      final File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n-      return treeDataFolder;\n-   }\n-\n-   public File getTreeCacheFolder(final String version, final TestCase testcase) {\n-      final File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n-      folder.mkdirs();\n-      return folder;\n-   }\n-\n-}\n+public class CauseSearchFolders extends PeassFolders {\n+ private final File levelFolder;\n+ private final File archivedFolder;\n+ private final File treeFolder;\n+ private final File treeCacheFolder;\n+\n+ public CauseSearchFolders(final File folder) {\n+  super(folder);\n+  final File rcaFolder = new File(peassFolder, \"rca\");\n+  levelFolder = new File(rcaFolder, \"level\");\n+  levelFolder.mkdir();\n+  archivedFolder = new File(rcaFolder, \"archived\");\n+  archivedFolder.mkdir();\n+  treeFolder = new File(rcaFolder, \"tree\");\n+  treeFolder.mkdir();\n+  treeCacheFolder = new File(rcaFolder, \"treeCache\");\n+  treeCacheFolder.mkdir();\n+  copyScripts();\n+ }\n+\n+ private void copyScripts() {\n+  try {\n+   final URL getProgressScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getProgress.sh\");\n+   final File getProgressFile = new File(peassFolder, \"getProgress.sh\");\n+   FileUtils.copyURLToFile(getProgressScript, getProgressFile);\n+   getProgressFile.setExecutable(true);\n+\n+   final URL clearRcaScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/clearRCA.sh\");\n+   final File clearRcaFile = new File(peassFolder, \"clearRCA.sh\");\n+   FileUtils.copyURLToFile(clearRcaScript, clearRcaFile);\n+   clearRcaFile.setExecutable(true);\n+\n+   final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n+   final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n+   FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n+   valueReadingFile.setExecutable(true);\n+  } catch (IOException e) {\n+   e.printStackTrace();\n+  }\n+ }\n+\n+ @Override\n+ public File getDetailResultFolder() {\n+  return levelFolder;\n+ }\n+\n+ public File getArchiveResultFolder(final String version, final TestCase testcase) {\n+  final File folder = new File(archivedFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+  if (!folder.exists()) {\n+   folder.mkdirs();\n+  }\n+  return folder;\n+ }\n+\n+ public File getArchivedFolder() {\n+  return archivedFolder;\n+ }\n+\n+ public File getRcaTreeFolder() {\n+  return treeFolder;\n+ }\n+\n+ public File getRcaTreeFolder(final String version, final TestCase testcase) {\n+  final File treeDataFolder = new File(treeFolder, version + File.separator + testcase.getShortClazz());\n+  return treeDataFolder;\n+ }\n+\n+ public File getTreeCacheFolder(final String version, final TestCase testcase) {\n+  final File folder = new File(treeCacheFolder, version + File.separator + testcase.getClazz() + File.separator + testcase.getMethod());\n+  folder.mkdirs();\n+  return folder;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 116
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/61/CauseSearchFolders.java\nindex ac70e8f44ee..1d55e6496ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/61/CauseSearchFolders.java\n@@ -43,7 +43,7 @@ public class CauseSearchFolders extends PeassFolders {\n          clearRcaFile.setExecutable(true);\n \n          final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n+         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n          FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n          valueReadingFile.setExecutable(true);\n       } catch (IOException e) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/61/CauseSearchFolders.java\nindex ac70e8f44ee..1d55e6496ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/61/CauseSearchFolders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/61/CauseSearchFolders.java\n@@ -43,7 +43,7 @@ public class CauseSearchFolders extends PeassFolders {\n          clearRcaFile.setExecutable(true);\n \n          final URL valueReadingScript = CauseSearchFolders.class.getClassLoader().getResource(\"copy/getIntermediaryValues.sh\");\n-         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator +\"getIntermediaryValues.sh\");\n+         final File valueReadingFile = new File(peassFolder, \"rca\" + File.separator + \"getIntermediaryValues.sh\");\n          FileUtils.copyURLToFile(valueReadingScript, valueReadingFile);\n          valueReadingFile.setExecutable(true);\n       } catch (IOException e) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
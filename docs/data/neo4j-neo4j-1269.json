{
    "project_name": "neo4j-neo4j",
    "error_id": "1269",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "105",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1269/FusionIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1269/FusionIndexPopulator.java\nindex 5e4aaa9194b..ae0fb549b8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1269/FusionIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1269/FusionIndexPopulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import java.util.ArrayList;\n@@ -44,9 +45,9 @@ class FusionIndexPopulator extends FusionIndexBase<IndexPopulator> implements In\n     private final boolean archiveFailedIndex;\n     private final IndexFiles indexFiles;\n \n-    FusionIndexPopulator( SlotSelector slotSelector, InstanceSelector<IndexPopulator> instanceSelector, IndexFiles indexFiles, boolean archiveFailedIndex )\n+    FusionIndexPopulator(SlotSelector slotSelector, InstanceSelector<IndexPopulator> instanceSelector, IndexFiles indexFiles, boolean archiveFailedIndex)\n     {\n-        super( slotSelector, instanceSelector );\n+        super(slotSelector, instanceSelector);\n         this.archiveFailedIndex = archiveFailedIndex;\n         this.indexFiles = indexFiles;\n     }\n@@ -54,95 +55,95 @@ class FusionIndexPopulator extends FusionIndexBase<IndexPopulator> implements In\n     @Override\n     public void create()\n     {\n-        if ( archiveFailedIndex )\n+        if (archiveFailedIndex)\n         {\n             indexFiles.archiveIndex();\n         }\n         indexFiles.clear();\n-        instanceSelector.forAll( IndexPopulator::create );\n+        instanceSelector.forAll(IndexPopulator::create);\n     }\n \n     @Override\n     public void drop()\n     {\n-        instanceSelector.forAll( IndexPopulator::drop );\n+        instanceSelector.forAll(IndexPopulator::drop);\n         indexFiles.clear();\n     }\n \n     @Override\n-    public void add( Collection<? extends IndexEntryUpdate<?>> updates, PageCursorTracer cursorTracer ) throws IndexEntryConflictException\n+    public void add(Collection<? extends IndexEntryUpdate<?>> updates, PageCursorTracer cursorTracer) throws IndexEntryConflictException\n     {\n-        LazyInstanceSelector<Collection<IndexEntryUpdate<?>>> batchSelector = new LazyInstanceSelector<>( slot -> new ArrayList<>() );\n-        for ( IndexEntryUpdate<?> update : updates )\n+        LazyInstanceSelector<Collection<IndexEntryUpdate<?>>> batchSelector = new LazyInstanceSelector<>(slot -> new ArrayList<>());\n+        for (IndexEntryUpdate<?> update : updates)\n         {\n-            batchSelector.select( slotSelector.selectSlot( ((ValueIndexEntryUpdate<?>) update).values(), CATEGORY_OF ) ).add( update );\n+            batchSelector.select(slotSelector.selectSlot(((ValueIndexEntryUpdate<?>) update).values(), CATEGORY_OF)).add(update);\n         }\n \n         // Manual loop due do multiple exception types\n-        for ( IndexSlot slot : IndexSlot.values() )\n+        for (IndexSlot slot : IndexSlot.values())\n         {\n-            Collection<IndexEntryUpdate<?>> batch = batchSelector.getIfInstantiated( slot );\n-            if ( batch != null )\n+            Collection<IndexEntryUpdate<?>> batch = batchSelector.getIfInstantiated(slot);\n+            if (batch != null)\n             {\n-                this.instanceSelector.select( slot ).add( batch, cursorTracer );\n+                this.instanceSelector.select(slot).add(batch, cursorTracer);\n             }\n         }\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( NodePropertyAccessor nodePropertyAccessor ) throws IndexEntryConflictException\n+    public void verifyDeferredConstraints(NodePropertyAccessor nodePropertyAccessor) throws IndexEntryConflictException\n     {\n         // Manual loop due do multiple exception types\n-        for ( IndexSlot slot : IndexSlot.values() )\n+        for (IndexSlot slot : IndexSlot.values())\n         {\n-            instanceSelector.select( slot ).verifyDeferredConstraints( nodePropertyAccessor );\n+            instanceSelector.select(slot).verifyDeferredConstraints(nodePropertyAccessor);\n         }\n     }\n \n     @Override\n-    public IndexUpdater newPopulatingUpdater( NodePropertyAccessor accessor, PageCursorTracer cursorTracer )\n+    public IndexUpdater newPopulatingUpdater(NodePropertyAccessor accessor, PageCursorTracer cursorTracer)\n     {\n         LazyInstanceSelector<IndexUpdater> updaterSelector =\n-                new LazyInstanceSelector<>( slot -> instanceSelector.select( slot ).newPopulatingUpdater( accessor, cursorTracer ) );\n-        return new FusionIndexUpdater( slotSelector, updaterSelector );\n+          new LazyInstanceSelector<>(slot -> instanceSelector.select(slot).newPopulatingUpdater(accessor, cursorTracer));\n+        return new FusionIndexUpdater(slotSelector, updaterSelector);\n     }\n \n     @Override\n-    public void close( boolean populationCompletedSuccessfully, PageCursorTracer cursorTracer )\n+    public void close(boolean populationCompletedSuccessfully, PageCursorTracer cursorTracer)\n     {\n-        instanceSelector.close( populator -> populator.close( populationCompletedSuccessfully, cursorTracer ) );\n+        instanceSelector.close(populator -> populator.close(populationCompletedSuccessfully, cursorTracer));\n     }\n \n     @Override\n-    public void markAsFailed( String failure )\n+    public void markAsFailed(String failure)\n     {\n-        instanceSelector.forAll( populator -> populator.markAsFailed( failure ) );\n+        instanceSelector.forAll(populator -> populator.markAsFailed(failure));\n     }\n \n     @Override\n-    public void includeSample( IndexEntryUpdate<?> update )\n+    public void includeSample(IndexEntryUpdate<?> update)\n     {\n-        instanceSelector.select( slotSelector.selectSlot( ((ValueIndexEntryUpdate<?>) update).values(), CATEGORY_OF ) ).includeSample( update );\n+        instanceSelector.select(slotSelector.selectSlot(((ValueIndexEntryUpdate<?>) update).values(), CATEGORY_OF)).includeSample(update);\n     }\n \n     @Override\n-    public IndexSample sample( PageCursorTracer cursorTracer )\n+    public IndexSample sample(PageCursorTracer cursorTracer)\n     {\n-        return combineSamples( instanceSelector.transform( ( IndexPopulator populator ) -> populator.sample( cursorTracer ) ) );\n+        return combineSamples(instanceSelector.transform((IndexPopulator populator) -> populator.sample(cursorTracer)));\n     }\n \n     @Override\n-    public void scanCompleted( PhaseTracker phaseTracker, PopulationWorkScheduler populationWorkScheduler, PageCursorTracer cursorTracer )\n-            throws IndexEntryConflictException\n+    public void scanCompleted(PhaseTracker phaseTracker, PopulationWorkScheduler populationWorkScheduler, PageCursorTracer cursorTracer)\n+      throws IndexEntryConflictException\n     {\n-        instanceSelector.throwingForAll( ip -> ip.scanCompleted( phaseTracker, populationWorkScheduler, cursorTracer ) );\n+        instanceSelector.throwingForAll(ip -> ip.scanCompleted(phaseTracker, populationWorkScheduler, cursorTracer));\n     }\n \n     @Override\n-    public Map<String,Value> indexConfig()\n+    public Map<String, Value> indexConfig()\n     {\n-        Map<String,Value> indexConfig = new HashMap<>();\n-        instanceSelector.transform( IndexPopulator::indexConfig ).forEach( source -> IndexConfigProvider.putAllNoOverwrite( indexConfig, source ) );\n+        Map<String, Value> indexConfig = new HashMap<>();\n+        instanceSelector.transform(IndexPopulator::indexConfig).forEach(source -> IndexConfigProvider.putAllNoOverwrite(indexConfig, source));\n         return indexConfig;\n     }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
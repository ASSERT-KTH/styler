{
    "project_name": "intuit-Tank",
    "error_id": "204",
    "information": {
        "errors": [
            {
                "line": "139",
                "column": "80",
                "severity": "warning",
                "message": "'{' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                }\n                try {\n                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/204/VariableDialog.java\nindex 8059f8098c0..a9c4e1f2b34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/204/VariableDialog.java\n@@ -136,7 +136,7 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n                     table.getCellEditor().stopCellEditing();\n                 }\n                 try {\n-                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n+                    ((DefaultTableModel) table.getModel()).addRow(new Object[] {\"Key\", \"Value\" });\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/204/VariableDialog.java\nindex 8059f8098c0..a4bff8cff54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/204/VariableDialog.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.tools.debugger;\n \n /*\n@@ -45,135 +46,134 @@ import org.apache.commons.lang3.StringUtils;\n \n /**\n  * StepDialog\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class VariableDialog extends JDialog implements ListSelectionListener {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    private JTable table;\n-    private AgentDebuggerFrame f;\n-    private JButton deleteBT;\n-\n-    public VariableDialog(AgentDebuggerFrame f, Map<String, String> variables) {\n-        super(f, true);\n-        this.f = f;\n-        setLayout(new BorderLayout());\n-        setTitle(\"View Edit Project Variables\");\n-        DefaultTableModel model = new DefaultTableModel();\n-        model.addColumn(\"Variable Name\");\n-        model.addColumn(\"Variable Value\");\n-        List<String> keys = new ArrayList<String>(variables.keySet());\n-        Collections.sort(keys);\n-        for (String key : keys) {\n-            Object[] data = new Object[2];\n-            data[0] = key;\n-            data[1] = variables.get(key);\n-            model.addRow(data);\n-        }\n-        table = new JTable(model);\n-        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n-        table.getSelectionModel().addListSelectionListener(this);\n-        table.setGridColor(Color.GRAY);\n-        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n-        table.setBorder(BorderFactory.createLineBorder(Color.GRAY));\n-        table.setShowGrid(true);\n-        table.getTableHeader().setReorderingAllowed(false);\n-\n-        JScrollPane sp = new JScrollPane(table);\n-        JPanel panel = new JPanel(new BorderLayout());\n-\n-        panel.add(table.getTableHeader(), BorderLayout.NORTH);\n-        panel.add(sp, BorderLayout.CENTER);\n-\n-        add(panel, BorderLayout.CENTER);\n-        add(createButtonPanel(), BorderLayout.SOUTH);\n-        setSize(new Dimension(800, 600));\n-        setBounds(new Rectangle(getSize()));\n-        setPreferredSize(getSize());\n-        WindowUtil.centerOnParent(this);\n-    }\n-\n-    /**\n-     * @return\n-     */\n-    private Component createButtonPanel() {\n-        JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEADING, 10, 5));\n-        JButton saveBT = new JButton(\"Save\");\n-        saveBT.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent arg0) {\n-                if (table.isEditing()) {\n-                    table.getCellEditor().stopCellEditing();\n-                }\n-                Map<String, String> ret = new HashMap<String, String>();\n-                for (int row = 0; row < table.getModel().getRowCount(); row++) {\n-                    String key = (String) table.getModel().getValueAt(row, 0);\n-                    String value = (String) table.getModel().getValueAt(row, 1);\n-                    if (StringUtils.isNotBlank(key) && StringUtils.isNotBlank(value)) {\n-                        ret.put(key, value);\n-                    }\n-                }\n-                f.setProjectVariables(ret);\n-                setVisible(false);\n-            }\n-        });\n-        panel.add(saveBT);\n-\n-        JButton cancelBT = new JButton(\"Close\");\n-        cancelBT.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent arg0) {\n-                setVisible(false);\n-            }\n-        });\n-        panel.add(cancelBT);\n-\n-        JButton addBt = new JButton(\"Add Variable\");\n-        addBt.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent arg0) {\n-                if (table.isEditing()) {\n-                    table.getCellEditor().stopCellEditing();\n-                }\n-                try {\n-                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        });\n-        panel.add(addBt);\n-\n-        deleteBT = new JButton(\"Delete Variable\");\n-        deleteBT.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent arg0) {\n-                if (table.isEditing()) {\n-                    table.getCellEditor().stopCellEditing();\n-                }\n-                try {\n-                    int selectedRow = table.getSelectedRow();\n-                    ((DefaultTableModel) table.getModel()).removeRow(table.getSelectedRow());\n-                    if (selectedRow > 0) {\n-                        table.getSelectionModel().setSelectionInterval(selectedRow - 1, selectedRow - 1);\n-                    } else if (table.getRowCount() > 0) {\n-                        table.getSelectionModel().setSelectionInterval(0, 0);\n-                    } else {\n-                        table.getSelectionModel().clearSelection();\n-                    }\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        });\n-        deleteBT.setEnabled(false);\n-        panel.add(deleteBT);\n-        return panel;\n-    }\n-\n-    @Override\n-    public void valueChanged(ListSelectionEvent e) {\n-        deleteBT.setEnabled(table.getSelectedRow() != -1);\n-\n+  private static final long serialVersionUID = 1L;\n+\n+  private JTable table;\n+  private AgentDebuggerFrame f;\n+  private JButton deleteBT;\n+\n+  public VariableDialog(AgentDebuggerFrame f, Map<String, String> variables) {\n+    super(f, true);\n+    this.f = f;\n+    setLayout(new BorderLayout());\n+    setTitle(\"View Edit Project Variables\");\n+    DefaultTableModel model = new DefaultTableModel();\n+    model.addColumn(\"Variable Name\");\n+    model.addColumn(\"Variable Value\");\n+    List<String> keys = new ArrayList<String>(variables.keySet());\n+    Collections.sort(keys);\n+    for (String key : keys) {\n+      Object[] data = new Object[2];\n+      data[0] = key;\n+      data[1] = variables.get(key);\n+      model.addRow(data);\n     }\n+    table = new JTable(model);\n+    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n+    table.getSelectionModel().addListSelectionListener(this);\n+    table.setGridColor(Color.GRAY);\n+    table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n+    table.setBorder(BorderFactory.createLineBorder(Color.GRAY));\n+    table.setShowGrid(true);\n+    table.getTableHeader().setReorderingAllowed(false);\n+\n+    JScrollPane sp = new JScrollPane(table);\n+    JPanel panel = new JPanel(new BorderLayout());\n+\n+    panel.add(table.getTableHeader(), BorderLayout.NORTH);\n+    panel.add(sp, BorderLayout.CENTER);\n+\n+    add(panel, BorderLayout.CENTER);\n+    add(createButtonPanel(), BorderLayout.SOUTH);\n+    setSize(new Dimension(800, 600));\n+    setBounds(new Rectangle(getSize()));\n+    setPreferredSize(getSize());\n+    WindowUtil.centerOnParent(this);\n+  }\n+\n+  /**\n+   * @return\n+   */\n+  private Component createButtonPanel() {\n+    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEADING, 10, 5));\n+    JButton saveBT = new JButton(\"Save\");\n+    saveBT.addActionListener(new ActionListener() {\n+      public void actionPerformed(ActionEvent arg0) {\n+        if (table.isEditing()) {\n+          table.getCellEditor().stopCellEditing();\n+        }\n+        Map<String, String> ret = new HashMap<String, String>();\n+        for (int row = 0; row < table.getModel().getRowCount(); row++) {\n+          String key = (String) table.getModel().getValueAt(row, 0);\n+          String value = (String) table.getModel().getValueAt(row, 1);\n+          if (StringUtils.isNotBlank(key) && StringUtils.isNotBlank(value)) {\n+            ret.put(key, value);\n+          }\n+        }\n+        f.setProjectVariables(ret);\n+        setVisible(false);\n+      }\n+    });\n+    panel.add(saveBT);\n+\n+    JButton cancelBT = new JButton(\"Close\");\n+    cancelBT.addActionListener(new ActionListener() {\n+      public void actionPerformed(ActionEvent arg0) {\n+        setVisible(false);\n+      }\n+    });\n+    panel.add(cancelBT);\n+\n+    JButton addBt = new JButton(\"Add Variable\");\n+    addBt.addActionListener(new ActionListener() {\n+      public void actionPerformed(ActionEvent arg0) {\n+        if (table.isEditing()) {\n+          table.getCellEditor().stopCellEditing();\n+        }\n+        try {\n+          ((DefaultTableModel) table.getModel()).addRow(new Object[] {\"Key\", \"Value\"});\n+        } catch (Exception e) {\n+          e.printStackTrace();\n+        }\n+      }\n+    });\n+    panel.add(addBt);\n+\n+    deleteBT = new JButton(\"Delete Variable\");\n+    deleteBT.addActionListener(new ActionListener() {\n+      public void actionPerformed(ActionEvent arg0) {\n+        if (table.isEditing()) {\n+          table.getCellEditor().stopCellEditing();\n+        }\n+        try {\n+          int selectedRow = table.getSelectedRow();\n+          ((DefaultTableModel) table.getModel()).removeRow(table.getSelectedRow());\n+          if (selectedRow > 0) {\n+            table.getSelectionModel().setSelectionInterval(selectedRow - 1, selectedRow - 1);\n+          } else if (table.getRowCount() > 0) {\n+            table.getSelectionModel().setSelectionInterval(0, 0);\n+          } else {\n+            table.getSelectionModel().clearSelection();\n+          }\n+        } catch (Exception e) {\n+          e.printStackTrace();\n+        }\n+      }\n+    });\n+    deleteBT.setEnabled(false);\n+    panel.add(deleteBT);\n+    return panel;\n+  }\n+\n+  @Override\n+  public void valueChanged(ListSelectionEvent e) {\n+    deleteBT.setEnabled(table.getSelectedRow() != -1);\n+\n+  }\n \n }\n",
            "diff_size": 228
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "139",
                    "column": "80",
                    "severity": "warning",
                    "message": "'{' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/204/VariableDialog.java\nindex 8059f8098c0..d70e0399500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/204/VariableDialog.java\n@@ -176,4 +176,4 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/204/VariableDialog.java\nindex 8059f8098c0..b06285948de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/204/VariableDialog.java\n@@ -16,6 +16,8 @@ package com.intuit.tank.tools.debugger;\n  * #L%\n  */\n \n+\n+\n import java.awt.BorderLayout;\n import java.awt.Color;\n import java.awt.Component;\n@@ -29,7 +31,6 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import javax.swing.BorderFactory;\n import javax.swing.JButton;\n import javax.swing.JDialog;\n@@ -40,7 +41,6 @@ import javax.swing.ListSelectionModel;\n import javax.swing.event.ListSelectionEvent;\n import javax.swing.event.ListSelectionListener;\n import javax.swing.table.DefaultTableModel;\n-\n import org.apache.commons.lang3.StringUtils;\n \n /**\n@@ -49,10 +49,11 @@ import org.apache.commons.lang3.StringUtils;\n  * @author dangleton\n  * \n  */\n+\n+\n public class VariableDialog extends JDialog implements ListSelectionListener {\n \n     private static final long serialVersionUID = 1L;\n-\n     private JTable table;\n     private AgentDebuggerFrame f;\n     private JButton deleteBT;\n@@ -81,13 +82,10 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n         table.setBorder(BorderFactory.createLineBorder(Color.GRAY));\n         table.setShowGrid(true);\n         table.getTableHeader().setReorderingAllowed(false);\n-\n         JScrollPane sp = new JScrollPane(table);\n         JPanel panel = new JPanel(new BorderLayout());\n-\n         panel.add(table.getTableHeader(), BorderLayout.NORTH);\n         panel.add(sp, BorderLayout.CENTER);\n-\n         add(panel, BorderLayout.CENTER);\n         add(createButtonPanel(), BorderLayout.SOUTH);\n         setSize(new Dimension(800, 600));\n@@ -99,6 +97,7 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n     /**\n      * @return\n      */\n+\n     private Component createButtonPanel() {\n         JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEADING, 10, 5));\n         JButton saveBT = new JButton(\"Save\");\n@@ -120,7 +119,6 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n             }\n         });\n         panel.add(saveBT);\n-\n         JButton cancelBT = new JButton(\"Close\");\n         cancelBT.addActionListener(new ActionListener() {\n             public void actionPerformed(ActionEvent arg0) {\n@@ -128,7 +126,6 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n             }\n         });\n         panel.add(cancelBT);\n-\n         JButton addBt = new JButton(\"Add Variable\");\n         addBt.addActionListener(new ActionListener() {\n             public void actionPerformed(ActionEvent arg0) {\n@@ -136,14 +133,16 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n                     table.getCellEditor().stopCellEditing();\n                 }\n                 try {\n-                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n+                    ((DefaultTableModel) table.getModel()).addRow(new Object[] {\n+                        \"Key\",\n+                        \"Value\"\n+                                });\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n             }\n         });\n         panel.add(addBt);\n-\n         deleteBT = new JButton(\"Delete Variable\");\n         deleteBT.addActionListener(new ActionListener() {\n             public void actionPerformed(ActionEvent arg0) {\n@@ -173,7 +172,6 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n     @Override\n     public void valueChanged(ListSelectionEvent e) {\n         deleteBT.setEnabled(table.getSelectedRow() != -1);\n-\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/204/VariableDialog.java\nindex 8059f8098c0..a9c4e1f2b34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/204/VariableDialog.java\n@@ -136,7 +136,7 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n                     table.getCellEditor().stopCellEditing();\n                 }\n                 try {\n-                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n+                    ((DefaultTableModel) table.getModel()).addRow(new Object[] {\"Key\", \"Value\" });\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/204/VariableDialog.java\nindex 8059f8098c0..3dd4f4bd089 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/204/VariableDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/204/VariableDialog.java\n@@ -136,7 +136,7 @@ public class VariableDialog extends JDialog implements ListSelectionListener {\n                     table.getCellEditor().stopCellEditing();\n                 }\n                 try {\n-                    ((DefaultTableModel) table.getModel()).addRow(new Object[] { \"Key\", \"Value\" });\n+                    ((DefaultTableModel) table.getModel()).addRow(new Object[]{\"Key\", \"Value\" });\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
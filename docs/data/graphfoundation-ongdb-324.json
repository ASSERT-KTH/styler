{
    "project_name": "graphfoundation-ongdb",
    "error_id": "324",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/324/TransitionalPeriodTransactionMessContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/324/TransitionalPeriodTransactionMessContainer.java\nindex 8f802183db5..83f7920c008 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/324/TransitionalPeriodTransactionMessContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/324/TransitionalPeriodTransactionMessContainer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import java.util.Map;\n@@ -38,39 +39,39 @@ import org.neo4j.server.rest.web.HttpConnectionInfoFactory;\n \n public class TransitionalPeriodTransactionMessContainer\n {\n-    private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n+  private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n \n-    private final GraphDatabaseFacade db;\n-    private final ThreadToStatementContextBridge txBridge;\n+  private final GraphDatabaseFacade db;\n+  private final ThreadToStatementContextBridge txBridge;\n \n-    public TransitionalPeriodTransactionMessContainer( GraphDatabaseFacade db )\n-    {\n-        this.db = db;\n-        this.txBridge = db.getDependencyResolver().resolveDependency( ThreadToStatementContextBridge.class );\n-    }\n+  public TransitionalPeriodTransactionMessContainer(GraphDatabaseFacade db)\n+  {\n+    this.db = db;\n+    this.txBridge = db.getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class);\n+  }\n \n-    public TransitionalTxManagementKernelTransaction newTransaction( Type type, LoginContext loginContext,\n-            long customTransactionTimeout )\n-    {\n-        return new TransitionalTxManagementKernelTransaction( db, type, loginContext, customTransactionTimeout, txBridge );\n-    }\n+  public TransitionalTxManagementKernelTransaction newTransaction(Type type, LoginContext loginContext,\n+                                                                  long customTransactionTimeout)\n+  {\n+    return new TransitionalTxManagementKernelTransaction(db, type, loginContext, customTransactionTimeout, txBridge);\n+  }\n \n-    ThreadToStatementContextBridge getBridge()\n-    {\n-        return txBridge;\n-    }\n+  ThreadToStatementContextBridge getBridge()\n+  {\n+    return txBridge;\n+  }\n \n-    public TransactionalContext create(\n-            HttpServletRequest request,\n-            GraphDatabaseQueryService service,\n-            Type type,\n-            LoginContext loginContext,\n-            String query,\n-            Map<String, Object> queryParameters )\n-    {\n-        TransactionalContextFactory contextFactory = Neo4jTransactionalContextFactory.create( service, locker );\n-        ClientConnectionInfo clientConnection = HttpConnectionInfoFactory.create( request );\n-        InternalTransaction transaction = service.beginTransaction( type, loginContext );\n-        return contextFactory.newContext( clientConnection, transaction, query, ValueUtils.asMapValue( queryParameters ) );\n-    }\n+  public TransactionalContext create(\n+      HttpServletRequest request,\n+      GraphDatabaseQueryService service,\n+      Type type,\n+      LoginContext loginContext,\n+      String query,\n+      Map<String, Object> queryParameters)\n+  {\n+    TransactionalContextFactory contextFactory = Neo4jTransactionalContextFactory.create(service, locker);\n+    ClientConnectionInfo clientConnection = HttpConnectionInfoFactory.create(request);\n+    InternalTransaction transaction = service.beginTransaction(type, loginContext);\n+    return contextFactory.newContext(clientConnection, transaction, query, ValueUtils.asMapValue(queryParameters));\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/324/TransitionalPeriodTransactionMessContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/324/TransitionalPeriodTransactionMessContainer.java\nindex 8f802183db5..c9fe947f447 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/324/TransitionalPeriodTransactionMessContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/324/TransitionalPeriodTransactionMessContainer.java\n@@ -60,17 +60,15 @@ public class TransitionalPeriodTransactionMessContainer\n         return txBridge;\n     }\n \n-    public TransactionalContext create(\n-            HttpServletRequest request,\n+    public TransactionalContext create( HttpServletRequest request,\n             GraphDatabaseQueryService service,\n             Type type,\n             LoginContext loginContext,\n-            String query,\n-            Map<String, Object> queryParameters )\n+            String query, Map<String,Object> queryParameters )\n     {\n         TransactionalContextFactory contextFactory = Neo4jTransactionalContextFactory.create( service, locker );\n         ClientConnectionInfo clientConnection = HttpConnectionInfoFactory.create( request );\n         InternalTransaction transaction = service.beginTransaction( type, loginContext );\n         return contextFactory.newContext( clientConnection, transaction, query, ValueUtils.asMapValue( queryParameters ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
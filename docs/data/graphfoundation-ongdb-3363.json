{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3363",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "277",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "295",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "304",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "376",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "379",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "390",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3363/BackupProtocolService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3363/BackupProtocolService.java\nindex a9f1e8c9d03..310861994da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3363/BackupProtocolService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3363/BackupProtocolService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.io.File;\n@@ -90,410 +91,396 @@ import static org.neo4j.kernel.impl.pagecache.ConfigurableStandalonePageCacheFac\n  */\n public class BackupProtocolService\n {\n-    static final String TOO_OLD_BACKUP = \"It's been too long since this backup was last updated, and it has \" +\n-            \"fallen too far behind the database transaction stream for incremental backup to be possible. You need to\" +\n-            \" perform a full backup at this point. You can modify this time interval by setting the '\" +\n-            GraphDatabaseSettings.keep_logical_logs.name() + \"' configuration on the database to a higher value.\";\n-\n-    static final String DIFFERENT_STORE_MESSAGE = \"Target directory contains full backup of a logically different store.\";\n-\n-    private final Supplier<FileSystemAbstraction> fileSystemSupplier;\n-    private final LogProvider logProvider;\n-    private final Log log;\n-    private final OutputStream logDestination;\n-    private final Monitors monitors;\n-    private final PageCache pageCache;\n-\n-    public BackupProtocolService()\n+  static final String TOO_OLD_BACKUP = \"It's been too long since this backup was last updated, and it has \" +\n+      \"fallen too far behind the database transaction stream for incremental backup to be possible. You need to\" +\n+      \" perform a full backup at this point. You can modify this time interval by setting the '\" +\n+      GraphDatabaseSettings.keep_logical_logs.name() + \"' configuration on the database to a higher value.\";\n+\n+  static final String DIFFERENT_STORE_MESSAGE = \"Target directory contains full backup of a logically different store.\";\n+\n+  private final Supplier<FileSystemAbstraction> fileSystemSupplier;\n+  private final LogProvider logProvider;\n+  private final Log log;\n+  private final OutputStream logDestination;\n+  private final Monitors monitors;\n+  private final PageCache pageCache;\n+\n+  public BackupProtocolService()\n+  {\n+    this(System.out);\n+  }\n+\n+  public BackupProtocolService(OutputStream logDestination)\n+  {\n+    this(DefaultFileSystemAbstraction::new, FormattedLogProvider.toOutputStream(logDestination), logDestination, new Monitors(),\n+        createPageCache(new DefaultFileSystemAbstraction()));\n+  }\n+\n+  BackupProtocolService(Supplier<FileSystemAbstraction> fileSystemSupplier, LogProvider logProvider, OutputStream logDestination, Monitors monitors,\n+                        @Nullable PageCache pageCache)\n+  {\n+    this.fileSystemSupplier = fileSystemSupplier;\n+    this.logProvider = logProvider;\n+    this.log = logProvider.getLog(getClass());\n+    this.logDestination = logDestination;\n+    this.monitors = monitors;\n+    this.pageCache = pageCache;\n+  }\n+\n+  public BackupOutcome doFullBackup(final String sourceHostNameOrIp, final int sourcePort, Path targetDirectory,\n+                                    ConsistencyCheck consistencyCheck, Config tuningConfiguration,\n+                                    final long timeout, final boolean forensics)\n+  {\n+    try (FileSystemAbstraction fileSystem = fileSystemSupplier.get())\n     {\n-        this( System.out );\n-    }\n-\n-    public BackupProtocolService( OutputStream logDestination )\n+      return fullBackup(fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n+          tuningConfiguration, timeout, forensics);\n+    } catch (IOException e)\n     {\n-        this( DefaultFileSystemAbstraction::new, FormattedLogProvider.toOutputStream( logDestination ), logDestination, new Monitors(),\n-                createPageCache( new DefaultFileSystemAbstraction() ) );\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    BackupProtocolService( Supplier<FileSystemAbstraction> fileSystemSupplier, LogProvider logProvider, OutputStream logDestination, Monitors monitors,\n-            @Nullable PageCache pageCache )\n+  private BackupOutcome fullBackup(FileSystemAbstraction fileSystem, String sourceHostNameOrIp, int sourcePort,\n+                                   Path targetDirectory, ConsistencyCheck consistencyCheck, Config tuningConfiguration, long timeout, boolean forensics)\n+  {\n+    try\n     {\n-        this.fileSystemSupplier = fileSystemSupplier;\n-        this.logProvider = logProvider;\n-        this.log = logProvider.getLog( getClass() );\n-        this.logDestination = logDestination;\n-        this.monitors = monitors;\n-        this.pageCache = pageCache;\n-    }\n-\n-    public BackupOutcome doFullBackup( final String sourceHostNameOrIp, final int sourcePort, Path targetDirectory,\n-                                       ConsistencyCheck consistencyCheck, Config tuningConfiguration,\n-                                       final long timeout, final boolean forensics )\n+      if (!directoryIsEmpty(targetDirectory))\n+      {\n+        throw new RuntimeException(\n+            \"Can only perform a full backup into an empty directory but \" + targetDirectory +\n+                \" is not empty\");\n+      }\n+      long timestamp = System.currentTimeMillis();\n+      long lastCommittedTx = -1;\n+      StoreCopyClient storeCopier = new StoreCopyClient(targetDirectory.toFile(), tuningConfiguration,\n+          loadKernelExtensions(), logProvider, fileSystem, pageCache,\n+          monitors.newMonitor(StoreCopyClientMonitor.class, getClass()), forensics);\n+      FullBackupStoreCopyRequester storeCopyRequester =\n+          new FullBackupStoreCopyRequester(sourceHostNameOrIp, sourcePort, timeout, forensics, monitors);\n+      storeCopier.copyStore(\n+          storeCopyRequester,\n+          CancellationRequest.NEVER_CANCELLED,\n+          MoveAfterCopy.moveReplaceExisting());\n+\n+      tuningConfiguration.augment(logs_directory, targetDirectory.toRealPath().toString());\n+      File debugLogFile = tuningConfiguration.get(store_internal_log_path);\n+      bumpDebugDotLogFileVersion(debugLogFile, timestamp);\n+      boolean consistent = checkDbConsistency(fileSystem, targetDirectory, consistencyCheck, tuningConfiguration, pageCache);\n+      clearIdFiles(fileSystem, targetDirectory);\n+      return new BackupOutcome(lastCommittedTx, consistent);\n+    } catch (RuntimeException e)\n     {\n-        try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n-        {\n-            return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n-                    tuningConfiguration, timeout, forensics );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      throw e;\n+    } catch (Exception e)\n+    {\n+      throw new RuntimeException(e);\n     }\n-\n-    private BackupOutcome fullBackup( FileSystemAbstraction fileSystem, String sourceHostNameOrIp, int sourcePort,\n-            Path targetDirectory, ConsistencyCheck consistencyCheck, Config tuningConfiguration, long timeout, boolean forensics )\n+  }\n+\n+  public BackupOutcome doIncrementalBackup(\n+      String sourceHostNameOrIp, int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck,\n+      long timeout, Config config)\n+      throws IncrementalBackupNotPossibleException\n+  {\n+    try (FileSystemAbstraction fileSystem = fileSystemSupplier.get())\n     {\n-        try\n-        {\n-            if ( !directoryIsEmpty( targetDirectory ) )\n-            {\n-                throw new RuntimeException(\n-                        \"Can only perform a full backup into an empty directory but \" + targetDirectory +\n-                        \" is not empty\" );\n-            }\n-            long timestamp = System.currentTimeMillis();\n-            long lastCommittedTx = -1;\n-            StoreCopyClient storeCopier = new StoreCopyClient( targetDirectory.toFile(), tuningConfiguration,\n-                    loadKernelExtensions(), logProvider, fileSystem, pageCache,\n-                    monitors.newMonitor( StoreCopyClientMonitor.class, getClass() ), forensics );\n-            FullBackupStoreCopyRequester storeCopyRequester =\n-                    new FullBackupStoreCopyRequester( sourceHostNameOrIp, sourcePort, timeout, forensics, monitors );\n-            storeCopier.copyStore(\n-                    storeCopyRequester,\n-                    CancellationRequest.NEVER_CANCELLED,\n-                    MoveAfterCopy.moveReplaceExisting() );\n-\n-            tuningConfiguration.augment( logs_directory, targetDirectory.toRealPath().toString() );\n-            File debugLogFile = tuningConfiguration.get( store_internal_log_path );\n-            bumpDebugDotLogFileVersion( debugLogFile, timestamp );\n-            boolean consistent = checkDbConsistency( fileSystem, targetDirectory, consistencyCheck, tuningConfiguration, pageCache );\n-            clearIdFiles( fileSystem, targetDirectory );\n-            return new BackupOutcome( lastCommittedTx, consistent );\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            throw e;\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      return incrementalBackup(fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n+          timeout, config);\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    public BackupOutcome doIncrementalBackup(\n-            String sourceHostNameOrIp, int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck,\n-            long timeout, Config config )\n-            throws IncrementalBackupNotPossibleException\n+  private BackupOutcome incrementalBackup(FileSystemAbstraction fileSystem, String sourceHostNameOrIp,\n+                                          int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck, long timeout, Config config)\n+  {\n+    try\n     {\n-        try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n-        {\n-            return incrementalBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n-                    timeout, config );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      if (!directoryContainsDb(targetDirectory))\n+      {\n+        throw new RuntimeException(targetDirectory + \" doesn't contain a database\");\n+      }\n+\n+      Map<String, String> temporaryDbConfig = getTemporaryDbConfig();\n+      config.augment(temporaryDbConfig);\n+\n+      Map<String, String> configParams = config.getRaw();\n+      GraphDatabaseAPI targetDb = startTemporaryDb(targetDirectory, pageCache, configParams);\n+      long backupStartTime = System.currentTimeMillis();\n+      long lastCommittedTx;\n+      try\n+      {\n+        lastCommittedTx = incrementalWithContext(sourceHostNameOrIp, sourcePort, targetDb, timeout, slaveContextOf(targetDb));\n+      } finally\n+      {\n+        targetDb.shutdown();\n+      }\n+      config.augment(logs_directory, targetDirectory.toRealPath().toString());\n+      File debugLogFile = config.get(store_internal_log_path);\n+      bumpDebugDotLogFileVersion(debugLogFile, backupStartTime);\n+      boolean consistent = checkDbConsistency(fileSystem, targetDirectory, consistencyCheck, config, pageCache);\n+      clearIdFiles(fileSystem, targetDirectory);\n+      return new BackupOutcome(lastCommittedTx, consistent);\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private BackupOutcome incrementalBackup( FileSystemAbstraction fileSystem, String sourceHostNameOrIp,\n-            int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck, long timeout, Config config )\n+  private boolean checkDbConsistency(FileSystemAbstraction fileSystem, Path targetDirectory,\n+                                     ConsistencyCheck consistencyCheck, Config tuningConfiguration, PageCache pageCache)\n+  {\n+    boolean consistent = false;\n+    try\n     {\n-        try\n-        {\n-            if ( !directoryContainsDb( targetDirectory ) )\n-            {\n-                throw new RuntimeException( targetDirectory + \" doesn't contain a database\" );\n-            }\n-\n-            Map<String,String> temporaryDbConfig = getTemporaryDbConfig();\n-            config.augment( temporaryDbConfig );\n-\n-            Map<String,String> configParams = config.getRaw();\n-            GraphDatabaseAPI targetDb = startTemporaryDb( targetDirectory, pageCache, configParams );\n-            long backupStartTime = System.currentTimeMillis();\n-            long lastCommittedTx;\n-            try\n-            {\n-                lastCommittedTx = incrementalWithContext( sourceHostNameOrIp, sourcePort, targetDb, timeout, slaveContextOf( targetDb ) );\n-            }\n-            finally\n-            {\n-                targetDb.shutdown();\n-            }\n-            config.augment( logs_directory, targetDirectory.toRealPath().toString() );\n-            File debugLogFile = config.get( store_internal_log_path );\n-            bumpDebugDotLogFileVersion( debugLogFile, backupStartTime );\n-            boolean consistent = checkDbConsistency( fileSystem, targetDirectory, consistencyCheck, config, pageCache );\n-            clearIdFiles( fileSystem, targetDirectory );\n-            return new BackupOutcome( lastCommittedTx, consistent );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      consistent = consistencyCheck.runFull(targetDirectory, tuningConfiguration,\n+          ProgressMonitorFactory.textual(logDestination), logProvider, fileSystem, pageCache, false,\n+          new ConsistencyFlags(tuningConfiguration));\n+    } catch (ConsistencyCheckFailedException e)\n+    {\n+      log.error(\"Consistency check incomplete\", e);\n     }\n-\n-    private boolean checkDbConsistency( FileSystemAbstraction fileSystem, Path targetDirectory,\n-            ConsistencyCheck consistencyCheck, Config tuningConfiguration, PageCache pageCache )\n+    return consistent;\n+  }\n+\n+  private Map<String, String> getTemporaryDbConfig()\n+  {\n+    Map<String, String> tempDbConfig = new HashMap<>();\n+    tempDbConfig.put(OnlineBackupSettings.online_backup_enabled.name(), Settings.FALSE);\n+    // In case someone deleted the logical log from a full backup\n+    tempDbConfig.put(GraphDatabaseSettings.keep_logical_logs.name(), Settings.TRUE);\n+    tempDbConfig.put(GraphDatabaseSettings.pagecache_warmup_enabled.name(), Settings.FALSE);\n+    return tempDbConfig;\n+  }\n+\n+  public BackupOutcome doIncrementalBackupOrFallbackToFull(String sourceHostNameOrIp, int sourcePort,\n+                                                           Path targetDirectory,\n+                                                           ConsistencyCheck consistencyCheck, Config config,\n+                                                           long timeout, boolean forensics)\n+  {\n+    try (FileSystemAbstraction fileSystem = fileSystemSupplier.get())\n     {\n-        boolean consistent = false;\n+      if (directoryIsEmpty(targetDirectory))\n+      {\n+        log.info(\"Previous backup not found, a new full backup will be performed.\");\n+        return fullBackup(fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n+            config, timeout, forensics);\n+      }\n+      try\n+      {\n+        log.info(\"Previous backup found, trying incremental backup.\");\n+        return incrementalBackup(fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory,\n+            consistencyCheck, timeout, config);\n+      } catch (IncrementalBackupNotPossibleException e)\n+      {\n         try\n         {\n-            consistent = consistencyCheck.runFull( targetDirectory, tuningConfiguration,\n-                    ProgressMonitorFactory.textual( logDestination ), logProvider, fileSystem, pageCache, false,\n-                            new ConsistencyFlags( tuningConfiguration ) );\n-        }\n-        catch ( ConsistencyCheckFailedException e )\n+          log.warn(\"Attempt to do incremental backup failed.\", e);\n+          log.info(\"Existing backup is too far out of date, a new full backup will be performed.\");\n+          FileUtils.deletePathRecursively(targetDirectory);\n+          return fullBackup(fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n+              config, timeout, forensics);\n+        } catch (Exception fullBackupFailure)\n         {\n-            log.error( \"Consistency check incomplete\", e );\n+          RuntimeException exception = new RuntimeException(\n+              \"Failed to perform incremental backup, fell back to full backup, but that failed as \" +\n+                  \"well: '\" + fullBackupFailure.getMessage() + \"'.\", fullBackupFailure);\n+          exception.addSuppressed(e);\n+          throw exception;\n         }\n-        return consistent;\n-    }\n-\n-    private Map<String,String> getTemporaryDbConfig()\n+      }\n+    } catch (RuntimeException e)\n     {\n-        Map<String,String> tempDbConfig = new HashMap<>();\n-        tempDbConfig.put( OnlineBackupSettings.online_backup_enabled.name(), Settings.FALSE );\n-        // In case someone deleted the logical log from a full backup\n-        tempDbConfig.put( GraphDatabaseSettings.keep_logical_logs.name(), Settings.TRUE );\n-        tempDbConfig.put( GraphDatabaseSettings.pagecache_warmup_enabled.name(), Settings.FALSE );\n-        return tempDbConfig;\n-    }\n-\n-    public BackupOutcome doIncrementalBackupOrFallbackToFull( String sourceHostNameOrIp, int sourcePort,\n-                                                              Path targetDirectory,\n-                                                              ConsistencyCheck consistencyCheck, Config config,\n-                                                              long timeout, boolean forensics )\n+      if (rootCause(e) instanceof UpgradeNotAllowedByConfigurationException)\n+      {\n+        throw new UnexpectedStoreVersionException(\n+            \"Failed to perform backup because existing backup is from a different version.\", e);\n+      }\n+\n+      throw e;\n+    } catch (IOException io)\n     {\n-        try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n-        {\n-            if ( directoryIsEmpty( targetDirectory ) )\n-            {\n-                log.info( \"Previous backup not found, a new full backup will be performed.\" );\n-                return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n-                        config, timeout, forensics );\n-            }\n-            try\n-            {\n-                log.info( \"Previous backup found, trying incremental backup.\" );\n-                return incrementalBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory,\n-                        consistencyCheck, timeout, config );\n-            }\n-            catch ( IncrementalBackupNotPossibleException e )\n-            {\n-                try\n-                {\n-                    log.warn( \"Attempt to do incremental backup failed.\", e );\n-                    log.info( \"Existing backup is too far out of date, a new full backup will be performed.\" );\n-                    FileUtils.deletePathRecursively( targetDirectory );\n-                    return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n-                            config, timeout, forensics );\n-                }\n-                catch ( Exception fullBackupFailure )\n-                {\n-                    RuntimeException exception = new RuntimeException(\n-                            \"Failed to perform incremental backup, fell back to full backup, but that failed as \" +\n-                            \"well: '\" + fullBackupFailure.getMessage() + \"'.\", fullBackupFailure );\n-                    exception.addSuppressed( e );\n-                    throw exception;\n-                }\n-            }\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            if ( rootCause( e ) instanceof UpgradeNotAllowedByConfigurationException )\n-            {\n-                throw new UnexpectedStoreVersionException(\n-                        \"Failed to perform backup because existing backup is from a different version.\", e );\n-            }\n-\n-            throw e;\n-        }\n-        catch ( IOException io )\n-        {\n-            throw new RuntimeException( io );\n-        }\n+      throw new RuntimeException(io);\n     }\n-\n-    public BackupOutcome doIncrementalBackup( String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n-                                              long timeout ) throws IncrementalBackupNotPossibleException\n+  }\n+\n+  public BackupOutcome doIncrementalBackup(String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n+                                           long timeout) throws IncrementalBackupNotPossibleException\n+  {\n+    long lastCommittedTransaction = incrementalWithContext(sourceHostNameOrIp, sourcePort, targetDb, timeout,\n+        slaveContextOf(targetDb));\n+    return new BackupOutcome(lastCommittedTransaction, true);\n+  }\n+\n+  private RequestContext slaveContextOf(GraphDatabaseAPI graphDb)\n+  {\n+    TransactionIdStore transactionIdStore = graphDb.getDependencyResolver().resolveDependency(\n+        TransactionIdStore.class);\n+    return anonymous(transactionIdStore.getLastCommittedTransactionId());\n+  }\n+\n+  private boolean directoryContainsDb(Path targetDirectory)\n+  {\n+    return Files.isRegularFile(targetDirectory.resolve(MetaDataStore.DEFAULT_NAME));\n+  }\n+\n+  private boolean directoryIsEmpty(Path dir) throws IOException\n+  {\n+    return Files.notExists(dir) || Files.isDirectory(dir) && FileUtils.countFilesInDirectoryPath(dir) == 0;\n+  }\n+\n+  static GraphDatabaseAPI startTemporaryDb(\n+      Path targetDirectory, PageCache pageCache, Map<String, String> config)\n+  {\n+    GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache(pageCache);\n+    return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder(targetDirectory.toFile())\n+        .setConfig(config)\n+        .setConfig(OnlineBackupSettings.online_backup_enabled, Settings.FALSE)\n+        .newGraphDatabase();\n+  }\n+\n+  /**\n+   * Performs an incremental backup based off the given context. This means\n+   * receiving and applying selectively (i.e. irrespective of the actual state\n+   * of the target db) a set of transactions starting at the desired txId and\n+   * spanning up to the latest of the master\n+   *\n+   * @param targetDb The database that contains a previous full copy\n+   * @param context  The context, containing transaction id to start streaming transaction from\n+   * @return last committed transaction id\n+   */\n+  private long incrementalWithContext(String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n+                                      long timeout, RequestContext context) throws IncrementalBackupNotPossibleException\n+  {\n+    DependencyResolver resolver = targetDb.getDependencyResolver();\n+\n+    ProgressTxHandler handler = new ProgressTxHandler();\n+    TransactionCommittingResponseUnpacker unpacker = new TransactionCommittingResponseUnpacker(\n+        resolver, DEFAULT_BATCH_SIZE, 0);\n+\n+    Monitors monitors = resolver.resolveDependency(Monitors.class);\n+    LogProvider logProvider = resolver.resolveDependency(LogService.class).getInternalLogProvider();\n+    BackupClient client = new BackupClient(sourceHostNameOrIp, sourcePort, null, logProvider, targetDb.storeId(),\n+        timeout, unpacker, monitors.newMonitor(ByteCounterMonitor.class, BackupClient.class),\n+        monitors.newMonitor(RequestMonitor.class, BackupClient.class), new VersionAwareLogEntryReader<>());\n+\n+    try (Lifespan lifespan = new Lifespan(unpacker, client))\n     {\n-        long lastCommittedTransaction = incrementalWithContext( sourceHostNameOrIp, sourcePort, targetDb, timeout,\n-                slaveContextOf( targetDb ) );\n-        return new BackupOutcome( lastCommittedTransaction, true );\n-    }\n-\n-    private RequestContext slaveContextOf( GraphDatabaseAPI graphDb )\n+      try (Response<Void> response = client.incrementalBackup(context))\n+      {\n+        unpacker.unpackResponse(response, handler);\n+      }\n+    } catch (MismatchingStoreIdException e)\n     {\n-        TransactionIdStore transactionIdStore = graphDb.getDependencyResolver().resolveDependency(\n-                TransactionIdStore.class );\n-        return anonymous( transactionIdStore.getLastCommittedTransactionId() );\n-    }\n-\n-    private boolean directoryContainsDb( Path targetDirectory )\n+      throw new RuntimeException(DIFFERENT_STORE_MESSAGE, e);\n+    } catch (RuntimeException | IOException e)\n     {\n-        return Files.isRegularFile( targetDirectory.resolve( MetaDataStore.DEFAULT_NAME ) );\n+      if (e.getCause() != null && e.getCause() instanceof MissingLogDataException)\n+      {\n+        throw new IncrementalBackupNotPossibleException(TOO_OLD_BACKUP, e.getCause());\n+      }\n+      if (e.getCause() != null && e.getCause() instanceof ConnectException)\n+      {\n+        throw new RuntimeException(e.getMessage(), e.getCause());\n+      }\n+      throw new RuntimeException(\"Failed to perform incremental backup.\", e);\n+    } catch (Throwable throwable)\n+    {\n+      throw new RuntimeException(\"Unexpected error\", throwable);\n     }\n \n-    private boolean directoryIsEmpty( Path dir ) throws IOException\n+    return handler.getLastSeenTransactionId();\n+  }\n+\n+  private static boolean bumpDebugDotLogFileVersion(final File debugLogFile, final long toTimestamp)\n+  {\n+    if (!debugLogFile.exists())\n     {\n-        return Files.notExists( dir ) || Files.isDirectory( dir ) && FileUtils.countFilesInDirectoryPath( dir ) == 0;\n+      return false;\n     }\n-\n-    static GraphDatabaseAPI startTemporaryDb(\n-            Path targetDirectory, PageCache pageCache, Map<String,String> config )\n+    // Build to, from existing parent + new filename\n+    File to = new File(debugLogFile.getParentFile(), debugLogFile.getName() + \".\" + toTimestamp);\n+    return debugLogFile.renameTo(to);\n+  }\n+\n+  private List<KernelExtensionFactory<?>> loadKernelExtensions()\n+  {\n+    List<KernelExtensionFactory<?>> kernelExtensions = new ArrayList<>();\n+    for (KernelExtensionFactory<?> factory : Service.load(KernelExtensionFactory.class))\n     {\n-        GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache( pageCache );\n-        return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder( targetDirectory.toFile() )\n-                .setConfig( config )\n-                .setConfig( OnlineBackupSettings.online_backup_enabled, Settings.FALSE )\n-                .newGraphDatabase();\n+      kernelExtensions.add(factory);\n     }\n+    return kernelExtensions;\n+  }\n \n-    /**\n-     * Performs an incremental backup based off the given context. This means\n-     * receiving and applying selectively (i.e. irrespective of the actual state\n-     * of the target db) a set of transactions starting at the desired txId and\n-     * spanning up to the latest of the master\n-     *\n-     * @param targetDb The database that contains a previous full copy\n-     * @param context The context, containing transaction id to start streaming transaction from\n-     * @return last committed transaction id\n-     */\n-    private long incrementalWithContext( String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n-            long timeout, RequestContext context ) throws IncrementalBackupNotPossibleException\n+  private void clearIdFiles(FileSystemAbstraction fileSystem, Path targetDirectory) throws IOException\n+  {\n+    File dir = targetDirectory.toFile();\n+    for (File file : fileSystem.listFiles(dir))\n     {\n-        DependencyResolver resolver = targetDb.getDependencyResolver();\n-\n-        ProgressTxHandler handler = new ProgressTxHandler();\n-        TransactionCommittingResponseUnpacker unpacker = new TransactionCommittingResponseUnpacker(\n-                resolver, DEFAULT_BATCH_SIZE, 0 );\n-\n-        Monitors monitors = resolver.resolveDependency( Monitors.class );\n-        LogProvider logProvider = resolver.resolveDependency( LogService.class ).getInternalLogProvider();\n-        BackupClient client = new BackupClient( sourceHostNameOrIp, sourcePort, null, logProvider, targetDb.storeId(),\n-                timeout, unpacker, monitors.newMonitor( ByteCounterMonitor.class, BackupClient.class ),\n-                monitors.newMonitor( RequestMonitor.class, BackupClient.class ), new VersionAwareLogEntryReader<>() );\n-\n-        try ( Lifespan lifespan = new Lifespan( unpacker, client ) )\n-        {\n-            try ( Response<Void> response = client.incrementalBackup( context ) )\n-            {\n-                unpacker.unpackResponse( response, handler );\n-            }\n-        }\n-        catch ( MismatchingStoreIdException e )\n-        {\n-            throw new RuntimeException( DIFFERENT_STORE_MESSAGE, e );\n-        }\n-        catch ( RuntimeException | IOException e )\n-        {\n-            if ( e.getCause() != null && e.getCause() instanceof MissingLogDataException )\n-            {\n-                throw new IncrementalBackupNotPossibleException( TOO_OLD_BACKUP, e.getCause() );\n-            }\n-            if ( e.getCause() != null && e.getCause() instanceof ConnectException )\n-            {\n-                throw new RuntimeException( e.getMessage(), e.getCause() );\n-            }\n-            throw new RuntimeException( \"Failed to perform incremental backup.\", e );\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            throw new RuntimeException( \"Unexpected error\", throwable );\n-        }\n-\n-        return handler.getLastSeenTransactionId();\n+      if (!fileSystem.isDirectory(file) && file.getName().endsWith(\".id\"))\n+      {\n+        long highId = IdGeneratorImpl.readHighId(fileSystem, file);\n+        fileSystem.deleteFile(file);\n+        IdGeneratorImpl.createGenerator(fileSystem, file, highId, true);\n+      }\n     }\n+  }\n \n-    private static boolean bumpDebugDotLogFileVersion( final File debugLogFile, final long toTimestamp )\n+  private static class ProgressTxHandler implements TxHandler\n+  {\n+    private long lastSeenTransactionId;\n+\n+    @Override\n+    public void accept(long transactionId)\n     {\n-        if ( !debugLogFile.exists() )\n-        {\n-            return false;\n-        }\n-        // Build to, from existing parent + new filename\n-        File to = new File( debugLogFile.getParentFile(), debugLogFile.getName() + \".\" + toTimestamp );\n-        return debugLogFile.renameTo( to );\n+      lastSeenTransactionId = transactionId;\n     }\n \n-    private List<KernelExtensionFactory<?>> loadKernelExtensions()\n+    long getLastSeenTransactionId()\n     {\n-        List<KernelExtensionFactory<?>> kernelExtensions = new ArrayList<>();\n-        for ( KernelExtensionFactory<?> factory : Service.load( KernelExtensionFactory.class ) )\n-        {\n-            kernelExtensions.add( factory );\n-        }\n-        return kernelExtensions;\n+      return lastSeenTransactionId;\n     }\n+  }\n+\n+  private static class FullBackupStoreCopyRequester implements StoreCopyClient.StoreCopyRequester\n+  {\n+    private final String sourceHostNameOrIp;\n+    private final int sourcePort;\n+    private final long timeout;\n+    private final boolean forensics;\n+    private final Monitors monitors;\n+\n+    private BackupClient client;\n \n-    private void clearIdFiles( FileSystemAbstraction fileSystem, Path targetDirectory ) throws IOException\n+    private FullBackupStoreCopyRequester(String sourceHostNameOrIp, int sourcePort, long timeout,\n+                                         boolean forensics, Monitors monitors)\n     {\n-        File dir = targetDirectory.toFile();\n-        for ( File file : fileSystem.listFiles( dir ) )\n-        {\n-            if ( !fileSystem.isDirectory( file ) && file.getName().endsWith( \".id\" ) )\n-            {\n-                long highId = IdGeneratorImpl.readHighId( fileSystem, file );\n-                fileSystem.deleteFile( file );\n-                IdGeneratorImpl.createGenerator( fileSystem, file, highId, true );\n-            }\n-        }\n+      this.sourceHostNameOrIp = sourceHostNameOrIp;\n+      this.sourcePort = sourcePort;\n+      this.timeout = timeout;\n+      this.forensics = forensics;\n+      this.monitors = monitors;\n     }\n \n-    private static class ProgressTxHandler implements TxHandler\n+    @Override\n+    public Response<?> copyStore(StoreWriter writer)\n     {\n-        private long lastSeenTransactionId;\n-\n-        @Override\n-        public void accept( long transactionId )\n-        {\n-            lastSeenTransactionId = transactionId;\n-        }\n-\n-        long getLastSeenTransactionId()\n-        {\n-            return lastSeenTransactionId;\n-        }\n+      client = new BackupClient(sourceHostNameOrIp, sourcePort, null, NullLogProvider.getInstance(),\n+          StoreId.DEFAULT, timeout, ResponseUnpacker.NO_OP_RESPONSE_UNPACKER, monitors.newMonitor(\n+          ByteCounterMonitor.class), monitors.newMonitor(RequestMonitor.class),\n+          new VersionAwareLogEntryReader<>());\n+      client.start();\n+      return client.fullBackup(writer, forensics);\n     }\n \n-    private static class FullBackupStoreCopyRequester implements StoreCopyClient.StoreCopyRequester\n+    @Override\n+    public void done()\n     {\n-        private final String sourceHostNameOrIp;\n-        private final int sourcePort;\n-        private final long timeout;\n-        private final boolean forensics;\n-        private final Monitors monitors;\n-\n-        private BackupClient client;\n-\n-        private FullBackupStoreCopyRequester( String sourceHostNameOrIp, int sourcePort, long timeout,\n-                                             boolean forensics, Monitors monitors )\n-        {\n-            this.sourceHostNameOrIp = sourceHostNameOrIp;\n-            this.sourcePort = sourcePort;\n-            this.timeout = timeout;\n-            this.forensics = forensics;\n-            this.monitors = monitors;\n-        }\n-\n-        @Override\n-        public Response<?> copyStore( StoreWriter writer )\n-        {\n-            client = new BackupClient( sourceHostNameOrIp, sourcePort, null, NullLogProvider.getInstance(),\n-                    StoreId.DEFAULT, timeout, ResponseUnpacker.NO_OP_RESPONSE_UNPACKER, monitors.newMonitor(\n-                    ByteCounterMonitor.class ), monitors.newMonitor( RequestMonitor.class ),\n-                    new VersionAwareLogEntryReader<>() );\n-            client.start();\n-            return client.fullBackup( writer, forensics );\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            client.stop();\n-        }\n+      client.stop();\n     }\n+  }\n }\n",
            "diff_size": 567
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 535).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "535",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "350",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "458",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 307).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3363/BackupProtocolService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3363/BackupProtocolService.java\nindex a9f1e8c9d03..ec4dae17801 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3363/BackupProtocolService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3363/BackupProtocolService.java\n@@ -90,14 +90,8 @@ import static org.neo4j.kernel.impl.pagecache.ConfigurableStandalonePageCacheFac\n  */\n public class BackupProtocolService\n {\n-    static final String TOO_OLD_BACKUP = \"It's been too long since this backup was last updated, and it has \" +\n-            \"fallen too far behind the database transaction stream for incremental backup to be possible. You need to\" +\n-            \" perform a full backup at this point. You can modify this time interval by setting the '\" +\n-            GraphDatabaseSettings.keep_logical_logs.name() + \"' configuration on the database to a higher value.\";\n-\n-    static final String DIFFERENT_STORE_MESSAGE = \"Target directory contains full backup of a logically different store.\";\n-\n-    private final Supplier<FileSystemAbstraction> fileSystemSupplier;\n+    static final String TOO_OLD_BACKUP = \"It's been too long since this backup was last updated, and it has \" + \"fallen too far behind the database transaction stream for incremental backup to be possible. You need to\" + \" perform a full backup at this point. You can modify this time interval by setting the '\" + GraphDatabaseSettings.keep_logical_logs.name() + \"' configuration on the database to a higher value.\"; static final String DIFFERENT_STORE_MESSAGE = \"Target directory contains full backup of a logically different store.\";\n+private final Supplier<FileSystemAbstraction> fileSystemSupplier;\n     private final LogProvider logProvider;\n     private final Log log;\n     private final OutputStream logDestination;\n@@ -126,15 +120,13 @@ public class BackupProtocolService\n         this.pageCache = pageCache;\n     }\n \n-    public BackupOutcome doFullBackup( final String sourceHostNameOrIp, final int sourcePort, Path targetDirectory,\n-                                       ConsistencyCheck consistencyCheck, Config tuningConfiguration,\n-                                       final long timeout, final boolean forensics )\n-    {\n+    public BackupOutcome doFullBackup( final String sourceHostNameOrIp, final int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck, Config tuningConfiguration, final long timeout, final boolean forensics )\n+{\n         try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n         {\n             return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n                     tuningConfiguration, timeout, forensics );\n-        }\n+    }\n         catch ( IOException e )\n         {\n             throw new RuntimeException( e );\n@@ -148,23 +140,18 @@ public class BackupProtocolService\n         {\n             if ( !directoryIsEmpty( targetDirectory ) )\n             {\n-                throw new RuntimeException(\n-                        \"Can only perform a full backup into an empty directory but \" + targetDirectory +\n-                        \" is not empty\" );\n+                throw new RuntimeException( \"Can only perform a full backup into an empty directory but \" + targetDirectory + \" is not empty\" );\n             }\n             long timestamp = System.currentTimeMillis();\n             long lastCommittedTx = -1;\n             StoreCopyClient storeCopier = new StoreCopyClient( targetDirectory.toFile(), tuningConfiguration,\n                     loadKernelExtensions(), logProvider, fileSystem, pageCache,\n                     monitors.newMonitor( StoreCopyClientMonitor.class, getClass() ), forensics );\n-            FullBackupStoreCopyRequester storeCopyRequester =\n-                    new FullBackupStoreCopyRequester( sourceHostNameOrIp, sourcePort, timeout, forensics, monitors );\n-            storeCopier.copyStore(\n-                    storeCopyRequester,\n+FullBackupStoreCopyRequester storeCopyRequester = new FullBackupStoreCopyRequester( sourceHostNameOrIp, sourcePort, timeout, forensics, monitors );\n+storeCopier.copyStore( storeCopyRequester,\n                     CancellationRequest.NEVER_CANCELLED,\n                     MoveAfterCopy.moveReplaceExisting() );\n-\n-            tuningConfiguration.augment( logs_directory, targetDirectory.toRealPath().toString() );\n+tuningConfiguration.augment( logs_directory, targetDirectory.toRealPath().toString() );\n             File debugLogFile = tuningConfiguration.get( store_internal_log_path );\n             bumpDebugDotLogFileVersion( debugLogFile, timestamp );\n             boolean consistent = checkDbConsistency( fileSystem, targetDirectory, consistencyCheck, tuningConfiguration, pageCache );\n@@ -181,24 +168,21 @@ public class BackupProtocolService\n         }\n     }\n \n-    public BackupOutcome doIncrementalBackup(\n-            String sourceHostNameOrIp, int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck,\n-            long timeout, Config config )\n-            throws IncrementalBackupNotPossibleException\n-    {\n+    public BackupOutcome doIncrementalBackup( String sourceHostNameOrIp, int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck,\n+            long timeout, Config config ) throws IncrementalBackupNotPossibleException\n+{\n         try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n         {\n             return incrementalBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n                     timeout, config );\n-        }\n+    }\n         catch ( IOException e )\n         {\n             throw new RuntimeException( e );\n         }\n     }\n \n-    private BackupOutcome incrementalBackup( FileSystemAbstraction fileSystem, String sourceHostNameOrIp,\n-            int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck, long timeout, Config config )\n+    private BackupOutcome incrementalBackup( FileSystemAbstraction fileSystem, String sourceHostNameOrIp, int sourcePort, Path targetDirectory, ConsistencyCheck consistencyCheck, long timeout, Config config )\n     {\n         try\n         {\n@@ -242,14 +226,14 @@ public class BackupProtocolService\n         try\n         {\n             consistent = consistencyCheck.runFull( targetDirectory, tuningConfiguration,\n-                    ProgressMonitorFactory.textual( logDestination ), logProvider, fileSystem, pageCache, false,\n-                            new ConsistencyFlags( tuningConfiguration ) );\n-        }\n+                    ProgressMonitorFactory.textual( logDestination ), logProvider, fileSystem, pageCache, false, new ConsistencyFlags( tuningConfiguration ) );\n+    }\n         catch ( ConsistencyCheckFailedException e )\n         {\n             log.error( \"Consistency check incomplete\", e );\n         }\n-        return consistent;\n+\n+return consistent;\n     }\n \n     private Map<String,String> getTemporaryDbConfig()\n@@ -262,11 +246,10 @@ public class BackupProtocolService\n         return tempDbConfig;\n     }\n \n-    public BackupOutcome doIncrementalBackupOrFallbackToFull( String sourceHostNameOrIp, int sourcePort,\n-                                                              Path targetDirectory,\n+    public BackupOutcome doIncrementalBackupOrFallbackToFull( String sourceHostNameOrIp, int sourcePort, Path targetDirectory,\n                                                               ConsistencyCheck consistencyCheck, Config config,\n                                                               long timeout, boolean forensics )\n-    {\n+{\n         try ( FileSystemAbstraction fileSystem = fileSystemSupplier.get() )\n         {\n             if ( directoryIsEmpty( targetDirectory ) )\n@@ -275,12 +258,13 @@ public class BackupProtocolService\n                 return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n                         config, timeout, forensics );\n             }\n-            try\n+\n+try\n             {\n                 log.info( \"Previous backup found, trying incremental backup.\" );\n                 return incrementalBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory,\n                         consistencyCheck, timeout, config );\n-            }\n+    }\n             catch ( IncrementalBackupNotPossibleException e )\n             {\n                 try\n@@ -290,13 +274,11 @@ public class BackupProtocolService\n                     FileUtils.deletePathRecursively( targetDirectory );\n                     return fullBackup( fileSystem, sourceHostNameOrIp, sourcePort, targetDirectory, consistencyCheck,\n                             config, timeout, forensics );\n-                }\n+    }\n                 catch ( Exception fullBackupFailure )\n                 {\n-                    RuntimeException exception = new RuntimeException(\n-                            \"Failed to perform incremental backup, fell back to full backup, but that failed as \" +\n-                            \"well: '\" + fullBackupFailure.getMessage() + \"'.\", fullBackupFailure );\n-                    exception.addSuppressed( e );\n+                    RuntimeException exception = new RuntimeException( \"Failed to perform incremental backup, fell back to full backup, but that failed as \" + \"well: '\" + fullBackupFailure.getMessage() + \"'.\", fullBackupFailure );\n+exception.addSuppressed( e );\n                     throw exception;\n                 }\n             }\n@@ -305,8 +287,7 @@ public class BackupProtocolService\n         {\n             if ( rootCause( e ) instanceof UpgradeNotAllowedByConfigurationException )\n             {\n-                throw new UnexpectedStoreVersionException(\n-                        \"Failed to perform backup because existing backup is from a different version.\", e );\n+                throw new UnexpectedStoreVersionException( \"Failed to perform backup because existing backup is from a different version.\", e );\n             }\n \n             throw e;\n@@ -317,19 +298,17 @@ public class BackupProtocolService\n         }\n     }\n \n-    public BackupOutcome doIncrementalBackup( String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n-                                              long timeout ) throws IncrementalBackupNotPossibleException\n-    {\n+    public BackupOutcome doIncrementalBackup( String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb, long timeout ) throws IncrementalBackupNotPossibleException\n+{\n         long lastCommittedTransaction = incrementalWithContext( sourceHostNameOrIp, sourcePort, targetDb, timeout,\n                 slaveContextOf( targetDb ) );\n-        return new BackupOutcome( lastCommittedTransaction, true );\n+return new BackupOutcome( lastCommittedTransaction, true );\n     }\n \n     private RequestContext slaveContextOf( GraphDatabaseAPI graphDb )\n     {\n-        TransactionIdStore transactionIdStore = graphDb.getDependencyResolver().resolveDependency(\n-                TransactionIdStore.class );\n-        return anonymous( transactionIdStore.getLastCommittedTransactionId() );\n+        TransactionIdStore transactionIdStore = graphDb.getDependencyResolver().resolveDependency( TransactionIdStore.class );\n+return anonymous( transactionIdStore.getLastCommittedTransactionId() );\n     }\n \n     private boolean directoryContainsDb( Path targetDirectory )\n@@ -342,14 +321,11 @@ public class BackupProtocolService\n         return Files.notExists( dir ) || Files.isDirectory( dir ) && FileUtils.countFilesInDirectoryPath( dir ) == 0;\n     }\n \n-    static GraphDatabaseAPI startTemporaryDb(\n-            Path targetDirectory, PageCache pageCache, Map<String,String> config )\n+    static GraphDatabaseAPI startTemporaryDb( Path targetDirectory, PageCache pageCache, Map<String,String> config )\n     {\n         GraphDatabaseFactory factory = ExternallyManagedPageCache.graphDatabaseFactoryWithPageCache( pageCache );\n-        return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder( targetDirectory.toFile() )\n-                .setConfig( config )\n-                .setConfig( OnlineBackupSettings.online_backup_enabled, Settings.FALSE )\n-                .newGraphDatabase();\n+        return (GraphDatabaseAPI) factory.newEmbeddedDatabaseBuilder( targetDirectory.toFile() ).setConfig( config )\n+                .setConfig( OnlineBackupSettings.online_backup_enabled, Settings.FALSE ).newGraphDatabase();\n     }\n \n     /**\n@@ -364,20 +340,16 @@ public class BackupProtocolService\n      */\n     private long incrementalWithContext( String sourceHostNameOrIp, int sourcePort, GraphDatabaseAPI targetDb,\n             long timeout, RequestContext context ) throws IncrementalBackupNotPossibleException\n-    {\n+{\n         DependencyResolver resolver = targetDb.getDependencyResolver();\n-\n-        ProgressTxHandler handler = new ProgressTxHandler();\n-        TransactionCommittingResponseUnpacker unpacker = new TransactionCommittingResponseUnpacker(\n-                resolver, DEFAULT_BATCH_SIZE, 0 );\n-\n-        Monitors monitors = resolver.resolveDependency( Monitors.class );\n+ProgressTxHandler handler = new ProgressTxHandler();\n+        TransactionCommittingResponseUnpacker unpacker = new TransactionCommittingResponseUnpacker( resolver, DEFAULT_BATCH_SIZE, 0 );\n+Monitors monitors = resolver.resolveDependency( Monitors.class );\n         LogProvider logProvider = resolver.resolveDependency( LogService.class ).getInternalLogProvider();\n         BackupClient client = new BackupClient( sourceHostNameOrIp, sourcePort, null, logProvider, targetDb.storeId(),\n-                timeout, unpacker, monitors.newMonitor( ByteCounterMonitor.class, BackupClient.class ),\n-                monitors.newMonitor( RequestMonitor.class, BackupClient.class ), new VersionAwareLogEntryReader<>() );\n+                timeout, unpacker, monitors.newMonitor( ByteCounterMonitor.class, BackupClient.class ), monitors.newMonitor( RequestMonitor.class, BackupClient.class ), new VersionAwareLogEntryReader<>() );\n \n-        try ( Lifespan lifespan = new Lifespan( unpacker, client ) )\n+try ( Lifespan lifespan = new Lifespan( unpacker, client ) )\n         {\n             try ( Response<Void> response = client.incrementalBackup( context ) )\n             {\n@@ -394,7 +366,8 @@ public class BackupProtocolService\n             {\n                 throw new IncrementalBackupNotPossibleException( TOO_OLD_BACKUP, e.getCause() );\n             }\n-            if ( e.getCause() != null && e.getCause() instanceof ConnectException )\n+\n+if ( e.getCause() != null && e.getCause() instanceof ConnectException )\n             {\n                 throw new RuntimeException( e.getMessage(), e.getCause() );\n             }\n@@ -426,7 +399,8 @@ public class BackupProtocolService\n         {\n             kernelExtensions.add( factory );\n         }\n-        return kernelExtensions;\n+\n+return kernelExtensions;\n     }\n \n     private void clearIdFiles( FileSystemAbstraction fileSystem, Path targetDirectory ) throws IOException\n@@ -469,9 +443,8 @@ public class BackupProtocolService\n \n         private BackupClient client;\n \n-        private FullBackupStoreCopyRequester( String sourceHostNameOrIp, int sourcePort, long timeout,\n-                                             boolean forensics, Monitors monitors )\n-        {\n+        private FullBackupStoreCopyRequester( String sourceHostNameOrIp, int sourcePort, long timeout, boolean forensics, Monitors monitors )\n+{\n             this.sourceHostNameOrIp = sourceHostNameOrIp;\n             this.sourcePort = sourcePort;\n             this.timeout = timeout;\n@@ -482,11 +455,8 @@ public class BackupProtocolService\n         @Override\n         public Response<?> copyStore( StoreWriter writer )\n         {\n-            client = new BackupClient( sourceHostNameOrIp, sourcePort, null, NullLogProvider.getInstance(),\n-                    StoreId.DEFAULT, timeout, ResponseUnpacker.NO_OP_RESPONSE_UNPACKER, monitors.newMonitor(\n-                    ByteCounterMonitor.class ), monitors.newMonitor( RequestMonitor.class ),\n-                    new VersionAwareLogEntryReader<>() );\n-            client.start();\n+            client = new BackupClient( sourceHostNameOrIp, sourcePort, null, NullLogProvider.getInstance(), StoreId.DEFAULT, timeout, ResponseUnpacker.NO_OP_RESPONSE_UNPACKER, monitors.newMonitor( ByteCounterMonitor.class ), monitors.newMonitor( RequestMonitor.class ), new VersionAwareLogEntryReader<>() );\n+client.start();\n             return client.fullBackup( writer, forensics );\n         }\n \n@@ -496,4 +466,4 @@ public class BackupProtocolService\n             client.stop();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
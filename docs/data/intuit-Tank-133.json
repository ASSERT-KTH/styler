{
    "project_name": "intuit-Tank",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "64",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 164).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    protected List<Script> getEntities() {\n        List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n        creatorList = new SelectItem[list.size() + 1];\n        creatorList[0] = new SelectItem(\"\", \"All\");\n        for (int i = 0; i < list.size(); i++) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/133/ScriptLoader.java\nindex c3fee59148b..c007da97884 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/133/ScriptLoader.java\n@@ -61,7 +61,8 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n     @Override\n     protected List<Script> getEntities() {\n         List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n-        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n+        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()\n+        ) .map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n         creatorList = new SelectItem[list.size() + 1];\n         creatorList[0] = new SelectItem(\"\", \"All\");\n         for (int i = 0; i < list.size(); i++) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/133/ScriptLoader.java\nindex c3fee59148b..d897d125788 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/133/ScriptLoader.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.script;\n \n /*\n@@ -34,47 +35,47 @@ import com.intuit.tank.wrapper.EntityVersionLoader;\n \n /**\n  * ScriptLoader\n- * \n+ *\n  * @author dangleton\n- * \n  */\n @Named\n @Dependent\n public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMessage> {\n \n-    private static final long serialVersionUID = 1L;\n-    private SelectItem[] creatorList;\n+  private static final long serialVersionUID = 1L;\n+  private SelectItem[] creatorList;\n \n-    /**\n-     * \n-     * @param entityMsg\n-     */\n-    public void observeEvents(@Observes ModifiedEntityMessage entityMsg) {\n-        if (entityMsg.getEntityClass() == Script.class) {\n-            invalidate();\n-        }\n+  /**\n+   * @param entityMsg\n+   */\n+  public void observeEvents(@Observes ModifiedEntityMessage entityMsg) {\n+    if (entityMsg.getEntityClass() == Script.class) {\n+      invalidate();\n     }\n+  }\n \n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    protected List<Script> getEntities() {\n-        List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n-        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n-        creatorList = new SelectItem[list.size() + 1];\n-        creatorList[0] = new SelectItem(\"\", \"All\");\n-        for (int i = 0; i < list.size(); i++) {\n-            creatorList[i + 1] = new SelectItem(list.get(i), list.get(i));\n-        }\n-        return scripts;\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  protected List<Script> getEntities() {\n+    List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n+    List<String> list =\n+      scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted()\n+        .collect(Collectors.toList());\n+    creatorList = new SelectItem[list.size() + 1];\n+    creatorList[0] = new SelectItem(\"\", \"All\");\n+    for (int i = 0; i < list.size(); i++) {\n+      creatorList[i + 1] = new SelectItem(list.get(i), list.get(i));\n     }\n+    return scripts;\n+  }\n \n-    /**\n-     * @return the creatorList\n-     */\n-    public SelectItem[] getCreatorList() {\n-        return creatorList;\n-    }\n+  /**\n+   * @return the creatorList\n+   */\n+  public SelectItem[] getCreatorList() {\n+    return creatorList;\n+  }\n \n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/133/ScriptLoader.java\nindex c3fee59148b..2b3d448b15a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/133/ScriptLoader.java\n@@ -77,4 +77,4 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n         return creatorList;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/133/ScriptLoader.java\nindex c3fee59148b..8c96d859e5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/133/ScriptLoader.java\n@@ -16,14 +16,14 @@ package com.intuit.tank.script;\n  * #L%\n  */\n \n+\n+\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import javax.enterprise.context.Dependent;\n import javax.enterprise.event.Observes;\n import javax.faces.model.SelectItem;\n import javax.inject.Named;\n-\n import com.intuit.tank.ModifiedScriptMessage;\n import com.intuit.tank.dao.ScriptDao;\n import com.intuit.tank.project.OwnableEntity;\n@@ -38,6 +38,7 @@ import com.intuit.tank.wrapper.EntityVersionLoader;\n  * @author dangleton\n  * \n  */\n+\n @Named\n @Dependent\n public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMessage> {\n@@ -49,6 +50,8 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n      * \n      * @param entityMsg\n      */\n+\n+\n     public void observeEvents(@Observes ModifiedEntityMessage entityMsg) {\n         if (entityMsg.getEntityClass() == Script.class) {\n             invalidate();\n@@ -58,10 +61,11 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     protected List<Script> getEntities() {\n         List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n-        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n+        List<String> list = scripts.stream().filter(p->!p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n         creatorList = new SelectItem[list.size() + 1];\n         creatorList[0] = new SelectItem(\"\", \"All\");\n         for (int i = 0; i < list.size(); i++) {\n@@ -73,8 +77,10 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n     /**\n      * @return the creatorList\n      */\n+\n+\n     public SelectItem[] getCreatorList() {\n         return creatorList;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/133/ScriptLoader.java\nindex c3fee59148b..c007da97884 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/133/ScriptLoader.java\n@@ -61,7 +61,8 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n     @Override\n     protected List<Script> getEntities() {\n         List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n-        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n+        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()\n+        ) .map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n         creatorList = new SelectItem[list.size() + 1];\n         creatorList[0] = new SelectItem(\"\", \"All\");\n         for (int i = 0; i < list.size(); i++) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/133/ScriptLoader.java\nindex c3fee59148b..b5e9de76784 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/133/ScriptLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/133/ScriptLoader.java\n@@ -60,8 +60,7 @@ public class ScriptLoader extends EntityVersionLoader<Script, ModifiedScriptMess\n      */\n     @Override\n     protected List<Script> getEntities() {\n-        List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);\n-        List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n+        List<Script> scripts = new ScriptDao().findFiltered(ViewFilterType.ALL);List<String> list = scripts.stream().filter(p -> !p.getCreator().isEmpty()).map(OwnableEntity::getCreator).distinct().sorted().collect(Collectors.toList());\n         creatorList = new SelectItem[list.size() + 1];\n         creatorList[0] = new SelectItem(\"\", \"All\");\n         for (int i = 0; i < list.size(); i++) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
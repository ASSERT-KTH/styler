{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3572",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3572/AcceptorState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3572/AcceptorState.java\nindex 7e640c29e92..8193a7bb443 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3572/AcceptorState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3572/AcceptorState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import org.neo4j.cluster.com.message.Message;\n@@ -27,111 +28,109 @@ import org.neo4j.cluster.statemachine.State;\n  * State machine for Paxos Acceptor\n  */\n public enum AcceptorState\n-        implements State<AcceptorContext, AcceptorMessage>\n+    implements State<AcceptorContext, AcceptorMessage>\n {\n-    start\n-            {\n-                @Override\n-                public AcceptorState handle( AcceptorContext context,\n-                                             Message<AcceptorMessage> message,\n-                                             MessageHolder outgoing\n-                )\n-                {\n-                    if ( message.getMessageType() == AcceptorMessage.join )\n-                    {\n-                        return acceptor;\n-                    }\n+  start\n+      {\n+        @Override\n+        public AcceptorState handle(AcceptorContext context,\n+                                    Message<AcceptorMessage> message,\n+                                    MessageHolder outgoing\n+        )\n+        {\n+          if (message.getMessageType() == AcceptorMessage.join)\n+          {\n+            return acceptor;\n+          }\n \n-                    return this;\n-                }\n-            },\n+          return this;\n+        }\n+      },\n \n-    acceptor\n+  acceptor\n+      {\n+        @Override\n+        public AcceptorState handle(AcceptorContext context,\n+                                    Message<AcceptorMessage> message,\n+                                    MessageHolder outgoing\n+        )\n+        {\n+          switch (message.getMessageType())\n+          {\n+            case prepare:\n             {\n-                @Override\n-                public AcceptorState handle( AcceptorContext context,\n-                                             Message<AcceptorMessage> message,\n-                                             MessageHolder outgoing\n-                )\n-                {\n-                    switch ( message.getMessageType() )\n-                    {\n-                        case prepare:\n-                        {\n-                            AcceptorMessage.PrepareState incomingState = message.getPayload();\n-                            InstanceId instanceId = new InstanceId( message );\n+              AcceptorMessage.PrepareState incomingState = message.getPayload();\n+              InstanceId instanceId = new InstanceId(message);\n \n-                            // This creates the instance if not already present\n-                            AcceptorInstance localState = context.getAcceptorInstance( instanceId );\n+              // This creates the instance if not already present\n+              AcceptorInstance localState = context.getAcceptorInstance(instanceId);\n \n-                            /*\n-                             * If the incoming messages has a ballot greater than the local one, send back a promise.\n-                             * This is always true for newly seen instances, the local state has ballot initialized\n-                             * to -1\n-                             */\n-                            if ( incomingState.getBallot() >= localState.getBallot() )\n-                            {\n-                                context.promise( localState, incomingState.getBallot() );\n+              /*\n+               * If the incoming messages has a ballot greater than the local one, send back a promise.\n+               * This is always true for newly seen instances, the local state has ballot initialized\n+               * to -1\n+               */\n+              if (incomingState.getBallot() >= localState.getBallot())\n+              {\n+                context.promise(localState, incomingState.getBallot());\n \n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.promise,\n-                                        message, new ProposerMessage.PromiseState( incomingState.getBallot(),\n-                                                localState.getValue() ) ), InstanceId.INSTANCE ) );\n-                            }\n-                            else\n-                            {\n-                                // Optimization - explicit reject\n-                                context.getLog( AcceptorState.class ).debug(\"Rejecting prepare from \"\n-                                        + message.getHeader( Message.HEADER_FROM ) + \" for instance \"\n-                                        + message.getHeader( InstanceId.INSTANCE ) + \" and ballot \"\n-                                        + incomingState.getBallot() + \" (i had a prepare state ballot = \"\n-                                        + localState.getBallot() + \")\" );\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage\n-                                        .rejectPrepare, message,\n-                                        new ProposerMessage.RejectPrepare( localState.getBallot() ) ),\n-                                        InstanceId.INSTANCE ) );\n-                            }\n-                            break;\n-                        }\n+                outgoing.offer(message.copyHeadersTo(Message.respond(ProposerMessage.promise,\n+                    message, new ProposerMessage.PromiseState(incomingState.getBallot(),\n+                        localState.getValue())), InstanceId.INSTANCE));\n+              } else\n+              {\n+                // Optimization - explicit reject\n+                context.getLog(AcceptorState.class).debug(\"Rejecting prepare from \"\n+                    + message.getHeader(Message.HEADER_FROM) + \" for instance \"\n+                    + message.getHeader(InstanceId.INSTANCE) + \" and ballot \"\n+                    + incomingState.getBallot() + \" (i had a prepare state ballot = \"\n+                    + localState.getBallot() + \")\");\n+                outgoing.offer(message.copyHeadersTo(Message.respond(ProposerMessage\n+                        .rejectPrepare, message,\n+                    new ProposerMessage.RejectPrepare(localState.getBallot())),\n+                    InstanceId.INSTANCE));\n+              }\n+              break;\n+            }\n \n-                        case accept:\n-                        {\n-                            // Task 4\n-                            AcceptorMessage.AcceptState acceptState = message.getPayload();\n-                            InstanceId instanceId = new InstanceId( message );\n-                            AcceptorInstance instance = context.getAcceptorInstance( instanceId );\n+            case accept:\n+            {\n+              // Task 4\n+              AcceptorMessage.AcceptState acceptState = message.getPayload();\n+              InstanceId instanceId = new InstanceId(message);\n+              AcceptorInstance instance = context.getAcceptorInstance(instanceId);\n \n-                            if ( acceptState.getBallot() == instance.getBallot() )\n-                            {\n-                                context.accept( instance, acceptState.getValue() );\n-                                instance.accept( acceptState.getValue() );\n+              if (acceptState.getBallot() == instance.getBallot())\n+              {\n+                context.accept(instance, acceptState.getValue());\n+                instance.accept(acceptState.getValue());\n \n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.accepted,\n-                                        message,\n-                                        new ProposerMessage.AcceptedState() ), InstanceId.INSTANCE ) );\n-                            }\n-                            else\n-                            {\n-                                context.getLog( AcceptorState.class ).debug( \"Reject \" + instanceId\n-                                        + \" accept ballot:\" + acceptState.getBallot() + \" actual ballot:\" +\n-                                        instance.getBallot() );\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage\n-                                        .rejectAccept, message,\n-                                        new ProposerMessage.RejectAcceptState() ), InstanceId.INSTANCE ) );\n-                            }\n-                            break;\n-                        }\n+                outgoing.offer(message.copyHeadersTo(Message.respond(ProposerMessage.accepted,\n+                    message,\n+                    new ProposerMessage.AcceptedState()), InstanceId.INSTANCE));\n+              } else\n+              {\n+                context.getLog(AcceptorState.class).debug(\"Reject \" + instanceId\n+                    + \" accept ballot:\" + acceptState.getBallot() + \" actual ballot:\" +\n+                    instance.getBallot());\n+                outgoing.offer(message.copyHeadersTo(Message.respond(ProposerMessage\n+                        .rejectAccept, message,\n+                    new ProposerMessage.RejectAcceptState()), InstanceId.INSTANCE));\n+              }\n+              break;\n+            }\n \n-                        case leave:\n-                        {\n-                            context.leave();\n-                            return start;\n-                        }\n+            case leave:\n+            {\n+              context.leave();\n+              return start;\n+            }\n \n-                        default:\n-                            break;\n-                    }\n+            default:\n+              break;\n+          }\n \n-                    return this;\n-                }\n-            },\n+          return this;\n+        }\n+      },\n }\n",
            "diff_size": 105
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 324).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3572/AcceptorState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3572/AcceptorState.java\nindex 7e640c29e92..6cadd049a53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3572/AcceptorState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3572/AcceptorState.java\n@@ -26,16 +26,13 @@ import org.neo4j.cluster.statemachine.State;\n /**\n  * State machine for Paxos Acceptor\n  */\n-public enum AcceptorState\n-        implements State<AcceptorContext, AcceptorMessage>\n+public enum AcceptorState implements State<AcceptorContext, AcceptorMessage>\n {\n     start\n-            {\n+{\n                 @Override\n-                public AcceptorState handle( AcceptorContext context,\n-                                             Message<AcceptorMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+                public AcceptorState handle( AcceptorContext context, Message<AcceptorMessage> message,\n+                                             MessageHolder outgoing )\n                 {\n                     if ( message.getMessageType() == AcceptorMessage.join )\n                     {\n@@ -44,19 +41,15 @@ public enum AcceptorState\n \n                     return this;\n                 }\n-            },\n-\n-    acceptor\n-            {\n+            }, acceptor\n+{\n                 @Override\n-                public AcceptorState handle( AcceptorContext context,\n-                                             Message<AcceptorMessage> message,\n-                                             MessageHolder outgoing\n-                )\n+                public AcceptorState handle( AcceptorContext context, Message<AcceptorMessage> message,\n+                                             MessageHolder outgoing )\n                 {\n                     switch ( message.getMessageType() )\n                     {\n-                        case prepare:\n+case prepare:\n                         {\n                             AcceptorMessage.PrepareState incomingState = message.getPayload();\n                             InstanceId instanceId = new InstanceId( message );\n@@ -72,66 +65,47 @@ public enum AcceptorState\n                             if ( incomingState.getBallot() >= localState.getBallot() )\n                             {\n                                 context.promise( localState, incomingState.getBallot() );\n-\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.promise,\n-                                        message, new ProposerMessage.PromiseState( incomingState.getBallot(),\n-                                                localState.getValue() ) ), InstanceId.INSTANCE ) );\n-                            }\n+outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.promise,\n+                                        message, new ProposerMessage.PromiseState( incomingState.getBallot(), localState.getValue() ) ), InstanceId.INSTANCE ) );\n+    }\n                             else\n                             {\n                                 // Optimization - explicit reject\n-                                context.getLog( AcceptorState.class ).debug(\"Rejecting prepare from \"\n-                                        + message.getHeader( Message.HEADER_FROM ) + \" for instance \"\n-                                        + message.getHeader( InstanceId.INSTANCE ) + \" and ballot \"\n-                                        + incomingState.getBallot() + \" (i had a prepare state ballot = \"\n-                                        + localState.getBallot() + \")\" );\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage\n-                                        .rejectPrepare, message,\n-                                        new ProposerMessage.RejectPrepare( localState.getBallot() ) ),\n-                                        InstanceId.INSTANCE ) );\n+                                context.getLog( AcceptorState.class ).debug( \"Rejecting prepare from \" + message.getHeader( Message.HEADER_FROM ) + \" for instance \" + message.getHeader( InstanceId.INSTANCE ) + \" and ballot \" + incomingState.getBallot() + \" (i had a prepare state ballot = \" + localState.getBallot() + \")\" );\n+outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.rejectPrepare, message, new ProposerMessage.RejectPrepare( localState.getBallot() ) ), InstanceId.INSTANCE ) );\n                             }\n                             break;\n                         }\n-\n-                        case accept:\n+    case accept:\n                         {\n                             // Task 4\n                             AcceptorMessage.AcceptState acceptState = message.getPayload();\n                             InstanceId instanceId = new InstanceId( message );\n                             AcceptorInstance instance = context.getAcceptorInstance( instanceId );\n-\n-                            if ( acceptState.getBallot() == instance.getBallot() )\n+if ( acceptState.getBallot() == instance.getBallot() )\n                             {\n                                 context.accept( instance, acceptState.getValue() );\n                                 instance.accept( acceptState.getValue() );\n-\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.accepted,\n-                                        message,\n-                                        new ProposerMessage.AcceptedState() ), InstanceId.INSTANCE ) );\n+outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.accepted,\n+                                        message, new ProposerMessage.AcceptedState() ), InstanceId.INSTANCE ) );\n                             }\n                             else\n                             {\n-                                context.getLog( AcceptorState.class ).debug( \"Reject \" + instanceId\n-                                        + \" accept ballot:\" + acceptState.getBallot() + \" actual ballot:\" +\n-                                        instance.getBallot() );\n-                                outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage\n-                                        .rejectAccept, message,\n-                                        new ProposerMessage.RejectAcceptState() ), InstanceId.INSTANCE ) );\n+                                context.getLog( AcceptorState.class ).debug( \"Reject \" + instanceId + \" accept ballot:\" + acceptState.getBallot() + \" actual ballot:\" + instance.getBallot() );\n+outgoing.offer( message.copyHeadersTo( Message.respond( ProposerMessage.rejectAccept, message, new ProposerMessage.RejectAcceptState() ), InstanceId.INSTANCE ) );\n                             }\n                             break;\n                         }\n-\n-                        case leave:\n+    case leave:\n                         {\n                             context.leave();\n                             return start;\n                         }\n-\n-                        default:\n+    default:\n                             break;\n-                    }\n+    }\n \n                     return this;\n                 }\n             },\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4192",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "120",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4192/LuceneKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4192/LuceneKernelExtension.java\nindex a8d2edca10b..eabc877830c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4192/LuceneKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4192/LuceneKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.lucene;\n \n import java.io.File;\n@@ -38,79 +39,78 @@ import org.neo4j.kernel.spi.legacyindex.IndexProviders;\n @Deprecated\n public class LuceneKernelExtension extends LifecycleAdapter\n {\n-    private final org.neo4j.kernel.api.impl.index.LuceneKernelExtension delegate;\n+  private final org.neo4j.kernel.api.impl.index.LuceneKernelExtension delegate;\n \n-    /**\n-     * @deprecated removed in 4.0\n-     */\n-    @Deprecated\n-    public LuceneKernelExtension( File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n-            FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders )\n-    {\n-        this( storeDir, config, indexStore, fileSystemAbstraction, indexProviders, OperationalMode.single );\n-    }\n+  /**\n+   * @deprecated removed in 4.0\n+   */\n+  @Deprecated\n+  public LuceneKernelExtension(File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n+                               FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders)\n+  {\n+    this(storeDir, config, indexStore, fileSystemAbstraction, indexProviders, OperationalMode.single);\n+  }\n \n-    /**\n-     * @deprecated removed in 4.0\n-     */\n-    @Deprecated\n-    public LuceneKernelExtension( File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n-            FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders, OperationalMode operationalMode )\n-    {\n-        org.neo4j.kernel.spi.explicitindex.IndexProviders proxyIndexProviders =\n-                createImposterOf( org.neo4j.kernel.spi.explicitindex.IndexProviders.class, indexProviders );\n-        delegate = new org.neo4j.kernel.api.impl.index.LuceneKernelExtension( storeDir, config, indexStore,\n-                fileSystemAbstraction, proxyIndexProviders, operationalMode );\n-    }\n+  /**\n+   * @deprecated removed in 4.0\n+   */\n+  @Deprecated\n+  public LuceneKernelExtension(File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n+                               FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders, OperationalMode operationalMode)\n+  {\n+    org.neo4j.kernel.spi.explicitindex.IndexProviders proxyIndexProviders =\n+        createImposterOf(org.neo4j.kernel.spi.explicitindex.IndexProviders.class, indexProviders);\n+    delegate = new org.neo4j.kernel.api.impl.index.LuceneKernelExtension(storeDir, config, indexStore,\n+        fileSystemAbstraction, proxyIndexProviders, operationalMode);\n+  }\n \n-    @Override\n-    public void init()\n-    {\n+  @Override\n+  public void init()\n+  {\n \n-        delegate.init( );\n-    }\n+    delegate.init();\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-        delegate.shutdown();\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+    delegate.shutdown();\n+  }\n+\n+  /**\n+   * Create an imposter of an interface. This is effectively used to mimic duck-typing.\n+   *\n+   * @param target   the interface to mimic.\n+   * @param imposter the instance of any class, it has to implement all methods of the interface provided by {@code target}.\n+   * @param <T>      the type of interface to mimic.\n+   * @param <F>      the actual type of the imposter.\n+   * @return an imposter that can be passed as the type of mimicked interface.\n+   * @implNote Method conformity is never checked, this is up to the user of the function to ensure. Sharp tool, use\n+   * with caution.\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  private static <T, F> T createImposterOf(Class<T> target, F imposter)\n+  {\n+    return (T) Proxy.newProxyInstance(target.getClassLoader(), new Class<?>[] {target}, new MirroredInvocationHandler<>(imposter));\n+  }\n \n-    /**\n-     * Create an imposter of an interface. This is effectively used to mimic duck-typing.\n-     *\n-     * @param target the interface to mimic.\n-     * @param imposter the instance of any class, it has to implement all methods of the interface provided by {@code target}.\n-     * @param <T> the type of interface to mimic.\n-     * @param <F> the actual type of the imposter.\n-     * @return an imposter that can be passed as the type of mimicked interface.\n-     *\n-     * @implNote Method conformity is never checked, this is up to the user of the function to ensure. Sharp tool, use\n-     * with caution.\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    private static <T,F> T createImposterOf( Class<T> target, F imposter )\n+  /**\n+   * Will pass through everything, as is, to the wrapped instance.\n+   */\n+  private static class MirroredInvocationHandler<F> implements InvocationHandler\n+  {\n+    private final F wrapped;\n+\n+    MirroredInvocationHandler(F wrapped)\n     {\n-        return (T) Proxy.newProxyInstance( target.getClassLoader(), new Class<?>[]{target}, new MirroredInvocationHandler<>( imposter ) );\n+      this.wrapped = wrapped;\n     }\n \n-    /**\n-     * Will pass through everything, as is, to the wrapped instance.\n-     */\n-    private static class MirroredInvocationHandler<F> implements InvocationHandler\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable\n     {\n-        private final F wrapped;\n-\n-        MirroredInvocationHandler( F wrapped )\n-        {\n-            this.wrapped = wrapped;\n-        }\n-\n-        @Override\n-        public Object invoke( Object proxy, Method method, Object[] args ) throws Throwable\n-        {\n-            Method match = wrapped.getClass().getMethod(method.getName(), method.getParameterTypes());\n-            return match.invoke( wrapped, args);\n-        }\n+      Method match = wrapped.getClass().getMethod(method.getName(), method.getParameterTypes());\n+      return match.invoke(wrapped, args);\n     }\n+  }\n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4192/LuceneKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4192/LuceneKernelExtension.java\nindex a8d2edca10b..ddd131c8d6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4192/LuceneKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4192/LuceneKernelExtension.java\n@@ -57,17 +57,15 @@ public class LuceneKernelExtension extends LifecycleAdapter\n     public LuceneKernelExtension( File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n             FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders, OperationalMode operationalMode )\n     {\n-        org.neo4j.kernel.spi.explicitindex.IndexProviders proxyIndexProviders =\n-                createImposterOf( org.neo4j.kernel.spi.explicitindex.IndexProviders.class, indexProviders );\n-        delegate = new org.neo4j.kernel.api.impl.index.LuceneKernelExtension( storeDir, config, indexStore,\n+        org.neo4j.kernel.spi.explicitindex.IndexProviders proxyIndexProviders = createImposterOf( org.neo4j.kernel.spi.explicitindex.IndexProviders.class, indexProviders );\n+delegate = new org.neo4j.kernel.api.impl.index.LuceneKernelExtension( storeDir, config, indexStore,\n                 fileSystemAbstraction, proxyIndexProviders, operationalMode );\n     }\n \n     @Override\n     public void init()\n     {\n-\n-        delegate.init( );\n+    delegate.init( );\n     }\n \n     @Override\n@@ -109,8 +107,8 @@ public class LuceneKernelExtension extends LifecycleAdapter\n         @Override\n         public Object invoke( Object proxy, Method method, Object[] args ) throws Throwable\n         {\n-            Method match = wrapped.getClass().getMethod(method.getName(), method.getParameterTypes());\n-            return match.invoke( wrapped, args);\n+            Method match = wrapped.getClass().getMethod(method.getName(), method.getParameterTypes() );\n+            return match.invoke( wrapped, args );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3190",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "194",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "210",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3190/StoreUpgrader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3190/StoreUpgrader.java\nindex 893b95baa06..f4063d6de4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3190/StoreUpgrader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3190/StoreUpgrader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.File;\n@@ -64,289 +65,283 @@ import org.neo4j.logging.LogProvider;\n  */\n public class StoreUpgrader\n {\n-    public static final String MIGRATION_DIRECTORY = \"upgrade\";\n-    public static final String MIGRATION_LEFT_OVERS_DIRECTORY = \"upgrade_backup\";\n-    private static final String MIGRATION_STATUS_FILE = \"_status\";\n-\n-    private final UpgradableDatabase upgradableDatabase;\n-    private final MigrationProgressMonitor progressMonitor;\n-    private final List<StoreMigrationParticipant> participants = new ArrayList<>();\n-    private final Config config;\n-    private final FileSystemAbstraction fileSystem;\n-    private final PageCache pageCache;\n-    private final Log log;\n-    private final LogProvider logProvider;\n-\n-    public StoreUpgrader( UpgradableDatabase upgradableDatabase, MigrationProgressMonitor progressMonitor, Config\n-            config, FileSystemAbstraction fileSystem, PageCache pageCache, LogProvider logProvider )\n+  public static final String MIGRATION_DIRECTORY = \"upgrade\";\n+  public static final String MIGRATION_LEFT_OVERS_DIRECTORY = \"upgrade_backup\";\n+  private static final String MIGRATION_STATUS_FILE = \"_status\";\n+\n+  private final UpgradableDatabase upgradableDatabase;\n+  private final MigrationProgressMonitor progressMonitor;\n+  private final List<StoreMigrationParticipant> participants = new ArrayList<>();\n+  private final Config config;\n+  private final FileSystemAbstraction fileSystem;\n+  private final PageCache pageCache;\n+  private final Log log;\n+  private final LogProvider logProvider;\n+\n+  public StoreUpgrader(UpgradableDatabase upgradableDatabase, MigrationProgressMonitor progressMonitor, Config\n+      config, FileSystemAbstraction fileSystem, PageCache pageCache, LogProvider logProvider)\n+  {\n+    this.upgradableDatabase = upgradableDatabase;\n+    this.progressMonitor = progressMonitor;\n+    this.fileSystem = fileSystem;\n+    this.config = config;\n+    this.pageCache = pageCache;\n+    this.logProvider = logProvider;\n+    this.log = logProvider.getLog(getClass());\n+  }\n+\n+  /**\n+   * Add migration participant into a participants list.\n+   * Participant will be added into the end of a list and will be executed only after all predecessors.\n+   *\n+   * @param participant - participant to add into migration\n+   */\n+  public void addParticipant(StoreMigrationParticipant participant)\n+  {\n+    assert participant != null;\n+    if (!StoreMigrationParticipant.NOT_PARTICIPATING.equals(participant))\n     {\n-        this.upgradableDatabase = upgradableDatabase;\n-        this.progressMonitor = progressMonitor;\n-        this.fileSystem = fileSystem;\n-        this.config = config;\n-        this.pageCache = pageCache;\n-        this.logProvider = logProvider;\n-        this.log = logProvider.getLog( getClass() );\n+      this.participants.add(participant);\n     }\n+  }\n+\n+  public void migrateIfNeeded(File storeDirectory)\n+  {\n+    File migrationDirectory = new File(storeDirectory, MIGRATION_DIRECTORY);\n+\n+    cleanupLegacyLeftOverDirsIn(storeDirectory);\n \n-    /**\n-     * Add migration participant into a participants list.\n-     * Participant will be added into the end of a list and will be executed only after all predecessors.\n-     * @param participant - participant to add into migration\n-     */\n-    public void addParticipant( StoreMigrationParticipant participant )\n+    File migrationStateFile = new File(migrationDirectory, MIGRATION_STATUS_FILE);\n+    // if migration directory exists than we might have failed to move files into the store dir so do it again\n+    if (upgradableDatabase.hasCurrentVersion(storeDirectory) && !fileSystem.fileExists(migrationStateFile))\n     {\n-        assert participant != null;\n-        if ( !StoreMigrationParticipant.NOT_PARTICIPATING.equals( participant ) )\n-        {\n-            this.participants.add( participant );\n-        }\n+      // No migration needed\n+      return;\n     }\n \n-    public void migrateIfNeeded( File storeDirectory )\n+    if (isUpgradeAllowed())\n     {\n-        File migrationDirectory = new File( storeDirectory, MIGRATION_DIRECTORY );\n-\n-        cleanupLegacyLeftOverDirsIn( storeDirectory );\n-\n-        File migrationStateFile = new File( migrationDirectory, MIGRATION_STATUS_FILE );\n-        // if migration directory exists than we might have failed to move files into the store dir so do it again\n-        if ( upgradableDatabase.hasCurrentVersion( storeDirectory ) && !fileSystem.fileExists( migrationStateFile ) )\n-        {\n-            // No migration needed\n-            return;\n-        }\n-\n-        if ( isUpgradeAllowed() )\n-        {\n-            migrateStore( storeDirectory, migrationDirectory, migrationStateFile );\n-        }\n-        else if ( !RecordFormatSelector.isStoreAndConfigFormatsCompatible( config, storeDirectory, pageCache, logProvider ) )\n-        {\n-            throw new UpgradeNotAllowedByConfigurationException();\n-        }\n+      migrateStore(storeDirectory, migrationDirectory, migrationStateFile);\n+    } else if (!RecordFormatSelector.isStoreAndConfigFormatsCompatible(config, storeDirectory, pageCache, logProvider))\n+    {\n+      throw new UpgradeNotAllowedByConfigurationException();\n     }\n-\n-    private void migrateStore( File storeDirectory, File migrationDirectory, File migrationStateFile )\n+  }\n+\n+  private void migrateStore(File storeDirectory, File migrationDirectory, File migrationStateFile)\n+  {\n+    // One or more participants would like to do migration\n+    progressMonitor.started(participants.size());\n+\n+    MigrationStatus migrationStatus = MigrationStatus.readMigrationStatus(fileSystem, migrationStateFile);\n+    String versionToMigrateFrom = null;\n+    // We don't need to migrate if we're at the phase where we have migrated successfully\n+    // and it's just a matter of moving over the files to the storeDir.\n+    if (MigrationStatus.migrating.isNeededFor(migrationStatus))\n     {\n-        // One or more participants would like to do migration\n-        progressMonitor.started( participants.size() );\n-\n-        MigrationStatus migrationStatus = MigrationStatus.readMigrationStatus( fileSystem, migrationStateFile );\n-        String versionToMigrateFrom = null;\n-        // We don't need to migrate if we're at the phase where we have migrated successfully\n-        // and it's just a matter of moving over the files to the storeDir.\n-        if ( MigrationStatus.migrating.isNeededFor( migrationStatus ) )\n-        {\n-            versionToMigrateFrom = upgradableDatabase.checkUpgradeable( storeDirectory ).storeVersion();\n-            cleanMigrationDirectory( migrationDirectory );\n-            MigrationStatus.migrating.setMigrationStatus( fileSystem, migrationStateFile, versionToMigrateFrom );\n-            migrateToIsolatedDirectory( storeDirectory, migrationDirectory, versionToMigrateFrom );\n-            MigrationStatus.moving.setMigrationStatus( fileSystem, migrationStateFile, versionToMigrateFrom );\n-        }\n-\n-        if ( MigrationStatus.moving.isNeededFor( migrationStatus ) )\n-        {\n-            versionToMigrateFrom =\n-                    MigrationStatus.moving.maybeReadInfo( fileSystem, migrationStateFile, versionToMigrateFrom );\n-            moveMigratedFilesToStoreDirectory( participants, migrationDirectory, storeDirectory,\n-                    versionToMigrateFrom, upgradableDatabase.currentVersion() );\n-        }\n-\n-        cleanup( participants, migrationDirectory );\n-\n-        progressMonitor.completed();\n+      versionToMigrateFrom = upgradableDatabase.checkUpgradeable(storeDirectory).storeVersion();\n+      cleanMigrationDirectory(migrationDirectory);\n+      MigrationStatus.migrating.setMigrationStatus(fileSystem, migrationStateFile, versionToMigrateFrom);\n+      migrateToIsolatedDirectory(storeDirectory, migrationDirectory, versionToMigrateFrom);\n+      MigrationStatus.moving.setMigrationStatus(fileSystem, migrationStateFile, versionToMigrateFrom);\n     }\n \n-    List<StoreMigrationParticipant> getParticipants()\n+    if (MigrationStatus.moving.isNeededFor(migrationStatus))\n     {\n-        return participants;\n+      versionToMigrateFrom =\n+          MigrationStatus.moving.maybeReadInfo(fileSystem, migrationStateFile, versionToMigrateFrom);\n+      moveMigratedFilesToStoreDirectory(participants, migrationDirectory, storeDirectory,\n+          versionToMigrateFrom, upgradableDatabase.currentVersion());\n     }\n \n-    private boolean isUpgradeAllowed()\n+    cleanup(participants, migrationDirectory);\n+\n+    progressMonitor.completed();\n+  }\n+\n+  List<StoreMigrationParticipant> getParticipants()\n+  {\n+    return participants;\n+  }\n+\n+  private boolean isUpgradeAllowed()\n+  {\n+    return config.get(GraphDatabaseSettings.allow_upgrade);\n+  }\n+\n+  private void cleanupLegacyLeftOverDirsIn(File storeDir)\n+  {\n+    final Pattern leftOverDirsPattern = Pattern.compile(MIGRATION_LEFT_OVERS_DIRECTORY + \"(_\\\\d*)?\");\n+    File[] leftOverDirs = storeDir.listFiles(\n+        (file, name) -> file.isDirectory() && leftOverDirsPattern.matcher(name).matches());\n+    if (leftOverDirs != null)\n     {\n-        return config.get( GraphDatabaseSettings.allow_upgrade );\n+      for (File leftOverDir : leftOverDirs)\n+      {\n+        deleteSilently(leftOverDir);\n+      }\n     }\n+  }\n \n-    private void cleanupLegacyLeftOverDirsIn( File storeDir )\n+  private void cleanup(Iterable<StoreMigrationParticipant> participants, File migrationDirectory)\n+  {\n+    try\n     {\n-        final Pattern leftOverDirsPattern = Pattern.compile( MIGRATION_LEFT_OVERS_DIRECTORY + \"(_\\\\d*)?\" );\n-        File[] leftOverDirs = storeDir.listFiles(\n-                ( file, name ) -> file.isDirectory() && leftOverDirsPattern.matcher( name ).matches() );\n-        if ( leftOverDirs != null )\n-        {\n-            for ( File leftOverDir : leftOverDirs )\n-            {\n-                deleteSilently( leftOverDir );\n-            }\n-        }\n+      for (StoreMigrationParticipant participant : participants)\n+      {\n+        participant.cleanup(migrationDirectory);\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new UnableToUpgradeException(\"Failure cleaning up after migration\", e);\n     }\n+  }\n \n-    private void cleanup( Iterable<StoreMigrationParticipant> participants, File migrationDirectory )\n+  private void moveMigratedFilesToStoreDirectory(Iterable<StoreMigrationParticipant> participants,\n+                                                 File migrationDirectory, File storeDirectory, String versionToMigrateFrom, String versionToMigrateTo)\n+  {\n+    try\n+    {\n+      for (StoreMigrationParticipant participant : participants)\n+      {\n+        participant.moveMigratedFiles(migrationDirectory, storeDirectory, versionToMigrateFrom,\n+            versionToMigrateTo);\n+      }\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            for ( StoreMigrationParticipant participant : participants )\n-            {\n-                participant.cleanup( migrationDirectory );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnableToUpgradeException( \"Failure cleaning up after migration\", e );\n-        }\n+      throw new UnableToUpgradeException(\"Unable to move migrated files into place\", e);\n     }\n+  }\n \n-    private void moveMigratedFilesToStoreDirectory( Iterable<StoreMigrationParticipant> participants,\n-            File migrationDirectory, File storeDirectory, String versionToMigrateFrom, String versionToMigrateTo )\n+  private void migrateToIsolatedDirectory(File storeDir, File migrationDirectory, String versionToMigrateFrom)\n+  {\n+    try\n+    {\n+      for (StoreMigrationParticipant participant : participants)\n+      {\n+        ProgressReporter progressReporter = progressMonitor.startSection(participant.getName());\n+        participant.migrate(storeDir, migrationDirectory, progressReporter, versionToMigrateFrom,\n+            upgradableDatabase.currentVersion());\n+        progressReporter.completed();\n+      }\n+    } catch (IOException | UncheckedIOException e)\n     {\n-        try\n-        {\n-            for ( StoreMigrationParticipant participant : participants )\n-            {\n-                participant.moveMigratedFiles( migrationDirectory, storeDirectory, versionToMigrateFrom,\n-                        versionToMigrateTo );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnableToUpgradeException( \"Unable to move migrated files into place\", e );\n-        }\n+      throw new UnableToUpgradeException(\"Failure doing migration\", e);\n     }\n+  }\n \n-    private void migrateToIsolatedDirectory( File storeDir, File migrationDirectory, String versionToMigrateFrom )\n+  private void cleanMigrationDirectory(File migrationDirectory)\n+  {\n+    try\n     {\n-        try\n-        {\n-            for ( StoreMigrationParticipant participant : participants )\n-            {\n-                ProgressReporter progressReporter = progressMonitor.startSection( participant.getName() );\n-                participant.migrate( storeDir, migrationDirectory, progressReporter, versionToMigrateFrom,\n-                        upgradableDatabase.currentVersion() );\n-                progressReporter.completed();\n-            }\n-        }\n-        catch ( IOException | UncheckedIOException e )\n-        {\n-            throw new UnableToUpgradeException( \"Failure doing migration\", e );\n-        }\n+      if (fileSystem.fileExists(migrationDirectory))\n+      {\n+        fileSystem.deleteRecursively(migrationDirectory);\n+      }\n+      // We use the file system from the page cache here to make sure that the migration directory is clean\n+      // even if we are using a block device.\n+      try\n+      {\n+        pageCache.getCachedFileSystem().streamFilesRecursive(migrationDirectory)\n+            .forEach(FileHandle.HANDLE_DELETE);\n+      } catch (NoSuchFileException e)\n+      {\n+        // This means that we had no files to clean, this is fine.\n+      }\n+    } catch (IOException | UncheckedIOException e)\n+    {\n+      throw new UnableToUpgradeException(\"Failure deleting upgrade directory \" + migrationDirectory, e);\n     }\n+    fileSystem.mkdir(migrationDirectory);\n+  }\n \n-    private void cleanMigrationDirectory( File migrationDirectory )\n+  private void deleteSilently(File dir)\n+  {\n+    try\n+    {\n+      fileSystem.deleteRecursively(dir);\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            if ( fileSystem.fileExists( migrationDirectory ) )\n-            {\n-                fileSystem.deleteRecursively( migrationDirectory );\n-            }\n-            // We use the file system from the page cache here to make sure that the migration directory is clean\n-            // even if we are using a block device.\n-            try\n-            {\n-                pageCache.getCachedFileSystem().streamFilesRecursive( migrationDirectory )\n-                        .forEach( FileHandle.HANDLE_DELETE );\n-            }\n-            catch ( NoSuchFileException e )\n-            {\n-                // This means that we had no files to clean, this is fine.\n-            }\n-        }\n-        catch ( IOException | UncheckedIOException e )\n-        {\n-            throw new UnableToUpgradeException( \"Failure deleting upgrade directory \" + migrationDirectory, e );\n-        }\n-        fileSystem.mkdir( migrationDirectory );\n+      log.error(\"Unable to delete directory: \" + dir, e);\n     }\n+  }\n \n-    private void deleteSilently( File dir )\n+  public static class UnableToUpgradeException extends RuntimeException\n+  {\n+    public UnableToUpgradeException(String message, Throwable cause)\n     {\n-        try\n-        {\n-            fileSystem.deleteRecursively( dir );\n-        }\n-        catch ( IOException e )\n-        {\n-            log.error( \"Unable to delete directory: \" + dir, e );\n-        }\n+      super(message, cause);\n     }\n \n-    public static class UnableToUpgradeException extends RuntimeException\n+    UnableToUpgradeException(String message)\n     {\n-        public UnableToUpgradeException( String message, Throwable cause )\n-        {\n-            super( message, cause );\n-        }\n-\n-        UnableToUpgradeException( String message )\n-        {\n-            super( message );\n-        }\n+      super(message);\n     }\n+  }\n \n-    static class UpgradeMissingStoreFilesException extends UnableToUpgradeException\n-    {\n-        private static final String MESSAGE = \"Missing required store file '%s'.\";\n+  static class UpgradeMissingStoreFilesException extends UnableToUpgradeException\n+  {\n+    private static final String MESSAGE = \"Missing required store file '%s'.\";\n \n-        UpgradeMissingStoreFilesException( String filenameExpectedToExist )\n-        {\n-            super( String.format( MESSAGE, filenameExpectedToExist ) );\n-        }\n+    UpgradeMissingStoreFilesException(String filenameExpectedToExist)\n+    {\n+      super(String.format(MESSAGE, filenameExpectedToExist));\n     }\n+  }\n+\n+  static class UpgradingStoreVersionNotFoundException extends UnableToUpgradeException\n+  {\n+    private static final String MESSAGE =\n+        \"'%s' does not contain a store version, please ensure that the original database was shut down in a \" +\n+            \"clean state.\";\n \n-    static class UpgradingStoreVersionNotFoundException extends UnableToUpgradeException\n+    UpgradingStoreVersionNotFoundException(String filenameWithoutStoreVersion)\n     {\n-        private static final String MESSAGE =\n-                \"'%s' does not contain a store version, please ensure that the original database was shut down in a \" +\n-                \"clean state.\";\n-\n-        UpgradingStoreVersionNotFoundException( String filenameWithoutStoreVersion )\n-        {\n-            super( String.format( MESSAGE, filenameWithoutStoreVersion ) );\n-        }\n+      super(String.format(MESSAGE, filenameWithoutStoreVersion));\n     }\n+  }\n \n-    public static class UnexpectedUpgradingStoreVersionException extends UnableToUpgradeException\n-    {\n-        static final String MESSAGE =\n-                \"Not possible to upgrade a store with version '%s' to current store version `%s` (Neo4j %s).\";\n+  public static class UnexpectedUpgradingStoreVersionException extends UnableToUpgradeException\n+  {\n+    static final String MESSAGE =\n+        \"Not possible to upgrade a store with version '%s' to current store version `%s` (Neo4j %s).\";\n \n-        UnexpectedUpgradingStoreVersionException( String fileVersion, String currentVersion )\n-        {\n-            super( String.format( MESSAGE, fileVersion, currentVersion, Version.getNeo4jVersion() ) );\n-        }\n+    UnexpectedUpgradingStoreVersionException(String fileVersion, String currentVersion)\n+    {\n+      super(String.format(MESSAGE, fileVersion, currentVersion, Version.getNeo4jVersion()));\n     }\n+  }\n \n-    public static class AttemptedDowngradeException extends UnableToUpgradeException\n-    {\n-        static final String MESSAGE = \"Downgrading stores are not supported.\";\n+  public static class AttemptedDowngradeException extends UnableToUpgradeException\n+  {\n+    static final String MESSAGE = \"Downgrading stores are not supported.\";\n \n-        AttemptedDowngradeException()\n-        {\n-            super( MESSAGE );\n-        }\n+    AttemptedDowngradeException()\n+    {\n+      super(MESSAGE);\n     }\n+  }\n \n-    public static class UnexpectedUpgradingStoreFormatException extends UnableToUpgradeException\n-    {\n-        protected static final String MESSAGE =\n-                \"This is an enterprise-only store. Please configure '%s' to open.\";\n+  public static class UnexpectedUpgradingStoreFormatException extends UnableToUpgradeException\n+  {\n+    protected static final String MESSAGE =\n+        \"This is an enterprise-only store. Please configure '%s' to open.\";\n \n-        UnexpectedUpgradingStoreFormatException()\n-        {\n-            super( String.format( MESSAGE, GraphDatabaseSettings.record_format.name() ) );\n-        }\n+    UnexpectedUpgradingStoreFormatException()\n+    {\n+      super(String.format(MESSAGE, GraphDatabaseSettings.record_format.name()));\n     }\n+  }\n+\n+  static class DatabaseNotCleanlyShutDownException extends UnableToUpgradeException\n+  {\n+    private static final String MESSAGE =\n+        \"The database is not cleanly shutdown. The database needs recovery, in order to recover the database, \"\n+            + \"please run the old version of the database on this store.\";\n \n-    static class DatabaseNotCleanlyShutDownException extends UnableToUpgradeException\n+    DatabaseNotCleanlyShutDownException()\n     {\n-        private static final String MESSAGE =\n-                \"The database is not cleanly shutdown. The database needs recovery, in order to recover the database, \"\n-                + \"please run the old version of the database on this store.\";\n-\n-        DatabaseNotCleanlyShutDownException()\n-        {\n-            super( MESSAGE );\n-        }\n+      super(MESSAGE);\n     }\n+  }\n }\n",
            "diff_size": 354
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "292",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 242).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "326",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3190/StoreUpgrader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3190/StoreUpgrader.java\nindex 893b95baa06..1b696153a89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3190/StoreUpgrader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3190/StoreUpgrader.java\n@@ -65,10 +65,10 @@ import org.neo4j.logging.LogProvider;\n public class StoreUpgrader\n {\n     public static final String MIGRATION_DIRECTORY = \"upgrade\";\n-    public static final String MIGRATION_LEFT_OVERS_DIRECTORY = \"upgrade_backup\";\n-    private static final String MIGRATION_STATUS_FILE = \"_status\";\n \n-    private final UpgradableDatabase upgradableDatabase;\n+public static final String MIGRATION_LEFT_OVERS_DIRECTORY = \"upgrade_backup\";\n+    private static final String MIGRATION_STATUS_FILE = \"_status\";\n+private final UpgradableDatabase upgradableDatabase;\n     private final MigrationProgressMonitor progressMonitor;\n     private final List<StoreMigrationParticipant> participants = new ArrayList<>();\n     private final Config config;\n@@ -77,8 +77,7 @@ public class StoreUpgrader\n     private final Log log;\n     private final LogProvider logProvider;\n \n-    public StoreUpgrader( UpgradableDatabase upgradableDatabase, MigrationProgressMonitor progressMonitor, Config\n-            config, FileSystemAbstraction fileSystem, PageCache pageCache, LogProvider logProvider )\n+    public StoreUpgrader( UpgradableDatabase upgradableDatabase, MigrationProgressMonitor progressMonitor, Config config, FileSystemAbstraction fileSystem, PageCache pageCache, LogProvider logProvider )\n     {\n         this.upgradableDatabase = upgradableDatabase;\n         this.progressMonitor = progressMonitor;\n@@ -108,8 +107,7 @@ public class StoreUpgrader\n         File migrationDirectory = new File( storeDirectory, MIGRATION_DIRECTORY );\n \n         cleanupLegacyLeftOverDirsIn( storeDirectory );\n-\n-        File migrationStateFile = new File( migrationDirectory, MIGRATION_STATUS_FILE );\n+File migrationStateFile = new File( migrationDirectory, MIGRATION_STATUS_FILE );\n         // if migration directory exists than we might have failed to move files into the store dir so do it again\n         if ( upgradableDatabase.hasCurrentVersion( storeDirectory ) && !fileSystem.fileExists( migrationStateFile ) )\n         {\n@@ -131,8 +129,7 @@ public class StoreUpgrader\n     {\n         // One or more participants would like to do migration\n         progressMonitor.started( participants.size() );\n-\n-        MigrationStatus migrationStatus = MigrationStatus.readMigrationStatus( fileSystem, migrationStateFile );\n+MigrationStatus migrationStatus = MigrationStatus.readMigrationStatus( fileSystem, migrationStateFile );\n         String versionToMigrateFrom = null;\n         // We don't need to migrate if we're at the phase where we have migrated successfully\n         // and it's just a matter of moving over the files to the storeDir.\n@@ -147,15 +144,13 @@ public class StoreUpgrader\n \n         if ( MigrationStatus.moving.isNeededFor( migrationStatus ) )\n         {\n-            versionToMigrateFrom =\n-                    MigrationStatus.moving.maybeReadInfo( fileSystem, migrationStateFile, versionToMigrateFrom );\n-            moveMigratedFilesToStoreDirectory( participants, migrationDirectory, storeDirectory,\n+            versionToMigrateFrom = MigrationStatus.moving.maybeReadInfo( fileSystem, migrationStateFile, versionToMigrateFrom );\n+moveMigratedFilesToStoreDirectory( participants, migrationDirectory, storeDirectory,\n                     versionToMigrateFrom, upgradableDatabase.currentVersion() );\n         }\n \n         cleanup( participants, migrationDirectory );\n-\n-        progressMonitor.completed();\n+progressMonitor.completed();\n     }\n \n     List<StoreMigrationParticipant> getParticipants()\n@@ -171,9 +166,8 @@ public class StoreUpgrader\n     private void cleanupLegacyLeftOverDirsIn( File storeDir )\n     {\n         final Pattern leftOverDirsPattern = Pattern.compile( MIGRATION_LEFT_OVERS_DIRECTORY + \"(_\\\\d*)?\" );\n-        File[] leftOverDirs = storeDir.listFiles(\n-                ( file, name ) -> file.isDirectory() && leftOverDirsPattern.matcher( name ).matches() );\n-        if ( leftOverDirs != null )\n+        File[] leftOverDirs = storeDir.listFiles(( file, name ) -> file.isDirectory() && leftOverDirsPattern.matcher( name ).matches() );\n+if ( leftOverDirs != null )\n         {\n             for ( File leftOverDir : leftOverDirs )\n             {\n@@ -206,7 +200,7 @@ public class StoreUpgrader\n             {\n                 participant.moveMigratedFiles( migrationDirectory, storeDirectory, versionToMigrateFrom,\n                         versionToMigrateTo );\n-            }\n+    }\n         }\n         catch ( IOException e )\n         {\n@@ -223,7 +217,7 @@ public class StoreUpgrader\n                 ProgressReporter progressReporter = progressMonitor.startSection( participant.getName() );\n                 participant.migrate( storeDir, migrationDirectory, progressReporter, versionToMigrateFrom,\n                         upgradableDatabase.currentVersion() );\n-                progressReporter.completed();\n+progressReporter.completed();\n             }\n         }\n         catch ( IOException | UncheckedIOException e )\n@@ -244,9 +238,8 @@ public class StoreUpgrader\n             // even if we are using a block device.\n             try\n             {\n-                pageCache.getCachedFileSystem().streamFilesRecursive( migrationDirectory )\n-                        .forEach( FileHandle.HANDLE_DELETE );\n-            }\n+                pageCache.getCachedFileSystem().streamFilesRecursive( migrationDirectory ).forEach( FileHandle.HANDLE_DELETE );\n+    }\n             catch ( NoSuchFileException e )\n             {\n                 // This means that we had no files to clean, this is fine.\n@@ -296,11 +289,7 @@ public class StoreUpgrader\n \n     static class UpgradingStoreVersionNotFoundException extends UnableToUpgradeException\n     {\n-        private static final String MESSAGE =\n-                \"'%s' does not contain a store version, please ensure that the original database was shut down in a \" +\n-                \"clean state.\";\n-\n-        UpgradingStoreVersionNotFoundException( String filenameWithoutStoreVersion )\n+        private static final String MESSAGE = \"'%s' does not contain a store version, please ensure that the original database was shut down in a \" + \"clean state.\"; UpgradingStoreVersionNotFoundException( String filenameWithoutStoreVersion )\n         {\n             super( String.format( MESSAGE, filenameWithoutStoreVersion ) );\n         }\n@@ -308,10 +297,7 @@ public class StoreUpgrader\n \n     public static class UnexpectedUpgradingStoreVersionException extends UnableToUpgradeException\n     {\n-        static final String MESSAGE =\n-                \"Not possible to upgrade a store with version '%s' to current store version `%s` (Neo4j %s).\";\n-\n-        UnexpectedUpgradingStoreVersionException( String fileVersion, String currentVersion )\n+        static final String MESSAGE = \"Not possible to upgrade a store with version '%s' to current store version `%s` (Neo4j %s).\"; UnexpectedUpgradingStoreVersionException( String fileVersion, String currentVersion )\n         {\n             super( String.format( MESSAGE, fileVersion, currentVersion, Version.getNeo4jVersion() ) );\n         }\n@@ -329,10 +315,7 @@ public class StoreUpgrader\n \n     public static class UnexpectedUpgradingStoreFormatException extends UnableToUpgradeException\n     {\n-        protected static final String MESSAGE =\n-                \"This is an enterprise-only store. Please configure '%s' to open.\";\n-\n-        UnexpectedUpgradingStoreFormatException()\n+        protected static final String MESSAGE = \"This is an enterprise-only store. Please configure '%s' to open.\"; UnexpectedUpgradingStoreFormatException()\n         {\n             super( String.format( MESSAGE, GraphDatabaseSettings.record_format.name() ) );\n         }\n@@ -340,13 +323,9 @@ public class StoreUpgrader\n \n     static class DatabaseNotCleanlyShutDownException extends UnableToUpgradeException\n     {\n-        private static final String MESSAGE =\n-                \"The database is not cleanly shutdown. The database needs recovery, in order to recover the database, \"\n-                + \"please run the old version of the database on this store.\";\n-\n-        DatabaseNotCleanlyShutDownException()\n+        private static final String MESSAGE = \"The database is not cleanly shutdown. The database needs recovery, in order to recover the database, \" + \"please run the old version of the database on this store.\"; DatabaseNotCleanlyShutDownException()\n         {\n             super( MESSAGE );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
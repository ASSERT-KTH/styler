{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2604",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2604/SwitchToSlaveBranchThenCopy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2604/SwitchToSlaveBranchThenCopy.java\nindex f0d209b7dff..b25fdb22108 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2604/SwitchToSlaveBranchThenCopy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2604/SwitchToSlaveBranchThenCopy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.io.File;\n@@ -60,127 +61,124 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n \n public class SwitchToSlaveBranchThenCopy extends SwitchToSlave\n {\n-    private final LogService logService;\n+  private final LogService logService;\n \n-    public SwitchToSlaveBranchThenCopy( File storeDir,\n-                                        LogService logService,\n-                                        FileSystemAbstraction fileSystemAbstraction,\n-                                        Config config,\n-                                        DependencyResolver resolver,\n-                                        HaIdGeneratorFactory idGeneratorFactory,\n-                                        DelegateInvocationHandler<Master> masterDelegateHandler,\n-                                        ClusterMemberAvailability clusterMemberAvailability,\n-                                        RequestContextFactory requestContextFactory,\n-                                        PullerFactory pullerFactory,\n-                                        Iterable<KernelExtensionFactory<?>> kernelExtensions,\n-                                        MasterClientResolver masterClientResolver,\n-                                        SwitchToSlave.Monitor monitor,\n-                                        StoreCopyClientMonitor storeCopyMonitor,\n-                                        Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n-                                        Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                        Function<Slave,SlaveServer> slaveServerFactory,\n-                                        UpdatePuller updatePuller,\n-                                        PageCache pageCache,\n-                                        Monitors monitors,\n-                                        TransactionStats transactionCounters )\n-    {\n-        this( storeDir,\n-                logService,\n-                config,\n-                resolver,\n-                idGeneratorFactory,\n-                masterDelegateHandler,\n-                clusterMemberAvailability,\n-                requestContextFactory,\n-                pullerFactory,\n-                masterClientResolver,\n-                monitor,\n-                new StoreCopyClient( storeDir, config, kernelExtensions, logService.getUserLogProvider(),\n-                        fileSystemAbstraction, pageCache, storeCopyMonitor, false ),\n-                neoDataSourceSupplier,\n-                transactionIdStoreSupplier,\n-                slaveServerFactory,\n-                updatePuller,\n-                pageCache,\n-                monitors,\n-                transactionCounters );\n-    }\n+  public SwitchToSlaveBranchThenCopy(File storeDir,\n+                                     LogService logService,\n+                                     FileSystemAbstraction fileSystemAbstraction,\n+                                     Config config,\n+                                     DependencyResolver resolver,\n+                                     HaIdGeneratorFactory idGeneratorFactory,\n+                                     DelegateInvocationHandler<Master> masterDelegateHandler,\n+                                     ClusterMemberAvailability clusterMemberAvailability,\n+                                     RequestContextFactory requestContextFactory,\n+                                     PullerFactory pullerFactory,\n+                                     Iterable<KernelExtensionFactory<?>> kernelExtensions,\n+                                     MasterClientResolver masterClientResolver,\n+                                     SwitchToSlave.Monitor monitor,\n+                                     StoreCopyClientMonitor storeCopyMonitor,\n+                                     Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n+                                     Supplier<TransactionIdStore> transactionIdStoreSupplier,\n+                                     Function<Slave, SlaveServer> slaveServerFactory,\n+                                     UpdatePuller updatePuller,\n+                                     PageCache pageCache,\n+                                     Monitors monitors,\n+                                     TransactionStats transactionCounters)\n+  {\n+    this(storeDir,\n+        logService,\n+        config,\n+        resolver,\n+        idGeneratorFactory,\n+        masterDelegateHandler,\n+        clusterMemberAvailability,\n+        requestContextFactory,\n+        pullerFactory,\n+        masterClientResolver,\n+        monitor,\n+        new StoreCopyClient(storeDir, config, kernelExtensions, logService.getUserLogProvider(),\n+            fileSystemAbstraction, pageCache, storeCopyMonitor, false),\n+        neoDataSourceSupplier,\n+        transactionIdStoreSupplier,\n+        slaveServerFactory,\n+        updatePuller,\n+        pageCache,\n+        monitors,\n+        transactionCounters);\n+  }\n \n-    SwitchToSlaveBranchThenCopy( File storeDir,\n-                                         LogService logService,\n-                                         Config config,\n-                                         DependencyResolver resolver,\n-                                         HaIdGeneratorFactory idGeneratorFactory,\n-                                         DelegateInvocationHandler<Master> masterDelegateHandler,\n-                                         ClusterMemberAvailability clusterMemberAvailability,\n-                                         RequestContextFactory requestContextFactory,\n-                                         PullerFactory pullerFactory,\n-                                         MasterClientResolver masterClientResolver,\n-                                         SwitchToSlave.Monitor monitor,\n-                                         StoreCopyClient storeCopyClient,\n-                                         Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n-                                         Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                         Function<Slave, SlaveServer> slaveServerFactory,\n-                                         UpdatePuller updatePuller,\n-                                         PageCache pageCache,\n-                                         Monitors monitors,\n-                                         TransactionStats transactionCounters )\n-    {\n-        super( idGeneratorFactory, resolver, monitors, requestContextFactory, masterDelegateHandler,\n-                clusterMemberAvailability, masterClientResolver, monitor, pullerFactory, updatePuller,\n-                slaveServerFactory, config, logService, pageCache, storeDir, transactionIdStoreSupplier,\n-                transactionCounters, neoDataSourceSupplier, storeCopyClient );\n-        this.logService = logService;\n-    }\n+  SwitchToSlaveBranchThenCopy(File storeDir,\n+                              LogService logService,\n+                              Config config,\n+                              DependencyResolver resolver,\n+                              HaIdGeneratorFactory idGeneratorFactory,\n+                              DelegateInvocationHandler<Master> masterDelegateHandler,\n+                              ClusterMemberAvailability clusterMemberAvailability,\n+                              RequestContextFactory requestContextFactory,\n+                              PullerFactory pullerFactory,\n+                              MasterClientResolver masterClientResolver,\n+                              SwitchToSlave.Monitor monitor,\n+                              StoreCopyClient storeCopyClient,\n+                              Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n+                              Supplier<TransactionIdStore> transactionIdStoreSupplier,\n+                              Function<Slave, SlaveServer> slaveServerFactory,\n+                              UpdatePuller updatePuller,\n+                              PageCache pageCache,\n+                              Monitors monitors,\n+                              TransactionStats transactionCounters)\n+  {\n+    super(idGeneratorFactory, resolver, monitors, requestContextFactory, masterDelegateHandler,\n+        clusterMemberAvailability, masterClientResolver, monitor, pullerFactory, updatePuller,\n+        slaveServerFactory, config, logService, pageCache, storeDir, transactionIdStoreSupplier,\n+        transactionCounters, neoDataSourceSupplier, storeCopyClient);\n+    this.logService = logService;\n+  }\n \n-    @Override\n-    void checkDataConsistency( MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId,\n-                                       URI masterUri, URI me,\n-                                       CancellationRequest cancellationRequest ) throws Throwable\n+  @Override\n+  void checkDataConsistency(MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId,\n+                            URI masterUri, URI me,\n+                            CancellationRequest cancellationRequest) throws Throwable\n+  {\n+    try\n     {\n-        try\n-        {\n-            userLog.info( \"Checking store consistency with master\" );\n-            checkMyStoreIdAndMastersStoreId( storeId, masterUri, resolver );\n-            checkDataConsistencyWithMaster( masterUri, masterClient, storeId, txIdStore );\n-            userLog.info( \"Store is consistent\" );\n-        }\n-        catch ( StoreUnableToParticipateInClusterException upe )\n-        {\n-            userLog.info( \"The store is inconsistent. Will treat it as branched and fetch a new one from the master\" );\n-            msgLog.warn( \"Current store is unable to participate in the cluster; fetching new store from master\", upe );\n-            try\n-            {\n+      userLog.info(\"Checking store consistency with master\");\n+      checkMyStoreIdAndMastersStoreId(storeId, masterUri, resolver);\n+      checkDataConsistencyWithMaster(masterUri, masterClient, storeId, txIdStore);\n+      userLog.info(\"Store is consistent\");\n+    } catch (StoreUnableToParticipateInClusterException upe)\n+    {\n+      userLog.info(\"The store is inconsistent. Will treat it as branched and fetch a new one from the master\");\n+      msgLog.warn(\"Current store is unable to participate in the cluster; fetching new store from master\", upe);\n+      try\n+      {\n \n-                stopServicesAndHandleBranchedStore( config.get( HaSettings.branched_data_policy ) );\n-            }\n-            catch ( IOException e )\n-            {\n-                msgLog.warn( \"Failed while trying to handle branched data\", e );\n-            }\n+        stopServicesAndHandleBranchedStore(config.get(HaSettings.branched_data_policy));\n+      } catch (IOException e)\n+      {\n+        msgLog.warn(\"Failed while trying to handle branched data\", e);\n+      }\n \n-            throw upe;\n-        }\n-        catch ( MismatchingStoreIdException e )\n-        {\n-            userLog.info(\n-                    \"The store does not represent the same database as master. Will remove and fetch a new one from \" +\n-                            \"master\" );\n-            if ( txIdStore.getLastCommittedTransactionId() == BASE_TX_ID )\n-            {\n-                msgLog.warn( \"Found and deleting empty store with mismatching store id\", e );\n-                stopServicesAndHandleBranchedStore( BranchedDataPolicy.keep_none );\n-                throw e;\n-            }\n+      throw upe;\n+    } catch (MismatchingStoreIdException e)\n+    {\n+      userLog.info(\n+          \"The store does not represent the same database as master. Will remove and fetch a new one from \" +\n+              \"master\");\n+      if (txIdStore.getLastCommittedTransactionId() == BASE_TX_ID)\n+      {\n+        msgLog.warn(\"Found and deleting empty store with mismatching store id\", e);\n+        stopServicesAndHandleBranchedStore(BranchedDataPolicy.keep_none);\n+        throw e;\n+      }\n \n-            msgLog.error( \"Store cannot participate in cluster due to mismatching store IDs\", e );\n-            throw new ForeignStoreException( e.getExpected(), e.getEncountered() );\n-        }\n+      msgLog.error(\"Store cannot participate in cluster due to mismatching store IDs\", e);\n+      throw new ForeignStoreException(e.getExpected(), e.getEncountered());\n     }\n+  }\n \n-    void stopServicesAndHandleBranchedStore( BranchedDataPolicy branchPolicy ) throws Throwable\n-    {\n-        stopServices();\n-        branchPolicy.handle( storeDir, pageCache, logService );\n-    }\n+  void stopServicesAndHandleBranchedStore(BranchedDataPolicy branchPolicy) throws Throwable\n+  {\n+    stopServices();\n+    branchPolicy.handle(storeDir, pageCache, logService);\n+  }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 274).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2604/SwitchToSlaveBranchThenCopy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2604/SwitchToSlaveBranchThenCopy.java\nindex f0d209b7dff..4585eecd834 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2604/SwitchToSlaveBranchThenCopy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2604/SwitchToSlaveBranchThenCopy.java\n@@ -62,82 +62,51 @@ public class SwitchToSlaveBranchThenCopy extends SwitchToSlave\n {\n     private final LogService logService;\n \n-    public SwitchToSlaveBranchThenCopy( File storeDir,\n-                                        LogService logService,\n+    public SwitchToSlaveBranchThenCopy( File storeDir, LogService logService,\n                                         FileSystemAbstraction fileSystemAbstraction,\n                                         Config config,\n                                         DependencyResolver resolver,\n-                                        HaIdGeneratorFactory idGeneratorFactory,\n-                                        DelegateInvocationHandler<Master> masterDelegateHandler,\n+                                        HaIdGeneratorFactory idGeneratorFactory, DelegateInvocationHandler<Master> masterDelegateHandler,\n                                         ClusterMemberAvailability clusterMemberAvailability,\n                                         RequestContextFactory requestContextFactory,\n-                                        PullerFactory pullerFactory,\n-                                        Iterable<KernelExtensionFactory<?>> kernelExtensions,\n+                                        PullerFactory pullerFactory, Iterable<KernelExtensionFactory<?>> kernelExtensions,\n                                         MasterClientResolver masterClientResolver,\n                                         SwitchToSlave.Monitor monitor,\n-                                        StoreCopyClientMonitor storeCopyMonitor,\n-                                        Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n-                                        Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                        Function<Slave,SlaveServer> slaveServerFactory,\n+                                        StoreCopyClientMonitor storeCopyMonitor, Supplier<NeoStoreDataSource> neoDataSourceSupplier, Supplier<TransactionIdStore> transactionIdStoreSupplier, Function<Slave,SlaveServer> slaveServerFactory,\n                                         UpdatePuller updatePuller,\n                                         PageCache pageCache,\n                                         Monitors monitors,\n                                         TransactionStats transactionCounters )\n-    {\n+{\n         this( storeDir,\n-                logService,\n-                config,\n-                resolver,\n-                idGeneratorFactory,\n-                masterDelegateHandler,\n-                clusterMemberAvailability,\n-                requestContextFactory,\n-                pullerFactory,\n-                masterClientResolver,\n-                monitor,\n-                new StoreCopyClient( storeDir, config, kernelExtensions, logService.getUserLogProvider(),\n-                        fileSystemAbstraction, pageCache, storeCopyMonitor, false ),\n-                neoDataSourceSupplier,\n-                transactionIdStoreSupplier,\n-                slaveServerFactory,\n-                updatePuller,\n-                pageCache,\n-                monitors,\n-                transactionCounters );\n+                logService, config, resolver, idGeneratorFactory, masterDelegateHandler, clusterMemberAvailability, requestContextFactory, pullerFactory, masterClientResolver, monitor, new StoreCopyClient( storeDir, config, kernelExtensions, logService.getUserLogProvider(),\n+                        fileSystemAbstraction, pageCache, storeCopyMonitor, false ), neoDataSourceSupplier, transactionIdStoreSupplier, slaveServerFactory, updatePuller, pageCache, monitors, transactionCounters );\n     }\n \n-    SwitchToSlaveBranchThenCopy( File storeDir,\n-                                         LogService logService,\n+    SwitchToSlaveBranchThenCopy( File storeDir, LogService logService,\n                                          Config config,\n                                          DependencyResolver resolver,\n-                                         HaIdGeneratorFactory idGeneratorFactory,\n-                                         DelegateInvocationHandler<Master> masterDelegateHandler,\n+                                         HaIdGeneratorFactory idGeneratorFactory, DelegateInvocationHandler<Master> masterDelegateHandler,\n                                          ClusterMemberAvailability clusterMemberAvailability,\n                                          RequestContextFactory requestContextFactory,\n                                          PullerFactory pullerFactory,\n                                          MasterClientResolver masterClientResolver,\n                                          SwitchToSlave.Monitor monitor,\n-                                         StoreCopyClient storeCopyClient,\n-                                         Supplier<NeoStoreDataSource> neoDataSourceSupplier,\n-                                         Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                         Function<Slave, SlaveServer> slaveServerFactory,\n+                                         StoreCopyClient storeCopyClient, Supplier<NeoStoreDataSource> neoDataSourceSupplier, Supplier<TransactionIdStore> transactionIdStoreSupplier, Function<Slave,SlaveServer> slaveServerFactory,\n                                          UpdatePuller updatePuller,\n                                          PageCache pageCache,\n                                          Monitors monitors,\n                                          TransactionStats transactionCounters )\n-    {\n+{\n         super( idGeneratorFactory, resolver, monitors, requestContextFactory, masterDelegateHandler,\n-                clusterMemberAvailability, masterClientResolver, monitor, pullerFactory, updatePuller,\n-                slaveServerFactory, config, logService, pageCache, storeDir, transactionIdStoreSupplier,\n-                transactionCounters, neoDataSourceSupplier, storeCopyClient );\n-        this.logService = logService;\n+                clusterMemberAvailability, masterClientResolver, monitor, pullerFactory, updatePuller, slaveServerFactory, config, logService, pageCache, storeDir, transactionIdStoreSupplier, transactionCounters, neoDataSourceSupplier, storeCopyClient );\n+this.logService = logService;\n     }\n \n     @Override\n-    void checkDataConsistency( MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId,\n-                                       URI masterUri, URI me,\n+    void checkDataConsistency( MasterClient masterClient, TransactionIdStore txIdStore, StoreId storeId, URI masterUri, URI me,\n                                        CancellationRequest cancellationRequest ) throws Throwable\n-    {\n+{\n         try\n         {\n             userLog.info( \"Checking store consistency with master\" );\n@@ -151,8 +120,7 @@ public class SwitchToSlaveBranchThenCopy extends SwitchToSlave\n             msgLog.warn( \"Current store is unable to participate in the cluster; fetching new store from master\", upe );\n             try\n             {\n-\n-                stopServicesAndHandleBranchedStore( config.get( HaSettings.branched_data_policy ) );\n+    stopServicesAndHandleBranchedStore( config.get( HaSettings.branched_data_policy ) );\n             }\n             catch ( IOException e )\n             {\n@@ -163,10 +131,8 @@ public class SwitchToSlaveBranchThenCopy extends SwitchToSlave\n         }\n         catch ( MismatchingStoreIdException e )\n         {\n-            userLog.info(\n-                    \"The store does not represent the same database as master. Will remove and fetch a new one from \" +\n-                            \"master\" );\n-            if ( txIdStore.getLastCommittedTransactionId() == BASE_TX_ID )\n+            userLog.info( \"The store does not represent the same database as master. Will remove and fetch a new one from \" + \"master\" );\n+if ( txIdStore.getLastCommittedTransactionId() == BASE_TX_ID )\n             {\n                 msgLog.warn( \"Found and deleting empty store with mismatching store id\", e );\n                 stopServicesAndHandleBranchedStore( BranchedDataPolicy.keep_none );\n@@ -183,4 +149,4 @@ public class SwitchToSlaveBranchThenCopy extends SwitchToSlave\n         stopServices();\n         branchPolicy.handle( storeDir, pageCache, logService );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
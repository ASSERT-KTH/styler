{
    "project_name": "intuit-Tank",
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "58",
                "column": "70",
                "severity": "warning",
                "message": "'?' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     * @param objectClass\n     */\n    public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n        this.objectId = objectId;\n        this.versionId = versionId;\n        this.objectClass = objectClass.getCanonicalName();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/21/EntityVersion.java\nindex 87505811c66..1aca4053f13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/21/EntityVersion.java\n@@ -55,7 +55,7 @@ public class EntityVersion implements Serializable {\n      * @param versionId\n      * @param objectClass\n      */\n-    public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n+    public EntityVersion(int objectId, int versionId, @Nonnull Class< ? extends BaseEntity> objectClass) {\n         this.objectId = objectId;\n         this.versionId = versionId;\n         this.objectClass = objectClass.getCanonicalName();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "58",
                    "column": "68",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/21/EntityVersion.java\nindex 87505811c66..5be2fb2917e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/21/EntityVersion.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.project;\n \n /*\n@@ -28,90 +29,89 @@ import org.apache.commons.lang.builder.ToStringBuilder;\n \n /**\n  * EntityVersion\n- * \n+ *\n  * @author dangleton\n- * \n  */\n @Embeddable\n public class EntityVersion implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    @Column(name = \"object_id\")\n-    private int objectId;\n-\n-    @Column(name = \"version_id\")\n-    private int versionId;\n-\n-    @Column(name = \"object_class\")\n-    private String objectClass;\n-\n-    public EntityVersion() {\n-\n-    }\n-\n-    /**\n-     * @param objectId\n-     * @param versionId\n-     * @param objectClass\n-     */\n-    public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n-        this.objectId = objectId;\n-        this.versionId = versionId;\n-        this.objectClass = objectClass.getCanonicalName();\n-    }\n-\n-    /**\n-     * @return the objectId\n-     */\n-    public int getObjectId() {\n-        return objectId;\n-    }\n-\n-    /**\n-     * @return the versionId\n-     */\n-    public int getVersionId() {\n-        return versionId;\n-    }\n-\n-    /**\n-     * @return the objectClass\n-     */\n-    public String getObjectClass() {\n-        return objectClass;\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    @Override\n-    public String toString() {\n-        return new ToStringBuilder(this).append(\"object class\", getObjectClass()).append(\"objectId\", getObjectId())\n-                .append(\"version\", getVersionId())\n-                .toString();\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!(obj instanceof EntityVersion)) {\n-            return false;\n-        }\n-        EntityVersion o = (EntityVersion) obj;\n-        return new EqualsBuilder().append(o.getObjectId(), getObjectId()).append(o.getVersionId(), getVersionId())\n-                .append(o.getObjectClass(), getObjectClass()).isEquals();\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder(35, 21).append(getObjectId()).append(getVersionId()).append(getObjectClass())\n-                .toHashCode();\n+  private static final long serialVersionUID = 1L;\n+\n+  @Column(name = \"object_id\")\n+  private int objectId;\n+\n+  @Column(name = \"version_id\")\n+  private int versionId;\n+\n+  @Column(name = \"object_class\")\n+  private String objectClass;\n+\n+  public EntityVersion() {\n+\n+  }\n+\n+  /**\n+   * @param objectId\n+   * @param versionId\n+   * @param objectClass\n+   */\n+  public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n+    this.objectId = objectId;\n+    this.versionId = versionId;\n+    this.objectClass = objectClass.getCanonicalName();\n+  }\n+\n+  /**\n+   * @return the objectId\n+   */\n+  public int getObjectId() {\n+    return objectId;\n+  }\n+\n+  /**\n+   * @return the versionId\n+   */\n+  public int getVersionId() {\n+    return versionId;\n+  }\n+\n+  /**\n+   * @return the objectClass\n+   */\n+  public String getObjectClass() {\n+    return objectClass;\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public String toString() {\n+    return new ToStringBuilder(this).append(\"object class\", getObjectClass()).append(\"objectId\", getObjectId())\n+      .append(\"version\", getVersionId())\n+      .toString();\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (!(obj instanceof EntityVersion)) {\n+      return false;\n     }\n+    EntityVersion o = (EntityVersion) obj;\n+    return new EqualsBuilder().append(o.getObjectId(), getObjectId()).append(o.getVersionId(), getVersionId())\n+      .append(o.getObjectClass(), getObjectClass()).isEquals();\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(35, 21).append(getObjectId()).append(getVersionId()).append(getObjectClass())\n+      .toHashCode();\n+  }\n \n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "column": "70",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/21/EntityVersion.java\nindex 87505811c66..84836c74791 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/21/EntityVersion.java\n@@ -114,4 +114,4 @@ public class EntityVersion implements Serializable {\n                 .toHashCode();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "60",
                    "column": "70",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/21/EntityVersion.java\nindex 87505811c66..63d3f327d7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/21/EntityVersion.java\n@@ -16,12 +16,12 @@ package com.intuit.tank.project;\n  * #L%\n  */\n \n-import java.io.Serializable;\n \n+\n+import java.io.Serializable;\n import javax.annotation.Nonnull;\n import javax.persistence.Column;\n import javax.persistence.Embeddable;\n-\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang.builder.ToStringBuilder;\n@@ -32,6 +32,7 @@ import org.apache.commons.lang.builder.ToStringBuilder;\n  * @author dangleton\n  * \n  */\n+\n @Embeddable\n public class EntityVersion implements Serializable {\n \n@@ -47,7 +48,6 @@ public class EntityVersion implements Serializable {\n     private String objectClass;\n \n     public EntityVersion() {\n-\n     }\n \n     /**\n@@ -55,6 +55,8 @@ public class EntityVersion implements Serializable {\n      * @param versionId\n      * @param objectClass\n      */\n+\n+\n     public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n         this.objectId = objectId;\n         this.versionId = versionId;\n@@ -64,6 +66,8 @@ public class EntityVersion implements Serializable {\n     /**\n      * @return the objectId\n      */\n+\n+\n     public int getObjectId() {\n         return objectId;\n     }\n@@ -71,6 +75,8 @@ public class EntityVersion implements Serializable {\n     /**\n      * @return the versionId\n      */\n+\n+\n     public int getVersionId() {\n         return versionId;\n     }\n@@ -78,6 +84,8 @@ public class EntityVersion implements Serializable {\n     /**\n      * @return the objectClass\n      */\n+\n+\n     public String getObjectClass() {\n         return objectClass;\n     }\n@@ -85,33 +93,32 @@ public class EntityVersion implements Serializable {\n     /**\n      * @{inheritDoc\n      */\n+\n     @Override\n     public String toString() {\n-        return new ToStringBuilder(this).append(\"object class\", getObjectClass()).append(\"objectId\", getObjectId())\n-                .append(\"version\", getVersionId())\n-                .toString();\n+        return new ToStringBuilder(this).append(\"object class\", getObjectClass()).append(\"objectId\", getObjectId()).append(\"version\", getVersionId()).toString();\n     }\n \n     /**\n      * @{inheritDoc\n      */\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (!(obj instanceof EntityVersion)) {\n             return false;\n         }\n         EntityVersion o = (EntityVersion) obj;\n-        return new EqualsBuilder().append(o.getObjectId(), getObjectId()).append(o.getVersionId(), getVersionId())\n-                .append(o.getObjectClass(), getObjectClass()).isEquals();\n+        return new EqualsBuilder().append(o.getObjectId(), getObjectId()).append(o.getVersionId(), getVersionId()).append(o.getObjectClass(), getObjectClass()).isEquals();\n     }\n \n     /**\n      * @{inheritDoc\n      */\n+\n     @Override\n     public int hashCode() {\n-        return new HashCodeBuilder(35, 21).append(getObjectId()).append(getVersionId()).append(getObjectClass())\n-                .toHashCode();\n+        return new HashCodeBuilder(35, 21).append(getObjectId()).append(getVersionId()).append(getObjectClass()).toHashCode();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/21/EntityVersion.java\nindex 87505811c66..1aca4053f13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/21/EntityVersion.java\n@@ -55,7 +55,7 @@ public class EntityVersion implements Serializable {\n      * @param versionId\n      * @param objectClass\n      */\n-    public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n+    public EntityVersion(int objectId, int versionId, @Nonnull Class< ? extends BaseEntity> objectClass) {\n         this.objectId = objectId;\n         this.versionId = versionId;\n         this.objectClass = objectClass.getCanonicalName();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/21/EntityVersion.java\nindex 87505811c66..1aca4053f13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/21/EntityVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/21/EntityVersion.java\n@@ -55,7 +55,7 @@ public class EntityVersion implements Serializable {\n      * @param versionId\n      * @param objectClass\n      */\n-    public EntityVersion(int objectId, int versionId, @Nonnull Class<? extends BaseEntity> objectClass) {\n+    public EntityVersion(int objectId, int versionId, @Nonnull Class< ? extends BaseEntity> objectClass) {\n         this.objectId = objectId;\n         this.versionId = versionId;\n         this.objectClass = objectClass.getCanonicalName();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "762",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/762/FileHeaderHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/762/FileHeaderHandler.java\nindex cee3a5964e4..b3f86a247ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/762/FileHeaderHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/762/FileHeaderHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import io.netty.channel.ChannelHandlerContext;\n@@ -31,22 +32,22 @@ import static org.neo4j.causalclustering.catchup.CatchupClientProtocol.State;\n \n public class FileHeaderHandler extends SimpleChannelInboundHandler<FileHeader>\n {\n-    private final CatchupClientProtocol protocol;\n-    private final CatchUpResponseHandler handler;\n-    private final Log log;\n+  private final CatchupClientProtocol protocol;\n+  private final CatchUpResponseHandler handler;\n+  private final Log log;\n \n-    public FileHeaderHandler( CatchupClientProtocol protocol, CatchUpResponseHandler handler, LogProvider logProvider )\n-    {\n-        this.protocol = protocol;\n-        this.handler = handler;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public FileHeaderHandler(CatchupClientProtocol protocol, CatchUpResponseHandler handler, LogProvider logProvider)\n+  {\n+    this.protocol = protocol;\n+    this.handler = handler;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    protected void channelRead0( ChannelHandlerContext ctx, FileHeader fileHeader )\n-    {\n-        log.info( \"Receiving file: %s\", fileHeader.fileName() );\n-        handler.onFileHeader( fileHeader );\n-        protocol.expect( State.FILE_CONTENTS );\n-    }\n+  @Override\n+  protected void channelRead0(ChannelHandlerContext ctx, FileHeader fileHeader)\n+  {\n+    log.info(\"Receiving file: %s\", fileHeader.fileName());\n+    handler.onFileHeader(fileHeader);\n+    protocol.expect(State.FILE_CONTENTS);\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/762/FileHeaderHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/762/FileHeaderHandler.java\nindex cee3a5964e4..a208e27e49d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/762/FileHeaderHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/762/FileHeaderHandler.java\n@@ -49,4 +49,4 @@ public class FileHeaderHandler extends SimpleChannelInboundHandler<FileHeader>\n         handler.onFileHeader( fileHeader );\n         protocol.expect( State.FILE_CONTENTS );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
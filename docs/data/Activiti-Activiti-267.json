{
    "project_name": "Activiti-Activiti",
    "error_id": "267",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.core.common.spring.connector;\n\nimport java.io.IOException;\nimport java.io.InputStream;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/267/ConnectorDefinitionService.java\nindex c6dbb8b05dc..16523a1fcd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/267/ConnectorDefinitionService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.connector;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/267/ConnectorDefinitionService.java\nindex c6dbb8b05dc..16523a1fcd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/267/ConnectorDefinitionService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.connector;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/267/ConnectorDefinitionService.java\nindex c6dbb8b05dc..2f33fc3bc4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/267/ConnectorDefinitionService.java\n@@ -22,71 +22,66 @@ import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-\n import com.fasterxml.jackson.databind.ObjectMapper;\n import org.activiti.core.common.model.connector.ConnectorDefinition;\n import org.springframework.core.io.Resource;\n import org.springframework.core.io.support.ResourcePatternResolver;\n \n-public class ConnectorDefinitionService {\n-\n-    private String connectorRoot;\n \n-    private final ObjectMapper objectMapper;\n-\n-    private ResourcePatternResolver resourceLoader;\n+public class ConnectorDefinitionService {\n \n-    public ConnectorDefinitionService(String connectorRoot, ObjectMapper objectMapper, ResourcePatternResolver resourceLoader) {\n-        this.connectorRoot = connectorRoot;\n-        this.objectMapper = objectMapper;\n-        this.resourceLoader = resourceLoader;\n-    }\n+  private String connectorRoot;\n \n-    private Optional<Resource[]> retrieveResources() throws IOException {\n+  private final ObjectMapper objectMapper;\n \n-        Optional<Resource[]> resources = Optional.empty();\n+  private ResourcePatternResolver resourceLoader;\n \n-        Resource connectorRootPath = resourceLoader.getResource(connectorRoot);\n-        if (connectorRootPath.exists()) {\n-            return Optional.ofNullable(resourceLoader.getResources(connectorRoot + \"**.json\"));\n-        }\n-        return resources;\n-    }\n+  public ConnectorDefinitionService(String connectorRoot, ObjectMapper objectMapper, ResourcePatternResolver resourceLoader) {\n+    this.connectorRoot = connectorRoot;\n+    this.objectMapper = objectMapper;\n+    this.resourceLoader = resourceLoader;\n+  }\n \n-    private ConnectorDefinition read(InputStream inputStream) throws IOException {\n-        return objectMapper.readValue(inputStream,\n-                ConnectorDefinition.class);\n+  private Optional<Resource[]> retrieveResources() throws IOException {\n+    Optional<Resource[]> resources = Optional.empty();\n+    Resource connectorRootPath = resourceLoader.getResource(connectorRoot);\n+    if (connectorRootPath.exists()) {\n+      return Optional.ofNullable(resourceLoader.getResources(connectorRoot + \"**.json\"));\n     }\n+    return resources;\n+  }\n \n-    public List<ConnectorDefinition> get() throws IOException {\n+  private ConnectorDefinition read(InputStream inputStream) throws IOException {\n+    return objectMapper.readValue(inputStream, ConnectorDefinition.class);\n+  }\n \n-        List<ConnectorDefinition> connectorDefinitions = new ArrayList<>();\n-        Optional<Resource[]> resourcesOptional = retrieveResources();\n-        if (resourcesOptional.isPresent()) {\n-            for (Resource resource : resourcesOptional.get()) {\n-                connectorDefinitions.add(read(resource.getInputStream()));\n-            }\n-            validate(connectorDefinitions);\n+  public List<ConnectorDefinition> get() throws IOException {\n+    List<ConnectorDefinition> connectorDefinitions = new ArrayList<>();\n+    Optional<Resource[]> resourcesOptional = retrieveResources();\n+    if (resourcesOptional.isPresent()) {\n+        for (Resource resource : resourcesOptional.get()) {\n+            connectorDefinitions.add(read(resource.getInputStream()));\n         }\n-        return connectorDefinitions;\n+        validate(connectorDefinitions);\n     }\n+    return connectorDefinitions;\n+  }\n \n-    protected void validate(List<ConnectorDefinition> connectorDefinitions) {\n-        if (!connectorDefinitions.isEmpty()) {\n-            Set<String> processedNames = new HashSet<>();\n-\n-            for (ConnectorDefinition connectorDefinition : connectorDefinitions) {\n-                String name = connectorDefinition.getName();\n-                if (name == null || name.isEmpty()) {\n-                    throw new IllegalStateException(\"connectorDefinition name cannot be null or empty\");\n-                }\n-                if (name.contains(\".\")) {\n-                    throw new IllegalStateException(\"connectorDefinition name cannot have '.' character\");\n-                }\n-                if (!processedNames.add(name)) {\n-                    throw new IllegalStateException(\"More than one connectorDefinition with name '\" + name + \"' was found. Names must be unique.\");\n-                }\n-            }\n-        }\n+  protected void validate(List<ConnectorDefinition> connectorDefinitions) {\n+    if (!connectorDefinitions.isEmpty()) {\n+      Set<String> processedNames = new HashSet<>();\n+      for (ConnectorDefinition connectorDefinition : connectorDefinitions) {\n+          String name = connectorDefinition.getName();\n+          if (name == null || name.isEmpty()) {\n+            throw new IllegalStateException(\"connectorDefinition name cannot be null or empty\");\n+          }\n+          if (name.contains(\".\")) {\n+            throw new IllegalStateException(\"connectorDefinition name cannot have '.' character\");\n+          }\n+          if (!processedNames.add(name)) {\n+            throw new IllegalStateException(\"More than one connectorDefinition with name '\" + name + \"' was found. Names must be unique.\");\n+          }\n+      }\n     }\n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/267/ConnectorDefinitionService.java\nindex c6dbb8b05dc..16523a1fcd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/267/ConnectorDefinitionService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.connector;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/267/ConnectorDefinitionService.java\nindex c6dbb8b05dc..16523a1fcd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/267/ConnectorDefinitionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/267/ConnectorDefinitionService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.connector;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
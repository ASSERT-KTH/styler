{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "163",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 138).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@SwaggerDefinition(consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\npublic class ApiOperationSpringMVCSchema {\n  @RequestMapping(value = \"/testMediaType1\", method = RequestMethod.POST, consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n  @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n  public String testMediaType1(@RequestBody String input) {\n    return input;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/163/ApiOperationSpringMVCSchema.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/163/ApiOperationSpringMVCSchema.java\nindex 78781f69abb..d4986b37ff2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/163/ApiOperationSpringMVCSchema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/163/ApiOperationSpringMVCSchema.java\n@@ -43,4 +43,4 @@ public class ApiOperationSpringMVCSchema {\n   public String testMediaType2(@RequestBody String input) {\n     return input;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "37",
                    "column": "7",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "8",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "26",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/163/ApiOperationSpringMVCSchema.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/163/ApiOperationSpringMVCSchema.java\nindex 78781f69abb..53f5f1f7042 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/163/ApiOperationSpringMVCSchema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/163/ApiOperationSpringMVCSchema.java\n@@ -32,8 +32,11 @@ import io.swagger.annotations.SwaggerDefinition;\n @RequestMapping(value = \"/apiOperationSpringMVCSchema\", consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n @SwaggerDefinition(consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n public class ApiOperationSpringMVCSchema {\n-  @RequestMapping(value = \"/testMediaType1\", method = RequestMethod.POST, consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n-  @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n+\n+  @RequestMapping\n+(value=\"/testMediaType1\",method = RequestMethod.POST,\n+consumes= MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n+   @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n   public String testMediaType1(@RequestBody String input) {\n     return input;\n   }\n",
            "diff_size": 5
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
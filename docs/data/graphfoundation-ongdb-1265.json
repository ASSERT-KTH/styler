{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1265",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1265/SchemaDescriptorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1265/SchemaDescriptorFactory.java\nindex ffd27e800a3..4c1a8d9f7d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1265/SchemaDescriptorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1265/SchemaDescriptorFactory.java\n@@ -17,56 +17,57 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.schema;\n \n import org.neo4j.kernel.api.StatementConstants;\n \n public class SchemaDescriptorFactory\n {\n-    private SchemaDescriptorFactory()\n-    {\n-    }\n+  private SchemaDescriptorFactory()\n+  {\n+  }\n \n-    public static LabelSchemaDescriptor forLabel( int labelId, int... propertyIds )\n-    {\n-        validateLabelId( labelId );\n-        validatePropertyIds( propertyIds );\n-        return new LabelSchemaDescriptor( labelId, propertyIds );\n-    }\n+  public static LabelSchemaDescriptor forLabel(int labelId, int... propertyIds)\n+  {\n+    validateLabelId(labelId);\n+    validatePropertyIds(propertyIds);\n+    return new LabelSchemaDescriptor(labelId, propertyIds);\n+  }\n \n-    public static RelationTypeSchemaDescriptor forRelType( int relTypeId, int... propertyIds )\n-    {\n-        validateRelationshipTypeLabelId( relTypeId );\n-        validatePropertyIds( propertyIds );\n-        return new RelationTypeSchemaDescriptor( relTypeId, propertyIds );\n-    }\n+  public static RelationTypeSchemaDescriptor forRelType(int relTypeId, int... propertyIds)\n+  {\n+    validateRelationshipTypeLabelId(relTypeId);\n+    validatePropertyIds(propertyIds);\n+    return new RelationTypeSchemaDescriptor(relTypeId, propertyIds);\n+  }\n \n-    private static void validatePropertyIds( int[] propertyIds )\n+  private static void validatePropertyIds(int[] propertyIds)\n+  {\n+    for (int propertyId : propertyIds)\n     {\n-        for ( int propertyId : propertyIds )\n-        {\n-            if ( StatementConstants.NO_SUCH_PROPERTY_KEY == propertyId )\n-            {\n-                throw new IllegalArgumentException(\n-                        \"Index schema descriptor can't be created for non existent property.\" );\n-            }\n-        }\n+      if (StatementConstants.NO_SUCH_PROPERTY_KEY == propertyId)\n+      {\n+        throw new IllegalArgumentException(\n+            \"Index schema descriptor can't be created for non existent property.\");\n+      }\n     }\n+  }\n \n-    private static void validateRelationshipTypeLabelId( int relType )\n+  private static void validateRelationshipTypeLabelId(int relType)\n+  {\n+    if (StatementConstants.NO_SUCH_RELATIONSHIP_TYPE == relType)\n     {\n-        if ( StatementConstants.NO_SUCH_RELATIONSHIP_TYPE == relType )\n-        {\n-            throw new IllegalArgumentException(\n-                    \"Index schema descriptor can't be created for non existent relationship type.\" );\n-        }\n+      throw new IllegalArgumentException(\n+          \"Index schema descriptor can't be created for non existent relationship type.\");\n     }\n+  }\n \n-    private static void validateLabelId( int labelId )\n+  private static void validateLabelId(int labelId)\n+  {\n+    if (StatementConstants.NO_SUCH_LABEL == labelId)\n     {\n-        if ( StatementConstants.NO_SUCH_LABEL == labelId )\n-        {\n-            throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent label.\" );\n-        }\n+      throw new IllegalArgumentException(\"Index schema descriptor can't be created for non existent label.\");\n     }\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1265/SchemaDescriptorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1265/SchemaDescriptorFactory.java\nindex ffd27e800a3..74eb900a6d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1265/SchemaDescriptorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1265/SchemaDescriptorFactory.java\n@@ -47,9 +47,8 @@ public class SchemaDescriptorFactory\n         {\n             if ( StatementConstants.NO_SUCH_PROPERTY_KEY == propertyId )\n             {\n-                throw new IllegalArgumentException(\n-                        \"Index schema descriptor can't be created for non existent property.\" );\n-            }\n+                throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent property.\" );\n+    }\n         }\n     }\n \n@@ -57,9 +56,8 @@ public class SchemaDescriptorFactory\n     {\n         if ( StatementConstants.NO_SUCH_RELATIONSHIP_TYPE == relType )\n         {\n-            throw new IllegalArgumentException(\n-                    \"Index schema descriptor can't be created for non existent relationship type.\" );\n-        }\n+            throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent relationship type.\" );\n+    }\n     }\n \n     private static void validateLabelId( int labelId )\n@@ -69,4 +67,4 @@ public class SchemaDescriptorFactory\n             throw new IllegalArgumentException( \"Index schema descriptor can't be created for non existent label.\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
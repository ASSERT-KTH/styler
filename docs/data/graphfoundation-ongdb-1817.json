{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1817",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1817/LatchMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1817/LatchMap.java\nindex 9711c596e46..2c597aeb503 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1817/LatchMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1817/LatchMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import org.neo4j.concurrent.BinaryLatch;\n@@ -31,89 +32,89 @@ import org.neo4j.util.FeatureToggles;\n  */\n final class LatchMap\n {\n-    static final class Latch extends BinaryLatch\n-    {\n-        private LatchMap latchMap;\n-        private int index;\n+  static final class Latch extends BinaryLatch\n+  {\n+    private LatchMap latchMap;\n+    private int index;\n \n-        @Override\n-        public void release()\n-        {\n-            latchMap.setLatch( index, null );\n-            super.release();\n-        }\n+    @Override\n+    public void release()\n+    {\n+      latchMap.setLatch(index, null);\n+      super.release();\n     }\n+  }\n \n-    private static final int faultLockStriping = FeatureToggles.getInteger( LatchMap.class, \"faultLockStriping\", 128 );\n-    private static final long faultLockMask = faultLockStriping - 1;\n-    private static final int latchesArrayBase = UnsafeUtil.arrayBaseOffset( Latch[].class );\n-    private static final int latchesArrayScale = UnsafeUtil.arrayIndexScale( Latch[].class );\n+  private static final int faultLockStriping = FeatureToggles.getInteger(LatchMap.class, \"faultLockStriping\", 128);\n+  private static final long faultLockMask = faultLockStriping - 1;\n+  private static final int latchesArrayBase = UnsafeUtil.arrayBaseOffset(Latch[].class);\n+  private static final int latchesArrayScale = UnsafeUtil.arrayIndexScale(Latch[].class);\n \n-    private final Latch[] latches;\n+  private final Latch[] latches;\n \n-    LatchMap()\n-    {\n-        latches = new Latch[faultLockStriping];\n-    }\n+  LatchMap()\n+  {\n+    latches = new Latch[faultLockStriping];\n+  }\n \n-    private long offset( int index )\n-    {\n-        return UnsafeUtil.arrayOffset( index, latchesArrayBase, latchesArrayScale );\n-    }\n+  private long offset(int index)\n+  {\n+    return UnsafeUtil.arrayOffset(index, latchesArrayBase, latchesArrayScale);\n+  }\n \n-    private void setLatch( int index, BinaryLatch newValue )\n-    {\n-        UnsafeUtil.putObjectVolatile( latches, offset( index ), newValue );\n-    }\n+  private void setLatch(int index, BinaryLatch newValue)\n+  {\n+    UnsafeUtil.putObjectVolatile(latches, offset(index), newValue);\n+  }\n \n-    private boolean compareAndSetLatch( int index, Latch expected, Latch update )\n-    {\n-        return UnsafeUtil.compareAndSwapObject( latches, offset( index ), expected, update );\n-    }\n+  private boolean compareAndSetLatch(int index, Latch expected, Latch update)\n+  {\n+    return UnsafeUtil.compareAndSwapObject(latches, offset(index), expected, update);\n+  }\n \n-    private Latch getLatch( int index )\n-    {\n-        return (Latch) UnsafeUtil.getObjectVolatile( latches, offset( index ) );\n-    }\n+  private Latch getLatch(int index)\n+  {\n+    return (Latch) UnsafeUtil.getObjectVolatile(latches, offset(index));\n+  }\n \n-    /**\n-     * If a latch is currently installed for the given (or any colliding) identifier, then it will be waited upon and\n-     * {@code null} will be returned.\n-     *\n-     * Otherwise, if there is currently no latch installed for the given identifier, then one will be created and\n-     * installed, and that latch will be returned. Once the page fault has been completed, the returned latch must be\n-     * released. Releasing the latch will unblock all threads that are waiting upon it, and the latch will be\n-     * atomically uninstalled.\n-     */\n-    Latch takeOrAwaitLatch( long identifier )\n+  /**\n+   * If a latch is currently installed for the given (or any colliding) identifier, then it will be waited upon and\n+   * {@code null} will be returned.\n+   * <p>\n+   * Otherwise, if there is currently no latch installed for the given identifier, then one will be created and\n+   * installed, and that latch will be returned. Once the page fault has been completed, the returned latch must be\n+   * released. Releasing the latch will unblock all threads that are waiting upon it, and the latch will be\n+   * atomically uninstalled.\n+   */\n+  Latch takeOrAwaitLatch(long identifier)\n+  {\n+    int index = index(identifier);\n+    Latch latch = getLatch(index);\n+    while (latch == null)\n     {\n-        int index = index( identifier );\n-        Latch latch = getLatch( index );\n-        while ( latch == null )\n-        {\n-            latch = new Latch();\n-            if ( compareAndSetLatch( index, null, latch ) )\n-            {\n-                latch.latchMap = this;\n-                latch.index = index;\n-                return latch;\n-            }\n-            latch = getLatch( index );\n-        }\n-        latch.await();\n-        return null;\n+      latch = new Latch();\n+      if (compareAndSetLatch(index, null, latch))\n+      {\n+        latch.latchMap = this;\n+        latch.index = index;\n+        return latch;\n+      }\n+      latch = getLatch(index);\n     }\n+    latch.await();\n+    return null;\n+  }\n \n-    private int index( long identifier )\n-    {\n-        return (int) (mix( identifier ) & faultLockMask);\n-    }\n+  private int index(long identifier)\n+  {\n+    return (int) (mix(identifier) & faultLockMask);\n+  }\n \n-    private long mix( long identifier )\n-    {\n-        identifier ^= identifier << 21;\n-        identifier ^= identifier >>> 35;\n-        identifier ^= identifier << 4;\n-        return identifier;\n-    }\n+  private long mix(long identifier)\n+  {\n+    identifier ^= identifier << 21;\n+    identifier ^= identifier >>> 35;\n+    identifier ^= identifier << 4;\n+    return identifier;\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "110",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1817/LatchMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1817/LatchMap.java\nindex 9711c596e46..c1471dfac08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1817/LatchMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1817/LatchMap.java\n@@ -98,7 +98,8 @@ final class LatchMap\n                 latch.index = index;\n                 return latch;\n             }\n-            latch = getLatch( index );\n+\n+latch = getLatch( index );\n         }\n         latch.await();\n         return null;\n@@ -106,7 +107,7 @@ final class LatchMap\n \n     private int index( long identifier )\n     {\n-        return (int) (mix( identifier ) & faultLockMask);\n+        return ( int) (mix( identifier ) & faultLockMask);\n     }\n \n     private long mix( long identifier )\n@@ -116,4 +117,4 @@ final class LatchMap\n         identifier ^= identifier << 4;\n         return identifier;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
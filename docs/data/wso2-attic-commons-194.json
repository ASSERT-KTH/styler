{
    "project_name": "wso2-attic-commons",
    "error_id": "194",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * @see org.eclipse.wst.wsdl.validation.internal.xml.XMLCatalog#resolveEntityLocation(java.lang.String, java.lang.String)\n   */\n  public String resolveEntityLocation(String publicId, String systemId)\n  {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/194/XMLCatalogImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/194/XMLCatalogImpl.java\nindex efcbde587b8..dce3e597f5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/194/XMLCatalogImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/194/XMLCatalogImpl.java\n@@ -4,7 +4,7 @@\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n  * http://www.eclipse.org/legal/epl-v10.html\n- * \n+ *\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n@@ -19,15 +19,13 @@ import org.xml.sax.InputSource;\n  * An implementation of the WSDL Validator's XML Catalog that uses the XML Catalog\n  * from ant.\n  */\n-public class XMLCatalogImpl extends org.eclipse.wst.wsdl.validation.internal.xml.XMLCatalog\n-{\n+public class XMLCatalogImpl extends org.eclipse.wst.wsdl.validation.internal.xml.XMLCatalog {\n   protected XMLCatalog xmlCatalog = new XMLCatalog();\n \n   /**\n    * @see org.eclipse.wst.wsdl.validation.internal.xml.XMLCatalog#addEntryToCatalog(java.lang.String, java.lang.String)\n    */\n-  public void addEntryToCatalog(String publicId, String systemId)\n-  {\n+  public void addEntryToCatalog(String publicId, String systemId) {\n     DTDLocation resLoc = new DTDLocation();\n     resLoc.setLocation(systemId);\n     resLoc.setPublicId(publicId);\n@@ -37,26 +35,21 @@ public class XMLCatalogImpl extends org.eclipse.wst.wsdl.validation.internal.xml\n   /**\n    * @see org.eclipse.wst.wsdl.validation.internal.xml.XMLCatalog#resolveEntityLocation(java.lang.String, java.lang.String)\n    */\n-  public String resolveEntityLocation(String publicId, String systemId)\n-  {\n+  public String resolveEntityLocation(String publicId, String systemId) {\n     String resolvedId = null;\n \n-    try\n-    {\n+    try {\n       InputSource is = xmlCatalog.resolveEntity(publicId, systemId);\n-      if (is != null)\n-      {\n+      if (is != null) {\n         resolvedId = is.getSystemId();\n       }\n     }\n     // \n-    catch (Exception e)\n-    {\n+    catch (Exception e) {\n       // Do nothing if the resource can't be resolved.\n     }\n     // needs to return null if it can't resolve the id\n-    if (resolvedId != null && resolvedId.equals(\"\"))\n-    {\n+    if (resolvedId != null && resolvedId.equals(\"\")) {\n       resolvedId = null;\n     }\n     return resolvedId;\n@@ -64,11 +57,10 @@ public class XMLCatalogImpl extends org.eclipse.wst.wsdl.validation.internal.xml\n \n   /**\n    * Add a configured XML Catalog to this catalog.\n-   * \n+   *\n    * @param catalog A configured XML catalog to add to this catalog.\n    */\n-  public void addXMLCatalog(XMLCatalog catalog)\n-  {\n+  public void addXMLCatalog(XMLCatalog catalog) {\n     xmlCatalog.addConfiguredXMLCatalog(catalog);\n   }\n \n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/194/XMLCatalogImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/194/XMLCatalogImpl.java\nindex efcbde587b8..13b0e019e0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/194/XMLCatalogImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/194/XMLCatalogImpl.java\n@@ -72,4 +72,4 @@ public class XMLCatalogImpl extends org.eclipse.wst.wsdl.validation.internal.xml\n     xmlCatalog.addConfiguredXMLCatalog(catalog);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
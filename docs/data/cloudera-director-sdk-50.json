{
    "project_name": "cloudera-director-sdk",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/50/ErrorInfo.java\nindex 8de3f407def..e35a4db4f99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/50/ErrorInfo.java\n@@ -30,6 +30,7 @@ public class ErrorInfo {\n   private Map<String, String> properties;\n   /* Retryable */\n   private Boolean retryable;\n+\n   public interface ErrorCode {\n     String CLUSTER_DEPLOYMENT_IN_WRONG_STAGE = \"CLUSTER_DEPLOYMENT_IN_WRONG_STAGE\";\n     String CLUSTER_DEPLOYMENT_FAIL = \"CLUSTER_DEPLOYMENT_FAIL\";\n@@ -86,12 +87,15 @@ public class ErrorInfo {\n     String SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE = \"SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE\";\n     String UNDEFINED = \"UNDEFINED\";\n   }\n+\n   public interface ErrorType {\n     String CLIENT = \"CLIENT\";\n     String SERVICE = \"SERVICE\";\n     String UNKNOWN = \"UNKNOWN\";\n   }\n-  public ErrorInfo() { }\n+\n+  public ErrorInfo() {\n+  }\n \n   private ErrorInfo(String errorCode, String errorType, Map<String, String> properties, Boolean retryable) {\n     this.errorCode = errorCode;\n@@ -144,15 +148,17 @@ public class ErrorInfo {\n \n   public ErrorInfoBuilder toBuilder() {\n     return builder()\n-      .errorCode(errorCode)\n-      .errorType(errorType)\n-      .properties(properties)\n-      .retryable(retryable)\n-      ;\n+        .errorCode(errorCode)\n+        .errorType(errorType)\n+        .properties(properties)\n+        .retryable(retryable)\n+        ;\n   }\n+\n   public String getErrorCode() {\n     return errorCode;\n   }\n+\n   public void setErrorCode(String errorCode) {\n     this.errorCode = errorCode;\n   }\n@@ -160,6 +166,7 @@ public class ErrorInfo {\n   public String getErrorType() {\n     return errorType;\n   }\n+\n   public void setErrorType(String errorType) {\n     this.errorType = errorType;\n   }\n@@ -167,6 +174,7 @@ public class ErrorInfo {\n   public Map<String, String> getProperties() {\n     return properties;\n   }\n+\n   public void setProperties(Map<String, String> properties) {\n     this.properties = properties;\n   }\n@@ -174,29 +182,42 @@ public class ErrorInfo {\n   public Boolean getRetryable() {\n     return retryable;\n   }\n+\n   public void setRetryable(Boolean retryable) {\n     this.retryable = retryable;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     ErrorInfo other = (ErrorInfo) o; // NOPMD\n \n     if (errorCode != null ?\n         !errorCode.equals(other.errorCode) :\n-        other.errorCode != null) return false;\n+        other.errorCode != null) {\n+      return false;\n+    }\n     if (errorType != null ?\n         !errorType.equals(other.errorType) :\n-        other.errorType != null) return false;\n+        other.errorType != null) {\n+      return false;\n+    }\n     if (properties != null ?\n         !properties.equals(other.properties) :\n-        other.properties != null) return false;\n+        other.properties != null) {\n+      return false;\n+    }\n     if (retryable != null ?\n         !retryable.equals(other.retryable) :\n-        other.retryable != null) return false;\n+        other.retryable != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -211,7 +232,7 @@ public class ErrorInfo {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ErrorInfo {\" + newLine);\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "179",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "181",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "183",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "185",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/50/ErrorInfo.java\nindex 8de3f407def..396b1f96a99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/50/ErrorInfo.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v8.model;\n@@ -30,7 +15,8 @@ public class ErrorInfo {\n   private Map<String, String> properties;\n   /* Retryable */\n   private Boolean retryable;\n-  public interface ErrorCode {\n+\n+public interface ErrorCode {\n     String CLUSTER_DEPLOYMENT_IN_WRONG_STAGE = \"CLUSTER_DEPLOYMENT_IN_WRONG_STAGE\";\n     String CLUSTER_DEPLOYMENT_FAIL = \"CLUSTER_DEPLOYMENT_FAIL\";\n     String CLUSTER_GET_PARCEL_FAIL = \"CLUSTER_GET_PARCEL_FAIL\";\n@@ -86,12 +72,14 @@ public class ErrorInfo {\n     String SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE = \"SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE\";\n     String UNDEFINED = \"UNDEFINED\";\n   }\n-  public interface ErrorType {\n+\n+public interface ErrorType {\n     String CLIENT = \"CLIENT\";\n     String SERVICE = \"SERVICE\";\n     String UNKNOWN = \"UNKNOWN\";\n   }\n-  public ErrorInfo() { }\n+\n+public ErrorInfo() { }\n \n   private ErrorInfo(String errorCode, String errorType, Map<String, String> properties, Boolean retryable) {\n     this.errorCode = errorCode;\n@@ -112,7 +100,8 @@ public class ErrorInfo {\n   }\n \n   public static class ErrorInfoBuilder {\n-    private String errorCode = null;\n+\n+  private String errorCode = null;\n     private String errorType = null;\n     private Map<String, String> properties = new HashMap<String, String>();\n     private Boolean retryable = null;\n@@ -143,14 +132,13 @@ public class ErrorInfo {\n   }\n \n   public ErrorInfoBuilder toBuilder() {\n-    return builder()\n-      .errorCode(errorCode)\n+    return builder().errorCode(errorCode)\n       .errorType(errorType)\n       .properties(properties)\n-      .retryable(retryable)\n-      ;\n+      .retryable(retryable);\n   }\n-  public String getErrorCode() {\n+\n+public String getErrorCode() {\n     return errorCode;\n   }\n   public void setErrorCode(String errorCode) {\n@@ -181,22 +169,20 @@ public class ErrorInfo {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ErrorInfo other = (ErrorInfo) o; // NOPMD\n-\n-    if (errorCode != null ?\n-        !errorCode.equals(other.errorCode) :\n-        other.errorCode != null) return false;\n-    if (errorType != null ?\n-        !errorType.equals(other.errorType) :\n-        other.errorType != null) return false;\n-    if (properties != null ?\n-        !properties.equals(other.properties) :\n-        other.properties != null) return false;\n-    if (retryable != null ?\n-        !retryable.equals(other.retryable) :\n-        other.retryable != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    ErrorInfo other = (ErrorInfo) o;\n+\n+// NOPMD\n+\n+    if (errorCode != null ?!errorCode.equals(other.errorCode) : other.errorCode != null) return false;\n+\n+if (errorType != null ?!errorType.equals(other.errorType) : other.errorType != null) return false;\n+\n+if (properties != null ?!properties.equals(other.properties) : other.properties != null) return false;\n+\n+if (retryable != null ?!retryable.equals(other.retryable) : other.retryable != null) return false;\n     return true;\n   }\n \n@@ -211,7 +197,7 @@ public class ErrorInfo {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ErrorInfo {\" + newLine);\n@@ -222,5 +208,4 @@ public class ErrorInfo {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "212",
                    "column": "22",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "212",
                    "column": "23",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "312",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "315",
                    "column": "33",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "317",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "317",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "317",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "319",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "319",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "319",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "320",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "320",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "320",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "328",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "328",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "328",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "328",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "328",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "329",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "329",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "329",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "329",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "329",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "330",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "330",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "330",
                    "column": "45",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "330",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "330",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/50/ErrorInfo.java\nindex 8de3f407def..c825a2920bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/50/ErrorInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/50/ErrorInfo.java\n@@ -21,100 +21,223 @@ package com.cloudera.director.client.v8.model;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class ErrorInfo {\n   /* Error code */\n+\n   private String errorCode;\n   /* Error type */\n+\n   private String errorType;\n   /* Properties */\n+\n   private Map<String, String> properties;\n   /* Retryable */\n+\n   private Boolean retryable;\n+\n   public interface ErrorCode {\n-    String CLUSTER_DEPLOYMENT_IN_WRONG_STAGE = \"CLUSTER_DEPLOYMENT_IN_WRONG_STAGE\";\n-    String CLUSTER_DEPLOYMENT_FAIL = \"CLUSTER_DEPLOYMENT_FAIL\";\n-    String CLUSTER_GET_PARCEL_FAIL = \"CLUSTER_GET_PARCEL_FAIL\";\n-    String CLUSTER_MISSING_PRODUCT_PARCEL = \"CLUSTER_MISSING_PRODUCT_PARCEL\";\n-    String CLUSTER_PARCEL_VALIDATION_FAIL = \"CLUSTER_PARCEL_VALIDATION_FAIL\";\n-    String CLUSTER_UNSUPPORTED_UPDATE_STEP = \"CLUSTER_UNSUPPORTED_UPDATE_STEP\";\n-    String CLUSTER_RESTART_FAIL = \"CLUSTER_RESTART_FAIL\";\n-    String CM_AGENT_INSTALLATION_FAIL = \"CM_AGENT_INSTALLATION_FAIL\";\n-    String CM_BAD_REQUEST = \"CM_BAD_REQUEST\";\n-    String CM_CMD_FAIL = \"CM_CMD_FAIL\";\n-    String CM_ILLEGAL_API_VERSION = \"CM_ILLEGAL_API_VERSION\";\n-    String CM_ILLEGAL_ARGUMENT = \"CM_ILLEGAL_ARGUMENT\";\n-    String CM_REPO_EMPTY_URL = \"CM_REPO_EMPTY_URL\";\n-    String CM_REPO_MULTIPLE_URL = \"CM_REPO_MULTIPLE_URL\";\n-    String CM_UNAUTHORIZED_OPERATION = \"CM_UNAUTHORIZED_OPERATION\";\n-    String CM_UNSUPPORTED_OPERATION = \"CM_UNSUPPORTED_OPERATION\";\n-    String CM_UNSUPPORTED_SERVICE_VERSIONS = \"CM_UNSUPPORTED_SERVICE_VERSIONS\";\n-    String CM_REDEPLOY_CLIENT_CONFIGS_FAIL = \"CM_REDEPLOY_CLIENT_CONFIGS_FAIL\";\n-    String CM_IMPORT_KERBEROS_MISSING_PRINCIPAL = \"CM_IMPORT_KERBEROS_MISSING_PRINCIPAL\";\n-    String CM_IMPORT_KERBEROS_INCORRECT_PASSWORD = \"CM_IMPORT_KERBEROS_INCORRECT_PASSWORD\";\n-    String CM_SERVICE_HOST_NOT_FOUND = \"CM_SERVICE_HOST_NOT_FOUND\";\n-    String CM_SERVICE_READ_ERROR = \"CM_SERVICE_READ_ERROR\";\n-    String CM_SERVICE_WRONG_STATE_FOR_DELETION = \"CM_SERVICE_WRONG_STATE_FOR_DELETION\";\n-    String CM_SERVICE_DB_AND_TEMPLATE_MISSING = \"CM_SERVICE_DB_AND_TEMPLATE_MISSING\";\n-    String CM_FAIL_TRIGGER_FIRSTRUN = \"CM_FAIL_TRIGGER_FIRSTRUN\";\n-    String CM_FIRSTRUN_AUTH_FAIL = \"CM_FIRSTRUN_AUTH_FAIL\";\n-    String CM_FIRSTRUN_IO_ERROR = \"CM_FIRSTRUN_IO_ERROR\";\n-    String CM_FIRSTRUN_BAD_RESPONSE = \"CM_FIRSTRUN_BAD_RESPONSE\";\n-    String DB_SERVER_CREATION_FAIL = \"DB_SERVER_CREATION_FAIL\";\n-    String DB_SERVER_IN_FAILURE_STAGE = \"DB_SERVER_IN_FAILURE_STAGE\";\n-    String DB_SERVER_MISSING = \"DB_SERVER_MISSING\";\n-    String DB_SERVER_NOT_READY = \"DB_SERVER_NOT_READY\";\n-    String DB_SERVER_PROVIDER_RETRIEVAL_FAIL = \"DB_SERVER_PROVIDER_RETRIEVAL_FAIL\";\n-    String DB_SERVER_TEMPLATE_EXIST = \"DB_SERVER_TEMPLATE_EXIST\";\n-    String INSTANCE_DNS_MISCONFIGURED = \"INSTANCE_DNS_MISCONFIGURED\";\n-    String INSTANCE_MISSING_CAPABILITIES = \"INSTANCE_MISSING_CAPABILITIES\";\n-    String INSTANCE_MISSING_FQDN = \"INSTANCE_MISSING_FQDN\";\n-    String INSTANCE_NOT_FOUND = \"INSTANCE_NOT_FOUND\";\n-    String INSTANCE_SSH_CONNECTION_FAIL = \"INSTANCE_SSH_CONNECTION_FAIL\";\n-    String INSTANCE_ALLOCATION_TIME_OUT = \"INSTANCE_ALLOCATION_TIME_OUT\";\n-    String INSTANCE_ALLOCATION_ILLEGAL_ARGUMENT = \"INSTANCE_ALLOCATION_ILLEGAL_ARGUMENT\";\n-    String INSTANCE_ALLOCATION_ILLEGAL_STATE = \"INSTANCE_ALLOCATION_ILLEGAL_STATE\";\n-    String INSTANCE_ROOT_PARTITION_RESIZE_FAIL = \"INSTANCE_ROOT_PARTITION_RESIZE_FAIL\";\n-    String INSTANCE_TERMINATION_FAIL = \"INSTANCE_TERMINATION_FAIL\";\n-    String JOB_CANCELLATION_FAIL = \"JOB_CANCELLATION_FAIL\";\n-    String JOB_CANCELLATION_TIMEOUT = \"JOB_CANCELLATION_TIMEOUT\";\n-    String JOB_EXECUTION_FAIL = \"JOB_EXECUTION_FAIL\";\n-    String JOB_COMBINATION_INVALID_MAP_ENTRY = \"JOB_COMBINATION_INVALID_MAP_ENTRY\";\n-    String JOB_COMBINATION_DUPLICATE_ENTRIES = \"JOB_COMBINATION_DUPLICATE_ENTRIES\";\n-    String JOB_CREATION_FAIL = \"JOB_CREATION_FAIL\";\n-    String RUN_SCRIPT_FAIL = \"RUN_SCRIPT_FAIL\";\n-    String SSH_BACKGROUND_COMMAND_FAIL = \"SSH_BACKGROUND_COMMAND_FAIL\";\n-    String SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE = \"SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE\";\n-    String UNDEFINED = \"UNDEFINED\";\n+String CLUSTER_DEPLOYMENT_IN_WRONG_STAGE = \"CLUSTER_DEPLOYMENT_IN_WRONG_STAGE\";\n+\n+\n+String CLUSTER_DEPLOYMENT_FAIL = \"CLUSTER_DEPLOYMENT_FAIL\";\n+\n+\n+String CLUSTER_GET_PARCEL_FAIL = \"CLUSTER_GET_PARCEL_FAIL\";\n+\n+\n+String CLUSTER_MISSING_PRODUCT_PARCEL = \"CLUSTER_MISSING_PRODUCT_PARCEL\";\n+\n+\n+String CLUSTER_PARCEL_VALIDATION_FAIL = \"CLUSTER_PARCEL_VALIDATION_FAIL\";\n+\n+\n+String CLUSTER_UNSUPPORTED_UPDATE_STEP = \"CLUSTER_UNSUPPORTED_UPDATE_STEP\";\n+\n+\n+String CLUSTER_RESTART_FAIL = \"CLUSTER_RESTART_FAIL\";\n+\n+\n+String CM_AGENT_INSTALLATION_FAIL = \"CM_AGENT_INSTALLATION_FAIL\";\n+\n+\n+String CM_BAD_REQUEST = \"CM_BAD_REQUEST\";\n+\n+\n+String CM_CMD_FAIL = \"CM_CMD_FAIL\";\n+\n+\n+String CM_ILLEGAL_API_VERSION = \"CM_ILLEGAL_API_VERSION\";\n+\n+\n+String CM_ILLEGAL_ARGUMENT = \"CM_ILLEGAL_ARGUMENT\";\n+\n+\n+String CM_REPO_EMPTY_URL = \"CM_REPO_EMPTY_URL\";\n+\n+\n+String CM_REPO_MULTIPLE_URL = \"CM_REPO_MULTIPLE_URL\";\n+\n+\n+String CM_UNAUTHORIZED_OPERATION = \"CM_UNAUTHORIZED_OPERATION\";\n+\n+\n+String CM_UNSUPPORTED_OPERATION = \"CM_UNSUPPORTED_OPERATION\";\n+\n+\n+String CM_UNSUPPORTED_SERVICE_VERSIONS = \"CM_UNSUPPORTED_SERVICE_VERSIONS\";\n+\n+\n+String CM_REDEPLOY_CLIENT_CONFIGS_FAIL = \"CM_REDEPLOY_CLIENT_CONFIGS_FAIL\";\n+\n+\n+String CM_IMPORT_KERBEROS_MISSING_PRINCIPAL = \"CM_IMPORT_KERBEROS_MISSING_PRINCIPAL\";\n+\n+\n+String CM_IMPORT_KERBEROS_INCORRECT_PASSWORD = \"CM_IMPORT_KERBEROS_INCORRECT_PASSWORD\";\n+\n+\n+String CM_SERVICE_HOST_NOT_FOUND = \"CM_SERVICE_HOST_NOT_FOUND\";\n+\n+\n+String CM_SERVICE_READ_ERROR = \"CM_SERVICE_READ_ERROR\";\n+\n+\n+String CM_SERVICE_WRONG_STATE_FOR_DELETION = \"CM_SERVICE_WRONG_STATE_FOR_DELETION\";\n+\n+\n+String CM_SERVICE_DB_AND_TEMPLATE_MISSING = \"CM_SERVICE_DB_AND_TEMPLATE_MISSING\";\n+\n+\n+String CM_FAIL_TRIGGER_FIRSTRUN = \"CM_FAIL_TRIGGER_FIRSTRUN\";\n+\n+\n+String CM_FIRSTRUN_AUTH_FAIL = \"CM_FIRSTRUN_AUTH_FAIL\";\n+\n+\n+String CM_FIRSTRUN_IO_ERROR = \"CM_FIRSTRUN_IO_ERROR\";\n+\n+\n+String CM_FIRSTRUN_BAD_RESPONSE = \"CM_FIRSTRUN_BAD_RESPONSE\";\n+\n+\n+String DB_SERVER_CREATION_FAIL = \"DB_SERVER_CREATION_FAIL\";\n+\n+\n+String DB_SERVER_IN_FAILURE_STAGE = \"DB_SERVER_IN_FAILURE_STAGE\";\n+\n+\n+String DB_SERVER_MISSING = \"DB_SERVER_MISSING\";\n+\n+\n+String DB_SERVER_NOT_READY = \"DB_SERVER_NOT_READY\";\n+\n+\n+String DB_SERVER_PROVIDER_RETRIEVAL_FAIL = \"DB_SERVER_PROVIDER_RETRIEVAL_FAIL\";\n+\n+\n+String DB_SERVER_TEMPLATE_EXIST = \"DB_SERVER_TEMPLATE_EXIST\";\n+\n+\n+String INSTANCE_DNS_MISCONFIGURED = \"INSTANCE_DNS_MISCONFIGURED\";\n+\n+\n+String INSTANCE_MISSING_CAPABILITIES = \"INSTANCE_MISSING_CAPABILITIES\";\n+\n+\n+String INSTANCE_MISSING_FQDN = \"INSTANCE_MISSING_FQDN\";\n+\n+\n+String INSTANCE_NOT_FOUND = \"INSTANCE_NOT_FOUND\";\n+\n+\n+String INSTANCE_SSH_CONNECTION_FAIL = \"INSTANCE_SSH_CONNECTION_FAIL\";\n+\n+\n+String INSTANCE_ALLOCATION_TIME_OUT = \"INSTANCE_ALLOCATION_TIME_OUT\";\n+\n+\n+String INSTANCE_ALLOCATION_ILLEGAL_ARGUMENT = \"INSTANCE_ALLOCATION_ILLEGAL_ARGUMENT\";\n+\n+\n+String INSTANCE_ALLOCATION_ILLEGAL_STATE = \"INSTANCE_ALLOCATION_ILLEGAL_STATE\";\n+\n+\n+String INSTANCE_ROOT_PARTITION_RESIZE_FAIL = \"INSTANCE_ROOT_PARTITION_RESIZE_FAIL\";\n+\n+\n+String INSTANCE_TERMINATION_FAIL = \"INSTANCE_TERMINATION_FAIL\";\n+\n+\n+String JOB_CANCELLATION_FAIL = \"JOB_CANCELLATION_FAIL\";\n+\n+\n+String JOB_CANCELLATION_TIMEOUT = \"JOB_CANCELLATION_TIMEOUT\";\n+\n+\n+String JOB_EXECUTION_FAIL = \"JOB_EXECUTION_FAIL\";\n+\n+\n+String JOB_COMBINATION_INVALID_MAP_ENTRY = \"JOB_COMBINATION_INVALID_MAP_ENTRY\";\n+\n+\n+String JOB_COMBINATION_DUPLICATE_ENTRIES = \"JOB_COMBINATION_DUPLICATE_ENTRIES\";\n+\n+\n+String JOB_CREATION_FAIL = \"JOB_CREATION_FAIL\";\n+\n+\n+String RUN_SCRIPT_FAIL = \"RUN_SCRIPT_FAIL\";\n+\n+\n+String SSH_BACKGROUND_COMMAND_FAIL = \"SSH_BACKGROUND_COMMAND_FAIL\";\n+\n+\n+String SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE = \"SSH_JOB_MISSING_BACKGROUND_PROCESS_STATE_FILE\";\n+\n+\n+String UNDEFINED = \"UNDEFINED\";\n   }\n+\n   public interface ErrorType {\n-    String CLIENT = \"CLIENT\";\n-    String SERVICE = \"SERVICE\";\n-    String UNKNOWN = \"UNKNOWN\";\n+String CLIENT = \"CLIENT\";\n+\n+\n+String SERVICE = \"SERVICE\";\n+\n+\n+String UNKNOWN = \"UNKNOWN\";\n   }\n-  public ErrorInfo() { }\n+\n+  public ErrorInfo() {}\n+\n \n   private ErrorInfo(String errorCode, String errorType, Map<String, String> properties, Boolean retryable) {\n-    this.errorCode = errorCode;\n-    this.errorType = errorType;\n-    this.properties = properties;\n-    this.retryable = retryable;\n-  }\n+                                                                                                           this.errorCode = errorCode;\n+                                                                                                           this.errorType = errorType;\n+                                                                                                           this.properties = properties;\n+                                                                                                           this.retryable = retryable;\n+                       }\n \n   private ErrorInfo(ErrorInfoBuilder builder) {\n-    this.errorCode = builder.errorCode;\n-    this.errorType = builder.errorType;\n-    this.properties = builder.properties;\n-    this.retryable = builder.retryable;\n-  }\n+                                              this.errorCode = builder.errorCode;\n+                                              this.errorType = builder.errorType;\n+                                              this.properties = builder.properties;\n+                                              this.retryable = builder.retryable;\n+                       }\n \n   public static ErrorInfoBuilder builder() {\n     return new ErrorInfoBuilder();\n   }\n \n   public static class ErrorInfoBuilder {\n+\n     private String errorCode = null;\n+\n     private String errorType = null;\n+\n     private Map<String, String> properties = new HashMap<String, String>();\n+\n     private Boolean retryable = null;\n \n     public ErrorInfoBuilder errorCode(String errorCode) {\n@@ -147,12 +270,13 @@ public class ErrorInfo {\n       .errorCode(errorCode)\n       .errorType(errorType)\n       .properties(properties)\n-      .retryable(retryable)\n-      ;\n+      .retryable(retryable);\n   }\n+\n   public String getErrorCode() {\n     return errorCode;\n   }\n+\n   public void setErrorCode(String errorCode) {\n     this.errorCode = errorCode;\n   }\n@@ -160,6 +284,7 @@ public class ErrorInfo {\n   public String getErrorType() {\n     return errorType;\n   }\n+\n   public void setErrorType(String errorType) {\n     this.errorType = errorType;\n   }\n@@ -167,6 +292,7 @@ public class ErrorInfo {\n   public Map<String, String> getProperties() {\n     return properties;\n   }\n+\n   public void setProperties(Map<String, String> properties) {\n     this.properties = properties;\n   }\n@@ -174,53 +300,54 @@ public class ErrorInfo {\n   public Boolean getRetryable() {\n     return retryable;\n   }\n+\n   public void setRetryable(Boolean retryable) {\n     this.retryable = retryable;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ErrorInfo other = (ErrorInfo) o; // NOPMD\n-\n-    if (errorCode != null ?\n-        !errorCode.equals(other.errorCode) :\n-        other.errorCode != null) return false;\n-    if (errorType != null ?\n-        !errorType.equals(other.errorType) :\n-        other.errorType != null) return false;\n-    if (properties != null ?\n-        !properties.equals(other.properties) :\n-        other.properties != null) return false;\n-    if (retryable != null ?\n-        !retryable.equals(other.retryable) :\n-        other.retryable != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    ErrorInfo other = (ErrorInfo)o; // NOPMD\n+\n+    if (errorCode != null?!errorCode.equals(other.errorCode): other.errorCode != null) return false;\n+    if (errorType != null?!errorType.equals(other.errorType): other.errorType != null) return false;\n+    if (properties != null?!properties.equals(other.properties): other.properties != null) return false;\n+    if (retryable != null?!retryable.equals(other.retryable): other.retryable != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (errorCode != null ? errorCode.hashCode() : 0);\n-    result = 31 * result + (errorType != null ? errorType.hashCode() : 0);\n-    result = 31 * result + (properties != null ? properties.hashCode() : 0);\n-    result = 31 * result + (retryable != null ? retryable.hashCode() : 0);\n+    result = 31*result + (errorCode != null? errorCode.hashCode():0);\n+    result = 31*result + (errorType != null? errorType.hashCode():0);\n+    result = 31*result + (properties != null? properties.hashCode():0);\n+    result = 31*result + (retryable != null? retryable.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ErrorInfo {\" + newLine);\n-    sb.append(\"  errorCode: \").append(errorCode).append(newLine);\n-    sb.append(\"  errorType: \").append(errorType).append(newLine);\n-    sb.append(\"  properties: \").append(properties).append(newLine);\n-    sb.append(\"  retryable: \").append(retryable).append(newLine);\n+    sb.append(\"  errorCode: \")\n+      .append(errorCode).append(newLine);\n+    sb.append(\"  errorType: \")\n+      .append(errorType).append(newLine);\n+    sb.append(\"  properties: \")\n+      .append(properties).append(newLine);\n+    sb.append(\"  retryable: \")\n+      .append(retryable).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 233
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1040",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1040/ComponentsBinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1040/ComponentsBinder.java\nindex e8cc7d203d0..4a33af0fdab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1040/ComponentsBinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1040/ComponentsBinder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.bind;\n \n import org.glassfish.jersey.internal.inject.AbstractBinder;\n@@ -44,25 +45,25 @@ public class ComponentsBinder extends AbstractBinder\n      * Register a component for dependency injection. The same object will always be injected where the given type is required.\n      *\n      * @param component the singleton object to be injected.\n-     * @param type the type of the field where the singleton needs to be injected.\n-     * @param <T> type of the component.\n+     * @param type      the type of the field where the singleton needs to be injected.\n+     * @param <T>       type of the component.\n      */\n-    public <T> void addSingletonBinding( T component, Class<T> type )\n+    public <T> void addSingletonBinding(T component, Class<T> type)\n     {\n-        verifyBinding( component, type );\n-        singletonBindings.add( new SingletonBinding( component, type ) );\n+        verifyBinding(component, type);\n+        singletonBindings.add(new SingletonBinding(component, type));\n     }\n \n     /**\n      * Register a supplier that provides a component for dependency injection. Supplier will be invoked for every injection attempt.\n      *\n      * @param componentSupplier the component supplier.\n-     * @param type the type of the field where the provided component needs to be injected.\n+     * @param type              the type of the field where the provided component needs to be injected.\n      */\n-    public void addLazyBinding( Supplier<?> componentSupplier, Class<?> type )\n+    public void addLazyBinding(Supplier<?> componentSupplier, Class<?> type)\n     {\n-        verifyBinding( componentSupplier, type );\n-        lazyBindings.add( new LazyBinding( componentSupplier, type ) );\n+        verifyBinding(componentSupplier, type);\n+        lazyBindings.add(new LazyBinding(componentSupplier, type));\n     }\n \n     /**\n@@ -70,48 +71,48 @@ public class ComponentsBinder extends AbstractBinder\n      * Container is responsible for instantiation of the supplier and can inject dependencies into it.\n      *\n      * @param supplierType the type of the components supplier.\n-     * @param type the type of the field where the provided component needs to be injected.\n-     * @param <T> type of the component.\n+     * @param type         the type of the field where the provided component needs to be injected.\n+     * @param <T>          type of the component.\n      */\n-    public <T> void addLazyBinding( Class<? extends Supplier<T>> supplierType, Class<T> type )\n+    public <T> void addLazyBinding(Class<? extends Supplier<T>> supplierType, Class<T> type)\n     {\n-        verifyBinding( supplierType, type );\n-        lazyFactoryBindings.add( new LazyFactoryBinding<>( supplierType, type ) );\n+        verifyBinding(supplierType, type);\n+        lazyFactoryBindings.add(new LazyFactoryBinding<>(supplierType, type));\n     }\n \n     @Override\n     protected void configure()\n     {\n-        if ( configured )\n+        if (configured)\n         {\n             return;\n         }\n         configured = true;\n \n-        for ( SingletonBinding binding : singletonBindings )\n+        for (SingletonBinding binding : singletonBindings)\n         {\n-            bind( binding.component() ).to( binding.type() );\n+            bind(binding.component()).to(binding.type());\n         }\n \n-        for ( LazyBinding binding : lazyBindings )\n+        for (LazyBinding binding : lazyBindings)\n         {\n-            bindFactory( binding.supplier() ).to( binding.type() );\n+            bindFactory(binding.supplier()).to(binding.type());\n         }\n \n-        for ( LazyFactoryBinding<?> binding : lazyFactoryBindings )\n+        for (LazyFactoryBinding<?> binding : lazyFactoryBindings)\n         {\n-            bindFactory( binding.supplierType() ).to( binding.type() );\n+            bindFactory(binding.supplierType()).to(binding.type());\n         }\n     }\n \n-    private void verifyBinding( Object binding, Class<?> type )\n+    private void verifyBinding(Object binding, Class<?> type)\n     {\n-        Objects.requireNonNull( binding, \"binding\" );\n-        Objects.requireNonNull( type, \"type\" );\n+        Objects.requireNonNull(binding, \"binding\");\n+        Objects.requireNonNull(type, \"type\");\n \n-        if ( configured )\n+        if (configured)\n         {\n-            throw new IllegalStateException( \"Unable to add new binding. Binder has already been configured\" );\n+            throw new IllegalStateException(\"Unable to add new binding. Binder has already been configured\");\n         }\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1040/ComponentsBinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1040/ComponentsBinder.java\nindex e8cc7d203d0..079e6e431e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1040/ComponentsBinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1040/ComponentsBinder.java\n@@ -114,4 +114,4 @@ public class ComponentsBinder extends AbstractBinder\n             throw new IllegalStateException( \"Unable to add new binding. Binder has already been configured\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
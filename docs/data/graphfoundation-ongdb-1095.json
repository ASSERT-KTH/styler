{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1095",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "170",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1095/RemoteStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1095/RemoteStore.java\nindex 32b362c6ede..90389253756 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1095/RemoteStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1095/RemoteStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import java.io.File;\n@@ -52,136 +53,131 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n  */\n public class RemoteStore\n {\n-    private final Log log;\n-    private final Config config;\n-    private final Monitors monitors;\n-    private final FileSystemAbstraction fs;\n-    private final PageCache pageCache;\n-    private final LogProvider logProvider;\n-    private final StoreCopyClient storeCopyClient;\n-    private final TxPullClient txPullClient;\n-    private final TransactionLogCatchUpFactory transactionLogFactory;\n-    private final CommitStateHelper commitStateHelper;\n+  private final Log log;\n+  private final Config config;\n+  private final Monitors monitors;\n+  private final FileSystemAbstraction fs;\n+  private final PageCache pageCache;\n+  private final LogProvider logProvider;\n+  private final StoreCopyClient storeCopyClient;\n+  private final TxPullClient txPullClient;\n+  private final TransactionLogCatchUpFactory transactionLogFactory;\n+  private final CommitStateHelper commitStateHelper;\n \n-    public RemoteStore( LogProvider logProvider, FileSystemAbstraction fs, PageCache pageCache, StoreCopyClient storeCopyClient,\n-            TxPullClient txPullClient, TransactionLogCatchUpFactory transactionLogFactory, Config config, Monitors monitors )\n-    {\n-        this.logProvider = logProvider;\n-        this.storeCopyClient = storeCopyClient;\n-        this.txPullClient = txPullClient;\n-        this.fs = fs;\n-        this.pageCache = pageCache;\n-        this.transactionLogFactory = transactionLogFactory;\n-        this.config = config;\n-        this.monitors = monitors;\n-        this.log = logProvider.getLog( getClass() );\n-        this.commitStateHelper = new CommitStateHelper( pageCache, fs, config );\n-    }\n+  public RemoteStore(LogProvider logProvider, FileSystemAbstraction fs, PageCache pageCache, StoreCopyClient storeCopyClient,\n+                     TxPullClient txPullClient, TransactionLogCatchUpFactory transactionLogFactory, Config config, Monitors monitors)\n+  {\n+    this.logProvider = logProvider;\n+    this.storeCopyClient = storeCopyClient;\n+    this.txPullClient = txPullClient;\n+    this.fs = fs;\n+    this.pageCache = pageCache;\n+    this.transactionLogFactory = transactionLogFactory;\n+    this.config = config;\n+    this.monitors = monitors;\n+    this.log = logProvider.getLog(getClass());\n+    this.commitStateHelper = new CommitStateHelper(pageCache, fs, config);\n+  }\n \n-    /**\n-     * Later stages of the startup process require at least one transaction to\n-     * figure out the mapping between the transaction log and the consensus log.\n-     *\n-     * If there are no transaction logs then we can pull from and including\n-     * the index which the metadata store points to. This would be the case\n-     * for example with a backup taken during an idle period of the system.\n-     *\n-     * However, if there are transaction logs then we want to find out where\n-     * they end and pull from there, excluding the last one so that we do not\n-     * get duplicate entries.\n-     */\n-    public CatchupResult tryCatchingUp( AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, boolean keepTxLogsInDir )\n-            throws StoreCopyFailedException, IOException\n-    {\n-        CommitState commitState = commitStateHelper.getStoreState( storeDir );\n-        log.info( \"Store commit state: \" + commitState );\n+  /**\n+   * Later stages of the startup process require at least one transaction to\n+   * figure out the mapping between the transaction log and the consensus log.\n+   * <p>\n+   * If there are no transaction logs then we can pull from and including\n+   * the index which the metadata store points to. This would be the case\n+   * for example with a backup taken during an idle period of the system.\n+   * <p>\n+   * However, if there are transaction logs then we want to find out where\n+   * they end and pull from there, excluding the last one so that we do not\n+   * get duplicate entries.\n+   */\n+  public CatchupResult tryCatchingUp(AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, boolean keepTxLogsInDir)\n+      throws StoreCopyFailedException, IOException\n+  {\n+    CommitState commitState = commitStateHelper.getStoreState(storeDir);\n+    log.info(\"Store commit state: \" + commitState);\n \n-        if ( commitState.transactionLogIndex().isPresent() )\n-        {\n-            return pullTransactions( from, expectedStoreId, storeDir, commitState.transactionLogIndex().get() + 1, false, keepTxLogsInDir );\n-        }\n-        else\n+    if (commitState.transactionLogIndex().isPresent())\n+    {\n+      return pullTransactions(from, expectedStoreId, storeDir, commitState.transactionLogIndex().get() + 1, false, keepTxLogsInDir);\n+    } else\n+    {\n+      CatchupResult catchupResult;\n+      if (commitState.metaDataStoreIndex() == BASE_TX_ID)\n+      {\n+        return pullTransactions(from, expectedStoreId, storeDir, commitState.metaDataStoreIndex() + 1, false, keepTxLogsInDir);\n+      } else\n+      {\n+        catchupResult = pullTransactions(from, expectedStoreId, storeDir, commitState.metaDataStoreIndex(), false, keepTxLogsInDir);\n+        if (catchupResult == E_TRANSACTION_PRUNED)\n         {\n-            CatchupResult catchupResult;\n-            if ( commitState.metaDataStoreIndex() == BASE_TX_ID )\n-            {\n-                return pullTransactions( from, expectedStoreId, storeDir, commitState.metaDataStoreIndex() + 1, false, keepTxLogsInDir );\n-            }\n-            else\n-            {\n-                catchupResult = pullTransactions( from, expectedStoreId, storeDir, commitState.metaDataStoreIndex(), false, keepTxLogsInDir );\n-                if ( catchupResult == E_TRANSACTION_PRUNED )\n-                {\n-                    return pullTransactions( from, expectedStoreId, storeDir, commitState.metaDataStoreIndex() + 1, false, keepTxLogsInDir );\n-                }\n-            }\n-            return catchupResult;\n+          return pullTransactions(from, expectedStoreId, storeDir, commitState.metaDataStoreIndex() + 1, false, keepTxLogsInDir);\n         }\n+      }\n+      return catchupResult;\n     }\n+  }\n \n-    public void copy( CatchupAddressProvider addressProvider, StoreId expectedStoreId, File destDir )\n-            throws StoreCopyFailedException\n+  public void copy(CatchupAddressProvider addressProvider, StoreId expectedStoreId, File destDir)\n+      throws StoreCopyFailedException\n+  {\n+    try\n     {\n-        try\n-        {\n-            long lastFlushedTxId;\n-            StreamToDiskProvider streamToDiskProvider = new StreamToDiskProvider( destDir, fs, pageCache, monitors );\n-            lastFlushedTxId = storeCopyClient.copyStoreFiles( addressProvider, expectedStoreId, streamToDiskProvider,\n-                        () -> new MaximumTotalTime( config.get( CausalClusteringSettings.store_copy_max_retry_time_per_request ).getSeconds(),\n-                                TimeUnit.SECONDS ), destDir );\n+      long lastFlushedTxId;\n+      StreamToDiskProvider streamToDiskProvider = new StreamToDiskProvider(destDir, fs, pageCache, monitors);\n+      lastFlushedTxId = storeCopyClient.copyStoreFiles(addressProvider, expectedStoreId, streamToDiskProvider,\n+          () -> new MaximumTotalTime(config.get(CausalClusteringSettings.store_copy_max_retry_time_per_request).getSeconds(),\n+              TimeUnit.SECONDS), destDir);\n \n-            log.info( \"Store files need to be recovered starting from: %d\", lastFlushedTxId );\n+      log.info(\"Store files need to be recovered starting from: %d\", lastFlushedTxId);\n \n-            // Even for cluster store copy, we still write the transaction logs into the store directory itself\n-            // because the destination directory is temporary. We will copy them to the correct place later.\n-            CatchupResult catchupResult = pullTransactions( addressProvider.primary(), expectedStoreId, destDir,\n-                    lastFlushedTxId, true, true );\n-            if ( catchupResult != SUCCESS_END_OF_STREAM )\n-            {\n-                throw new StoreCopyFailedException( \"Failed to pull transactions: \" + catchupResult );\n-            }\n-        }\n-        catch ( CatchupAddressResolutionException | IOException e )\n-        {\n-            throw new StoreCopyFailedException( e );\n-        }\n+      // Even for cluster store copy, we still write the transaction logs into the store directory itself\n+      // because the destination directory is temporary. We will copy them to the correct place later.\n+      CatchupResult catchupResult = pullTransactions(addressProvider.primary(), expectedStoreId, destDir,\n+          lastFlushedTxId, true, true);\n+      if (catchupResult != SUCCESS_END_OF_STREAM)\n+      {\n+        throw new StoreCopyFailedException(\"Failed to pull transactions: \" + catchupResult);\n+      }\n+    } catch (CatchupAddressResolutionException | IOException e)\n+    {\n+      throw new StoreCopyFailedException(e);\n     }\n+  }\n \n-    private CatchupResult pullTransactions( AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, long fromTxId,\n-            boolean asPartOfStoreCopy, boolean keepTxLogsInStoreDir )\n-            throws IOException, StoreCopyFailedException\n+  private CatchupResult pullTransactions(AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, long fromTxId,\n+                                         boolean asPartOfStoreCopy, boolean keepTxLogsInStoreDir)\n+      throws IOException, StoreCopyFailedException\n+  {\n+    StoreCopyClientMonitor storeCopyClientMonitor =\n+        monitors.newMonitor(StoreCopyClientMonitor.class);\n+    storeCopyClientMonitor.startReceivingTransactions(fromTxId);\n+    long previousTxId = fromTxId - 1;\n+    try (TransactionLogCatchUpWriter writer = transactionLogFactory.create(storeDir, fs, pageCache, config,\n+        logProvider, fromTxId, asPartOfStoreCopy, keepTxLogsInStoreDir))\n     {\n-        StoreCopyClientMonitor storeCopyClientMonitor =\n-                monitors.newMonitor( StoreCopyClientMonitor.class );\n-        storeCopyClientMonitor.startReceivingTransactions( fromTxId );\n-        long previousTxId = fromTxId - 1;\n-        try ( TransactionLogCatchUpWriter writer = transactionLogFactory.create( storeDir, fs, pageCache, config,\n-                logProvider, fromTxId, asPartOfStoreCopy, keepTxLogsInStoreDir ) )\n-        {\n-            log.info( \"Pulling transactions from %s starting with txId: %d\", from, fromTxId );\n-            CatchupResult lastStatus;\n-            do\n-            {\n-                TxPullRequestResult result = txPullClient.pullTransactions( from, expectedStoreId, previousTxId, writer );\n-                lastStatus = result.catchupResult();\n-                previousTxId = result.lastTxId();\n-            }\n-            while ( lastStatus == SUCCESS_END_OF_BATCH );\n+      log.info(\"Pulling transactions from %s starting with txId: %d\", from, fromTxId);\n+      CatchupResult lastStatus;\n+      do\n+      {\n+        TxPullRequestResult result = txPullClient.pullTransactions(from, expectedStoreId, previousTxId, writer);\n+        lastStatus = result.catchupResult();\n+        previousTxId = result.lastTxId();\n+      }\n+      while (lastStatus == SUCCESS_END_OF_BATCH);\n \n-            return lastStatus;\n-        }\n-        catch ( CatchUpClientException e )\n-        {\n-            throw new StoreCopyFailedException( e );\n-        }\n-        finally\n-        {\n-            storeCopyClientMonitor.finishReceivingTransactions( previousTxId );\n-        }\n-    }\n-\n-    public StoreId getStoreId( AdvertisedSocketAddress from ) throws StoreIdDownloadFailedException\n+      return lastStatus;\n+    } catch (CatchUpClientException e)\n     {\n-        return storeCopyClient.fetchStoreId( from );\n+      throw new StoreCopyFailedException(e);\n+    } finally\n+    {\n+      storeCopyClientMonitor.finishReceivingTransactions(previousTxId);\n     }\n+  }\n+\n+  public StoreId getStoreId(AdvertisedSocketAddress from) throws StoreIdDownloadFailedException\n+  {\n+    return storeCopyClient.fetchStoreId(from);\n+  }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 267).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1095/RemoteStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1095/RemoteStore.java\nindex 32b362c6ede..0e555fa2764 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1095/RemoteStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1095/RemoteStore.java\n@@ -90,13 +90,11 @@ public class RemoteStore\n      * they end and pull from there, excluding the last one so that we do not\n      * get duplicate entries.\n      */\n-    public CatchupResult tryCatchingUp( AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, boolean keepTxLogsInDir )\n-            throws StoreCopyFailedException, IOException\n-    {\n+    public CatchupResult tryCatchingUp( AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, boolean keepTxLogsInDir ) throws StoreCopyFailedException, IOException\n+{\n         CommitState commitState = commitStateHelper.getStoreState( storeDir );\n         log.info( \"Store commit state: \" + commitState );\n-\n-        if ( commitState.transactionLogIndex().isPresent() )\n+if ( commitState.transactionLogIndex().isPresent() )\n         {\n             return pullTransactions( from, expectedStoreId, storeDir, commitState.transactionLogIndex().get() + 1, false, keepTxLogsInDir );\n         }\n@@ -119,24 +117,20 @@ public class RemoteStore\n         }\n     }\n \n-    public void copy( CatchupAddressProvider addressProvider, StoreId expectedStoreId, File destDir )\n-            throws StoreCopyFailedException\n-    {\n+    public void copy( CatchupAddressProvider addressProvider, StoreId expectedStoreId, File destDir ) throws StoreCopyFailedException\n+{\n         try\n         {\n             long lastFlushedTxId;\n             StreamToDiskProvider streamToDiskProvider = new StreamToDiskProvider( destDir, fs, pageCache, monitors );\n-            lastFlushedTxId = storeCopyClient.copyStoreFiles( addressProvider, expectedStoreId, streamToDiskProvider,\n-                        () -> new MaximumTotalTime( config.get( CausalClusteringSettings.store_copy_max_retry_time_per_request ).getSeconds(),\n-                                TimeUnit.SECONDS ), destDir );\n-\n-            log.info( \"Store files need to be recovered starting from: %d\", lastFlushedTxId );\n+            lastFlushedTxId = storeCopyClient.copyStoreFiles( addressProvider, expectedStoreId, streamToDiskProvider, () -> new MaximumTotalTime( config.get( CausalClusteringSettings.store_copy_max_retry_time_per_request ).getSeconds(), TimeUnit.SECONDS ), destDir );\n+log.info( \"Store files need to be recovered starting from: %d\", lastFlushedTxId );\n \n             // Even for cluster store copy, we still write the transaction logs into the store directory itself\n             // because the destination directory is temporary. We will copy them to the correct place later.\n             CatchupResult catchupResult = pullTransactions( addressProvider.primary(), expectedStoreId, destDir,\n                     lastFlushedTxId, true, true );\n-            if ( catchupResult != SUCCESS_END_OF_STREAM )\n+if ( catchupResult != SUCCESS_END_OF_STREAM )\n             {\n                 throw new StoreCopyFailedException( \"Failed to pull transactions: \" + catchupResult );\n             }\n@@ -148,12 +142,10 @@ public class RemoteStore\n     }\n \n     private CatchupResult pullTransactions( AdvertisedSocketAddress from, StoreId expectedStoreId, File storeDir, long fromTxId,\n-            boolean asPartOfStoreCopy, boolean keepTxLogsInStoreDir )\n-            throws IOException, StoreCopyFailedException\n-    {\n-        StoreCopyClientMonitor storeCopyClientMonitor =\n-                monitors.newMonitor( StoreCopyClientMonitor.class );\n-        storeCopyClientMonitor.startReceivingTransactions( fromTxId );\n+            boolean asPartOfStoreCopy, boolean keepTxLogsInStoreDir ) throws IOException, StoreCopyFailedException\n+{\n+        StoreCopyClientMonitor storeCopyClientMonitor = monitors.newMonitor( StoreCopyClientMonitor.class );\n+storeCopyClientMonitor.startReceivingTransactions( fromTxId );\n         long previousTxId = fromTxId - 1;\n         try ( TransactionLogCatchUpWriter writer = transactionLogFactory.create( storeDir, fs, pageCache, config,\n                 logProvider, fromTxId, asPartOfStoreCopy, keepTxLogsInStoreDir ) )\n@@ -167,8 +159,7 @@ public class RemoteStore\n                 previousTxId = result.lastTxId();\n             }\n             while ( lastStatus == SUCCESS_END_OF_BATCH );\n-\n-            return lastStatus;\n+return lastStatus;\n         }\n         catch ( CatchUpClientException e )\n         {\n@@ -184,4 +175,4 @@ public class RemoteStore\n     {\n         return storeCopyClient.fetchStoreId( from );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
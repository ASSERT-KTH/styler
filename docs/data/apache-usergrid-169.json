{
    "project_name": "apache-usergrid",
    "error_id": "169",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Intermediate representation of ordering operations\n *\n * @author tnine\n */\npublic class OrderByNode extends QueryNode {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/169/OrderByNode.java\nindex df80aa7af0e..5ba3c0cf264 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/169/OrderByNode.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.ir;\n \n \n@@ -31,29 +32,35 @@ public class OrderByNode extends QueryNode {\n \n \n     private final SliceNode firstPredicate;\n+\n     private final List<SortPredicate> secondarySorts;\n+\n     private final QueryNode queryOperations;\n \n \n     /**\n-     * @param firstPredicate The first predicate that is in the order by statement\n-     * @param secondarySorts Any subsequent terms\n+     * @param firstPredicate  The first predicate that is in the order by statement\n+     * @param secondarySorts  Any subsequent terms\n      * @param queryOperations The subtree for boolean evaluation\n      */\n-    public OrderByNode( SliceNode firstPredicate, List<SortPredicate> secondarySorts, QueryNode queryOperations ) {\n+    public OrderByNode(SliceNode firstPredicate, List<SortPredicate> secondarySorts, QueryNode queryOperations) {\n         this.firstPredicate = firstPredicate;\n         this.secondarySorts = secondarySorts;\n         this.queryOperations = queryOperations;\n     }\n \n \n-    /** @return the sorts */\n+    /**\n+     * @return the sorts\n+     */\n     public List<SortPredicate> getSecondarySorts() {\n         return secondarySorts;\n     }\n \n \n-    /** @return the firstPredicate */\n+    /**\n+     * @return the firstPredicate\n+     */\n     public SliceNode getFirstPredicate() {\n         return firstPredicate;\n     }\n@@ -65,19 +72,21 @@ public class OrderByNode extends QueryNode {\n \n \n     /*\n-       * (non-Javadoc)\n-       *\n-       * @see\n-       * org.apache.usergrid.persistence.query.ir.QueryNode#visit(org.apache.usergrid.persistence\n-       * .query.ir.NodeVisitor)\n-       */\n+     * (non-Javadoc)\n+     *\n+     * @see\n+     * org.apache.usergrid.persistence.query.ir.QueryNode#visit(org.apache.usergrid.persistence\n+     * .query.ir.NodeVisitor)\n+     */\n     @Override\n-    public void visit( NodeVisitor visitor ) throws Exception {\n-        visitor.visit( this );\n+    public void visit(NodeVisitor visitor) throws Exception {\n+        visitor.visit(this);\n     }\n \n \n-    /** Return true if this order has secondary sorts */\n+    /**\n+     * Return true if this order has secondary sorts\n+     */\n     public boolean hasSecondarySorts() {\n         return secondarySorts != null && secondarySorts.size() > 0;\n     }\n@@ -96,8 +105,8 @@ public class OrderByNode extends QueryNode {\n \n \n     /* (non-Javadoc)\n-         * @see java.lang.Object#toString()\n-         */\n+     * @see java.lang.Object#toString()\n+     */\n     @Override\n     public String toString() {\n         return \"OrderByNode [sorts=\" + secondarySorts + \"]\";\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/169/OrderByNode.java\nindex df80aa7af0e..7b020680575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/169/OrderByNode.java\n@@ -29,7 +29,6 @@ import org.apache.usergrid.persistence.Query.SortPredicate;\n  */\n public class OrderByNode extends QueryNode {\n \n-\n     private final SliceNode firstPredicate;\n     private final List<SortPredicate> secondarySorts;\n     private final QueryNode queryOperations;\n@@ -102,4 +101,4 @@ public class OrderByNode extends QueryNode {\n     public String toString() {\n         return \"OrderByNode [sorts=\" + secondarySorts + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/169/OrderByNode.java\nindex df80aa7af0e..e39cb0475fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/169/OrderByNode.java\n@@ -18,7 +18,6 @@ package org.apache.usergrid.persistence.query.ir;\n \n \n import java.util.List;\n-\n import org.apache.usergrid.persistence.Query.SortPredicate;\n \n \n@@ -27,9 +26,10 @@ import org.apache.usergrid.persistence.Query.SortPredicate;\n  *\n  * @author tnine\n  */\n-public class OrderByNode extends QueryNode {\n \n \n+public class OrderByNode extends QueryNode {\n+\n     private final SliceNode firstPredicate;\n     private final List<SortPredicate> secondarySorts;\n     private final QueryNode queryOperations;\n@@ -40,6 +40,8 @@ public class OrderByNode extends QueryNode {\n      * @param secondarySorts Any subsequent terms\n      * @param queryOperations The subtree for boolean evaluation\n      */\n+\n+\n     public OrderByNode( SliceNode firstPredicate, List<SortPredicate> secondarySorts, QueryNode queryOperations ) {\n         this.firstPredicate = firstPredicate;\n         this.secondarySorts = secondarySorts;\n@@ -48,12 +50,16 @@ public class OrderByNode extends QueryNode {\n \n \n     /** @return the sorts */\n+\n+\n     public List<SortPredicate> getSecondarySorts() {\n         return secondarySorts;\n     }\n \n \n     /** @return the firstPredicate */\n+\n+\n     public SliceNode getFirstPredicate() {\n         return firstPredicate;\n     }\n@@ -71,6 +77,8 @@ public class OrderByNode extends QueryNode {\n        * org.apache.usergrid.persistence.query.ir.QueryNode#visit(org.apache.usergrid.persistence\n        * .query.ir.NodeVisitor)\n        */\n+\n+\n     @Override\n     public void visit( NodeVisitor visitor ) throws Exception {\n         visitor.visit( this );\n@@ -78,6 +86,8 @@ public class OrderByNode extends QueryNode {\n \n \n     /** Return true if this order has secondary sorts */\n+\n+\n     public boolean hasSecondarySorts() {\n         return secondarySorts != null && secondarySorts.size() > 0;\n     }\n@@ -98,8 +108,10 @@ public class OrderByNode extends QueryNode {\n     /* (non-Javadoc)\n          * @see java.lang.Object#toString()\n          */\n+\n+\n     @Override\n     public String toString() {\n         return \"OrderByNode [sorts=\" + secondarySorts + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/169/OrderByNode.java\nindex df80aa7af0e..0fed333689c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/169/OrderByNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/169/OrderByNode.java\n@@ -21,7 +21,6 @@ import java.util.List;\n \n import org.apache.usergrid.persistence.Query.SortPredicate;\n \n-\n /**\n  * Intermediate representation of ordering operations\n  *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
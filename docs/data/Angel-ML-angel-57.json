{
    "project_name": "Angel-ML-angel",
    "error_id": "57",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/57/FTRLUpdateFunc.java\nindex 271facef638..2acc1996040 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/57/FTRLUpdateFunc.java\n@@ -35,13 +35,14 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n   }\n \n   public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch) {\n+                        double lambda2, int epoch) {\n     this(matId, factor, alpha, beta, lambda1, lambda2, epoch, 1);\n   }\n \n   public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch, int batchSize) {\n-    super(matId, new int[]{factor}, new double[]{alpha, beta, lambda1, lambda2, epoch, batchSize});\n+                        double lambda2, int epoch, int batchSize) {\n+    super(matId, new int[] {factor},\n+        new double[] {alpha, beta, lambda1, lambda2, epoch, batchSize});\n   }\n \n   @Override\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/57/FTRLUpdateFunc.java\nindex 271facef638..6d742fb8457 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/57/FTRLUpdateFunc.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.psf.optimizer;\n \n import com.tencent.angel.ml.math2.ufuncs.OptFuncs;\n@@ -34,13 +33,11 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n     super();\n   }\n \n-  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch) {\n-    this(matId, factor, alpha, beta, lambda1, lambda2, epoch, 1);\n+  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1, double lambda2, int epoch) {\n+  this(matId, factor, alpha, beta, lambda1, lambda2, epoch, 1);\n   }\n \n-  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch, int batchSize) {\n+  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1, double lambda2, int epoch, int batchSize) {\n     super(matId, new int[]{factor}, new double[]{alpha, beta, lambda1, lambda2, epoch, batchSize});\n   }\n \n@@ -79,4 +76,4 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/57/FTRLUpdateFunc.java\nindex 271facef638..d31559a606b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/57/FTRLUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/57/FTRLUpdateFunc.java\n@@ -34,25 +34,23 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n     super();\n   }\n \n-  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch) {\n+  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1, double lambda2, int epoch) {\n     this(matId, factor, alpha, beta, lambda1, lambda2, epoch, 1);\n   }\n \n-  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1,\n-      double lambda2, int epoch, int batchSize) {\n+  public FTRLUpdateFunc(int matId, int factor, double alpha, double beta, double lambda1, double lambda2, int epoch, int batchSize) {\n     super(matId, new int[]{factor}, new double[]{alpha, beta, lambda1, lambda2, epoch, batchSize});\n   }\n \n   @Override\n-  public void update(ServerPartition partition, int factor, double[] scalars) {\n+  public void update(\n+    ServerPartition partition, int factor, double[] scalars) {\n     double alpha = scalars[0];\n     double beta = scalars[1];\n     double lambda1 = scalars[2];\n     double lambda2 = scalars[3];\n     int epoch = (int) scalars[4];\n     int batchSize = (int) scalars[5];\n-\n     for (int f = 0; f < factor; f++) {\n       ServerRow gradientServerRow = partition.getRow(f + 3 * factor);\n       try {\n@@ -61,7 +59,6 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n         Vector zModel = partition.getRow(f + factor).getSplit();\n         Vector nModel = partition.getRow(f + 2 * factor).getSplit();\n         Vector gradient = gradientServerRow.getSplit();\n-\n         if (batchSize > 1) {\n           gradient.idiv(batchSize);\n         }\n@@ -69,14 +66,13 @@ public class FTRLUpdateFunc extends OptMMUpdateFunc {\n         Vector delta = OptFuncs.ftrldelta(nModel, gradient, alpha);\n         Ufuncs.iaxpy2(nModel, gradient, 1);\n         zModel.iadd(gradient.sub(delta.mul(weight)));\n-\n         Vector newWeight = Ufuncs.ftrlthreshold(zModel, nModel, alpha, beta, lambda1, lambda2);\n         weight.setStorage(newWeight.getStorage());\n-\n         gradient.clear();\n       } finally {\n         gradientServerRow.endWrite();\n       }\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 92).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@RunWith(JUnitParamsRunner.class)\npublic class EntityDescriptorBuilderTest {\n  final Repository repository = Repository.of(ConfigFactory.defaultApplication().resolve());\n\n  @Parameters({\"attr.*,attr\", \"attr,attr.*\"})\n  @Test(expected = IllegalArgumentException.class)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/1/EntityDescriptorBuilderTest.java\nindex 85f12258763..150cb648dff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/1/EntityDescriptorBuilderTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.repository;\n \n import com.typesafe.config.ConfigFactory;\n@@ -24,7 +25,8 @@ import org.junit.runner.RunWith;\n \n @RunWith(JUnitParamsRunner.class)\n public class EntityDescriptorBuilderTest {\n-  final Repository repository = Repository.of(ConfigFactory.defaultApplication().resolve());\n+  final Repository repository =\n+      Repository.of(ConfigFactory.defaultApplication().resolve());\n \n   @Parameters({\"attr.*,attr\", \"attr,attr.*\"})\n   @Test(expected = IllegalArgumentException.class)\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/1/EntityDescriptorBuilderTest.java\nindex 85f12258763..7606d809a33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/1/EntityDescriptorBuilderTest.java\n@@ -41,4 +41,4 @@ public class EntityDescriptorBuilderTest {\n         .setSchemeUri(URI.create(\"bytes:///\"))\n         .build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/1/EntityDescriptorBuilderTest.java\nindex 85f12258763..ea4889c510e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/1/EntityDescriptorBuilderTest.java\n@@ -22,23 +22,22 @@ import junitparams.Parameters;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n+\n @RunWith(JUnitParamsRunner.class)\n public class EntityDescriptorBuilderTest {\n+\n   final Repository repository = Repository.of(ConfigFactory.defaultApplication().resolve());\n \n   @Parameters({\"attr.*,attr\", \"attr,attr.*\"})\n-  @Test(expected = IllegalArgumentException.class)\n+  @Test(expected = IllegalArgumentException.class )\n   public void testBuildEntityWithDuplicateAttributeName(String first, String second) {\n-    EntityDescriptor.newBuilder()\n-        .addAttribute(createSimpleAttributeWithName(first))\n-        .addAttribute(createSimpleAttributeWithName(second));\n+    EntityDescriptor.newBuilder().addAttribute(createSimpleAttributeWithName(first)).addAttribute(createSimpleAttributeWithName(second));\n   }\n \n   private AttributeDescriptor<byte[]> createSimpleAttributeWithName(String name) {\n-    return AttributeDescriptor.newBuilder(repository)\n-        .setEntity(\"e\")\n-        .setName(name)\n-        .setSchemeUri(URI.create(\"bytes:///\"))\n-        .build();\n+    return AttributeDescriptor.newBuilder(repository).setEntity(\"e\")\n+                                                     .setName(name)\n+                                                     .setSchemeUri(URI.create(\"bytes:///\"))\n+                                                     .build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Annotation 'Test' have incorrect indentation level 2, expected level should be 92.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/1/EntityDescriptorBuilderTest.java\nindex 85f12258763..13e20daa18d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/1/EntityDescriptorBuilderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/1/EntityDescriptorBuilderTest.java\n@@ -24,9 +24,8 @@ import org.junit.runner.RunWith;\n \n @RunWith(JUnitParamsRunner.class)\n public class EntityDescriptorBuilderTest {\n-  final Repository repository = Repository.of(ConfigFactory.defaultApplication().resolve());\n \n-  @Parameters({\"attr.*,attr\", \"attr,attr.*\"})\n+  final Repository repository = Repository.of(ConfigFactory.defaultApplication().resolve());@Parameters({\"attr.*,attr\", \"attr,attr.*\"})\n   @Test(expected = IllegalArgumentException.class)\n   public void testBuildEntityWithDuplicateAttributeName(String first, String second) {\n     EntityDescriptor.newBuilder()\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
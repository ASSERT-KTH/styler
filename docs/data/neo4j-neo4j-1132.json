{
    "project_name": "neo4j-neo4j",
    "error_id": "1132",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1132/ConsistencyFlags.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1132/ConsistencyFlags.java\nindex c023202b177..a1a2dade372 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1132/ConsistencyFlags.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1132/ConsistencyFlags.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import org.apache.commons.lang3.builder.EqualsBuilder;\n@@ -24,7 +25,7 @@ import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n public class ConsistencyFlags\n {\n-    public static final ConsistencyFlags DEFAULT = new ConsistencyFlags( true, true, true, true, false, false );\n+    public static final ConsistencyFlags DEFAULT = new ConsistencyFlags(true, true, true, true, false, false);\n \n     private final boolean checkGraph;\n     private final boolean checkIndexes;\n@@ -33,12 +34,12 @@ public class ConsistencyFlags\n     private final boolean checkRelationshipTypeScanStore;\n     private final boolean checkPropertyOwners;\n \n-    public ConsistencyFlags( boolean checkGraph,\n-            boolean checkIndexes,\n-            boolean checkIndexStructure,\n-            boolean checkLabelScanStore,\n-            boolean checkRelationshipTypeScanStore,\n-            boolean checkPropertyOwners )\n+    public ConsistencyFlags(boolean checkGraph,\n+                            boolean checkIndexes,\n+                            boolean checkIndexStructure,\n+                            boolean checkLabelScanStore,\n+                            boolean checkRelationshipTypeScanStore,\n+                            boolean checkPropertyOwners)\n     {\n         this.checkGraph = checkGraph;\n         this.checkIndexes = checkIndexes;\n@@ -78,20 +79,20 @@ public class ConsistencyFlags\n         return checkPropertyOwners;\n     }\n \n-    public ConsistencyFlags withCheckRelationshipTypeScanStore( boolean check )\n+    public ConsistencyFlags withCheckRelationshipTypeScanStore(boolean check)\n     {\n-        return new ConsistencyFlags( checkGraph, checkIndexes, checkIndexStructure, checkLabelScanStore, check, checkPropertyOwners );\n+        return new ConsistencyFlags(checkGraph, checkIndexes, checkIndexStructure, checkLabelScanStore, check, checkPropertyOwners);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        return EqualsBuilder.reflectionEquals( this, o );\n+        return EqualsBuilder.reflectionEquals(this, o);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return HashCodeBuilder.reflectionHashCode( this );\n+        return HashCodeBuilder.reflectionHashCode(this);\n     }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2897",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "223",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "270",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "300",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "315",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "323",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "327",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "341",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "346",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "355",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "373",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "412",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2897/IndexType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2897/IndexType.java\nindex 4c748bfeb96..0c513b33336 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2897/IndexType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2897/IndexType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -62,446 +63,431 @@ import static org.neo4j.index.impl.lucene.explicit.LuceneExplicitIndex.isValidKe\n \n public abstract class IndexType\n {\n-    public static final IndexType EXACT = new IndexType( LuceneDataSource.KEYWORD_ANALYZER, false )\n+  public static final IndexType EXACT = new IndexType(LuceneDataSource.KEYWORD_ANALYZER, false)\n+  {\n+    @Override\n+    public Query get(String key, Object value)\n     {\n-        @Override\n-        public Query get( String key, Object value )\n-        {\n-            return queryForGet( key, value );\n-        }\n-\n-        @Override\n-        void removeFieldsFromDocument( Document document, String key, Object value )\n-        {\n-            removeFieldsFromDocument( document, key, key, value );\n-        }\n-\n-        @Override\n-        protected void addNewFieldToDocument( Document document, String key, Object value )\n-        {\n-            document.add( instantiateField( key, value, StringField.TYPE_STORED ) );\n-            document.add( instantiateSortField( key, value ) );\n-        }\n-\n-        @Override\n-        void removeFieldFromDocument( Document document, String name )\n-        {\n-            document.removeFields( name );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"EXACT\";\n-        }\n-    };\n+      return queryForGet(key, value);\n+    }\n \n-    private static class CustomType extends IndexType\n+    @Override\n+    void removeFieldsFromDocument(Document document, String key, Object value)\n     {\n-        public static final String EXACT_FIELD_SUFFIX = \"_e\";\n-        private final Similarity similarity;\n-\n-        CustomType( Analyzer analyzer, boolean toLowerCase, Similarity similarity )\n-        {\n-            super( analyzer, toLowerCase );\n-            this.similarity = similarity;\n-        }\n-\n-        @Override\n-        Similarity getSimilarity()\n-        {\n-            return this.similarity;\n-        }\n-\n-        @Override\n-        public Query get( String key, Object value )\n-        {\n-            // TODO we do value.toString() here since initially #addToDocument didn't\n-            // honor ValueContext, and changing it would mean changing store format.\n-            return new TermQuery( new Term( exactKey( key ), value.toString() ) );\n-        }\n-\n-        private String exactKey( String key )\n-        {\n-            return key + EXACT_FIELD_SUFFIX;\n-        }\n-\n-        // TODO We should honor ValueContext instead of doing value.toString() here.\n-        // if changing it, also change #get to honor ValueContext.\n-        @Override\n-        protected void addNewFieldToDocument( Document document, String key, Object value )\n-        {\n-            document.add( new StringField( exactKey( key ), value.toString(), Store.YES ) );\n-            document.add( instantiateField( key, value, TextField.TYPE_STORED ) );\n-            document.add( instantiateSortField( key, value ) );\n-        }\n-\n-        @Override\n-        void removeFieldFromDocument( Document document, String name )\n-        {\n-            document.removeFields( exactKey( name ) );\n-            document.removeFields( name );\n-        }\n-\n-        @Override\n-        void removeFieldsFromDocument( Document document, String key, Object value )\n-        {\n-            removeFieldsFromDocument( document, key, exactKey( key ), value );\n-        }\n-\n-        @Override\n-        protected boolean isStoredField( IndexableField field )\n-        {\n-            return !field.name().endsWith( CustomType.EXACT_FIELD_SUFFIX ) && super.isStoredField( field );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"FULLTEXT\";\n-        }\n+      removeFieldsFromDocument(document, key, key, value);\n     }\n \n-    final Analyzer analyzer;\n-    private final boolean toLowerCase;\n-\n-    private IndexType( Analyzer analyzer, boolean toLowerCase )\n+    @Override\n+    protected void addNewFieldToDocument(Document document, String key, Object value)\n     {\n-        this.analyzer = analyzer;\n-        this.toLowerCase = toLowerCase;\n+      document.add(instantiateField(key, value, StringField.TYPE_STORED));\n+      document.add(instantiateSortField(key, value));\n     }\n \n-    abstract void removeFieldsFromDocument( Document document, String key, Object value );\n-\n-    abstract void removeFieldFromDocument( Document document, String name );\n+    @Override\n+    void removeFieldFromDocument(Document document, String name)\n+    {\n+      document.removeFields(name);\n+    }\n \n-    abstract void addNewFieldToDocument( Document document, String key, Object value );\n+    @Override\n+    public String toString()\n+    {\n+      return \"EXACT\";\n+    }\n+  };\n \n-    abstract Query get( String key, Object value );\n+  private static class CustomType extends IndexType\n+  {\n+    public static final String EXACT_FIELD_SUFFIX = \"_e\";\n+    private final Similarity similarity;\n \n-    static IndexType getIndexType( Map<String, String> config )\n+    CustomType(Analyzer analyzer, boolean toLowerCase, Similarity similarity)\n     {\n-        String type = config.get( LuceneIndexImplementation.KEY_TYPE );\n-        IndexType result = null;\n-        Similarity similarity = getCustomSimilarity( config );\n-        Boolean toLowerCaseUnbiased = config.get( LuceneIndexImplementation.KEY_TO_LOWER_CASE ) != null ?\n-                                      parseBoolean( config.get( LuceneIndexImplementation.KEY_TO_LOWER_CASE ), true ) : null;\n-        Analyzer customAnalyzer = getCustomAnalyzer( config );\n-        if ( type != null )\n-        {\n-            // Use the built in alternatives... \"exact\" or \"fulltext\"\n-            if ( \"exact\".equals( type ) )\n-            {\n-                // In the exact case we default to false\n-                boolean toLowerCase = TRUE.equals( toLowerCaseUnbiased );\n-\n-                result = toLowerCase ? new CustomType( new LowerCaseKeywordAnalyzer(), true, similarity ) : EXACT;\n-            }\n-            else if ( \"fulltext\".equals( type ) )\n-            {\n-                // In the fulltext case we default to true\n-                boolean toLowerCase = !FALSE.equals( toLowerCaseUnbiased );\n-\n-                Analyzer analyzer = customAnalyzer;\n-                if ( analyzer == null )\n-                {\n-                    analyzer = TRUE.equals( toLowerCase ) ? LuceneDataSource.LOWER_CASE_WHITESPACE_ANALYZER :\n-                               LuceneDataSource.WHITESPACE_ANALYZER;\n-                }\n-                result = new CustomType( analyzer, toLowerCase, similarity );\n-            }\n-            else\n-            {\n-                throw new IllegalArgumentException( \"The given type was not recognized: \" + type +\n-                        \". Known types are 'fulltext' and 'exact'\" );\n-            }\n-        }\n-        else\n-        {\n-            // In the custom case we default to true\n-            boolean toLowerCase = !FALSE.equals( toLowerCaseUnbiased );\n-\n-            // Use custom analyzer\n-            if ( customAnalyzer == null )\n-            {\n-                throw new IllegalArgumentException( \"No 'type' was given (which can point out \" +\n-                        \"built-in analyzers, such as 'exact' and 'fulltext')\" +\n-                        \" and no 'analyzer' was given either (which can point out a custom \" +\n-                        Analyzer.class.getName() + \" to use)\" );\n-            }\n-            result = new CustomType( customAnalyzer, toLowerCase, similarity );\n-        }\n-        return result;\n+      super(analyzer, toLowerCase);\n+      this.similarity = similarity;\n     }\n \n-    public void addToDocument( Document document, String key, Object value )\n+    @Override\n+    Similarity getSimilarity()\n     {\n-        addNewFieldToDocument( document, key, value );\n-        restoreSortFields( document );\n+      return this.similarity;\n     }\n \n-    protected boolean isStoredField( IndexableField field )\n+    @Override\n+    public Query get(String key, Object value)\n     {\n-        return isValidKey( field.name() ) &&\n-                field.fieldType().stored() && !FullTxData.TX_STATE_KEY.equals( field.name() );\n+      // TODO we do value.toString() here since initially #addToDocument didn't\n+      // honor ValueContext, and changing it would mean changing store format.\n+      return new TermQuery(new Term(exactKey(key), value.toString()));\n     }\n \n-    private static boolean parseBoolean( String string, boolean valueIfNull )\n+    private String exactKey(String key)\n     {\n-        return string == null ? valueIfNull : Boolean.parseBoolean( string );\n+      return key + EXACT_FIELD_SUFFIX;\n     }\n \n-    private static Similarity getCustomSimilarity( Map<String, String> config )\n+    // TODO We should honor ValueContext instead of doing value.toString() here.\n+    // if changing it, also change #get to honor ValueContext.\n+    @Override\n+    protected void addNewFieldToDocument(Document document, String key, Object value)\n     {\n-        return getByClassName( config, LuceneIndexImplementation.KEY_SIMILARITY, Similarity.class );\n+      document.add(new StringField(exactKey(key), value.toString(), Store.YES));\n+      document.add(instantiateField(key, value, TextField.TYPE_STORED));\n+      document.add(instantiateSortField(key, value));\n     }\n \n-    private static Analyzer getCustomAnalyzer( Map<String, String> config )\n+    @Override\n+    void removeFieldFromDocument(Document document, String name)\n     {\n-        return getByClassName( config, LuceneIndexImplementation.KEY_ANALYZER, Analyzer.class );\n+      document.removeFields(exactKey(name));\n+      document.removeFields(name);\n     }\n \n-    private static <T> T getByClassName( Map<String, String> config, String configKey, Class<T> cls )\n+    @Override\n+    void removeFieldsFromDocument(Document document, String key, Object value)\n     {\n-        String className = config.get( configKey );\n-        if ( className != null )\n-        {\n-            try\n-            {\n-                return Class.forName( className ).asSubclass( cls ).newInstance();\n-            }\n-            catch ( Exception e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        }\n-        return null;\n+      removeFieldsFromDocument(document, key, exactKey(key), value);\n     }\n \n-    TxData newTxData( LuceneExplicitIndex index )\n+    @Override\n+    protected boolean isStoredField(IndexableField field)\n     {\n-        return new ExactTxData( index );\n+      return !field.name().endsWith(CustomType.EXACT_FIELD_SUFFIX) && super.isStoredField(field);\n     }\n \n-    Query query( String keyOrNull, Object value, QueryContext contextOrNull )\n+    @Override\n+    public String toString()\n     {\n-        if ( value instanceof Query )\n-        {\n-            return (Query) value;\n-        }\n-\n-        QueryParser parser = new QueryParser( keyOrNull, analyzer );\n-        parser.setAllowLeadingWildcard( true );\n-        parser.setLowercaseExpandedTerms( toLowerCase );\n-        if ( contextOrNull != null && contextOrNull.getDefaultOperator() != null )\n-        {\n-            parser.setDefaultOperator( contextOrNull.getDefaultOperator() );\n-        }\n-        try\n-        {\n-            return parser.parse( value.toString() );\n-        }\n-        catch ( ParseException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      return \"FULLTEXT\";\n     }\n+  }\n+\n+  final Analyzer analyzer;\n+  private final boolean toLowerCase;\n+\n+  private IndexType(Analyzer analyzer, boolean toLowerCase)\n+  {\n+    this.analyzer = analyzer;\n+    this.toLowerCase = toLowerCase;\n+  }\n+\n+  abstract void removeFieldsFromDocument(Document document, String key, Object value);\n+\n+  abstract void removeFieldFromDocument(Document document, String name);\n+\n+  abstract void addNewFieldToDocument(Document document, String key, Object value);\n \n-    public static IndexableField instantiateField( String key, Object value, FieldType fieldType )\n+  abstract Query get(String key, Object value);\n+\n+  static IndexType getIndexType(Map<String, String> config)\n+  {\n+    String type = config.get(LuceneIndexImplementation.KEY_TYPE);\n+    IndexType result = null;\n+    Similarity similarity = getCustomSimilarity(config);\n+    Boolean toLowerCaseUnbiased = config.get(LuceneIndexImplementation.KEY_TO_LOWER_CASE) != null ?\n+        parseBoolean(config.get(LuceneIndexImplementation.KEY_TO_LOWER_CASE), true) : null;\n+    Analyzer customAnalyzer = getCustomAnalyzer(config);\n+    if (type != null)\n     {\n-        IndexableField field;\n-        if ( value instanceof Number )\n-        {\n-            Number number = (Number) value;\n-            if ( value instanceof Long )\n-            {\n-                field = new LongField( key, number.longValue(), Store.YES );\n-            }\n-            else if ( value instanceof Float )\n-            {\n-                field = new FloatField( key, number.floatValue(), Store.YES );\n-            }\n-            else if ( value instanceof Double )\n-            {\n-                field = new DoubleField( key, number.doubleValue(), Store.YES );\n-            }\n-            else\n-            {\n-                field = new IntField( key, number.intValue(), Store.YES );\n-            }\n-        }\n-        else\n-        {\n-            field = new Field( key, value.toString(), fieldType );\n-        }\n-        return field;\n+      // Use the built in alternatives... \"exact\" or \"fulltext\"\n+      if (\"exact\".equals(type))\n+      {\n+        // In the exact case we default to false\n+        boolean toLowerCase = TRUE.equals(toLowerCaseUnbiased);\n+\n+        result = toLowerCase ? new CustomType(new LowerCaseKeywordAnalyzer(), true, similarity) : EXACT;\n+      } else if (\"fulltext\".equals(type))\n+      {\n+        // In the fulltext case we default to true\n+        boolean toLowerCase = !FALSE.equals(toLowerCaseUnbiased);\n+\n+        Analyzer analyzer = customAnalyzer;\n+        if (analyzer == null)\n+        {\n+          analyzer = TRUE.equals(toLowerCase) ? LuceneDataSource.LOWER_CASE_WHITESPACE_ANALYZER :\n+              LuceneDataSource.WHITESPACE_ANALYZER;\n+        }\n+        result = new CustomType(analyzer, toLowerCase, similarity);\n+      } else\n+      {\n+        throw new IllegalArgumentException(\"The given type was not recognized: \" + type +\n+            \". Known types are 'fulltext' and 'exact'\");\n+      }\n+    } else\n+    {\n+      // In the custom case we default to true\n+      boolean toLowerCase = !FALSE.equals(toLowerCaseUnbiased);\n+\n+      // Use custom analyzer\n+      if (customAnalyzer == null)\n+      {\n+        throw new IllegalArgumentException(\"No 'type' was given (which can point out \" +\n+            \"built-in analyzers, such as 'exact' and 'fulltext')\" +\n+            \" and no 'analyzer' was given either (which can point out a custom \" +\n+            Analyzer.class.getName() + \" to use)\");\n+      }\n+      result = new CustomType(customAnalyzer, toLowerCase, similarity);\n     }\n-\n-    public static IndexableField instantiateSortField( String key, Object value )\n+    return result;\n+  }\n+\n+  public void addToDocument(Document document, String key, Object value)\n+  {\n+    addNewFieldToDocument(document, key, value);\n+    restoreSortFields(document);\n+  }\n+\n+  protected boolean isStoredField(IndexableField field)\n+  {\n+    return isValidKey(field.name()) &&\n+        field.fieldType().stored() && !FullTxData.TX_STATE_KEY.equals(field.name());\n+  }\n+\n+  private static boolean parseBoolean(String string, boolean valueIfNull)\n+  {\n+    return string == null ? valueIfNull : Boolean.parseBoolean(string);\n+  }\n+\n+  private static Similarity getCustomSimilarity(Map<String, String> config)\n+  {\n+    return getByClassName(config, LuceneIndexImplementation.KEY_SIMILARITY, Similarity.class);\n+  }\n+\n+  private static Analyzer getCustomAnalyzer(Map<String, String> config)\n+  {\n+    return getByClassName(config, LuceneIndexImplementation.KEY_ANALYZER, Analyzer.class);\n+  }\n+\n+  private static <T> T getByClassName(Map<String, String> config, String configKey, Class<T> cls)\n+  {\n+    String className = config.get(configKey);\n+    if (className != null)\n     {\n-        IndexableField field;\n-        if ( value instanceof Number )\n-        {\n-            Number number = (Number) value;\n-            if ( value instanceof Float )\n-            {\n-                field = new SortedNumericDocValuesField( key, NumericUtils.floatToSortableInt( number.floatValue() ) );\n-            }\n-            else if ( value instanceof Double )\n-            {\n-                field = new SortedNumericDocValuesField( key, NumericUtils.doubleToSortableLong( number.doubleValue() ) );\n-            }\n-            else\n-            {\n-                field = new SortedNumericDocValuesField( key, number.longValue() );\n-            }\n-        }\n-        else\n-        {\n-            if ( LuceneExplicitIndex.KEY_DOC_ID.equals( key ) )\n-            {\n-                field = new NumericDocValuesField( key, Long.parseLong( value.toString() ) );\n-            }\n-            else\n-            {\n-                field = new SortedSetDocValuesField( key, new BytesRef( value.toString() ) );\n-            }\n-        }\n-        return field;\n+      try\n+      {\n+        return Class.forName(className).asSubclass(cls).newInstance();\n+      } catch (Exception e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n     }\n+    return null;\n+  }\n \n-    final void removeFromDocument( Document document, String key, Object value )\n+  TxData newTxData(LuceneExplicitIndex index)\n+  {\n+    return new ExactTxData(index);\n+  }\n+\n+  Query query(String keyOrNull, Object value, QueryContext contextOrNull)\n+  {\n+    if (value instanceof Query)\n     {\n-        if ( key == null && value == null )\n-        {\n-            clearDocument( document );\n-        }\n-        else\n-        {\n-            removeFieldsFromDocument( document, key, value );\n-            restoreSortFields( document );\n-        }\n+      return (Query) value;\n     }\n \n-    private void clearDocument( Document document )\n+    QueryParser parser = new QueryParser(keyOrNull, analyzer);\n+    parser.setAllowLeadingWildcard(true);\n+    parser.setLowercaseExpandedTerms(toLowerCase);\n+    if (contextOrNull != null && contextOrNull.getDefaultOperator() != null)\n     {\n-        Set<String> names = new HashSet<>();\n-        for ( IndexableField field : document.getFields() )\n-        {\n-            String name = field.name();\n-            if ( LuceneExplicitIndex.isValidKey( name ) )\n-            {\n-                names.add( name );\n-            }\n-        }\n-        for ( String name : names )\n-        {\n-            document.removeFields( name );\n-        }\n+      parser.setDefaultOperator(contextOrNull.getDefaultOperator());\n     }\n-\n-    // Re-add field since their index info is lost after reading the fields from the index store\n-    void restoreSortFields( Document document )\n+    try\n     {\n-        Collection<IndexableField> notIndexedStoredFields = getNotIndexedStoredFields( document );\n-        for ( IndexableField field : notIndexedStoredFields )\n-        {\n-            Object fieldValue = getFieldValue( field );\n-            String name = field.name();\n-            removeFieldsFromDocument( document, name, fieldValue );\n-            addNewFieldToDocument( document, name, fieldValue );\n-        }\n+      return parser.parse(value.toString());\n+    } catch (ParseException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private Collection<IndexableField> getNotIndexedStoredFields( Document document )\n+  public static IndexableField instantiateField(String key, Object value, FieldType fieldType)\n+  {\n+    IndexableField field;\n+    if (value instanceof Number)\n     {\n-        Map<String,IndexableField> nameFieldMap = new HashMap<>();\n-        List<String> indexedFields = new ArrayList<>();\n-        for ( IndexableField field : document.getFields() )\n-        {\n-            if ( isStoredField( field ) )\n-            {\n-                nameFieldMap.put( field.name(), field );\n-            }\n-            else if ( !DocValuesType.NONE.equals( field.fieldType().docValuesType() ) )\n-            {\n-                indexedFields.add( field.name() );\n-            }\n-        }\n-        indexedFields.forEach( nameFieldMap::remove );\n-        return nameFieldMap.values();\n+      Number number = (Number) value;\n+      if (value instanceof Long)\n+      {\n+        field = new LongField(key, number.longValue(), Store.YES);\n+      } else if (value instanceof Float)\n+      {\n+        field = new FloatField(key, number.floatValue(), Store.YES);\n+      } else if (value instanceof Double)\n+      {\n+        field = new DoubleField(key, number.doubleValue(), Store.YES);\n+      } else\n+      {\n+        field = new IntField(key, number.intValue(), Store.YES);\n+      }\n+    } else\n+    {\n+      field = new Field(key, value.toString(), fieldType);\n     }\n+    return field;\n+  }\n \n-    void removeFieldsFromDocument( Document document, String key, String exactKey, Object value )\n+  public static IndexableField instantiateSortField(String key, Object value)\n+  {\n+    IndexableField field;\n+    if (value instanceof Number)\n     {\n-        Set<String> values = null;\n-        if ( value != null )\n-        {\n-            String stringValue = value.toString();\n-            values = new HashSet<>( Arrays.asList( document.getValues( exactKey ) ) );\n-            if ( !values.remove( stringValue ) )\n-            {\n-                return;\n-            }\n-        }\n-        removeFieldFromDocument( document, key );\n-\n-        if ( value != null )\n-        {\n-            for ( String existingValue : values )\n-            {\n-                addNewFieldToDocument( document, key, existingValue );\n-            }\n-        }\n+      Number number = (Number) value;\n+      if (value instanceof Float)\n+      {\n+        field = new SortedNumericDocValuesField(key, NumericUtils.floatToSortableInt(number.floatValue()));\n+      } else if (value instanceof Double)\n+      {\n+        field = new SortedNumericDocValuesField(key, NumericUtils.doubleToSortableLong(number.doubleValue()));\n+      } else\n+      {\n+        field = new SortedNumericDocValuesField(key, number.longValue());\n+      }\n+    } else\n+    {\n+      if (LuceneExplicitIndex.KEY_DOC_ID.equals(key))\n+      {\n+        field = new NumericDocValuesField(key, Long.parseLong(value.toString()));\n+      } else\n+      {\n+        field = new SortedSetDocValuesField(key, new BytesRef(value.toString()));\n+      }\n     }\n+    return field;\n+  }\n \n-    private Object getFieldValue( IndexableField field )\n+  final void removeFromDocument(Document document, String key, Object value)\n+  {\n+    if (key == null && value == null)\n+    {\n+      clearDocument(document);\n+    } else\n     {\n-        Number numericFieldValue = field.numericValue();\n-        return numericFieldValue != null ? numericFieldValue : field.stringValue();\n+      removeFieldsFromDocument(document, key, value);\n+      restoreSortFields(document);\n     }\n+  }\n \n-    public static Document newBaseDocument( long entityId )\n+  private void clearDocument(Document document)\n+  {\n+    Set<String> names = new HashSet<>();\n+    for (IndexableField field : document.getFields())\n     {\n-        Document doc = new Document();\n-        doc.add( new StringField( LuceneExplicitIndex.KEY_DOC_ID, \"\" + entityId, Store.YES ) );\n-        doc.add( new NumericDocValuesField( LuceneExplicitIndex.KEY_DOC_ID, entityId ) );\n-        return doc;\n+      String name = field.name();\n+      if (LuceneExplicitIndex.isValidKey(name))\n+      {\n+        names.add(name);\n+      }\n     }\n-\n-    public static Document newDocument( EntityId entityId )\n+    for (String name : names)\n     {\n-        Document document = newBaseDocument( entityId.id() );\n-        entityId.enhance( document );\n-        return document;\n+      document.removeFields(name);\n     }\n+  }\n \n-    public Term idTerm( long entityId )\n+  // Re-add field since their index info is lost after reading the fields from the index store\n+  void restoreSortFields(Document document)\n+  {\n+    Collection<IndexableField> notIndexedStoredFields = getNotIndexedStoredFields(document);\n+    for (IndexableField field : notIndexedStoredFields)\n     {\n-        return new Term( LuceneExplicitIndex.KEY_DOC_ID, \"\" + entityId );\n+      Object fieldValue = getFieldValue(field);\n+      String name = field.name();\n+      removeFieldsFromDocument(document, name, fieldValue);\n+      addNewFieldToDocument(document, name, fieldValue);\n     }\n+  }\n \n-    Query idTermQuery( long entityId )\n+  private Collection<IndexableField> getNotIndexedStoredFields(Document document)\n+  {\n+    Map<String, IndexableField> nameFieldMap = new HashMap<>();\n+    List<String> indexedFields = new ArrayList<>();\n+    for (IndexableField field : document.getFields())\n     {\n-        return new TermQuery( idTerm( entityId ) );\n+      if (isStoredField(field))\n+      {\n+        nameFieldMap.put(field.name(), field);\n+      } else if (!DocValuesType.NONE.equals(field.fieldType().docValuesType()))\n+      {\n+        indexedFields.add(field.name());\n+      }\n     }\n-\n-    Similarity getSimilarity()\n+    indexedFields.forEach(nameFieldMap::remove);\n+    return nameFieldMap.values();\n+  }\n+\n+  void removeFieldsFromDocument(Document document, String key, String exactKey, Object value)\n+  {\n+    Set<String> values = null;\n+    if (value != null)\n     {\n-        return null;\n+      String stringValue = value.toString();\n+      values = new HashSet<>(Arrays.asList(document.getValues(exactKey)));\n+      if (!values.remove(stringValue))\n+      {\n+        return;\n+      }\n     }\n+    removeFieldFromDocument(document, key);\n \n-    Query queryForGet( String key, Object value )\n+    if (value != null)\n     {\n-        if ( value instanceof ValueContext )\n-        {\n-            Object realValue = ((ValueContext)value).getValue();\n-            if ( realValue instanceof Number )\n-            {\n-                Number number = (Number) realValue;\n-                return LuceneUtil.rangeQuery( key, number, number, true, true );\n-            }\n-        }\n-        return new TermQuery( new Term( key, value.toString() ) );\n+      for (String existingValue : values)\n+      {\n+        addNewFieldToDocument(document, key, existingValue);\n+      }\n+    }\n+  }\n+\n+  private Object getFieldValue(IndexableField field)\n+  {\n+    Number numericFieldValue = field.numericValue();\n+    return numericFieldValue != null ? numericFieldValue : field.stringValue();\n+  }\n+\n+  public static Document newBaseDocument(long entityId)\n+  {\n+    Document doc = new Document();\n+    doc.add(new StringField(LuceneExplicitIndex.KEY_DOC_ID, \"\" + entityId, Store.YES));\n+    doc.add(new NumericDocValuesField(LuceneExplicitIndex.KEY_DOC_ID, entityId));\n+    return doc;\n+  }\n+\n+  public static Document newDocument(EntityId entityId)\n+  {\n+    Document document = newBaseDocument(entityId.id());\n+    entityId.enhance(document);\n+    return document;\n+  }\n+\n+  public Term idTerm(long entityId)\n+  {\n+    return new Term(LuceneExplicitIndex.KEY_DOC_ID, \"\" + entityId);\n+  }\n+\n+  Query idTermQuery(long entityId)\n+  {\n+    return new TermQuery(idTerm(entityId));\n+  }\n+\n+  Similarity getSimilarity()\n+  {\n+    return null;\n+  }\n+\n+  Query queryForGet(String key, Object value)\n+  {\n+    if (value instanceof ValueContext)\n+    {\n+      Object realValue = ((ValueContext) value).getValue();\n+      if (realValue instanceof Number)\n+      {\n+        Number number = (Number) realValue;\n+        return LuceneUtil.rangeQuery(key, number, number, true, true);\n+      }\n     }\n+    return new TermQuery(new Term(key, value.toString()));\n+  }\n }\n",
            "diff_size": 577
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "175",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.specification;\n\nimport org.seedstack.business.domain.AggregateRoot;\nimport org.seedstack.business.internal.utils.BusinessUtils;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..926d37b4706 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/175/SpecificationBuilderImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import org.seedstack.business.domain.AggregateRoot;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..926d37b4706 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/175/SpecificationBuilderImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import org.seedstack.business.domain.AggregateRoot;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..ed7c4555a67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/175/SpecificationBuilderImpl.java\n@@ -26,9 +26,8 @@ class SpecificationBuilderImpl implements SpecificationBuilder {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public <A extends AggregateRoot<I>, I, S extends AggregateSelector<A, I, S>> S ofAggregate(\n-            Class<A> aggregateClass) {\n-        return (S) new AggregateSelectorImpl<A, I, S>(new SpecificationBuilderContext<>(aggregateClass));\n+    public <A extends AggregateRoot<I>, I, S extends AggregateSelector<A, I, S>> S ofAggregate(Class<A> aggregateClass) {\n+    return (S) new AggregateSelectorImpl<A, I, S>(new SpecificationBuilderContext<>(aggregateClass));\n     }\n \n     @Override\n@@ -40,11 +39,10 @@ class SpecificationBuilderImpl implements SpecificationBuilder {\n         } else {\n             if (anySpec instanceof SubstitutableSpecification) {\n                 anySpec = ((SubstitutableSpecification<T>) anySpec).getSubstitute();\n-            }\n-            targetClass = (Class<T>) BusinessUtils.resolveGenerics(Specification.class, anySpec.getClass())[0];\n+            } targetClass = (Class<T>) BusinessUtils.resolveGenerics(Specification.class, anySpec.getClass())[0];\n         }\n         return new PropertySelectorImpl<T, S>(new SpecificationBuilderContext<>(targetClass))\n                 .whole()\n                 .satisfying(anySpec);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "63",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 62, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..2186d84b9a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/175/SpecificationBuilderImpl.java\n@@ -16,6 +16,7 @@ import org.seedstack.business.specification.dsl.OperatorPicker;\n import org.seedstack.business.specification.dsl.PropertySelector;\n import org.seedstack.business.specification.dsl.SpecificationBuilder;\n \n+\n class SpecificationBuilderImpl implements SpecificationBuilder {\n \n     @Override\n@@ -26,8 +27,7 @@ class SpecificationBuilderImpl implements SpecificationBuilder {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public <A extends AggregateRoot<I>, I, S extends AggregateSelector<A, I, S>> S ofAggregate(\n-            Class<A> aggregateClass) {\n+    public <A extends AggregateRoot<I>, I, S extends AggregateSelector<A, I, S>> S ofAggregate(Class<A> aggregateClass) {\n         return (S) new AggregateSelectorImpl<A, I, S>(new SpecificationBuilderContext<>(aggregateClass));\n     }\n \n@@ -36,15 +36,17 @@ class SpecificationBuilderImpl implements SpecificationBuilder {\n     public <T, S extends PropertySelector<T, S>> OperatorPicker<T, S> satisfying(Specification<T> anySpec) {\n         Class<T> targetClass;\n         if (anySpec instanceof SpecificationBuilderContext.ClassSpecification) {\n-            targetClass = ((SpecificationBuilderContext.ClassSpecification<T>) anySpec).getTargetClass();\n+            targetClass = ((SpecificationBuilderContext.ClassSpecification<T>) anySpec)\n+                .getTargetClass();\n         } else {\n-            if (anySpec instanceof SubstitutableSpecification) {\n-                anySpec = ((SubstitutableSpecification<T>) anySpec).getSubstitute();\n-            }\n+            if(anySpec instanceof SubstitutableSpecification) {\n+                anySpec = ((SubstitutableSpecification<T>) anySpec)\n+                    .getSubstitute();\n+                                                              }\n             targetClass = (Class<T>) BusinessUtils.resolveGenerics(Specification.class, anySpec.getClass())[0];\n         }\n         return new PropertySelectorImpl<T, S>(new SpecificationBuilderContext<>(targetClass))\n-                .whole()\n-                .satisfying(anySpec);\n+            .whole()\n+            .satisfying(anySpec);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..926d37b4706 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/175/SpecificationBuilderImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import org.seedstack.business.domain.AggregateRoot;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/175/SpecificationBuilderImpl.java\nindex 4ee8ae006b9..926d37b4706 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/175/SpecificationBuilderImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/175/SpecificationBuilderImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import org.seedstack.business.domain.AggregateRoot;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
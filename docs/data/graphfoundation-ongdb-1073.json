{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1073",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1073/TraversalShortestPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1073/TraversalShortestPath.java\nindex 5fe115a7c67..59c264b0e00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1073/TraversalShortestPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1073/TraversalShortestPath.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import org.neo4j.graphdb.GraphDatabaseService;\n@@ -32,44 +33,44 @@ import static org.neo4j.graphdb.traversal.Uniqueness.NODE_PATH;\n /**\n  * Implements shortest path algorithm, see {@link ShortestPath}, but using\n  * the traversal framework straight off with the bidirectional traversal feature.\n- *\n+ * <p>\n  * It's still experimental and slightly slower than the highly optimized\n  * {@link ShortestPath} implementation.\n  */\n public class TraversalShortestPath extends TraversalPathFinder\n {\n-    private final PathExpander expander;\n-    private final int maxDepth;\n-    private final Integer maxResultCount;\n+  private final PathExpander expander;\n+  private final int maxDepth;\n+  private final Integer maxResultCount;\n \n-    public TraversalShortestPath( PathExpander expander, int maxDepth )\n-    {\n-        this.expander = expander;\n-        this.maxDepth = maxDepth;\n-        this.maxResultCount = null;\n-    }\n+  public TraversalShortestPath(PathExpander expander, int maxDepth)\n+  {\n+    this.expander = expander;\n+    this.maxDepth = maxDepth;\n+    this.maxResultCount = null;\n+  }\n \n-    public TraversalShortestPath( PathExpander expander, int maxDepth, int maxResultCount )\n-    {\n-        this.expander = expander;\n-        this.maxDepth = maxDepth;\n-        this.maxResultCount = maxResultCount;\n-    }\n+  public TraversalShortestPath(PathExpander expander, int maxDepth, int maxResultCount)\n+  {\n+    this.expander = expander;\n+    this.maxDepth = maxDepth;\n+    this.maxResultCount = maxResultCount;\n+  }\n \n-    @Override\n-    protected Traverser instantiateTraverser( Node start, Node end )\n-    {\n-        GraphDatabaseService db = start.getGraphDatabase();\n-        TraversalDescription sideBase = db.traversalDescription().breadthFirst().uniqueness( NODE_PATH );\n-        return db.bidirectionalTraversalDescription().mirroredSides( sideBase.expand( expander ) )\n-            .sideSelector( LEVEL_STOP_DESCENT_ON_RESULT, maxDepth )\n-            .collisionEvaluator( toDepth( maxDepth ) )\n-            .traverse( start, end );\n-    }\n+  @Override\n+  protected Traverser instantiateTraverser(Node start, Node end)\n+  {\n+    GraphDatabaseService db = start.getGraphDatabase();\n+    TraversalDescription sideBase = db.traversalDescription().breadthFirst().uniqueness(NODE_PATH);\n+    return db.bidirectionalTraversalDescription().mirroredSides(sideBase.expand(expander))\n+        .sideSelector(LEVEL_STOP_DESCENT_ON_RESULT, maxDepth)\n+        .collisionEvaluator(toDepth(maxDepth))\n+        .traverse(start, end);\n+  }\n \n-    @Override\n-    protected Integer maxResultCount()\n-    {\n-        return maxResultCount;\n-    }\n+  @Override\n+  protected Integer maxResultCount()\n+  {\n+    return maxResultCount;\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1073/TraversalShortestPath.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1073/TraversalShortestPath.java\nindex 5fe115a7c67..ff07e002ea0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1073/TraversalShortestPath.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1073/TraversalShortestPath.java\n@@ -61,10 +61,8 @@ public class TraversalShortestPath extends TraversalPathFinder\n     {\n         GraphDatabaseService db = start.getGraphDatabase();\n         TraversalDescription sideBase = db.traversalDescription().breadthFirst().uniqueness( NODE_PATH );\n-        return db.bidirectionalTraversalDescription().mirroredSides( sideBase.expand( expander ) )\n-            .sideSelector( LEVEL_STOP_DESCENT_ON_RESULT, maxDepth )\n-            .collisionEvaluator( toDepth( maxDepth ) )\n-            .traverse( start, end );\n+        return db.bidirectionalTraversalDescription().mirroredSides( sideBase.expand( expander ) ).sideSelector( LEVEL_STOP_DESCENT_ON_RESULT, maxDepth )\n+            .collisionEvaluator( toDepth( maxDepth ) ).traverse( start, end );\n     }\n \n     @Override\n@@ -72,4 +70,4 @@ public class TraversalShortestPath extends TraversalPathFinder\n     {\n         return maxResultCount;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
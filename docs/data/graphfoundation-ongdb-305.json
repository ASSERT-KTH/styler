{
    "project_name": "graphfoundation-ongdb",
    "error_id": "305",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/305/Neo4jTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/305/Neo4jTypes.java\nindex cc916c28d8e..0f922407088 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/305/Neo4jTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/305/Neo4jTypes.java\n@@ -17,261 +17,264 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.procs;\n \n /**\n  * See also type_system.txt in the cypher code base, this is a mapping of that type system definition\n  * down to this level. Ideally this becomes canonical.\n- *\n+ * <p>\n  * This should also move to replace the specialized type handling in packstream, or be tied to it in some\n  * way to ensure a strict mapping.\n  */\n public class Neo4jTypes\n {\n-    public static final AnyType NTAny = new AnyType();\n-    public static final TextType NTString = new TextType();\n-    public static final NumberType NTNumber = new NumberType();\n-    public static final IntegerType NTInteger = new IntegerType();\n-    public static final FloatType NTFloat = new FloatType();\n-    public static final BooleanType NTBoolean = new BooleanType();\n-    public static final MapType NTMap = new MapType();\n-    public static final ByteArrayType NTByteArray = new ByteArrayType();\n-    public static final NodeType NTNode = new NodeType();\n-    public static final RelationshipType NTRelationship = new RelationshipType();\n-    public static final PathType NTPath = new PathType();\n-    public static final GeometryType NTGeometry = new GeometryType();\n-    public static final PointType NTPoint = new PointType();\n-    public static final DateTimeType NTDateTime = new DateTimeType();\n-    public static final LocalDateTimeType NTLocalDateTime = new LocalDateTimeType();\n-    public static final DateType NTDate = new DateType();\n-    public static final TimeType NTTime = new TimeType();\n-    public static final LocalTimeType NTLocalTime = new LocalTimeType();\n-    public static final DurationType NTDuration = new DurationType();\n-\n-    private Neo4jTypes()\n+  public static final AnyType NTAny = new AnyType();\n+  public static final TextType NTString = new TextType();\n+  public static final NumberType NTNumber = new NumberType();\n+  public static final IntegerType NTInteger = new IntegerType();\n+  public static final FloatType NTFloat = new FloatType();\n+  public static final BooleanType NTBoolean = new BooleanType();\n+  public static final MapType NTMap = new MapType();\n+  public static final ByteArrayType NTByteArray = new ByteArrayType();\n+  public static final NodeType NTNode = new NodeType();\n+  public static final RelationshipType NTRelationship = new RelationshipType();\n+  public static final PathType NTPath = new PathType();\n+  public static final GeometryType NTGeometry = new GeometryType();\n+  public static final PointType NTPoint = new PointType();\n+  public static final DateTimeType NTDateTime = new DateTimeType();\n+  public static final LocalDateTimeType NTLocalDateTime = new LocalDateTimeType();\n+  public static final DateType NTDate = new DateType();\n+  public static final TimeType NTTime = new TimeType();\n+  public static final LocalTimeType NTLocalTime = new LocalTimeType();\n+  public static final DurationType NTDuration = new DurationType();\n+\n+  private Neo4jTypes()\n+  {\n+  }\n+\n+  public static ListType NTList(AnyType innerType)\n+  {\n+    return new ListType(innerType);\n+  }\n+\n+  public static class AnyType\n+  {\n+    private final String name;\n+\n+    public AnyType()\n+    {\n+      this(\"ANY?\");\n+    }\n+\n+    protected AnyType(String name)\n+    {\n+      this.name = name;\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return name;\n+    }\n+  }\n+\n+  public static class TextType extends AnyType\n+  {\n+    public TextType()\n     {\n+      super(\"STRING?\");\n     }\n+  }\n \n-    public static ListType NTList( AnyType innerType )\n+  public static class NumberType extends AnyType\n+  {\n+    public NumberType()\n     {\n-        return new ListType( innerType );\n+      super(\"NUMBER?\");\n     }\n \n-    public static class AnyType\n+    protected NumberType(String name)\n     {\n-        private final String name;\n-\n-        public AnyType()\n-        {\n-            this( \"ANY?\" );\n-        }\n-\n-        protected AnyType( String name )\n-        {\n-            this.name = name;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return name;\n-        }\n+      super(name);\n     }\n+  }\n+\n+  public static class IntegerType extends NumberType\n+  {\n+    public IntegerType()\n+    {\n+      super(\"INTEGER?\");\n+    }\n+  }\n+\n+  public static class FloatType extends NumberType\n+  {\n+    public FloatType()\n+    {\n+      super(\"FLOAT?\");\n+    }\n+  }\n+\n+  public static class BooleanType extends AnyType\n+  {\n+    public BooleanType()\n+    {\n+      super(\"BOOLEAN?\");\n+    }\n+  }\n+\n+  public static class ListType extends AnyType\n+  {\n+    /**\n+     * The type of values in this collection\n+     */\n+    private final AnyType innerType;\n \n-    public static class TextType extends AnyType\n+    public ListType(AnyType innerType)\n     {\n-        public TextType()\n-        {\n-            super( \"STRING?\" );\n-        }\n+      super(\"LIST? OF \" + innerType);\n+      this.innerType = innerType;\n     }\n \n-    public static class NumberType extends AnyType\n+    public AnyType innerType()\n     {\n-        public NumberType()\n-        {\n-            super( \"NUMBER?\" );\n-        }\n-\n-        protected NumberType( String name )\n-        {\n-            super( name );\n-        }\n+      return innerType;\n     }\n \n-    public static class IntegerType extends NumberType\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        public IntegerType()\n-        {\n-            super( \"INTEGER?\" );\n-        }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ListType listType = (ListType) o;\n+      return innerType.equals(listType.innerType);\n     }\n \n-    public static class FloatType extends NumberType\n+    @Override\n+    public int hashCode()\n     {\n-        public FloatType()\n-        {\n-            super( \"FLOAT?\" );\n-        }\n+      return innerType.hashCode();\n     }\n+  }\n \n-    public static class BooleanType extends AnyType\n+  public static class MapType extends AnyType\n+  {\n+    public MapType()\n     {\n-        public BooleanType()\n-        {\n-            super( \"BOOLEAN?\" );\n-        }\n+      super(\"MAP?\");\n     }\n \n-    public static class ListType extends AnyType\n+    protected MapType(String name)\n     {\n-        /** The type of values in this collection */\n-        private final AnyType innerType;\n-\n-        public ListType( AnyType innerType )\n-        {\n-            super( \"LIST? OF \" + innerType );\n-            this.innerType = innerType;\n-        }\n-\n-        public AnyType innerType()\n-        {\n-            return innerType;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ListType listType = (ListType) o;\n-            return innerType.equals( listType.innerType );\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return innerType.hashCode();\n-        }\n+      super(name);\n     }\n+  }\n \n-    public static class MapType extends AnyType\n+  public static class ByteArrayType extends AnyType\n+  {\n+    public ByteArrayType()\n     {\n-        public MapType()\n-        {\n-            super( \"MAP?\" );\n-        }\n-\n-        protected MapType( String name )\n-        {\n-            super( name );\n-        }\n+      super(\"BYTEARRAY?\");\n     }\n \n-    public static class ByteArrayType extends AnyType\n+    protected ByteArrayType(String name)\n     {\n-        public ByteArrayType()\n-        {\n-            super( \"BYTEARRAY?\" );\n-        }\n-\n-        protected ByteArrayType( String name )\n-        {\n-            super( name );\n-        }\n+      super(name);\n     }\n+  }\n \n-    public static class NodeType extends MapType\n+  public static class NodeType extends MapType\n+  {\n+    public NodeType()\n     {\n-        public NodeType()\n-        {\n-            super( \"NODE?\" );\n-        }\n+      super(\"NODE?\");\n     }\n+  }\n \n-    public static class RelationshipType extends MapType\n+  public static class RelationshipType extends MapType\n+  {\n+    public RelationshipType()\n     {\n-        public RelationshipType()\n-        {\n-            super( \"RELATIONSHIP?\" );\n-        }\n+      super(\"RELATIONSHIP?\");\n     }\n+  }\n \n-    public static class PathType extends AnyType\n+  public static class PathType extends AnyType\n+  {\n+    public PathType()\n     {\n-        public PathType()\n-        {\n-            super( \"PATH?\" );\n-        }\n+      super(\"PATH?\");\n     }\n+  }\n \n-    public static class GeometryType extends AnyType\n+  public static class GeometryType extends AnyType\n+  {\n+    public GeometryType()\n     {\n-        public GeometryType()\n-        {\n-            super( \"GEOMETRY?\" );\n-        }\n+      super(\"GEOMETRY?\");\n     }\n+  }\n \n-    public static class PointType extends AnyType\n+  public static class PointType extends AnyType\n+  {\n+    public PointType()\n     {\n-        public PointType()\n-        {\n-            super( \"POINT?\" );\n-        }\n+      super(\"POINT?\");\n     }\n+  }\n \n-    public static class DateTimeType extends AnyType\n+  public static class DateTimeType extends AnyType\n+  {\n+    public DateTimeType()\n     {\n-        public DateTimeType()\n-        {\n-            super( \"DATETIME?\" );\n-        }\n+      super(\"DATETIME?\");\n     }\n+  }\n \n-    public static class LocalDateTimeType extends AnyType\n+  public static class LocalDateTimeType extends AnyType\n+  {\n+    public LocalDateTimeType()\n     {\n-        public LocalDateTimeType()\n-        {\n-            super( \"LOCALDATETIME?\" );\n-        }\n+      super(\"LOCALDATETIME?\");\n     }\n+  }\n \n-    public static class DateType extends AnyType\n+  public static class DateType extends AnyType\n+  {\n+    public DateType()\n     {\n-        public DateType()\n-        {\n-            super( \"DATE?\" );\n-        }\n+      super(\"DATE?\");\n     }\n+  }\n \n-    public static class TimeType extends AnyType\n+  public static class TimeType extends AnyType\n+  {\n+    public TimeType()\n     {\n-        public TimeType()\n-        {\n-            super( \"TIME?\" );\n-        }\n+      super(\"TIME?\");\n     }\n+  }\n \n-    public static class LocalTimeType extends AnyType\n+  public static class LocalTimeType extends AnyType\n+  {\n+    public LocalTimeType()\n     {\n-        public LocalTimeType()\n-        {\n-            super( \"LOCALTIME?\" );\n-        }\n+      super(\"LOCALTIME?\");\n     }\n+  }\n \n-    public static class DurationType extends AnyType\n+  public static class DurationType extends AnyType\n+  {\n+    public DurationType()\n     {\n-        public DurationType()\n-        {\n-            super( \"DURATION?\" );\n-        }\n+      super(\"DURATION?\");\n     }\n+  }\n }\n",
            "diff_size": 299
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/305/Neo4jTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/305/Neo4jTypes.java\nindex cc916c28d8e..a47d9938789 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/305/Neo4jTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/305/Neo4jTypes.java\n@@ -146,11 +146,13 @@ public class Neo4jTypes\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            ListType listType = (ListType) o;\n+\n+ListType listType = (ListType) o;\n             return innerType.equals( listType.innerType );\n         }\n \n@@ -274,4 +276,4 @@ public class Neo4jTypes\n             super( \"DURATION?\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
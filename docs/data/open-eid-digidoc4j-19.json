{
    "project_name": "open-eid-digidoc4j",
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "67",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": " * ASIC container parser from input stream\n */\npublic class AsicStreamContainerParser extends AsicContainerParser{\n\n  private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n  private ZipInputStream zipInputStream;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..6e584528bc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/19/AsicStreamContainerParser.java\n@@ -26,7 +26,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..58968a9e402 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/19/AsicStreamContainerParser.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic;\n \n@@ -26,13 +26,13 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n \n   /**\n-   * @param inputStream input stream\n+   * @param inputStream   input stream\n    * @param configuration configuration\n    */\n   public AsicStreamContainerParser(InputStream inputStream, Configuration configuration) {\n@@ -50,9 +50,9 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n     logger.debug(\"Parsing zip stream\");\n     try {\n       ZipEntry entry;\n-        while ((entry = zipInputStream.getNextEntry()) != null) {\n-          parseEntry(entry);\n-        }\n+      while ((entry = zipInputStream.getNextEntry()) != null) {\n+        parseEntry(entry);\n+      }\n     } catch (IOException e) {\n       logger.error(\"Error reading asic container stream: \" + e.getMessage());\n       throw new TechnicalException(\"Error reading asic container stream: \", e);\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..df6f02bcb53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/19/AsicStreamContainerParser.java\n@@ -26,7 +26,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n@@ -50,10 +50,10 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n     logger.debug(\"Parsing zip stream\");\n     try {\n       ZipEntry entry;\n-        while ((entry = zipInputStream.getNextEntry()) != null) {\n+while ((entry = zipInputStream.getNextEntry()) != null) {\n           parseEntry(entry);\n         }\n-    } catch (IOException e) {\n+  } catch (IOException e) {\n       logger.error(\"Error reading asic container stream: \" + e.getMessage());\n       throw new TechnicalException(\"Error reading asic container stream: \", e);\n     } finally {\n@@ -79,4 +79,4 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n   protected InputStream getZipEntryInputStream(ZipEntry entry) {\n     return zipInputStream;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..ae62242679d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/19/AsicStreamContainerParser.java\n@@ -14,7 +14,6 @@ import java.io.IOException;\n import java.io.InputStream;\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipInputStream;\n-\n import org.apache.commons.io.IOUtils;\n import org.digidoc4j.Configuration;\n import org.digidoc4j.DataFile;\n@@ -26,7 +25,9 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+\n+\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n@@ -35,6 +36,7 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n    * @param inputStream input stream\n    * @param configuration configuration\n    */\n+\n   public AsicStreamContainerParser(InputStream inputStream, Configuration configuration) {\n     super(configuration);\n     zipInputStream = new ZipInputStream(inputStream);\n@@ -50,9 +52,9 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n     logger.debug(\"Parsing zip stream\");\n     try {\n       ZipEntry entry;\n-        while ((entry = zipInputStream.getNextEntry()) != null) {\n-          parseEntry(entry);\n-        }\n+      while ((entry = zipInputStream.getNextEntry()) != null) {\n+        parseEntry(entry);\n+      }\n     } catch (IOException e) {\n       logger.error(\"Error reading asic container stream: \" + e.getMessage());\n       throw new TechnicalException(\"Error reading asic container stream: \", e);\n@@ -79,4 +81,4 @@ public class AsicStreamContainerParser extends AsicContainerParser{\n   protected InputStream getZipEntryInputStream(ZipEntry entry) {\n     return zipInputStream;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..6e584528bc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/19/AsicStreamContainerParser.java\n@@ -26,7 +26,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/19/AsicStreamContainerParser.java\nindex 8e8fb78fbe7..6e584528bc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/19/AsicStreamContainerParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/19/AsicStreamContainerParser.java\n@@ -26,7 +26,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * ASIC container parser from input stream\n  */\n-public class AsicStreamContainerParser extends AsicContainerParser{\n+public class AsicStreamContainerParser extends AsicContainerParser {\n \n   private static final Logger logger = LoggerFactory.getLogger(AsicStreamContainerParser.class);\n   private ZipInputStream zipInputStream;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
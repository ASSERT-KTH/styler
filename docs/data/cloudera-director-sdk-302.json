{
    "project_name": "cloudera-director-sdk",
    "error_id": "302",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/302/ExternalDatabase.java\nindex 8e83595af50..5dcf649bc85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/302/ExternalDatabase.java\n@@ -27,12 +27,15 @@ public class ExternalDatabase {\n   private Integer port;\n   private String type;\n   private String user;\n+\n   public interface Type {\n     String POSTGRESQL = \"POSTGRESQL\";\n     String MYSQL = \"MYSQL\";\n     String ORACLE = \"ORACLE\";\n   }\n-  public ExternalDatabase() { }\n+\n+  public ExternalDatabase() {\n+  }\n \n   private ExternalDatabase(String host, String name, String password, Integer port, String type, String user) {\n     this.host = host;\n@@ -101,17 +104,19 @@ public class ExternalDatabase {\n \n   public ExternalDatabaseBuilder toBuilder() {\n     return builder()\n-      .host(host)\n-      .name(name)\n-      .password(password)\n-      .port(port)\n-      .type(type)\n-      .user(user)\n-      ;\n+        .host(host)\n+        .name(name)\n+        .password(password)\n+        .port(port)\n+        .type(type)\n+        .user(user)\n+        ;\n   }\n+\n   public String getHost() {\n     return host;\n   }\n+\n   public void setHost(String host) {\n     this.host = host;\n   }\n@@ -119,6 +124,7 @@ public class ExternalDatabase {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -126,6 +132,7 @@ public class ExternalDatabase {\n   public String getPassword() {\n     return password;\n   }\n+\n   public void setPassword(String password) {\n     this.password = password;\n   }\n@@ -133,6 +140,7 @@ public class ExternalDatabase {\n   public Integer getPort() {\n     return port;\n   }\n+\n   public void setPort(Integer port) {\n     this.port = port;\n   }\n@@ -140,6 +148,7 @@ public class ExternalDatabase {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n@@ -147,32 +156,47 @@ public class ExternalDatabase {\n   public String getUser() {\n     return user;\n   }\n+\n   public void setUser(String user) {\n     this.user = user;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     ExternalDatabase other = (ExternalDatabase) o; // NOPMD\n \n     if (host != null ?\n         !host.equals(other.host) :\n-        other.host != null) return false;\n+        other.host != null) {\n+      return false;\n+    }\n     if (name != null ?\n         !name.equals(other.name) :\n-        other.name != null) return false;\n+        other.name != null) {\n+      return false;\n+    }\n     if (port != null ?\n         !port.equals(other.port) :\n-        other.port != null) return false;\n+        other.port != null) {\n+      return false;\n+    }\n     if (type != null ?\n         !type.equals(other.type) :\n-        other.type != null) return false;\n+        other.type != null) {\n+      return false;\n+    }\n     if (user != null ?\n         !user.equals(other.user) :\n-        other.user != null) return false;\n+        other.user != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -188,7 +212,7 @@ public class ExternalDatabase {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabase {\" + newLine);\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "151",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "155",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/302/ExternalDatabase.java\nindex 8e83595af50..1f16b36e048 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/302/ExternalDatabase.java\n@@ -1,25 +1,10 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v10.model;\n \n-\n public class ExternalDatabase {\n+\n   private String host;\n   private String name;\n   /* password [redacted on read] */\n@@ -27,12 +12,14 @@ public class ExternalDatabase {\n   private Integer port;\n   private String type;\n   private String user;\n-  public interface Type {\n+\n+public interface Type {\n     String POSTGRESQL = \"POSTGRESQL\";\n     String MYSQL = \"MYSQL\";\n     String ORACLE = \"ORACLE\";\n   }\n-  public ExternalDatabase() { }\n+\n+public ExternalDatabase() { }\n \n   private ExternalDatabase(String host, String name, String password, Integer port, String type, String user) {\n     this.host = host;\n@@ -57,7 +44,8 @@ public class ExternalDatabase {\n   }\n \n   public static class ExternalDatabaseBuilder {\n-    private String host = null;\n+\n+  private String host = null;\n     private String name = null;\n     private String password = null;\n     private Integer port = null;\n@@ -100,16 +88,15 @@ public class ExternalDatabase {\n   }\n \n   public ExternalDatabaseBuilder toBuilder() {\n-    return builder()\n-      .host(host)\n+    return builder().host(host)\n       .name(name)\n       .password(password)\n       .port(port)\n       .type(type)\n-      .user(user)\n-      ;\n+      .user(user);\n   }\n-  public String getHost() {\n+\n+public String getHost() {\n     return host;\n   }\n   public void setHost(String host) {\n@@ -154,25 +141,22 @@ public class ExternalDatabase {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ExternalDatabase other = (ExternalDatabase) o; // NOPMD\n-\n-    if (host != null ?\n-        !host.equals(other.host) :\n-        other.host != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (port != null ?\n-        !port.equals(other.port) :\n-        other.port != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n-    if (user != null ?\n-        !user.equals(other.user) :\n-        other.user != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    ExternalDatabase other = (ExternalDatabase) o;\n+\n+// NOPMD\n+\n+    if (host != null ?!host.equals(other.host) : other.host != null) return false;\n+\n+if (name != null ?!name.equals(other.name) : other.name != null) return false;\n+\n+if (port != null ?!port.equals(other.port) : other.port != null) return false;\n+\n+if (type != null ?!type.equals(other.type) : other.type != null) return false;\n+\n+if (user != null ?!user.equals(other.user) : other.user != null) return false;\n     return true;\n   }\n \n@@ -188,7 +172,7 @@ public class ExternalDatabase {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabase {\" + newLine);\n@@ -201,5 +185,4 @@ public class ExternalDatabase {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "46",
                    "column": "29",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "30",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "185",
                    "column": "47",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "187",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "188",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "188",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "188",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "191",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "191",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "191",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "199",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "200",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "202",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "202",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "202",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "202",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "202",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/302/ExternalDatabase.java\nindex 8e83595af50..0abfdc9c1c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/302/ExternalDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/302/ExternalDatabase.java\n@@ -18,50 +18,68 @@\n \n package com.cloudera.director.client.v10.model;\n \n-\n public class ExternalDatabase {\n+\n   private String host;\n+\n   private String name;\n   /* password [redacted on read] */\n+\n   private String password;\n+\n   private Integer port;\n+\n   private String type;\n+\n   private String user;\n+\n   public interface Type {\n-    String POSTGRESQL = \"POSTGRESQL\";\n-    String MYSQL = \"MYSQL\";\n-    String ORACLE = \"ORACLE\";\n+String POSTGRESQL = \"POSTGRESQL\";\n+\n+\n+String MYSQL = \"MYSQL\";\n+\n+\n+String ORACLE = \"ORACLE\";\n   }\n-  public ExternalDatabase() { }\n+\n+  public ExternalDatabase() {}\n+\n \n   private ExternalDatabase(String host, String name, String password, Integer port, String type, String user) {\n-    this.host = host;\n-    this.name = name;\n-    this.password = password;\n-    this.port = port;\n-    this.type = type;\n-    this.user = user;\n-  }\n+                                                                                                              this.host = host;\n+                                                                                                              this.name = name;\n+                                                                                                              this.password = password;\n+                                                                                                              this.port = port;\n+                                                                                                              this.type = type;\n+                                                                                                              this.user = user;\n+                              }\n \n   private ExternalDatabase(ExternalDatabaseBuilder builder) {\n-    this.host = builder.host;\n-    this.name = builder.name;\n-    this.password = builder.password;\n-    this.port = builder.port;\n-    this.type = builder.type;\n-    this.user = builder.user;\n-  }\n+                                                            this.host = builder.host;\n+                                                            this.name = builder.name;\n+                                                            this.password = builder.password;\n+                                                            this.port = builder.port;\n+                                                            this.type = builder.type;\n+                                                            this.user = builder.user;\n+                              }\n \n   public static ExternalDatabaseBuilder builder() {\n     return new ExternalDatabaseBuilder();\n   }\n \n   public static class ExternalDatabaseBuilder {\n+\n     private String host = null;\n+\n     private String name = null;\n+\n     private String password = null;\n+\n     private Integer port = null;\n+\n     private String type = null;\n+\n     private String user = null;\n \n     public ExternalDatabaseBuilder host(String host) {\n@@ -106,12 +124,13 @@ public class ExternalDatabase {\n       .password(password)\n       .port(port)\n       .type(type)\n-      .user(user)\n-      ;\n+      .user(user);\n   }\n+\n   public String getHost() {\n     return host;\n   }\n+\n   public void setHost(String host) {\n     this.host = host;\n   }\n@@ -119,6 +138,7 @@ public class ExternalDatabase {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -126,6 +146,7 @@ public class ExternalDatabase {\n   public String getPassword() {\n     return password;\n   }\n+\n   public void setPassword(String password) {\n     this.password = password;\n   }\n@@ -133,6 +154,7 @@ public class ExternalDatabase {\n   public Integer getPort() {\n     return port;\n   }\n+\n   public void setPort(Integer port) {\n     this.port = port;\n   }\n@@ -140,6 +162,7 @@ public class ExternalDatabase {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n@@ -147,59 +170,60 @@ public class ExternalDatabase {\n   public String getUser() {\n     return user;\n   }\n+\n   public void setUser(String user) {\n     this.user = user;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ExternalDatabase other = (ExternalDatabase) o; // NOPMD\n-\n-    if (host != null ?\n-        !host.equals(other.host) :\n-        other.host != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (port != null ?\n-        !port.equals(other.port) :\n-        other.port != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n-    if (user != null ?\n-        !user.equals(other.user) :\n-        other.user != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    ExternalDatabase other = (ExternalDatabase)o; // NOPMD\n+\n+    if (host != null?!host.equals(other.host): other.host != null) return false;\n+    if (name != null?!name.equals(other.name): other.name != null) return false;\n+    if (port != null?!port.equals(other.port): other.port != null) return false;\n+    if (type != null?!type.equals(other.type): other.type != null) return false;\n+    if (user != null?!user.equals(other.user): other.user != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (host != null ? host.hashCode() : 0);\n-    result = 31 * result + (name != null ? name.hashCode() : 0);\n-    result = 31 * result + (port != null ? port.hashCode() : 0);\n-    result = 31 * result + (type != null ? type.hashCode() : 0);\n-    result = 31 * result + (user != null ? user.hashCode() : 0);\n+    result = 31*result + (host != null? host.hashCode():0);\n+    result = 31*result + (name != null? name.hashCode():0);\n+    result = 31*result + (port != null? port.hashCode():0);\n+    result = 31*result + (type != null? type.hashCode():0);\n+    result = 31*result + (user != null? user.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalDatabase {\" + newLine);\n-    sb.append(\"  host: \").append(host).append(newLine);\n-    sb.append(\"  name: \").append(name).append(newLine);\n-    sb.append(\"  password: \").append(\"REDACTED\").append(newLine);\n-    sb.append(\"  port: \").append(port).append(newLine);\n-    sb.append(\"  type: \").append(type).append(newLine);\n-    sb.append(\"  user: \").append(user).append(newLine);\n+    sb.append(\"  host: \")\n+      .append(host).append(newLine);\n+    sb.append(\"  name: \")\n+      .append(name).append(newLine);\n+    sb.append(\"  password: \")\n+      .append(\"REDACTED\").append(newLine);\n+    sb.append(\"  port: \")\n+      .append(port).append(newLine);\n+    sb.append(\"  type: \")\n+      .append(type).append(newLine);\n+    sb.append(\"  user: \")\n+      .append(user).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 90
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
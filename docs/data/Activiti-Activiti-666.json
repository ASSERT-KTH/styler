{
    "project_name": "Activiti-Activiti",
    "error_id": "666",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.cmd;\n\nimport java.io.Serializable;\nimport java.util.Collection;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..fe9efb4733c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/666/GetTaskDataObjectsCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..f0db1c6b859 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/666/GetTaskDataObjectsCmd.java\n@@ -43,7 +43,7 @@ import org.activiti.engine.runtime.DataObject;\n import org.activiti.engine.task.Task;\n \n public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n-                                              Serializable {\n+        Serializable {\n \n     private static final long serialVersionUID = 1L;\n     protected String taskId;\n@@ -76,7 +76,7 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n \n         if (task == null) {\n             throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\",\n-                                                      Task.class);\n+                    Task.class);\n         }\n \n         Map<String, DataObject> dataObjects = null;\n@@ -85,7 +85,7 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n             variables = task.getVariableInstances();\n         } else {\n             variables = task.getVariableInstances(variableNames,\n-                                                  false);\n+                    false);\n         }\n \n         if (variables != null) {\n@@ -123,9 +123,9 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n \n                 if (locale != null && foundDataObject != null) {\n                     ObjectNode languageNode = Context.getLocalizationElementProperties(locale,\n-                                                                                       foundDataObject.getId(),\n-                                                                                       task.getProcessDefinitionId(),\n-                                                                                       withLocalizationFallback);\n+                            foundDataObject.getId(),\n+                            task.getProcessDefinitionId(),\n+                            withLocalizationFallback);\n \n                     if (languageNode != null) {\n                         JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n@@ -141,13 +141,13 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n \n                 if (foundDataObject != null) {\n                     dataObjects.put(variableEntity.getName(),\n-                                    new DataObjectImpl(variableEntity.getName(),\n-                                                       variableEntity.getValue(),\n-                                                       foundDataObject.getDocumentation(),\n-                                                       foundDataObject.getType(),\n-                                                       localizedName,\n-                                                       localizedDescription,\n-                                                       foundDataObject.getId()));\n+                            new DataObjectImpl(variableEntity.getName(),\n+                                    variableEntity.getValue(),\n+                                    foundDataObject.getDocumentation(),\n+                                    foundDataObject.getType(),\n+                                    localizedName,\n+                                    localizedDescription,\n+                                    foundDataObject.getId()));\n                 }\n             }\n         }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..2f7dc0a2c8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/666/GetTaskDataObjectsCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n@@ -126,8 +125,7 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n                                                                                        foundDataObject.getId(),\n                                                                                        task.getProcessDefinitionId(),\n                                                                                        withLocalizationFallback);\n-\n-                    if (languageNode != null) {\n+if (languageNode != null) {\n                         JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n                         if (nameNode != null) {\n                             localizedName = nameNode.asText();\n@@ -154,4 +152,4 @@ public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n \n         return dataObjects;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 252).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..12684ef5883 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/666/GetTaskDataObjectsCmd.java\n@@ -22,7 +22,6 @@ import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import org.activiti.bpmn.model.BpmnModel;\n@@ -42,116 +41,94 @@ import org.activiti.engine.impl.util.ProcessDefinitionUtil;\n import org.activiti.engine.runtime.DataObject;\n import org.activiti.engine.task.Task;\n \n+\n public class GetTaskDataObjectsCmd implements Command<Map<String, DataObject>>,\n                                               Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-    protected String taskId;\n-    protected Collection<String> variableNames;\n-    protected String locale;\n-    protected boolean withLocalizationFallback;\n-\n-    public GetTaskDataObjectsCmd(String taskId,\n-                                 Collection<String> variableNames) {\n-        this.taskId = taskId;\n-        this.variableNames = variableNames;\n+  private static final long serialVersionUID = 1L;\n+  protected String taskId;\n+  protected Collection<String> variableNames;\n+  protected String locale;\n+  protected boolean withLocalizationFallback;\n+\n+  public GetTaskDataObjectsCmd(String taskId, Collection<String> variableNames) {\n+    this.taskId = taskId;\n+    this.variableNames = variableNames;\n+  }\n+\n+  public GetTaskDataObjectsCmd(String taskId, Collection<String> variableNames, String locale, boolean withLocalizationFallback) {\n+    this.taskId = taskId;\n+    this.variableNames = variableNames;\n+    this.locale = locale;\n+    this.withLocalizationFallback = withLocalizationFallback;\n+  }\n+\n+  public Map<String, DataObject> execute(CommandContext commandContext) {\n+    if (taskId == null) {\n+      throw new ActivitiIllegalArgumentException(\"taskId is null\");\n     }\n \n-    public GetTaskDataObjectsCmd(String taskId,\n-                                 Collection<String> variableNames,\n-                                 String locale,\n-                                 boolean withLocalizationFallback) {\n-        this.taskId = taskId;\n-        this.variableNames = variableNames;\n-        this.locale = locale;\n-        this.withLocalizationFallback = withLocalizationFallback;\n+    TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n+    if (task == null) {\n+      throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\",\n+                                                Task.class);\n     }\n \n-    public Map<String, DataObject> execute(CommandContext commandContext) {\n-        if (taskId == null) {\n-            throw new ActivitiIllegalArgumentException(\"taskId is null\");\n-        }\n-\n-        TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n-\n-        if (task == null) {\n-            throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\",\n-                                                      Task.class);\n-        }\n-\n-        Map<String, DataObject> dataObjects = null;\n-        Map<String, VariableInstance> variables = null;\n-        if (variableNames == null) {\n-            variables = task.getVariableInstances();\n-        } else {\n-            variables = task.getVariableInstances(variableNames,\n-                                                  false);\n-        }\n-\n-        if (variables != null) {\n-            dataObjects = new HashMap<>(variables.size());\n-\n-            for (Entry<String, VariableInstance> entry : variables.entrySet()) {\n-                VariableInstance variableEntity = entry.getValue();\n-\n-                String localizedName = null;\n-                String localizedDescription = null;\n-\n-                ExecutionEntity executionEntity = commandContext.getExecutionEntityManager().findById(variableEntity.getExecutionId());\n-                while (!executionEntity.isScope()) {\n-                    executionEntity = executionEntity.getParent();\n-                }\n-\n-                BpmnModel bpmnModel = ProcessDefinitionUtil.getBpmnModel(executionEntity.getProcessDefinitionId());\n-                ValuedDataObject foundDataObject = null;\n-                if (executionEntity.getParentId() == null) {\n-                    for (ValuedDataObject dataObject : bpmnModel.getMainProcess().getDataObjects()) {\n-                        if (dataObject.getName().equals(variableEntity.getName())) {\n-                            foundDataObject = dataObject;\n-                            break;\n-                        }\n-                    }\n-                } else {\n-                    SubProcess subProcess = (SubProcess) bpmnModel.getFlowElement(executionEntity.getActivityId());\n-                    for (ValuedDataObject dataObject : subProcess.getDataObjects()) {\n-                        if (dataObject.getName().equals(variableEntity.getName())) {\n-                            foundDataObject = dataObject;\n-                            break;\n-                        }\n-                    }\n-                }\n-\n-                if (locale != null && foundDataObject != null) {\n-                    ObjectNode languageNode = Context.getLocalizationElementProperties(locale,\n-                                                                                       foundDataObject.getId(),\n-                                                                                       task.getProcessDefinitionId(),\n-                                                                                       withLocalizationFallback);\n-\n-                    if (languageNode != null) {\n-                        JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n-                        if (nameNode != null) {\n-                            localizedName = nameNode.asText();\n-                        }\n-                        JsonNode descriptionNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_DESCRIPTION);\n-                        if (descriptionNode != null) {\n-                            localizedDescription = descriptionNode.asText();\n-                        }\n-                    }\n-                }\n-\n-                if (foundDataObject != null) {\n-                    dataObjects.put(variableEntity.getName(),\n-                                    new DataObjectImpl(variableEntity.getName(),\n-                                                       variableEntity.getValue(),\n-                                                       foundDataObject.getDocumentation(),\n-                                                       foundDataObject.getType(),\n-                                                       localizedName,\n-                                                       localizedDescription,\n-                                                       foundDataObject.getId()));\n-                }\n+    Map<String, DataObject> dataObjects = null;\n+    Map<String, VariableInstance> variables = null;\n+    if (variableNames == null) {\n+      variables = task.getVariableInstances();\n+    } else {\n+      variables = task.getVariableInstances(variableNames, false);\n+    }\n+    if (variables != null) {\n+      dataObjects = new HashMap<>(variables.size());\n+      for (Entry<String, VariableInstance> entry : variables.entrySet()) {\n+          VariableInstance variableEntity = entry.getValue();\n+          String localizedName = null;\n+          String localizedDescription = null;\n+          ExecutionEntity executionEntity = commandContext.getExecutionEntityManager().findById(variableEntity.getExecutionId());\n+          while (!executionEntity.isScope()) {\n+            executionEntity = executionEntity.getParent();\n+          }\n+\n+          BpmnModel bpmnModel = ProcessDefinitionUtil.getBpmnModel(executionEntity.getProcessDefinitionId());\n+          ValuedDataObject foundDataObject = null;\n+          if (executionEntity.getParentId() == null) {\n+            for (ValuedDataObject dataObject : bpmnModel.getMainProcess().getDataObjects()) {\n+              if (dataObject.getName().equals(variableEntity.getName())) {\n+                foundDataObject = dataObject;\n+                break;\n+              }\n             }\n-        }\n-\n-        return dataObjects;\n+          } else {\n+            SubProcess subProcess = (SubProcess) bpmnModel.getFlowElement(executionEntity.getActivityId());\n+            for (ValuedDataObject dataObject : subProcess.getDataObjects()) {\n+              if (dataObject.getName().equals(variableEntity.getName())) {\n+                foundDataObject = dataObject;\n+                break;\n+              }\n+            }\n+          }\n+          if (locale != null && foundDataObject != null) {\n+            ObjectNode languageNode = Context.getLocalizationElementProperties(locale, foundDataObject.getId(), task.getProcessDefinitionId(), withLocalizationFallback);\n+            if (languageNode != null) {\n+              JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n+              if (nameNode != null) {\n+                localizedName = nameNode.asText();\n+              }\n+\n+              JsonNode descriptionNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_DESCRIPTION);\n+              if (descriptionNode != null) {\n+                localizedDescription = descriptionNode.asText();\n+              }\n+            }\n+          }\n+          if (foundDataObject != null) {\n+            dataObjects.put(variableEntity.getName(), new DataObjectImpl(variableEntity.getName(), variableEntity.getValue(), foundDataObject.getDocumentation(), foundDataObject.getType(), localizedName, localizedDescription, foundDataObject.getId()));\n+          }\n+      }\n     }\n-}\n+    return dataObjects;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 143
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..fe9efb4733c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/666/GetTaskDataObjectsCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/666/GetTaskDataObjectsCmd.java\nindex 3341f3a186a..fe9efb4733c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/666/GetTaskDataObjectsCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/666/GetTaskDataObjectsCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
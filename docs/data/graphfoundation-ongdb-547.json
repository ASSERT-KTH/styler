{
    "project_name": "graphfoundation-ongdb",
    "error_id": "547",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/547/SlaveStatementLocks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/547/SlaveStatementLocks.java\nindex ffe3fbc53c1..b1a98d6c050 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/547/SlaveStatementLocks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/547/SlaveStatementLocks.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.lock;\n \n import java.util.stream.Stream;\n@@ -41,53 +42,53 @@ import org.neo4j.kernel.impl.locking.StatementLocks;\n  */\n public class SlaveStatementLocks implements StatementLocks\n {\n-    private final StatementLocks delegate;\n+  private final StatementLocks delegate;\n \n-    SlaveStatementLocks( StatementLocks delegate )\n-    {\n-        this.delegate = delegate;\n-    }\n+  SlaveStatementLocks(StatementLocks delegate)\n+  {\n+    this.delegate = delegate;\n+  }\n \n-    @Override\n-    public Locks.Client pessimistic()\n-    {\n-        return delegate.pessimistic();\n-    }\n+  @Override\n+  public Locks.Client pessimistic()\n+  {\n+    return delegate.pessimistic();\n+  }\n \n-    @Override\n-    public Locks.Client optimistic()\n-    {\n-        return delegate.optimistic();\n-    }\n+  @Override\n+  public Locks.Client optimistic()\n+  {\n+    return delegate.optimistic();\n+  }\n \n-    @Override\n-    public void prepareForCommit( LockTracer lockTracer )\n-    {\n-        delegate.prepareForCommit( lockTracer );\n-        ((SlaveLocksClient) optimistic()).acquireDeferredSharedLocks( lockTracer );\n-    }\n+  @Override\n+  public void prepareForCommit(LockTracer lockTracer)\n+  {\n+    delegate.prepareForCommit(lockTracer);\n+    ((SlaveLocksClient) optimistic()).acquireDeferredSharedLocks(lockTracer);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        delegate.stop();\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    delegate.stop();\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        delegate.close();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    delegate.close();\n+  }\n \n-    @Override\n-    public Stream<? extends ActiveLock> activeLocks()\n-    {\n-        return delegate.activeLocks();\n-    }\n+  @Override\n+  public Stream<? extends ActiveLock> activeLocks()\n+  {\n+    return delegate.activeLocks();\n+  }\n \n-    @Override\n-    public long activeLockCount()\n-    {\n-        return delegate.activeLockCount();\n-    }\n+  @Override\n+  public long activeLockCount()\n+  {\n+    return delegate.activeLockCount();\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/547/SlaveStatementLocks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/547/SlaveStatementLocks.java\nindex ffe3fbc53c1..b816bcd1d44 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/547/SlaveStatementLocks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/547/SlaveStatementLocks.java\n@@ -90,4 +90,4 @@ public class SlaveStatementLocks implements StatementLocks\n     {\n         return delegate.activeLockCount();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-ignite-3",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "33",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n    private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n    private ConfigurationEntry snapshot = new ConfigurationEntry();\n\n    /**\n     * Adds a new conf entry.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/25/ConfigurationManager.java\nindex e3a74534751..66922302456 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/25/ConfigurationManager.java\n@@ -30,6 +30,7 @@ public class ConfigurationManager {\n     private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n     private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n+\n     private ConfigurationEntry snapshot = new ConfigurationEntry();\n \n     /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/25/ConfigurationManager.java\nindex e3a74534751..b590d34ed60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/25/ConfigurationManager.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.conf;\n \n import java.util.LinkedList;\n@@ -27,80 +28,79 @@ import org.slf4j.LoggerFactory;\n  */\n public class ConfigurationManager {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n-    private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n-    private ConfigurationEntry snapshot = new ConfigurationEntry();\n+  private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n \n-    /**\n-     * Adds a new conf entry.\n-     */\n-    public boolean add(final ConfigurationEntry entry) {\n-        if (!this.configurations.isEmpty()) {\n-            if (this.configurations.peekLast().getId().getIndex() >= entry.getId().getIndex()) {\n-                LOG.error(\"Did you forget to call truncateSuffix before the last log index goes back.\");\n-                return false;\n-            }\n-        }\n-        return this.configurations.add(entry);\n-    }\n+  private ConfigurationEntry snapshot = new ConfigurationEntry();\n \n-    /**\n-     * [1, first_index_kept) are being discarded\n-     */\n-    public void truncatePrefix(final long firstIndexKept) {\n-        while (!this.configurations.isEmpty() && this.configurations.peekFirst().getId().getIndex() < firstIndexKept) {\n-            this.configurations.pollFirst();\n-        }\n+  /**\n+   * Adds a new conf entry.\n+   */\n+  public boolean add(final ConfigurationEntry entry) {\n+    if (!this.configurations.isEmpty()) {\n+      if (this.configurations.peekLast().getId().getIndex() >= entry.getId().getIndex()) {\n+        LOG.error(\"Did you forget to call truncateSuffix before the last log index goes back.\");\n+        return false;\n+      }\n     }\n+    return this.configurations.add(entry);\n+  }\n \n-    /**\n-     * (last_index_kept, infinity) are being discarded\n-     */\n-    public void truncateSuffix(final long lastIndexKept) {\n-        while (!this.configurations.isEmpty() && this.configurations.peekLast().getId().getIndex() > lastIndexKept) {\n-            this.configurations.pollLast();\n-        }\n+  /**\n+   * [1, first_index_kept) are being discarded\n+   */\n+  public void truncatePrefix(final long firstIndexKept) {\n+    while (!this.configurations.isEmpty() && this.configurations.peekFirst().getId().getIndex() < firstIndexKept) {\n+      this.configurations.pollFirst();\n     }\n+  }\n \n-    public ConfigurationEntry getSnapshot() {\n-        return this.snapshot;\n+  /**\n+   * (last_index_kept, infinity) are being discarded\n+   */\n+  public void truncateSuffix(final long lastIndexKept) {\n+    while (!this.configurations.isEmpty() && this.configurations.peekLast().getId().getIndex() > lastIndexKept) {\n+      this.configurations.pollLast();\n     }\n+  }\n \n-    public void setSnapshot(final ConfigurationEntry snapshot) {\n-        this.snapshot = snapshot;\n-    }\n+  public ConfigurationEntry getSnapshot() {\n+    return this.snapshot;\n+  }\n \n-    public ConfigurationEntry getLastConfiguration() {\n-        if (this.configurations.isEmpty()) {\n-            return snapshot;\n-        }\n-        else {\n-            return this.configurations.peekLast();\n-        }\n+  public void setSnapshot(final ConfigurationEntry snapshot) {\n+    this.snapshot = snapshot;\n+  }\n+\n+  public ConfigurationEntry getLastConfiguration() {\n+    if (this.configurations.isEmpty()) {\n+      return snapshot;\n+    } else {\n+      return this.configurations.peekLast();\n     }\n+  }\n \n-    public ConfigurationEntry get(final long lastIncludedIndex) {\n-        if (this.configurations.isEmpty()) {\n-            Requires.requireTrue(lastIncludedIndex >= this.snapshot.getId().getIndex(),\n-                \"lastIncludedIndex %d is less than snapshot index %d\", lastIncludedIndex, this.snapshot.getId()\n-                    .getIndex());\n-            return this.snapshot;\n-        }\n-        ListIterator<ConfigurationEntry> it = this.configurations.listIterator();\n-        while (it.hasNext()) {\n-            if (it.next().getId().getIndex() > lastIncludedIndex) {\n-                it.previous();\n-                break;\n-            }\n-        }\n-        if (it.hasPrevious()) {\n-            // find the first position that is less than or equal to lastIncludedIndex.\n-            return it.previous();\n-        }\n-        else {\n-            // position not found position, return snapshot.\n-            return this.snapshot;\n-        }\n+  public ConfigurationEntry get(final long lastIncludedIndex) {\n+    if (this.configurations.isEmpty()) {\n+      Requires.requireTrue(lastIncludedIndex >= this.snapshot.getId().getIndex(),\n+          \"lastIncludedIndex %d is less than snapshot index %d\", lastIncludedIndex, this.snapshot.getId()\n+              .getIndex());\n+      return this.snapshot;\n+    }\n+    ListIterator<ConfigurationEntry> it = this.configurations.listIterator();\n+    while (it.hasNext()) {\n+      if (it.next().getId().getIndex() > lastIncludedIndex) {\n+        it.previous();\n+        break;\n+      }\n+    }\n+    if (it.hasPrevious()) {\n+      // find the first position that is less than or equal to lastIncludedIndex.\n+      return it.previous();\n+    } else {\n+      // position not found position, return snapshot.\n+      return this.snapshot;\n     }\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/25/ConfigurationManager.java\nindex e3a74534751..5a5b1a5ccc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/25/ConfigurationManager.java\n@@ -26,8 +26,7 @@ import org.slf4j.LoggerFactory;\n  * Configuration manager\n  */\n public class ConfigurationManager {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n+private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n     private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n     private ConfigurationEntry snapshot = new ConfigurationEntry();\n@@ -85,7 +84,8 @@ public class ConfigurationManager {\n             Requires.requireTrue(lastIncludedIndex >= this.snapshot.getId().getIndex(),\n                 \"lastIncludedIndex %d is less than snapshot index %d\", lastIncludedIndex, this.snapshot.getId()\n                     .getIndex());\n-            return this.snapshot;\n+\n+return this.snapshot;\n         }\n         ListIterator<ConfigurationEntry> it = this.configurations.listIterator();\n         while (it.hasNext()) {\n@@ -103,4 +103,4 @@ public class ConfigurationManager {\n             return this.snapshot;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/25/ConfigurationManager.java\nindex e3a74534751..47eec61b773 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/25/ConfigurationManager.java\n@@ -25,31 +25,45 @@ import org.slf4j.LoggerFactory;\n /**\n  * Configuration manager\n  */\n+\n+\n public class ConfigurationManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n+\n     private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n+\n+\n     private ConfigurationEntry snapshot = new ConfigurationEntry();\n \n     /**\n      * Adds a new conf entry.\n      */\n+\n+\n     public boolean add(final ConfigurationEntry entry) {\n         if (!this.configurations.isEmpty()) {\n-            if (this.configurations.peekLast().getId().getIndex() >= entry.getId().getIndex()) {\n+            if (this.configurations.peekLast()\n+                    .getId()\n+                    .getIndex() >= entry.getId().getIndex()) {\n                 LOG.error(\"Did you forget to call truncateSuffix before the last log index goes back.\");\n+\n                 return false;\n             }\n         }\n+\n         return this.configurations.add(entry);\n     }\n \n     /**\n      * [1, first_index_kept) are being discarded\n      */\n+\n     public void truncatePrefix(final long firstIndexKept) {\n-        while (!this.configurations.isEmpty() && this.configurations.peekFirst().getId().getIndex() < firstIndexKept) {\n+        while (!this.configurations.isEmpty() && this.configurations.peekFirst()\n+                                                     .getId()\n+                                                     .getIndex() < firstIndexKept) {\n             this.configurations.pollFirst();\n         }\n     }\n@@ -57,8 +71,11 @@ public class ConfigurationManager {\n     /**\n      * (last_index_kept, infinity) are being discarded\n      */\n+\n     public void truncateSuffix(final long lastIndexKept) {\n-        while (!this.configurations.isEmpty() && this.configurations.peekLast().getId().getIndex() > lastIndexKept) {\n+        while (!this.configurations.isEmpty() && this.configurations.peekLast()\n+                                                     .getId()\n+                                                     .getIndex() > lastIndexKept) {\n             this.configurations.pollLast();\n         }\n     }\n@@ -82,15 +99,20 @@ public class ConfigurationManager {\n \n     public ConfigurationEntry get(final long lastIncludedIndex) {\n         if (this.configurations.isEmpty()) {\n-            Requires.requireTrue(lastIncludedIndex >= this.snapshot.getId().getIndex(),\n-                \"lastIncludedIndex %d is less than snapshot index %d\", lastIncludedIndex, this.snapshot.getId()\n-                    .getIndex());\n+            Requires.requireTrue(lastIncludedIndex >= this.snapshot.getId()\n+                                                          .getIndex(), \"lastIncludedIndex %d is less than snapshot index %d\", lastIncludedIndex, this.snapshot.getId()\n+                                                                                                                                                     .getIndex());\n+\n             return this.snapshot;\n         }\n+\n         ListIterator<ConfigurationEntry> it = this.configurations.listIterator();\n+\n         while (it.hasNext()) {\n-            if (it.next().getId().getIndex() > lastIncludedIndex) {\n+            if (it.next().getId()\n+                         .getIndex() > lastIncludedIndex) {\n                 it.previous();\n+\n                 break;\n             }\n         }\n@@ -103,4 +125,4 @@ public class ConfigurationManager {\n             return this.snapshot;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/25/ConfigurationManager.java\nindex e3a74534751..66922302456 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/25/ConfigurationManager.java\n@@ -30,6 +30,7 @@ public class ConfigurationManager {\n     private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n     private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n+\n     private ConfigurationEntry snapshot = new ConfigurationEntry();\n \n     /**\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/25/ConfigurationManager.java\nindex e3a74534751..66922302456 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/25/ConfigurationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/25/ConfigurationManager.java\n@@ -30,6 +30,7 @@ public class ConfigurationManager {\n     private static final Logger LOG = LoggerFactory.getLogger(ConfigurationManager.class);\n \n     private final LinkedList<ConfigurationEntry> configurations = new LinkedList<>();\n+\n     private ConfigurationEntry snapshot = new ConfigurationEntry();\n \n     /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
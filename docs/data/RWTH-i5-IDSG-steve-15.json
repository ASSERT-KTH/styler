{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @since 13.03.2018\n */\npublic class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeScheduleParams, GetCompositeScheduleResponse> {\n\n    public GetCompositeScheduleTask(OcppVersion ocppVersion,\n                                    GetCompositeScheduleParams params) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/15/GetCompositeScheduleTask.java\nindex 54e3c2175d6..e48e8c700bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/15/GetCompositeScheduleTask.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve.ocpp.task;\n \n import de.rwth.idsg.steve.ocpp.Ocpp16AndAboveTask;\n@@ -33,45 +34,46 @@ import javax.xml.ws.AsyncHandler;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 13.03.2018\n  */\n-public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeScheduleParams, GetCompositeScheduleResponse> {\n+public class GetCompositeScheduleTask\n+  extends Ocpp16AndAboveTask<GetCompositeScheduleParams, GetCompositeScheduleResponse> {\n \n-    public GetCompositeScheduleTask(OcppVersion ocppVersion,\n-                                    GetCompositeScheduleParams params) {\n-        super(ocppVersion, params);\n-    }\n+  public GetCompositeScheduleTask(OcppVersion ocppVersion,\n+                                  GetCompositeScheduleParams params) {\n+    super(ocppVersion, params);\n+  }\n \n-    @Override\n-    public OcppCallback<GetCompositeScheduleResponse> defaultCallback() {\n-        return new DefaultOcppCallback<GetCompositeScheduleResponse>() {\n+  @Override\n+  public OcppCallback<GetCompositeScheduleResponse> defaultCallback() {\n+    return new DefaultOcppCallback<GetCompositeScheduleResponse>() {\n \n-            @Override\n-            public void success(String chargeBoxId, GetCompositeScheduleResponse response) {\n-                addNewResponse(chargeBoxId, response.getStatus().value());\n+      @Override\n+      public void success(String chargeBoxId, GetCompositeScheduleResponse response) {\n+        addNewResponse(chargeBoxId, response.getStatus().value());\n \n-                if (response.getStatus() == GetCompositeScheduleStatus.ACCEPTED) {\n-                    RequestResult result = getResultMap().get(chargeBoxId);\n-                    result.setDetails(response);\n-                }\n-            }\n-        };\n-    }\n+        if (response.getStatus() == GetCompositeScheduleStatus.ACCEPTED) {\n+          RequestResult result = getResultMap().get(chargeBoxId);\n+          result.setDetails(response);\n+        }\n+      }\n+    };\n+  }\n \n-    @Override\n-    public GetCompositeScheduleRequest getOcpp16Request() {\n-        return new GetCompositeScheduleRequest()\n-                .withConnectorId(params.getConnectorId())\n-                .withDuration(params.getDurationInSeconds())\n-                .withChargingRateUnit(params.getChargingRateUnit());\n-    }\n+  @Override\n+  public GetCompositeScheduleRequest getOcpp16Request() {\n+    return new GetCompositeScheduleRequest()\n+      .withConnectorId(params.getConnectorId())\n+      .withDuration(params.getDurationInSeconds())\n+      .withChargingRateUnit(params.getChargingRateUnit());\n+  }\n \n-    @Override\n-    public AsyncHandler<GetCompositeScheduleResponse> getOcpp16Handler(String chargeBoxId) {\n-        return res -> {\n-            try {\n-                success(chargeBoxId, res.get());\n-            } catch (Exception e) {\n-                failed(chargeBoxId, e);\n-            }\n-        };\n-    }\n+  @Override\n+  public AsyncHandler<GetCompositeScheduleResponse> getOcpp16Handler(String chargeBoxId) {\n+    return res -> {\n+      try {\n+        success(chargeBoxId, res.get());\n+      } catch (Exception e) {\n+        failed(chargeBoxId, e);\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/15/GetCompositeScheduleTask.java\nindex 54e3c2175d6..08fd17b9782 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/15/GetCompositeScheduleTask.java\n@@ -15,8 +15,7 @@\n  *\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n- */\n-package de.rwth.idsg.steve.ocpp.task;\n+ */package de.rwth.idsg.steve.ocpp.task;\n \n import de.rwth.idsg.steve.ocpp.Ocpp16AndAboveTask;\n import de.rwth.idsg.steve.ocpp.OcppCallback;\n@@ -37,7 +36,7 @@ public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeSch\n \n     public GetCompositeScheduleTask(OcppVersion ocppVersion,\n                                     GetCompositeScheduleParams params) {\n-        super(ocppVersion, params);\n+    super(ocppVersion, params);\n     }\n \n     @Override\n@@ -74,4 +73,4 @@ public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeSch\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/15/GetCompositeScheduleTask.java\nindex 54e3c2175d6..b3a25641aaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/15/GetCompositeScheduleTask.java\n@@ -26,17 +26,17 @@ import de.rwth.idsg.steve.web.dto.ocpp.GetCompositeScheduleParams;\n import ocpp.cp._2015._10.GetCompositeScheduleRequest;\n import ocpp.cp._2015._10.GetCompositeScheduleResponse;\n import ocpp.cp._2015._10.GetCompositeScheduleStatus;\n-\n import javax.xml.ws.AsyncHandler;\n \n /**\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 13.03.2018\n  */\n+\n+\n public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeScheduleParams, GetCompositeScheduleResponse> {\n \n-    public GetCompositeScheduleTask(OcppVersion ocppVersion,\n-                                    GetCompositeScheduleParams params) {\n+    public GetCompositeScheduleTask(OcppVersion ocppVersion, GetCompositeScheduleParams params) {\n         super(ocppVersion, params);\n     }\n \n@@ -44,24 +44,26 @@ public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeSch\n     public OcppCallback<GetCompositeScheduleResponse> defaultCallback() {\n         return new DefaultOcppCallback<GetCompositeScheduleResponse>() {\n \n-            @Override\n-            public void success(String chargeBoxId, GetCompositeScheduleResponse response) {\n-                addNewResponse(chargeBoxId, response.getStatus().value());\n+                   @Override\n+                   public void success(String chargeBoxId, GetCompositeScheduleResponse response) {\n+                       addNewResponse(chargeBoxId, response.getStatus()\n+                           .value());\n \n-                if (response.getStatus() == GetCompositeScheduleStatus.ACCEPTED) {\n-                    RequestResult result = getResultMap().get(chargeBoxId);\n-                    result.setDetails(response);\n-                }\n-            }\n-        };\n+                       if (response.getStatus() == GetCompositeScheduleStatus.ACCEPTED) {\n+                           RequestResult result = getResultMap()\n+                               .get(chargeBoxId);\n+                           result.setDetails(response);\n+                       }\n+                   }\n+               };\n     }\n \n     @Override\n     public GetCompositeScheduleRequest getOcpp16Request() {\n         return new GetCompositeScheduleRequest()\n-                .withConnectorId(params.getConnectorId())\n-                .withDuration(params.getDurationInSeconds())\n-                .withChargingRateUnit(params.getChargingRateUnit());\n+        .withConnectorId(params.getConnectorId())\n+        .withDuration(params.getDurationInSeconds())\n+        .withChargingRateUnit(params.getChargingRateUnit());\n     }\n \n     @Override\n@@ -74,4 +76,4 @@ public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeSch\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "94",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/15/GetCompositeScheduleTask.java\nindex 54e3c2175d6..e16e0c1407d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/15/GetCompositeScheduleTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/15/GetCompositeScheduleTask.java\n@@ -33,7 +33,7 @@ import javax.xml.ws.AsyncHandler;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 13.03.2018\n  */\n-public class GetCompositeScheduleTask extends Ocpp16AndAboveTask<GetCompositeScheduleParams, GetCompositeScheduleResponse> {\n+public class GetCompositeScheduleTask extends Ocpp16AndAboveTask < GetCompositeScheduleParams,GetCompositeScheduleResponse> {\n \n     public GetCompositeScheduleTask(OcppVersion ocppVersion,\n                                     GetCompositeScheduleParams params) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
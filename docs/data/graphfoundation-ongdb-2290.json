{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2290",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2290/LruCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2290/LruCache.java\nindex 34973e1ae47..8cdd667d725 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2290/LruCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2290/LruCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.LinkedHashMap;\n@@ -31,143 +32,142 @@ import java.util.Set;\n  */\n public class LruCache<K, E>\n {\n-    private final String name;\n-    private int maxSize;\n+  private final String name;\n+  private int maxSize;\n \n-    private final Map<K, E> cache = new LinkedHashMap<K, E>( 500, 0.75f, true )\n-    {\n-        @Override\n-        protected boolean removeEldestEntry( Map.Entry<K, E> eldest )\n-        {\n-            // synchronization miss with old value on maxSize here is ok\n-            if ( size() > maxSize )\n-            {\n-                elementCleaned( eldest.getValue() );\n-                return true;\n-            }\n-            return false;\n-        }\n-    };\n-\n-    /**\n-     * Creates a LRU cache. If {@code maxSize < 1} an\n-     * IllegalArgumentException is thrown.\n-     *\n-     * @param name    name of cache\n-     * @param maxSize maximum size of this cache\n-     */\n-    public LruCache( String name, int maxSize )\n+  private final Map<K, E> cache = new LinkedHashMap<K, E>(500, 0.75f, true)\n+  {\n+    @Override\n+    protected boolean removeEldestEntry(Map.Entry<K, E> eldest)\n     {\n-        if ( name == null || maxSize < 1 )\n-        {\n-            throw new IllegalArgumentException( \"maxSize=\" + maxSize + \", name=\" + name );\n-        }\n-        this.name = name;\n-        this.maxSize = maxSize;\n+      // synchronization miss with old value on maxSize here is ok\n+      if (size() > maxSize)\n+      {\n+        elementCleaned(eldest.getValue());\n+        return true;\n+      }\n+      return false;\n     }\n+  };\n \n-    public String getName()\n+  /**\n+   * Creates a LRU cache. If {@code maxSize < 1} an\n+   * IllegalArgumentException is thrown.\n+   *\n+   * @param name    name of cache\n+   * @param maxSize maximum size of this cache\n+   */\n+  public LruCache(String name, int maxSize)\n+  {\n+    if (name == null || maxSize < 1)\n     {\n-        return this.name;\n+      throw new IllegalArgumentException(\"maxSize=\" + maxSize + \", name=\" + name);\n     }\n+    this.name = name;\n+    this.maxSize = maxSize;\n+  }\n \n-    /**\n-     * Returns the maximum size of this cache.\n-     *\n-     * @return maximum size\n-     */\n-    public int maxSize()\n-    {\n-        return maxSize;\n-    }\n+  public String getName()\n+  {\n+    return this.name;\n+  }\n \n-    public synchronized void put( K key, E element )\n-    {\n-        if ( key == null || element == null )\n-        {\n-            throw new IllegalArgumentException( \"key=\" + key + \", element=\" + element );\n-        }\n-        cache.put( key, element );\n-    }\n+  /**\n+   * Returns the maximum size of this cache.\n+   *\n+   * @return maximum size\n+   */\n+  public int maxSize()\n+  {\n+    return maxSize;\n+  }\n \n-    public synchronized E remove( K key )\n+  public synchronized void put(K key, E element)\n+  {\n+    if (key == null || element == null)\n     {\n-        if ( key == null )\n-        {\n-            throw new IllegalArgumentException( \"Null parameter\" );\n-        }\n-        return cache.remove( key );\n+      throw new IllegalArgumentException(\"key=\" + key + \", element=\" + element);\n     }\n+    cache.put(key, element);\n+  }\n \n-    public synchronized E get( K key )\n+  public synchronized E remove(K key)\n+  {\n+    if (key == null)\n     {\n-        if ( key == null )\n-        {\n-            throw new IllegalArgumentException();\n-        }\n-        return cache.get( key );\n+      throw new IllegalArgumentException(\"Null parameter\");\n     }\n+    return cache.remove(key);\n+  }\n \n-    public synchronized void clear()\n+  public synchronized E get(K key)\n+  {\n+    if (key == null)\n     {\n-        for ( Map.Entry<K, E> keEntry : cache.entrySet() )\n-        {\n-            elementCleaned( keEntry.getValue() );\n-        }\n-        cache.clear();\n+      throw new IllegalArgumentException();\n     }\n+    return cache.get(key);\n+  }\n \n-    public synchronized int size()\n+  public synchronized void clear()\n+  {\n+    for (Map.Entry<K, E> keEntry : cache.entrySet())\n     {\n-        return cache.size();\n+      elementCleaned(keEntry.getValue());\n     }\n+    cache.clear();\n+  }\n \n-    public synchronized Set<K> keySet()\n-    {\n-        return cache.keySet();\n-    }\n+  public synchronized int size()\n+  {\n+    return cache.size();\n+  }\n+\n+  public synchronized Set<K> keySet()\n+  {\n+    return cache.keySet();\n+  }\n \n-    /**\n-     * Changes the max size of the cache. If <CODE>newMaxSize</CODE> is\n-     * greater then <CODE>maxSize()</CODE> next invoke to <CODE>maxSize()</CODE>\n-     * will return <CODE>newMaxSize</CODE> and the entries in cache will not\n-     * be modified.\n-     * <p>\n-     * If <CODE>newMaxSize</CODE> is less then <CODE>size()</CODE>\n-     * the cache will shrink itself removing least recently used element until\n-     * <CODE>size()</CODE> equals <CODE>newMaxSize</CODE>. For each element\n-     * removed the {@link #elementCleaned} method is invoked.\n-     * <p>\n-     * If <CODE>newMaxSize</CODE> is less then <CODE>1</CODE> an\n-     * {@link IllegalArgumentException} is thrown.\n-     *\n-     * @param newMaxSize the new maximum size of the cache\n-     */\n-    public synchronized void resize( int newMaxSize )\n+  /**\n+   * Changes the max size of the cache. If <CODE>newMaxSize</CODE> is\n+   * greater then <CODE>maxSize()</CODE> next invoke to <CODE>maxSize()</CODE>\n+   * will return <CODE>newMaxSize</CODE> and the entries in cache will not\n+   * be modified.\n+   * <p>\n+   * If <CODE>newMaxSize</CODE> is less then <CODE>size()</CODE>\n+   * the cache will shrink itself removing least recently used element until\n+   * <CODE>size()</CODE> equals <CODE>newMaxSize</CODE>. For each element\n+   * removed the {@link #elementCleaned} method is invoked.\n+   * <p>\n+   * If <CODE>newMaxSize</CODE> is less then <CODE>1</CODE> an\n+   * {@link IllegalArgumentException} is thrown.\n+   *\n+   * @param newMaxSize the new maximum size of the cache\n+   */\n+  public synchronized void resize(int newMaxSize)\n+  {\n+    if (newMaxSize < 1)\n     {\n-        if ( newMaxSize < 1 )\n-        {\n-            throw new IllegalArgumentException( \"newMaxSize=\" + newMaxSize );\n-        }\n-\n-        if ( newMaxSize >= size() )\n-        {\n-            maxSize = newMaxSize;\n-        }\n-        else\n-        {\n-            maxSize = newMaxSize;\n-            java.util.Iterator<Map.Entry<K, E>> itr = cache.entrySet().iterator();\n-            while ( itr.hasNext() && cache.size() > maxSize )\n-            {\n-                E element = itr.next().getValue();\n-                itr.remove();\n-                elementCleaned( element );\n-            }\n-        }\n+      throw new IllegalArgumentException(\"newMaxSize=\" + newMaxSize);\n     }\n \n-    public void elementCleaned( E element )\n+    if (newMaxSize >= size())\n     {\n+      maxSize = newMaxSize;\n+    } else\n+    {\n+      maxSize = newMaxSize;\n+      java.util.Iterator<Map.Entry<K, E>> itr = cache.entrySet().iterator();\n+      while (itr.hasNext() && cache.size() > maxSize)\n+      {\n+        E element = itr.next().getValue();\n+        itr.remove();\n+        elementCleaned(element);\n+      }\n     }\n+  }\n+\n+  public void elementCleaned(E element)\n+  {\n+  }\n }\n",
            "diff_size": 167
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2290/LruCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2290/LruCache.java\nindex 34973e1ae47..51f274900bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2290/LruCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2290/LruCache.java\n@@ -34,10 +34,10 @@ public class LruCache<K, E>\n     private final String name;\n     private int maxSize;\n \n-    private final Map<K, E> cache = new LinkedHashMap<K, E>( 500, 0.75f, true )\n+    private final Map<K,E> cache = new LinkedHashMap<K, E>( 500, 0.75f, true )\n     {\n         @Override\n-        protected boolean removeEldestEntry( Map.Entry<K, E> eldest )\n+        protected boolean removeEldestEntry( Map.Entry<K,E> eldest )\n         {\n             // synchronization miss with old value on maxSize here is ok\n             if ( size() > maxSize )\n@@ -96,7 +96,8 @@ public class LruCache<K, E>\n         {\n             throw new IllegalArgumentException( \"Null parameter\" );\n         }\n-        return cache.remove( key );\n+\n+return cache.remove( key );\n     }\n \n     public synchronized E get( K key )\n@@ -105,12 +106,13 @@ public class LruCache<K, E>\n         {\n             throw new IllegalArgumentException();\n         }\n-        return cache.get( key );\n+\n+return cache.get( key );\n     }\n \n     public synchronized void clear()\n     {\n-        for ( Map.Entry<K, E> keEntry : cache.entrySet() )\n+        for ( Map.Entry<K,E> keEntry : cache.entrySet() )\n         {\n             elementCleaned( keEntry.getValue() );\n         }\n@@ -170,4 +172,4 @@ public class LruCache<K, E>\n     public void elementCleaned( E element )\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
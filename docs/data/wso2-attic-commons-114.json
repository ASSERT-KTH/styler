{
    "project_name": "wso2-attic-commons",
    "error_id": "114",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 179).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " *\n * @hibernate.class table=\"BPEL_MEX_PROPS\" lazy=\"true\"\n * @hibernate.query name=\"SELECT_MEX_PROPS_IDS_BY_INSTANCES\" query=\"select p.id from HMessageExchangeProperty p, HMessageExchange e where p.mex = e and e.instance in (:instances)\"\n */\n@SuppressWarnings(\"serial\")\npublic class HMessageExchangeProperty implements Serializable {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/114/HMessageExchangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/114/HMessageExchangeProperty.java\nindex f0e90ee9eae..2c501d54230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/114/HMessageExchangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/114/HMessageExchangeProperty.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.daohib.bpel.hobj;\n \n import java.io.Serializable;\n@@ -29,68 +30,68 @@ import java.io.Serializable;\n  */\n @SuppressWarnings(\"serial\")\n public class HMessageExchangeProperty implements Serializable {\n-    public final static String SELECT_MEX_PROPS_IDS_BY_INSTANCES = \"SELECT_MEX_PROPS_IDS_BY_INSTANCES\";\n+  public final static String SELECT_MEX_PROPS_IDS_BY_INSTANCES = \"SELECT_MEX_PROPS_IDS_BY_INSTANCES\";\n \n-    private HMessageExchange _mex;\n-    private String _name;\n-    private String _value;\n+  private HMessageExchange _mex;\n+  private String _name;\n+  private String _value;\n \n-    public HMessageExchangeProperty() {\n-    }\n+  public HMessageExchangeProperty() {\n+  }\n \n-    /**\n-     * @hibernate.id\n-     * @return\n-     */\n-    public HMessageExchangeProperty getKey() {\n-        return null;\n-    }\n+  /**\n+   * @return\n+   * @hibernate.id\n+   */\n+  public HMessageExchangeProperty getKey() {\n+    return null;\n+  }\n \n-    public void setKey(HMessageExchangeProperty property) {\n-    }\n+  public void setKey(HMessageExchangeProperty property) {\n+  }\n \n-    /**\n-     * @hibernate.many-to-one column=\"MEX\" insert=\"false\" update=\"false\"\n-     */\n-    public HMessageExchange getMex() {\n-        return _mex;\n-    }\n+  /**\n+   * @hibernate.many-to-one column=\"MEX\" insert=\"false\" update=\"false\"\n+   */\n+  public HMessageExchange getMex() {\n+    return _mex;\n+  }\n \n-    public void setMex(HMessageExchange mex) {\n-        _mex = mex;\n-    }\n+  public void setMex(HMessageExchange mex) {\n+    _mex = mex;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"NAME\" type=\"string\" length=\"8000\" insert=\"false\" update=\"false\"\n-     */\n-    public String getName() {\n-        return _name;\n-    }\n+  /**\n+   * @hibernate.property column=\"NAME\" type=\"string\" length=\"8000\" insert=\"false\" update=\"false\"\n+   */\n+  public String getName() {\n+    return _name;\n+  }\n \n-    public void setName(String name) {\n-        _name = name;\n-    }\n+  public void setName(String name) {\n+    _name = name;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"VALUE\" type=\"string\"  insert=\"false\" update=\"false\"\n-     */\n-    public String getValue() {\n-        return _value;\n-    }\n+  /**\n+   * @hibernate.property column=\"VALUE\" type=\"string\"  insert=\"false\" update=\"false\"\n+   */\n+  public String getValue() {\n+    return _value;\n+  }\n \n-    public void setValue(String value) {\n-        _value = value;\n-    }\n+  public void setValue(String value) {\n+    _value = value;\n+  }\n \n-    public boolean equals(Object another) {\n-        // fake implementation to suppress hibernate warning on key not hash-searchable;\n-        // actually HMessageExchangePropery is never retrieved by the id\n-        return super.equals(another);\n-    }\n+  public boolean equals(Object another) {\n+    // fake implementation to suppress hibernate warning on key not hash-searchable;\n+    // actually HMessageExchangePropery is never retrieved by the id\n+    return super.equals(another);\n+  }\n \n-    public int hashCode() {\n-        // fake implementation to suppress hibernate warning on key not hash-searchable\n-        // actually HMessageExchangePropery is never retrieved by the id\n-        return _mex.hashCode() * 29 + _name.hashCode() * 13;\n-    }\n+  public int hashCode() {\n+    // fake implementation to suppress hibernate warning on key not hash-searchable\n+    // actually HMessageExchangePropery is never retrieved by the id\n+    return _mex.hashCode() * 29 + _name.hashCode() * 13;\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/114/HMessageExchangeProperty.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/114/HMessageExchangeProperty.java\nindex f0e90ee9eae..2b7fa12eea7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/114/HMessageExchangeProperty.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/114/HMessageExchangeProperty.java\n@@ -93,4 +93,4 @@ public class HMessageExchangeProperty implements Serializable {\n         // actually HMessageExchangePropery is never retrieved by the id\n         return _mex.hashCode() * 29 + _name.hashCode() * 13;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1350",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..f36bb75a7f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..ac8d3f5cf7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -36,27 +37,26 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author jhoppesc\n  */\n public class AdapterPatientDiscoveryProxyNoOpImpl implements AdapterPatientDiscoveryProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyNoOpImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyNoOpImpl.class);\n \n-    /**\n-     * This no op implementation - it simply returns an empty object.\n-     *\n-     * @param body The message to be sent to the web service.\n-     * @param assertion The assertion information to go with the message.\n-     * @return The response from the web service.\n-     */\n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"1.0\")\n-    @Override\n-    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n+  /**\n+   * This no op implementation - it simply returns an empty object.\n+   *\n+   * @param body      The message to be sent to the web service.\n+   * @param assertion The assertion information to go with the message.\n+   * @return The response from the web service.\n+   */\n+  @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n+      afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n+      version = \"1.0\")\n+  @Override\n+  public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n \n-        LOG.debug(\"Entering AdapterPatientDiscoveryProxyNoOpImpl.respondingGatewayPRPAIN201305UV02\");\n-        return new PRPAIN201306UV02();\n-    }\n+    LOG.debug(\"Entering AdapterPatientDiscoveryProxyNoOpImpl.respondingGatewayPRPAIN201305UV02\");\n+    return new PRPAIN201306UV02();\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..965a396faa0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -50,13 +51,12 @@ public class AdapterPatientDiscoveryProxyNoOpImpl implements AdapterPatientDisco\n      * @param assertion The assertion information to go with the message.\n      * @return The response from the web service.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"1.0\")\n-    @Override\n+    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\", version = \"1.0\")\n+@Override\n     public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n \n         LOG.debug(\"Entering AdapterPatientDiscoveryProxyNoOpImpl.respondingGatewayPRPAIN201305UV02\");\n-        return new PRPAIN201306UV02();\n+\n+return new PRPAIN201306UV02();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..40b631fd8a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -39,6 +39,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author jhoppesc\n  */\n+\n+\n public class AdapterPatientDiscoveryProxyNoOpImpl implements AdapterPatientDiscoveryProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyNoOpImpl.class);\n@@ -50,13 +52,13 @@ public class AdapterPatientDiscoveryProxyNoOpImpl implements AdapterPatientDisco\n      * @param assertion The assertion information to go with the message.\n      * @return The response from the web service.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"1.0\")\n+\n+\n+    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\", version = \"1.0\")\n     @Override\n     public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n-\n         LOG.debug(\"Entering AdapterPatientDiscoveryProxyNoOpImpl.respondingGatewayPRPAIN201305UV02\");\n         return new PRPAIN201306UV02();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..514b90d1f9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n-\n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.patientdiscovery.aspect.PRPAIN201305UV02EventDescriptionBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\nindex d51c58a1a37..f36bb75a7f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1350/AdapterPatientDiscoveryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2027",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2027/CharReadableChunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2027/CharReadableChunker.java\nindex f4c0926e8a2..99539432884 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2027/CharReadableChunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2027/CharReadableChunker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -29,117 +30,117 @@ import org.neo4j.csv.reader.Source.Chunk;\n  */\n public abstract class CharReadableChunker implements Chunker\n {\n-    protected final CharReadable reader;\n-    protected final int chunkSize;\n-    protected volatile long position;\n-    private char[] backBuffer; // grows on demand\n-    private int backBufferCursor;\n+  protected final CharReadable reader;\n+  protected final int chunkSize;\n+  protected volatile long position;\n+  private char[] backBuffer; // grows on demand\n+  private int backBufferCursor;\n+\n+  public CharReadableChunker(CharReadable reader, int chunkSize)\n+  {\n+    this.reader = reader;\n+    this.chunkSize = chunkSize;\n+    this.backBuffer = new char[chunkSize >> 4];\n+  }\n+\n+  @Override\n+  public ChunkImpl newChunk()\n+  {\n+    return new ChunkImpl(new char[chunkSize]);\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    reader.close();\n+  }\n+\n+  @Override\n+  public long position()\n+  {\n+    return position;\n+  }\n+\n+  protected int fillFromBackBuffer(char[] into)\n+  {\n+    if (backBufferCursor > 0)\n+    {   // Read from and reset back buffer\n+      assert backBufferCursor < chunkSize;\n+      System.arraycopy(backBuffer, 0, into, 0, backBufferCursor);\n+      int result = backBufferCursor;\n+      backBufferCursor = 0;\n+      return result;\n+    }\n+    return 0;\n+  }\n+\n+  protected int storeInBackBuffer(char[] data, int offset, int length)\n+  {\n+    System.arraycopy(data, offset, backBuffer(length), backBufferCursor, length);\n+    backBufferCursor += length;\n+    return length;\n+  }\n+\n+  private char[] backBuffer(int length)\n+  {\n+    if (backBufferCursor + length > backBuffer.length)\n+    {\n+      backBuffer = Arrays.copyOf(backBuffer, backBufferCursor + length);\n+    }\n+    return backBuffer;\n+  }\n+\n+  public static class ChunkImpl implements Chunk\n+  {\n+    final char[] buffer;\n+    private int length;\n+    private String sourceDescription;\n \n-    public CharReadableChunker( CharReadable reader, int chunkSize )\n+    public ChunkImpl(char[] buffer)\n     {\n-        this.reader = reader;\n-        this.chunkSize = chunkSize;\n-        this.backBuffer = new char[chunkSize >> 4];\n+      this.buffer = buffer;\n     }\n \n-    @Override\n-    public ChunkImpl newChunk()\n+    public void initialize(int length, String sourceDescription)\n     {\n-        return new ChunkImpl( new char[chunkSize] );\n+      this.length = length;\n+      this.sourceDescription = sourceDescription;\n     }\n \n     @Override\n-    public void close() throws IOException\n+    public int startPosition()\n     {\n-        reader.close();\n+      return 0;\n     }\n \n     @Override\n-    public long position()\n+    public String sourceDescription()\n     {\n-        return position;\n+      return sourceDescription;\n     }\n \n-    protected int fillFromBackBuffer( char[] into )\n+    @Override\n+    public int maxFieldSize()\n     {\n-        if ( backBufferCursor > 0 )\n-        {   // Read from and reset back buffer\n-            assert backBufferCursor < chunkSize;\n-            System.arraycopy( backBuffer, 0, into, 0, backBufferCursor );\n-            int result = backBufferCursor;\n-            backBufferCursor = 0;\n-            return result;\n-        }\n-        return 0;\n+      return buffer.length;\n     }\n \n-    protected int storeInBackBuffer( char[] data, int offset, int length )\n+    @Override\n+    public int length()\n     {\n-        System.arraycopy( data, offset, backBuffer( length ), backBufferCursor, length );\n-        backBufferCursor += length;\n-        return length;\n+      return length;\n     }\n \n-    private char[] backBuffer( int length )\n+    @Override\n+    public char[] data()\n     {\n-        if ( backBufferCursor + length > backBuffer.length )\n-        {\n-            backBuffer = Arrays.copyOf( backBuffer, backBufferCursor + length );\n-        }\n-        return backBuffer;\n+      return buffer;\n     }\n \n-    public static class ChunkImpl implements Chunk\n+    @Override\n+    public int backPosition()\n     {\n-        final char[] buffer;\n-        private int length;\n-        private String sourceDescription;\n-\n-        public ChunkImpl( char[] buffer )\n-        {\n-            this.buffer = buffer;\n-        }\n-\n-        public void initialize( int length, String sourceDescription )\n-        {\n-            this.length = length;\n-            this.sourceDescription = sourceDescription;\n-        }\n-\n-        @Override\n-        public int startPosition()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public String sourceDescription()\n-        {\n-            return sourceDescription;\n-        }\n-\n-        @Override\n-        public int maxFieldSize()\n-        {\n-            return buffer.length;\n-        }\n-\n-        @Override\n-        public int length()\n-        {\n-            return length;\n-        }\n-\n-        @Override\n-        public char[] data()\n-        {\n-            return buffer;\n-        }\n-\n-        @Override\n-        public int backPosition()\n-        {\n-            return 0;\n-        }\n+      return 0;\n     }\n+  }\n }\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2027/CharReadableChunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2027/CharReadableChunker.java\nindex f4c0926e8a2..4ef67fcd03b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2027/CharReadableChunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2027/CharReadableChunker.java\n@@ -63,7 +63,8 @@ public abstract class CharReadableChunker implements Chunker\n     protected int fillFromBackBuffer( char[] into )\n     {\n         if ( backBufferCursor > 0 )\n-        {   // Read from and reset back buffer\n+        {\n+    // Read from and reset back buffer\n             assert backBufferCursor < chunkSize;\n             System.arraycopy( backBuffer, 0, into, 0, backBufferCursor );\n             int result = backBufferCursor;\n@@ -82,11 +83,12 @@ public abstract class CharReadableChunker implements Chunker\n \n     private char[] backBuffer( int length )\n     {\n-        if ( backBufferCursor + length > backBuffer.length )\n+        if ( backBufferCursor + length> backBuffer.length )\n         {\n             backBuffer = Arrays.copyOf( backBuffer, backBufferCursor + length );\n         }\n-        return backBuffer;\n+\n+return backBuffer;\n     }\n \n     public static class ChunkImpl implements Chunk\n@@ -142,4 +144,4 @@ public abstract class CharReadableChunker implements Chunker\n             return 0;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
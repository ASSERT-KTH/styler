{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1799",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1799/PlaceboTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1799/PlaceboTransaction.java\nindex ff734ba410e..d04b0ca0a70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1799/PlaceboTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1799/PlaceboTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.Optional;\n@@ -29,75 +30,75 @@ import org.neo4j.kernel.api.exceptions.Status;\n \n public class PlaceboTransaction implements InternalTransaction\n {\n-    private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n-    private final KernelTransaction currentTransaction;\n-    private boolean success;\n+  private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n+  private final KernelTransaction currentTransaction;\n+  private boolean success;\n \n-    public PlaceboTransaction( KernelTransaction currentTransaction )\n-    {\n-        this.currentTransaction = currentTransaction;\n-    }\n+  public PlaceboTransaction(KernelTransaction currentTransaction)\n+  {\n+    this.currentTransaction = currentTransaction;\n+  }\n \n-    @Override\n-    public void terminate()\n-    {\n-        currentTransaction.markForTermination( Status.Transaction.Terminated );\n-    }\n+  @Override\n+  public void terminate()\n+  {\n+    currentTransaction.markForTermination(Status.Transaction.Terminated);\n+  }\n \n-    @Override\n-    public void failure()\n-    {\n-        currentTransaction.failure();\n-    }\n+  @Override\n+  public void failure()\n+  {\n+    currentTransaction.failure();\n+  }\n \n-    @Override\n-    public void success()\n-    {\n-        success = true;\n-    }\n+  @Override\n+  public void success()\n+  {\n+    success = true;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    if (!success)\n     {\n-        if ( !success )\n-        {\n-            currentTransaction.failure();\n-        }\n+      currentTransaction.failure();\n     }\n+  }\n \n-    @Override\n-    public Lock acquireWriteLock( PropertyContainer entity )\n-    {\n-        return locker.exclusiveLock( currentTransaction, entity );\n-    }\n+  @Override\n+  public Lock acquireWriteLock(PropertyContainer entity)\n+  {\n+    return locker.exclusiveLock(currentTransaction, entity);\n+  }\n \n-    @Override\n-    public Lock acquireReadLock( PropertyContainer entity )\n-    {\n-        return locker.sharedLock( currentTransaction, entity );\n-    }\n+  @Override\n+  public Lock acquireReadLock(PropertyContainer entity)\n+  {\n+    return locker.sharedLock(currentTransaction, entity);\n+  }\n \n-    @Override\n-    public KernelTransaction.Type transactionType()\n-    {\n-        return currentTransaction.transactionType();\n-    }\n+  @Override\n+  public KernelTransaction.Type transactionType()\n+  {\n+    return currentTransaction.transactionType();\n+  }\n \n-    @Override\n-    public SecurityContext securityContext()\n-    {\n-        return currentTransaction.securityContext();\n-    }\n+  @Override\n+  public SecurityContext securityContext()\n+  {\n+    return currentTransaction.securityContext();\n+  }\n \n-    @Override\n-    public KernelTransaction.Revertable overrideWith( SecurityContext context )\n-    {\n-        return currentTransaction.overrideWith( context );\n-    }\n+  @Override\n+  public KernelTransaction.Revertable overrideWith(SecurityContext context)\n+  {\n+    return currentTransaction.overrideWith(context);\n+  }\n \n-    @Override\n-    public Optional<Status> terminationReason()\n-    {\n-        return currentTransaction.getReasonIfTerminated();\n-    }\n+  @Override\n+  public Optional<Status> terminationReason()\n+  {\n+    return currentTransaction.getReasonIfTerminated();\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1799/PlaceboTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1799/PlaceboTransaction.java\nindex ff734ba410e..149748e7bfa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1799/PlaceboTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1799/PlaceboTransaction.java\n@@ -100,4 +100,4 @@ public class PlaceboTransaction implements InternalTransaction\n     {\n         return currentTransaction.getReasonIfTerminated();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
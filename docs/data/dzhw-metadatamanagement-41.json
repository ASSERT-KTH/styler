{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "70",
                "severity": "error",
                "message": "'}' at column 70 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/41/ValidSemanticVersionValidator.java\nindex 4e4d0d5c4d6..2e43444e627 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/41/ValidSemanticVersionValidator.java\n@@ -16,32 +16,33 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n /**\n  * Ensure that a {@link Release} contains a valid semantic version\n  * which can only be increased.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n+public class ValidSemanticVersionValidator implements\n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n+  public void initialize(ValidSemanticVersion constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n-      ConstraintValidatorContext context) {\n+  public boolean isValid(DataAcquisitionProject project,\n+                         ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n     }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/41/ValidSemanticVersionValidator.java\nindex 4e4d0d5c4d6..d86feeeacf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/41/ValidSemanticVersionValidator.java\n@@ -21,7 +21,7 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  */\n public class ValidSemanticVersionValidator implements \n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -66,4 +66,4 @@ public class ValidSemanticVersionValidator implements\n       return false;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/41/ValidSemanticVersionValidator.java\nindex 4e4d0d5c4d6..1da447e6ba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/41/ValidSemanticVersionValidator.java\n@@ -2,13 +2,10 @@ package eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.StringUtils;\n-\n import com.github.zafarkhaja.semver.ParseException;\n import com.github.zafarkhaja.semver.Version;\n-\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.DataAcquisitionProject;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.Release;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionProjectVersionsService;\n@@ -19,9 +16,10 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n-    ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n+\n+public class ValidSemanticVersionValidator implements ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -30,8 +28,11 @@ public class ValidSemanticVersionValidator implements\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n+  public void initialize(ValidSemanticVersion constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -39,9 +40,11 @@ public class ValidSemanticVersionValidator implements\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n-      ConstraintValidatorContext context) {\n+  public boolean isValid(DataAcquisitionProject project,\n+    ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n     }\n@@ -66,4 +69,4 @@ public class ValidSemanticVersionValidator implements\n       return false;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/41/ValidSemanticVersionValidator.java\nindex 4e4d0d5c4d6..384a7c22902 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/41/ValidSemanticVersionValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/41/ValidSemanticVersionValidator.java\n@@ -32,7 +32,6 @@ public class ValidSemanticVersionValidator implements\n    */\n   @Override\n   public void initialize(ValidSemanticVersion constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
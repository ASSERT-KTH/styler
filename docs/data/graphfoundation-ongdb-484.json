{
    "project_name": "graphfoundation-ongdb",
    "error_id": "484",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/484/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/484/Log.java\nindex 0d5212adf0b..1706bfc2d45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/484/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/484/Log.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging;\n \n import java.util.function.Consumer;\n@@ -28,132 +29,132 @@ import javax.annotation.Nullable;\n  */\n public interface Log\n {\n-    /**\n-     * @return true if the current log level enables debug logging\n-     */\n-    boolean isDebugEnabled();\n-\n-    /**\n-     * @return a {@link Logger} instance for writing debug messages\n-     */\n-    @Nonnull\n-    Logger debugLogger();\n-\n-    /**\n-     * Shorthand for {@code debugLogger().log( message )}\n-     *\n-     * @param message The message to be written\n-     */\n-    void debug( @Nonnull String message );\n-\n-    /**\n-     * Shorthand for {@code debugLogger().log( message, throwable )}\n-     *\n-     * @param message   The message to be written\n-     * @param throwable An exception that will also be written\n-     */\n-    void debug( @Nonnull String message, @Nonnull Throwable throwable );\n-\n-    /**\n-     * Shorthand for {@code debugLogger().log( format, arguments )}\n-     *\n-     * @param format    A string format for writing a message\n-     * @param arguments Arguments to substitute into the message according to the format\n-     */\n-    void debug( @Nonnull String format, @Nullable Object... arguments );\n-\n-    /**\n-     * @return a {@link Logger} instance for writing info messages\n-     */\n-    @Nonnull\n-    Logger infoLogger();\n-\n-    /**\n-     * Shorthand for {@code infoLogger().log( message )}\n-     *\n-     * @param message The message to be written\n-     */\n-    void info( @Nonnull String message );\n-\n-    /**\n-     * Shorthand for {@code infoLogger().log( message, throwable )}\n-     *\n-     * @param message   The message to be written\n-     * @param throwable An exception that will also be written\n-     */\n-    void info( @Nonnull String message, @Nonnull Throwable throwable );\n-\n-    /**\n-     * Shorthand for {@code infoLogger().log( format, arguments )}\n-     *\n-     * @param format    A string format for writing a message\n-     * @param arguments Arguments to substitute into the message according to the format\n-     */\n-    void info( @Nonnull String format, @Nullable Object... arguments );\n-\n-    /**\n-     * @return a {@link Logger} instance for writing warn messages\n-     */\n-    @Nonnull\n-    Logger warnLogger();\n-\n-    /**\n-     * Shorthand for {@code warnLogger().log( message )}\n-     *\n-     * @param message The message to be written\n-     */\n-    void warn( @Nonnull String message );\n-\n-    /**\n-     * Shorthand for {@code warnLogger().log( message, throwable )}\n-     *\n-     * @param message   The message to be written\n-     * @param throwable An exception that will also be written\n-     */\n-    void warn( @Nonnull String message, @Nonnull Throwable throwable );\n-\n-    /**\n-     * Shorthand for {@code warnLogger().log( format, arguments )}\n-     *\n-     * @param format    A string format for writing a message\n-     * @param arguments Arguments to substitute into the message according to the format\n-     */\n-    void warn( @Nonnull String format, @Nullable Object... arguments );\n-\n-    /**\n-     * @return a {@link Logger} instance for writing error messages\n-     */\n-    @Nonnull\n-    Logger errorLogger();\n-\n-    /**\n-     * Shorthand for {@code errorLogger().log( message )}\n-     *\n-     * @param message The message to be written\n-     */\n-    void error( @Nonnull String message );\n-\n-    /**\n-     * Shorthand for {@code errorLogger().log( message, throwable )}\n-     *\n-     * @param message   The message to be written\n-     * @param throwable An exception that will also be written\n-     */\n-    void error( @Nonnull String message, @Nonnull Throwable throwable );\n-\n-    /**\n-     * Shorthand for {@code errorLogger().log( format, arguments )}\n-     *\n-     * @param format    A string format for writing a message\n-     * @param arguments Arguments to substitute into the message according to the {@code format}\n-     */\n-    void error( @Nonnull String format, @Nullable Object... arguments );\n-\n-    /**\n-     * Used to temporarily log several messages in bulk. The implementation may choose to\n-     * disable flushing, and may also block other operations until the bulk update is completed.\n-     *\n-     * @param consumer A consumer for the bulk {@link Log}\n-     */\n-    void bulk( @Nonnull Consumer<Log> consumer );\n+  /**\n+   * @return true if the current log level enables debug logging\n+   */\n+  boolean isDebugEnabled();\n+\n+  /**\n+   * @return a {@link Logger} instance for writing debug messages\n+   */\n+  @Nonnull\n+  Logger debugLogger();\n+\n+  /**\n+   * Shorthand for {@code debugLogger().log( message )}\n+   *\n+   * @param message The message to be written\n+   */\n+  void debug(@Nonnull String message);\n+\n+  /**\n+   * Shorthand for {@code debugLogger().log( message, throwable )}\n+   *\n+   * @param message   The message to be written\n+   * @param throwable An exception that will also be written\n+   */\n+  void debug(@Nonnull String message, @Nonnull Throwable throwable);\n+\n+  /**\n+   * Shorthand for {@code debugLogger().log( format, arguments )}\n+   *\n+   * @param format    A string format for writing a message\n+   * @param arguments Arguments to substitute into the message according to the format\n+   */\n+  void debug(@Nonnull String format, @Nullable Object... arguments);\n+\n+  /**\n+   * @return a {@link Logger} instance for writing info messages\n+   */\n+  @Nonnull\n+  Logger infoLogger();\n+\n+  /**\n+   * Shorthand for {@code infoLogger().log( message )}\n+   *\n+   * @param message The message to be written\n+   */\n+  void info(@Nonnull String message);\n+\n+  /**\n+   * Shorthand for {@code infoLogger().log( message, throwable )}\n+   *\n+   * @param message   The message to be written\n+   * @param throwable An exception that will also be written\n+   */\n+  void info(@Nonnull String message, @Nonnull Throwable throwable);\n+\n+  /**\n+   * Shorthand for {@code infoLogger().log( format, arguments )}\n+   *\n+   * @param format    A string format for writing a message\n+   * @param arguments Arguments to substitute into the message according to the format\n+   */\n+  void info(@Nonnull String format, @Nullable Object... arguments);\n+\n+  /**\n+   * @return a {@link Logger} instance for writing warn messages\n+   */\n+  @Nonnull\n+  Logger warnLogger();\n+\n+  /**\n+   * Shorthand for {@code warnLogger().log( message )}\n+   *\n+   * @param message The message to be written\n+   */\n+  void warn(@Nonnull String message);\n+\n+  /**\n+   * Shorthand for {@code warnLogger().log( message, throwable )}\n+   *\n+   * @param message   The message to be written\n+   * @param throwable An exception that will also be written\n+   */\n+  void warn(@Nonnull String message, @Nonnull Throwable throwable);\n+\n+  /**\n+   * Shorthand for {@code warnLogger().log( format, arguments )}\n+   *\n+   * @param format    A string format for writing a message\n+   * @param arguments Arguments to substitute into the message according to the format\n+   */\n+  void warn(@Nonnull String format, @Nullable Object... arguments);\n+\n+  /**\n+   * @return a {@link Logger} instance for writing error messages\n+   */\n+  @Nonnull\n+  Logger errorLogger();\n+\n+  /**\n+   * Shorthand for {@code errorLogger().log( message )}\n+   *\n+   * @param message The message to be written\n+   */\n+  void error(@Nonnull String message);\n+\n+  /**\n+   * Shorthand for {@code errorLogger().log( message, throwable )}\n+   *\n+   * @param message   The message to be written\n+   * @param throwable An exception that will also be written\n+   */\n+  void error(@Nonnull String message, @Nonnull Throwable throwable);\n+\n+  /**\n+   * Shorthand for {@code errorLogger().log( format, arguments )}\n+   *\n+   * @param format    A string format for writing a message\n+   * @param arguments Arguments to substitute into the message according to the {@code format}\n+   */\n+  void error(@Nonnull String format, @Nullable Object... arguments);\n+\n+  /**\n+   * Used to temporarily log several messages in bulk. The implementation may choose to\n+   * disable flushing, and may also block other operations until the bulk update is completed.\n+   *\n+   * @param consumer A consumer for the bulk {@link Log}\n+   */\n+  void bulk(@Nonnull Consumer<Log> consumer);\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/484/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/484/Log.java\nindex 0d5212adf0b..38d2f0dc446 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/484/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/484/Log.java\n@@ -156,4 +156,4 @@ public interface Log\n      * @param consumer A consumer for the bulk {@link Log}\n      */\n     void bulk( @Nonnull Consumer<Log> consumer );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3389",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3389/SegmentedRaftLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3389/SegmentedRaftLog.java\nindex 0ef4171ca7d..722fbb40d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3389/SegmentedRaftLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3389/SegmentedRaftLog.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.File;\n@@ -57,231 +58,230 @@ import static java.util.concurrent.TimeUnit.MINUTES;\n  */\n public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n {\n-    private final int READER_POOL_MAX_AGE = 1; // minutes\n-\n-    private final FileSystemAbstraction fileSystem;\n-    private final File directory;\n-    private final long rotateAtSize;\n-    private final ChannelMarshal<ReplicatedContent> contentMarshal;\n-    private final FileNames fileNames;\n-    private final JobScheduler scheduler;\n-    private final Log log;\n-\n-    private boolean needsRecovery;\n-    private final LogProvider logProvider;\n-    private final SegmentedRaftLogPruner pruner;\n-\n-    private State state;\n-    private final ReaderPool readerPool;\n-    private JobScheduler.JobHandle readerPoolPruner;\n-\n-    public SegmentedRaftLog( FileSystemAbstraction fileSystem, File directory, long rotateAtSize,\n-            ChannelMarshal<ReplicatedContent> contentMarshal, LogProvider logProvider, int readerPoolSize, Clock clock,\n-            JobScheduler scheduler, CoreLogPruningStrategy pruningStrategy )\n+  private final int READER_POOL_MAX_AGE = 1; // minutes\n+\n+  private final FileSystemAbstraction fileSystem;\n+  private final File directory;\n+  private final long rotateAtSize;\n+  private final ChannelMarshal<ReplicatedContent> contentMarshal;\n+  private final FileNames fileNames;\n+  private final JobScheduler scheduler;\n+  private final Log log;\n+\n+  private boolean needsRecovery;\n+  private final LogProvider logProvider;\n+  private final SegmentedRaftLogPruner pruner;\n+\n+  private State state;\n+  private final ReaderPool readerPool;\n+  private JobScheduler.JobHandle readerPoolPruner;\n+\n+  public SegmentedRaftLog(FileSystemAbstraction fileSystem, File directory, long rotateAtSize,\n+                          ChannelMarshal<ReplicatedContent> contentMarshal, LogProvider logProvider, int readerPoolSize, Clock clock,\n+                          JobScheduler scheduler, CoreLogPruningStrategy pruningStrategy)\n+  {\n+    this.fileSystem = fileSystem;\n+    this.directory = directory;\n+    this.rotateAtSize = rotateAtSize;\n+    this.contentMarshal = contentMarshal;\n+    this.logProvider = logProvider;\n+    this.scheduler = scheduler;\n+\n+    this.fileNames = new FileNames(directory);\n+    this.readerPool = new ReaderPool(readerPoolSize, logProvider, fileNames, fileSystem, clock);\n+    this.pruner = new SegmentedRaftLogPruner(pruningStrategy);\n+    this.log = logProvider.getLog(getClass());\n+  }\n+\n+  @Override\n+  public synchronized void start() throws IOException, DamagedLogStorageException, DisposedException\n+  {\n+    if (!directory.exists() && !directory.mkdirs())\n     {\n-        this.fileSystem = fileSystem;\n-        this.directory = directory;\n-        this.rotateAtSize = rotateAtSize;\n-        this.contentMarshal = contentMarshal;\n-        this.logProvider = logProvider;\n-        this.scheduler = scheduler;\n-\n-        this.fileNames = new FileNames( directory );\n-        this.readerPool = new ReaderPool( readerPoolSize, logProvider, fileNames, fileSystem, clock );\n-        this.pruner = new SegmentedRaftLogPruner( pruningStrategy );\n-        this.log = logProvider.getLog( getClass() );\n+      throw new IOException(\"Could not create: \" + directory);\n     }\n \n-    @Override\n-    public synchronized void start() throws IOException, DamagedLogStorageException, DisposedException\n+    state = new RecoveryProtocol(fileSystem, fileNames, readerPool, contentMarshal, logProvider).run();\n+    log.info(\"log started with recovered state %s\", state);\n+    /*\n+     * Recovery guarantees that once complete the header of the last raft log file is intact. No such guarantee\n+     * is made for the last log entry in the last file (or any of the files for that matter). To complete\n+     * recovery we need to rotate away the last log file, so that any incomplete entries at the end of the last\n+     * do not have entries appended after them, which would result in unaligned (and therefore wrong) reads.\n+     * As an obvious optimization, we don't need to rotate if the file contains only the header, such as is\n+     * the case of a newly created log.\n+     */\n+    if (state.segments.last().size() > SegmentHeader.SIZE)\n     {\n-        if ( !directory.exists() && !directory.mkdirs() )\n-        {\n-            throw new IOException( \"Could not create: \" + directory );\n-        }\n-\n-        state = new RecoveryProtocol( fileSystem, fileNames, readerPool, contentMarshal, logProvider ).run();\n-        log.info( \"log started with recovered state %s\", state );\n-        /*\n-         * Recovery guarantees that once complete the header of the last raft log file is intact. No such guarantee\n-         * is made for the last log entry in the last file (or any of the files for that matter). To complete\n-         * recovery we need to rotate away the last log file, so that any incomplete entries at the end of the last\n-         * do not have entries appended after them, which would result in unaligned (and therefore wrong) reads.\n-         * As an obvious optimization, we don't need to rotate if the file contains only the header, such as is\n-         * the case of a newly created log.\n-         */\n-        if ( state.segments.last().size() > SegmentHeader.SIZE )\n-        {\n-            rotateSegment( state.appendIndex, state.appendIndex, state.terms.latest() );\n-        }\n-\n-        readerPoolPruner = scheduler.scheduleRecurring( new JobScheduler.Group( \"reader-pool-pruner\" ),\n-                () -> readerPool.prune( READER_POOL_MAX_AGE, MINUTES ), READER_POOL_MAX_AGE, READER_POOL_MAX_AGE, MINUTES );\n+      rotateSegment(state.appendIndex, state.appendIndex, state.terms.latest());\n     }\n \n-    @Override\n-    public synchronized void stop() throws Throwable\n-    {\n-        readerPoolPruner.cancel( false );\n-        readerPool.close();\n-        state.segments.close();\n-    }\n+    readerPoolPruner = scheduler.scheduleRecurring(new JobScheduler.Group(\"reader-pool-pruner\"),\n+        () -> readerPool.prune(READER_POOL_MAX_AGE, MINUTES), READER_POOL_MAX_AGE, READER_POOL_MAX_AGE, MINUTES);\n+  }\n \n-    @Override\n-    public synchronized long append( RaftLogEntry... entries ) throws IOException\n-    {\n-        ensureOk();\n-\n-        try\n-        {\n-            for ( RaftLogEntry entry : entries )\n-            {\n-                state.appendIndex++;\n-                state.terms.append( state.appendIndex, entry.term() );\n-                state.segments.last().write( state.appendIndex, entry );\n-            }\n-            state.segments.last().flush();\n-        }\n-        catch ( Throwable e )\n-        {\n-            needsRecovery = true;\n-            throw e;\n-        }\n-\n-        if ( state.segments.last().position() >= rotateAtSize )\n-        {\n-            rotateSegment( state.appendIndex, state.appendIndex, state.terms.latest() );\n-        }\n-\n-        return state.appendIndex;\n-    }\n+  @Override\n+  public synchronized void stop() throws Throwable\n+  {\n+    readerPoolPruner.cancel(false);\n+    readerPool.close();\n+    state.segments.close();\n+  }\n \n-    private void ensureOk()\n-    {\n-        if ( needsRecovery )\n-        {\n-            throw new IllegalStateException( \"Raft log requires recovery\" );\n-        }\n-    }\n+  @Override\n+  public synchronized long append(RaftLogEntry... entries) throws IOException\n+  {\n+    ensureOk();\n \n-    @Override\n-    public synchronized void truncate( long fromIndex ) throws IOException\n+    try\n+    {\n+      for (RaftLogEntry entry : entries)\n+      {\n+        state.appendIndex++;\n+        state.terms.append(state.appendIndex, entry.term());\n+        state.segments.last().write(state.appendIndex, entry);\n+      }\n+      state.segments.last().flush();\n+    } catch (Throwable e)\n     {\n-        if ( state.appendIndex < fromIndex )\n-        {\n-            throw new IllegalArgumentException( \"Cannot truncate at index \" + fromIndex + \" when append index is \" +\n-                                                state.appendIndex );\n-        }\n-\n-        long newAppendIndex = fromIndex - 1;\n-        long newTerm = readEntryTerm( newAppendIndex );\n-        truncateSegment( state.appendIndex, newAppendIndex, newTerm );\n-\n-        state.appendIndex = newAppendIndex;\n-        state.terms.truncate( fromIndex );\n+      needsRecovery = true;\n+      throw e;\n     }\n \n-    private void rotateSegment( long prevFileLastIndex, long prevIndex, long prevTerm ) throws IOException\n+    if (state.segments.last().position() >= rotateAtSize)\n     {\n-        state.segments.last().closeWriter();\n-        state.segments.rotate( prevFileLastIndex, prevIndex, prevTerm );\n+      rotateSegment(state.appendIndex, state.appendIndex, state.terms.latest());\n     }\n \n-    private void truncateSegment( long prevFileLastIndex, long prevIndex, long prevTerm ) throws IOException\n+    return state.appendIndex;\n+  }\n+\n+  private void ensureOk()\n+  {\n+    if (needsRecovery)\n     {\n-        state.segments.last().closeWriter();\n-        state.segments.truncate( prevFileLastIndex, prevIndex, prevTerm );\n+      throw new IllegalStateException(\"Raft log requires recovery\");\n     }\n+  }\n \n-    private void skipSegment( long prevFileLastIndex, long prevIndex, long prevTerm ) throws IOException\n+  @Override\n+  public synchronized void truncate(long fromIndex) throws IOException\n+  {\n+    if (state.appendIndex < fromIndex)\n     {\n-        state.segments.last().closeWriter();\n-        state.segments.skip( prevFileLastIndex, prevIndex, prevTerm );\n+      throw new IllegalArgumentException(\"Cannot truncate at index \" + fromIndex + \" when append index is \" +\n+          state.appendIndex);\n     }\n \n-    @Override\n-    public long appendIndex()\n+    long newAppendIndex = fromIndex - 1;\n+    long newTerm = readEntryTerm(newAppendIndex);\n+    truncateSegment(state.appendIndex, newAppendIndex, newTerm);\n+\n+    state.appendIndex = newAppendIndex;\n+    state.terms.truncate(fromIndex);\n+  }\n+\n+  private void rotateSegment(long prevFileLastIndex, long prevIndex, long prevTerm) throws IOException\n+  {\n+    state.segments.last().closeWriter();\n+    state.segments.rotate(prevFileLastIndex, prevIndex, prevTerm);\n+  }\n+\n+  private void truncateSegment(long prevFileLastIndex, long prevIndex, long prevTerm) throws IOException\n+  {\n+    state.segments.last().closeWriter();\n+    state.segments.truncate(prevFileLastIndex, prevIndex, prevTerm);\n+  }\n+\n+  private void skipSegment(long prevFileLastIndex, long prevIndex, long prevTerm) throws IOException\n+  {\n+    state.segments.last().closeWriter();\n+    state.segments.skip(prevFileLastIndex, prevIndex, prevTerm);\n+  }\n+\n+  @Override\n+  public long appendIndex()\n+  {\n+    return state.appendIndex;\n+  }\n+\n+  @Override\n+  public long prevIndex()\n+  {\n+    return state.prevIndex;\n+  }\n+\n+  @Override\n+  public RaftLogCursor getEntryCursor(long fromIndex)\n+  {\n+    final IOCursor<EntryRecord> inner = new EntryCursor(state.segments, fromIndex);\n+    return new SegmentedRaftLogCursor(fromIndex, inner);\n+  }\n+\n+  @Override\n+  public synchronized long skip(long newIndex, long newTerm) throws IOException\n+  {\n+    log.info(\"Skipping from {index: %d, term: %d} to {index: %d, term: %d}\",\n+        state.appendIndex, state.terms.latest(), newIndex, newTerm);\n+\n+    if (state.appendIndex < newIndex)\n     {\n-        return state.appendIndex;\n+      skipSegment(state.appendIndex, newIndex, newTerm);\n+      state.terms.skip(newIndex, newTerm);\n+\n+      state.prevIndex = newIndex;\n+      state.prevTerm = newTerm;\n+      state.appendIndex = newIndex;\n     }\n \n-    @Override\n-    public long prevIndex()\n+    return state.appendIndex;\n+  }\n+\n+  private RaftLogEntry readLogEntry(long logIndex) throws IOException\n+  {\n+    try (IOCursor<EntryRecord> cursor = new EntryCursor(state.segments, logIndex))\n     {\n-        return state.prevIndex;\n+      return cursor.next() ? cursor.get().logEntry() : null;\n     }\n+  }\n \n-    @Override\n-    public RaftLogCursor getEntryCursor( long fromIndex )\n+  @Override\n+  public long readEntryTerm(long logIndex) throws IOException\n+  {\n+    if (logIndex > state.appendIndex)\n     {\n-        final IOCursor<EntryRecord> inner = new EntryCursor( state.segments, fromIndex );\n-        return new SegmentedRaftLogCursor( fromIndex, inner );\n+      return -1;\n     }\n-\n-    @Override\n-    public synchronized long skip( long newIndex, long newTerm ) throws IOException\n+    long term = state.terms.get(logIndex);\n+    if (term == -1 && logIndex >= state.prevIndex)\n     {\n-        log.info( \"Skipping from {index: %d, term: %d} to {index: %d, term: %d}\",\n-                state.appendIndex, state.terms.latest(), newIndex, newTerm );\n+      RaftLogEntry entry = readLogEntry(logIndex);\n+      term = (entry != null) ? entry.term() : -1;\n+    }\n+    return term;\n+  }\n \n-        if ( state.appendIndex < newIndex )\n-        {\n-            skipSegment( state.appendIndex, newIndex, newTerm );\n-            state.terms.skip( newIndex, newTerm );\n+  @Override\n+  public long prune(long safeIndex)\n+  {\n+    long pruneIndex = pruner.getIndexToPruneFrom(safeIndex, state.segments);\n+    SegmentFile oldestNotDisposed = state.segments.prune(pruneIndex);\n \n-            state.prevIndex = newIndex;\n-            state.prevTerm = newTerm;\n-            state.appendIndex = newIndex;\n-        }\n+    long newPrevIndex = oldestNotDisposed.header().prevIndex();\n+    long newPrevTerm = oldestNotDisposed.header().prevTerm();\n \n-        return state.appendIndex;\n-    }\n-\n-    private RaftLogEntry readLogEntry( long logIndex ) throws IOException\n+    if (newPrevIndex > state.prevIndex)\n     {\n-        try ( IOCursor<EntryRecord> cursor = new EntryCursor( state.segments, logIndex ) )\n-        {\n-            return cursor.next() ? cursor.get().logEntry() : null;\n-        }\n+      state.prevIndex = newPrevIndex;\n     }\n \n-    @Override\n-    public long readEntryTerm( long logIndex ) throws IOException\n+    if (newPrevTerm > state.prevTerm)\n     {\n-        if ( logIndex > state.appendIndex )\n-        {\n-            return -1;\n-        }\n-        long term = state.terms.get( logIndex );\n-        if ( term == -1 && logIndex >= state.prevIndex )\n-        {\n-            RaftLogEntry entry = readLogEntry( logIndex );\n-            term = (entry != null) ? entry.term() : -1;\n-        }\n-        return term;\n+      state.prevTerm = newPrevTerm;\n     }\n \n-    @Override\n-    public long prune( long safeIndex )\n-    {\n-        long pruneIndex = pruner.getIndexToPruneFrom( safeIndex, state.segments );\n-        SegmentFile oldestNotDisposed = state.segments.prune( pruneIndex );\n-\n-        long newPrevIndex = oldestNotDisposed.header().prevIndex();\n-        long newPrevTerm = oldestNotDisposed.header().prevTerm();\n-\n-        if ( newPrevIndex > state.prevIndex )\n-        {\n-            state.prevIndex = newPrevIndex;\n-        }\n-\n-        if ( newPrevTerm > state.prevTerm )\n-        {\n-            state.prevTerm = newPrevTerm;\n-        }\n+    state.terms.prune(state.prevIndex);\n \n-        state.terms.prune( state.prevIndex );\n-\n-        return state.prevIndex;\n-    }\n+    return state.prevIndex;\n+  }\n }\n",
            "diff_size": 298
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "245",
                    "column": "22",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "267",
                    "column": "18",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "272",
                    "column": "25",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3389/SegmentedRaftLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3389/SegmentedRaftLog.java\nindex 0ef4171ca7d..da8ecdc23de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3389/SegmentedRaftLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3389/SegmentedRaftLog.java\n@@ -75,8 +75,7 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n     private final ReaderPool readerPool;\n     private JobScheduler.JobHandle readerPoolPruner;\n \n-    public SegmentedRaftLog( FileSystemAbstraction fileSystem, File directory, long rotateAtSize,\n-            ChannelMarshal<ReplicatedContent> contentMarshal, LogProvider logProvider, int readerPoolSize, Clock clock,\n+    public SegmentedRaftLog( FileSystemAbstraction fileSystem, File directory, long rotateAtSize, ChannelMarshal<ReplicatedContent> contentMarshal, LogProvider logProvider, int readerPoolSize, Clock clock,\n             JobScheduler scheduler, CoreLogPruningStrategy pruningStrategy )\n     {\n         this.fileSystem = fileSystem;\n@@ -85,8 +84,7 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n         this.contentMarshal = contentMarshal;\n         this.logProvider = logProvider;\n         this.scheduler = scheduler;\n-\n-        this.fileNames = new FileNames( directory );\n+this.fileNames = new FileNames( directory );\n         this.readerPool = new ReaderPool( readerPoolSize, logProvider, fileNames, fileSystem, clock );\n         this.pruner = new SegmentedRaftLogPruner( pruningStrategy );\n         this.log = logProvider.getLog( getClass() );\n@@ -169,15 +167,13 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n     {\n         if ( state.appendIndex < fromIndex )\n         {\n-            throw new IllegalArgumentException( \"Cannot truncate at index \" + fromIndex + \" when append index is \" +\n-                                                state.appendIndex );\n-        }\n+            throw new IllegalArgumentException( \"Cannot truncate at index \" + fromIndex + \" when append index is \" + state.appendIndex );\n+    }\n \n         long newAppendIndex = fromIndex - 1;\n         long newTerm = readEntryTerm( newAppendIndex );\n         truncateSegment( state.appendIndex, newAppendIndex, newTerm );\n-\n-        state.appendIndex = newAppendIndex;\n+state.appendIndex = newAppendIndex;\n         state.terms.truncate( fromIndex );\n     }\n \n@@ -223,13 +219,11 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n     {\n         log.info( \"Skipping from {index: %d, term: %d} to {index: %d, term: %d}\",\n                 state.appendIndex, state.terms.latest(), newIndex, newTerm );\n-\n-        if ( state.appendIndex < newIndex )\n+if ( state.appendIndex < newIndex )\n         {\n             skipSegment( state.appendIndex, newIndex, newTerm );\n             state.terms.skip( newIndex, newTerm );\n-\n-            state.prevIndex = newIndex;\n+state.prevIndex = newIndex;\n             state.prevTerm = newTerm;\n             state.appendIndex = newIndex;\n         }\n@@ -248,7 +242,7 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n     @Override\n     public long readEntryTerm( long logIndex ) throws IOException\n     {\n-        if ( logIndex > state.appendIndex )\n+        if ( logIndex> state.appendIndex )\n         {\n             return -1;\n         }\n@@ -256,9 +250,10 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n         if ( term == -1 && logIndex >= state.prevIndex )\n         {\n             RaftLogEntry entry = readLogEntry( logIndex );\n-            term = (entry != null) ? entry.term() : -1;\n+            term = (entry != null ) ? entry.term() : -1;\n         }\n-        return term;\n+\n+return term;\n     }\n \n     @Override\n@@ -269,19 +264,17 @@ public class SegmentedRaftLog extends LifecycleAdapter implements RaftLog\n \n         long newPrevIndex = oldestNotDisposed.header().prevIndex();\n         long newPrevTerm = oldestNotDisposed.header().prevTerm();\n-\n-        if ( newPrevIndex > state.prevIndex )\n+if ( newPrevIndex> state.prevIndex )\n         {\n             state.prevIndex = newPrevIndex;\n         }\n \n-        if ( newPrevTerm > state.prevTerm )\n+        if ( newPrevTerm> state.prevTerm )\n         {\n             state.prevTerm = newPrevTerm;\n         }\n \n         state.terms.prune( state.prevIndex );\n-\n-        return state.prevIndex;\n+return state.prevIndex;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1222",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1222/IdPrettyPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1222/IdPrettyPrinter.java\nindex 58b2f7de3d6..14c2195a043 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1222/IdPrettyPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1222/IdPrettyPrinter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import org.neo4j.internal.kernel.api.Read;\n@@ -24,22 +25,22 @@ import org.neo4j.internal.kernel.api.TokenRead;\n \n public class IdPrettyPrinter\n {\n-    private IdPrettyPrinter()\n-    {\n-    }\n+  private IdPrettyPrinter()\n+  {\n+  }\n \n-    public static String label( int id )\n-    {\n-        return id == Read.ANY_LABEL ? \"\" : (\":label=\" + id);\n-    }\n+  public static String label(int id)\n+  {\n+    return id == Read.ANY_LABEL ? \"\" : (\":label=\" + id);\n+  }\n \n-    public static String propertyKey( int id )\n-    {\n-        return id == TokenRead.NO_TOKEN ? \"\" : (\":propertyKey=\" + id);\n-    }\n+  public static String propertyKey(int id)\n+  {\n+    return id == TokenRead.NO_TOKEN ? \"\" : (\":propertyKey=\" + id);\n+  }\n \n-    public static String relationshipType( int id )\n-    {\n-        return id == TokenRead.NO_TOKEN ? \"\" : (\"[:type=\" + id + \"]\");\n-    }\n+  public static String relationshipType(int id)\n+  {\n+    return id == TokenRead.NO_TOKEN ? \"\" : (\"[:type=\" + id + \"]\");\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1222/IdPrettyPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1222/IdPrettyPrinter.java\nindex 58b2f7de3d6..acaf159226c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1222/IdPrettyPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1222/IdPrettyPrinter.java\n@@ -30,16 +30,16 @@ public class IdPrettyPrinter\n \n     public static String label( int id )\n     {\n-        return id == Read.ANY_LABEL ? \"\" : (\":label=\" + id);\n+        return id == Read.ANY_LABEL ? \"\" : ( \":label=\" + id);\n     }\n \n     public static String propertyKey( int id )\n     {\n-        return id == TokenRead.NO_TOKEN ? \"\" : (\":propertyKey=\" + id);\n+        return id == TokenRead.NO_TOKEN ? \"\" : ( \":propertyKey=\" + id);\n     }\n \n     public static String relationshipType( int id )\n     {\n-        return id == TokenRead.NO_TOKEN ? \"\" : (\"[:type=\" + id + \"]\");\n+        return id == TokenRead.NO_TOKEN ? \"\" : ( \"[:type=\" + id + \"]\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
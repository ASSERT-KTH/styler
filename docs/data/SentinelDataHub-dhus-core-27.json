{
    "project_name": "SentinelDataHub-dhus-core",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 83).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Implements the `visitProperty` method of abstract class OlingoFunctionalVisitor.\n * Allows us to convert an OlingoExpressionTree to an ExecutableExpressionTree\n * using the OlingoFunctionalVisitor.\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/27/ConnectionFunctionalVisitor.java\nindex 99397b98950..eb99e9a5e31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/intellij/27/ConnectionFunctionalVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package fr.gael.dhus.olingo.v1.visitor;\n \n import fr.gael.dhus.olingo.v1.FunctionalVisitor;\n@@ -38,144 +39,145 @@ import org.apache.olingo.odata2.api.uri.expression.PropertyExpression;\n public class ConnectionFunctionalVisitor extends FunctionalVisitor\n {\n \n-   @Override\n-   public Object visitProperty(PropertyExpression pe, String uri_literal,\n-      EdmTyped edm_property)\n-   {\n-      // Returns Transformer<Connection, Object> to provide the requested\n-      // property `uri_literal`.\n-      Transformer<Connection, ? extends Object> res;\n-      switch (uri_literal)\n-      {\n-         case ConnectionEntitySet.ID:\n-            res = new IdProvider();\n-            break;\n-         case ConnectionEntitySet.DATE:\n-            res = new DateProvider();\n-            break;\n-         case ConnectionEntitySet.REMOTEIP:\n-            res = new RemoteIpProvider();\n-            break;\n-         case ConnectionEntitySet.REQUEST:\n-            res = new RequestProvider();\n-            break;\n-         case ConnectionEntitySet.DURATION:\n-            res = new DurationProvider();\n-            break;\n-         case ConnectionEntitySet.CONTENT_LENGTH:\n-            res = new ContentLengthProvider();\n-            break;\n-         case ConnectionEntitySet.WRITTEN_CONTENT_LENGTH:\n-            res = new WrittenContentLengthProvider();\n-            break;\n-         case ConnectionEntitySet.STATUS:\n-            res = new StatusProvider();\n-            break;\n-         case ConnectionEntitySet.STATUS_MESSAGE:\n-            res = new StatusMessageProvider();\n-            break;\n-\n-         default:\n-            throw new UnsupportedOperationException(\"Unknown property: \" +\n-               uri_literal);\n-      }\n-\n-      return ExecutableExpressionTree.Node.createLeave(res);\n-   }\n-\n-   // Connection to Id function\n-   private static class IdProvider implements Transformer<Connection, String>\n-   {\n-      @Override\n-      public String transform(Connection u)\n-      {\n-         return u.getUUID();\n-      }\n-   }\n-\n-   // Connection to Date function\n-   private static class DateProvider implements Transformer<Connection, Date>\n-   {\n-      @Override\n-      public Date transform(Connection u)\n-      {\n-         return u.getStartDate();\n-      }\n-   }\n-\n-   // Connection to RemoteIp\n-   private static class RemoteIpProvider\n-      implements Transformer<Connection, String>\n-   {\n-      @Override\n-      public String transform(Connection u)\n-      {\n-         return u.getRemoteAddress();\n-      }\n-   }\n-\n-   // Connection to Request\n-   private static class RequestProvider\n-      implements Transformer<Connection, String>\n-   {\n-      @Override\n-      public String transform(Connection u)\n-      {\n-         return u.getRequest();\n-      }\n-   }\n-\n-   // Connection to Duration\n-   private static class DurationProvider\n-      implements Transformer<Connection, Double>\n-   {\n-      @Override\n-      public Double transform(Connection u)\n-      {\n-         return u.getDurationMs();\n-      }\n-   }\n-\n-   // Connection to Status\n-   private static class StatusProvider\n-      implements Transformer<Connection, String>\n-   {\n-      @Override\n-      public String transform(Connection u)\n-      {\n-         return u.getConnectionStatus();\n-      }\n-   }\n-   // Connection to StatusMessage\n-   private static class StatusMessageProvider\n-      implements Transformer<Connection, String>\n-   {\n-      @Override\n-      public String transform(Connection u)\n-      {\n-         return u.getConnectionStatusMessage();\n-      }\n-   }\n-\n-   // Connection to Content length\n-   private static class ContentLengthProvider\n-      implements Transformer<Connection, Long>\n-   {\n-      @Override\n-      public Long transform(Connection u)\n-      {\n-         return u.getContentLength();\n-      }\n-   }\n-\n-   // Connection to Content length\n-   private static class WrittenContentLengthProvider\n-      implements Transformer<Connection, Long>\n-   {\n-      @Override\n-      public Long transform(Connection u)\n-      {\n-         return u.getWrittenContentLength();\n-      }\n-   }\n+    @Override\n+    public Object visitProperty(PropertyExpression pe, String uri_literal,\n+                                EdmTyped edm_property)\n+    {\n+        // Returns Transformer<Connection, Object> to provide the requested\n+        // property `uri_literal`.\n+        Transformer<Connection, ? extends Object> res;\n+        switch (uri_literal)\n+        {\n+            case ConnectionEntitySet.ID:\n+                res = new IdProvider();\n+                break;\n+            case ConnectionEntitySet.DATE:\n+                res = new DateProvider();\n+                break;\n+            case ConnectionEntitySet.REMOTEIP:\n+                res = new RemoteIpProvider();\n+                break;\n+            case ConnectionEntitySet.REQUEST:\n+                res = new RequestProvider();\n+                break;\n+            case ConnectionEntitySet.DURATION:\n+                res = new DurationProvider();\n+                break;\n+            case ConnectionEntitySet.CONTENT_LENGTH:\n+                res = new ContentLengthProvider();\n+                break;\n+            case ConnectionEntitySet.WRITTEN_CONTENT_LENGTH:\n+                res = new WrittenContentLengthProvider();\n+                break;\n+            case ConnectionEntitySet.STATUS:\n+                res = new StatusProvider();\n+                break;\n+            case ConnectionEntitySet.STATUS_MESSAGE:\n+                res = new StatusMessageProvider();\n+                break;\n+\n+            default:\n+                throw new UnsupportedOperationException(\"Unknown property: \" +\n+                    uri_literal);\n+        }\n+\n+        return ExecutableExpressionTree.Node.createLeave(res);\n+    }\n+\n+    // Connection to Id function\n+    private static class IdProvider implements Transformer<Connection, String>\n+    {\n+        @Override\n+        public String transform(Connection u)\n+        {\n+            return u.getUUID();\n+        }\n+    }\n+\n+    // Connection to Date function\n+    private static class DateProvider implements Transformer<Connection, Date>\n+    {\n+        @Override\n+        public Date transform(Connection u)\n+        {\n+            return u.getStartDate();\n+        }\n+    }\n+\n+    // Connection to RemoteIp\n+    private static class RemoteIpProvider\n+        implements Transformer<Connection, String>\n+    {\n+        @Override\n+        public String transform(Connection u)\n+        {\n+            return u.getRemoteAddress();\n+        }\n+    }\n+\n+    // Connection to Request\n+    private static class RequestProvider\n+        implements Transformer<Connection, String>\n+    {\n+        @Override\n+        public String transform(Connection u)\n+        {\n+            return u.getRequest();\n+        }\n+    }\n+\n+    // Connection to Duration\n+    private static class DurationProvider\n+        implements Transformer<Connection, Double>\n+    {\n+        @Override\n+        public Double transform(Connection u)\n+        {\n+            return u.getDurationMs();\n+        }\n+    }\n+\n+    // Connection to Status\n+    private static class StatusProvider\n+        implements Transformer<Connection, String>\n+    {\n+        @Override\n+        public String transform(Connection u)\n+        {\n+            return u.getConnectionStatus();\n+        }\n+    }\n+\n+    // Connection to StatusMessage\n+    private static class StatusMessageProvider\n+        implements Transformer<Connection, String>\n+    {\n+        @Override\n+        public String transform(Connection u)\n+        {\n+            return u.getConnectionStatusMessage();\n+        }\n+    }\n+\n+    // Connection to Content length\n+    private static class ContentLengthProvider\n+        implements Transformer<Connection, Long>\n+    {\n+        @Override\n+        public Long transform(Connection u)\n+        {\n+            return u.getContentLength();\n+        }\n+    }\n+\n+    // Connection to Content length\n+    private static class WrittenContentLengthProvider\n+        implements Transformer<Connection, Long>\n+    {\n+        @Override\n+        public Long transform(Connection u)\n+        {\n+            return u.getWrittenContentLength();\n+        }\n+    }\n }\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/27/ConnectionFunctionalVisitor.java\nindex 99397b98950..66c489ae4bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/naturalize/27/ConnectionFunctionalVisitor.java\n@@ -178,4 +178,4 @@ public class ConnectionFunctionalVisitor extends FunctionalVisitor\n          return u.getWrittenContentLength();\n       }\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/27/ConnectionFunctionalVisitor.java\nindex 99397b98950..2e4d35333ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/errored/1/27/ConnectionFunctionalVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/SentinelDataHub-dhus-core/codebuff/27/ConnectionFunctionalVisitor.java\n@@ -22,11 +22,8 @@ package fr.gael.dhus.olingo.v1.visitor;\n import fr.gael.dhus.olingo.v1.FunctionalVisitor;\n import fr.gael.dhus.olingo.v1.entity.Connection;\n import fr.gael.dhus.olingo.v1.entityset.ConnectionEntitySet;\n-\n import java.util.Date;\n-\n import org.apache.commons.collections4.Transformer;\n-\n import org.apache.olingo.odata2.api.edm.EdmTyped;\n import org.apache.olingo.odata2.api.uri.expression.PropertyExpression;\n \n@@ -35,16 +32,16 @@ import org.apache.olingo.odata2.api.uri.expression.PropertyExpression;\n  * Allows us to convert an OlingoExpressionTree to an ExecutableExpressionTree\n  * using the OlingoFunctionalVisitor.\n  */\n+\n public class ConnectionFunctionalVisitor extends FunctionalVisitor\n {\n-\n    @Override\n-   public Object visitProperty(PropertyExpression pe, String uri_literal,\n-      EdmTyped edm_property)\n+   public Object visitProperty (PropertyExpression pe, String uri_literal, EdmTyped edm_property)\n    {\n       // Returns Transformer<Connection, Object> to provide the requested\n       // property `uri_literal`.\n       Transformer<Connection, ? extends Object> res;\n+\n       switch (uri_literal)\n       {\n          case ConnectionEntitySet.ID:\n@@ -77,105 +74,106 @@ public class ConnectionFunctionalVisitor extends FunctionalVisitor\n \n          default:\n             throw new UnsupportedOperationException(\"Unknown property: \" +\n-               uri_literal);\n+            uri_literal);\n       }\n-\n-      return ExecutableExpressionTree.Node.createLeave(res);\n+      return ExecutableExpressionTree.Node.createLeave (res);\n    }\n \n    // Connection to Id function\n+\n    private static class IdProvider implements Transformer<Connection, String>\n    {\n       @Override\n-      public String transform(Connection u)\n+      public String transform (Connection u)\n       {\n-         return u.getUUID();\n+         return u.getUUID ();\n       }\n    }\n \n    // Connection to Date function\n+\n    private static class DateProvider implements Transformer<Connection, Date>\n    {\n       @Override\n-      public Date transform(Connection u)\n+      public Date transform (Connection u)\n       {\n-         return u.getStartDate();\n+         return u.getStartDate ();\n       }\n    }\n \n    // Connection to RemoteIp\n-   private static class RemoteIpProvider\n-      implements Transformer<Connection, String>\n+\n+   private static class RemoteIpProvider implements Transformer<Connection, String>\n    {\n       @Override\n-      public String transform(Connection u)\n+      public String transform (Connection u)\n       {\n-         return u.getRemoteAddress();\n+         return u.getRemoteAddress ();\n       }\n    }\n \n    // Connection to Request\n-   private static class RequestProvider\n-      implements Transformer<Connection, String>\n+\n+   private static class RequestProvider implements Transformer<Connection, String>\n    {\n       @Override\n-      public String transform(Connection u)\n+      public String transform (Connection u)\n       {\n-         return u.getRequest();\n+         return u.getRequest ();\n       }\n    }\n \n    // Connection to Duration\n-   private static class DurationProvider\n-      implements Transformer<Connection, Double>\n+\n+   private static class DurationProvider implements Transformer<Connection, Double>\n    {\n       @Override\n-      public Double transform(Connection u)\n+      public Double transform (Connection u)\n       {\n-         return u.getDurationMs();\n+         return u.getDurationMs ();\n       }\n    }\n \n    // Connection to Status\n-   private static class StatusProvider\n-      implements Transformer<Connection, String>\n+\n+   private static class StatusProvider implements Transformer<Connection, String>\n    {\n       @Override\n-      public String transform(Connection u)\n+      public String transform (Connection u)\n       {\n-         return u.getConnectionStatus();\n+         return u.getConnectionStatus ();\n       }\n    }\n    // Connection to StatusMessage\n-   private static class StatusMessageProvider\n-      implements Transformer<Connection, String>\n+\n+   private static class StatusMessageProvider implements Transformer<Connection, String>\n    {\n       @Override\n-      public String transform(Connection u)\n+      public String transform (Connection u)\n       {\n-         return u.getConnectionStatusMessage();\n+         return u.getConnectionStatusMessage ();\n       }\n    }\n \n    // Connection to Content length\n-   private static class ContentLengthProvider\n-      implements Transformer<Connection, Long>\n+\n+   private static class ContentLengthProvider implements Transformer<Connection, Long>\n    {\n       @Override\n-      public Long transform(Connection u)\n+      public Long transform (Connection u)\n       {\n-         return u.getContentLength();\n+         return u.getContentLength ();\n       }\n    }\n \n    // Connection to Content length\n-   private static class WrittenContentLengthProvider\n-      implements Transformer<Connection, Long>\n+\n+   private static class WrittenContentLengthProvider implements Transformer<Connection, Long>\n    {\n       @Override\n-      public Long transform(Connection u)\n+      public Long transform (Connection u)\n       {\n-         return u.getWrittenContentLength();\n+         return u.getWrittenContentLength ();\n       }\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "939",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "310",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/939/CliArgHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/939/CliArgHelper.java\nindex 3d37d51ae49..3b2e497e360 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/939/CliArgHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/939/CliArgHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.cli;\n \n import net.sourceforge.argparse4j.ArgumentParsers;\n@@ -57,23 +58,22 @@ public class CliArgHelper\n      * @return null in case of error, commandline arguments otherwise\n      */\n     @Nullable\n-    public static CliArgs parse( @Nonnull String... args )\n+    public static CliArgs parse(@Nonnull String... args)\n     {\n         final CliArgs cliArgs = new CliArgs();\n \n-        final ArgumentParser parser = setupParser( cliArgs.getParameters() );\n+        final ArgumentParser parser = setupParser(cliArgs.getParameters());\n         final Namespace ns;\n \n         try\n         {\n-            ns = parser.parseArgs( args );\n-        }\n-        catch ( ArgumentParserException e )\n+            ns = parser.parseArgs(args);\n+        } catch (ArgumentParserException e)\n         {\n-            parser.handleError( e );\n+            parser.handleError(e);\n             return null;\n         }\n-        return getCliArgs( cliArgs, parser, ns );\n+        return getCliArgs(cliArgs, parser, ns);\n     }\n \n     /**\n@@ -81,218 +81,215 @@ public class CliArgHelper\n      * @return commandline arguments\n      * @throws ArgumentParserException if an argument can't be parsed.\n      */\n-    public static CliArgs parseAndThrow( @Nonnull String... args ) throws ArgumentParserException\n+    public static CliArgs parseAndThrow(@Nonnull String... args) throws ArgumentParserException\n     {\n         final CliArgs cliArgs = new CliArgs();\n-        final ArgumentParser parser = setupParser( cliArgs.getParameters() );\n-        final Namespace ns = parser.parseArgs( args );\n-        return getCliArgs( cliArgs, parser, ns );\n+        final ArgumentParser parser = setupParser(cliArgs.getParameters());\n+        final Namespace ns = parser.parseArgs(args);\n+        return getCliArgs(cliArgs, parser, ns);\n     }\n \n-    private static CliArgs getCliArgs( CliArgs cliArgs, ArgumentParser parser, Namespace ns )\n+    private static CliArgs getCliArgs(CliArgs cliArgs, ArgumentParser parser, Namespace ns)\n     {\n         // Parse address string, returns null on error\n-        final URI uri = parseURI( parser, ns.getString( \"address\" ) );\n+        final URI uri = parseURI(parser, ns.getString(\"address\"));\n \n-        if ( uri == null )\n+        if (uri == null)\n         {\n             return null;\n         }\n \n         //---------------------\n         // Connection arguments\n-        cliArgs.setScheme( uri.getScheme(), \"bolt\" );\n-        cliArgs.setHost( uri.getHost(), \"localhost\" );\n+        cliArgs.setScheme(uri.getScheme(), \"bolt\");\n+        cliArgs.setHost(uri.getHost(), \"localhost\");\n \n         int port = uri.getPort();\n-        cliArgs.setPort( port == -1 ? 7687 : port );\n+        cliArgs.setPort(port == -1 ? 7687 : port);\n         // Also parse username and password from address if available\n-        parseUserInfo( uri, cliArgs );\n+        parseUserInfo(uri, cliArgs);\n \n         // Only overwrite user/pass from address string if the arguments were specified\n-        String user = ns.getString( \"username\" );\n-        if ( !user.isEmpty() )\n+        String user = ns.getString(\"username\");\n+        if (!user.isEmpty())\n         {\n-            cliArgs.setUsername( user, cliArgs.getUsername() );\n+            cliArgs.setUsername(user, cliArgs.getUsername());\n         }\n-        String pass = ns.getString( \"password\" );\n-        if ( !pass.isEmpty() )\n+        String pass = ns.getString(\"password\");\n+        if (!pass.isEmpty())\n         {\n-            cliArgs.setPassword( pass, cliArgs.getPassword() );\n+            cliArgs.setPassword(pass, cliArgs.getPassword());\n         }\n-        cliArgs.setEncryption( Encryption.parse( ns.get( \"encryption\" ) ) );\n-        cliArgs.setDatabase( ns.getString( \"database\" ) );\n-        cliArgs.setInputFilename( ns.getString( \"file\" ) );\n+        cliArgs.setEncryption(Encryption.parse(ns.get(\"encryption\")));\n+        cliArgs.setDatabase(ns.getString(\"database\"));\n+        cliArgs.setInputFilename(ns.getString(\"file\"));\n \n         //----------------\n         // Other arguments\n         // cypher string might not be given, represented by null\n-        cliArgs.setCypher( ns.getString( \"cypher\" ) );\n+        cliArgs.setCypher(ns.getString(\"cypher\"));\n         // Fail behavior as sensible default and returns a proper type\n-        cliArgs.setFailBehavior( ns.get( \"fail-behavior\" ) );\n+        cliArgs.setFailBehavior(ns.get(\"fail-behavior\"));\n \n         //Set Output format\n-        cliArgs.setFormat( Format.parse( ns.get( \"format\" ) ) );\n+        cliArgs.setFormat(Format.parse(ns.get(\"format\")));\n \n-        cliArgs.setDebugMode( ns.getBoolean( \"debug\" ) );\n+        cliArgs.setDebugMode(ns.getBoolean(\"debug\"));\n \n-        cliArgs.setNonInteractive( ns.getBoolean( \"force-non-interactive\" ) );\n+        cliArgs.setNonInteractive(ns.getBoolean(\"force-non-interactive\"));\n \n-        cliArgs.setWrap( ns.getBoolean( \"wrap\" ) );\n+        cliArgs.setWrap(ns.getBoolean(\"wrap\"));\n \n-        cliArgs.setNumSampleRows( ns.getInt( \"sample-rows\" ) );\n+        cliArgs.setNumSampleRows(ns.getInt(\"sample-rows\"));\n \n-        cliArgs.setVersion( ns.getBoolean( \"version\" ) );\n+        cliArgs.setVersion(ns.getBoolean(\"version\"));\n \n-        cliArgs.setDriverVersion( ns.getBoolean( \"driver-version\" ) );\n+        cliArgs.setDriverVersion(ns.getBoolean(\"driver-version\"));\n \n         return cliArgs;\n     }\n \n-    private static void parseUserInfo( URI uri, CliArgs cliArgs )\n+    private static void parseUserInfo(URI uri, CliArgs cliArgs)\n     {\n         String userInfo = uri.getUserInfo();\n         String user = null;\n         String password = null;\n-        if ( userInfo != null )\n+        if (userInfo != null)\n         {\n-            String[] split = userInfo.split( \":\" );\n-            if ( split.length == 0 )\n+            String[] split = userInfo.split(\":\");\n+            if (split.length == 0)\n             {\n                 user = userInfo;\n-            }\n-            else if ( split.length == 2 )\n+            } else if (split.length == 2)\n             {\n                 user = split[0];\n                 password = split[1];\n-            }\n-            else\n+            } else\n             {\n-                throw new IllegalArgumentException( \"Cannot parse user and password from \" + userInfo );\n+                throw new IllegalArgumentException(\"Cannot parse user and password from \" + userInfo);\n             }\n         }\n-        cliArgs.setUsername( user, \"\" );\n-        cliArgs.setPassword( password, \"\" );\n+        cliArgs.setUsername(user, \"\");\n+        cliArgs.setPassword(password, \"\");\n     }\n \n     @Nullable\n-    static URI parseURI( ArgumentParser parser, String address )\n+    static URI parseURI(ArgumentParser parser, String address)\n     {\n         try\n         {\n-            String[] schemeSplit = address.split( \"://\" );\n-            if ( schemeSplit.length == 1 )\n+            String[] schemeSplit = address.split(\"://\");\n+            if (schemeSplit.length == 1)\n             {\n                 // URI can't parse addresses without scheme, prepend fake \"bolt://\" to reuse the parsing facility\n                 address = DEFAULT_SCHEME + \"://\" + address;\n             }\n-            return new URI( address );\n-        }\n-        catch ( URISyntaxException e )\n+            return new URI(address);\n+        } catch (URISyntaxException e)\n         {\n-            PrintWriter printWriter = new PrintWriter( System.err );\n-            parser.printUsage( printWriter );\n-            printWriter.println( \"cypher-shell: error: Failed to parse address: '\" + address + \"'\" );\n-            printWriter.println( \"\\n  Address should be of the form: [scheme://][username:password@][host][:port]\" );\n+            PrintWriter printWriter = new PrintWriter(System.err);\n+            parser.printUsage(printWriter);\n+            printWriter.println(\"cypher-shell: error: Failed to parse address: '\" + address + \"'\");\n+            printWriter.println(\"\\n  Address should be of the form: [scheme://][username:password@][host][:port]\");\n             printWriter.flush();\n             return null;\n         }\n     }\n \n-    private static ArgumentParser setupParser( ParameterMap parameterMap )\n+    private static ArgumentParser setupParser(ParameterMap parameterMap)\n     {\n-        ArgumentParser parser = ArgumentParsers.newArgumentParser( \"cypher-shell\" ).defaultHelp( true ).description(\n-                format( \"A command line shell where you can execute Cypher against an instance of Neo4j. \" +\n-                        \"By default the shell is interactive but you can use it for scripting by passing cypher \" +\n-                        \"directly on the command line or by piping a file with cypher statements (requires Powershell on Windows).\" +\n-                        \"%n%n\" +\n-                        \"example of piping a file:%n\" +\n-                        \"  cat some-cypher.txt | cypher-shell\" ) );\n-\n-        ArgumentGroup connGroup = parser.addArgumentGroup( \"connection arguments\" );\n-        connGroup.addArgument( \"-a\", \"--address\" )\n-                 .help( \"address and port to connect to\" )\n-                 .setDefault( String.format( \"%s://%s:%d\", CliArgs.DEFAULT_SCHEME, CliArgs.DEFAULT_HOST, CliArgs.DEFAULT_PORT ) );\n-        connGroup.addArgument( \"-u\", \"--username\" )\n-                 .setDefault( \"\" )\n-                 .help( \"username to connect as. Can also be specified using environment variable \" + ConnectionConfig.USERNAME_ENV_VAR );\n-        connGroup.addArgument( \"-p\", \"--password\" )\n-                 .setDefault( \"\" )\n-                 .help( \"password to connect with. Can also be specified using environment variable \" + ConnectionConfig.PASSWORD_ENV_VAR );\n-        connGroup.addArgument( \"--encryption\" )\n-                 .help( \"whether the connection to Neo4j should be encrypted. This must be consistent with Neo4j's \" +\n-                        \"configuration. If choosing '\" + Encryption.DEFAULT.name().toLowerCase() +\n-                        \"' the encryption setting is deduced from the specified address. \" +\n-                        \"For example the 'neo4j+ssc' protocol would use encryption.\" )\n-                 .choices( new CollectionArgumentChoice<>(\n-                         Encryption.TRUE.name().toLowerCase(),\n-                         Encryption.FALSE.name().toLowerCase(),\n-                         Encryption.DEFAULT.name().toLowerCase() ) )\n-                 .setDefault( Encryption.DEFAULT.name().toLowerCase() );\n-        connGroup.addArgument( \"-d\", \"--database\" )\n-                 .help( \"database to connect to. Can also be specified using environment variable \" + ConnectionConfig.DATABASE_ENV_VAR )\n-                 .setDefault( \"\" );\n+        ArgumentParser parser = ArgumentParsers.newArgumentParser(\"cypher-shell\").defaultHelp(true).description(\n+          format(\"A command line shell where you can execute Cypher against an instance of Neo4j. \" +\n+            \"By default the shell is interactive but you can use it for scripting by passing cypher \" +\n+            \"directly on the command line or by piping a file with cypher statements (requires Powershell on Windows).\" +\n+            \"%n%n\" +\n+            \"example of piping a file:%n\" +\n+            \"  cat some-cypher.txt | cypher-shell\"));\n+\n+        ArgumentGroup connGroup = parser.addArgumentGroup(\"connection arguments\");\n+        connGroup.addArgument(\"-a\", \"--address\")\n+          .help(\"address and port to connect to\")\n+          .setDefault(String.format(\"%s://%s:%d\", CliArgs.DEFAULT_SCHEME, CliArgs.DEFAULT_HOST, CliArgs.DEFAULT_PORT));\n+        connGroup.addArgument(\"-u\", \"--username\")\n+          .setDefault(\"\")\n+          .help(\"username to connect as. Can also be specified using environment variable \" + ConnectionConfig.USERNAME_ENV_VAR);\n+        connGroup.addArgument(\"-p\", \"--password\")\n+          .setDefault(\"\")\n+          .help(\"password to connect with. Can also be specified using environment variable \" + ConnectionConfig.PASSWORD_ENV_VAR);\n+        connGroup.addArgument(\"--encryption\")\n+          .help(\"whether the connection to Neo4j should be encrypted. This must be consistent with Neo4j's \" +\n+            \"configuration. If choosing '\" + Encryption.DEFAULT.name().toLowerCase() +\n+            \"' the encryption setting is deduced from the specified address. \" +\n+            \"For example the 'neo4j+ssc' protocol would use encryption.\")\n+          .choices(new CollectionArgumentChoice<>(\n+            Encryption.TRUE.name().toLowerCase(),\n+            Encryption.FALSE.name().toLowerCase(),\n+            Encryption.DEFAULT.name().toLowerCase()))\n+          .setDefault(Encryption.DEFAULT.name().toLowerCase());\n+        connGroup.addArgument(\"-d\", \"--database\")\n+          .help(\"database to connect to. Can also be specified using environment variable \" + ConnectionConfig.DATABASE_ENV_VAR)\n+          .setDefault(\"\");\n \n         MutuallyExclusiveGroup failGroup = parser.addMutuallyExclusiveGroup();\n-        failGroup.addArgument( \"--fail-fast\" )\n-                 .help( \"exit and report failure on first error when reading from file (this is the default behavior)\" )\n-                 .dest( \"fail-behavior\" )\n-                 .setConst( FAIL_FAST )\n-                 .action( new StoreConstArgumentAction() );\n-        failGroup.addArgument( \"--fail-at-end\" )\n-                 .help( \"exit and report failures at end of input when reading from file\" )\n-                 .dest( \"fail-behavior\" )\n-                 .setConst( FAIL_AT_END )\n-                 .action( new StoreConstArgumentAction() );\n-        parser.setDefault( \"fail-behavior\", FAIL_FAST );\n-\n-        parser.addArgument( \"--format\" )\n-              .help( \"desired output format, verbose displays results in tabular format and prints statistics, \" +\n-                     \"plain displays data with minimal formatting\" )\n-              .choices( new CollectionArgumentChoice<>(\n-                      Format.AUTO.name().toLowerCase(),\n-                      Format.VERBOSE.name().toLowerCase(),\n-                      Format.PLAIN.name().toLowerCase() ) )\n-              .setDefault( Format.AUTO.name().toLowerCase() );\n-\n-        parser.addArgument( \"-P\", \"--param\" )\n-              .help( \"Add a parameter to this session. Example: `-P \\\"number => 3\\\"`. This argument can be specified multiple times.\" )\n-              .action( new AddParamArgumentAction( parameterMap ) );\n-\n-        parser.addArgument( \"--debug\" )\n-              .help( \"print additional debug information\" )\n-              .action( new StoreTrueArgumentAction() );\n-\n-        parser.addArgument( \"--non-interactive\" )\n-              .help( \"force non-interactive mode, only useful if auto-detection fails (like on Windows)\" )\n-              .dest( \"force-non-interactive\" )\n-              .action( new StoreTrueArgumentAction() );\n-\n-        parser.addArgument( \"--sample-rows\" )\n-              .help( \"number of rows sampled to compute table widths (only for format=VERBOSE)\" )\n-              .type( new PositiveIntegerType() )\n-              .dest( \"sample-rows\" )\n-              .setDefault( CliArgs.DEFAULT_NUM_SAMPLE_ROWS );\n-\n-        parser.addArgument( \"--wrap\" )\n-              .help( \"wrap table column values if column is too narrow (only for format=VERBOSE)\" )\n-              .type( new BooleanArgumentType() )\n-              .setDefault( true );\n-\n-        parser.addArgument( \"-v\", \"--version\" )\n-              .help( \"print version of cypher-shell and exit\" )\n-              .action( new StoreTrueArgumentAction() );\n-\n-        parser.addArgument( \"--driver-version\" )\n-              .help( \"print version of the Neo4j Driver used and exit\" )\n-              .dest( \"driver-version\" )\n-              .action( new StoreTrueArgumentAction() );\n-\n-        parser.addArgument( \"cypher\" )\n-              .nargs( \"?\" )\n-              .help( \"an optional string of cypher to execute and then exit\" );\n-        parser.addArgument( \"-f\", \"--file\" )\n-              .help( \"Pass a file with cypher statements to be executed. After the statements have been executed cypher-shell will be shutdown\" );\n+        failGroup.addArgument(\"--fail-fast\")\n+          .help(\"exit and report failure on first error when reading from file (this is the default behavior)\")\n+          .dest(\"fail-behavior\")\n+          .setConst(FAIL_FAST)\n+          .action(new StoreConstArgumentAction());\n+        failGroup.addArgument(\"--fail-at-end\")\n+          .help(\"exit and report failures at end of input when reading from file\")\n+          .dest(\"fail-behavior\")\n+          .setConst(FAIL_AT_END)\n+          .action(new StoreConstArgumentAction());\n+        parser.setDefault(\"fail-behavior\", FAIL_FAST);\n+\n+        parser.addArgument(\"--format\")\n+          .help(\"desired output format, verbose displays results in tabular format and prints statistics, \" +\n+            \"plain displays data with minimal formatting\")\n+          .choices(new CollectionArgumentChoice<>(\n+            Format.AUTO.name().toLowerCase(),\n+            Format.VERBOSE.name().toLowerCase(),\n+            Format.PLAIN.name().toLowerCase()))\n+          .setDefault(Format.AUTO.name().toLowerCase());\n+\n+        parser.addArgument(\"-P\", \"--param\")\n+          .help(\"Add a parameter to this session. Example: `-P \\\"number => 3\\\"`. This argument can be specified multiple times.\")\n+          .action(new AddParamArgumentAction(parameterMap));\n+\n+        parser.addArgument(\"--debug\")\n+          .help(\"print additional debug information\")\n+          .action(new StoreTrueArgumentAction());\n+\n+        parser.addArgument(\"--non-interactive\")\n+          .help(\"force non-interactive mode, only useful if auto-detection fails (like on Windows)\")\n+          .dest(\"force-non-interactive\")\n+          .action(new StoreTrueArgumentAction());\n+\n+        parser.addArgument(\"--sample-rows\")\n+          .help(\"number of rows sampled to compute table widths (only for format=VERBOSE)\")\n+          .type(new PositiveIntegerType())\n+          .dest(\"sample-rows\")\n+          .setDefault(CliArgs.DEFAULT_NUM_SAMPLE_ROWS);\n+\n+        parser.addArgument(\"--wrap\")\n+          .help(\"wrap table column values if column is too narrow (only for format=VERBOSE)\")\n+          .type(new BooleanArgumentType())\n+          .setDefault(true);\n+\n+        parser.addArgument(\"-v\", \"--version\")\n+          .help(\"print version of cypher-shell and exit\")\n+          .action(new StoreTrueArgumentAction());\n+\n+        parser.addArgument(\"--driver-version\")\n+          .help(\"print version of the Neo4j Driver used and exit\")\n+          .dest(\"driver-version\")\n+          .action(new StoreTrueArgumentAction());\n+\n+        parser.addArgument(\"cypher\")\n+          .nargs(\"?\")\n+          .help(\"an optional string of cypher to execute and then exit\");\n+        parser.addArgument(\"-f\", \"--file\")\n+          .help(\"Pass a file with cypher statements to be executed. After the statements have been executed cypher-shell will be shutdown\");\n \n         return parser;\n     }\n@@ -300,20 +297,19 @@ public class CliArgHelper\n     private static class PositiveIntegerType implements ArgumentType<Integer>\n     {\n         @Override\n-        public Integer convert( ArgumentParser parser, Argument arg, String value ) throws ArgumentParserException\n+        public Integer convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException\n         {\n             try\n             {\n-                int result = Integer.parseInt( value );\n-                if ( result < 1 )\n+                int result = Integer.parseInt(value);\n+                if (result < 1)\n                 {\n-                    throw new NumberFormatException( value );\n+                    throw new NumberFormatException(value);\n                 }\n                 return result;\n-            }\n-            catch ( NumberFormatException nfe )\n+            } catch (NumberFormatException nfe)\n             {\n-                throw new ArgumentParserException( \"Invalid value: \" + value, parser );\n+                throw new ArgumentParserException(\"Invalid value: \" + value, parser);\n             }\n         }\n     }\n",
            "diff_size": 156
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
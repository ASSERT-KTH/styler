{
    "project_name": "neo4j-neo4j",
    "error_id": "1694",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1694/ExternalSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1694/ExternalSettings.java\nindex a7fea9bd5dd..a629aab771f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1694/ExternalSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1694/ExternalSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import java.nio.file.Path;\n@@ -35,40 +36,40 @@ import static org.neo4j.configuration.SettingValueParsers.STRING;\n @ServiceProvider\n public class ExternalSettings implements SettingsDeclaration\n {\n-    @Description( \"Name of the Windows Service.\" )\n-    public static final Setting<String> windows_service_name = newBuilder( \"dbms.windows_service_name\", STRING, \"neo4j\" ).build();\n+    @Description(\"Name of the Windows Service.\")\n+    public static final Setting<String> windows_service_name = newBuilder(\"dbms.windows_service_name\", STRING, \"neo4j\").build();\n \n-    @Description( \"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" +\n-            \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" +\n-            \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\" )\n-    public static final Setting<String> additional_jvm = newBuilder( \"dbms.jvm.additional\", STRING, \"\" ).build();\n+    @Description(\"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" +\n+      \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" +\n+      \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\")\n+    public static final Setting<String> additional_jvm = newBuilder(\"dbms.jvm.additional\", STRING, \"\").build();\n \n-    @Description( \"Initial heap size. By default it is calculated based on available system resources. (valid units are `k`, `K`, `m`, `M`, `g`, `G`).\" )\n-    public static final Setting<String> initial_heap_size = newBuilder( \"dbms.memory.heap.initial_size\", STRING , \"\").build();\n+    @Description(\"Initial heap size. By default it is calculated based on available system resources. (valid units are `k`, `K`, `m`, `M`, `g`, `G`).\")\n+    public static final Setting<String> initial_heap_size = newBuilder(\"dbms.memory.heap.initial_size\", STRING, \"\").build();\n \n-    @Description( \"Maximum heap size. By default it is calculated based on available system resources. (valid units are `k`, `K`, `m`, `M`, `g`, `G`).\" )\n-    public static final Setting<String> max_heap_size = newBuilder( \"dbms.memory.heap.max_size\", STRING, \"\" ).build();\n+    @Description(\"Maximum heap size. By default it is calculated based on available system resources. (valid units are `k`, `K`, `m`, `M`, `g`, `G`).\")\n+    public static final Setting<String> max_heap_size = newBuilder(\"dbms.memory.heap.max_size\", STRING, \"\").build();\n \n-    @Description( \"GC Logging Options\" )\n-    public static final Setting<String> gc_logging_options = newBuilder(\"dbms.logs.gc.options\", STRING, null ).build();\n+    @Description(\"GC Logging Options\")\n+    public static final Setting<String> gc_logging_options = newBuilder(\"dbms.logs.gc.options\", STRING, null).build();\n \n-    @Description( \"Number of GC logs to keep.\" )\n+    @Description(\"Number of GC logs to keep.\")\n     public static final Setting<Integer> gc_logging_rotation_keep_number =\n-            newBuilder( \"dbms.logs.gc.rotation.keep_number\", INT, 0 ).build();\n+      newBuilder(\"dbms.logs.gc.rotation.keep_number\", INT, 0).build();\n \n-    @Description( \"Size of each GC log that is kept.\" )\n-    public static final Setting<Long> gc_logging_rotation_size = newBuilder( \"dbms.logs.gc.rotation.size\", BYTES, null ).build();\n+    @Description(\"Size of each GC log that is kept.\")\n+    public static final Setting<Long> gc_logging_rotation_size = newBuilder(\"dbms.logs.gc.rotation.size\", BYTES, null).build();\n \n-    @Description( \"Enable GC Logging\" )\n-    public static final Setting<Boolean> gc_logging_enabled = newBuilder( \"dbms.logs.gc.enabled\", BOOL, false ).build();\n+    @Description(\"Enable GC Logging\")\n+    public static final Setting<Boolean> gc_logging_enabled = newBuilder(\"dbms.logs.gc.enabled\", BOOL, false).build();\n \n-    @Description( \"Path of the run directory. This directory holds Neo4j's runtime state, such as a pidfile when it \" +\n-            \"is running in the background. The pidfile is created when starting neo4j and removed when stopping it.\" +\n-            \" It may be placed on an in-memory filesystem such as tmpfs.\" )\n+    @Description(\"Path of the run directory. This directory holds Neo4j's runtime state, such as a pidfile when it \" +\n+      \"is running in the background. The pidfile is created when starting neo4j and removed when stopping it.\" +\n+      \" It may be placed on an in-memory filesystem such as tmpfs.\")\n     public static final Setting<Path> run_directory =\n-            newBuilder( \"dbms.directories.run\", PATH, Path.of( \"run\" ) ).setDependency( neo4j_home ).immutable().build();\n+      newBuilder(\"dbms.directories.run\", PATH, Path.of(\"run\")).setDependency(neo4j_home).immutable().build();\n \n-    @Description( \"Path of the lib directory\" )\n+    @Description(\"Path of the lib directory\")\n     public static final Setting<Path> lib_directory =\n-            newBuilder( \"dbms.directories.lib\", PATH, Path.of( \"lib\" ) ).setDependency( neo4j_home ).immutable().build();\n+      newBuilder(\"dbms.directories.lib\", PATH, Path.of(\"lib\")).setDependency(neo4j_home).immutable().build();\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "944",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/944/GBPTreePointerType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/944/GBPTreePointerType.java\nindex 0068d585457..6247e32f10c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/944/GBPTreePointerType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/944/GBPTreePointerType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.Objects;\n@@ -27,7 +28,7 @@ import static org.neo4j.index.internal.gbptree.TreeNode.BYTE_POS_SUCCESSOR;\n \n public interface GBPTreePointerType\n {\n-    int offset( TreeNode node );\n+    int offset(TreeNode node);\n \n     static GBPTreePointerType leftSibling()\n     {\n@@ -49,84 +50,84 @@ public interface GBPTreePointerType\n         return SimplePointer.NO_POINTER;\n     }\n \n-    static GBPTreePointerType child( int pos )\n+    static GBPTreePointerType child(int pos)\n     {\n-        return new ChildPointer( pos );\n+        return new ChildPointer(pos);\n     }\n \n     enum SimplePointer implements GBPTreePointerType\n     {\n         NO_POINTER\n-                {\n-                    @Override\n-                    public int offset( TreeNode node )\n-                    {\n-                        return 0;\n-                    }\n-\n-                    @Override\n-                    public String toString()\n-                    {\n-                        return \"no pointer\";\n-                    }\n-                },\n+          {\n+              @Override\n+              public int offset(TreeNode node)\n+              {\n+                  return 0;\n+              }\n+\n+              @Override\n+              public String toString()\n+              {\n+                  return \"no pointer\";\n+              }\n+          },\n         LEFT_SIBLING\n-                {\n-                    @Override\n-                    public int offset( TreeNode node )\n-                    {\n-                        return BYTE_POS_LEFTSIBLING;\n-                    }\n-\n-                    @Override\n-                    public String toString()\n-                    {\n-                        return \"left sibling\";\n-                    }\n-                },\n+          {\n+              @Override\n+              public int offset(TreeNode node)\n+              {\n+                  return BYTE_POS_LEFTSIBLING;\n+              }\n+\n+              @Override\n+              public String toString()\n+              {\n+                  return \"left sibling\";\n+              }\n+          },\n         RIGHT_SIBLING\n-                {\n-                    @Override\n-                    public int offset( TreeNode node )\n-                    {\n-                        return BYTE_POS_RIGHTSIBLING;\n-                    }\n-\n-                    @Override\n-                    public String toString()\n-                    {\n-                        return \"right sibling\";\n-                    }\n-                },\n+          {\n+              @Override\n+              public int offset(TreeNode node)\n+              {\n+                  return BYTE_POS_RIGHTSIBLING;\n+              }\n+\n+              @Override\n+              public String toString()\n+              {\n+                  return \"right sibling\";\n+              }\n+          },\n         SUCCESSOR\n-                {\n-                    @Override\n-                    public int offset( TreeNode node )\n-                    {\n-                        return BYTE_POS_SUCCESSOR;\n-                    }\n-\n-                    @Override\n-                    public String toString()\n-                    {\n-                        return \"successor\";\n-                    }\n-                }\n+          {\n+              @Override\n+              public int offset(TreeNode node)\n+              {\n+                  return BYTE_POS_SUCCESSOR;\n+              }\n+\n+              @Override\n+              public String toString()\n+              {\n+                  return \"successor\";\n+              }\n+          }\n     }\n \n     class ChildPointer implements GBPTreePointerType\n     {\n         private final int pos;\n \n-        ChildPointer( int pos )\n+        ChildPointer(int pos)\n         {\n             this.pos = pos;\n         }\n \n         @Override\n-        public int offset( TreeNode node )\n+        public int offset(TreeNode node)\n         {\n-            return node.childOffset( pos );\n+            return node.childOffset(pos);\n         }\n \n         @Override\n@@ -136,13 +137,13 @@ public interface GBPTreePointerType\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n@@ -153,7 +154,7 @@ public interface GBPTreePointerType\n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( pos );\n+            return Objects.hash(pos);\n         }\n     }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4314",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4314/HeartbeatReelectionListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4314/HeartbeatReelectionListener.java\nindex 2a76fd3d64c..47f1dc6a9b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4314/HeartbeatReelectionListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4314/HeartbeatReelectionListener.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.election;\n \n import org.neo4j.cluster.InstanceId;\n@@ -31,26 +32,26 @@ import org.neo4j.logging.LogProvider;\n public class HeartbeatReelectionListener\n     implements HeartbeatListener\n {\n-    private final Election election;\n-    private final Log log;\n+  private final Election election;\n+  private final Log log;\n \n-    public HeartbeatReelectionListener( Election election, LogProvider logProvider )\n-    {\n-        this.election = election;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public HeartbeatReelectionListener(Election election, LogProvider logProvider)\n+  {\n+    this.election = election;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public void failed( InstanceId server )\n-    {\n-        // Suggest reelection for all roles of this node\n-        log.warn( \" instance \" + server + \" is being demoted since it failed\" );\n-        election.demote( server );\n-    }\n+  @Override\n+  public void failed(InstanceId server)\n+  {\n+    // Suggest reelection for all roles of this node\n+    log.warn(\" instance \" + server + \" is being demoted since it failed\");\n+    election.demote(server);\n+  }\n \n-    @Override\n-    public void alive( InstanceId server )\n-    {\n-        election.performRoleElections();\n-    }\n+  @Override\n+  public void alive(InstanceId server)\n+  {\n+    election.performRoleElections();\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4314/HeartbeatReelectionListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4314/HeartbeatReelectionListener.java\nindex 2a76fd3d64c..ad4f5868ed3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4314/HeartbeatReelectionListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4314/HeartbeatReelectionListener.java\n@@ -28,8 +28,7 @@ import org.neo4j.logging.LogProvider;\n  * If an instance is considered failed, demote it from all its roles in the cluster.\n  * If an instance comes back, ensure that all roles are elected.\n  */\n-public class HeartbeatReelectionListener\n-    implements HeartbeatListener\n+public class HeartbeatReelectionListener implements HeartbeatListener\n {\n     private final Election election;\n     private final Log log;\n@@ -53,4 +52,4 @@ public class HeartbeatReelectionListener\n     {\n         election.performRoleElections();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1336",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "244",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1336/FusionIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1336/FusionIndexProvider.java\nindex f010d40142b..5b8cefa6a4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1336/FusionIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1336/FusionIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import java.io.File;\n@@ -58,211 +59,208 @@ import static org.neo4j.kernel.impl.index.schema.fusion.SlotSelector.TEMPORAL;\n  */\n public class FusionIndexProvider extends IndexProvider\n {\n-    private final boolean archiveFailedIndex;\n-    private final InstanceSelector<IndexProvider> providers;\n-    private final SlotSelector slotSelector;\n-    private final DropAction dropAction;\n+  private final boolean archiveFailedIndex;\n+  private final InstanceSelector<IndexProvider> providers;\n+  private final SlotSelector slotSelector;\n+  private final DropAction dropAction;\n \n-    public FusionIndexProvider(\n-            // good to be strict with specific providers here since this is dev facing\n-            IndexProvider stringProvider,\n-            IndexProvider numberProvider,\n-            IndexProvider spatialProvider,\n-            IndexProvider temporalProvider,\n-            IndexProvider luceneProvider,\n-            SlotSelector slotSelector,\n-            Descriptor descriptor,\n-            int priority,\n-            IndexDirectoryStructure.Factory directoryStructure,\n-            FileSystemAbstraction fs,\n-            boolean archiveFailedIndex )\n-    {\n-        super( descriptor, priority, directoryStructure );\n-        IndexProvider[] providers = new IndexProvider[INSTANCE_COUNT];\n-        fillProvidersArray( providers, stringProvider, numberProvider, spatialProvider, temporalProvider, luceneProvider );\n-        slotSelector.validateSatisfied( providers );\n-        this.archiveFailedIndex = archiveFailedIndex;\n-        this.slotSelector = slotSelector;\n-        this.providers = new InstanceSelector<>( providers );\n-        this.dropAction = new FileSystemDropAction( fs, directoryStructure() );\n-    }\n+  public FusionIndexProvider(\n+      // good to be strict with specific providers here since this is dev facing\n+      IndexProvider stringProvider,\n+      IndexProvider numberProvider,\n+      IndexProvider spatialProvider,\n+      IndexProvider temporalProvider,\n+      IndexProvider luceneProvider,\n+      SlotSelector slotSelector,\n+      Descriptor descriptor,\n+      int priority,\n+      IndexDirectoryStructure.Factory directoryStructure,\n+      FileSystemAbstraction fs,\n+      boolean archiveFailedIndex)\n+  {\n+    super(descriptor, priority, directoryStructure);\n+    IndexProvider[] providers = new IndexProvider[INSTANCE_COUNT];\n+    fillProvidersArray(providers, stringProvider, numberProvider, spatialProvider, temporalProvider, luceneProvider);\n+    slotSelector.validateSatisfied(providers);\n+    this.archiveFailedIndex = archiveFailedIndex;\n+    this.slotSelector = slotSelector;\n+    this.providers = new InstanceSelector<>(providers);\n+    this.dropAction = new FileSystemDropAction(fs, directoryStructure());\n+  }\n \n-    private void fillProvidersArray( IndexProvider[] providers,\n-            IndexProvider stringProvider, IndexProvider numberProvider, IndexProvider spatialProvider,\n-            IndexProvider temporalProvider, IndexProvider luceneProvider )\n-    {\n-        providers[STRING] = stringProvider;\n-        providers[NUMBER] = numberProvider;\n-        providers[SPATIAL] = spatialProvider;\n-        providers[TEMPORAL] = temporalProvider;\n-        providers[LUCENE] = luceneProvider;\n-    }\n+  private void fillProvidersArray(IndexProvider[] providers,\n+                                  IndexProvider stringProvider, IndexProvider numberProvider, IndexProvider spatialProvider,\n+                                  IndexProvider temporalProvider, IndexProvider luceneProvider)\n+  {\n+    providers[STRING] = stringProvider;\n+    providers[NUMBER] = numberProvider;\n+    providers[SPATIAL] = spatialProvider;\n+    providers[TEMPORAL] = temporalProvider;\n+    providers[LUCENE] = luceneProvider;\n+  }\n \n-    @Override\n-    public IndexPopulator getPopulator( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig )\n+  @Override\n+  public IndexPopulator getPopulator(long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig)\n+  {\n+    IndexPopulator[] populators =\n+        providers.instancesAs(new IndexPopulator[INSTANCE_COUNT], provider -> provider.getPopulator(indexId, descriptor, samplingConfig));\n+    return new FusionIndexPopulator(slotSelector, new InstanceSelector<>(populators), indexId, dropAction, archiveFailedIndex);\n+  }\n+\n+  @Override\n+  public IndexAccessor getOnlineAccessor(long indexId, SchemaIndexDescriptor descriptor,\n+                                         IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    IndexAccessor[] accessors =\n+        providers.instancesAs(new IndexAccessor[INSTANCE_COUNT], provider -> provider.getOnlineAccessor(indexId, descriptor, samplingConfig));\n+    return new FusionIndexAccessor(slotSelector, new InstanceSelector<>(accessors), indexId, descriptor, dropAction);\n+  }\n+\n+  @Override\n+  public String getPopulationFailure(long indexId, SchemaIndexDescriptor descriptor) throws IllegalStateException\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    providers.forAll(p -> writeFailure(p.getClass().getSimpleName(), builder, p, indexId, descriptor));\n+    String failure = builder.toString();\n+    if (!failure.isEmpty())\n     {\n-        IndexPopulator[] populators =\n-                providers.instancesAs( new IndexPopulator[INSTANCE_COUNT], provider -> provider.getPopulator( indexId, descriptor, samplingConfig ) );\n-        return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexId, dropAction, archiveFailedIndex );\n+      return failure;\n     }\n+    throw new IllegalStateException(\"None of the indexes were in a failed state\");\n+  }\n \n-    @Override\n-    public IndexAccessor getOnlineAccessor( long indexId, SchemaIndexDescriptor descriptor,\n-            IndexSamplingConfig samplingConfig ) throws IOException\n+  private void writeFailure(String indexName, StringBuilder builder, IndexProvider provider, long indexId, SchemaIndexDescriptor descriptor)\n+  {\n+    try\n     {\n-        IndexAccessor[] accessors =\n-                providers.instancesAs( new IndexAccessor[INSTANCE_COUNT], provider -> provider.getOnlineAccessor( indexId, descriptor, samplingConfig ) );\n-        return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), indexId, descriptor, dropAction );\n+      String failure = provider.getPopulationFailure(indexId, descriptor);\n+      builder.append(indexName);\n+      builder.append(\": \");\n+      builder.append(failure);\n+      builder.append(' ');\n+    } catch (IllegalStateException e)\n+    {   // Just catch\n     }\n+  }\n \n-    @Override\n-    public String getPopulationFailure( long indexId, SchemaIndexDescriptor descriptor ) throws IllegalStateException\n+  @Override\n+  public InternalIndexState getInitialState(long indexId, SchemaIndexDescriptor descriptor)\n+  {\n+    InternalIndexState[] states = providers.instancesAs(new InternalIndexState[INSTANCE_COUNT], p -> p.getInitialState(indexId, descriptor));\n+    if (Arrays.stream(states).anyMatch(state -> state == FAILED))\n     {\n-        StringBuilder builder = new StringBuilder();\n-        providers.forAll( p -> writeFailure( p.getClass().getSimpleName(), builder, p, indexId, descriptor ) );\n-        String failure = builder.toString();\n-        if ( !failure.isEmpty() )\n-        {\n-            return failure;\n-        }\n-        throw new IllegalStateException( \"None of the indexes were in a failed state\" );\n+      // One of the state is FAILED, the whole state must be considered FAILED\n+      return FAILED;\n     }\n-\n-    private void writeFailure( String indexName, StringBuilder builder, IndexProvider provider, long indexId, SchemaIndexDescriptor descriptor )\n+    if (Arrays.stream(states).anyMatch(state -> state == POPULATING))\n     {\n-        try\n-        {\n-            String failure = provider.getPopulationFailure( indexId, descriptor );\n-            builder.append( indexName );\n-            builder.append( \": \" );\n-            builder.append( failure );\n-            builder.append( ' ' );\n-        }\n-        catch ( IllegalStateException e )\n-        {   // Just catch\n-        }\n+      // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n+      return POPULATING;\n     }\n+    // This means that all parts are ONLINE\n+    return InternalIndexState.ONLINE;\n+  }\n \n-    @Override\n-    public InternalIndexState getInitialState( long indexId, SchemaIndexDescriptor descriptor )\n+  @Override\n+  public IndexCapability getCapability(SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    IndexCapability[] capabilities =\n+        providers.instancesAs(new IndexCapability[INSTANCE_COUNT], provider -> provider.getCapability(schemaIndexDescriptor));\n+    return new UnionIndexCapability(capabilities)\n     {\n-        InternalIndexState[] states = providers.instancesAs( new InternalIndexState[INSTANCE_COUNT], p -> p.getInitialState( indexId, descriptor ) );\n-        if ( Arrays.stream( states ).anyMatch( state -> state == FAILED ) )\n-        {\n-            // One of the state is FAILED, the whole state must be considered FAILED\n-            return FAILED;\n-        }\n-        if ( Arrays.stream( states ).anyMatch( state -> state == POPULATING ) )\n+      @Override\n+      public IndexOrder[] orderCapability(ValueCategory... valueCategories)\n+      {\n+        // No order capability when combining results from different indexes\n+        if (valueCategories.length == 1 && valueCategories[0] == ValueCategory.UNKNOWN)\n         {\n-            // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n-            return POPULATING;\n+          return ORDER_NONE;\n         }\n-        // This means that all parts are ONLINE\n-        return InternalIndexState.ONLINE;\n-    }\n+        // Otherwise union of capabilities\n+        return super.orderCapability(valueCategories);\n+      }\n+    };\n+  }\n \n-    @Override\n-    public IndexCapability getCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        IndexCapability[] capabilities =\n-                providers.instancesAs( new IndexCapability[INSTANCE_COUNT], provider -> provider.getCapability( schemaIndexDescriptor ) );\n-        return new UnionIndexCapability( capabilities )\n-        {\n-            @Override\n-            public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n-            {\n-                // No order capability when combining results from different indexes\n-                if ( valueCategories.length == 1 && valueCategories[0] == ValueCategory.UNKNOWN )\n-                {\n-                    return ORDER_NONE;\n-                }\n-                // Otherwise union of capabilities\n-                return super.orderCapability( valueCategories );\n-            }\n-        };\n-    }\n+  @Override\n+  public StoreMigrationParticipant storeMigrationParticipant(FileSystemAbstraction fs, PageCache pageCache)\n+  {\n+    return StoreMigrationParticipant.NOT_PARTICIPATING;\n+  }\n \n-    @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( FileSystemAbstraction fs, PageCache pageCache )\n+  @FunctionalInterface\n+  interface DropAction\n+  {\n+    /**\n+     * Deletes the index directory and everything in it, as last part of dropping an index.\n+     * Can be configured to create archive with content of index directories for future analysis.\n+     *\n+     * @param indexId              the index id, for which directory to drop.\n+     * @param archiveExistentIndex create archive with content of dropped directories\n+     * @throws IOException on I/O error.\n+     * @see GraphDatabaseSettings#archive_failed_index\n+     */\n+    void drop(long indexId, boolean archiveExistentIndex) throws IOException;\n+\n+    /**\n+     * Deletes the index directory and everything in it, as last part of dropping an index.\n+     *\n+     * @param indexId the index id, for which directory to drop.\n+     * @throws IOException on I/O error.\n+     */\n+    default void drop(long indexId) throws IOException\n     {\n-        return StoreMigrationParticipant.NOT_PARTICIPATING;\n+      drop(indexId, false);\n     }\n+  }\n \n-    @FunctionalInterface\n-    interface DropAction\n-    {\n-        /**\n-         * Deletes the index directory and everything in it, as last part of dropping an index.\n-         * Can be configured to create archive with content of index directories for future analysis.\n-         *\n-         * @param indexId the index id, for which directory to drop.\n-         * @param archiveExistentIndex create archive with content of dropped directories\n-         * @throws IOException on I/O error.\n-         * @see GraphDatabaseSettings#archive_failed_index\n-         */\n-        void drop( long indexId, boolean archiveExistentIndex ) throws IOException;\n+  private static class FileSystemDropAction implements DropAction\n+  {\n+    private final FileSystemAbstraction fs;\n+    private final IndexDirectoryStructure directoryStructure;\n \n-        /**\n-         * Deletes the index directory and everything in it, as last part of dropping an index.\n-         *\n-         * @param indexId the index id, for which directory to drop.\n-         * @throws IOException on I/O error.\n-         */\n-        default void drop( long indexId ) throws IOException\n-        {\n-            drop( indexId, false );\n-        }\n+    FileSystemDropAction(FileSystemAbstraction fs, IndexDirectoryStructure directoryStructure)\n+    {\n+      this.fs = fs;\n+      this.directoryStructure = directoryStructure;\n     }\n \n-    private static class FileSystemDropAction implements DropAction\n+    @Override\n+    public void drop(long indexId, boolean archiveExistentIndex) throws IOException\n     {\n-        private final FileSystemAbstraction fs;\n-        private final IndexDirectoryStructure directoryStructure;\n-\n-        FileSystemDropAction( FileSystemAbstraction fs, IndexDirectoryStructure directoryStructure )\n+      File rootIndexDirectory = directoryStructure.directoryForIndex(indexId);\n+      if (archiveExistentIndex && !FileUtils.isEmptyDirectory(rootIndexDirectory))\n+      {\n+        ZipUtils.zip(fs, rootIndexDirectory, archiveFile(rootIndexDirectory));\n+      }\n+      int attempt = 0;\n+      while (attempt < 5)\n+      {\n+        attempt++;\n+        try\n         {\n-            this.fs = fs;\n-            this.directoryStructure = directoryStructure;\n-        }\n-\n-        @Override\n-        public void drop( long indexId, boolean archiveExistentIndex ) throws IOException\n+          fs.deleteRecursively(rootIndexDirectory);\n+          break;\n+        } catch (DirectoryNotEmptyException | NoSuchFileException notEmptyException)\n         {\n-            File rootIndexDirectory = directoryStructure.directoryForIndex( indexId );\n-            if ( archiveExistentIndex && !FileUtils.isEmptyDirectory( rootIndexDirectory ) )\n-            {\n-                ZipUtils.zip( fs, rootIndexDirectory, archiveFile( rootIndexDirectory ) );\n-            }\n-            int attempt = 0;\n-            while ( attempt < 5 )\n-            {\n-                attempt++;\n-                try\n-                {\n-                    fs.deleteRecursively( rootIndexDirectory );\n-                    break;\n-                }\n-                catch ( DirectoryNotEmptyException | NoSuchFileException notEmptyException )\n-                {\n-                    // Looks like someone created a new file in our directory while we where deleting.\n-                    // Let's sleep for a bit and try again.\n-                    try\n-                    {\n-                        Thread.sleep( 100 );\n-                    }\n-                    catch ( InterruptedException e )\n-                    {\n-                        // Let's abandon this attempt to clean up.\n-                        Thread.currentThread().interrupt();\n-                        break;\n-                    }\n-                }\n-            }\n+          // Looks like someone created a new file in our directory while we where deleting.\n+          // Let's sleep for a bit and try again.\n+          try\n+          {\n+            Thread.sleep(100);\n+          } catch (InterruptedException e)\n+          {\n+            // Let's abandon this attempt to clean up.\n+            Thread.currentThread().interrupt();\n+            break;\n+          }\n         }\n+      }\n+    }\n \n-        private File archiveFile( File folder )\n-        {\n-            return new File( folder.getParent(), \"archive-\" + folder.getName() + \"-\" + System.currentTimeMillis() + \".zip\" );\n-        }\n+    private File archiveFile(File folder)\n+    {\n+      return new File(folder.getParent(), \"archive-\" + folder.getName() + \"-\" + System.currentTimeMillis() + \".zip\");\n     }\n+  }\n }\n",
            "diff_size": 248
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1336/FusionIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1336/FusionIndexProvider.java\nindex f010d40142b..f24dd4e99ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1336/FusionIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1336/FusionIndexProvider.java\n@@ -63,16 +63,14 @@ public class FusionIndexProvider extends IndexProvider\n     private final SlotSelector slotSelector;\n     private final DropAction dropAction;\n \n-    public FusionIndexProvider(\n-            // good to be strict with specific providers here since this is dev facing\n+    public FusionIndexProvider( // good to be strict with specific providers here since this is dev facing\n             IndexProvider stringProvider,\n             IndexProvider numberProvider,\n             IndexProvider spatialProvider,\n             IndexProvider temporalProvider,\n             IndexProvider luceneProvider,\n             SlotSelector slotSelector,\n-            Descriptor descriptor,\n-            int priority,\n+            Descriptor descriptor, int priority,\n             IndexDirectoryStructure.Factory directoryStructure,\n             FileSystemAbstraction fs,\n             boolean archiveFailedIndex )\n@@ -101,18 +99,16 @@ public class FusionIndexProvider extends IndexProvider\n     @Override\n     public IndexPopulator getPopulator( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig )\n     {\n-        IndexPopulator[] populators =\n-                providers.instancesAs( new IndexPopulator[INSTANCE_COUNT], provider -> provider.getPopulator( indexId, descriptor, samplingConfig ) );\n-        return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexId, dropAction, archiveFailedIndex );\n+        IndexPopulator[] populators = providers.instancesAs( new IndexPopulator[INSTANCE_COUNT], provider -> provider.getPopulator( indexId, descriptor, samplingConfig ) );\n+return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexId, dropAction, archiveFailedIndex );\n     }\n \n     @Override\n     public IndexAccessor getOnlineAccessor( long indexId, SchemaIndexDescriptor descriptor,\n             IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n-        IndexAccessor[] accessors =\n-                providers.instancesAs( new IndexAccessor[INSTANCE_COUNT], provider -> provider.getOnlineAccessor( indexId, descriptor, samplingConfig ) );\n-        return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), indexId, descriptor, dropAction );\n+{\n+        IndexAccessor[] accessors = providers.instancesAs( new IndexAccessor[INSTANCE_COUNT], provider -> provider.getOnlineAccessor( indexId, descriptor, samplingConfig ) );\n+return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), indexId, descriptor, dropAction );\n     }\n \n     @Override\n@@ -139,7 +135,8 @@ public class FusionIndexProvider extends IndexProvider\n             builder.append( ' ' );\n         }\n         catch ( IllegalStateException e )\n-        {   // Just catch\n+        {\n+    // Just catch\n         }\n     }\n \n@@ -152,7 +149,8 @@ public class FusionIndexProvider extends IndexProvider\n             // One of the state is FAILED, the whole state must be considered FAILED\n             return FAILED;\n         }\n-        if ( Arrays.stream( states ).anyMatch( state -> state == POPULATING ) )\n+\n+if ( Arrays.stream( states ).anyMatch( state -> state == POPULATING ) )\n         {\n             // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n             return POPULATING;\n@@ -164,9 +162,8 @@ public class FusionIndexProvider extends IndexProvider\n     @Override\n     public IndexCapability getCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n     {\n-        IndexCapability[] capabilities =\n-                providers.instancesAs( new IndexCapability[INSTANCE_COUNT], provider -> provider.getCapability( schemaIndexDescriptor ) );\n-        return new UnionIndexCapability( capabilities )\n+        IndexCapability[] capabilities = providers.instancesAs( new IndexCapability[INSTANCE_COUNT], provider -> provider.getCapability( schemaIndexDescriptor ) );\n+return new UnionIndexCapability( capabilities )\n         {\n             @Override\n             public IndexOrder[] orderCapability( ValueCategory... valueCategories )\n@@ -265,4 +262,4 @@ public class FusionIndexProvider extends IndexProvider\n             return new File( folder.getParent(), \"archive-\" + folder.getName() + \"-\" + System.currentTimeMillis() + \".zip\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2585",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2585/ThreadAheadReadable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2585/ThreadAheadReadable.java\nindex c007a7424d6..34cb5979d18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2585/ThreadAheadReadable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2585/ThreadAheadReadable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.IOException;\n@@ -27,89 +28,89 @@ import java.io.IOException;\n  */\n public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n {\n-    private final CharReadable actual;\n-    private SectionedCharBuffer theOtherBuffer;\n+  private final CharReadable actual;\n+  private SectionedCharBuffer theOtherBuffer;\n \n-    private String sourceDescription;\n-    // the variable below is read and changed in both the ahead thread and the caller,\n-    // but doesn't have to be volatile since it piggy-backs off of hasReadAhead.\n-    private String newSourceDescription;\n+  private String sourceDescription;\n+  // the variable below is read and changed in both the ahead thread and the caller,\n+  // but doesn't have to be volatile since it piggy-backs off of hasReadAhead.\n+  private String newSourceDescription;\n \n-    private ThreadAheadReadable( CharReadable actual, int bufferSize )\n-    {\n-        super( actual );\n-        this.actual = actual;\n-        this.theOtherBuffer = new SectionedCharBuffer( bufferSize );\n-        this.sourceDescription = actual.sourceDescription();\n-        start();\n-    }\n+  private ThreadAheadReadable(CharReadable actual, int bufferSize)\n+  {\n+    super(actual);\n+    this.actual = actual;\n+    this.theOtherBuffer = new SectionedCharBuffer(bufferSize);\n+    this.sourceDescription = actual.sourceDescription();\n+    start();\n+  }\n \n-    /**\n-     * The one calling read doesn't actually read, since reading is up to the thread in here.\n-     * Instead the caller just waits for this thread to have fully read the next buffer and\n-     * flips over to that buffer, returning it.\n-     */\n-    @Override\n-    public SectionedCharBuffer read( SectionedCharBuffer buffer, int from ) throws IOException\n-    {\n-        waitUntilReadAhead();\n-\n-        // flip the buffers\n-        SectionedCharBuffer resultBuffer = theOtherBuffer;\n-        buffer.compact( resultBuffer, from );\n-        theOtherBuffer = buffer;\n-\n-        // make any change in source official\n-        if ( newSourceDescription != null )\n-        {\n-            sourceDescription = newSourceDescription;\n-            newSourceDescription = null;\n-        }\n-\n-        pokeReader();\n-        return resultBuffer;\n-    }\n+  /**\n+   * The one calling read doesn't actually read, since reading is up to the thread in here.\n+   * Instead the caller just waits for this thread to have fully read the next buffer and\n+   * flips over to that buffer, returning it.\n+   */\n+  @Override\n+  public SectionedCharBuffer read(SectionedCharBuffer buffer, int from) throws IOException\n+  {\n+    waitUntilReadAhead();\n \n-    @Override\n-    public int read( char[] into, int offset, int length )\n-    {\n-        throw new UnsupportedOperationException( \"Unsupported for now\" );\n-    }\n+    // flip the buffers\n+    SectionedCharBuffer resultBuffer = theOtherBuffer;\n+    buffer.compact(resultBuffer, from);\n+    theOtherBuffer = buffer;\n \n-    @Override\n-    protected boolean readAhead() throws IOException\n+    // make any change in source official\n+    if (newSourceDescription != null)\n     {\n-        theOtherBuffer = actual.read( theOtherBuffer, theOtherBuffer.front() );\n-        String sourceDescriptionAfterRead = actual.sourceDescription();\n-        if ( !sourceDescription.equals( sourceDescriptionAfterRead ) )\n-        {\n-            newSourceDescription = sourceDescriptionAfterRead;\n-        }\n-\n-        return theOtherBuffer.hasAvailable();\n+      sourceDescription = newSourceDescription;\n+      newSourceDescription = null;\n     }\n \n-    @Override\n-    public long position()\n-    {\n-        return actual.position();\n-    }\n+    pokeReader();\n+    return resultBuffer;\n+  }\n \n-    @Override\n-    public String sourceDescription()\n-    {   // Returns the source information of where this reader is perceived to be. The fact that this\n-        // thing reads ahead should be visible in this description.\n-        return sourceDescription;\n-    }\n+  @Override\n+  public int read(char[] into, int offset, int length)\n+  {\n+    throw new UnsupportedOperationException(\"Unsupported for now\");\n+  }\n \n-    public static CharReadable threadAhead( CharReadable actual, int bufferSize )\n+  @Override\n+  protected boolean readAhead() throws IOException\n+  {\n+    theOtherBuffer = actual.read(theOtherBuffer, theOtherBuffer.front());\n+    String sourceDescriptionAfterRead = actual.sourceDescription();\n+    if (!sourceDescription.equals(sourceDescriptionAfterRead))\n     {\n-        return new ThreadAheadReadable( actual, bufferSize );\n+      newSourceDescription = sourceDescriptionAfterRead;\n     }\n \n-    @Override\n-    public long length()\n-    {\n-        return actual.length();\n-    }\n+    return theOtherBuffer.hasAvailable();\n+  }\n+\n+  @Override\n+  public long position()\n+  {\n+    return actual.position();\n+  }\n+\n+  @Override\n+  public String sourceDescription()\n+  {   // Returns the source information of where this reader is perceived to be. The fact that this\n+    // thing reads ahead should be visible in this description.\n+    return sourceDescription;\n+  }\n+\n+  public static CharReadable threadAhead(CharReadable actual, int bufferSize)\n+  {\n+    return new ThreadAheadReadable(actual, bufferSize);\n+  }\n+\n+  @Override\n+  public long length()\n+  {\n+    return actual.length();\n+  }\n }\n",
            "diff_size": 99
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2585/ThreadAheadReadable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2585/ThreadAheadReadable.java\nindex c007a7424d6..21ede264fb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2585/ThreadAheadReadable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2585/ThreadAheadReadable.java\n@@ -97,7 +97,8 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n \n     @Override\n     public String sourceDescription()\n-    {   // Returns the source information of where this reader is perceived to be. The fact that this\n+    {\n+    // Returns the source information of where this reader is perceived to be. The fact that this\n         // thing reads ahead should be visible in this description.\n         return sourceDescription;\n     }\n@@ -112,4 +113,4 @@ public class ThreadAheadReadable extends ThreadAhead implements CharReadable\n     {\n         return actual.length();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "393",
    "information": {
        "errors": [
            {
                "line": "302",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n        resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/393/BpelObjectFactory.java\nindex 4f1357cbd11..5334dcc1067 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/393/BpelObjectFactory.java\n@@ -299,7 +299,8 @@ public class BpelObjectFactory {\n         LocalEntityResolver resolver = new LocalEntityResolver();\n         resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n+        resolver.register(Bpel20QNames\n+        .NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/393/BpelObjectFactory.java\nindex 4f1357cbd11..25e9460293c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/393/BpelObjectFactory.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.compiler.bom;\n \n import org.apache.commons.logging.Log;\n@@ -39,282 +40,284 @@ import java.util.Map;\n \n public class BpelObjectFactory {\n \n-    private static final Log __log = LogFactory.getLog(BpelObjectFactory.class);\n-    private static BpelObjectFactory __instance = new BpelObjectFactory();\n-    \n-    public static final String WSDL = \"http://schemas.xmlsoap.org/wsdl/\";\n-    public static final String XML = \"http://www.w3.org/2001/xml.xsd\";\n-    \n-    private final Map<QName, Class<? extends BpelObject>> _mappings = new HashMap<QName, Class<? extends BpelObject>>();\n+  private static final Log __log = LogFactory.getLog(BpelObjectFactory.class);\n+  private static BpelObjectFactory __instance = new BpelObjectFactory();\n \n-    private Class[] __CTOR = { Element.class };\n+  public static final String WSDL = \"http://schemas.xmlsoap.org/wsdl/\";\n+  public static final String XML = \"http://www.w3.org/2001/xml.xsd\";\n \n-    public BpelObjectFactory() {\n-        \n-        //\n-        // BPEL 2.0 Final Mappings\n-        //\n-        _mappings.put(Bpel20QNames.FINAL_PROCESS, Process.class);\n-        _mappings.put(Bpel20QNames.FINAL_ASSIGN, AssignActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_EMPTY, EmptyActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_INVOKE, InvokeActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_RECEIVE, ReceiveActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_REPLY, ReplyActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_WAIT, WaitActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_THROW, ThrowActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_COMPENSATE, CompensateActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_COMPENSATE_SCOPE, CompensateScopeActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_RETHROW, RethrowActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_EXIT, TerminateActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_FLOW, FlowActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_SWITCH, IfActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_IF, IfActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_WHILE, WhileActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_REPEATUNTIL,RepeatUntilActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_SEQUENCE, SequenceActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_PICK, PickActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_SCOPE, ScopeActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_FOREACH, ForEachActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_COPY, Copy.class);\n-        _mappings.put(Bpel20QNames.FINAL_CATCH, Catch.class);\n-        _mappings.put(Bpel20QNames.FINAL_CATCHALL, Catch.class);\n-        _mappings.put(Bpel20QNames.FINAL_TO, To.class);\n-        _mappings.put(Bpel20QNames.FINAL_FROM, From.class);\n-        _mappings.put(Bpel20QNames.FINAL_START_COUNTER_VALUE, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_FINAL_COUNTER_VALUE, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_CORRELATION, Correlation.class);\n-        _mappings.put(Bpel20QNames.FINAL_CORRELATIONSET, CorrelationSet.class);\n-        _mappings.put(Bpel20QNames.FINAL_COMPENSATE, CompensateActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_COMPENSATE_SCOPE, CompensateScopeActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_COMPENSATIONHANDLER, CompensationHandler.class);\n-        _mappings.put(Bpel20QNames.FINAL_FAULTHANDLERS, FaultHandler.class);\n-        _mappings.put(Bpel20QNames.FINAL_TERMINATIONHANDLER, TerminationHandler.class);\n-        _mappings.put(Bpel20QNames.FINAL_CASE, IfActivity.Case.class);\n-        _mappings.put(Bpel20QNames.FINAL_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_UNTIL, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_FOR, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_REPEAT_EVERY, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_ONALARM, OnAlarm.class);\n-        _mappings.put(Bpel20QNames.FINAL_ONEVENT, OnEvent.class);\n-        _mappings.put(Bpel20QNames.FINAL_ONMESSAGE, OnMessage.class);\n-        _mappings.put(Bpel20QNames.FINAL_LITERAL, LiteralVal.class);\n-        _mappings.put(Bpel20QNames.FINAL_PLINKTYPE, PartnerLinkType.class);\n-        _mappings.put(Bpel20QNames.FINAL_PLINKROLE, PartnerLinkType.Role.class);\n-        _mappings.put(Bpel20QNames.FINAL_PROPALIAS, PropertyAlias.class);\n-        _mappings.put(Bpel20QNames.FINAL_PROPQUERY, Query.class);\n-        _mappings.put(Bpel20QNames.FINAL_PROPERTY,  Property.class);\n-        _mappings.put(Bpel20QNames.FINAL_VARIABLES, Variables.class);\n-        _mappings.put(Bpel20QNames.FINAL_VARIABLE, Variable.class);\n-        _mappings.put(Bpel20QNames.FINAL_PARTNERLINKS, PartnerLinks.class);\n-        _mappings.put(Bpel20QNames.FINAL_PARTNERLINK, PartnerLink.class);\n-        _mappings.put(Bpel20QNames.FINAL_CORRELATIONSETS, CorrelationSets.class);\n-        _mappings.put(Bpel20QNames.FINAL_JOIN_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_LINKS, Links.class );\n-        _mappings.put(Bpel20QNames.FINAL_LINK, Link.class);\n-        _mappings.put(Bpel20QNames.FINAL_SOURCE, LinkSource.class);\n-        _mappings.put(Bpel20QNames.FINAL_TARGET, LinkTarget.class);\n-        _mappings.put(Bpel20QNames.FINAL_SOURCES, BpelObject.class);\n-        _mappings.put(Bpel20QNames.FINAL_TARGETS, BpelObject.class);\n-        _mappings.put(Bpel20QNames.FINAL_IMPORT, Import.class);\n-        _mappings.put(Bpel20QNames.FINAL_QUERY, Query.class);\n-        _mappings.put(Bpel20QNames.FINAL_TRANSITION_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_THEN, Case.class);\n-        _mappings.put(Bpel20QNames.FINAL_ELSE, Case.class);\n-        _mappings.put(Bpel20QNames.FINAL_ELSEIF, Case.class);\n-        _mappings.put(Bpel20QNames.FINAL_CORRELATIONS, Correlations.class);\n-        _mappings.put(Bpel20QNames.FINAL_EVENTHANDLERS, BpelObject.class);\n-        _mappings.put(Bpel20QNames.FINAL_TARGETS,Targets.class);\n-        _mappings.put(Bpel20QNames.FINAL_SOURCES,Sources.class);\n-        _mappings.put(Bpel20QNames.FINAL_EXTENSIONS,Extensions.class);\n-        _mappings.put(Bpel20QNames.FINAL_EXTENSION,Extension.class);\n-        _mappings.put(Bpel20QNames.FINAL_EXTENSION_ACTIVITY,ExtensionActivity.class);\n-        _mappings.put(Bpel20QNames.FINAL_EXTENSION_ASSIGN_OPERATION,ExtensionAssignOperation.class);\n+  private final Map<QName, Class<? extends BpelObject>> _mappings = new HashMap<QName, Class<? extends BpelObject>>();\n \n-        //\n-        // BPEL 2.0 draft Mappings\n-        //\n-        _mappings.put(Bpel20QNames.PROCESS, Process.class);\n-        _mappings.put(Bpel20QNames.ASSIGN, AssignActivity.class);\n-        _mappings.put(Bpel20QNames.EMPTY, EmptyActivity.class);\n-        _mappings.put(Bpel20QNames.INVOKE, InvokeActivity.class);\n-        _mappings.put(Bpel20QNames.RECEIVE, ReceiveActivity.class);\n-        _mappings.put(Bpel20QNames.REPLY, ReplyActivity.class);\n-        _mappings.put(Bpel20QNames.WAIT, WaitActivity.class);\n-        _mappings.put(Bpel20QNames.THROW, ThrowActivity.class);\n-        _mappings.put(Bpel20QNames.COMPENSATE, CompensateScopeActivity.class);\n-        _mappings.put(Bpel20QNames.RETHROW, RethrowActivity.class);\n-        _mappings.put(Bpel20QNames.EXIT, TerminateActivity.class);\n-        _mappings.put(Bpel20QNames.FLOW, FlowActivity.class);\n-        _mappings.put(Bpel20QNames.SWITCH, IfActivity.class);\n-        _mappings.put(Bpel20QNames.IF, IfActivity.class);\n-        _mappings.put(Bpel20QNames.WHILE, WhileActivity.class);\n-        _mappings.put(Bpel20QNames.REPEATUNTIL,RepeatUntilActivity.class);\n-        _mappings.put(Bpel20QNames.SEQUENCE, SequenceActivity.class);\n-        _mappings.put(Bpel20QNames.PICK, PickActivity.class);\n-        _mappings.put(Bpel20QNames.SCOPE, ScopeActivity.class);\n-        _mappings.put(Bpel20QNames.FOREACH, ForEachActivity.class);\n-        _mappings.put(Bpel20QNames.COPY, Copy.class);\n-        _mappings.put(Bpel20QNames.CATCH, Catch.class);\n-        _mappings.put(Bpel20QNames.CATCHALL, Catch.class);\n-        _mappings.put(Bpel20QNames.TO, To.class);\n-        _mappings.put(Bpel20QNames.FROM, From.class);\n-        _mappings.put(Bpel20QNames.START_COUNTER_VALUE, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_COUNTER_VALUE, Expression.class);\n-        _mappings.put(Bpel20QNames.CORRELATION, Correlation.class);\n-        _mappings.put(Bpel20QNames.CORRELATIONSET, CorrelationSet.class);\n-        _mappings.put(Bpel20QNames.COMPENSATE, CompensateScopeActivity.class);\n-        _mappings.put(Bpel20QNames.COMPENSATIONHANDLER, CompensationHandler.class);\n-        _mappings.put(Bpel20QNames.FAULTHANDLERS, FaultHandler.class);\n-        _mappings.put(Bpel20QNames.TERMINATIONHANDLER, TerminationHandler.class);\n-        _mappings.put(Bpel20QNames.CASE, IfActivity.Case.class);\n-        _mappings.put(Bpel20QNames.CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.UNTIL, Expression.class);\n-        _mappings.put(Bpel20QNames.FOR, Expression.class);\n-        _mappings.put(Bpel20QNames.REPEAT_EVERY, Expression.class);\n-        _mappings.put(Bpel20QNames.ONALARM, OnAlarm.class);\n-        _mappings.put(Bpel20QNames.ONEVENT, OnEvent.class);\n-        _mappings.put(Bpel20QNames.ONMESSAGE, OnMessage.class);\n-        _mappings.put(Bpel20QNames.LITERAL, LiteralVal.class);\n-        _mappings.put(Bpel20QNames.PLINKTYPE, PartnerLinkType.class);\n-        _mappings.put(Bpel20QNames.PLINKROLE, PartnerLinkType.Role.class);\n-        _mappings.put(Bpel20QNames.PROPALIAS, PropertyAlias.class);\n-        _mappings.put(Bpel20QNames.PROPERTY,  Property.class);\n-        _mappings.put(Bpel20QNames.VARIABLES, Variables.class);\n-        _mappings.put(Bpel20QNames.VARIABLE, Variable.class);\n-        _mappings.put(Bpel20QNames.PARTNERLINKS, PartnerLinks.class);\n-        _mappings.put(Bpel20QNames.PARTNERLINK, PartnerLink.class);\n-        _mappings.put(Bpel20QNames.CORRELATIONSETS, CorrelationSets.class);\n-        _mappings.put(Bpel20QNames.JOIN_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.LINKS, Links.class );\n-        _mappings.put(Bpel20QNames.LINK, Link.class);\n-        _mappings.put(Bpel20QNames.SOURCE, LinkSource.class);\n-        _mappings.put(Bpel20QNames.TARGET, LinkTarget.class);\n-        _mappings.put(Bpel20QNames.SOURCES, BpelObject.class);\n-        _mappings.put(Bpel20QNames.TARGETS, BpelObject.class);\n-        _mappings.put(Bpel20QNames.IMPORT, Import.class);\n-        _mappings.put(Bpel20QNames.QUERY, Query.class);\n-        _mappings.put(Bpel20QNames.TRANSITION_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.THEN, Case.class);\n-        _mappings.put(Bpel20QNames.ELSE, Case.class);\n-        _mappings.put(Bpel20QNames.ELSEIF, Case.class);\n-        _mappings.put(Bpel20QNames.CORRELATIONS, Correlations.class);\n-        _mappings.put(Bpel20QNames.EVENTHANDLERS, BpelObject.class);\n-        _mappings.put(Bpel20QNames.TARGETS,Targets.class);\n-        _mappings.put(Bpel20QNames.SOURCES,Sources.class);\n-        _mappings.put(Bpel20QNames.RDF_LABEL,RdfLabel.class);\n-        _mappings.put(Bpel20QNames.EXTENSIONS,Extensions.class);\n-        _mappings.put(Bpel20QNames.EXTENSION,Extension.class);\n-        _mappings.put(Bpel20QNames.EXTENSION_ACTIVITY,ExtensionActivity.class);\n-        _mappings.put(Bpel20QNames.EXTENSIBLE_ASSIGN,ExtensionAssignOperation.class);\n+  private Class[] __CTOR = {Element.class};\n \n-        //\n-        // BPEL 1.1 Mappings\n-        //\n-        _mappings.put(Bpel11QNames.PROCESS, Process.class);\n-        _mappings.put(Bpel11QNames.ASSIGN, AssignActivity.class);\n-        _mappings.put(Bpel11QNames.EMPTY, EmptyActivity.class);\n-        _mappings.put(Bpel11QNames.INVOKE, InvokeActivity.class);\n-        _mappings.put(Bpel11QNames.RECEIVE, ReceiveActivity.class);\n-        _mappings.put(Bpel11QNames.REPLY, ReplyActivity.class);\n-        _mappings.put(Bpel11QNames.WAIT, WaitActivity.class);\n-        _mappings.put(Bpel11QNames.THROW, ThrowActivity.class);\n-        _mappings.put(Bpel11QNames.TERMINATE, TerminateActivity.class);\n-        _mappings.put(Bpel11QNames.FLOW, FlowActivity.class);\n-        _mappings.put(Bpel11QNames.SWITCH, SwitchActivity.class);\n-        _mappings.put(Bpel11QNames.WHILE, WhileActivity11.class);\n-        _mappings.put(Bpel11QNames.SEQUENCE, SequenceActivity.class);\n-        _mappings.put(Bpel11QNames.PICK, PickActivity.class);\n-        _mappings.put(Bpel11QNames.SCOPE, ScopeActivity.class);\n-        _mappings.put(Bpel11QNames.COPY, Copy.class);\n-        _mappings.put(Bpel11QNames.CATCH, Catch.class);\n-        _mappings.put(Bpel11QNames.CATCHALL, Catch.class);\n-        _mappings.put(Bpel11QNames.TO, To.class);\n-        _mappings.put(Bpel11QNames.FROM, From.class);\n-        _mappings.put(Bpel11QNames.CORRELATION, Correlation.class);\n-        _mappings.put(Bpel11QNames.CORRELATIONSET, CorrelationSet.class);\n-        _mappings.put(Bpel11QNames.COMPENSATE, CompensateScopeActivity.class);\n-        _mappings.put(Bpel11QNames.COMPENSATIONHANDLER, CompensationHandler.class);\n-        _mappings.put(Bpel11QNames.FAULTHANDLERS, FaultHandler.class);\n-        _mappings.put(Bpel11QNames.CASE, SwitchActivity.Case.class);\n-        _mappings.put(Bpel11QNames.OTHERWISE, SwitchActivity.Case.class);\n-        _mappings.put(Bpel11QNames.ONALARM, OnAlarm.class);\n-        _mappings.put(Bpel11QNames.ONMESSAGE, OnMessage.class);\n-        _mappings.put(Bpel11QNames.PLINKTYPE, PartnerLinkType.class);\n-        _mappings.put(Bpel11QNames.PLINKROLE, PartnerLinkType.Role11.class);\n-        _mappings.put(Bpel11QNames.PORTTYPE, PartnerLinkType.Role11.PortType11.class);\n-        _mappings.put(Bpel11QNames.PROPALIAS, PropertyAlias11.class);\n-        _mappings.put(Bpel11QNames.PROPERTY,  Property.class);\n-        _mappings.put(Bpel11QNames.VARIABLES, Variables.class);\n-        _mappings.put(Bpel11QNames.VARIABLE, Variable.class);\n-        _mappings.put(Bpel11QNames.PARTNERLINKS, PartnerLinks.class);\n-        _mappings.put(Bpel11QNames.PARTNERLINK, PartnerLink.class);\n-        _mappings.put(Bpel11QNames.CORRELATIONSETS, CorrelationSets.class);\n-        _mappings.put(Bpel11QNames.LINKS, Links.class );\n-        _mappings.put(Bpel11QNames.LINK, Link.class);\n-        _mappings.put(Bpel11QNames.SOURCE, LinkSource.class);\n-        _mappings.put(Bpel11QNames.TARGET, LinkTarget.class);\n-        _mappings.put(Bpel11QNames.QUERY, Query.class);\n-        _mappings.put(Bpel11QNames.CORRELATIONS, Correlations.class);\n-        _mappings.put(Bpel11QNames.EVENTHANDLERS, BpelObject.class);\n-        \n-        //\n-        // Extensibility Elements Mappings\n-        //\n-        _mappings.put(ExtensibilityQNames.FAILURE_HANDLING, FailureHandling.class);\n-        _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_RETRY_FOR, FailureHandling.RetryFor.class);\n-        _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_RETRY_DELAY, FailureHandling.RetryDelay.class);\n-        _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_FAULT_ON, FailureHandling.FaultOnFailure.class);\n-        \n-    }\n+  public BpelObjectFactory() {\n \n-    public static BpelObjectFactory getInstance() {\n-        return __instance;\n-    }\n+    //\n+    // BPEL 2.0 Final Mappings\n+    //\n+    _mappings.put(Bpel20QNames.FINAL_PROCESS, Process.class);\n+    _mappings.put(Bpel20QNames.FINAL_ASSIGN, AssignActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_EMPTY, EmptyActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_INVOKE, InvokeActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_RECEIVE, ReceiveActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_REPLY, ReplyActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_WAIT, WaitActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_THROW, ThrowActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_COMPENSATE, CompensateActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_COMPENSATE_SCOPE, CompensateScopeActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_RETHROW, RethrowActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_EXIT, TerminateActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_FLOW, FlowActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_SWITCH, IfActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_IF, IfActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_WHILE, WhileActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_REPEATUNTIL, RepeatUntilActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_SEQUENCE, SequenceActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_PICK, PickActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_SCOPE, ScopeActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_FOREACH, ForEachActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_COPY, Copy.class);\n+    _mappings.put(Bpel20QNames.FINAL_CATCH, Catch.class);\n+    _mappings.put(Bpel20QNames.FINAL_CATCHALL, Catch.class);\n+    _mappings.put(Bpel20QNames.FINAL_TO, To.class);\n+    _mappings.put(Bpel20QNames.FINAL_FROM, From.class);\n+    _mappings.put(Bpel20QNames.FINAL_START_COUNTER_VALUE, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_FINAL_COUNTER_VALUE, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_CORRELATION, Correlation.class);\n+    _mappings.put(Bpel20QNames.FINAL_CORRELATIONSET, CorrelationSet.class);\n+    _mappings.put(Bpel20QNames.FINAL_COMPENSATE, CompensateActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_COMPENSATE_SCOPE, CompensateScopeActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_COMPENSATIONHANDLER, CompensationHandler.class);\n+    _mappings.put(Bpel20QNames.FINAL_FAULTHANDLERS, FaultHandler.class);\n+    _mappings.put(Bpel20QNames.FINAL_TERMINATIONHANDLER, TerminationHandler.class);\n+    _mappings.put(Bpel20QNames.FINAL_CASE, IfActivity.Case.class);\n+    _mappings.put(Bpel20QNames.FINAL_CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_UNTIL, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_FOR, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_REPEAT_EVERY, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_ONALARM, OnAlarm.class);\n+    _mappings.put(Bpel20QNames.FINAL_ONEVENT, OnEvent.class);\n+    _mappings.put(Bpel20QNames.FINAL_ONMESSAGE, OnMessage.class);\n+    _mappings.put(Bpel20QNames.FINAL_LITERAL, LiteralVal.class);\n+    _mappings.put(Bpel20QNames.FINAL_PLINKTYPE, PartnerLinkType.class);\n+    _mappings.put(Bpel20QNames.FINAL_PLINKROLE, PartnerLinkType.Role.class);\n+    _mappings.put(Bpel20QNames.FINAL_PROPALIAS, PropertyAlias.class);\n+    _mappings.put(Bpel20QNames.FINAL_PROPQUERY, Query.class);\n+    _mappings.put(Bpel20QNames.FINAL_PROPERTY, Property.class);\n+    _mappings.put(Bpel20QNames.FINAL_VARIABLES, Variables.class);\n+    _mappings.put(Bpel20QNames.FINAL_VARIABLE, Variable.class);\n+    _mappings.put(Bpel20QNames.FINAL_PARTNERLINKS, PartnerLinks.class);\n+    _mappings.put(Bpel20QNames.FINAL_PARTNERLINK, PartnerLink.class);\n+    _mappings.put(Bpel20QNames.FINAL_CORRELATIONSETS, CorrelationSets.class);\n+    _mappings.put(Bpel20QNames.FINAL_JOIN_CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_LINKS, Links.class);\n+    _mappings.put(Bpel20QNames.FINAL_LINK, Link.class);\n+    _mappings.put(Bpel20QNames.FINAL_SOURCE, LinkSource.class);\n+    _mappings.put(Bpel20QNames.FINAL_TARGET, LinkTarget.class);\n+    _mappings.put(Bpel20QNames.FINAL_SOURCES, BpelObject.class);\n+    _mappings.put(Bpel20QNames.FINAL_TARGETS, BpelObject.class);\n+    _mappings.put(Bpel20QNames.FINAL_IMPORT, Import.class);\n+    _mappings.put(Bpel20QNames.FINAL_QUERY, Query.class);\n+    _mappings.put(Bpel20QNames.FINAL_TRANSITION_CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_THEN, Case.class);\n+    _mappings.put(Bpel20QNames.FINAL_ELSE, Case.class);\n+    _mappings.put(Bpel20QNames.FINAL_ELSEIF, Case.class);\n+    _mappings.put(Bpel20QNames.FINAL_CORRELATIONS, Correlations.class);\n+    _mappings.put(Bpel20QNames.FINAL_EVENTHANDLERS, BpelObject.class);\n+    _mappings.put(Bpel20QNames.FINAL_TARGETS, Targets.class);\n+    _mappings.put(Bpel20QNames.FINAL_SOURCES, Sources.class);\n+    _mappings.put(Bpel20QNames.FINAL_EXTENSIONS, Extensions.class);\n+    _mappings.put(Bpel20QNames.FINAL_EXTENSION, Extension.class);\n+    _mappings.put(Bpel20QNames.FINAL_EXTENSION_ACTIVITY, ExtensionActivity.class);\n+    _mappings.put(Bpel20QNames.FINAL_EXTENSION_ASSIGN_OPERATION, ExtensionAssignOperation.class);\n \n-    public BpelObject createBpelObject(Element el, URI uri) {\n-        QName type = new QName(el.getNamespaceURI(), el.getLocalName());\n-        Class cls = _mappings.get(type);\n-        if (cls == null) {\n-            __log.warn(\"Unrecognized element in BPEL dom: \" + type);\n-            return new BpelObject(el);\n-        }\n-        try {\n-            Constructor ctor = cls.getConstructor(__CTOR);\n-            BpelObject bo =(BpelObject) ctor.newInstance(new Object[]{el});\n-            bo.setURI(uri);\n-            return bo;\n-        } catch (Exception ex) {\n-            throw new RuntimeException(\"Internal compiler error\", ex); \n-        }\n-    }\n+    //\n+    // BPEL 2.0 draft Mappings\n+    //\n+    _mappings.put(Bpel20QNames.PROCESS, Process.class);\n+    _mappings.put(Bpel20QNames.ASSIGN, AssignActivity.class);\n+    _mappings.put(Bpel20QNames.EMPTY, EmptyActivity.class);\n+    _mappings.put(Bpel20QNames.INVOKE, InvokeActivity.class);\n+    _mappings.put(Bpel20QNames.RECEIVE, ReceiveActivity.class);\n+    _mappings.put(Bpel20QNames.REPLY, ReplyActivity.class);\n+    _mappings.put(Bpel20QNames.WAIT, WaitActivity.class);\n+    _mappings.put(Bpel20QNames.THROW, ThrowActivity.class);\n+    _mappings.put(Bpel20QNames.COMPENSATE, CompensateScopeActivity.class);\n+    _mappings.put(Bpel20QNames.RETHROW, RethrowActivity.class);\n+    _mappings.put(Bpel20QNames.EXIT, TerminateActivity.class);\n+    _mappings.put(Bpel20QNames.FLOW, FlowActivity.class);\n+    _mappings.put(Bpel20QNames.SWITCH, IfActivity.class);\n+    _mappings.put(Bpel20QNames.IF, IfActivity.class);\n+    _mappings.put(Bpel20QNames.WHILE, WhileActivity.class);\n+    _mappings.put(Bpel20QNames.REPEATUNTIL, RepeatUntilActivity.class);\n+    _mappings.put(Bpel20QNames.SEQUENCE, SequenceActivity.class);\n+    _mappings.put(Bpel20QNames.PICK, PickActivity.class);\n+    _mappings.put(Bpel20QNames.SCOPE, ScopeActivity.class);\n+    _mappings.put(Bpel20QNames.FOREACH, ForEachActivity.class);\n+    _mappings.put(Bpel20QNames.COPY, Copy.class);\n+    _mappings.put(Bpel20QNames.CATCH, Catch.class);\n+    _mappings.put(Bpel20QNames.CATCHALL, Catch.class);\n+    _mappings.put(Bpel20QNames.TO, To.class);\n+    _mappings.put(Bpel20QNames.FROM, From.class);\n+    _mappings.put(Bpel20QNames.START_COUNTER_VALUE, Expression.class);\n+    _mappings.put(Bpel20QNames.FINAL_COUNTER_VALUE, Expression.class);\n+    _mappings.put(Bpel20QNames.CORRELATION, Correlation.class);\n+    _mappings.put(Bpel20QNames.CORRELATIONSET, CorrelationSet.class);\n+    _mappings.put(Bpel20QNames.COMPENSATE, CompensateScopeActivity.class);\n+    _mappings.put(Bpel20QNames.COMPENSATIONHANDLER, CompensationHandler.class);\n+    _mappings.put(Bpel20QNames.FAULTHANDLERS, FaultHandler.class);\n+    _mappings.put(Bpel20QNames.TERMINATIONHANDLER, TerminationHandler.class);\n+    _mappings.put(Bpel20QNames.CASE, IfActivity.Case.class);\n+    _mappings.put(Bpel20QNames.CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.UNTIL, Expression.class);\n+    _mappings.put(Bpel20QNames.FOR, Expression.class);\n+    _mappings.put(Bpel20QNames.REPEAT_EVERY, Expression.class);\n+    _mappings.put(Bpel20QNames.ONALARM, OnAlarm.class);\n+    _mappings.put(Bpel20QNames.ONEVENT, OnEvent.class);\n+    _mappings.put(Bpel20QNames.ONMESSAGE, OnMessage.class);\n+    _mappings.put(Bpel20QNames.LITERAL, LiteralVal.class);\n+    _mappings.put(Bpel20QNames.PLINKTYPE, PartnerLinkType.class);\n+    _mappings.put(Bpel20QNames.PLINKROLE, PartnerLinkType.Role.class);\n+    _mappings.put(Bpel20QNames.PROPALIAS, PropertyAlias.class);\n+    _mappings.put(Bpel20QNames.PROPERTY, Property.class);\n+    _mappings.put(Bpel20QNames.VARIABLES, Variables.class);\n+    _mappings.put(Bpel20QNames.VARIABLE, Variable.class);\n+    _mappings.put(Bpel20QNames.PARTNERLINKS, PartnerLinks.class);\n+    _mappings.put(Bpel20QNames.PARTNERLINK, PartnerLink.class);\n+    _mappings.put(Bpel20QNames.CORRELATIONSETS, CorrelationSets.class);\n+    _mappings.put(Bpel20QNames.JOIN_CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.LINKS, Links.class);\n+    _mappings.put(Bpel20QNames.LINK, Link.class);\n+    _mappings.put(Bpel20QNames.SOURCE, LinkSource.class);\n+    _mappings.put(Bpel20QNames.TARGET, LinkTarget.class);\n+    _mappings.put(Bpel20QNames.SOURCES, BpelObject.class);\n+    _mappings.put(Bpel20QNames.TARGETS, BpelObject.class);\n+    _mappings.put(Bpel20QNames.IMPORT, Import.class);\n+    _mappings.put(Bpel20QNames.QUERY, Query.class);\n+    _mappings.put(Bpel20QNames.TRANSITION_CONDITION, Expression.class);\n+    _mappings.put(Bpel20QNames.THEN, Case.class);\n+    _mappings.put(Bpel20QNames.ELSE, Case.class);\n+    _mappings.put(Bpel20QNames.ELSEIF, Case.class);\n+    _mappings.put(Bpel20QNames.CORRELATIONS, Correlations.class);\n+    _mappings.put(Bpel20QNames.EVENTHANDLERS, BpelObject.class);\n+    _mappings.put(Bpel20QNames.TARGETS, Targets.class);\n+    _mappings.put(Bpel20QNames.SOURCES, Sources.class);\n+    _mappings.put(Bpel20QNames.RDF_LABEL, RdfLabel.class);\n+    _mappings.put(Bpel20QNames.EXTENSIONS, Extensions.class);\n+    _mappings.put(Bpel20QNames.EXTENSION, Extension.class);\n+    _mappings.put(Bpel20QNames.EXTENSION_ACTIVITY, ExtensionActivity.class);\n+    _mappings.put(Bpel20QNames.EXTENSIBLE_ASSIGN, ExtensionAssignOperation.class);\n+\n+    //\n+    // BPEL 1.1 Mappings\n+    //\n+    _mappings.put(Bpel11QNames.PROCESS, Process.class);\n+    _mappings.put(Bpel11QNames.ASSIGN, AssignActivity.class);\n+    _mappings.put(Bpel11QNames.EMPTY, EmptyActivity.class);\n+    _mappings.put(Bpel11QNames.INVOKE, InvokeActivity.class);\n+    _mappings.put(Bpel11QNames.RECEIVE, ReceiveActivity.class);\n+    _mappings.put(Bpel11QNames.REPLY, ReplyActivity.class);\n+    _mappings.put(Bpel11QNames.WAIT, WaitActivity.class);\n+    _mappings.put(Bpel11QNames.THROW, ThrowActivity.class);\n+    _mappings.put(Bpel11QNames.TERMINATE, TerminateActivity.class);\n+    _mappings.put(Bpel11QNames.FLOW, FlowActivity.class);\n+    _mappings.put(Bpel11QNames.SWITCH, SwitchActivity.class);\n+    _mappings.put(Bpel11QNames.WHILE, WhileActivity11.class);\n+    _mappings.put(Bpel11QNames.SEQUENCE, SequenceActivity.class);\n+    _mappings.put(Bpel11QNames.PICK, PickActivity.class);\n+    _mappings.put(Bpel11QNames.SCOPE, ScopeActivity.class);\n+    _mappings.put(Bpel11QNames.COPY, Copy.class);\n+    _mappings.put(Bpel11QNames.CATCH, Catch.class);\n+    _mappings.put(Bpel11QNames.CATCHALL, Catch.class);\n+    _mappings.put(Bpel11QNames.TO, To.class);\n+    _mappings.put(Bpel11QNames.FROM, From.class);\n+    _mappings.put(Bpel11QNames.CORRELATION, Correlation.class);\n+    _mappings.put(Bpel11QNames.CORRELATIONSET, CorrelationSet.class);\n+    _mappings.put(Bpel11QNames.COMPENSATE, CompensateScopeActivity.class);\n+    _mappings.put(Bpel11QNames.COMPENSATIONHANDLER, CompensationHandler.class);\n+    _mappings.put(Bpel11QNames.FAULTHANDLERS, FaultHandler.class);\n+    _mappings.put(Bpel11QNames.CASE, SwitchActivity.Case.class);\n+    _mappings.put(Bpel11QNames.OTHERWISE, SwitchActivity.Case.class);\n+    _mappings.put(Bpel11QNames.ONALARM, OnAlarm.class);\n+    _mappings.put(Bpel11QNames.ONMESSAGE, OnMessage.class);\n+    _mappings.put(Bpel11QNames.PLINKTYPE, PartnerLinkType.class);\n+    _mappings.put(Bpel11QNames.PLINKROLE, PartnerLinkType.Role11.class);\n+    _mappings.put(Bpel11QNames.PORTTYPE, PartnerLinkType.Role11.PortType11.class);\n+    _mappings.put(Bpel11QNames.PROPALIAS, PropertyAlias11.class);\n+    _mappings.put(Bpel11QNames.PROPERTY, Property.class);\n+    _mappings.put(Bpel11QNames.VARIABLES, Variables.class);\n+    _mappings.put(Bpel11QNames.VARIABLE, Variable.class);\n+    _mappings.put(Bpel11QNames.PARTNERLINKS, PartnerLinks.class);\n+    _mappings.put(Bpel11QNames.PARTNERLINK, PartnerLink.class);\n+    _mappings.put(Bpel11QNames.CORRELATIONSETS, CorrelationSets.class);\n+    _mappings.put(Bpel11QNames.LINKS, Links.class);\n+    _mappings.put(Bpel11QNames.LINK, Link.class);\n+    _mappings.put(Bpel11QNames.SOURCE, LinkSource.class);\n+    _mappings.put(Bpel11QNames.TARGET, LinkTarget.class);\n+    _mappings.put(Bpel11QNames.QUERY, Query.class);\n+    _mappings.put(Bpel11QNames.CORRELATIONS, Correlations.class);\n+    _mappings.put(Bpel11QNames.EVENTHANDLERS, BpelObject.class);\n+\n+    //\n+    // Extensibility Elements Mappings\n+    //\n+    _mappings.put(ExtensibilityQNames.FAILURE_HANDLING, FailureHandling.class);\n+    _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_RETRY_FOR, FailureHandling.RetryFor.class);\n+    _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_RETRY_DELAY, FailureHandling.RetryDelay.class);\n+    _mappings.put(ExtensibilityQNames.FAILURE_HANDLING_FAULT_ON, FailureHandling.FaultOnFailure.class);\n \n-    /**\n-     * Parse a BPEL process found at the input source.\n-     * @param isrc input source.\n-     * @return\n-     * @throws SAXException \n-     */\n-    public Process parse(InputSource isrc, URI systemURI) throws IOException, SAXException {\n-        XMLReader _xr = XMLParserUtils.getXMLReader();\n-        LocalEntityResolver resolver = new LocalEntityResolver();\n-        resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_VARPROP, getClass().getResource(\"/ws-bpel_varprop.xsd\"));\n-        resolver.register(XML, getClass().getResource(\"/xml.xsd\"));\n-        resolver.register(WSDL,getClass().getResource(\"/wsdl.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL_PARTNERLINK_2004_03, \n-                getClass().getResource(\"/wsbpel_plinkType-draft-Apr-29-2006.xsd\"));\n-        _xr.setEntityResolver(resolver);\n-        Document doc = DOMUtils.newDocument();\n-        _xr.setContentHandler(new DOMBuilderContentHandler(doc));\n-        _xr.setFeature(\"http://xml.org/sax/features/namespaces\",true);\n-        _xr.setFeature(\"http://xml.org/sax/features/namespace-prefixes\", true);\n-        _xr.parse(isrc);\n-        return (Process) createBpelObject(doc.getDocumentElement(), systemURI);\n+  }\n+\n+  public static BpelObjectFactory getInstance() {\n+    return __instance;\n+  }\n+\n+  public BpelObject createBpelObject(Element el, URI uri) {\n+    QName type = new QName(el.getNamespaceURI(), el.getLocalName());\n+    Class cls = _mappings.get(type);\n+    if (cls == null) {\n+      __log.warn(\"Unrecognized element in BPEL dom: \" + type);\n+      return new BpelObject(el);\n+    }\n+    try {\n+      Constructor ctor = cls.getConstructor(__CTOR);\n+      BpelObject bo = (BpelObject) ctor.newInstance(new Object[] {el});\n+      bo.setURI(uri);\n+      return bo;\n+    } catch (Exception ex) {\n+      throw new RuntimeException(\"Internal compiler error\", ex);\n     }\n-   \n+  }\n+\n+  /**\n+   * Parse a BPEL process found at the input source.\n+   *\n+   * @param isrc input source.\n+   * @return\n+   * @throws SAXException\n+   */\n+  public Process parse(InputSource isrc, URI systemURI) throws IOException, SAXException {\n+    XMLReader _xr = XMLParserUtils.getXMLReader();\n+    LocalEntityResolver resolver = new LocalEntityResolver();\n+    resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n+    resolver\n+      .register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_VARPROP, getClass().getResource(\"/ws-bpel_varprop.xsd\"));\n+    resolver.register(XML, getClass().getResource(\"/xml.xsd\"));\n+    resolver.register(WSDL, getClass().getResource(\"/wsdl.xsd\"));\n+    resolver.register(Bpel20QNames.NS_WSBPEL_PARTNERLINK_2004_03,\n+      getClass().getResource(\"/wsbpel_plinkType-draft-Apr-29-2006.xsd\"));\n+    _xr.setEntityResolver(resolver);\n+    Document doc = DOMUtils.newDocument();\n+    _xr.setContentHandler(new DOMBuilderContentHandler(doc));\n+    _xr.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n+    _xr.setFeature(\"http://xml.org/sax/features/namespace-prefixes\", true);\n+    _xr.parse(isrc);\n+    return (Process) createBpelObject(doc.getDocumentElement(), systemURI);\n+  }\n+\n }\n",
            "diff_size": 497
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "302",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/393/BpelObjectFactory.java\nindex 4f1357cbd11..a9528030ae9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/393/BpelObjectFactory.java\n@@ -109,7 +109,7 @@ public class BpelObjectFactory {\n         _mappings.put(Bpel20QNames.FINAL_PARTNERLINK, PartnerLink.class);\n         _mappings.put(Bpel20QNames.FINAL_CORRELATIONSETS, CorrelationSets.class);\n         _mappings.put(Bpel20QNames.FINAL_JOIN_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.FINAL_LINKS, Links.class );\n+        _mappings.put(Bpel20QNames.FINAL_LINKS, Links.class);\n         _mappings.put(Bpel20QNames.FINAL_LINK, Link.class);\n         _mappings.put(Bpel20QNames.FINAL_SOURCE, LinkSource.class);\n         _mappings.put(Bpel20QNames.FINAL_TARGET, LinkTarget.class);\n@@ -185,7 +185,7 @@ public class BpelObjectFactory {\n         _mappings.put(Bpel20QNames.PARTNERLINK, PartnerLink.class);\n         _mappings.put(Bpel20QNames.CORRELATIONSETS, CorrelationSets.class);\n         _mappings.put(Bpel20QNames.JOIN_CONDITION, Expression.class);\n-        _mappings.put(Bpel20QNames.LINKS, Links.class );\n+        _mappings.put(Bpel20QNames.LINKS, Links.class);\n         _mappings.put(Bpel20QNames.LINK, Link.class);\n         _mappings.put(Bpel20QNames.SOURCE, LinkSource.class);\n         _mappings.put(Bpel20QNames.TARGET, LinkTarget.class);\n@@ -249,7 +249,7 @@ public class BpelObjectFactory {\n         _mappings.put(Bpel11QNames.PARTNERLINKS, PartnerLinks.class);\n         _mappings.put(Bpel11QNames.PARTNERLINK, PartnerLink.class);\n         _mappings.put(Bpel11QNames.CORRELATIONSETS, CorrelationSets.class);\n-        _mappings.put(Bpel11QNames.LINKS, Links.class );\n+        _mappings.put(Bpel11QNames.LINKS, Links.class);\n         _mappings.put(Bpel11QNames.LINK, Link.class);\n         _mappings.put(Bpel11QNames.SOURCE, LinkSource.class);\n         _mappings.put(Bpel11QNames.TARGET, LinkTarget.class);\n@@ -280,7 +280,7 @@ public class BpelObjectFactory {\n         }\n         try {\n             Constructor ctor = cls.getConstructor(__CTOR);\n-            BpelObject bo =(BpelObject) ctor.newInstance(new Object[]{el});\n+            BpelObject bo = (BpelObject) ctor.newInstance(new Object[]{el});\n             bo.setURI(uri);\n             return bo;\n         } catch (Exception ex) {\n@@ -317,4 +317,4 @@ public class BpelObjectFactory {\n         return (Process) createBpelObject(doc.getDocumentElement(), systemURI);\n     }\n    \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/393/BpelObjectFactory.java\nindex 4f1357cbd11..5334dcc1067 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/393/BpelObjectFactory.java\n@@ -299,7 +299,8 @@ public class BpelObjectFactory {\n         LocalEntityResolver resolver = new LocalEntityResolver();\n         resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n+        resolver.register(Bpel20QNames\n+        .NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/393/BpelObjectFactory.java\nindex 4f1357cbd11..688a4970c88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/393/BpelObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/393/BpelObjectFactory.java\n@@ -299,7 +299,8 @@ public class BpelObjectFactory {\n         LocalEntityResolver resolver = new LocalEntityResolver();\n         resolver.register(Bpel11QNames.NS_BPEL4WS_2003_03, getClass().getResource(\"/bpel4ws_1_1-fivesight.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0, getClass().getResource(\"/wsbpel_main-draft-Apr-29-2006.xsd\"));\n-        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n+        resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_ABSTRACT, getClass\n+         ().getResource(\"/ws-bpel_abstract_common_base.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_EXEC, getClass().getResource(\"/ws-bpel_executable.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_PLINK, getClass().getResource(\"/ws-bpel_plnktype.xsd\"));\n         resolver.register(Bpel20QNames.NS_WSBPEL2_0_FINAL_SERVREF, getClass().getResource(\"/ws-bpel_serviceref.xsd\"));\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}